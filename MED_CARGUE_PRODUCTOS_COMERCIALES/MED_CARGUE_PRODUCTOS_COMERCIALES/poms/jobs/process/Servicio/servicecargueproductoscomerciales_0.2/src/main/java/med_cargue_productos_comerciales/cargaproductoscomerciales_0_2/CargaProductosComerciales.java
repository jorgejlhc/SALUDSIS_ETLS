// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for ESB
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package med_cargue_productos_comerciales.cargaproductoscomerciales_0_2;

import routines.Numeric;
import routines.ColumnName;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.Utils;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJavaRow_1
	//import java.util.List;

	//the import part of tJavaRow_3
	//import java.util.List;

	//the import part of tJavaRow_4
	//import java.util.List;

	//the import part of tJavaRow_5
	//import java.util.List;

	//the import part of tJavaRow_6
	//import java.util.List;

	//the import part of tJavaRow_2
	//import java.util.List;

	//the import part of tJavaRow_7
	//import java.util.List;

	//the import part of tJavaRow_11
	//import java.util.List;

	//the import part of tJavaRow_8
	//import java.util.List;

	//the import part of tJavaRow_12
	//import java.util.List;

	//the import part of tJavaRow_10
	//import java.util.List;

	//the import part of tJavaRow_9
	//import java.util.List;

	//the import part of tJavaFlex_1
	//import java.util.List;

	//the import part of tJava_1
	//import java.util.List;

	//the import part of tJava_3
	//import java.util.List;

	//the import part of tJava_2
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: CargaProductosComerciales Purpose: <br>
 * Description:  <br>
 * @author jorgejlhc@gmail.com
 * @version 8.8.8.20240722_1936-SNAPSHOT
 * @status TEST
 */
public class CargaProductosComerciales implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(db_origen_AdditionalParams != null){
				
					this.setProperty("db_origen_AdditionalParams", db_origen_AdditionalParams.toString());
				
			}
			
			if(db_origen_Login != null){
				
					this.setProperty("db_origen_Login", db_origen_Login.toString());
				
			}
			
			if(db_origen_Password != null){
				
					this.setProperty("db_origen_Password", db_origen_Password.toString());
				
			}
			
			if(db_origen_Port != null){
				
					this.setProperty("db_origen_Port", db_origen_Port.toString());
				
			}
			
			if(db_origen_Schema != null){
				
					this.setProperty("db_origen_Schema", db_origen_Schema.toString());
				
			}
			
			if(db_origen_Server != null){
				
					this.setProperty("db_origen_Server", db_origen_Server.toString());
				
			}
			
			if(db_origen_ServiceName != null){
				
					this.setProperty("db_origen_ServiceName", db_origen_ServiceName.toString());
				
			}
			
			if(ERROR != null){
				
					this.setProperty("ERROR", ERROR.toString());
				
			}
			
			if(ESTADO != null){
				
					this.setProperty("ESTADO", ESTADO.toString());
				
			}
			
			if(ESTADO_EXEC != null){
				
					this.setProperty("ESTADO_EXEC", ESTADO_EXEC.toString());
				
			}
			
			if(FECHA_EJECUCION != null){
				
					this.setProperty("FECHA_EJECUCION", FECHA_EJECUCION.toString());
				
			}
			
			if(HORA_FINAL != null){
				
					this.setProperty("HORA_FINAL", HORA_FINAL.toString());
				
			}
			
			if(HORA_INICIO != null){
				
					this.setProperty("HORA_INICIO", HORA_INICIO.toString());
				
			}
			
			if(LOGS_ERROR != null){
				
					this.setProperty("LOGS_ERROR", LOGS_ERROR.toString());
				
			}
			
			if(LOGS_EXECUTION != null){
				
					this.setProperty("LOGS_EXECUTION", LOGS_EXECUTION.toString());
				
			}
			
			if(ORIGEN != null){
				
					this.setProperty("ORIGEN", ORIGEN.toString());
				
			}
			
			if(carga_id != null){
				
					this.setProperty("carga_id", carga_id.toString());
				
			}
			
			if(Contenido != null){
				
					this.setProperty("Contenido", Contenido.toString());
				
			}
			
			if(IsValid != null){
				
					this.setProperty("IsValid", IsValid.toString());
				
			}
			
			if(nombre != null){
				
					this.setProperty("nombre", nombre.toString());
				
			}
			
			if(result != null){
				
					this.setProperty("result", result.toString());
				
			}
			
			if(Salida != null){
				
					this.setProperty("Salida", Salida.toString());
				
			}
			
			if(TContenido != null){
				
					this.setProperty("TContenido", TContenido.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String db_origen_AdditionalParams;
public String getDb_origen_AdditionalParams(){
	return this.db_origen_AdditionalParams;
}
public String db_origen_Login;
public String getDb_origen_Login(){
	return this.db_origen_Login;
}
public String db_origen_Password;
public String getDb_origen_Password(){
	return this.db_origen_Password;
}
public String db_origen_Port;
public String getDb_origen_Port(){
	return this.db_origen_Port;
}
public String db_origen_Schema;
public String getDb_origen_Schema(){
	return this.db_origen_Schema;
}
public String db_origen_Server;
public String getDb_origen_Server(){
	return this.db_origen_Server;
}
public String db_origen_ServiceName;
public String getDb_origen_ServiceName(){
	return this.db_origen_ServiceName;
}
public String ERROR;
public String getERROR(){
	return this.ERROR;
}
public String ESTADO;
public String getESTADO(){
	return this.ESTADO;
}
public String ESTADO_EXEC;
public String getESTADO_EXEC(){
	return this.ESTADO_EXEC;
}
public String FECHA_EJECUCION;
public String getFECHA_EJECUCION(){
	return this.FECHA_EJECUCION;
}
public String HORA_FINAL;
public String getHORA_FINAL(){
	return this.HORA_FINAL;
}
public String HORA_INICIO;
public String getHORA_INICIO(){
	return this.HORA_INICIO;
}
public String LOGS_ERROR;
public String getLOGS_ERROR(){
	return this.LOGS_ERROR;
}
public String LOGS_EXECUTION;
public String getLOGS_EXECUTION(){
	return this.LOGS_EXECUTION;
}
public String ORIGEN;
public String getORIGEN(){
	return this.ORIGEN;
}
public BigDecimal carga_id;
public BigDecimal getCarga_id(){
	return this.carga_id;
}
public Object Contenido;
public Object getContenido(){
	return this.Contenido;
}
public Boolean IsValid;
public Boolean getIsValid(){
	return this.IsValid;
}
public String nombre;
public String getNombre(){
	return this.nombre;
}
public String result;
public String getResult(){
	return this.result;
}
public Object Salida;
public Object getSalida(){
	return this.Salida;
}
public String TContenido;
public String getTContenido(){
	return this.TContenido;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.2";
	private final String jobName = "CargaProductosComerciales";
	private final String projectName = "MED_CARGUE_PRODUCTOS_COMERCIALES";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
        private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();
	
		private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
		public  final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	LogCatcherUtils tLogCatcher_1 = new LogCatcherUtils();

private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				CargaProductosComerciales.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(CargaProductosComerciales.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
				tLogCatcher_1.addMessage("Java Exception", currentComponent, 6, e.getClass().getName() + ":" + e.getMessage(), 1);
				tLogCatcher_1Process(globalMap);
			}
			} catch (TalendException e) {
				// do nothing
			
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tFileInputXML_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
						try {
							
								if(this.execStat){
									runStat.updateStatOnConnection("OnComponentError1", 0, "error");
								}
							
							
								errorCode = null;
								tFixedFlowInput_1Process(globalMap);
								if (!"failure".equals(status)) {
									status = "end";
								}
								

						} catch (Exception e) {
							e.printStackTrace();
						}
						
					tOracleConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tBufferOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleRow_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleRow_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJoin_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJoin_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJoin_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJoin_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJoin_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJoin_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tNormalize_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJoin_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaFlex_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tReplicate_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleClose_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleClose_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tBufferOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogCatcher_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRunJob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row43_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHash_row9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHash_row12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHash_row26_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHash_row18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHash_row21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHash_row23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHash_row32_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDenormalize_1_DenormalizeOut_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tDenormalize_1_ArrayIn_error(exception, errorComponent, globalMap);
						
						}
					
			public void tDenormalize_1_ArrayIn_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSortRow_1_SortOut_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tSortRow_1_SortIn_error(exception, errorComponent, globalMap);
						
						}
					
			public void tSortRow_1_SortIn_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputXML_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleRow_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleRow_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "ERROR", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

				try {
					
						if(this.execStat){
							runStat.updateStatOnConnection("OnSubjobError1", 0, "error");
						}
					
					errorCode = null;
					tFixedFlowInput_1Process(globalMap);
					if (!"failure".equals(status)) {
						status = "end";
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
			public void tOracleInput_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleClose_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tLogCatcher_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_11_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	









public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String Host;

				public String getHost () {
					return this.Host;
				}

				public Boolean HostIsNullable(){
				    return true;
				}
				public Boolean HostIsKey(){
				    return true;
				}
				public Integer HostLength(){
				    return 13;
				}
				public Integer HostPrecision(){
				    return 0;
				}
				public String HostDefault(){
				
					return null;
				
				}
				public String HostComment(){
				
				    return "";
				
				}
				public String HostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String HostOriginalDbColumnName(){
				
					return "Host";
				
				}

				
			    public String Port;

				public String getPort () {
					return this.Port;
				}

				public Boolean PortIsNullable(){
				    return true;
				}
				public Boolean PortIsKey(){
				    return true;
				}
				public Integer PortLength(){
				    return 4;
				}
				public Integer PortPrecision(){
				    return 0;
				}
				public String PortDefault(){
				
					return null;
				
				}
				public String PortComment(){
				
				    return "";
				
				}
				public String PortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PortOriginalDbColumnName(){
				
					return "Port";
				
				}

				
			    public String Sid;

				public String getSid () {
					return this.Sid;
				}

				public Boolean SidIsNullable(){
				    return true;
				}
				public Boolean SidIsKey(){
				    return true;
				}
				public Integer SidLength(){
				    return 4;
				}
				public Integer SidPrecision(){
				    return 0;
				}
				public String SidDefault(){
				
					return null;
				
				}
				public String SidComment(){
				
				    return "";
				
				}
				public String SidPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SidOriginalDbColumnName(){
				
					return "Sid";
				
				}

				
			    public String ServiceName;

				public String getServiceName () {
					return this.ServiceName;
				}

				public Boolean ServiceNameIsNullable(){
				    return true;
				}
				public Boolean ServiceNameIsKey(){
				    return false;
				}
				public Integer ServiceNameLength(){
				    return 16;
				}
				public Integer ServiceNamePrecision(){
				    return 0;
				}
				public String ServiceNameDefault(){
				
					return null;
				
				}
				public String ServiceNameComment(){
				
				    return "";
				
				}
				public String ServiceNamePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ServiceNameOriginalDbColumnName(){
				
					return "ServiceName";
				
				}

				
			    public String Schema;

				public String getSchema () {
					return this.Schema;
				}

				public Boolean SchemaIsNullable(){
				    return true;
				}
				public Boolean SchemaIsKey(){
				    return false;
				}
				public Integer SchemaLength(){
				    return 8;
				}
				public Integer SchemaPrecision(){
				    return 0;
				}
				public String SchemaDefault(){
				
					return null;
				
				}
				public String SchemaComment(){
				
				    return "";
				
				}
				public String SchemaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SchemaOriginalDbColumnName(){
				
					return "Schema";
				
				}

				
			    public String User;

				public String getUser () {
					return this.User;
				}

				public Boolean UserIsNullable(){
				    return true;
				}
				public Boolean UserIsKey(){
				    return false;
				}
				public Integer UserLength(){
				    return 12;
				}
				public Integer UserPrecision(){
				    return 0;
				}
				public String UserDefault(){
				
					return null;
				
				}
				public String UserComment(){
				
				    return "";
				
				}
				public String UserPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UserOriginalDbColumnName(){
				
					return "User";
				
				}

				
			    public String Password;

				public String getPassword () {
					return this.Password;
				}

				public Boolean PasswordIsNullable(){
				    return true;
				}
				public Boolean PasswordIsKey(){
				    return false;
				}
				public Integer PasswordLength(){
				    return 12;
				}
				public Integer PasswordPrecision(){
				    return 0;
				}
				public String PasswordDefault(){
				
					return null;
				
				}
				public String PasswordComment(){
				
				    return "";
				
				}
				public String PasswordPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PasswordOriginalDbColumnName(){
				
					return "Password";
				
				}

				
			    public String PathStorage;

				public String getPathStorage () {
					return this.PathStorage;
				}

				public Boolean PathStorageIsNullable(){
				    return true;
				}
				public Boolean PathStorageIsKey(){
				    return false;
				}
				public Integer PathStorageLength(){
				    return 48;
				}
				public Integer PathStoragePrecision(){
				    return 0;
				}
				public String PathStorageDefault(){
				
					return null;
				
				}
				public String PathStorageComment(){
				
				    return "";
				
				}
				public String PathStoragePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PathStorageOriginalDbColumnName(){
				
					return "PathStorage";
				
				}

				
			    public String SMTPHost;

				public String getSMTPHost () {
					return this.SMTPHost;
				}

				public Boolean SMTPHostIsNullable(){
				    return true;
				}
				public Boolean SMTPHostIsKey(){
				    return false;
				}
				public Integer SMTPHostLength(){
				    return 14;
				}
				public Integer SMTPHostPrecision(){
				    return 0;
				}
				public String SMTPHostDefault(){
				
					return null;
				
				}
				public String SMTPHostComment(){
				
				    return "";
				
				}
				public String SMTPHostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SMTPHostOriginalDbColumnName(){
				
					return "SMTPHost";
				
				}

				
			    public String SMTPPort;

				public String getSMTPPort () {
					return this.SMTPPort;
				}

				public Boolean SMTPPortIsNullable(){
				    return true;
				}
				public Boolean SMTPPortIsKey(){
				    return false;
				}
				public Integer SMTPPortLength(){
				    return 3;
				}
				public Integer SMTPPortPrecision(){
				    return 0;
				}
				public String SMTPPortDefault(){
				
					return null;
				
				}
				public String SMTPPortComment(){
				
				    return "";
				
				}
				public String SMTPPortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SMTPPortOriginalDbColumnName(){
				
					return "SMTPPort";
				
				}

				
			    public String UsernameMail;

				public String getUsernameMail () {
					return this.UsernameMail;
				}

				public Boolean UsernameMailIsNullable(){
				    return true;
				}
				public Boolean UsernameMailIsKey(){
				    return false;
				}
				public Integer UsernameMailLength(){
				    return 34;
				}
				public Integer UsernameMailPrecision(){
				    return 0;
				}
				public String UsernameMailDefault(){
				
					return null;
				
				}
				public String UsernameMailComment(){
				
				    return "";
				
				}
				public String UsernameMailPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UsernameMailOriginalDbColumnName(){
				
					return "UsernameMail";
				
				}

				
			    public String PasswordMail;

				public String getPasswordMail () {
					return this.PasswordMail;
				}

				public Boolean PasswordMailIsNullable(){
				    return true;
				}
				public Boolean PasswordMailIsKey(){
				    return false;
				}
				public Integer PasswordMailLength(){
				    return 13;
				}
				public Integer PasswordMailPrecision(){
				    return 0;
				}
				public String PasswordMailDefault(){
				
					return null;
				
				}
				public String PasswordMailComment(){
				
				    return "";
				
				}
				public String PasswordMailPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PasswordMailOriginalDbColumnName(){
				
					return "PasswordMail";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.Host == null) ? 0 : this.Host.hashCode());
					
						result = prime * result + ((this.Port == null) ? 0 : this.Port.hashCode());
					
						result = prime * result + ((this.Sid == null) ? 0 : this.Sid.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row1Struct other = (row1Struct) obj;
		
						if (this.Host == null) {
							if (other.Host != null)
								return false;
						
						} else if (!this.Host.equals(other.Host))
						
							return false;
					
						if (this.Port == null) {
							if (other.Port != null)
								return false;
						
						} else if (!this.Port.equals(other.Port))
						
							return false;
					
						if (this.Sid == null) {
							if (other.Sid != null)
								return false;
						
						} else if (!this.Sid.equals(other.Sid))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row1Struct other) {

		other.Host = this.Host;
	            other.Port = this.Port;
	            other.Sid = this.Sid;
	            other.ServiceName = this.ServiceName;
	            other.Schema = this.Schema;
	            other.User = this.User;
	            other.Password = this.Password;
	            other.PathStorage = this.PathStorage;
	            other.SMTPHost = this.SMTPHost;
	            other.SMTPPort = this.SMTPPort;
	            other.UsernameMail = this.UsernameMail;
	            other.PasswordMail = this.PasswordMail;
	            
	}

	public void copyKeysDataTo(row1Struct other) {

		other.Host = this.Host;
	            	other.Port = this.Port;
	            	other.Sid = this.Sid;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
					this.PathStorage = readString(dis);
					
					this.SMTPHost = readString(dis);
					
					this.SMTPPort = readString(dis);
					
					this.UsernameMail = readString(dis);
					
					this.PasswordMail = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
					this.PathStorage = readString(dis);
					
					this.SMTPHost = readString(dis);
					
					this.SMTPPort = readString(dis);
					
					this.UsernameMail = readString(dis);
					
					this.PasswordMail = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
					// String
				
						writeString(this.PathStorage,dos);
					
					// String
				
						writeString(this.SMTPHost,dos);
					
					// String
				
						writeString(this.SMTPPort,dos);
					
					// String
				
						writeString(this.UsernameMail,dos);
					
					// String
				
						writeString(this.PasswordMail,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
					// String
				
						writeString(this.PathStorage,dos);
					
					// String
				
						writeString(this.SMTPHost,dos);
					
					// String
				
						writeString(this.SMTPPort,dos);
					
					// String
				
						writeString(this.UsernameMail,dos);
					
					// String
				
						writeString(this.PasswordMail,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Host="+Host);
		sb.append(",Port="+Port);
		sb.append(",Sid="+Sid);
		sb.append(",ServiceName="+ServiceName);
		sb.append(",Schema="+Schema);
		sb.append(",User="+User);
		sb.append(",Password="+Password);
		sb.append(",PathStorage="+PathStorage);
		sb.append(",SMTPHost="+SMTPHost);
		sb.append(",SMTPPort="+SMTPPort);
		sb.append(",UsernameMail="+UsernameMail);
		sb.append(",PasswordMail="+PasswordMail);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.Host, other.Host);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.Port, other.Port);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.Sid, other.Sid);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputXML_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputXML_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();




	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */



	
	/**
	 * [tFileInputXML_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputXML_1", false);
		start_Hash.put("tFileInputXML_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputXML_1";
	
	
		int tos_count_tFileInputXML_1 = 0;
		

	

int nb_line_tFileInputXML_1 = 0;

	String os_tFileInputXML_1 = System.getProperty("os.name").toLowerCase();
	boolean isWindows_tFileInputXML_1=false;
	if(os_tFileInputXML_1.indexOf("windows") > -1 || os_tFileInputXML_1.indexOf("nt") > -1){
		isWindows_tFileInputXML_1=true;
	}
class NameSpaceTool_tFileInputXML_1 {

    public java.util.HashMap<String, String> xmlNameSpaceMap = new java.util.HashMap<String, String>();
    
	private java.util.List<String> defualtNSPath = new java.util.ArrayList<String>();

    public void countNSMap(org.dom4j.Element el) {
        for (org.dom4j.Namespace ns : (java.util.List<org.dom4j.Namespace>) el.declaredNamespaces()) {
            if (ns.getPrefix().trim().length() == 0) {
                xmlNameSpaceMap.put("pre"+defualtNSPath.size(), ns.getURI());
                String path = "";
                org.dom4j.Element elTmp = el;
                while (elTmp != null) {
                	if (elTmp.getNamespacePrefix() != null && elTmp.getNamespacePrefix().length() > 0) {
                        path = "/" + elTmp.getNamespacePrefix() + ":" + elTmp.getName() + path;
                    } else {
                        path = "/" + elTmp.getName() + path;
                    }
                    elTmp = elTmp.getParent();
                }
                defualtNSPath.add(path);
            } else {
                xmlNameSpaceMap.put(ns.getPrefix(), ns.getURI());
            }

        }
        for (org.dom4j.Element e : (java.util.List<org.dom4j.Element>) el.elements()) {
            countNSMap(e);
        }
    }
    
    private final org.talend.xpath.XPathUtil util = new  org.talend.xpath.XPathUtil();
    
    {
    	util.setDefaultNSPath(defualtNSPath);
    }
    
	public String addDefaultNSPrefix(String path) {
		return util.addDefaultNSPrefix(path);
	}
	
	public String addDefaultNSPrefix(String relativeXpression, String basePath) {
		return util.addDefaultNSPrefix(relativeXpression,basePath);
	}
    
}

class XML_API_tFileInputXML_1{
	public boolean isDefNull(org.dom4j.Node node) throws javax.xml.transform.TransformerException {
        if (node != null && node instanceof org.dom4j.Element) {
        	org.dom4j.Attribute attri = ((org.dom4j.Element)node).attribute("nil");
        	if(attri != null && ("true").equals(attri.getText())){
            	return true;
            }
        }
        return false;
    }

    public boolean isMissing(org.dom4j.Node node) throws javax.xml.transform.TransformerException {
        return node == null ? true : false;
    }

    public boolean isEmpty(org.dom4j.Node node) throws javax.xml.transform.TransformerException {
        if (node != null) {
            return node.getStringValue().isEmpty();
        }
        return false;
    }
}


org.dom4j.io.SAXReader reader_tFileInputXML_1 = new org.dom4j.io.SAXReader();
Object filename_tFileInputXML_1 = null;
try {
	filename_tFileInputXML_1 = context.ORIGEN;
} catch(java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
	
	
	System.err.println(e.getMessage());
	
}
if(filename_tFileInputXML_1 != null && filename_tFileInputXML_1 instanceof String && filename_tFileInputXML_1.toString().startsWith("//")){
	if (!isWindows_tFileInputXML_1){
		filename_tFileInputXML_1 = filename_tFileInputXML_1.toString().replaceFirst("//","/");
	}
}

boolean isValidFile_tFileInputXML_1 = true;
org.dom4j.Document doc_tFileInputXML_1 = null;
java.io.Closeable toClose_tFileInputXML_1 = null;
try{
	if(filename_tFileInputXML_1 instanceof java.io.InputStream){
		java.io.InputStream inputStream_tFileInputXML_1 = (java.io.InputStream)filename_tFileInputXML_1;
		toClose_tFileInputXML_1 = inputStream_tFileInputXML_1;
		doc_tFileInputXML_1 = reader_tFileInputXML_1.read(inputStream_tFileInputXML_1);
	}else{
		java.io.Reader unicodeReader_tFileInputXML_1 = new UnicodeReader(new java.io.FileInputStream(String.valueOf(filename_tFileInputXML_1)),"UTF-8");
		toClose_tFileInputXML_1 = unicodeReader_tFileInputXML_1;
		org.xml.sax.InputSource in_tFileInputXML_1= new org.xml.sax.InputSource(unicodeReader_tFileInputXML_1);
		doc_tFileInputXML_1 = reader_tFileInputXML_1.read(in_tFileInputXML_1);
	}
}catch(java.lang.Exception e){
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
	
	System.err.println(e.getMessage());
	isValidFile_tFileInputXML_1 = false;
} finally {
	if(toClose_tFileInputXML_1!=null) {
		toClose_tFileInputXML_1.close();
	}
}
if(isValidFile_tFileInputXML_1){
NameSpaceTool_tFileInputXML_1 nsTool_tFileInputXML_1 = new NameSpaceTool_tFileInputXML_1();
nsTool_tFileInputXML_1.countNSMap(doc_tFileInputXML_1.getRootElement());
java.util.HashMap<String,String> xmlNameSpaceMap_tFileInputXML_1 = nsTool_tFileInputXML_1.xmlNameSpaceMap;  

org.dom4j.XPath x_tFileInputXML_1 = doc_tFileInputXML_1.createXPath(nsTool_tFileInputXML_1.addDefaultNSPrefix("/connectionStrings"));  
x_tFileInputXML_1.setNamespaceURIs(xmlNameSpaceMap_tFileInputXML_1); 

java.util.List<org.dom4j.Node> nodeList_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)x_tFileInputXML_1.selectNodes(doc_tFileInputXML_1);	
XML_API_tFileInputXML_1 xml_api_tFileInputXML_1 = new XML_API_tFileInputXML_1();
String str_tFileInputXML_1 = "";
org.dom4j.Node node_tFileInputXML_1 = null;

//init all mapping xpaths
java.util.Map<Integer,org.dom4j.XPath> xpaths_tFileInputXML_1=new java.util.HashMap<Integer,org.dom4j.XPath>();
	class XPathUtil_tFileInputXML_1{
	
			   public void initXPaths_0(java.util.Map<Integer,org.dom4j.XPath> xpaths,NameSpaceTool_tFileInputXML_1 nsTool,
			       java.util.HashMap<String,String> xmlNameSpaceMap){
			
	org.dom4j.XPath xpath_0 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Host","/connectionStrings"));
	xpath_0.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(0,xpath_0);
			
	org.dom4j.XPath xpath_1 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Port","/connectionStrings"));
	xpath_1.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(1,xpath_1);
			
	org.dom4j.XPath xpath_2 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Sid","/connectionStrings"));
	xpath_2.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(2,xpath_2);
			
	org.dom4j.XPath xpath_3 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("ServiceName","/connectionStrings"));
	xpath_3.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(3,xpath_3);
			
	org.dom4j.XPath xpath_4 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Schema","/connectionStrings"));
	xpath_4.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(4,xpath_4);
			
	org.dom4j.XPath xpath_5 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("User","/connectionStrings"));
	xpath_5.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(5,xpath_5);
			
	org.dom4j.XPath xpath_6 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Password","/connectionStrings"));
	xpath_6.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(6,xpath_6);
			
	org.dom4j.XPath xpath_7 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("PathStorage","/connectionStrings"));
	xpath_7.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(7,xpath_7);
			
	org.dom4j.XPath xpath_8 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("SMTPHost","/connectionStrings"));
	xpath_8.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(8,xpath_8);
			
	org.dom4j.XPath xpath_9 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("SMTPPort","/connectionStrings"));
	xpath_9.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(9,xpath_9);
			
	org.dom4j.XPath xpath_10 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("UsernameMail","/connectionStrings"));
	xpath_10.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(10,xpath_10);
			
	org.dom4j.XPath xpath_11 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("PasswordMail","/connectionStrings"));
	xpath_11.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(11,xpath_11);
			
	     }
	   
	      public void initXPaths(java.util.Map<Integer,org.dom4j.XPath> xpaths,NameSpaceTool_tFileInputXML_1 nsTool,
			    java.util.HashMap<String,String> xmlNameSpaceMap){
			    
			        initXPaths_0(xpaths,nsTool, xmlNameSpaceMap);
			    
		   }
	}
	XPathUtil_tFileInputXML_1 xPathUtil_tFileInputXML_1 = new XPathUtil_tFileInputXML_1();
	xPathUtil_tFileInputXML_1.initXPaths(xpaths_tFileInputXML_1, nsTool_tFileInputXML_1, xmlNameSpaceMap_tFileInputXML_1);
for (org.dom4j.Node temp_tFileInputXML_1: nodeList_tFileInputXML_1) {
	if (nb_line_tFileInputXML_1>=1) {
	
		break;
	}
		nb_line_tFileInputXML_1++;
		
	row1 = null;			
	boolean whetherReject_tFileInputXML_1 = false;
	row1 = new row1Struct();
	try{
    Object obj0_tFileInputXML_1 = xpaths_tFileInputXML_1.get(0).evaluate(temp_tFileInputXML_1);
    if(obj0_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj0_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj0_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj0_tFileInputXML_1 instanceof String || obj0_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj0_tFileInputXML_1);
    } else if(obj0_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj0_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.Host =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.Host ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.Host =null;
									}else{
		row1.Host = str_tFileInputXML_1;
	}
    Object obj1_tFileInputXML_1 = xpaths_tFileInputXML_1.get(1).evaluate(temp_tFileInputXML_1);
    if(obj1_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj1_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj1_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj1_tFileInputXML_1 instanceof String || obj1_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj1_tFileInputXML_1);
    } else if(obj1_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj1_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.Port =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.Port ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.Port =null;
									}else{
		row1.Port = str_tFileInputXML_1;
	}
    Object obj2_tFileInputXML_1 = xpaths_tFileInputXML_1.get(2).evaluate(temp_tFileInputXML_1);
    if(obj2_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj2_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj2_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj2_tFileInputXML_1 instanceof String || obj2_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj2_tFileInputXML_1);
    } else if(obj2_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj2_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.Sid =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.Sid ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.Sid =null;
									}else{
		row1.Sid = str_tFileInputXML_1;
	}
    Object obj3_tFileInputXML_1 = xpaths_tFileInputXML_1.get(3).evaluate(temp_tFileInputXML_1);
    if(obj3_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj3_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj3_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj3_tFileInputXML_1 instanceof String || obj3_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj3_tFileInputXML_1);
    } else if(obj3_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj3_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.ServiceName =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.ServiceName ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.ServiceName =null;
									}else{
		row1.ServiceName = str_tFileInputXML_1;
	}
    Object obj4_tFileInputXML_1 = xpaths_tFileInputXML_1.get(4).evaluate(temp_tFileInputXML_1);
    if(obj4_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj4_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj4_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj4_tFileInputXML_1 instanceof String || obj4_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj4_tFileInputXML_1);
    } else if(obj4_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj4_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.Schema =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.Schema ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.Schema =null;
									}else{
		row1.Schema = str_tFileInputXML_1;
	}
    Object obj5_tFileInputXML_1 = xpaths_tFileInputXML_1.get(5).evaluate(temp_tFileInputXML_1);
    if(obj5_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj5_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj5_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj5_tFileInputXML_1 instanceof String || obj5_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj5_tFileInputXML_1);
    } else if(obj5_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj5_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.User =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.User ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.User =null;
									}else{
		row1.User = str_tFileInputXML_1;
	}
    Object obj6_tFileInputXML_1 = xpaths_tFileInputXML_1.get(6).evaluate(temp_tFileInputXML_1);
    if(obj6_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj6_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj6_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj6_tFileInputXML_1 instanceof String || obj6_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj6_tFileInputXML_1);
    } else if(obj6_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj6_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.Password =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.Password ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.Password =null;
									}else{
		row1.Password = str_tFileInputXML_1;
	}
    Object obj7_tFileInputXML_1 = xpaths_tFileInputXML_1.get(7).evaluate(temp_tFileInputXML_1);
    if(obj7_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj7_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj7_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj7_tFileInputXML_1 instanceof String || obj7_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj7_tFileInputXML_1);
    } else if(obj7_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj7_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.PathStorage =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.PathStorage ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.PathStorage =null;
									}else{
		row1.PathStorage = str_tFileInputXML_1;
	}
    Object obj8_tFileInputXML_1 = xpaths_tFileInputXML_1.get(8).evaluate(temp_tFileInputXML_1);
    if(obj8_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj8_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj8_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj8_tFileInputXML_1 instanceof String || obj8_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj8_tFileInputXML_1);
    } else if(obj8_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj8_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.SMTPHost =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.SMTPHost ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.SMTPHost =null;
									}else{
		row1.SMTPHost = str_tFileInputXML_1;
	}
    Object obj9_tFileInputXML_1 = xpaths_tFileInputXML_1.get(9).evaluate(temp_tFileInputXML_1);
    if(obj9_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj9_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj9_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj9_tFileInputXML_1 instanceof String || obj9_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj9_tFileInputXML_1);
    } else if(obj9_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj9_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.SMTPPort =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.SMTPPort ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.SMTPPort =null;
									}else{
		row1.SMTPPort = str_tFileInputXML_1;
	}
    Object obj10_tFileInputXML_1 = xpaths_tFileInputXML_1.get(10).evaluate(temp_tFileInputXML_1);
    if(obj10_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj10_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj10_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj10_tFileInputXML_1 instanceof String || obj10_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj10_tFileInputXML_1);
    } else if(obj10_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj10_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.UsernameMail =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.UsernameMail ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.UsernameMail =null;
									}else{
		row1.UsernameMail = str_tFileInputXML_1;
	}
    Object obj11_tFileInputXML_1 = xpaths_tFileInputXML_1.get(11).evaluate(temp_tFileInputXML_1);
    if(obj11_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj11_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj11_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj11_tFileInputXML_1 instanceof String || obj11_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj11_tFileInputXML_1);
    } else if(obj11_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj11_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.PasswordMail =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.PasswordMail ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.PasswordMail =null;
									}else{
		row1.PasswordMail = str_tFileInputXML_1;
	} 
			
    } catch (java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
        whetherReject_tFileInputXML_1 = true;
                System.err.println(e.getMessage());
                row1 = null;
    }
			
			

 



/**
 * [tFileInputXML_1 begin ] stop
 */
	
	/**
	 * [tFileInputXML_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 


	tos_count_tFileInputXML_1++;

/**
 * [tFileInputXML_1 main ] stop
 */
	
	/**
	 * [tFileInputXML_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 process_data_begin ] stop
 */
// Start of branch "row1"
if(row1 != null) { 



	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					

    context.db_origen_Server = row1.Host;
context.db_origen_Port = row1.Port;
context.db_origen_ServiceName = row1.ServiceName;
context.db_origen_Login = row1.User;
context.db_origen_Password = row1.Password;
context.db_origen_Schema = row1.Schema;


    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */

} // End of branch "row1"




	
	/**
	 * [tFileInputXML_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputXML_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	


}
	}
	globalMap.put("tFileInputXML_1_NB_LINE",nb_line_tFileInputXML_1);

	

 

ok_Hash.put("tFileInputXML_1", true);
end_Hash.put("tFileInputXML_1", System.currentTimeMillis());




/**
 * [tFileInputXML_1 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tOracleConnection_1Process(globalMap);



/**
 * [tJavaRow_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputXML_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputXML_1_SUBPROCESS_STATE", 1);
	}
	


public void tOracleConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tOracleConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleConnection_1", false);
		start_Hash.put("tOracleConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleConnection_1";
	
	
		int tos_count_tOracleConnection_1 = 0;
		
	

	
        String url_tOracleConnection_1 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_origen_Server + ")(port=" + context.db_origen_Port + "))(connect_data=(service_name=" + context.db_origen_ServiceName + ")))";
    	globalMap.put("connectionType_" + "tOracleConnection_1", "ORACLE_SERVICE_NAME");
	String dbUser_tOracleConnection_1 = context.db_origen_Login;
	
	
		
	final String decryptedPassword_tOracleConnection_1 = context.db_origen_Password; 
		String dbPwd_tOracleConnection_1 = decryptedPassword_tOracleConnection_1;
	
	
	java.sql.Connection conn_tOracleConnection_1 = null;
	
		
			String driverClass_tOracleConnection_1 = "oracle.jdbc.OracleDriver";
			java.lang.Class jdbcclazz_tOracleConnection_1 = java.lang.Class.forName(driverClass_tOracleConnection_1);
			globalMap.put("driverClass_tOracleConnection_1", driverClass_tOracleConnection_1);
		
			java.util.Properties atnParamsPrope_tOracleConnection_1 = new java.util.Properties();
			    atnParamsPrope_tOracleConnection_1.put("user",dbUser_tOracleConnection_1);
			    atnParamsPrope_tOracleConnection_1.put("password",dbPwd_tOracleConnection_1);
			if(context.db_origen_AdditionalParams != null && !"\"\"".equals(context.db_origen_AdditionalParams) && !"".equals(context.db_origen_AdditionalParams)){
                atnParamsPrope_tOracleConnection_1.load(new java.io.ByteArrayInputStream(context.db_origen_AdditionalParams.replace("&", "\n").getBytes()));
            }
         
			conn_tOracleConnection_1 = java.sql.DriverManager.getConnection(url_tOracleConnection_1, atnParamsPrope_tOracleConnection_1);

		globalMap.put("conn_tOracleConnection_1", conn_tOracleConnection_1);
	if (null != conn_tOracleConnection_1) {
		
			conn_tOracleConnection_1.setAutoCommit(true);
	}
        globalMap.put("host_" + "tOracleConnection_1",context.db_origen_Server);
        globalMap.put("port_" + "tOracleConnection_1",context.db_origen_Port);
        globalMap.put("dbname_" + "tOracleConnection_1",context.db_origen_ServiceName);

	globalMap.put("dbschema_" + "tOracleConnection_1", context.db_origen_Schema);
	globalMap.put("username_" + "tOracleConnection_1",context.db_origen_Login);
	globalMap.put("password_" + "tOracleConnection_1",dbPwd_tOracleConnection_1);

 



/**
 * [tOracleConnection_1 begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 main ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 


	tos_count_tOracleConnection_1++;

/**
 * [tOracleConnection_1 main ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleConnection_1 end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 

ok_Hash.put("tOracleConnection_1", true);
end_Hash.put("tOracleConnection_1", System.currentTimeMillis());




/**
 * [tOracleConnection_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleConnection_1:OnSubjobOk1", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk5", 0, "ok");
								} 
							
							tOracleRow_2Process(globalMap); 
						
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleConnection_1:OnSubjobOk2", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk1", 0, "ok");
								} 
							
							tOracleRow_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 1);
	}
	


public static class row44Struct implements routines.system.IPersistableRow<row44Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String Result;

				public String getResult () {
					return this.Result;
				}

				public Boolean ResultIsNullable(){
				    return true;
				}
				public Boolean ResultIsKey(){
				    return false;
				}
				public Integer ResultLength(){
				    return null;
				}
				public Integer ResultPrecision(){
				    return null;
				}
				public String ResultDefault(){
				
					return null;
				
				}
				public String ResultComment(){
				
				    return "";
				
				}
				public String ResultPattern(){
				
					return "";
				
				}
				public String ResultOriginalDbColumnName(){
				
					return "Result";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.Result = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.Result = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Result,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Result,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Result="+Result);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row44Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row44Struct row44 = new row44Struct();




	
	/**
	 * [tBufferOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tBufferOutput_1", false);
		start_Hash.put("tBufferOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tBufferOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row44");
					}
				
		int tos_count_tBufferOutput_1 = 0;
		

 



/**
 * [tBufferOutput_1 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_1", false);
		start_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_1";
	
	
		int tos_count_tFixedFlowInput_1 = 0;
		

	    for (int i_tFixedFlowInput_1 = 0 ; i_tFixedFlowInput_1 < 1 ; i_tFixedFlowInput_1++) {
	                	            	
    	            		row44.Result = "2";
    	            	

 



/**
 * [tFixedFlowInput_1 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 


	tos_count_tFixedFlowInput_1++;

/**
 * [tFixedFlowInput_1 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tBufferOutput_1 main ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row44"
						
						);
					}
					



String[] row_tBufferOutput_1=new String[]{"",};		
	    if(row44.Result != null){
	        
	            row_tBufferOutput_1[0] = row44.Result;
	                        			    
	    }else{
	    	row_tBufferOutput_1[0] = null;
	    }
	globalBuffer.add(row_tBufferOutput_1);	
	
 


	tos_count_tBufferOutput_1++;

/**
 * [tBufferOutput_1 main ] stop
 */
	
	/**
	 * [tBufferOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	

 



/**
 * [tBufferOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tBufferOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	

 



/**
 * [tBufferOutput_1 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

        }
        globalMap.put("tFixedFlowInput_1_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_1", true);
end_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());




/**
 * [tFixedFlowInput_1 end ] stop
 */

	
	/**
	 * [tBufferOutput_1 end ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row44");
			  	}
			  	
 

ok_Hash.put("tBufferOutput_1", true);
end_Hash.put("tBufferOutput_1", System.currentTimeMillis());




/**
 * [tBufferOutput_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_1 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 finally ] stop
 */

	
	/**
	 * [tBufferOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	

 



/**
 * [tBufferOutput_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 1);
	}
	


public void tOracleRow_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleRow_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tOracleRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleRow_2", false);
		start_Hash.put("tOracleRow_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleRow_2";
	
	
		int tos_count_tOracleRow_2 = 0;
		

	java.sql.Connection conn_tOracleRow_2 = null;
	String query_tOracleRow_2 = "";
	boolean whetherReject_tOracleRow_2 = false;
	int count_tOracleRow_2 = 0;
				conn_tOracleRow_2 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
			
        resourceMap.put("conn_tOracleRow_2", conn_tOracleRow_2);
        java.sql.Statement stmt_tOracleRow_2 = conn_tOracleRow_2.createStatement();
        resourceMap.put("stmt_tOracleRow_2", stmt_tOracleRow_2);

 



/**
 * [tOracleRow_2 begin ] stop
 */
	
	/**
	 * [tOracleRow_2 main ] start
	 */

	

	
	
	currentComponent="tOracleRow_2";
	
	

query_tOracleRow_2 = "TRUNCATE TABLE MED_PRODUCTOS_COMERCIALES_LOG";
whetherReject_tOracleRow_2 = false;
globalMap.put("tOracleRow_2_QUERY",query_tOracleRow_2);
try {
		stmt_tOracleRow_2.execute(query_tOracleRow_2);
		
	} catch (java.lang.Exception e) {
globalMap.put("tOracleRow_2_ERROR_MESSAGE",e.getMessage());
		whetherReject_tOracleRow_2 = true;
		
				System.err.print(e.getMessage());
				
	}
	

 


	tos_count_tOracleRow_2++;

/**
 * [tOracleRow_2 main ] stop
 */
	
	/**
	 * [tOracleRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleRow_2";
	
	

 



/**
 * [tOracleRow_2 process_data_begin ] stop
 */
	
	/**
	 * [tOracleRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleRow_2";
	
	

 



/**
 * [tOracleRow_2 process_data_end ] stop
 */
	
	/**
	 * [tOracleRow_2 end ] start
	 */

	

	
	
	currentComponent="tOracleRow_2";
	
	

	globalMap.put("tOracleRow_2_NB_LINE", count_tOracleRow_2);
        stmt_tOracleRow_2.close();
        resourceMap.remove("stmt_tOracleRow_2");
    resourceMap.put("statementClosed_tOracleRow_2", true);
    resourceMap.put("finish_tOracleRow_2", true);

 

ok_Hash.put("tOracleRow_2", true);
end_Hash.put("tOracleRow_2", System.currentTimeMillis());




/**
 * [tOracleRow_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleRow_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleRow_2";
	
	

    if (resourceMap.get("statementClosed_tOracleRow_2") == null) {
            java.sql.Statement stmtToClose_tOracleRow_2 = null;
            if ((stmtToClose_tOracleRow_2 = (java.sql.Statement) resourceMap.remove("stmt_tOracleRow_2")) != null) {
                stmtToClose_tOracleRow_2.close();
            }
    }
 



/**
 * [tOracleRow_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleRow_2_SUBPROCESS_STATE", 1);
	}
	


public void tOracleRow_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleRow_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tOracleRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleRow_1", false);
		start_Hash.put("tOracleRow_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleRow_1";
	
	
		int tos_count_tOracleRow_1 = 0;
		

	java.sql.Connection conn_tOracleRow_1 = null;
	String query_tOracleRow_1 = "";
	boolean whetherReject_tOracleRow_1 = false;
	int count_tOracleRow_1 = 0;
				conn_tOracleRow_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
			
        resourceMap.put("conn_tOracleRow_1", conn_tOracleRow_1);
        java.sql.Statement stmt_tOracleRow_1 = conn_tOracleRow_1.createStatement();
        resourceMap.put("stmt_tOracleRow_1", stmt_tOracleRow_1);

 



/**
 * [tOracleRow_1 begin ] stop
 */
	
	/**
	 * [tOracleRow_1 main ] start
	 */

	

	
	
	currentComponent="tOracleRow_1";
	
	

query_tOracleRow_1 = "TRUNCATE TABLE MED_PRODUCTOS_COMERCIALES_TEMP";
whetherReject_tOracleRow_1 = false;
globalMap.put("tOracleRow_1_QUERY",query_tOracleRow_1);
try {
		stmt_tOracleRow_1.execute(query_tOracleRow_1);
		
	} catch (java.lang.Exception e) {
globalMap.put("tOracleRow_1_ERROR_MESSAGE",e.getMessage());
		whetherReject_tOracleRow_1 = true;
		
				System.err.print(e.getMessage());
				
	}
	

 


	tos_count_tOracleRow_1++;

/**
 * [tOracleRow_1 main ] stop
 */
	
	/**
	 * [tOracleRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleRow_1";
	
	

 



/**
 * [tOracleRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleRow_1";
	
	

 



/**
 * [tOracleRow_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleRow_1 end ] start
	 */

	

	
	
	currentComponent="tOracleRow_1";
	
	

	globalMap.put("tOracleRow_1_NB_LINE", count_tOracleRow_1);
        stmt_tOracleRow_1.close();
        resourceMap.remove("stmt_tOracleRow_1");
    resourceMap.put("statementClosed_tOracleRow_1", true);
    resourceMap.put("finish_tOracleRow_1", true);

 

ok_Hash.put("tOracleRow_1", true);
end_Hash.put("tOracleRow_1", System.currentTimeMillis());




/**
 * [tOracleRow_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleRow_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleRow_1";
	
	

    if (resourceMap.get("statementClosed_tOracleRow_1") == null) {
            java.sql.Statement stmtToClose_tOracleRow_1 = null;
            if ((stmtToClose_tOracleRow_1 = (java.sql.Statement) resourceMap.remove("stmt_tOracleRow_1")) != null) {
                stmtToClose_tOracleRow_1.close();
            }
    }
 



/**
 * [tOracleRow_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleRow_1_SUBPROCESS_STATE", 1);
	}
	


public static class next11Struct implements routines.system.IPersistableRow<next11Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return 200;
				}
				public Integer oViaAdminPrecision(){
				    return 0;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return 100;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return 0;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return 400;
				}
				public Integer oNGenericoPrecision(){
				    return 0;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return 50;
				}
				public Integer oConcentracionPrecision(){
				    return 0;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return 2;
				}
				public Integer oUnidosisPrecision(){
				    return 0;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return 100;
				}
				public Integer oUMedidaPrecision(){
				    return 0;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return 500;
				}
				public Integer oFabricantePrecision(){
				    return 0;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return 500;
				}
				public Integer oImportadorPrecision(){
				    return 0;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return 50;
				}
				public Integer StatePrecision(){
				    return 0;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return 50;
				}
				public Integer InsPrecision(){
				    return 0;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String ErrorMessage;

				public String getErrorMessage () {
					return this.ErrorMessage;
				}

				public Boolean ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean ErrorMessageIsKey(){
				    return false;
				}
				public Integer ErrorMessageLength(){
				    return 50;
				}
				public Integer ErrorMessagePrecision(){
				    return 0;
				}
				public String ErrorMessageDefault(){
				
					return null;
				
				}
				public String ErrorMessageComment(){
				
				    return "";
				
				}
				public String ErrorMessagePattern(){
				
					return "";
				
				}
				public String ErrorMessageOriginalDbColumnName(){
				
					return "ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExpRegInvima;

				public String getFExpRegInvima () {
					return this.FExpRegInvima;
				}

				public Boolean FExpRegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExpRegInvimaIsKey(){
				    return false;
				}
				public Integer FExpRegInvimaLength(){
				    return 15;
				}
				public Integer FExpRegInvimaPrecision(){
				    return 0;
				}
				public String FExpRegInvimaDefault(){
				
					return null;
				
				}
				public String FExpRegInvimaComment(){
				
				    return "";
				
				}
				public String FExpRegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExpRegInvimaOriginalDbColumnName(){
				
					return "FExpRegInvima";
				
				}

				
			    public String FVenRegInvima;

				public String getFVenRegInvima () {
					return this.FVenRegInvima;
				}

				public Boolean FVenRegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVenRegInvimaIsKey(){
				    return false;
				}
				public Integer FVenRegInvimaLength(){
				    return 15;
				}
				public Integer FVenRegInvimaPrecision(){
				    return 0;
				}
				public String FVenRegInvimaDefault(){
				
					return null;
				
				}
				public String FVenRegInvimaComment(){
				
				    return "";
				
				}
				public String FVenRegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVenRegInvimaOriginalDbColumnName(){
				
					return "FVenRegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String EfectosPosteriores;

				public String getEfectosPosteriores () {
					return this.EfectosPosteriores;
				}

				public Boolean EfectosPosterioresIsNullable(){
				    return true;
				}
				public Boolean EfectosPosterioresIsKey(){
				    return false;
				}
				public Integer EfectosPosterioresLength(){
				    return 2000;
				}
				public Integer EfectosPosterioresPrecision(){
				    return 0;
				}
				public String EfectosPosterioresDefault(){
				
					return null;
				
				}
				public String EfectosPosterioresComment(){
				
				    return "";
				
				}
				public String EfectosPosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EfectosPosterioresOriginalDbColumnName(){
				
					return "EfectosPosteriores";
				
				}

				
			    public String RiesgosAsociados;

				public String getRiesgosAsociados () {
					return this.RiesgosAsociados;
				}

				public Boolean RiesgosAsociadosIsNullable(){
				    return true;
				}
				public Boolean RiesgosAsociadosIsKey(){
				    return false;
				}
				public Integer RiesgosAsociadosLength(){
				    return 2000;
				}
				public Integer RiesgosAsociadosPrecision(){
				    return 0;
				}
				public String RiesgosAsociadosDefault(){
				
					return null;
				
				}
				public String RiesgosAsociadosComment(){
				
				    return "";
				
				}
				public String RiesgosAsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RiesgosAsociadosOriginalDbColumnName(){
				
					return "RiesgosAsociados";
				
				}

				
			    public String DosisAplicacion;

				public String getDosisAplicacion () {
					return this.DosisAplicacion;
				}

				public Boolean DosisAplicacionIsNullable(){
				    return true;
				}
				public Boolean DosisAplicacionIsKey(){
				    return false;
				}
				public Integer DosisAplicacionLength(){
				    return 500;
				}
				public Integer DosisAplicacionPrecision(){
				    return 0;
				}
				public String DosisAplicacionDefault(){
				
					return null;
				
				}
				public String DosisAplicacionComment(){
				
				    return "";
				
				}
				public String DosisAplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DosisAplicacionOriginalDbColumnName(){
				
					return "DosisAplicacion";
				
				}

				
			    public String NITFabricante;

				public String getNITFabricante () {
					return this.NITFabricante;
				}

				public Boolean NITFabricanteIsNullable(){
				    return true;
				}
				public Boolean NITFabricanteIsKey(){
				    return false;
				}
				public Integer NITFabricanteLength(){
				    return 100;
				}
				public Integer NITFabricantePrecision(){
				    return 0;
				}
				public String NITFabricanteDefault(){
				
					return null;
				
				}
				public String NITFabricanteComment(){
				
				    return "";
				
				}
				public String NITFabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NITFabricanteOriginalDbColumnName(){
				
					return "NITFabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NITImportador;

				public String getNITImportador () {
					return this.NITImportador;
				}

				public Boolean NITImportadorIsNullable(){
				    return true;
				}
				public Boolean NITImportadorIsKey(){
				    return false;
				}
				public Integer NITImportadorLength(){
				    return 100;
				}
				public Integer NITImportadorPrecision(){
				    return 0;
				}
				public String NITImportadorDefault(){
				
					return null;
				
				}
				public String NITImportadorComment(){
				
				    return "";
				
				}
				public String NITImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NITImportadorOriginalDbColumnName(){
				
					return "NITImportador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 100;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 100;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this.ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExpRegInvima = readString(dis);
					
					this.FVenRegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.EfectosPosteriores = readString(dis);
					
					this.RiesgosAsociados = readString(dis);
					
					this.DosisAplicacion = readString(dis);
					
					this.NITFabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NITImportador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this.ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExpRegInvima = readString(dis);
					
					this.FVenRegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.EfectosPosteriores = readString(dis);
					
					this.RiesgosAsociados = readString(dis);
					
					this.DosisAplicacion = readString(dis);
					
					this.NITFabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NITImportador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this.ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExpRegInvima,dos);
					
					// String
				
						writeString(this.FVenRegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.EfectosPosteriores,dos);
					
					// String
				
						writeString(this.RiesgosAsociados,dos);
					
					// String
				
						writeString(this.DosisAplicacion,dos);
					
					// String
				
						writeString(this.NITFabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NITImportador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this.ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExpRegInvima,dos);
					
					// String
				
						writeString(this.FVenRegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.EfectosPosteriores,dos);
					
					// String
				
						writeString(this.RiesgosAsociados,dos);
					
					// String
				
						writeString(this.DosisAplicacion,dos);
					
					// String
				
						writeString(this.NITFabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NITImportador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",ErrorMessage="+ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExpRegInvima="+FExpRegInvima);
		sb.append(",FVenRegInvima="+FVenRegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",EfectosPosteriores="+EfectosPosteriores);
		sb.append(",RiesgosAsociados="+RiesgosAsociados);
		sb.append(",DosisAplicacion="+DosisAplicacion);
		sb.append(",NITFabricante="+NITFabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NITImportador="+NITImportador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(next11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row16Struct implements routines.system.IPersistableRow<row16Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 20;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String NOMBRE_COMERCIAL;

				public String getNOMBRE_COMERCIAL () {
					return this.NOMBRE_COMERCIAL;
				}

				public Boolean NOMBRE_COMERCIALIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIALIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIALLength(){
				    return 150;
				}
				public Integer NOMBRE_COMERCIALPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIALDefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIALComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIALPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIALOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL";
				
				}

				
			    public String PRESENTACION_COMERCIAL;

				public String getPRESENTACION_COMERCIAL () {
					return this.PRESENTACION_COMERCIAL;
				}

				public Boolean PRESENTACION_COMERCIALIsNullable(){
				    return true;
				}
				public Boolean PRESENTACION_COMERCIALIsKey(){
				    return false;
				}
				public Integer PRESENTACION_COMERCIALLength(){
				    return 500;
				}
				public Integer PRESENTACION_COMERCIALPrecision(){
				    return 0;
				}
				public String PRESENTACION_COMERCIALDefault(){
				
					return null;
				
				}
				public String PRESENTACION_COMERCIALComment(){
				
				    return "";
				
				}
				public String PRESENTACION_COMERCIALPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACION_COMERCIALOriginalDbColumnName(){
				
					return "PRESENTACION_COMERCIAL";
				
				}

				
			    public String VIA_DE_ADMINISTRACION;

				public String getVIA_DE_ADMINISTRACION () {
					return this.VIA_DE_ADMINISTRACION;
				}

				public Boolean VIA_DE_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_DE_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_DE_ADMINISTRACIONLength(){
				    return 200;
				}
				public Integer VIA_DE_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_DE_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_DE_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_DE_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_DE_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_DE_ADMINISTRACION";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 100;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 400;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 50;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 2;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 100;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UMEDIDA;

				public String getCANTIDAD_UMEDIDA () {
					return this.CANTIDAD_UMEDIDA;
				}

				public Boolean CANTIDAD_UMEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UMEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UMEDIDALength(){
				    return 10;
				}
				public Integer CANTIDAD_UMEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UMEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UMEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UMEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UMEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UMEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 10;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String REGISTRO_INVIMA;

				public String getREGISTRO_INVIMA () {
					return this.REGISTRO_INVIMA;
				}

				public Boolean REGISTRO_INVIMAIsNullable(){
				    return true;
				}
				public Boolean REGISTRO_INVIMAIsKey(){
				    return false;
				}
				public Integer REGISTRO_INVIMALength(){
				    return 50;
				}
				public Integer REGISTRO_INVIMAPrecision(){
				    return 0;
				}
				public String REGISTRO_INVIMADefault(){
				
					return null;
				
				}
				public String REGISTRO_INVIMAComment(){
				
				    return "";
				
				}
				public String REGISTRO_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String REGISTRO_INVIMAOriginalDbColumnName(){
				
					return "REGISTRO_INVIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG__INVIMA;

				public String getFECHA_EXPEDICION_REG__INVIMA () {
					return this.FECHA_EXPEDICION_REG__INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG__INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG__INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG__INVIMALength(){
				    return 15;
				}
				public Integer FECHA_EXPEDICION_REG__INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG__INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG__INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG__INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG__INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG__INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 15;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 15;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 15;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 35;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 500;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 2000;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 2000;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 2000;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 2000;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 500;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 100;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String FABRICANTE;

				public String getFABRICANTE () {
					return this.FABRICANTE;
				}

				public Boolean FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean FABRICANTEIsKey(){
				    return false;
				}
				public Integer FABRICANTELength(){
				    return 500;
				}
				public Integer FABRICANTEPrecision(){
				    return 0;
				}
				public String FABRICANTEDefault(){
				
					return null;
				
				}
				public String FABRICANTEComment(){
				
				    return "";
				
				}
				public String FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FABRICANTEOriginalDbColumnName(){
				
					return "FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 100;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String IMPORTADOR;

				public String getIMPORTADOR () {
					return this.IMPORTADOR;
				}

				public Boolean IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean IMPORTADORIsKey(){
				    return false;
				}
				public Integer IMPORTADORLength(){
				    return 500;
				}
				public Integer IMPORTADORPrecision(){
				    return 0;
				}
				public String IMPORTADORDefault(){
				
					return null;
				
				}
				public String IMPORTADORComment(){
				
				    return "";
				
				}
				public String IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOROriginalDbColumnName(){
				
					return "IMPORTADOR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.CODIGO_BARRAS = readString(dis);
					
					this.NOMBRE_COMERCIAL = readString(dis);
					
					this.PRESENTACION_COMERCIAL = readString(dis);
					
					this.VIA_DE_ADMINISTRACION = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UMEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.REGISTRO_INVIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG__INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.IMPORTADOR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.CODIGO_BARRAS = readString(dis);
					
					this.NOMBRE_COMERCIAL = readString(dis);
					
					this.PRESENTACION_COMERCIAL = readString(dis);
					
					this.VIA_DE_ADMINISTRACION = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UMEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.REGISTRO_INVIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG__INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.IMPORTADOR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL,dos);
					
					// String
				
						writeString(this.PRESENTACION_COMERCIAL,dos);
					
					// String
				
						writeString(this.VIA_DE_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UMEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.REGISTRO_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG__INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.IMPORTADOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL,dos);
					
					// String
				
						writeString(this.PRESENTACION_COMERCIAL,dos);
					
					// String
				
						writeString(this.VIA_DE_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UMEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.REGISTRO_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG__INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.IMPORTADOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",NOMBRE_COMERCIAL="+NOMBRE_COMERCIAL);
		sb.append(",PRESENTACION_COMERCIAL="+PRESENTACION_COMERCIAL);
		sb.append(",VIA_DE_ADMINISTRACION="+VIA_DE_ADMINISTRACION);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UMEDIDA="+CANTIDAD_UMEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",REGISTRO_INVIMA="+REGISTRO_INVIMA);
		sb.append(",FECHA_EXPEDICION_REG__INVIMA="+FECHA_EXPEDICION_REG__INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",CUM="+CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",FABRICANTE="+FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",IMPORTADOR="+IMPORTADOR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 20;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String NOMBRE_COMERCIAL;

				public String getNOMBRE_COMERCIAL () {
					return this.NOMBRE_COMERCIAL;
				}

				public Boolean NOMBRE_COMERCIALIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_COMERCIALIsKey(){
				    return false;
				}
				public Integer NOMBRE_COMERCIALLength(){
				    return 150;
				}
				public Integer NOMBRE_COMERCIALPrecision(){
				    return 0;
				}
				public String NOMBRE_COMERCIALDefault(){
				
					return null;
				
				}
				public String NOMBRE_COMERCIALComment(){
				
				    return "";
				
				}
				public String NOMBRE_COMERCIALPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_COMERCIALOriginalDbColumnName(){
				
					return "NOMBRE_COMERCIAL";
				
				}

				
			    public String PRESENTACION_COMERCIAL;

				public String getPRESENTACION_COMERCIAL () {
					return this.PRESENTACION_COMERCIAL;
				}

				public Boolean PRESENTACION_COMERCIALIsNullable(){
				    return true;
				}
				public Boolean PRESENTACION_COMERCIALIsKey(){
				    return false;
				}
				public Integer PRESENTACION_COMERCIALLength(){
				    return 500;
				}
				public Integer PRESENTACION_COMERCIALPrecision(){
				    return 0;
				}
				public String PRESENTACION_COMERCIALDefault(){
				
					return null;
				
				}
				public String PRESENTACION_COMERCIALComment(){
				
				    return "";
				
				}
				public String PRESENTACION_COMERCIALPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACION_COMERCIALOriginalDbColumnName(){
				
					return "PRESENTACION_COMERCIAL";
				
				}

				
			    public String VIA_DE_ADMINISTRACION;

				public String getVIA_DE_ADMINISTRACION () {
					return this.VIA_DE_ADMINISTRACION;
				}

				public Boolean VIA_DE_ADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIA_DE_ADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIA_DE_ADMINISTRACIONLength(){
				    return 200;
				}
				public Integer VIA_DE_ADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIA_DE_ADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIA_DE_ADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIA_DE_ADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIA_DE_ADMINISTRACIONOriginalDbColumnName(){
				
					return "VIA_DE_ADMINISTRACION";
				
				}

				
			    public String FORMA_FARMACEUTICA;

				public String getFORMA_FARMACEUTICA () {
					return this.FORMA_FARMACEUTICA;
				}

				public Boolean FORMA_FARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMA_FARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMA_FARMACEUTICALength(){
				    return 100;
				}
				public Integer FORMA_FARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMA_FARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMA_FARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMA_FARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMA_FARMACEUTICAOriginalDbColumnName(){
				
					return "FORMA_FARMACEUTICA";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return 400;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return 0;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 50;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 2;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDAD_MEDIDA;

				public String getUNIDAD_MEDIDA () {
					return this.UNIDAD_MEDIDA;
				}

				public Boolean UNIDAD_MEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDAD_MEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDAD_MEDIDALength(){
				    return 100;
				}
				public Integer UNIDAD_MEDIDAPrecision(){
				    return 0;
				}
				public String UNIDAD_MEDIDADefault(){
				
					return null;
				
				}
				public String UNIDAD_MEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDAD_MEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDAD_MEDIDAOriginalDbColumnName(){
				
					return "UNIDAD_MEDIDA";
				
				}

				
			    public String CANTIDAD_UMEDIDA;

				public String getCANTIDAD_UMEDIDA () {
					return this.CANTIDAD_UMEDIDA;
				}

				public Boolean CANTIDAD_UMEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_UMEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_UMEDIDALength(){
				    return 10;
				}
				public Integer CANTIDAD_UMEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDAD_UMEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDAD_UMEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_UMEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_UMEDIDAOriginalDbColumnName(){
				
					return "CANTIDAD_UMEDIDA";
				
				}

				
			    public String CANTIDAD_MINIMA;

				public String getCANTIDAD_MINIMA () {
					return this.CANTIDAD_MINIMA;
				}

				public Boolean CANTIDAD_MINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_MINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_MINIMALength(){
				    return 10;
				}
				public Integer CANTIDAD_MINIMAPrecision(){
				    return 0;
				}
				public String CANTIDAD_MINIMADefault(){
				
					return null;
				
				}
				public String CANTIDAD_MINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_MINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_MINIMAOriginalDbColumnName(){
				
					return "CANTIDAD_MINIMA";
				
				}

				
			    public String REGISTRO_INVIMA;

				public String getREGISTRO_INVIMA () {
					return this.REGISTRO_INVIMA;
				}

				public Boolean REGISTRO_INVIMAIsNullable(){
				    return true;
				}
				public Boolean REGISTRO_INVIMAIsKey(){
				    return false;
				}
				public Integer REGISTRO_INVIMALength(){
				    return 50;
				}
				public Integer REGISTRO_INVIMAPrecision(){
				    return 0;
				}
				public String REGISTRO_INVIMADefault(){
				
					return null;
				
				}
				public String REGISTRO_INVIMAComment(){
				
				    return "";
				
				}
				public String REGISTRO_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String REGISTRO_INVIMAOriginalDbColumnName(){
				
					return "REGISTRO_INVIMA";
				
				}

				
			    public String FECHA_EXPEDICION_REG__INVIMA;

				public String getFECHA_EXPEDICION_REG__INVIMA () {
					return this.FECHA_EXPEDICION_REG__INVIMA;
				}

				public Boolean FECHA_EXPEDICION_REG__INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_REG__INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_REG__INVIMALength(){
				    return 15;
				}
				public Integer FECHA_EXPEDICION_REG__INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_EXPEDICION_REG__INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_REG__INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_REG__INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_EXPEDICION_REG__INVIMAOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_REG__INVIMA";
				
				}

				
			    public String FECHA_VENCIMIENTO_REG_INVIMA;

				public String getFECHA_VENCIMIENTO_REG_INVIMA () {
					return this.FECHA_VENCIMIENTO_REG_INVIMA;
				}

				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTO_REG_INVIMAIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMALength(){
				    return 15;
				}
				public Integer FECHA_VENCIMIENTO_REG_INVIMAPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTO_REG_INVIMADefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTO_REG_INVIMAOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO_REG_INVIMA";
				
				}

				
			    public String FECHA_ACTIVO_CUM;

				public String getFECHA_ACTIVO_CUM () {
					return this.FECHA_ACTIVO_CUM;
				}

				public Boolean FECHA_ACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVO_CUMLength(){
				    return 15;
				}
				public Integer FECHA_ACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_ACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_ACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_ACTIVO_CUM";
				
				}

				
			    public String FECHA_INACTIVO_CUM;

				public String getFECHA_INACTIVO_CUM () {
					return this.FECHA_INACTIVO_CUM;
				}

				public Boolean FECHA_INACTIVO_CUMIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVO_CUMIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVO_CUMLength(){
				    return 15;
				}
				public Integer FECHA_INACTIVO_CUMPrecision(){
				    return 0;
				}
				public String FECHA_INACTIVO_CUMDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVO_CUMComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVO_CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_INACTIVO_CUMOriginalDbColumnName(){
				
					return "FECHA_INACTIVO_CUM";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 35;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String LUGAR_DE_ORIGEN;

				public String getLUGAR_DE_ORIGEN () {
					return this.LUGAR_DE_ORIGEN;
				}

				public Boolean LUGAR_DE_ORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGAR_DE_ORIGENIsKey(){
				    return false;
				}
				public Integer LUGAR_DE_ORIGENLength(){
				    return 500;
				}
				public Integer LUGAR_DE_ORIGENPrecision(){
				    return 0;
				}
				public String LUGAR_DE_ORIGENDefault(){
				
					return null;
				
				}
				public String LUGAR_DE_ORIGENComment(){
				
				    return "";
				
				}
				public String LUGAR_DE_ORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGAR_DE_ORIGENOriginalDbColumnName(){
				
					return "LUGAR_DE_ORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 2000;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 2000;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOS_POSTERIOR;

				public String getEFECTOS_POSTERIOR () {
					return this.EFECTOS_POSTERIOR;
				}

				public Boolean EFECTOS_POSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOS_POSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOS_POSTERIORLength(){
				    return 2000;
				}
				public Integer EFECTOS_POSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOS_POSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOS_POSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOS_POSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOS_POSTERIOROriginalDbColumnName(){
				
					return "EFECTOS_POSTERIOR";
				
				}

				
			    public String RIESGOS_ASOCIADOS;

				public String getRIESGOS_ASOCIADOS () {
					return this.RIESGOS_ASOCIADOS;
				}

				public Boolean RIESGOS_ASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOS_ASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOS_ASOCIADOSLength(){
				    return 2000;
				}
				public Integer RIESGOS_ASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOS_ASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOS_ASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOS_ASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOS_ASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOS_ASOCIADOS";
				
				}

				
			    public String DOSIS_PARA_APLICACION;

				public String getDOSIS_PARA_APLICACION () {
					return this.DOSIS_PARA_APLICACION;
				}

				public Boolean DOSIS_PARA_APLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSIS_PARA_APLICACIONIsKey(){
				    return false;
				}
				public Integer DOSIS_PARA_APLICACIONLength(){
				    return 500;
				}
				public Integer DOSIS_PARA_APLICACIONPrecision(){
				    return 0;
				}
				public String DOSIS_PARA_APLICACIONDefault(){
				
					return null;
				
				}
				public String DOSIS_PARA_APLICACIONComment(){
				
				    return "";
				
				}
				public String DOSIS_PARA_APLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSIS_PARA_APLICACIONOriginalDbColumnName(){
				
					return "DOSIS_PARA_APLICACION";
				
				}

				
			    public String NIT_FABRICANTE;

				public String getNIT_FABRICANTE () {
					return this.NIT_FABRICANTE;
				}

				public Boolean NIT_FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NIT_FABRICANTEIsKey(){
				    return false;
				}
				public Integer NIT_FABRICANTELength(){
				    return 100;
				}
				public Integer NIT_FABRICANTEPrecision(){
				    return 0;
				}
				public String NIT_FABRICANTEDefault(){
				
					return null;
				
				}
				public String NIT_FABRICANTEComment(){
				
				    return "";
				
				}
				public String NIT_FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FABRICANTEOriginalDbColumnName(){
				
					return "NIT_FABRICANTE";
				
				}

				
			    public String FABRICANTE;

				public String getFABRICANTE () {
					return this.FABRICANTE;
				}

				public Boolean FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean FABRICANTEIsKey(){
				    return false;
				}
				public Integer FABRICANTELength(){
				    return 500;
				}
				public Integer FABRICANTEPrecision(){
				    return 0;
				}
				public String FABRICANTEDefault(){
				
					return null;
				
				}
				public String FABRICANTEComment(){
				
				    return "";
				
				}
				public String FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FABRICANTEOriginalDbColumnName(){
				
					return "FABRICANTE";
				
				}

				
			    public String NIT_IMPORTADOR;

				public String getNIT_IMPORTADOR () {
					return this.NIT_IMPORTADOR;
				}

				public Boolean NIT_IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NIT_IMPORTADORIsKey(){
				    return false;
				}
				public Integer NIT_IMPORTADORLength(){
				    return 100;
				}
				public Integer NIT_IMPORTADORPrecision(){
				    return 0;
				}
				public String NIT_IMPORTADORDefault(){
				
					return null;
				
				}
				public String NIT_IMPORTADORComment(){
				
				    return "";
				
				}
				public String NIT_IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_IMPORTADOROriginalDbColumnName(){
				
					return "NIT_IMPORTADOR";
				
				}

				
			    public String IMPORTADOR;

				public String getIMPORTADOR () {
					return this.IMPORTADOR;
				}

				public Boolean IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean IMPORTADORIsKey(){
				    return false;
				}
				public Integer IMPORTADORLength(){
				    return 500;
				}
				public Integer IMPORTADORPrecision(){
				    return 0;
				}
				public String IMPORTADORDefault(){
				
					return null;
				
				}
				public String IMPORTADORComment(){
				
				    return "";
				
				}
				public String IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOROriginalDbColumnName(){
				
					return "IMPORTADOR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.CODIGO_BARRAS = readString(dis);
					
					this.NOMBRE_COMERCIAL = readString(dis);
					
					this.PRESENTACION_COMERCIAL = readString(dis);
					
					this.VIA_DE_ADMINISTRACION = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UMEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.REGISTRO_INVIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG__INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.IMPORTADOR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.CODIGO_BARRAS = readString(dis);
					
					this.NOMBRE_COMERCIAL = readString(dis);
					
					this.PRESENTACION_COMERCIAL = readString(dis);
					
					this.VIA_DE_ADMINISTRACION = readString(dis);
					
					this.FORMA_FARMACEUTICA = readString(dis);
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDAD_MEDIDA = readString(dis);
					
					this.CANTIDAD_UMEDIDA = readString(dis);
					
					this.CANTIDAD_MINIMA = readString(dis);
					
					this.REGISTRO_INVIMA = readString(dis);
					
					this.FECHA_EXPEDICION_REG__INVIMA = readString(dis);
					
					this.FECHA_VENCIMIENTO_REG_INVIMA = readString(dis);
					
					this.FECHA_ACTIVO_CUM = readString(dis);
					
					this.FECHA_INACTIVO_CUM = readString(dis);
					
					this.CUM = readString(dis);
					
					this.LUGAR_DE_ORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOS_POSTERIOR = readString(dis);
					
					this.RIESGOS_ASOCIADOS = readString(dis);
					
					this.DOSIS_PARA_APLICACION = readString(dis);
					
					this.NIT_FABRICANTE = readString(dis);
					
					this.FABRICANTE = readString(dis);
					
					this.NIT_IMPORTADOR = readString(dis);
					
					this.IMPORTADOR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL,dos);
					
					// String
				
						writeString(this.PRESENTACION_COMERCIAL,dos);
					
					// String
				
						writeString(this.VIA_DE_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UMEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.REGISTRO_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG__INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.IMPORTADOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.NOMBRE_COMERCIAL,dos);
					
					// String
				
						writeString(this.PRESENTACION_COMERCIAL,dos);
					
					// String
				
						writeString(this.VIA_DE_ADMINISTRACION,dos);
					
					// String
				
						writeString(this.FORMA_FARMACEUTICA,dos);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDAD_MEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_UMEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDAD_MINIMA,dos);
					
					// String
				
						writeString(this.REGISTRO_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_REG__INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO_REG_INVIMA,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVO_CUM,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVO_CUM,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.LUGAR_DE_ORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOS_POSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOS_ASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSIS_PARA_APLICACION,dos);
					
					// String
				
						writeString(this.NIT_FABRICANTE,dos);
					
					// String
				
						writeString(this.FABRICANTE,dos);
					
					// String
				
						writeString(this.NIT_IMPORTADOR,dos);
					
					// String
				
						writeString(this.IMPORTADOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",NOMBRE_COMERCIAL="+NOMBRE_COMERCIAL);
		sb.append(",PRESENTACION_COMERCIAL="+PRESENTACION_COMERCIAL);
		sb.append(",VIA_DE_ADMINISTRACION="+VIA_DE_ADMINISTRACION);
		sb.append(",FORMA_FARMACEUTICA="+FORMA_FARMACEUTICA);
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDAD_MEDIDA="+UNIDAD_MEDIDA);
		sb.append(",CANTIDAD_UMEDIDA="+CANTIDAD_UMEDIDA);
		sb.append(",CANTIDAD_MINIMA="+CANTIDAD_MINIMA);
		sb.append(",REGISTRO_INVIMA="+REGISTRO_INVIMA);
		sb.append(",FECHA_EXPEDICION_REG__INVIMA="+FECHA_EXPEDICION_REG__INVIMA);
		sb.append(",FECHA_VENCIMIENTO_REG_INVIMA="+FECHA_VENCIMIENTO_REG_INVIMA);
		sb.append(",FECHA_ACTIVO_CUM="+FECHA_ACTIVO_CUM);
		sb.append(",FECHA_INACTIVO_CUM="+FECHA_INACTIVO_CUM);
		sb.append(",CUM="+CUM);
		sb.append(",LUGAR_DE_ORIGEN="+LUGAR_DE_ORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOS_POSTERIOR="+EFECTOS_POSTERIOR);
		sb.append(",RIESGOS_ASOCIADOS="+RIESGOS_ASOCIADOS);
		sb.append(",DOSIS_PARA_APLICACION="+DOSIS_PARA_APLICACION);
		sb.append(",NIT_FABRICANTE="+NIT_FABRICANTE);
		sb.append(",FABRICANTE="+FABRICANTE);
		sb.append(",NIT_IMPORTADOR="+NIT_IMPORTADOR);
		sb.append(",IMPORTADOR="+IMPORTADOR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public Object CONTENIDO;

				public Object getCONTENIDO () {
					return this.CONTENIDO;
				}

				public Boolean CONTENIDOIsNullable(){
				    return false;
				}
				public Boolean CONTENIDOIsKey(){
				    return false;
				}
				public Integer CONTENIDOLength(){
				    return null;
				}
				public Integer CONTENIDOPrecision(){
				    return 0;
				}
				public String CONTENIDODefault(){
				
					return "";
				
				}
				public String CONTENIDOComment(){
				
				    return "";
				
				}
				public String CONTENIDOPattern(){
				
					return "";
				
				}
				public String CONTENIDOOriginalDbColumnName(){
				
					return "CONTENIDO";
				
				}

				
			    public String TCONTENIDO;

				public String getTCONTENIDO () {
					return this.TCONTENIDO;
				}

				public Boolean TCONTENIDOIsNullable(){
				    return false;
				}
				public Boolean TCONTENIDOIsKey(){
				    return false;
				}
				public Integer TCONTENIDOLength(){
				    return 300;
				}
				public Integer TCONTENIDOPrecision(){
				    return 0;
				}
				public String TCONTENIDODefault(){
				
					return null;
				
				}
				public String TCONTENIDOComment(){
				
				    return "";
				
				}
				public String TCONTENIDOPattern(){
				
					return "";
				
				}
				public String TCONTENIDOOriginalDbColumnName(){
				
					return "TCONTENIDO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row6Struct other = (row6Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row6Struct other) {

		other.ID = this.ID;
	            other.CONTENIDO = this.CONTENIDO;
	            other.TCONTENIDO = this.TCONTENIDO;
	            
	}

	public void copyKeysDataTo(row6Struct other) {

		other.ID = this.ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TCONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TCONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// Object
				
       			    	dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TCONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TCONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",CONTENIDO="+String.valueOf(CONTENIDO));
		sb.append(",TCONTENIDO="+TCONTENIDO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class upestadoStruct implements routines.system.IPersistableRow<upestadoStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public BigDecimal Id_;

				public BigDecimal getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.Id_ = (BigDecimal) dis.readObject();
					
					this.Estado_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.Id_ = (BigDecimal) dis.readObject();
					
					this.Estado_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.Id_);
					
					// String
				
						writeString(this.Estado_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Id_);
					
					// String
				
						writeString(this.Estado_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id_="+String.valueOf(Id_));
		sb.append(",Estado_="+Estado_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(upestadoStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class next_1Struct implements routines.system.IPersistableRow<next_1Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public Object CONTENIDO;

				public Object getCONTENIDO () {
					return this.CONTENIDO;
				}

				public Boolean CONTENIDOIsNullable(){
				    return false;
				}
				public Boolean CONTENIDOIsKey(){
				    return false;
				}
				public Integer CONTENIDOLength(){
				    return null;
				}
				public Integer CONTENIDOPrecision(){
				    return 0;
				}
				public String CONTENIDODefault(){
				
					return "";
				
				}
				public String CONTENIDOComment(){
				
				    return "";
				
				}
				public String CONTENIDOPattern(){
				
					return "";
				
				}
				public String CONTENIDOOriginalDbColumnName(){
				
					return "CONTENIDO";
				
				}

				
			    public String TCONTENIDO;

				public String getTCONTENIDO () {
					return this.TCONTENIDO;
				}

				public Boolean TCONTENIDOIsNullable(){
				    return false;
				}
				public Boolean TCONTENIDOIsKey(){
				    return false;
				}
				public Integer TCONTENIDOLength(){
				    return 300;
				}
				public Integer TCONTENIDOPrecision(){
				    return 0;
				}
				public String TCONTENIDODefault(){
				
					return null;
				
				}
				public String TCONTENIDOComment(){
				
				    return "";
				
				}
				public String TCONTENIDOPattern(){
				
					return "";
				
				}
				public String TCONTENIDOOriginalDbColumnName(){
				
					return "TCONTENIDO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final next_1Struct other = (next_1Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(next_1Struct other) {

		other.ID = this.ID;
	            other.CONTENIDO = this.CONTENIDO;
	            other.TCONTENIDO = this.TCONTENIDO;
	            
	}

	public void copyKeysDataTo(next_1Struct other) {

		other.ID = this.ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TCONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TCONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// Object
				
       			    	dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TCONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TCONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",CONTENIDO="+String.valueOf(CONTENIDO));
		sb.append(",TCONTENIDO="+TCONTENIDO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(next_1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public Object CONTENIDO;

				public Object getCONTENIDO () {
					return this.CONTENIDO;
				}

				public Boolean CONTENIDOIsNullable(){
				    return false;
				}
				public Boolean CONTENIDOIsKey(){
				    return false;
				}
				public Integer CONTENIDOLength(){
				    return null;
				}
				public Integer CONTENIDOPrecision(){
				    return 0;
				}
				public String CONTENIDODefault(){
				
					return "";
				
				}
				public String CONTENIDOComment(){
				
				    return "";
				
				}
				public String CONTENIDOPattern(){
				
					return "";
				
				}
				public String CONTENIDOOriginalDbColumnName(){
				
					return "CONTENIDO";
				
				}

				
			    public String TCONTENIDO;

				public String getTCONTENIDO () {
					return this.TCONTENIDO;
				}

				public Boolean TCONTENIDOIsNullable(){
				    return false;
				}
				public Boolean TCONTENIDOIsKey(){
				    return false;
				}
				public Integer TCONTENIDOLength(){
				    return 300;
				}
				public Integer TCONTENIDOPrecision(){
				    return 0;
				}
				public String TCONTENIDODefault(){
				
					return null;
				
				}
				public String TCONTENIDOComment(){
				
				    return "";
				
				}
				public String TCONTENIDOPattern(){
				
					return "";
				
				}
				public String TCONTENIDOOriginalDbColumnName(){
				
					return "TCONTENIDO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TCONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TCONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// Object
				
       			    	dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TCONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TCONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",CONTENIDO="+String.valueOf(CONTENIDO));
		sb.append(",TCONTENIDO="+TCONTENIDO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tOracleInput_3Struct implements routines.system.IPersistableRow<after_tOracleInput_3Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public Object CONTENIDO;

				public Object getCONTENIDO () {
					return this.CONTENIDO;
				}

				public Boolean CONTENIDOIsNullable(){
				    return false;
				}
				public Boolean CONTENIDOIsKey(){
				    return false;
				}
				public Integer CONTENIDOLength(){
				    return null;
				}
				public Integer CONTENIDOPrecision(){
				    return 0;
				}
				public String CONTENIDODefault(){
				
					return "";
				
				}
				public String CONTENIDOComment(){
				
				    return "";
				
				}
				public String CONTENIDOPattern(){
				
					return "";
				
				}
				public String CONTENIDOOriginalDbColumnName(){
				
					return "CONTENIDO";
				
				}

				
			    public String TCONTENIDO;

				public String getTCONTENIDO () {
					return this.TCONTENIDO;
				}

				public Boolean TCONTENIDOIsNullable(){
				    return false;
				}
				public Boolean TCONTENIDOIsKey(){
				    return false;
				}
				public Integer TCONTENIDOLength(){
				    return 300;
				}
				public Integer TCONTENIDOPrecision(){
				    return 0;
				}
				public String TCONTENIDODefault(){
				
					return null;
				
				}
				public String TCONTENIDOComment(){
				
				    return "";
				
				}
				public String TCONTENIDOPattern(){
				
					return "";
				
				}
				public String TCONTENIDOOriginalDbColumnName(){
				
					return "TCONTENIDO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final after_tOracleInput_3Struct other = (after_tOracleInput_3Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(after_tOracleInput_3Struct other) {

		other.ID = this.ID;
	            other.CONTENIDO = this.CONTENIDO;
	            other.TCONTENIDO = this.TCONTENIDO;
	            
	}

	public void copyKeysDataTo(after_tOracleInput_3Struct other) {

		other.ID = this.ID;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TCONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TCONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// Object
				
       			    	dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TCONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TCONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",CONTENIDO="+String.valueOf(CONTENIDO));
		sb.append(",TCONTENIDO="+TCONTENIDO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tOracleInput_3Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tOracleInput_12Process(globalMap);

		row3Struct row3 = new row3Struct();
upestadoStruct upestado = new upestadoStruct();
next_1Struct next_1 = new next_1Struct();
row6Struct row6 = new row6Struct();
row4Struct row4 = new row4Struct();
row16Struct row16 = new row16Struct();
next11Struct next11 = new next11Struct();





	
	/**
	 * [tOracleSP_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_1", false);
		start_Hash.put("tOracleSP_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"upestado");
					}
				
		int tos_count_tOracleSP_1 = 0;
		

	java.sql.Connection connection_tOracleSP_1 = null;
	connection_tOracleSP_1 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_1 = connection_tOracleSP_1.prepareCall("{call " + "MED.UpdEstadoCargaMasiva" + "(?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_1;
String tmpString_tOracleSP_1;

 



/**
 * [tOracleSP_1 begin ] stop
 */





	
	/**
	 * [tFlowToIterate_1 begin ] start
	 */

				
			int NB_ITERATE_tFileInputDelimited_1 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_1", false);
		start_Hash.put("tFlowToIterate_1", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tFlowToIterate_1 = 0;
		

int nb_line_tFlowToIterate_1 = 0;
int counter_tFlowToIterate_1 = 0;

 



/**
 * [tFlowToIterate_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_3", false);
		start_Hash.put("tJavaRow_3", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"next_1");
					}
				
		int tos_count_tJavaRow_3 = 0;
		

int nb_line_tJavaRow_3 = 0;

 



/**
 * [tJavaRow_3 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
upestadoStruct upestado_tmp = new upestadoStruct();
next_1Struct next_1_tmp = new next_1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tOracleInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_3", false);
		start_Hash.put("tOracleInput_3", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_3";
	
	
		int tos_count_tOracleInput_3 = 0;
		
	


	
		    int nb_line_tOracleInput_3 = 0;
		    java.sql.Connection conn_tOracleInput_3 = null;
				conn_tOracleInput_3 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_3 = false;
				boolean isConnectionWrapped_tOracleInput_3 = !(conn_tOracleInput_3 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_3.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_3 = null;
                if (isConnectionWrapped_tOracleInput_3) {
					unwrappedOraConn_tOracleInput_3 = conn_tOracleInput_3.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_3 != null) {
                        isTimeZoneNull_tOracleInput_3 = (unwrappedOraConn_tOracleInput_3.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_3 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_3).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_3) {
					java.sql.Statement stmtGetTZ_tOracleInput_3 = conn_tOracleInput_3.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_3 = stmtGetTZ_tOracleInput_3.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_3 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_3.next()) {
						sessionTimezone_tOracleInput_3 = rsGetTZ_tOracleInput_3.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_3 && unwrappedOraConn_tOracleInput_3 != null) {
                        unwrappedOraConn_tOracleInput_3.setSessionTimeZone(sessionTimezone_tOracleInput_3);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_3).setSessionTimeZone(sessionTimezone_tOracleInput_3);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_3 = conn_tOracleInput_3.createStatement();

		    String dbquery_tOracleInput_3 = "select \n	carga.id,\n	anex.contenido,\n	anex.tcontenido\nfrom med_cargasmasivas carga\ninner join med_anexos anex on an"
+"ex.id=carga.anexos_id\nwhere carga.ESTREGISTRO_ID=1and carga.id= " + context.carga_id+"\nand estado = 'Inicial'";
		    

		    globalMap.put("tOracleInput_3_QUERY",dbquery_tOracleInput_3);

		    java.sql.ResultSet rs_tOracleInput_3 = null;

		    try {
		    	rs_tOracleInput_3 = stmt_tOracleInput_3.executeQuery(dbquery_tOracleInput_3);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_3 = rs_tOracleInput_3.getMetaData();
		    	int colQtyInRs_tOracleInput_3 = rsmd_tOracleInput_3.getColumnCount();

		    String tmpContent_tOracleInput_3 = null;
		    
		    
		    while (rs_tOracleInput_3.next()) {
		        nb_line_tOracleInput_3++;
		        
							if(colQtyInRs_tOracleInput_3 < 1) {
								row3.ID = null;
							} else {
		                          
					if(rs_tOracleInput_3.getObject(1) != null) {
						row3.ID = rs_tOracleInput_3.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_3 < 2) {
								row3.CONTENIDO = null;
							} else {
		                          
				Object tmpObj_2_tOracleInput_3 = rs_tOracleInput_3.getObject(2);
				if(tmpObj_2_tOracleInput_3 != null) {
					row3.CONTENIDO = tmpObj_2_tOracleInput_3;
				} else {
						throw new RuntimeException("Null value in non-Nullable column");
				}
		                    }
							if(colQtyInRs_tOracleInput_3 < 3) {
								row3.TCONTENIDO = null;
							} else {
	                         		
        	row3.TCONTENIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 3, false);
		                    }
					




 



/**
 * [tOracleInput_3 begin ] stop
 */
	
	/**
	 * [tOracleInput_3 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 


	tos_count_tOracleInput_3++;

/**
 * [tOracleInput_3 main ] stop
 */
	
	/**
	 * [tOracleInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

upestado = null;
next_1 = null;


// # Output table : 'upestado'
upestado_tmp.Id_ = context.carga_id;
upestado_tmp.Estado_ = "En proceso" ;
upestado = upestado_tmp;

// # Output table : 'next_1'
next_1_tmp.ID = row3.ID ;
next_1_tmp.CONTENIDO = row3.CONTENIDO ;
next_1_tmp.TCONTENIDO = row3.TCONTENIDO ;
next_1 = next_1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "upestado"
if(upestado != null) { 



	
	/**
	 * [tOracleSP_1 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"upestado"
						
						);
					}
					

			// code for the argument 1 (Id_) of type 'IN AUTOMAPPING'
    					if (upestado.Id_ == null) {
    						statement_tOracleSP_1.setNull(1, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_1.setBigDecimal(1, upestado.Id_);
    					}
    					
			// code for the argument 2 (Estado_) of type 'IN AUTOMAPPING'
    					if (upestado.Estado_ == null) {
    						statement_tOracleSP_1.setNull(2, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_1.setString(2, upestado.Estado_);
    					}
    					
		statement_tOracleSP_1.execute();
		

 


	tos_count_tOracleSP_1++;

/**
 * [tOracleSP_1 main ] stop
 */
	
	/**
	 * [tOracleSP_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleSP_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 process_data_end ] stop
 */

} // End of branch "upestado"




// Start of branch "next_1"
if(next_1 != null) { 



	
	/**
	 * [tJavaRow_3 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"next_1"
						
						);
					}
					

    
//context.Id = next_1.id;
context.Contenido = ((java.sql.Blob)next_1.CONTENIDO).getBinaryStream();
context.TContenido =  next_1.TCONTENIDO;



globalMap.put("archivo_salida",new java.io.ByteArrayOutputStream());
    nb_line_tJavaRow_3++;   

 


	tos_count_tJavaRow_3++;

/**
 * [tJavaRow_3 main ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_begin ] stop
 */

	
	/**
	 * [tFlowToIterate_1 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					


    	            
            globalMap.put("row6.ID", row6.ID);
    	            
            globalMap.put("row6.CONTENIDO", row6.CONTENIDO);
    	            
            globalMap.put("row6.TCONTENIDO", row6.TCONTENIDO);
    	
 
	   nb_line_tFlowToIterate_1++;  
       counter_tFlowToIterate_1++;
       globalMap.put("tFlowToIterate_1_CURRENT_ITERATION", counter_tFlowToIterate_1);
 


	tos_count_tFlowToIterate_1++;

/**
 * [tFlowToIterate_1 main ] stop
 */
	
	/**
	 * [tFlowToIterate_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 process_data_begin ] stop
 */
	NB_ITERATE_tFileInputDelimited_1++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("row4", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("next11", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row16", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate1", 1, "exec" + NB_ITERATE_tFileInputDelimited_1);
					//Thread.sleep(1000);
				}				
			




	
	/**
	 * [tOracleOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_1", false);
		start_Hash.put("tOracleOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"next11");
					}
				
		int tos_count_tOracleOutput_1 = 0;
		






    
    int nb_line_tOracleOutput_1 = 0;
    int nb_line_update_tOracleOutput_1 = 0;
    int nb_line_inserted_tOracleOutput_1 = 0;
    int nb_line_deleted_tOracleOutput_1 = 0;
    int nb_line_rejected_tOracleOutput_1 = 0;

    int tmp_batchUpdateCount_tOracleOutput_1 = 0;

    int deletedCount_tOracleOutput_1=0;
    int updatedCount_tOracleOutput_1=0;
    int insertedCount_tOracleOutput_1=0;
    int rowsToCommitCount_tOracleOutput_1=0;
    int rejectedCount_tOracleOutput_1=0;

    boolean whetherReject_tOracleOutput_1 = false;

    java.sql.Connection conn_tOracleOutput_1 = null;

    //optional table
    String dbschema_tOracleOutput_1 = null;
    String tableName_tOracleOutput_1 = null;
        dbschema_tOracleOutput_1 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_1=0;

        if(dbschema_tOracleOutput_1 == null || dbschema_tOracleOutput_1.trim().length() == 0) {
            tableName_tOracleOutput_1 = ("MED_PRODUCTOS_COMERCIALES_TEMP");
        } else {
            tableName_tOracleOutput_1 = dbschema_tOracleOutput_1 + "." + ("MED_PRODUCTOS_COMERCIALES_TEMP");
        }
                                String tableNameForSearch_tOracleOutput_1= "" + ((String)"MED_PRODUCTOS_COMERCIALES_TEMP") + "";
String dbschemaForSearch_tOracleOutput_1= null;
if(dbschema_tOracleOutput_1== null || dbschema_tOracleOutput_1.trim().length() == 0) {
dbschemaForSearch_tOracleOutput_1= ((String)globalMap.get("username_tOracleConnection_1")).toUpperCase();
} else {
dbschemaForSearch_tOracleOutput_1= dbschema_tOracleOutput_1.toUpperCase();
}

                                java.sql.DatabaseMetaData dbMetaData_tOracleOutput_1 = conn_tOracleOutput_1.getMetaData();
                                if(tableNameForSearch_tOracleOutput_1.indexOf("\"")==-1){
                                    tableNameForSearch_tOracleOutput_1 = tableNameForSearch_tOracleOutput_1.toUpperCase();
                                }else{
                                    tableNameForSearch_tOracleOutput_1 = tableNameForSearch_tOracleOutput_1.replaceAll("\"","");
                                }
                                boolean whetherExist_tOracleOutput_1 = false;
                                try (java.sql.ResultSet rsTable_tOracleOutput_1 = dbMetaData_tOracleOutput_1.getTables(null, dbschemaForSearch_tOracleOutput_1, tableNameForSearch_tOracleOutput_1, new String[]{"TABLE"})) {
                                    if(rsTable_tOracleOutput_1.next()) {
                                        whetherExist_tOracleOutput_1 = true;
                                    }
                                }

                                if(!whetherExist_tOracleOutput_1) {
                                    try (java.sql.Statement stmtCreate_tOracleOutput_1 = conn_tOracleOutput_1.createStatement()) {
                                        stmtCreate_tOracleOutput_1.execute("CREATE TABLE " + tableName_tOracleOutput_1 + "(oViaAdmin VARCHAR2(200)  ,oFFarmaceutica VARCHAR2(100)  ,oNGenerico VARCHAR2(400)  ,oConcentracion VARCHAR2(50)  ,oUnidosis VARCHAR2(2)  ,oUMedida VARCHAR2(100)  ,oFabricante VARCHAR2(500)  ,oImportador VARCHAR2(500)  ,State VARCHAR2(50)  ,Ins VARCHAR2(50)  ,ErrorMessage VARCHAR2(50)  ,CodBarras VARCHAR2(20)  ,NComercial VARCHAR2(150)  ,PComercial VARCHAR2(500)  ,ViaAdmin VARCHAR2(200)  ,FFarmaceutica VARCHAR2(100)  ,NGenerico VARCHAR2(400)  ,Concentracion VARCHAR2(50)  ,Unidosis VARCHAR2(2)  ,UMedida VARCHAR2(100)  ,CantUMedida VARCHAR2(10)  ,CantMinima VARCHAR2(10)  ,RegInvima VARCHAR2(50)  ,FExpRegInvima VARCHAR2(15)  ,FVenRegInvima VARCHAR2(15)  ,FActivoCum VARCHAR2(15)  ,FInactivoCum VARCHAR2(15)  ,Expediente VARCHAR2(25)  ,Consecutivo VARCHAR2(10)  ,Cum VARCHAR2(35)  ,Origen VARCHAR2(500)  ,Caracteristicas VARCHAR2(2000)  ,Contraindicaciones VARCHAR2(2000)  ,EfectosPosteriores VARCHAR2(2000)  ,RiesgosAsociados VARCHAR2(2000)  ,DosisAplicacion VARCHAR2(500)  ,NITFabricante VARCHAR2(100)  ,Fabricante VARCHAR2(500)  ,NITImportador VARCHAR2(100)  ,Importador VARCHAR2(500)  ,usuariosId DEC(10,0)  ,uorgId DEC(10,0)  )");
                                    }
                                }
                String insert_tOracleOutput_1 = "INSERT INTO " + tableName_tOracleOutput_1 + " (oViaAdmin,oFFarmaceutica,oNGenerico,oConcentracion,oUnidosis,oUMedida,oFabricante,oImportador,State,Ins,ErrorMessage,CodBarras,NComercial,PComercial,ViaAdmin,FFarmaceutica,NGenerico,Concentracion,Unidosis,UMedida,CantUMedida,CantMinima,RegInvima,FExpRegInvima,FVenRegInvima,FActivoCum,FInactivoCum,Expediente,Consecutivo,Cum,Origen,Caracteristicas,Contraindicaciones,EfectosPosteriores,RiesgosAsociados,DosisAplicacion,NITFabricante,Fabricante,NITImportador,Importador,usuariosId,uorgId) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_1 = conn_tOracleOutput_1.prepareStatement(insert_tOracleOutput_1);
                        resourceMap.put("pstmt_tOracleOutput_1", pstmt_tOracleOutput_1);





 



/**
 * [tOracleOutput_1 begin ] stop
 */



	
	/**
	 * [tMap_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_12", false);
		start_Hash.put("tMap_12", System.currentTimeMillis());
		
	
	currentComponent="tMap_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tMap_12 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row43Struct> tHash_Lookup_row43 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row43Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row43Struct>) 
					globalMap.get( "tHash_Lookup_row43" ))
					;					
					
	
		tHash_Lookup_row43.initGet();
	

row43Struct row43HashKey = new row43Struct();
row43Struct row43Default = new row43Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_12__Struct  {
	String codigo_barras;
	String nombre_comercial;
	String presentacion_comercial;
	String via_de_administracion;
	String forma_farmaceutica;
	String nombre_generico;
	String concentracion;
	String unidosis;
	String unidad_medida;
	String cantidad_umedida;
	String cantidad_minima;
	String registro_invima;
	String fecha_expedicion_reg_invima;
	String fecha_vencimineto_reg_invima;
	String fecha_activo_cum;
	String fecha_inactivo_cum;
	String cum;
	String lugar_de_origen;
	String caracteristicas;
	String contraindicaciones;
	String efectos_posterior;
	String riesgos_asociados;
	String dosis_para_aplicacion;
	String nit_fabricante;
	String fabricante;
	String nit_importador;
	String importador;
}
Var__tMap_12__Struct Var__tMap_12 = new Var__tMap_12__Struct();
// ###############################

// ###############################
// # Outputs initialization
next11Struct next11_tmp = new next11Struct();
// ###############################

        
        



        









 



/**
 * [tMap_12 begin ] stop
 */



	
	/**
	 * [tFilterRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_3", false);
		start_Hash.put("tFilterRow_3", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tFilterRow_3 = 0;
		
    int nb_line_tFilterRow_3 = 0;
    int nb_line_ok_tFilterRow_3 = 0;
    int nb_line_reject_tFilterRow_3 = 0;

    class Operator_tFilterRow_3 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_3(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_3 begin ] stop
 */



	
	/**
	 * [tFileInputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputDelimited_1", false);
		start_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputDelimited_1";
	
	
		int tos_count_tFileInputDelimited_1 = 0;
		
	
	
	
 
	
	
	final routines.system.RowState rowstate_tFileInputDelimited_1 = new routines.system.RowState();
	
	
				int nb_line_tFileInputDelimited_1 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_1 = null;
				int limit_tFileInputDelimited_1 = -1;
				try{
					
						Object filename_tFileInputDelimited_1 = (java.io.InputStream)context.Contenido;
						if(filename_tFileInputDelimited_1 instanceof java.io.InputStream){
							
			int footer_value_tFileInputDelimited_1 = 0, random_value_tFileInputDelimited_1 = -1;
			if(footer_value_tFileInputDelimited_1 >0 || random_value_tFileInputDelimited_1 > 0){
				throw new java.lang.Exception("When the input source is a stream,footer and random shouldn't be bigger than 0.");				
			}
		
						}
						try {
							fid_tFileInputDelimited_1 = new org.talend.fileprocess.FileInputDelimited((java.io.InputStream)context.Contenido, "ISO-8859-15",";","\n",true,1,0,
									limit_tFileInputDelimited_1
								,-1, false);
						} catch(java.lang.Exception e) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",e.getMessage());
							
								
								System.err.println(e.getMessage());
							
						}
					
				    
					while (fid_tFileInputDelimited_1!=null && fid_tFileInputDelimited_1.nextRecord()) {
						rowstate_tFileInputDelimited_1.reset();
						
			    						row4 = null;			
												
									boolean whetherReject_tFileInputDelimited_1 = false;
									row4 = new row4Struct();
									try {
										
				int columnIndexWithD_tFileInputDelimited_1 = 0;
				
					columnIndexWithD_tFileInputDelimited_1 = 0;
					
							row4.CODIGO_BARRAS = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 1;
					
							row4.NOMBRE_COMERCIAL = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 2;
					
							row4.PRESENTACION_COMERCIAL = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 3;
					
							row4.VIA_DE_ADMINISTRACION = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 4;
					
							row4.FORMA_FARMACEUTICA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 5;
					
							row4.NOMBRE_GENERICO = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 6;
					
							row4.CONCENTRACION = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 7;
					
							row4.UNIDOSIS = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 8;
					
							row4.UNIDAD_MEDIDA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 9;
					
							row4.CANTIDAD_UMEDIDA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 10;
					
							row4.CANTIDAD_MINIMA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 11;
					
							row4.REGISTRO_INVIMA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 12;
					
							row4.FECHA_EXPEDICION_REG__INVIMA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 13;
					
							row4.FECHA_VENCIMIENTO_REG_INVIMA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 14;
					
							row4.FECHA_ACTIVO_CUM = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 15;
					
							row4.FECHA_INACTIVO_CUM = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 16;
					
							row4.CUM = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 17;
					
							row4.LUGAR_DE_ORIGEN = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 18;
					
							row4.CARACTERISTICAS = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 19;
					
							row4.CONTRAINDICACIONES = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 20;
					
							row4.EFECTOS_POSTERIOR = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 21;
					
							row4.RIESGOS_ASOCIADOS = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 22;
					
							row4.DOSIS_PARA_APLICACION = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 23;
					
							row4.NIT_FABRICANTE = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 24;
					
							row4.FABRICANTE = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 25;
					
							row4.NIT_IMPORTADOR = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 26;
					
							row4.IMPORTADOR = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
				
										
										if(rowstate_tFileInputDelimited_1.getException()!=null) {
											throw rowstate_tFileInputDelimited_1.getException();
										}
										
										
							
			    					} catch (java.lang.Exception e) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",e.getMessage());
			        					whetherReject_tFileInputDelimited_1 = true;
			        					
			                					System.err.println(e.getMessage());
			                					row4 = null;
			                				
										
			    					}
								

 



/**
 * [tFileInputDelimited_1 begin ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 


	tos_count_tFileInputDelimited_1++;

/**
 * [tFileInputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 



/**
 * [tFileInputDelimited_1 process_data_begin ] stop
 */
// Start of branch "row4"
if(row4 != null) { 



	
	/**
	 * [tFilterRow_3 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					

          row16 = null;
    Operator_tFilterRow_3 ope_tFilterRow_3 = new Operator_tFilterRow_3("||");
            ope_tFilterRow_3.matches((row4.CODIGO_BARRAS == null? false : row4.CODIGO_BARRAS.compareTo("") != 0)
                           , "CODIGO_BARRAS.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.NOMBRE_COMERCIAL == null? false : row4.NOMBRE_COMERCIAL.compareTo("") != 0)
                           , "NOMBRE_COMERCIAL.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.PRESENTACION_COMERCIAL == null? false : row4.PRESENTACION_COMERCIAL.compareTo("") != 0)
                           , "PRESENTACION_COMERCIAL.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.VIA_DE_ADMINISTRACION == null? false : row4.VIA_DE_ADMINISTRACION.compareTo("") != 0)
                           , "VIA_DE_ADMINISTRACION.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.FORMA_FARMACEUTICA == null? false : row4.FORMA_FARMACEUTICA.compareTo("") != 0)
                           , "FORMA_FARMACEUTICA.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.NOMBRE_GENERICO == null? false : row4.NOMBRE_GENERICO.compareTo("") != 0)
                           , "NOMBRE_GENERICO.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.CONCENTRACION == null? false : row4.CONCENTRACION.compareTo("") != 0)
                           , "CONCENTRACION.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.UNIDOSIS == null? false : row4.UNIDOSIS.compareTo("") != 0)
                           , "UNIDOSIS.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.UNIDAD_MEDIDA == null? false : row4.UNIDAD_MEDIDA.compareTo("") != 0)
                           , "UNIDAD_MEDIDA.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.CANTIDAD_UMEDIDA == null? false : row4.CANTIDAD_UMEDIDA.compareTo("") != 0)
                           , "CANTIDAD_UMEDIDA.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.CANTIDAD_MINIMA == null? false : row4.CANTIDAD_MINIMA.compareTo("") != 0)
                           , "CANTIDAD_MINIMA.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.REGISTRO_INVIMA == null? false : row4.REGISTRO_INVIMA.compareTo("") != 0)
                           , "REGISTRO_INVIMA.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.FECHA_EXPEDICION_REG__INVIMA == null? false : row4.FECHA_EXPEDICION_REG__INVIMA.compareTo("") != 0)
                           , "FECHA_EXPEDICION_REG__INVIMA.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.FECHA_VENCIMIENTO_REG_INVIMA == null? false : row4.FECHA_VENCIMIENTO_REG_INVIMA.compareTo("") != 0)
                           , "FECHA_VENCIMIENTO_REG_INVIMA.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.FECHA_ACTIVO_CUM == null? false : row4.FECHA_ACTIVO_CUM.compareTo("") != 0)
                           , "FECHA_ACTIVO_CUM.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.CUM == null? false : row4.CUM.compareTo("") != 0)
                           , "CUM.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.LUGAR_DE_ORIGEN == null? false : row4.LUGAR_DE_ORIGEN.compareTo("") != 0)
                           , "LUGAR_DE_ORIGEN.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.CARACTERISTICAS == null? false : row4.CARACTERISTICAS.compareTo("") != 0)
                           , "CARACTERISTICAS.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.CONTRAINDICACIONES == null? false : row4.CONTRAINDICACIONES.compareTo("") != 0)
                           , "CONTRAINDICACIONES.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.EFECTOS_POSTERIOR == null? false : row4.EFECTOS_POSTERIOR.compareTo("") != 0)
                           , "EFECTOS_POSTERIOR.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.RIESGOS_ASOCIADOS == null? false : row4.RIESGOS_ASOCIADOS.compareTo("") != 0)
                           , "RIESGOS_ASOCIADOS.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.DOSIS_PARA_APLICACION == null? false : row4.DOSIS_PARA_APLICACION.compareTo("") != 0)
                           , "DOSIS_PARA_APLICACION.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.NIT_FABRICANTE == null? false : row4.NIT_FABRICANTE.compareTo("") != 0)
                           , "NIT_FABRICANTE.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.FABRICANTE == null? false : row4.FABRICANTE.compareTo("") != 0)
                           , "FABRICANTE.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.NIT_IMPORTADOR == null? false : row4.NIT_IMPORTADOR.compareTo("") != 0)
                           , "NIT_IMPORTADOR.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.CODIGO_BARRAS == null? false : row4.CODIGO_BARRAS.compareTo("") != 0)
                           , "CODIGO_BARRAS.compareTo(\"\") != 0 failed");
            ope_tFilterRow_3.matches((row4.IMPORTADOR == null? false : row4.IMPORTADOR.compareTo("") != 0)
                           , "IMPORTADOR.compareTo(\"\") != 0 failed");
    
    if (ope_tFilterRow_3.getMatchFlag()) {
              if(row16 == null){ 
                row16 = new row16Struct();
              }
               row16.CODIGO_BARRAS = row4.CODIGO_BARRAS;
               row16.NOMBRE_COMERCIAL = row4.NOMBRE_COMERCIAL;
               row16.PRESENTACION_COMERCIAL = row4.PRESENTACION_COMERCIAL;
               row16.VIA_DE_ADMINISTRACION = row4.VIA_DE_ADMINISTRACION;
               row16.FORMA_FARMACEUTICA = row4.FORMA_FARMACEUTICA;
               row16.NOMBRE_GENERICO = row4.NOMBRE_GENERICO;
               row16.CONCENTRACION = row4.CONCENTRACION;
               row16.UNIDOSIS = row4.UNIDOSIS;
               row16.UNIDAD_MEDIDA = row4.UNIDAD_MEDIDA;
               row16.CANTIDAD_UMEDIDA = row4.CANTIDAD_UMEDIDA;
               row16.CANTIDAD_MINIMA = row4.CANTIDAD_MINIMA;
               row16.REGISTRO_INVIMA = row4.REGISTRO_INVIMA;
               row16.FECHA_EXPEDICION_REG__INVIMA = row4.FECHA_EXPEDICION_REG__INVIMA;
               row16.FECHA_VENCIMIENTO_REG_INVIMA = row4.FECHA_VENCIMIENTO_REG_INVIMA;
               row16.FECHA_ACTIVO_CUM = row4.FECHA_ACTIVO_CUM;
               row16.FECHA_INACTIVO_CUM = row4.FECHA_INACTIVO_CUM;
               row16.CUM = row4.CUM;
               row16.LUGAR_DE_ORIGEN = row4.LUGAR_DE_ORIGEN;
               row16.CARACTERISTICAS = row4.CARACTERISTICAS;
               row16.CONTRAINDICACIONES = row4.CONTRAINDICACIONES;
               row16.EFECTOS_POSTERIOR = row4.EFECTOS_POSTERIOR;
               row16.RIESGOS_ASOCIADOS = row4.RIESGOS_ASOCIADOS;
               row16.DOSIS_PARA_APLICACION = row4.DOSIS_PARA_APLICACION;
               row16.NIT_FABRICANTE = row4.NIT_FABRICANTE;
               row16.FABRICANTE = row4.FABRICANTE;
               row16.NIT_IMPORTADOR = row4.NIT_IMPORTADOR;
               row16.IMPORTADOR = row4.IMPORTADOR;    
      nb_line_ok_tFilterRow_3++;
    } else {
      nb_line_reject_tFilterRow_3++;
    }

nb_line_tFilterRow_3++;

 


	tos_count_tFilterRow_3++;

/**
 * [tFilterRow_3 main ] stop
 */
	
	/**
	 * [tFilterRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_3";
	
	

 



/**
 * [tFilterRow_3 process_data_begin ] stop
 */
// Start of branch "row16"
if(row16 != null) { 



	
	/**
	 * [tMap_12 main ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row16"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_12 = false;
		
						row43Struct row43 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_12 = false;
		boolean mainRowRejected_tMap_12 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row43" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow43 = false;
       		  	    	
       		  	    	
 							row43Struct row43ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_12) { // G_TM_M_020

								

								
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row43.lookup( row43HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row43.hasNext()) { // G_TM_M_090

  								
		  				
	  								
						
									
	
		  								forceLooprow43 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow43 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row43 != null && tHash_Lookup_row43.hasNext()) || forceLooprow43) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row43'
									
                    		  	 
							   
                    		  	 
	       		  	    	row43Struct fromLookup_row43 = null;
							row43 = row43Default;
										 
							
								
								if(!forceLooprow43) { // G 46
								
							
								 
							
								
								fromLookup_row43 = tHash_Lookup_row43.next();

							

							if(fromLookup_row43 != null) {
								row43 = fromLookup_row43;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow43 = false;
									 	
							
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_12__Struct Var = Var__tMap_12;
Var.codigo_barras = StringHandling.TRIM(row16.CODIGO_BARRAS);
Var.nombre_comercial = StringHandling.TRIM(row16.NOMBRE_COMERCIAL);
Var.presentacion_comercial = StringHandling.TRIM(row16.PRESENTACION_COMERCIAL);
Var.via_de_administracion = StringHandling.TRIM(row16.VIA_DE_ADMINISTRACION);
Var.forma_farmaceutica = StringHandling.TRIM(row16.FORMA_FARMACEUTICA);
Var.nombre_generico = StringHandling.TRIM(row16.NOMBRE_GENERICO);
Var.concentracion = StringHandling.TRIM(row16.CONCENTRACION);
Var.unidosis = StringHandling.TRIM(row16.UNIDOSIS);
Var.unidad_medida = StringHandling.TRIM(row16.UNIDAD_MEDIDA);
Var.cantidad_umedida = StringHandling.TRIM(row16.CANTIDAD_UMEDIDA) ;
Var.cantidad_minima = StringHandling.TRIM(row16.CANTIDAD_MINIMA) ;
Var.registro_invima = StringHandling.TRIM(row16.REGISTRO_INVIMA) ;
Var.fecha_expedicion_reg_invima = StringHandling.TRIM(row16.FECHA_EXPEDICION_REG__INVIMA) ;
Var.fecha_vencimineto_reg_invima = StringHandling.TRIM(row16.FECHA_VENCIMIENTO_REG_INVIMA) ;
Var.fecha_activo_cum = StringHandling.TRIM(row16.FECHA_ACTIVO_CUM) ;
Var.fecha_inactivo_cum = StringHandling.TRIM(row16.FECHA_INACTIVO_CUM) ;
Var.cum = StringHandling.TRIM(row16.CUM) ;
Var.lugar_de_origen = StringHandling.TRIM(row16.LUGAR_DE_ORIGEN) ;
Var.caracteristicas = StringHandling.TRIM(row16.CARACTERISTICAS) ;
Var.contraindicaciones = StringHandling.TRIM(row16.CONTRAINDICACIONES) ;
Var.efectos_posterior = StringHandling.TRIM(row16.EFECTOS_POSTERIOR) ;
Var.riesgos_asociados = StringHandling.TRIM(row16.RIESGOS_ASOCIADOS) ;
Var.dosis_para_aplicacion = StringHandling.TRIM(row16.DOSIS_PARA_APLICACION) ;
Var.nit_fabricante = StringHandling.TRIM(row16.NIT_FABRICANTE) ;
Var.fabricante = StringHandling.TRIM(row16.FABRICANTE) ;
Var.nit_importador = StringHandling.TRIM(row16.NIT_IMPORTADOR) ;
Var.importador = StringHandling.TRIM(row16.IMPORTADOR) ;// ###############################
        // ###############################
        // # Output tables

next11 = null;


// # Output table : 'next11'
next11_tmp.oViaAdmin = Utils.mayusculasSinAcentos(Var.via_de_administracion);
next11_tmp.oFFarmaceutica = Utils.mayusculasSinAcentos(Var.forma_farmaceutica);
next11_tmp.oNGenerico = Utils.mayusculasSinAcentos(Var.nombre_generico);
next11_tmp.oConcentracion = Utils.mayusculasSinAcentos(Var.concentracion);
next11_tmp.oUnidosis = Utils.mayusculasSinAcentos(Var.unidosis);
next11_tmp.oUMedida = Utils.mayusculasSinAcentos(Var.unidad_medida);
next11_tmp.oFabricante = Utils.mayusculasSinAcentos(Var.fabricante);
next11_tmp.oImportador = Utils.mayusculasSinAcentos(Var.importador);
next11_tmp.State = null;
next11_tmp.Ins = null;
next11_tmp.ErrorMessage = null;
next11_tmp.CodBarras = Utils.mayusculasSinAcentos(Var.codigo_barras);
next11_tmp.NComercial = Utils.mayusculasSinAcentos(Var.nombre_comercial);
next11_tmp.PComercial = Utils.mayusculasSinAcentos(Var.presentacion_comercial);
next11_tmp.ViaAdmin = Utils.mayusculasSinAcentos(Var.via_de_administracion);
next11_tmp.FFarmaceutica = Utils.mayusculasSinAcentos(Var.forma_farmaceutica);
next11_tmp.NGenerico = Utils.mayusculasSinAcentos(Var.nombre_generico);
next11_tmp.Concentracion = Utils.mayusculasSinAcentos(Var.concentracion);
next11_tmp.Unidosis = Utils.mayusculasSinAcentos(Var.unidosis);
next11_tmp.UMedida = Utils.mayusculasSinAcentos(Var.unidad_medida);
next11_tmp.CantUMedida = Utils.mayusculasSinAcentos(Var.cantidad_umedida);
next11_tmp.CantMinima = Utils.mayusculasSinAcentos(Var.cantidad_minima);
next11_tmp.RegInvima = Utils.mayusculasSinAcentos(Var.registro_invima);
next11_tmp.FExpRegInvima = Var.fecha_expedicion_reg_invima ;
next11_tmp.FVenRegInvima = Var.fecha_vencimineto_reg_invima ;
next11_tmp.FActivoCum = Var.fecha_activo_cum ;
next11_tmp.FInactivoCum = Var.fecha_inactivo_cum ;
next11_tmp.Expediente = null;
next11_tmp.Consecutivo = null;
next11_tmp.Cum = Utils.mayusculasSinAcentos(Var.cum);
next11_tmp.Origen = Utils.mayusculasSinAcentos(Var.lugar_de_origen);
next11_tmp.Caracteristicas = Utils.mayusculasSinAcentos(Var.caracteristicas);
next11_tmp.Contraindicaciones = Utils.mayusculasSinAcentos(Var.contraindicaciones);
next11_tmp.EfectosPosteriores = Utils.mayusculasSinAcentos(Var.efectos_posterior);
next11_tmp.RiesgosAsociados = Utils.mayusculasSinAcentos(Var.riesgos_asociados);
next11_tmp.DosisAplicacion = Utils.mayusculasSinAcentos(Var.dosis_para_aplicacion);
next11_tmp.NITFabricante = Utils.mayusculasSinAcentos(Var.nit_fabricante);
next11_tmp.Fabricante = Utils.mayusculasSinAcentos(Var.fabricante);
next11_tmp.NITImportador = Utils.mayusculasSinAcentos(Var.nit_importador);
next11_tmp.Importador = Utils.mayusculasSinAcentos(Var.importador);
next11_tmp.usuariosId = row43.usuariosId;
next11_tmp.uorgId = row43.uorgId;
next11 = next11_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_12 = false;










 


	tos_count_tMap_12++;

/**
 * [tMap_12 main ] stop
 */
	
	/**
	 * [tMap_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 process_data_begin ] stop
 */
// Start of branch "next11"
if(next11 != null) { 



	
	/**
	 * [tOracleOutput_1 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"next11"
						
						);
					}
					



        whetherReject_tOracleOutput_1 = false;
                        if(next11.oViaAdmin == null) {
pstmt_tOracleOutput_1.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(1, next11.oViaAdmin);
}

                        if(next11.oFFarmaceutica == null) {
pstmt_tOracleOutput_1.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(2, next11.oFFarmaceutica);
}

                        if(next11.oNGenerico == null) {
pstmt_tOracleOutput_1.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(3, next11.oNGenerico);
}

                        if(next11.oConcentracion == null) {
pstmt_tOracleOutput_1.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(4, next11.oConcentracion);
}

                        if(next11.oUnidosis == null) {
pstmt_tOracleOutput_1.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(5, next11.oUnidosis);
}

                        if(next11.oUMedida == null) {
pstmt_tOracleOutput_1.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(6, next11.oUMedida);
}

                        if(next11.oFabricante == null) {
pstmt_tOracleOutput_1.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(7, next11.oFabricante);
}

                        if(next11.oImportador == null) {
pstmt_tOracleOutput_1.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(8, next11.oImportador);
}

                        if(next11.State == null) {
pstmt_tOracleOutput_1.setNull(9, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(9, next11.State);
}

                        if(next11.Ins == null) {
pstmt_tOracleOutput_1.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(10, next11.Ins);
}

                        if(next11.ErrorMessage == null) {
pstmt_tOracleOutput_1.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(11, next11.ErrorMessage);
}

                        if(next11.CodBarras == null) {
pstmt_tOracleOutput_1.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(12, next11.CodBarras);
}

                        if(next11.NComercial == null) {
pstmt_tOracleOutput_1.setNull(13, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(13, next11.NComercial);
}

                        if(next11.PComercial == null) {
pstmt_tOracleOutput_1.setNull(14, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(14, next11.PComercial);
}

                        if(next11.ViaAdmin == null) {
pstmt_tOracleOutput_1.setNull(15, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(15, next11.ViaAdmin);
}

                        if(next11.FFarmaceutica == null) {
pstmt_tOracleOutput_1.setNull(16, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(16, next11.FFarmaceutica);
}

                        if(next11.NGenerico == null) {
pstmt_tOracleOutput_1.setNull(17, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(17, next11.NGenerico);
}

                        if(next11.Concentracion == null) {
pstmt_tOracleOutput_1.setNull(18, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(18, next11.Concentracion);
}

                        if(next11.Unidosis == null) {
pstmt_tOracleOutput_1.setNull(19, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(19, next11.Unidosis);
}

                        if(next11.UMedida == null) {
pstmt_tOracleOutput_1.setNull(20, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(20, next11.UMedida);
}

                        if(next11.CantUMedida == null) {
pstmt_tOracleOutput_1.setNull(21, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(21, next11.CantUMedida);
}

                        if(next11.CantMinima == null) {
pstmt_tOracleOutput_1.setNull(22, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(22, next11.CantMinima);
}

                        if(next11.RegInvima == null) {
pstmt_tOracleOutput_1.setNull(23, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(23, next11.RegInvima);
}

                        if(next11.FExpRegInvima == null) {
pstmt_tOracleOutput_1.setNull(24, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(24, next11.FExpRegInvima);
}

                        if(next11.FVenRegInvima == null) {
pstmt_tOracleOutput_1.setNull(25, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(25, next11.FVenRegInvima);
}

                        if(next11.FActivoCum == null) {
pstmt_tOracleOutput_1.setNull(26, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(26, next11.FActivoCum);
}

                        if(next11.FInactivoCum == null) {
pstmt_tOracleOutput_1.setNull(27, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(27, next11.FInactivoCum);
}

                        if(next11.Expediente == null) {
pstmt_tOracleOutput_1.setNull(28, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(28, next11.Expediente);
}

                        if(next11.Consecutivo == null) {
pstmt_tOracleOutput_1.setNull(29, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(29, next11.Consecutivo);
}

                        if(next11.Cum == null) {
pstmt_tOracleOutput_1.setNull(30, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(30, next11.Cum);
}

                        if(next11.Origen == null) {
pstmt_tOracleOutput_1.setNull(31, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(31, next11.Origen);
}

                        if(next11.Caracteristicas == null) {
pstmt_tOracleOutput_1.setNull(32, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(32, next11.Caracteristicas);
}

                        if(next11.Contraindicaciones == null) {
pstmt_tOracleOutput_1.setNull(33, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(33, next11.Contraindicaciones);
}

                        if(next11.EfectosPosteriores == null) {
pstmt_tOracleOutput_1.setNull(34, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(34, next11.EfectosPosteriores);
}

                        if(next11.RiesgosAsociados == null) {
pstmt_tOracleOutput_1.setNull(35, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(35, next11.RiesgosAsociados);
}

                        if(next11.DosisAplicacion == null) {
pstmt_tOracleOutput_1.setNull(36, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(36, next11.DosisAplicacion);
}

                        if(next11.NITFabricante == null) {
pstmt_tOracleOutput_1.setNull(37, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(37, next11.NITFabricante);
}

                        if(next11.Fabricante == null) {
pstmt_tOracleOutput_1.setNull(38, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(38, next11.Fabricante);
}

                        if(next11.NITImportador == null) {
pstmt_tOracleOutput_1.setNull(39, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(39, next11.NITImportador);
}

                        if(next11.Importador == null) {
pstmt_tOracleOutput_1.setNull(40, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(40, next11.Importador);
}

                        pstmt_tOracleOutput_1.setBigDecimal(41, next11.usuariosId);

                        pstmt_tOracleOutput_1.setBigDecimal(42, next11.uorgId);

                try {
                    nb_line_tOracleOutput_1++;
                    int processedCount_tOracleOutput_1 = pstmt_tOracleOutput_1.executeUpdate();
                    insertedCount_tOracleOutput_1 += processedCount_tOracleOutput_1;
                    rowsToCommitCount_tOracleOutput_1 += processedCount_tOracleOutput_1;
                } catch(java.lang.Exception e_tOracleOutput_1) {
globalMap.put("tOracleOutput_1_ERROR_MESSAGE",e_tOracleOutput_1.getMessage());
                    whetherReject_tOracleOutput_1 = true;
                            System.err.print(e_tOracleOutput_1.getMessage());
                }

 


	tos_count_tOracleOutput_1++;

/**
 * [tOracleOutput_1 main ] stop
 */
	
	/**
	 * [tOracleOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	

 



/**
 * [tOracleOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	

 



/**
 * [tOracleOutput_1 process_data_end ] stop
 */

} // End of branch "next11"



	
		} // close loop of lookup 'row43' // G_TM_M_043
	
	
	/**
	 * [tMap_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 process_data_end ] stop
 */

} // End of branch "row16"




	
	/**
	 * [tFilterRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_3";
	
	

 



/**
 * [tFilterRow_3 process_data_end ] stop
 */

} // End of branch "row4"




	
	/**
	 * [tFileInputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 



/**
 * [tFileInputDelimited_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	



            }
            }finally{
                if(!((Object)((java.io.InputStream)context.Contenido) instanceof java.io.InputStream)){
                	if(fid_tFileInputDelimited_1!=null){
                		fid_tFileInputDelimited_1.close();
                	}
                }
                if(fid_tFileInputDelimited_1!=null){
                	globalMap.put("tFileInputDelimited_1_NB_LINE", fid_tFileInputDelimited_1.getRowNumber());
					
                }
			}
			  

 

ok_Hash.put("tFileInputDelimited_1", true);
end_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());




/**
 * [tFileInputDelimited_1 end ] stop
 */

	
	/**
	 * [tFilterRow_3 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_3";
	
	
    globalMap.put("tFilterRow_3_NB_LINE", nb_line_tFilterRow_3);
    globalMap.put("tFilterRow_3_NB_LINE_OK", nb_line_ok_tFilterRow_3);
    globalMap.put("tFilterRow_3_NB_LINE_REJECT", nb_line_reject_tFilterRow_3);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tFilterRow_3", true);
end_Hash.put("tFilterRow_3", System.currentTimeMillis());




/**
 * [tFilterRow_3 end ] stop
 */

	
	/**
	 * [tMap_12 end ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tMap_12", true);
end_Hash.put("tMap_12", System.currentTimeMillis());




/**
 * [tMap_12 end ] stop
 */

	
	/**
	 * [tOracleOutput_1 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	
	



	
        if(pstmt_tOracleOutput_1 != null) {
			
				pstmt_tOracleOutput_1.close();
				resourceMap.remove("pstmt_tOracleOutput_1");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_1", true);

	
	nb_line_deleted_tOracleOutput_1=nb_line_deleted_tOracleOutput_1+ deletedCount_tOracleOutput_1;
	nb_line_update_tOracleOutput_1=nb_line_update_tOracleOutput_1 + updatedCount_tOracleOutput_1;
	nb_line_inserted_tOracleOutput_1=nb_line_inserted_tOracleOutput_1 + insertedCount_tOracleOutput_1;
	nb_line_rejected_tOracleOutput_1=nb_line_rejected_tOracleOutput_1 + rejectedCount_tOracleOutput_1;
	
        globalMap.put("tOracleOutput_1_NB_LINE",nb_line_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_UPDATED",nb_line_update_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_1);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"next11");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_1", true);
end_Hash.put("tOracleOutput_1", System.currentTimeMillis());




/**
 * [tOracleOutput_1 end ] stop
 */









						if(execStat){
							runStat.updateStatOnConnection("iterate1", 2, "exec" + NB_ITERATE_tFileInputDelimited_1);
						}				
					




	
	/**
	 * [tFlowToIterate_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_end ] stop
 */

} // End of branch "next_1"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_3 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

}
}finally{
	if (rs_tOracleInput_3 != null) {
		rs_tOracleInput_3.close();
	}
	if (stmt_tOracleInput_3 != null) {
		stmt_tOracleInput_3.close();
	}
}

globalMap.put("tOracleInput_3_NB_LINE",nb_line_tOracleInput_3);
 

ok_Hash.put("tOracleInput_3", true);
end_Hash.put("tOracleInput_3", System.currentTimeMillis());




/**
 * [tOracleInput_3 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tOracleSP_1 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	


	statement_tOracleSP_1.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"upestado");
			  	}
			  	
 

ok_Hash.put("tOracleSP_1", true);
end_Hash.put("tOracleSP_1", System.currentTimeMillis());




/**
 * [tOracleSP_1 end ] stop
 */




	
	/**
	 * [tJavaRow_3 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

globalMap.put("tJavaRow_3_NB_LINE",nb_line_tJavaRow_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"next_1");
			  	}
			  	
 

ok_Hash.put("tJavaRow_3", true);
end_Hash.put("tJavaRow_3", System.currentTimeMillis());




/**
 * [tJavaRow_3 end ] stop
 */

	
	/**
	 * [tFlowToIterate_1 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

globalMap.put("tFlowToIterate_1_NB_LINE",nb_line_tFlowToIterate_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_1", true);
end_Hash.put("tFlowToIterate_1", System.currentTimeMillis());




/**
 * [tFlowToIterate_1 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk4", 0, "ok");
								} 
							
							tOracleInput_10Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_12"
					     			globalMap.remove("tHash_Lookup_row43"); 
				     			
				try{
					
	
	/**
	 * [tOracleInput_3 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tOracleSP_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 finally ] stop
 */




	
	/**
	 * [tJavaRow_3 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 finally ] stop
 */

	
	/**
	 * [tFlowToIterate_1 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 finally ] stop
 */

	
	/**
	 * [tFileInputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 



/**
 * [tFileInputDelimited_1 finally ] stop
 */

	
	/**
	 * [tFilterRow_3 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_3";
	
	

 



/**
 * [tFilterRow_3 finally ] stop
 */

	
	/**
	 * [tMap_12 finally ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 finally ] stop
 */

	
	/**
	 * [tOracleOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_1") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_1 = null;
                if ((pstmtToClose_tOracleOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_1")) != null) {
                    pstmtToClose_tOracleOutput_1.close();
                }
    }
 



/**
 * [tOracleOutput_1 finally ] stop
 */





















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class next_8Struct implements routines.system.IPersistableRow<next_8Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public Integer ITEM;

				public Integer getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 20;
				}
				public Integer ITEMPrecision(){
				    return 0;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public String CODIGODEBARRAS;

				public String getCODIGODEBARRAS () {
					return this.CODIGODEBARRAS;
				}

				public Boolean CODIGODEBARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGODEBARRASIsKey(){
				    return false;
				}
				public Integer CODIGODEBARRASLength(){
				    return 20;
				}
				public Integer CODIGODEBARRASPrecision(){
				    return 0;
				}
				public String CODIGODEBARRASDefault(){
				
					return null;
				
				}
				public String CODIGODEBARRASComment(){
				
				    return "";
				
				}
				public String CODIGODEBARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGODEBARRASOriginalDbColumnName(){
				
					return "CODIGODEBARRAS";
				
				}

				
			    public String NOMBRECOMERCIAL;

				public String getNOMBRECOMERCIAL () {
					return this.NOMBRECOMERCIAL;
				}

				public Boolean NOMBRECOMERCIALIsNullable(){
				    return true;
				}
				public Boolean NOMBRECOMERCIALIsKey(){
				    return false;
				}
				public Integer NOMBRECOMERCIALLength(){
				    return 150;
				}
				public Integer NOMBRECOMERCIALPrecision(){
				    return 0;
				}
				public String NOMBRECOMERCIALDefault(){
				
					return null;
				
				}
				public String NOMBRECOMERCIALComment(){
				
				    return "";
				
				}
				public String NOMBRECOMERCIALPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBRECOMERCIALOriginalDbColumnName(){
				
					return "NOMBRECOMERCIAL";
				
				}

				
			    public String PRESENTACIONCOMERCIAL;

				public String getPRESENTACIONCOMERCIAL () {
					return this.PRESENTACIONCOMERCIAL;
				}

				public Boolean PRESENTACIONCOMERCIALIsNullable(){
				    return true;
				}
				public Boolean PRESENTACIONCOMERCIALIsKey(){
				    return false;
				}
				public Integer PRESENTACIONCOMERCIALLength(){
				    return 500;
				}
				public Integer PRESENTACIONCOMERCIALPrecision(){
				    return 0;
				}
				public String PRESENTACIONCOMERCIALDefault(){
				
					return null;
				
				}
				public String PRESENTACIONCOMERCIALComment(){
				
				    return "";
				
				}
				public String PRESENTACIONCOMERCIALPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PRESENTACIONCOMERCIALOriginalDbColumnName(){
				
					return "PRESENTACIONCOMERCIAL";
				
				}

				
			    public String VIADEADMINISTRACION;

				public String getVIADEADMINISTRACION () {
					return this.VIADEADMINISTRACION;
				}

				public Boolean VIADEADMINISTRACIONIsNullable(){
				    return true;
				}
				public Boolean VIADEADMINISTRACIONIsKey(){
				    return false;
				}
				public Integer VIADEADMINISTRACIONLength(){
				    return 200;
				}
				public Integer VIADEADMINISTRACIONPrecision(){
				    return 0;
				}
				public String VIADEADMINISTRACIONDefault(){
				
					return null;
				
				}
				public String VIADEADMINISTRACIONComment(){
				
				    return "";
				
				}
				public String VIADEADMINISTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String VIADEADMINISTRACIONOriginalDbColumnName(){
				
					return "VIADEADMINISTRACION";
				
				}

				
			    public String FORMAFARMACEUTICA;

				public String getFORMAFARMACEUTICA () {
					return this.FORMAFARMACEUTICA;
				}

				public Boolean FORMAFARMACEUTICAIsNullable(){
				    return true;
				}
				public Boolean FORMAFARMACEUTICAIsKey(){
				    return false;
				}
				public Integer FORMAFARMACEUTICALength(){
				    return 100;
				}
				public Integer FORMAFARMACEUTICAPrecision(){
				    return 0;
				}
				public String FORMAFARMACEUTICADefault(){
				
					return null;
				
				}
				public String FORMAFARMACEUTICAComment(){
				
				    return "";
				
				}
				public String FORMAFARMACEUTICAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FORMAFARMACEUTICAOriginalDbColumnName(){
				
					return "FORMAFARMACEUTICA";
				
				}

				
			    public String NOMBREGENERICO;

				public String getNOMBREGENERICO () {
					return this.NOMBREGENERICO;
				}

				public Boolean NOMBREGENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBREGENERICOIsKey(){
				    return false;
				}
				public Integer NOMBREGENERICOLength(){
				    return 400;
				}
				public Integer NOMBREGENERICOPrecision(){
				    return 0;
				}
				public String NOMBREGENERICODefault(){
				
					return null;
				
				}
				public String NOMBREGENERICOComment(){
				
				    return "";
				
				}
				public String NOMBREGENERICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBREGENERICOOriginalDbColumnName(){
				
					return "NOMBREGENERICO";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return 50;
				}
				public Integer CONCENTRACIONPrecision(){
				    return 0;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				
			    public String UNIDOSIS;

				public String getUNIDOSIS () {
					return this.UNIDOSIS;
				}

				public Boolean UNIDOSISIsNullable(){
				    return true;
				}
				public Boolean UNIDOSISIsKey(){
				    return false;
				}
				public Integer UNIDOSISLength(){
				    return 2;
				}
				public Integer UNIDOSISPrecision(){
				    return 0;
				}
				public String UNIDOSISDefault(){
				
					return null;
				
				}
				public String UNIDOSISComment(){
				
				    return "";
				
				}
				public String UNIDOSISPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDOSISOriginalDbColumnName(){
				
					return "UNIDOSIS";
				
				}

				
			    public String UNIDADDEMEDIDA;

				public String getUNIDADDEMEDIDA () {
					return this.UNIDADDEMEDIDA;
				}

				public Boolean UNIDADDEMEDIDAIsNullable(){
				    return true;
				}
				public Boolean UNIDADDEMEDIDAIsKey(){
				    return false;
				}
				public Integer UNIDADDEMEDIDALength(){
				    return 100;
				}
				public Integer UNIDADDEMEDIDAPrecision(){
				    return 0;
				}
				public String UNIDADDEMEDIDADefault(){
				
					return null;
				
				}
				public String UNIDADDEMEDIDAComment(){
				
				    return "";
				
				}
				public String UNIDADDEMEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UNIDADDEMEDIDAOriginalDbColumnName(){
				
					return "UNIDADDEMEDIDA";
				
				}

				
			    public String CANTIDADUNIDADUMEDIDA;

				public String getCANTIDADUNIDADUMEDIDA () {
					return this.CANTIDADUNIDADUMEDIDA;
				}

				public Boolean CANTIDADUNIDADUMEDIDAIsNullable(){
				    return true;
				}
				public Boolean CANTIDADUNIDADUMEDIDAIsKey(){
				    return false;
				}
				public Integer CANTIDADUNIDADUMEDIDALength(){
				    return 10;
				}
				public Integer CANTIDADUNIDADUMEDIDAPrecision(){
				    return 0;
				}
				public String CANTIDADUNIDADUMEDIDADefault(){
				
					return null;
				
				}
				public String CANTIDADUNIDADUMEDIDAComment(){
				
				    return "";
				
				}
				public String CANTIDADUNIDADUMEDIDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDADUNIDADUMEDIDAOriginalDbColumnName(){
				
					return "CANTIDADUNIDADUMEDIDA";
				
				}

				
			    public String CANTIDADMINIMA;

				public String getCANTIDADMINIMA () {
					return this.CANTIDADMINIMA;
				}

				public Boolean CANTIDADMINIMAIsNullable(){
				    return true;
				}
				public Boolean CANTIDADMINIMAIsKey(){
				    return false;
				}
				public Integer CANTIDADMINIMALength(){
				    return 10;
				}
				public Integer CANTIDADMINIMAPrecision(){
				    return 0;
				}
				public String CANTIDADMINIMADefault(){
				
					return null;
				
				}
				public String CANTIDADMINIMAComment(){
				
				    return "";
				
				}
				public String CANTIDADMINIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDADMINIMAOriginalDbColumnName(){
				
					return "CANTIDADMINIMA";
				
				}

				
			    public String REGISTROINVIMA;

				public String getREGISTROINVIMA () {
					return this.REGISTROINVIMA;
				}

				public Boolean REGISTROINVIMAIsNullable(){
				    return true;
				}
				public Boolean REGISTROINVIMAIsKey(){
				    return false;
				}
				public Integer REGISTROINVIMALength(){
				    return 50;
				}
				public Integer REGISTROINVIMAPrecision(){
				    return 0;
				}
				public String REGISTROINVIMADefault(){
				
					return null;
				
				}
				public String REGISTROINVIMAComment(){
				
				    return "";
				
				}
				public String REGISTROINVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String REGISTROINVIMAOriginalDbColumnName(){
				
					return "REGISTROINVIMA";
				
				}

				
			    public String FECHAEXPEDICIONREGINVIMA;

				public String getFECHAEXPEDICIONREGINVIMA () {
					return this.FECHAEXPEDICIONREGINVIMA;
				}

				public Boolean FECHAEXPEDICIONREGINVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHAEXPEDICIONREGINVIMAIsKey(){
				    return false;
				}
				public Integer FECHAEXPEDICIONREGINVIMALength(){
				    return 15;
				}
				public Integer FECHAEXPEDICIONREGINVIMAPrecision(){
				    return 0;
				}
				public String FECHAEXPEDICIONREGINVIMADefault(){
				
					return null;
				
				}
				public String FECHAEXPEDICIONREGINVIMAComment(){
				
				    return "";
				
				}
				public String FECHAEXPEDICIONREGINVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAEXPEDICIONREGINVIMAOriginalDbColumnName(){
				
					return "FECHAEXPEDICIONREGINVIMA";
				
				}

				
			    public String FECHAVENCIMIENTOREGINVIMA;

				public String getFECHAVENCIMIENTOREGINVIMA () {
					return this.FECHAVENCIMIENTOREGINVIMA;
				}

				public Boolean FECHAVENCIMIENTOREGINVIMAIsNullable(){
				    return true;
				}
				public Boolean FECHAVENCIMIENTOREGINVIMAIsKey(){
				    return false;
				}
				public Integer FECHAVENCIMIENTOREGINVIMALength(){
				    return 15;
				}
				public Integer FECHAVENCIMIENTOREGINVIMAPrecision(){
				    return 0;
				}
				public String FECHAVENCIMIENTOREGINVIMADefault(){
				
					return null;
				
				}
				public String FECHAVENCIMIENTOREGINVIMAComment(){
				
				    return "";
				
				}
				public String FECHAVENCIMIENTOREGINVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAVENCIMIENTOREGINVIMAOriginalDbColumnName(){
				
					return "FECHAVENCIMIENTOREGINVIMA";
				
				}

				
			    public String FECHAACTIVOCUM;

				public String getFECHAACTIVOCUM () {
					return this.FECHAACTIVOCUM;
				}

				public Boolean FECHAACTIVOCUMIsNullable(){
				    return true;
				}
				public Boolean FECHAACTIVOCUMIsKey(){
				    return false;
				}
				public Integer FECHAACTIVOCUMLength(){
				    return 15;
				}
				public Integer FECHAACTIVOCUMPrecision(){
				    return 0;
				}
				public String FECHAACTIVOCUMDefault(){
				
					return null;
				
				}
				public String FECHAACTIVOCUMComment(){
				
				    return "";
				
				}
				public String FECHAACTIVOCUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAACTIVOCUMOriginalDbColumnName(){
				
					return "FECHAACTIVOCUM";
				
				}

				
			    public String FECHAINACTIVOCUM;

				public String getFECHAINACTIVOCUM () {
					return this.FECHAINACTIVOCUM;
				}

				public Boolean FECHAINACTIVOCUMIsNullable(){
				    return true;
				}
				public Boolean FECHAINACTIVOCUMIsKey(){
				    return false;
				}
				public Integer FECHAINACTIVOCUMLength(){
				    return 15;
				}
				public Integer FECHAINACTIVOCUMPrecision(){
				    return 0;
				}
				public String FECHAINACTIVOCUMDefault(){
				
					return null;
				
				}
				public String FECHAINACTIVOCUMComment(){
				
				    return "";
				
				}
				public String FECHAINACTIVOCUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAINACTIVOCUMOriginalDbColumnName(){
				
					return "FECHAINACTIVOCUM";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 60;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String EXPEDIENTE;

				public String getEXPEDIENTE () {
					return this.EXPEDIENTE;
				}

				public Boolean EXPEDIENTEIsNullable(){
				    return true;
				}
				public Boolean EXPEDIENTEIsKey(){
				    return false;
				}
				public Integer EXPEDIENTELength(){
				    return 25;
				}
				public Integer EXPEDIENTEPrecision(){
				    return 0;
				}
				public String EXPEDIENTEDefault(){
				
					return null;
				
				}
				public String EXPEDIENTEComment(){
				
				    return "";
				
				}
				public String EXPEDIENTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EXPEDIENTEOriginalDbColumnName(){
				
					return "EXPEDIENTE";
				
				}

				
			    public String CONSECUTIVO;

				public String getCONSECUTIVO () {
					return this.CONSECUTIVO;
				}

				public Boolean CONSECUTIVOIsNullable(){
				    return true;
				}
				public Boolean CONSECUTIVOIsKey(){
				    return false;
				}
				public Integer CONSECUTIVOLength(){
				    return 10;
				}
				public Integer CONSECUTIVOPrecision(){
				    return 0;
				}
				public String CONSECUTIVODefault(){
				
					return null;
				
				}
				public String CONSECUTIVOComment(){
				
				    return "";
				
				}
				public String CONSECUTIVOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONSECUTIVOOriginalDbColumnName(){
				
					return "CONSECUTIVO";
				
				}

				
			    public String LUGARDEORIGEN;

				public String getLUGARDEORIGEN () {
					return this.LUGARDEORIGEN;
				}

				public Boolean LUGARDEORIGENIsNullable(){
				    return true;
				}
				public Boolean LUGARDEORIGENIsKey(){
				    return false;
				}
				public Integer LUGARDEORIGENLength(){
				    return 500;
				}
				public Integer LUGARDEORIGENPrecision(){
				    return 0;
				}
				public String LUGARDEORIGENDefault(){
				
					return null;
				
				}
				public String LUGARDEORIGENComment(){
				
				    return "";
				
				}
				public String LUGARDEORIGENPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LUGARDEORIGENOriginalDbColumnName(){
				
					return "LUGARDEORIGEN";
				
				}

				
			    public String CARACTERISTICAS;

				public String getCARACTERISTICAS () {
					return this.CARACTERISTICAS;
				}

				public Boolean CARACTERISTICASIsNullable(){
				    return true;
				}
				public Boolean CARACTERISTICASIsKey(){
				    return false;
				}
				public Integer CARACTERISTICASLength(){
				    return 2000;
				}
				public Integer CARACTERISTICASPrecision(){
				    return 0;
				}
				public String CARACTERISTICASDefault(){
				
					return null;
				
				}
				public String CARACTERISTICASComment(){
				
				    return "";
				
				}
				public String CARACTERISTICASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CARACTERISTICASOriginalDbColumnName(){
				
					return "CARACTERISTICAS";
				
				}

				
			    public String CONTRAINDICACIONES;

				public String getCONTRAINDICACIONES () {
					return this.CONTRAINDICACIONES;
				}

				public Boolean CONTRAINDICACIONESIsNullable(){
				    return true;
				}
				public Boolean CONTRAINDICACIONESIsKey(){
				    return false;
				}
				public Integer CONTRAINDICACIONESLength(){
				    return 2000;
				}
				public Integer CONTRAINDICACIONESPrecision(){
				    return 0;
				}
				public String CONTRAINDICACIONESDefault(){
				
					return null;
				
				}
				public String CONTRAINDICACIONESComment(){
				
				    return "";
				
				}
				public String CONTRAINDICACIONESPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRAINDICACIONESOriginalDbColumnName(){
				
					return "CONTRAINDICACIONES";
				
				}

				
			    public String EFECTOSPOSTERIOR;

				public String getEFECTOSPOSTERIOR () {
					return this.EFECTOSPOSTERIOR;
				}

				public Boolean EFECTOSPOSTERIORIsNullable(){
				    return true;
				}
				public Boolean EFECTOSPOSTERIORIsKey(){
				    return false;
				}
				public Integer EFECTOSPOSTERIORLength(){
				    return 2000;
				}
				public Integer EFECTOSPOSTERIORPrecision(){
				    return 0;
				}
				public String EFECTOSPOSTERIORDefault(){
				
					return null;
				
				}
				public String EFECTOSPOSTERIORComment(){
				
				    return "";
				
				}
				public String EFECTOSPOSTERIORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EFECTOSPOSTERIOROriginalDbColumnName(){
				
					return "EFECTOSPOSTERIOR";
				
				}

				
			    public String RIESGOSASOCIADOS;

				public String getRIESGOSASOCIADOS () {
					return this.RIESGOSASOCIADOS;
				}

				public Boolean RIESGOSASOCIADOSIsNullable(){
				    return true;
				}
				public Boolean RIESGOSASOCIADOSIsKey(){
				    return false;
				}
				public Integer RIESGOSASOCIADOSLength(){
				    return 2000;
				}
				public Integer RIESGOSASOCIADOSPrecision(){
				    return 0;
				}
				public String RIESGOSASOCIADOSDefault(){
				
					return null;
				
				}
				public String RIESGOSASOCIADOSComment(){
				
				    return "";
				
				}
				public String RIESGOSASOCIADOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RIESGOSASOCIADOSOriginalDbColumnName(){
				
					return "RIESGOSASOCIADOS";
				
				}

				
			    public String DOSISPARAAPLICACION;

				public String getDOSISPARAAPLICACION () {
					return this.DOSISPARAAPLICACION;
				}

				public Boolean DOSISPARAAPLICACIONIsNullable(){
				    return true;
				}
				public Boolean DOSISPARAAPLICACIONIsKey(){
				    return false;
				}
				public Integer DOSISPARAAPLICACIONLength(){
				    return 500;
				}
				public Integer DOSISPARAAPLICACIONPrecision(){
				    return 0;
				}
				public String DOSISPARAAPLICACIONDefault(){
				
					return null;
				
				}
				public String DOSISPARAAPLICACIONComment(){
				
				    return "";
				
				}
				public String DOSISPARAAPLICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DOSISPARAAPLICACIONOriginalDbColumnName(){
				
					return "DOSISPARAAPLICACION";
				
				}

				
			    public String NITFABRICANTE;

				public String getNITFABRICANTE () {
					return this.NITFABRICANTE;
				}

				public Boolean NITFABRICANTEIsNullable(){
				    return true;
				}
				public Boolean NITFABRICANTEIsKey(){
				    return false;
				}
				public Integer NITFABRICANTELength(){
				    return 100;
				}
				public Integer NITFABRICANTEPrecision(){
				    return 0;
				}
				public String NITFABRICANTEDefault(){
				
					return null;
				
				}
				public String NITFABRICANTEComment(){
				
				    return "";
				
				}
				public String NITFABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NITFABRICANTEOriginalDbColumnName(){
				
					return "NITFABRICANTE";
				
				}

				
			    public String FABRICANTE;

				public String getFABRICANTE () {
					return this.FABRICANTE;
				}

				public Boolean FABRICANTEIsNullable(){
				    return true;
				}
				public Boolean FABRICANTEIsKey(){
				    return false;
				}
				public Integer FABRICANTELength(){
				    return 500;
				}
				public Integer FABRICANTEPrecision(){
				    return 0;
				}
				public String FABRICANTEDefault(){
				
					return null;
				
				}
				public String FABRICANTEComment(){
				
				    return "";
				
				}
				public String FABRICANTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FABRICANTEOriginalDbColumnName(){
				
					return "FABRICANTE";
				
				}

				
			    public String NITIMPORTADOR;

				public String getNITIMPORTADOR () {
					return this.NITIMPORTADOR;
				}

				public Boolean NITIMPORTADORIsNullable(){
				    return true;
				}
				public Boolean NITIMPORTADORIsKey(){
				    return false;
				}
				public Integer NITIMPORTADORLength(){
				    return 100;
				}
				public Integer NITIMPORTADORPrecision(){
				    return 0;
				}
				public String NITIMPORTADORDefault(){
				
					return null;
				
				}
				public String NITIMPORTADORComment(){
				
				    return "";
				
				}
				public String NITIMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NITIMPORTADOROriginalDbColumnName(){
				
					return "NITIMPORTADOR";
				
				}

				
			    public String IMPORTADOR;

				public String getIMPORTADOR () {
					return this.IMPORTADOR;
				}

				public Boolean IMPORTADORIsNullable(){
				    return true;
				}
				public Boolean IMPORTADORIsKey(){
				    return false;
				}
				public Integer IMPORTADORLength(){
				    return 500;
				}
				public Integer IMPORTADORPrecision(){
				    return 0;
				}
				public String IMPORTADORDefault(){
				
					return null;
				
				}
				public String IMPORTADORComment(){
				
				    return "";
				
				}
				public String IMPORTADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IMPORTADOROriginalDbColumnName(){
				
					return "IMPORTADOR";
				
				}

				
			    public String OBSERVACIONES;

				public String getOBSERVACIONES () {
					return this.OBSERVACIONES;
				}

				public Boolean OBSERVACIONESIsNullable(){
				    return true;
				}
				public Boolean OBSERVACIONESIsKey(){
				    return false;
				}
				public Integer OBSERVACIONESLength(){
				    return 500;
				}
				public Integer OBSERVACIONESPrecision(){
				    return 0;
				}
				public String OBSERVACIONESDefault(){
				
					return null;
				
				}
				public String OBSERVACIONESComment(){
				
				    return "";
				
				}
				public String OBSERVACIONESPattern(){
				
					return "";
				
				}
				public String OBSERVACIONESOriginalDbColumnName(){
				
					return "OBSERVACIONES";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.ITEM = readInteger(dis);
					
					this.CODIGODEBARRAS = readString(dis);
					
					this.NOMBRECOMERCIAL = readString(dis);
					
					this.PRESENTACIONCOMERCIAL = readString(dis);
					
					this.VIADEADMINISTRACION = readString(dis);
					
					this.FORMAFARMACEUTICA = readString(dis);
					
					this.NOMBREGENERICO = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDADDEMEDIDA = readString(dis);
					
					this.CANTIDADUNIDADUMEDIDA = readString(dis);
					
					this.CANTIDADMINIMA = readString(dis);
					
					this.REGISTROINVIMA = readString(dis);
					
					this.FECHAEXPEDICIONREGINVIMA = readString(dis);
					
					this.FECHAVENCIMIENTOREGINVIMA = readString(dis);
					
					this.FECHAACTIVOCUM = readString(dis);
					
					this.FECHAINACTIVOCUM = readString(dis);
					
					this.CUM = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
					this.LUGARDEORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOSPOSTERIOR = readString(dis);
					
					this.RIESGOSASOCIADOS = readString(dis);
					
					this.DOSISPARAAPLICACION = readString(dis);
					
					this.NITFABRICANTE = readString(dis);
					
					this.FABRICANTE = readString(dis);
					
					this.NITIMPORTADOR = readString(dis);
					
					this.IMPORTADOR = readString(dis);
					
					this.OBSERVACIONES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.ITEM = readInteger(dis);
					
					this.CODIGODEBARRAS = readString(dis);
					
					this.NOMBRECOMERCIAL = readString(dis);
					
					this.PRESENTACIONCOMERCIAL = readString(dis);
					
					this.VIADEADMINISTRACION = readString(dis);
					
					this.FORMAFARMACEUTICA = readString(dis);
					
					this.NOMBREGENERICO = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
					this.UNIDOSIS = readString(dis);
					
					this.UNIDADDEMEDIDA = readString(dis);
					
					this.CANTIDADUNIDADUMEDIDA = readString(dis);
					
					this.CANTIDADMINIMA = readString(dis);
					
					this.REGISTROINVIMA = readString(dis);
					
					this.FECHAEXPEDICIONREGINVIMA = readString(dis);
					
					this.FECHAVENCIMIENTOREGINVIMA = readString(dis);
					
					this.FECHAACTIVOCUM = readString(dis);
					
					this.FECHAINACTIVOCUM = readString(dis);
					
					this.CUM = readString(dis);
					
					this.EXPEDIENTE = readString(dis);
					
					this.CONSECUTIVO = readString(dis);
					
					this.LUGARDEORIGEN = readString(dis);
					
					this.CARACTERISTICAS = readString(dis);
					
					this.CONTRAINDICACIONES = readString(dis);
					
					this.EFECTOSPOSTERIOR = readString(dis);
					
					this.RIESGOSASOCIADOS = readString(dis);
					
					this.DOSISPARAAPLICACION = readString(dis);
					
					this.NITFABRICANTE = readString(dis);
					
					this.FABRICANTE = readString(dis);
					
					this.NITIMPORTADOR = readString(dis);
					
					this.IMPORTADOR = readString(dis);
					
					this.OBSERVACIONES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.ITEM,dos);
					
					// String
				
						writeString(this.CODIGODEBARRAS,dos);
					
					// String
				
						writeString(this.NOMBRECOMERCIAL,dos);
					
					// String
				
						writeString(this.PRESENTACIONCOMERCIAL,dos);
					
					// String
				
						writeString(this.VIADEADMINISTRACION,dos);
					
					// String
				
						writeString(this.FORMAFARMACEUTICA,dos);
					
					// String
				
						writeString(this.NOMBREGENERICO,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDADDEMEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDADUNIDADUMEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDADMINIMA,dos);
					
					// String
				
						writeString(this.REGISTROINVIMA,dos);
					
					// String
				
						writeString(this.FECHAEXPEDICIONREGINVIMA,dos);
					
					// String
				
						writeString(this.FECHAVENCIMIENTOREGINVIMA,dos);
					
					// String
				
						writeString(this.FECHAACTIVOCUM,dos);
					
					// String
				
						writeString(this.FECHAINACTIVOCUM,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
					// String
				
						writeString(this.LUGARDEORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOSPOSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOSASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSISPARAAPLICACION,dos);
					
					// String
				
						writeString(this.NITFABRICANTE,dos);
					
					// String
				
						writeString(this.FABRICANTE,dos);
					
					// String
				
						writeString(this.NITIMPORTADOR,dos);
					
					// String
				
						writeString(this.IMPORTADOR,dos);
					
					// String
				
						writeString(this.OBSERVACIONES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.ITEM,dos);
					
					// String
				
						writeString(this.CODIGODEBARRAS,dos);
					
					// String
				
						writeString(this.NOMBRECOMERCIAL,dos);
					
					// String
				
						writeString(this.PRESENTACIONCOMERCIAL,dos);
					
					// String
				
						writeString(this.VIADEADMINISTRACION,dos);
					
					// String
				
						writeString(this.FORMAFARMACEUTICA,dos);
					
					// String
				
						writeString(this.NOMBREGENERICO,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
					// String
				
						writeString(this.UNIDOSIS,dos);
					
					// String
				
						writeString(this.UNIDADDEMEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDADUNIDADUMEDIDA,dos);
					
					// String
				
						writeString(this.CANTIDADMINIMA,dos);
					
					// String
				
						writeString(this.REGISTROINVIMA,dos);
					
					// String
				
						writeString(this.FECHAEXPEDICIONREGINVIMA,dos);
					
					// String
				
						writeString(this.FECHAVENCIMIENTOREGINVIMA,dos);
					
					// String
				
						writeString(this.FECHAACTIVOCUM,dos);
					
					// String
				
						writeString(this.FECHAINACTIVOCUM,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.EXPEDIENTE,dos);
					
					// String
				
						writeString(this.CONSECUTIVO,dos);
					
					// String
				
						writeString(this.LUGARDEORIGEN,dos);
					
					// String
				
						writeString(this.CARACTERISTICAS,dos);
					
					// String
				
						writeString(this.CONTRAINDICACIONES,dos);
					
					// String
				
						writeString(this.EFECTOSPOSTERIOR,dos);
					
					// String
				
						writeString(this.RIESGOSASOCIADOS,dos);
					
					// String
				
						writeString(this.DOSISPARAAPLICACION,dos);
					
					// String
				
						writeString(this.NITFABRICANTE,dos);
					
					// String
				
						writeString(this.FABRICANTE,dos);
					
					// String
				
						writeString(this.NITIMPORTADOR,dos);
					
					// String
				
						writeString(this.IMPORTADOR,dos);
					
					// String
				
						writeString(this.OBSERVACIONES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ITEM="+String.valueOf(ITEM));
		sb.append(",CODIGODEBARRAS="+CODIGODEBARRAS);
		sb.append(",NOMBRECOMERCIAL="+NOMBRECOMERCIAL);
		sb.append(",PRESENTACIONCOMERCIAL="+PRESENTACIONCOMERCIAL);
		sb.append(",VIADEADMINISTRACION="+VIADEADMINISTRACION);
		sb.append(",FORMAFARMACEUTICA="+FORMAFARMACEUTICA);
		sb.append(",NOMBREGENERICO="+NOMBREGENERICO);
		sb.append(",CONCENTRACION="+CONCENTRACION);
		sb.append(",UNIDOSIS="+UNIDOSIS);
		sb.append(",UNIDADDEMEDIDA="+UNIDADDEMEDIDA);
		sb.append(",CANTIDADUNIDADUMEDIDA="+CANTIDADUNIDADUMEDIDA);
		sb.append(",CANTIDADMINIMA="+CANTIDADMINIMA);
		sb.append(",REGISTROINVIMA="+REGISTROINVIMA);
		sb.append(",FECHAEXPEDICIONREGINVIMA="+FECHAEXPEDICIONREGINVIMA);
		sb.append(",FECHAVENCIMIENTOREGINVIMA="+FECHAVENCIMIENTOREGINVIMA);
		sb.append(",FECHAACTIVOCUM="+FECHAACTIVOCUM);
		sb.append(",FECHAINACTIVOCUM="+FECHAINACTIVOCUM);
		sb.append(",CUM="+CUM);
		sb.append(",EXPEDIENTE="+EXPEDIENTE);
		sb.append(",CONSECUTIVO="+CONSECUTIVO);
		sb.append(",LUGARDEORIGEN="+LUGARDEORIGEN);
		sb.append(",CARACTERISTICAS="+CARACTERISTICAS);
		sb.append(",CONTRAINDICACIONES="+CONTRAINDICACIONES);
		sb.append(",EFECTOSPOSTERIOR="+EFECTOSPOSTERIOR);
		sb.append(",RIESGOSASOCIADOS="+RIESGOSASOCIADOS);
		sb.append(",DOSISPARAAPLICACION="+DOSISPARAAPLICACION);
		sb.append(",NITFABRICANTE="+NITFABRICANTE);
		sb.append(",FABRICANTE="+FABRICANTE);
		sb.append(",NITIMPORTADOR="+NITIMPORTADOR);
		sb.append(",IMPORTADOR="+IMPORTADOR);
		sb.append(",OBSERVACIONES="+OBSERVACIONES);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(next_8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row38Struct implements routines.system.IPersistableRow<row38Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public Integer Item;

				public Integer getItem () {
					return this.Item;
				}

				public Boolean ItemIsNullable(){
				    return true;
				}
				public Boolean ItemIsKey(){
				    return false;
				}
				public Integer ItemLength(){
				    return null;
				}
				public Integer ItemPrecision(){
				    return null;
				}
				public String ItemDefault(){
				
					return null;
				
				}
				public String ItemComment(){
				
				    return "";
				
				}
				public String ItemPattern(){
				
					return "";
				
				}
				public String ItemOriginalDbColumnName(){
				
					return "Item";
				
				}

				
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String Cod_Barras_;

				public String getCod_Barras_ () {
					return this.Cod_Barras_;
				}

				public Boolean Cod_Barras_IsNullable(){
				    return true;
				}
				public Boolean Cod_Barras_IsKey(){
				    return false;
				}
				public Integer Cod_Barras_Length(){
				    return 20;
				}
				public Integer Cod_Barras_Precision(){
				    return 0;
				}
				public String Cod_Barras_Default(){
				
					return null;
				
				}
				public String Cod_Barras_Comment(){
				
				    return "";
				
				}
				public String Cod_Barras_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Cod_Barras_OriginalDbColumnName(){
				
					return "Cod_Barras_";
				
				}

				
			    public String Comercial_;

				public String getComercial_ () {
					return this.Comercial_;
				}

				public Boolean Comercial_IsNullable(){
				    return true;
				}
				public Boolean Comercial_IsKey(){
				    return false;
				}
				public Integer Comercial_Length(){
				    return 150;
				}
				public Integer Comercial_Precision(){
				    return 0;
				}
				public String Comercial_Default(){
				
					return null;
				
				}
				public String Comercial_Comment(){
				
				    return "";
				
				}
				public String Comercial_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Comercial_OriginalDbColumnName(){
				
					return "Comercial_";
				
				}

				
			    public String Presentacion_;

				public String getPresentacion_ () {
					return this.Presentacion_;
				}

				public Boolean Presentacion_IsNullable(){
				    return true;
				}
				public Boolean Presentacion_IsKey(){
				    return false;
				}
				public Integer Presentacion_Length(){
				    return 500;
				}
				public Integer Presentacion_Precision(){
				    return 0;
				}
				public String Presentacion_Default(){
				
					return null;
				
				}
				public String Presentacion_Comment(){
				
				    return "";
				
				}
				public String Presentacion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Presentacion_OriginalDbColumnName(){
				
					return "Presentacion_";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis_;

				public String getUnidosis_ () {
					return this.Unidosis_;
				}

				public Boolean Unidosis_IsNullable(){
				    return true;
				}
				public Boolean Unidosis_IsKey(){
				    return false;
				}
				public Integer Unidosis_Length(){
				    return 2;
				}
				public Integer Unidosis_Precision(){
				    return 0;
				}
				public String Unidosis_Default(){
				
					return null;
				
				}
				public String Unidosis_Comment(){
				
				    return "";
				
				}
				public String Unidosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Unidosis_OriginalDbColumnName(){
				
					return "Unidosis_";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String Reg_Invima_;

				public String getReg_Invima_ () {
					return this.Reg_Invima_;
				}

				public Boolean Reg_Invima_IsNullable(){
				    return true;
				}
				public Boolean Reg_Invima_IsKey(){
				    return false;
				}
				public Integer Reg_Invima_Length(){
				    return 50;
				}
				public Integer Reg_Invima_Precision(){
				    return 0;
				}
				public String Reg_Invima_Default(){
				
					return null;
				
				}
				public String Reg_Invima_Comment(){
				
				    return "";
				
				}
				public String Reg_Invima_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Reg_Invima_OriginalDbColumnName(){
				
					return "Reg_Invima_";
				
				}

				
			    public String F_Expedicion_;

				public String getF_Expedicion_ () {
					return this.F_Expedicion_;
				}

				public Boolean F_Expedicion_IsNullable(){
				    return true;
				}
				public Boolean F_Expedicion_IsKey(){
				    return false;
				}
				public Integer F_Expedicion_Length(){
				    return 15;
				}
				public Integer F_Expedicion_Precision(){
				    return 0;
				}
				public String F_Expedicion_Default(){
				
					return null;
				
				}
				public String F_Expedicion_Comment(){
				
				    return "";
				
				}
				public String F_Expedicion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Expedicion_OriginalDbColumnName(){
				
					return "F_Expedicion_";
				
				}

				
			    public String F_Vencimiento_;

				public String getF_Vencimiento_ () {
					return this.F_Vencimiento_;
				}

				public Boolean F_Vencimiento_IsNullable(){
				    return true;
				}
				public Boolean F_Vencimiento_IsKey(){
				    return false;
				}
				public Integer F_Vencimiento_Length(){
				    return 15;
				}
				public Integer F_Vencimiento_Precision(){
				    return 0;
				}
				public String F_Vencimiento_Default(){
				
					return null;
				
				}
				public String F_Vencimiento_Comment(){
				
				    return "";
				
				}
				public String F_Vencimiento_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Vencimiento_OriginalDbColumnName(){
				
					return "F_Vencimiento_";
				
				}

				
			    public String F_Activo_Cum_;

				public String getF_Activo_Cum_ () {
					return this.F_Activo_Cum_;
				}

				public Boolean F_Activo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Activo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Activo_Cum_Length(){
				    return 15;
				}
				public Integer F_Activo_Cum_Precision(){
				    return 0;
				}
				public String F_Activo_Cum_Default(){
				
					return null;
				
				}
				public String F_Activo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Activo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Activo_Cum_OriginalDbColumnName(){
				
					return "F_Activo_Cum_";
				
				}

				
			    public String F_Inactivo_Cum_;

				public String getF_Inactivo_Cum_ () {
					return this.F_Inactivo_Cum_;
				}

				public Boolean F_Inactivo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Inactivo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Inactivo_Cum_Length(){
				    return 15;
				}
				public Integer F_Inactivo_Cum_Precision(){
				    return 0;
				}
				public String F_Inactivo_Cum_Default(){
				
					return null;
				
				}
				public String F_Inactivo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Inactivo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Inactivo_Cum_OriginalDbColumnName(){
				
					return "F_Inactivo_Cum_";
				
				}

				
			    public String Expediente_;

				public String getExpediente_ () {
					return this.Expediente_;
				}

				public Boolean Expediente_IsNullable(){
				    return true;
				}
				public Boolean Expediente_IsKey(){
				    return false;
				}
				public Integer Expediente_Length(){
				    return 25;
				}
				public Integer Expediente_Precision(){
				    return 0;
				}
				public String Expediente_Default(){
				
					return null;
				
				}
				public String Expediente_Comment(){
				
				    return "";
				
				}
				public String Expediente_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Expediente_OriginalDbColumnName(){
				
					return "Expediente_";
				
				}

				
			    public String Consecutivo_;

				public String getConsecutivo_ () {
					return this.Consecutivo_;
				}

				public Boolean Consecutivo_IsNullable(){
				    return true;
				}
				public Boolean Consecutivo_IsKey(){
				    return false;
				}
				public Integer Consecutivo_Length(){
				    return 10;
				}
				public Integer Consecutivo_Precision(){
				    return 0;
				}
				public String Consecutivo_Default(){
				
					return null;
				
				}
				public String Consecutivo_Comment(){
				
				    return "";
				
				}
				public String Consecutivo_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Consecutivo_OriginalDbColumnName(){
				
					return "Consecutivo_";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen_;

				public String getOrigen_ () {
					return this.Origen_;
				}

				public Boolean Origen_IsNullable(){
				    return true;
				}
				public Boolean Origen_IsKey(){
				    return false;
				}
				public Integer Origen_Length(){
				    return 500;
				}
				public Integer Origen_Precision(){
				    return 0;
				}
				public String Origen_Default(){
				
					return null;
				
				}
				public String Origen_Comment(){
				
				    return "";
				
				}
				public String Origen_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Origen_OriginalDbColumnName(){
				
					return "Origen_";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Caracteriticas_;

				public String getCaracteriticas_ () {
					return this.Caracteriticas_;
				}

				public Boolean Caracteriticas_IsNullable(){
				    return true;
				}
				public Boolean Caracteriticas_IsKey(){
				    return false;
				}
				public Integer Caracteriticas_Length(){
				    return null;
				}
				public Integer Caracteriticas_Precision(){
				    return null;
				}
				public String Caracteriticas_Default(){
				
					return null;
				
				}
				public String Caracteriticas_Comment(){
				
				    return "";
				
				}
				public String Caracteriticas_Pattern(){
				
					return "";
				
				}
				public String Caracteriticas_OriginalDbColumnName(){
				
					return "Caracteriticas_";
				
				}

				
			    public String Contraindicaciones_;

				public String getContraindicaciones_ () {
					return this.Contraindicaciones_;
				}

				public Boolean Contraindicaciones_IsNullable(){
				    return true;
				}
				public Boolean Contraindicaciones_IsKey(){
				    return false;
				}
				public Integer Contraindicaciones_Length(){
				    return 2000;
				}
				public Integer Contraindicaciones_Precision(){
				    return 0;
				}
				public String Contraindicaciones_Default(){
				
					return null;
				
				}
				public String Contraindicaciones_Comment(){
				
				    return "";
				
				}
				public String Contraindicaciones_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Contraindicaciones_OriginalDbColumnName(){
				
					return "Contraindicaciones_";
				
				}

				
			    public String Efectos_;

				public String getEfectos_ () {
					return this.Efectos_;
				}

				public Boolean Efectos_IsNullable(){
				    return true;
				}
				public Boolean Efectos_IsKey(){
				    return false;
				}
				public Integer Efectos_Length(){
				    return 2000;
				}
				public Integer Efectos_Precision(){
				    return 0;
				}
				public String Efectos_Default(){
				
					return null;
				
				}
				public String Efectos_Comment(){
				
				    return "";
				
				}
				public String Efectos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_OriginalDbColumnName(){
				
					return "Efectos_";
				
				}

				
			    public String Riesgos_;

				public String getRiesgos_ () {
					return this.Riesgos_;
				}

				public Boolean Riesgos_IsNullable(){
				    return true;
				}
				public Boolean Riesgos_IsKey(){
				    return false;
				}
				public Integer Riesgos_Length(){
				    return 2000;
				}
				public Integer Riesgos_Precision(){
				    return 0;
				}
				public String Riesgos_Default(){
				
					return null;
				
				}
				public String Riesgos_Comment(){
				
				    return "";
				
				}
				public String Riesgos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_OriginalDbColumnName(){
				
					return "Riesgos_";
				
				}

				
			    public String Dosis_;

				public String getDosis_ () {
					return this.Dosis_;
				}

				public Boolean Dosis_IsNullable(){
				    return true;
				}
				public Boolean Dosis_IsKey(){
				    return false;
				}
				public Integer Dosis_Length(){
				    return 500;
				}
				public Integer Dosis_Precision(){
				    return 0;
				}
				public String Dosis_Default(){
				
					return null;
				
				}
				public String Dosis_Comment(){
				
				    return "";
				
				}
				public String Dosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_OriginalDbColumnName(){
				
					return "Dosis_";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public String ViaAdmin_Id_;

				public String getViaAdmin_Id_ () {
					return this.ViaAdmin_Id_;
				}

				public Boolean ViaAdmin_Id_IsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_Id_IsKey(){
				    return false;
				}
				public Integer ViaAdmin_Id_Length(){
				    return null;
				}
				public Integer ViaAdmin_Id_Precision(){
				    return null;
				}
				public String ViaAdmin_Id_Default(){
				
					return null;
				
				}
				public String ViaAdmin_Id_Comment(){
				
				    return "";
				
				}
				public String ViaAdmin_Id_Pattern(){
				
					return "";
				
				}
				public String ViaAdmin_Id_OriginalDbColumnName(){
				
					return "ViaAdmin_Id_";
				
				}

				
			    public BigDecimal Forma_Id;

				public BigDecimal getForma_Id () {
					return this.Forma_Id;
				}

				public Boolean Forma_IdIsNullable(){
				    return true;
				}
				public Boolean Forma_IdIsKey(){
				    return false;
				}
				public Integer Forma_IdLength(){
				    return null;
				}
				public Integer Forma_IdPrecision(){
				    return null;
				}
				public String Forma_IdDefault(){
				
					return null;
				
				}
				public String Forma_IdComment(){
				
				    return "";
				
				}
				public String Forma_IdPattern(){
				
					return "";
				
				}
				public String Forma_IdOriginalDbColumnName(){
				
					return "Forma_Id";
				
				}

				
			    public String Forma_Id_;

				public String getForma_Id_ () {
					return this.Forma_Id_;
				}

				public Boolean Forma_Id_IsNullable(){
				    return true;
				}
				public Boolean Forma_Id_IsKey(){
				    return false;
				}
				public Integer Forma_Id_Length(){
				    return null;
				}
				public Integer Forma_Id_Precision(){
				    return null;
				}
				public String Forma_Id_Default(){
				
					return null;
				
				}
				public String Forma_Id_Comment(){
				
				    return "";
				
				}
				public String Forma_Id_Pattern(){
				
					return "";
				
				}
				public String Forma_Id_OriginalDbColumnName(){
				
					return "Forma_Id_";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal Formas_Farma_Id;

				public BigDecimal getFormas_Farma_Id () {
					return this.Formas_Farma_Id;
				}

				public Boolean Formas_Farma_IdIsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_IdIsKey(){
				    return false;
				}
				public Integer Formas_Farma_IdLength(){
				    return null;
				}
				public Integer Formas_Farma_IdPrecision(){
				    return null;
				}
				public String Formas_Farma_IdDefault(){
				
					return null;
				
				}
				public String Formas_Farma_IdComment(){
				
				    return "";
				
				}
				public String Formas_Farma_IdPattern(){
				
					return "";
				
				}
				public String Formas_Farma_IdOriginalDbColumnName(){
				
					return "Formas_Farma_Id";
				
				}

				
			    public String Formas_Farma_Id_;

				public String getFormas_Farma_Id_ () {
					return this.Formas_Farma_Id_;
				}

				public Boolean Formas_Farma_Id_IsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_Id_IsKey(){
				    return false;
				}
				public Integer Formas_Farma_Id_Length(){
				    return null;
				}
				public Integer Formas_Farma_Id_Precision(){
				    return null;
				}
				public String Formas_Farma_Id_Default(){
				
					return null;
				
				}
				public String Formas_Farma_Id_Comment(){
				
				    return "";
				
				}
				public String Formas_Farma_Id_Pattern(){
				
					return "";
				
				}
				public String Formas_Farma_Id_OriginalDbColumnName(){
				
					return "Formas_Farma_Id_";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public String UMedida_Id_;

				public String getUMedida_Id_ () {
					return this.UMedida_Id_;
				}

				public Boolean UMedida_Id_IsNullable(){
				    return true;
				}
				public Boolean UMedida_Id_IsKey(){
				    return false;
				}
				public Integer UMedida_Id_Length(){
				    return null;
				}
				public Integer UMedida_Id_Precision(){
				    return null;
				}
				public String UMedida_Id_Default(){
				
					return null;
				
				}
				public String UMedida_Id_Comment(){
				
				    return "";
				
				}
				public String UMedida_Id_Pattern(){
				
					return "";
				
				}
				public String UMedida_Id_OriginalDbColumnName(){
				
					return "UMedida_Id_";
				
				}

				
			    public Double Cant_UMedida;

				public Double getCant_UMedida () {
					return this.Cant_UMedida;
				}

				public Boolean Cant_UMedidaIsNullable(){
				    return true;
				}
				public Boolean Cant_UMedidaIsKey(){
				    return false;
				}
				public Integer Cant_UMedidaLength(){
				    return null;
				}
				public Integer Cant_UMedidaPrecision(){
				    return null;
				}
				public String Cant_UMedidaDefault(){
				
					return null;
				
				}
				public String Cant_UMedidaComment(){
				
				    return "";
				
				}
				public String Cant_UMedidaPattern(){
				
					return "";
				
				}
				public String Cant_UMedidaOriginalDbColumnName(){
				
					return "Cant_UMedida";
				
				}

				
			    public String Cant_UMedida_;

				public String getCant_UMedida_ () {
					return this.Cant_UMedida_;
				}

				public Boolean Cant_UMedida_IsNullable(){
				    return true;
				}
				public Boolean Cant_UMedida_IsKey(){
				    return false;
				}
				public Integer Cant_UMedida_Length(){
				    return null;
				}
				public Integer Cant_UMedida_Precision(){
				    return null;
				}
				public String Cant_UMedida_Default(){
				
					return null;
				
				}
				public String Cant_UMedida_Comment(){
				
				    return "";
				
				}
				public String Cant_UMedida_Pattern(){
				
					return "";
				
				}
				public String Cant_UMedida_OriginalDbColumnName(){
				
					return "Cant_UMedida_";
				
				}

				
			    public Integer Cant_Minima;

				public Integer getCant_Minima () {
					return this.Cant_Minima;
				}

				public Boolean Cant_MinimaIsNullable(){
				    return true;
				}
				public Boolean Cant_MinimaIsKey(){
				    return false;
				}
				public Integer Cant_MinimaLength(){
				    return null;
				}
				public Integer Cant_MinimaPrecision(){
				    return null;
				}
				public String Cant_MinimaDefault(){
				
					return null;
				
				}
				public String Cant_MinimaComment(){
				
				    return "";
				
				}
				public String Cant_MinimaPattern(){
				
					return "";
				
				}
				public String Cant_MinimaOriginalDbColumnName(){
				
					return "Cant_Minima";
				
				}

				
			    public String Cant_Minima_;

				public String getCant_Minima_ () {
					return this.Cant_Minima_;
				}

				public Boolean Cant_Minima_IsNullable(){
				    return true;
				}
				public Boolean Cant_Minima_IsKey(){
				    return false;
				}
				public Integer Cant_Minima_Length(){
				    return null;
				}
				public Integer Cant_Minima_Precision(){
				    return null;
				}
				public String Cant_Minima_Default(){
				
					return null;
				
				}
				public String Cant_Minima_Comment(){
				
				    return "";
				
				}
				public String Cant_Minima_Pattern(){
				
					return "";
				
				}
				public String Cant_Minima_OriginalDbColumnName(){
				
					return "Cant_Minima_";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public String Fabricante_Id_;

				public String getFabricante_Id_ () {
					return this.Fabricante_Id_;
				}

				public Boolean Fabricante_Id_IsNullable(){
				    return true;
				}
				public Boolean Fabricante_Id_IsKey(){
				    return false;
				}
				public Integer Fabricante_Id_Length(){
				    return null;
				}
				public Integer Fabricante_Id_Precision(){
				    return null;
				}
				public String Fabricante_Id_Default(){
				
					return null;
				
				}
				public String Fabricante_Id_Comment(){
				
				    return "";
				
				}
				public String Fabricante_Id_Pattern(){
				
					return "";
				
				}
				public String Fabricante_Id_OriginalDbColumnName(){
				
					return "Fabricante_Id_";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return null;
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				
			    public String Importador_Id_;

				public String getImportador_Id_ () {
					return this.Importador_Id_;
				}

				public Boolean Importador_Id_IsNullable(){
				    return true;
				}
				public Boolean Importador_Id_IsKey(){
				    return false;
				}
				public Integer Importador_Id_Length(){
				    return null;
				}
				public Integer Importador_Id_Precision(){
				    return null;
				}
				public String Importador_Id_Default(){
				
					return null;
				
				}
				public String Importador_Id_Comment(){
				
				    return "";
				
				}
				public String Importador_Id_Pattern(){
				
					return "";
				
				}
				public String Importador_Id_OriginalDbColumnName(){
				
					return "Importador_Id_";
				
				}

				
			    public String Ins_Caract;

				public String getIns_Caract () {
					return this.Ins_Caract;
				}

				public Boolean Ins_CaractIsNullable(){
				    return true;
				}
				public Boolean Ins_CaractIsKey(){
				    return false;
				}
				public Integer Ins_CaractLength(){
				    return null;
				}
				public Integer Ins_CaractPrecision(){
				    return null;
				}
				public String Ins_CaractDefault(){
				
					return null;
				
				}
				public String Ins_CaractComment(){
				
				    return "";
				
				}
				public String Ins_CaractPattern(){
				
					return "";
				
				}
				public String Ins_CaractOriginalDbColumnName(){
				
					return "Ins_Caract";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public BigDecimal Id_;

				public BigDecimal getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.Item = readInteger(dis);
					
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Comercial_ = readString(dis);
					
					this.Presentacion_ = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteriticas_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
					this.ViaAdmin_Id_ = readString(dis);
					
						this.Forma_Id = (BigDecimal) dis.readObject();
					
					this.Forma_Id_ = readString(dis);
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id = (BigDecimal) dis.readObject();
					
					this.Formas_Farma_Id_ = readString(dis);
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
					this.UMedida_Id_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Cant_UMedida = null;
           				} else {
           			    	this.Cant_UMedida = dis.readDouble();
           				}
					
					this.Cant_UMedida_ = readString(dis);
					
						this.Cant_Minima = readInteger(dis);
					
					this.Cant_Minima_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
					this.Fabricante_Id_ = readString(dis);
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Importador_Id_ = readString(dis);
					
					this.Ins_Caract = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.Item = readInteger(dis);
					
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Comercial_ = readString(dis);
					
					this.Presentacion_ = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteriticas_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
					this.ViaAdmin_Id_ = readString(dis);
					
						this.Forma_Id = (BigDecimal) dis.readObject();
					
					this.Forma_Id_ = readString(dis);
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id = (BigDecimal) dis.readObject();
					
					this.Formas_Farma_Id_ = readString(dis);
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
					this.UMedida_Id_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Cant_UMedida = null;
           				} else {
           			    	this.Cant_UMedida = dis.readDouble();
           				}
					
					this.Cant_UMedida_ = readString(dis);
					
						this.Cant_Minima = readInteger(dis);
					
					this.Cant_Minima_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
					this.Fabricante_Id_ = readString(dis);
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Importador_Id_ = readString(dis);
					
					this.Ins_Caract = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.Item,dos);
					
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Comercial_,dos);
					
					// String
				
						writeString(this.Presentacion_,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteriticas_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// String
				
						writeString(this.ViaAdmin_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Forma_Id);
					
					// String
				
						writeString(this.Forma_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Formas_Farma_Id);
					
					// String
				
						writeString(this.Formas_Farma_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// String
				
						writeString(this.UMedida_Id_,dos);
					
					// Double
				
						if(this.Cant_UMedida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Cant_UMedida);
		            	}
					
					// String
				
						writeString(this.Cant_UMedida_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Minima,dos);
					
					// String
				
						writeString(this.Cant_Minima_,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// String
				
						writeString(this.Fabricante_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Importador_Id_,dos);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Id_);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.Item,dos);
					
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Comercial_,dos);
					
					// String
				
						writeString(this.Presentacion_,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteriticas_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// String
				
						writeString(this.ViaAdmin_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Forma_Id);
					
					// String
				
						writeString(this.Forma_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Formas_Farma_Id);
					
					// String
				
						writeString(this.Formas_Farma_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// String
				
						writeString(this.UMedida_Id_,dos);
					
					// Double
				
						if(this.Cant_UMedida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Cant_UMedida);
		            	}
					
					// String
				
						writeString(this.Cant_UMedida_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Minima,dos);
					
					// String
				
						writeString(this.Cant_Minima_,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// String
				
						writeString(this.Fabricante_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Importador_Id_,dos);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Id_);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Item="+String.valueOf(Item));
		sb.append(",oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",Estado_="+Estado_);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",Cod_Barras_="+Cod_Barras_);
		sb.append(",Comercial_="+Comercial_);
		sb.append(",Presentacion_="+Presentacion_);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis_="+Unidosis_);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",Reg_Invima_="+Reg_Invima_);
		sb.append(",F_Expedicion_="+F_Expedicion_);
		sb.append(",F_Vencimiento_="+F_Vencimiento_);
		sb.append(",F_Activo_Cum_="+F_Activo_Cum_);
		sb.append(",F_Inactivo_Cum_="+F_Inactivo_Cum_);
		sb.append(",Expediente_="+Expediente_);
		sb.append(",Consecutivo_="+Consecutivo_);
		sb.append(",Cum="+Cum);
		sb.append(",Origen_="+Origen_);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Caracteriticas_="+Caracteriticas_);
		sb.append(",Contraindicaciones_="+Contraindicaciones_);
		sb.append(",Efectos_="+Efectos_);
		sb.append(",Riesgos_="+Riesgos_);
		sb.append(",Dosis_="+Dosis_);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",ViaAdmin_Id_="+ViaAdmin_Id_);
		sb.append(",Forma_Id="+String.valueOf(Forma_Id));
		sb.append(",Forma_Id_="+Forma_Id_);
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",Formas_Farma_Id="+String.valueOf(Formas_Farma_Id));
		sb.append(",Formas_Farma_Id_="+Formas_Farma_Id_);
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",UMedida_Id_="+UMedida_Id_);
		sb.append(",Cant_UMedida="+String.valueOf(Cant_UMedida));
		sb.append(",Cant_UMedida_="+Cant_UMedida_);
		sb.append(",Cant_Minima="+String.valueOf(Cant_Minima));
		sb.append(",Cant_Minima_="+Cant_Minima_);
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Fabricante_Id_="+Fabricante_Id_);
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
		sb.append(",Importador_Id_="+Importador_Id_);
		sb.append(",Ins_Caract="+Ins_Caract);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",Id_="+String.valueOf(Id_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row38Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row42Struct implements routines.system.IPersistableRow<row42Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public Integer Item;

				public Integer getItem () {
					return this.Item;
				}

				public Boolean ItemIsNullable(){
				    return true;
				}
				public Boolean ItemIsKey(){
				    return false;
				}
				public Integer ItemLength(){
				    return null;
				}
				public Integer ItemPrecision(){
				    return null;
				}
				public String ItemDefault(){
				
					return null;
				
				}
				public String ItemComment(){
				
				    return "";
				
				}
				public String ItemPattern(){
				
					return "";
				
				}
				public String ItemOriginalDbColumnName(){
				
					return "Item";
				
				}

				
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String Cod_Barras_;

				public String getCod_Barras_ () {
					return this.Cod_Barras_;
				}

				public Boolean Cod_Barras_IsNullable(){
				    return true;
				}
				public Boolean Cod_Barras_IsKey(){
				    return false;
				}
				public Integer Cod_Barras_Length(){
				    return 20;
				}
				public Integer Cod_Barras_Precision(){
				    return 0;
				}
				public String Cod_Barras_Default(){
				
					return null;
				
				}
				public String Cod_Barras_Comment(){
				
				    return "";
				
				}
				public String Cod_Barras_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Cod_Barras_OriginalDbColumnName(){
				
					return "Cod_Barras_";
				
				}

				
			    public String Comercial_;

				public String getComercial_ () {
					return this.Comercial_;
				}

				public Boolean Comercial_IsNullable(){
				    return true;
				}
				public Boolean Comercial_IsKey(){
				    return false;
				}
				public Integer Comercial_Length(){
				    return 150;
				}
				public Integer Comercial_Precision(){
				    return 0;
				}
				public String Comercial_Default(){
				
					return null;
				
				}
				public String Comercial_Comment(){
				
				    return "";
				
				}
				public String Comercial_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Comercial_OriginalDbColumnName(){
				
					return "Comercial_";
				
				}

				
			    public String Presentacion_;

				public String getPresentacion_ () {
					return this.Presentacion_;
				}

				public Boolean Presentacion_IsNullable(){
				    return true;
				}
				public Boolean Presentacion_IsKey(){
				    return false;
				}
				public Integer Presentacion_Length(){
				    return 500;
				}
				public Integer Presentacion_Precision(){
				    return 0;
				}
				public String Presentacion_Default(){
				
					return null;
				
				}
				public String Presentacion_Comment(){
				
				    return "";
				
				}
				public String Presentacion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Presentacion_OriginalDbColumnName(){
				
					return "Presentacion_";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis_;

				public String getUnidosis_ () {
					return this.Unidosis_;
				}

				public Boolean Unidosis_IsNullable(){
				    return true;
				}
				public Boolean Unidosis_IsKey(){
				    return false;
				}
				public Integer Unidosis_Length(){
				    return 2;
				}
				public Integer Unidosis_Precision(){
				    return 0;
				}
				public String Unidosis_Default(){
				
					return null;
				
				}
				public String Unidosis_Comment(){
				
				    return "";
				
				}
				public String Unidosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Unidosis_OriginalDbColumnName(){
				
					return "Unidosis_";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String Reg_Invima_;

				public String getReg_Invima_ () {
					return this.Reg_Invima_;
				}

				public Boolean Reg_Invima_IsNullable(){
				    return true;
				}
				public Boolean Reg_Invima_IsKey(){
				    return false;
				}
				public Integer Reg_Invima_Length(){
				    return 50;
				}
				public Integer Reg_Invima_Precision(){
				    return 0;
				}
				public String Reg_Invima_Default(){
				
					return null;
				
				}
				public String Reg_Invima_Comment(){
				
				    return "";
				
				}
				public String Reg_Invima_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Reg_Invima_OriginalDbColumnName(){
				
					return "Reg_Invima_";
				
				}

				
			    public String F_Expedicion_;

				public String getF_Expedicion_ () {
					return this.F_Expedicion_;
				}

				public Boolean F_Expedicion_IsNullable(){
				    return true;
				}
				public Boolean F_Expedicion_IsKey(){
				    return false;
				}
				public Integer F_Expedicion_Length(){
				    return 15;
				}
				public Integer F_Expedicion_Precision(){
				    return 0;
				}
				public String F_Expedicion_Default(){
				
					return null;
				
				}
				public String F_Expedicion_Comment(){
				
				    return "";
				
				}
				public String F_Expedicion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Expedicion_OriginalDbColumnName(){
				
					return "F_Expedicion_";
				
				}

				
			    public String F_Vencimiento_;

				public String getF_Vencimiento_ () {
					return this.F_Vencimiento_;
				}

				public Boolean F_Vencimiento_IsNullable(){
				    return true;
				}
				public Boolean F_Vencimiento_IsKey(){
				    return false;
				}
				public Integer F_Vencimiento_Length(){
				    return 15;
				}
				public Integer F_Vencimiento_Precision(){
				    return 0;
				}
				public String F_Vencimiento_Default(){
				
					return null;
				
				}
				public String F_Vencimiento_Comment(){
				
				    return "";
				
				}
				public String F_Vencimiento_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Vencimiento_OriginalDbColumnName(){
				
					return "F_Vencimiento_";
				
				}

				
			    public String F_Activo_Cum_;

				public String getF_Activo_Cum_ () {
					return this.F_Activo_Cum_;
				}

				public Boolean F_Activo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Activo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Activo_Cum_Length(){
				    return 15;
				}
				public Integer F_Activo_Cum_Precision(){
				    return 0;
				}
				public String F_Activo_Cum_Default(){
				
					return null;
				
				}
				public String F_Activo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Activo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Activo_Cum_OriginalDbColumnName(){
				
					return "F_Activo_Cum_";
				
				}

				
			    public String F_Inactivo_Cum_;

				public String getF_Inactivo_Cum_ () {
					return this.F_Inactivo_Cum_;
				}

				public Boolean F_Inactivo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Inactivo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Inactivo_Cum_Length(){
				    return 15;
				}
				public Integer F_Inactivo_Cum_Precision(){
				    return 0;
				}
				public String F_Inactivo_Cum_Default(){
				
					return null;
				
				}
				public String F_Inactivo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Inactivo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Inactivo_Cum_OriginalDbColumnName(){
				
					return "F_Inactivo_Cum_";
				
				}

				
			    public String Expediente_;

				public String getExpediente_ () {
					return this.Expediente_;
				}

				public Boolean Expediente_IsNullable(){
				    return true;
				}
				public Boolean Expediente_IsKey(){
				    return false;
				}
				public Integer Expediente_Length(){
				    return 25;
				}
				public Integer Expediente_Precision(){
				    return 0;
				}
				public String Expediente_Default(){
				
					return null;
				
				}
				public String Expediente_Comment(){
				
				    return "";
				
				}
				public String Expediente_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Expediente_OriginalDbColumnName(){
				
					return "Expediente_";
				
				}

				
			    public String Consecutivo_;

				public String getConsecutivo_ () {
					return this.Consecutivo_;
				}

				public Boolean Consecutivo_IsNullable(){
				    return true;
				}
				public Boolean Consecutivo_IsKey(){
				    return false;
				}
				public Integer Consecutivo_Length(){
				    return 10;
				}
				public Integer Consecutivo_Precision(){
				    return 0;
				}
				public String Consecutivo_Default(){
				
					return null;
				
				}
				public String Consecutivo_Comment(){
				
				    return "";
				
				}
				public String Consecutivo_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Consecutivo_OriginalDbColumnName(){
				
					return "Consecutivo_";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen_;

				public String getOrigen_ () {
					return this.Origen_;
				}

				public Boolean Origen_IsNullable(){
				    return true;
				}
				public Boolean Origen_IsKey(){
				    return false;
				}
				public Integer Origen_Length(){
				    return 500;
				}
				public Integer Origen_Precision(){
				    return 0;
				}
				public String Origen_Default(){
				
					return null;
				
				}
				public String Origen_Comment(){
				
				    return "";
				
				}
				public String Origen_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Origen_OriginalDbColumnName(){
				
					return "Origen_";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Caracteriticas_;

				public String getCaracteriticas_ () {
					return this.Caracteriticas_;
				}

				public Boolean Caracteriticas_IsNullable(){
				    return true;
				}
				public Boolean Caracteriticas_IsKey(){
				    return false;
				}
				public Integer Caracteriticas_Length(){
				    return null;
				}
				public Integer Caracteriticas_Precision(){
				    return null;
				}
				public String Caracteriticas_Default(){
				
					return null;
				
				}
				public String Caracteriticas_Comment(){
				
				    return "";
				
				}
				public String Caracteriticas_Pattern(){
				
					return "";
				
				}
				public String Caracteriticas_OriginalDbColumnName(){
				
					return "Caracteriticas_";
				
				}

				
			    public String Contraindicaciones_;

				public String getContraindicaciones_ () {
					return this.Contraindicaciones_;
				}

				public Boolean Contraindicaciones_IsNullable(){
				    return true;
				}
				public Boolean Contraindicaciones_IsKey(){
				    return false;
				}
				public Integer Contraindicaciones_Length(){
				    return 2000;
				}
				public Integer Contraindicaciones_Precision(){
				    return 0;
				}
				public String Contraindicaciones_Default(){
				
					return null;
				
				}
				public String Contraindicaciones_Comment(){
				
				    return "";
				
				}
				public String Contraindicaciones_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Contraindicaciones_OriginalDbColumnName(){
				
					return "Contraindicaciones_";
				
				}

				
			    public String Efectos_;

				public String getEfectos_ () {
					return this.Efectos_;
				}

				public Boolean Efectos_IsNullable(){
				    return true;
				}
				public Boolean Efectos_IsKey(){
				    return false;
				}
				public Integer Efectos_Length(){
				    return 2000;
				}
				public Integer Efectos_Precision(){
				    return 0;
				}
				public String Efectos_Default(){
				
					return null;
				
				}
				public String Efectos_Comment(){
				
				    return "";
				
				}
				public String Efectos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_OriginalDbColumnName(){
				
					return "Efectos_";
				
				}

				
			    public String Riesgos_;

				public String getRiesgos_ () {
					return this.Riesgos_;
				}

				public Boolean Riesgos_IsNullable(){
				    return true;
				}
				public Boolean Riesgos_IsKey(){
				    return false;
				}
				public Integer Riesgos_Length(){
				    return 2000;
				}
				public Integer Riesgos_Precision(){
				    return 0;
				}
				public String Riesgos_Default(){
				
					return null;
				
				}
				public String Riesgos_Comment(){
				
				    return "";
				
				}
				public String Riesgos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_OriginalDbColumnName(){
				
					return "Riesgos_";
				
				}

				
			    public String Dosis_;

				public String getDosis_ () {
					return this.Dosis_;
				}

				public Boolean Dosis_IsNullable(){
				    return true;
				}
				public Boolean Dosis_IsKey(){
				    return false;
				}
				public Integer Dosis_Length(){
				    return 500;
				}
				public Integer Dosis_Precision(){
				    return 0;
				}
				public String Dosis_Default(){
				
					return null;
				
				}
				public String Dosis_Comment(){
				
				    return "";
				
				}
				public String Dosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_OriginalDbColumnName(){
				
					return "Dosis_";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public String ViaAdmin_Id_;

				public String getViaAdmin_Id_ () {
					return this.ViaAdmin_Id_;
				}

				public Boolean ViaAdmin_Id_IsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_Id_IsKey(){
				    return false;
				}
				public Integer ViaAdmin_Id_Length(){
				    return null;
				}
				public Integer ViaAdmin_Id_Precision(){
				    return null;
				}
				public String ViaAdmin_Id_Default(){
				
					return null;
				
				}
				public String ViaAdmin_Id_Comment(){
				
				    return "";
				
				}
				public String ViaAdmin_Id_Pattern(){
				
					return "";
				
				}
				public String ViaAdmin_Id_OriginalDbColumnName(){
				
					return "ViaAdmin_Id_";
				
				}

				
			    public BigDecimal Forma_Id;

				public BigDecimal getForma_Id () {
					return this.Forma_Id;
				}

				public Boolean Forma_IdIsNullable(){
				    return true;
				}
				public Boolean Forma_IdIsKey(){
				    return false;
				}
				public Integer Forma_IdLength(){
				    return null;
				}
				public Integer Forma_IdPrecision(){
				    return null;
				}
				public String Forma_IdDefault(){
				
					return null;
				
				}
				public String Forma_IdComment(){
				
				    return "";
				
				}
				public String Forma_IdPattern(){
				
					return "";
				
				}
				public String Forma_IdOriginalDbColumnName(){
				
					return "Forma_Id";
				
				}

				
			    public String Forma_Id_;

				public String getForma_Id_ () {
					return this.Forma_Id_;
				}

				public Boolean Forma_Id_IsNullable(){
				    return true;
				}
				public Boolean Forma_Id_IsKey(){
				    return false;
				}
				public Integer Forma_Id_Length(){
				    return null;
				}
				public Integer Forma_Id_Precision(){
				    return null;
				}
				public String Forma_Id_Default(){
				
					return null;
				
				}
				public String Forma_Id_Comment(){
				
				    return "";
				
				}
				public String Forma_Id_Pattern(){
				
					return "";
				
				}
				public String Forma_Id_OriginalDbColumnName(){
				
					return "Forma_Id_";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal Formas_Farma_Id;

				public BigDecimal getFormas_Farma_Id () {
					return this.Formas_Farma_Id;
				}

				public Boolean Formas_Farma_IdIsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_IdIsKey(){
				    return false;
				}
				public Integer Formas_Farma_IdLength(){
				    return null;
				}
				public Integer Formas_Farma_IdPrecision(){
				    return null;
				}
				public String Formas_Farma_IdDefault(){
				
					return null;
				
				}
				public String Formas_Farma_IdComment(){
				
				    return "";
				
				}
				public String Formas_Farma_IdPattern(){
				
					return "";
				
				}
				public String Formas_Farma_IdOriginalDbColumnName(){
				
					return "Formas_Farma_Id";
				
				}

				
			    public String Formas_Farma_Id_;

				public String getFormas_Farma_Id_ () {
					return this.Formas_Farma_Id_;
				}

				public Boolean Formas_Farma_Id_IsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_Id_IsKey(){
				    return false;
				}
				public Integer Formas_Farma_Id_Length(){
				    return null;
				}
				public Integer Formas_Farma_Id_Precision(){
				    return null;
				}
				public String Formas_Farma_Id_Default(){
				
					return null;
				
				}
				public String Formas_Farma_Id_Comment(){
				
				    return "";
				
				}
				public String Formas_Farma_Id_Pattern(){
				
					return "";
				
				}
				public String Formas_Farma_Id_OriginalDbColumnName(){
				
					return "Formas_Farma_Id_";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public String UMedida_Id_;

				public String getUMedida_Id_ () {
					return this.UMedida_Id_;
				}

				public Boolean UMedida_Id_IsNullable(){
				    return true;
				}
				public Boolean UMedida_Id_IsKey(){
				    return false;
				}
				public Integer UMedida_Id_Length(){
				    return null;
				}
				public Integer UMedida_Id_Precision(){
				    return null;
				}
				public String UMedida_Id_Default(){
				
					return null;
				
				}
				public String UMedida_Id_Comment(){
				
				    return "";
				
				}
				public String UMedida_Id_Pattern(){
				
					return "";
				
				}
				public String UMedida_Id_OriginalDbColumnName(){
				
					return "UMedida_Id_";
				
				}

				
			    public Double Cant_UMedida;

				public Double getCant_UMedida () {
					return this.Cant_UMedida;
				}

				public Boolean Cant_UMedidaIsNullable(){
				    return true;
				}
				public Boolean Cant_UMedidaIsKey(){
				    return false;
				}
				public Integer Cant_UMedidaLength(){
				    return null;
				}
				public Integer Cant_UMedidaPrecision(){
				    return null;
				}
				public String Cant_UMedidaDefault(){
				
					return null;
				
				}
				public String Cant_UMedidaComment(){
				
				    return "";
				
				}
				public String Cant_UMedidaPattern(){
				
					return "";
				
				}
				public String Cant_UMedidaOriginalDbColumnName(){
				
					return "Cant_UMedida";
				
				}

				
			    public String Cant_UMedida_;

				public String getCant_UMedida_ () {
					return this.Cant_UMedida_;
				}

				public Boolean Cant_UMedida_IsNullable(){
				    return true;
				}
				public Boolean Cant_UMedida_IsKey(){
				    return false;
				}
				public Integer Cant_UMedida_Length(){
				    return null;
				}
				public Integer Cant_UMedida_Precision(){
				    return null;
				}
				public String Cant_UMedida_Default(){
				
					return null;
				
				}
				public String Cant_UMedida_Comment(){
				
				    return "";
				
				}
				public String Cant_UMedida_Pattern(){
				
					return "";
				
				}
				public String Cant_UMedida_OriginalDbColumnName(){
				
					return "Cant_UMedida_";
				
				}

				
			    public Integer Cant_Minima;

				public Integer getCant_Minima () {
					return this.Cant_Minima;
				}

				public Boolean Cant_MinimaIsNullable(){
				    return true;
				}
				public Boolean Cant_MinimaIsKey(){
				    return false;
				}
				public Integer Cant_MinimaLength(){
				    return null;
				}
				public Integer Cant_MinimaPrecision(){
				    return null;
				}
				public String Cant_MinimaDefault(){
				
					return null;
				
				}
				public String Cant_MinimaComment(){
				
				    return "";
				
				}
				public String Cant_MinimaPattern(){
				
					return "";
				
				}
				public String Cant_MinimaOriginalDbColumnName(){
				
					return "Cant_Minima";
				
				}

				
			    public String Cant_Minima_;

				public String getCant_Minima_ () {
					return this.Cant_Minima_;
				}

				public Boolean Cant_Minima_IsNullable(){
				    return true;
				}
				public Boolean Cant_Minima_IsKey(){
				    return false;
				}
				public Integer Cant_Minima_Length(){
				    return null;
				}
				public Integer Cant_Minima_Precision(){
				    return null;
				}
				public String Cant_Minima_Default(){
				
					return null;
				
				}
				public String Cant_Minima_Comment(){
				
				    return "";
				
				}
				public String Cant_Minima_Pattern(){
				
					return "";
				
				}
				public String Cant_Minima_OriginalDbColumnName(){
				
					return "Cant_Minima_";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public String Fabricante_Id_;

				public String getFabricante_Id_ () {
					return this.Fabricante_Id_;
				}

				public Boolean Fabricante_Id_IsNullable(){
				    return true;
				}
				public Boolean Fabricante_Id_IsKey(){
				    return false;
				}
				public Integer Fabricante_Id_Length(){
				    return null;
				}
				public Integer Fabricante_Id_Precision(){
				    return null;
				}
				public String Fabricante_Id_Default(){
				
					return null;
				
				}
				public String Fabricante_Id_Comment(){
				
				    return "";
				
				}
				public String Fabricante_Id_Pattern(){
				
					return "";
				
				}
				public String Fabricante_Id_OriginalDbColumnName(){
				
					return "Fabricante_Id_";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return null;
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				
			    public String Importador_Id_;

				public String getImportador_Id_ () {
					return this.Importador_Id_;
				}

				public Boolean Importador_Id_IsNullable(){
				    return true;
				}
				public Boolean Importador_Id_IsKey(){
				    return false;
				}
				public Integer Importador_Id_Length(){
				    return null;
				}
				public Integer Importador_Id_Precision(){
				    return null;
				}
				public String Importador_Id_Default(){
				
					return null;
				
				}
				public String Importador_Id_Comment(){
				
				    return "";
				
				}
				public String Importador_Id_Pattern(){
				
					return "";
				
				}
				public String Importador_Id_OriginalDbColumnName(){
				
					return "Importador_Id_";
				
				}

				
			    public String Ins_Caract;

				public String getIns_Caract () {
					return this.Ins_Caract;
				}

				public Boolean Ins_CaractIsNullable(){
				    return true;
				}
				public Boolean Ins_CaractIsKey(){
				    return false;
				}
				public Integer Ins_CaractLength(){
				    return null;
				}
				public Integer Ins_CaractPrecision(){
				    return null;
				}
				public String Ins_CaractDefault(){
				
					return null;
				
				}
				public String Ins_CaractComment(){
				
				    return "";
				
				}
				public String Ins_CaractPattern(){
				
					return "";
				
				}
				public String Ins_CaractOriginalDbColumnName(){
				
					return "Ins_Caract";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public BigDecimal Id_;

				public BigDecimal getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.Item = readInteger(dis);
					
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Comercial_ = readString(dis);
					
					this.Presentacion_ = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteriticas_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
					this.ViaAdmin_Id_ = readString(dis);
					
						this.Forma_Id = (BigDecimal) dis.readObject();
					
					this.Forma_Id_ = readString(dis);
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id = (BigDecimal) dis.readObject();
					
					this.Formas_Farma_Id_ = readString(dis);
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
					this.UMedida_Id_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Cant_UMedida = null;
           				} else {
           			    	this.Cant_UMedida = dis.readDouble();
           				}
					
					this.Cant_UMedida_ = readString(dis);
					
						this.Cant_Minima = readInteger(dis);
					
					this.Cant_Minima_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
					this.Fabricante_Id_ = readString(dis);
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Importador_Id_ = readString(dis);
					
					this.Ins_Caract = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.Item = readInteger(dis);
					
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Comercial_ = readString(dis);
					
					this.Presentacion_ = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteriticas_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
					this.ViaAdmin_Id_ = readString(dis);
					
						this.Forma_Id = (BigDecimal) dis.readObject();
					
					this.Forma_Id_ = readString(dis);
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id = (BigDecimal) dis.readObject();
					
					this.Formas_Farma_Id_ = readString(dis);
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
					this.UMedida_Id_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Cant_UMedida = null;
           				} else {
           			    	this.Cant_UMedida = dis.readDouble();
           				}
					
					this.Cant_UMedida_ = readString(dis);
					
						this.Cant_Minima = readInteger(dis);
					
					this.Cant_Minima_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
					this.Fabricante_Id_ = readString(dis);
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Importador_Id_ = readString(dis);
					
					this.Ins_Caract = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.Item,dos);
					
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Comercial_,dos);
					
					// String
				
						writeString(this.Presentacion_,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteriticas_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// String
				
						writeString(this.ViaAdmin_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Forma_Id);
					
					// String
				
						writeString(this.Forma_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Formas_Farma_Id);
					
					// String
				
						writeString(this.Formas_Farma_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// String
				
						writeString(this.UMedida_Id_,dos);
					
					// Double
				
						if(this.Cant_UMedida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Cant_UMedida);
		            	}
					
					// String
				
						writeString(this.Cant_UMedida_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Minima,dos);
					
					// String
				
						writeString(this.Cant_Minima_,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// String
				
						writeString(this.Fabricante_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Importador_Id_,dos);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Id_);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.Item,dos);
					
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Comercial_,dos);
					
					// String
				
						writeString(this.Presentacion_,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteriticas_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// String
				
						writeString(this.ViaAdmin_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Forma_Id);
					
					// String
				
						writeString(this.Forma_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Formas_Farma_Id);
					
					// String
				
						writeString(this.Formas_Farma_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// String
				
						writeString(this.UMedida_Id_,dos);
					
					// Double
				
						if(this.Cant_UMedida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Cant_UMedida);
		            	}
					
					// String
				
						writeString(this.Cant_UMedida_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Minima,dos);
					
					// String
				
						writeString(this.Cant_Minima_,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// String
				
						writeString(this.Fabricante_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Importador_Id_,dos);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Id_);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Item="+String.valueOf(Item));
		sb.append(",oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",Estado_="+Estado_);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",Cod_Barras_="+Cod_Barras_);
		sb.append(",Comercial_="+Comercial_);
		sb.append(",Presentacion_="+Presentacion_);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis_="+Unidosis_);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",Reg_Invima_="+Reg_Invima_);
		sb.append(",F_Expedicion_="+F_Expedicion_);
		sb.append(",F_Vencimiento_="+F_Vencimiento_);
		sb.append(",F_Activo_Cum_="+F_Activo_Cum_);
		sb.append(",F_Inactivo_Cum_="+F_Inactivo_Cum_);
		sb.append(",Expediente_="+Expediente_);
		sb.append(",Consecutivo_="+Consecutivo_);
		sb.append(",Cum="+Cum);
		sb.append(",Origen_="+Origen_);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Caracteriticas_="+Caracteriticas_);
		sb.append(",Contraindicaciones_="+Contraindicaciones_);
		sb.append(",Efectos_="+Efectos_);
		sb.append(",Riesgos_="+Riesgos_);
		sb.append(",Dosis_="+Dosis_);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",ViaAdmin_Id_="+ViaAdmin_Id_);
		sb.append(",Forma_Id="+String.valueOf(Forma_Id));
		sb.append(",Forma_Id_="+Forma_Id_);
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",Formas_Farma_Id="+String.valueOf(Formas_Farma_Id));
		sb.append(",Formas_Farma_Id_="+Formas_Farma_Id_);
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",UMedida_Id_="+UMedida_Id_);
		sb.append(",Cant_UMedida="+String.valueOf(Cant_UMedida));
		sb.append(",Cant_UMedida_="+Cant_UMedida_);
		sb.append(",Cant_Minima="+String.valueOf(Cant_Minima));
		sb.append(",Cant_Minima_="+Cant_Minima_);
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Fabricante_Id_="+Fabricante_Id_);
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
		sb.append(",Importador_Id_="+Importador_Id_);
		sb.append(",Ins_Caract="+Ins_Caract);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",Id_="+String.valueOf(Id_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row42Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row37Struct implements routines.system.IPersistableRow<row37Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public Integer Item;

				public Integer getItem () {
					return this.Item;
				}

				public Boolean ItemIsNullable(){
				    return true;
				}
				public Boolean ItemIsKey(){
				    return false;
				}
				public Integer ItemLength(){
				    return null;
				}
				public Integer ItemPrecision(){
				    return null;
				}
				public String ItemDefault(){
				
					return null;
				
				}
				public String ItemComment(){
				
				    return "";
				
				}
				public String ItemPattern(){
				
					return "";
				
				}
				public String ItemOriginalDbColumnName(){
				
					return "Item";
				
				}

				
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String Cod_Barras_;

				public String getCod_Barras_ () {
					return this.Cod_Barras_;
				}

				public Boolean Cod_Barras_IsNullable(){
				    return true;
				}
				public Boolean Cod_Barras_IsKey(){
				    return false;
				}
				public Integer Cod_Barras_Length(){
				    return 20;
				}
				public Integer Cod_Barras_Precision(){
				    return 0;
				}
				public String Cod_Barras_Default(){
				
					return null;
				
				}
				public String Cod_Barras_Comment(){
				
				    return "";
				
				}
				public String Cod_Barras_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Cod_Barras_OriginalDbColumnName(){
				
					return "Cod_Barras_";
				
				}

				
			    public String Comercial_;

				public String getComercial_ () {
					return this.Comercial_;
				}

				public Boolean Comercial_IsNullable(){
				    return true;
				}
				public Boolean Comercial_IsKey(){
				    return false;
				}
				public Integer Comercial_Length(){
				    return 150;
				}
				public Integer Comercial_Precision(){
				    return 0;
				}
				public String Comercial_Default(){
				
					return null;
				
				}
				public String Comercial_Comment(){
				
				    return "";
				
				}
				public String Comercial_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Comercial_OriginalDbColumnName(){
				
					return "Comercial_";
				
				}

				
			    public String Presentacion_;

				public String getPresentacion_ () {
					return this.Presentacion_;
				}

				public Boolean Presentacion_IsNullable(){
				    return true;
				}
				public Boolean Presentacion_IsKey(){
				    return false;
				}
				public Integer Presentacion_Length(){
				    return 500;
				}
				public Integer Presentacion_Precision(){
				    return 0;
				}
				public String Presentacion_Default(){
				
					return null;
				
				}
				public String Presentacion_Comment(){
				
				    return "";
				
				}
				public String Presentacion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Presentacion_OriginalDbColumnName(){
				
					return "Presentacion_";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis_;

				public String getUnidosis_ () {
					return this.Unidosis_;
				}

				public Boolean Unidosis_IsNullable(){
				    return true;
				}
				public Boolean Unidosis_IsKey(){
				    return false;
				}
				public Integer Unidosis_Length(){
				    return 2;
				}
				public Integer Unidosis_Precision(){
				    return 0;
				}
				public String Unidosis_Default(){
				
					return null;
				
				}
				public String Unidosis_Comment(){
				
				    return "";
				
				}
				public String Unidosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Unidosis_OriginalDbColumnName(){
				
					return "Unidosis_";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String Reg_Invima_;

				public String getReg_Invima_ () {
					return this.Reg_Invima_;
				}

				public Boolean Reg_Invima_IsNullable(){
				    return true;
				}
				public Boolean Reg_Invima_IsKey(){
				    return false;
				}
				public Integer Reg_Invima_Length(){
				    return 50;
				}
				public Integer Reg_Invima_Precision(){
				    return 0;
				}
				public String Reg_Invima_Default(){
				
					return null;
				
				}
				public String Reg_Invima_Comment(){
				
				    return "";
				
				}
				public String Reg_Invima_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Reg_Invima_OriginalDbColumnName(){
				
					return "Reg_Invima_";
				
				}

				
			    public String F_Expedicion_;

				public String getF_Expedicion_ () {
					return this.F_Expedicion_;
				}

				public Boolean F_Expedicion_IsNullable(){
				    return true;
				}
				public Boolean F_Expedicion_IsKey(){
				    return false;
				}
				public Integer F_Expedicion_Length(){
				    return 15;
				}
				public Integer F_Expedicion_Precision(){
				    return 0;
				}
				public String F_Expedicion_Default(){
				
					return null;
				
				}
				public String F_Expedicion_Comment(){
				
				    return "";
				
				}
				public String F_Expedicion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Expedicion_OriginalDbColumnName(){
				
					return "F_Expedicion_";
				
				}

				
			    public String F_Vencimiento_;

				public String getF_Vencimiento_ () {
					return this.F_Vencimiento_;
				}

				public Boolean F_Vencimiento_IsNullable(){
				    return true;
				}
				public Boolean F_Vencimiento_IsKey(){
				    return false;
				}
				public Integer F_Vencimiento_Length(){
				    return 15;
				}
				public Integer F_Vencimiento_Precision(){
				    return 0;
				}
				public String F_Vencimiento_Default(){
				
					return null;
				
				}
				public String F_Vencimiento_Comment(){
				
				    return "";
				
				}
				public String F_Vencimiento_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Vencimiento_OriginalDbColumnName(){
				
					return "F_Vencimiento_";
				
				}

				
			    public String F_Activo_Cum_;

				public String getF_Activo_Cum_ () {
					return this.F_Activo_Cum_;
				}

				public Boolean F_Activo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Activo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Activo_Cum_Length(){
				    return 15;
				}
				public Integer F_Activo_Cum_Precision(){
				    return 0;
				}
				public String F_Activo_Cum_Default(){
				
					return null;
				
				}
				public String F_Activo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Activo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Activo_Cum_OriginalDbColumnName(){
				
					return "F_Activo_Cum_";
				
				}

				
			    public String F_Inactivo_Cum_;

				public String getF_Inactivo_Cum_ () {
					return this.F_Inactivo_Cum_;
				}

				public Boolean F_Inactivo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Inactivo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Inactivo_Cum_Length(){
				    return 15;
				}
				public Integer F_Inactivo_Cum_Precision(){
				    return 0;
				}
				public String F_Inactivo_Cum_Default(){
				
					return null;
				
				}
				public String F_Inactivo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Inactivo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Inactivo_Cum_OriginalDbColumnName(){
				
					return "F_Inactivo_Cum_";
				
				}

				
			    public String Expediente_;

				public String getExpediente_ () {
					return this.Expediente_;
				}

				public Boolean Expediente_IsNullable(){
				    return true;
				}
				public Boolean Expediente_IsKey(){
				    return false;
				}
				public Integer Expediente_Length(){
				    return 25;
				}
				public Integer Expediente_Precision(){
				    return 0;
				}
				public String Expediente_Default(){
				
					return null;
				
				}
				public String Expediente_Comment(){
				
				    return "";
				
				}
				public String Expediente_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Expediente_OriginalDbColumnName(){
				
					return "Expediente_";
				
				}

				
			    public String Consecutivo_;

				public String getConsecutivo_ () {
					return this.Consecutivo_;
				}

				public Boolean Consecutivo_IsNullable(){
				    return true;
				}
				public Boolean Consecutivo_IsKey(){
				    return false;
				}
				public Integer Consecutivo_Length(){
				    return 10;
				}
				public Integer Consecutivo_Precision(){
				    return 0;
				}
				public String Consecutivo_Default(){
				
					return null;
				
				}
				public String Consecutivo_Comment(){
				
				    return "";
				
				}
				public String Consecutivo_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Consecutivo_OriginalDbColumnName(){
				
					return "Consecutivo_";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen_;

				public String getOrigen_ () {
					return this.Origen_;
				}

				public Boolean Origen_IsNullable(){
				    return true;
				}
				public Boolean Origen_IsKey(){
				    return false;
				}
				public Integer Origen_Length(){
				    return 500;
				}
				public Integer Origen_Precision(){
				    return 0;
				}
				public String Origen_Default(){
				
					return null;
				
				}
				public String Origen_Comment(){
				
				    return "";
				
				}
				public String Origen_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Origen_OriginalDbColumnName(){
				
					return "Origen_";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Caracteriticas_;

				public String getCaracteriticas_ () {
					return this.Caracteriticas_;
				}

				public Boolean Caracteriticas_IsNullable(){
				    return true;
				}
				public Boolean Caracteriticas_IsKey(){
				    return false;
				}
				public Integer Caracteriticas_Length(){
				    return null;
				}
				public Integer Caracteriticas_Precision(){
				    return null;
				}
				public String Caracteriticas_Default(){
				
					return null;
				
				}
				public String Caracteriticas_Comment(){
				
				    return "";
				
				}
				public String Caracteriticas_Pattern(){
				
					return "";
				
				}
				public String Caracteriticas_OriginalDbColumnName(){
				
					return "Caracteriticas_";
				
				}

				
			    public String Contraindicaciones_;

				public String getContraindicaciones_ () {
					return this.Contraindicaciones_;
				}

				public Boolean Contraindicaciones_IsNullable(){
				    return true;
				}
				public Boolean Contraindicaciones_IsKey(){
				    return false;
				}
				public Integer Contraindicaciones_Length(){
				    return 2000;
				}
				public Integer Contraindicaciones_Precision(){
				    return 0;
				}
				public String Contraindicaciones_Default(){
				
					return null;
				
				}
				public String Contraindicaciones_Comment(){
				
				    return "";
				
				}
				public String Contraindicaciones_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Contraindicaciones_OriginalDbColumnName(){
				
					return "Contraindicaciones_";
				
				}

				
			    public String Efectos_;

				public String getEfectos_ () {
					return this.Efectos_;
				}

				public Boolean Efectos_IsNullable(){
				    return true;
				}
				public Boolean Efectos_IsKey(){
				    return false;
				}
				public Integer Efectos_Length(){
				    return 2000;
				}
				public Integer Efectos_Precision(){
				    return 0;
				}
				public String Efectos_Default(){
				
					return null;
				
				}
				public String Efectos_Comment(){
				
				    return "";
				
				}
				public String Efectos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_OriginalDbColumnName(){
				
					return "Efectos_";
				
				}

				
			    public String Riesgos_;

				public String getRiesgos_ () {
					return this.Riesgos_;
				}

				public Boolean Riesgos_IsNullable(){
				    return true;
				}
				public Boolean Riesgos_IsKey(){
				    return false;
				}
				public Integer Riesgos_Length(){
				    return 2000;
				}
				public Integer Riesgos_Precision(){
				    return 0;
				}
				public String Riesgos_Default(){
				
					return null;
				
				}
				public String Riesgos_Comment(){
				
				    return "";
				
				}
				public String Riesgos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_OriginalDbColumnName(){
				
					return "Riesgos_";
				
				}

				
			    public String Dosis_;

				public String getDosis_ () {
					return this.Dosis_;
				}

				public Boolean Dosis_IsNullable(){
				    return true;
				}
				public Boolean Dosis_IsKey(){
				    return false;
				}
				public Integer Dosis_Length(){
				    return 500;
				}
				public Integer Dosis_Precision(){
				    return 0;
				}
				public String Dosis_Default(){
				
					return null;
				
				}
				public String Dosis_Comment(){
				
				    return "";
				
				}
				public String Dosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_OriginalDbColumnName(){
				
					return "Dosis_";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public String ViaAdmin_Id_;

				public String getViaAdmin_Id_ () {
					return this.ViaAdmin_Id_;
				}

				public Boolean ViaAdmin_Id_IsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_Id_IsKey(){
				    return false;
				}
				public Integer ViaAdmin_Id_Length(){
				    return null;
				}
				public Integer ViaAdmin_Id_Precision(){
				    return null;
				}
				public String ViaAdmin_Id_Default(){
				
					return null;
				
				}
				public String ViaAdmin_Id_Comment(){
				
				    return "";
				
				}
				public String ViaAdmin_Id_Pattern(){
				
					return "";
				
				}
				public String ViaAdmin_Id_OriginalDbColumnName(){
				
					return "ViaAdmin_Id_";
				
				}

				
			    public BigDecimal Forma_Id;

				public BigDecimal getForma_Id () {
					return this.Forma_Id;
				}

				public Boolean Forma_IdIsNullable(){
				    return true;
				}
				public Boolean Forma_IdIsKey(){
				    return false;
				}
				public Integer Forma_IdLength(){
				    return null;
				}
				public Integer Forma_IdPrecision(){
				    return null;
				}
				public String Forma_IdDefault(){
				
					return null;
				
				}
				public String Forma_IdComment(){
				
				    return "";
				
				}
				public String Forma_IdPattern(){
				
					return "";
				
				}
				public String Forma_IdOriginalDbColumnName(){
				
					return "Forma_Id";
				
				}

				
			    public String Forma_Id_;

				public String getForma_Id_ () {
					return this.Forma_Id_;
				}

				public Boolean Forma_Id_IsNullable(){
				    return true;
				}
				public Boolean Forma_Id_IsKey(){
				    return false;
				}
				public Integer Forma_Id_Length(){
				    return null;
				}
				public Integer Forma_Id_Precision(){
				    return null;
				}
				public String Forma_Id_Default(){
				
					return null;
				
				}
				public String Forma_Id_Comment(){
				
				    return "";
				
				}
				public String Forma_Id_Pattern(){
				
					return "";
				
				}
				public String Forma_Id_OriginalDbColumnName(){
				
					return "Forma_Id_";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal Formas_Farma_Id;

				public BigDecimal getFormas_Farma_Id () {
					return this.Formas_Farma_Id;
				}

				public Boolean Formas_Farma_IdIsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_IdIsKey(){
				    return false;
				}
				public Integer Formas_Farma_IdLength(){
				    return null;
				}
				public Integer Formas_Farma_IdPrecision(){
				    return null;
				}
				public String Formas_Farma_IdDefault(){
				
					return null;
				
				}
				public String Formas_Farma_IdComment(){
				
				    return "";
				
				}
				public String Formas_Farma_IdPattern(){
				
					return "";
				
				}
				public String Formas_Farma_IdOriginalDbColumnName(){
				
					return "Formas_Farma_Id";
				
				}

				
			    public String Formas_Farma_Id_;

				public String getFormas_Farma_Id_ () {
					return this.Formas_Farma_Id_;
				}

				public Boolean Formas_Farma_Id_IsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_Id_IsKey(){
				    return false;
				}
				public Integer Formas_Farma_Id_Length(){
				    return null;
				}
				public Integer Formas_Farma_Id_Precision(){
				    return null;
				}
				public String Formas_Farma_Id_Default(){
				
					return null;
				
				}
				public String Formas_Farma_Id_Comment(){
				
				    return "";
				
				}
				public String Formas_Farma_Id_Pattern(){
				
					return "";
				
				}
				public String Formas_Farma_Id_OriginalDbColumnName(){
				
					return "Formas_Farma_Id_";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public String UMedida_Id_;

				public String getUMedida_Id_ () {
					return this.UMedida_Id_;
				}

				public Boolean UMedida_Id_IsNullable(){
				    return true;
				}
				public Boolean UMedida_Id_IsKey(){
				    return false;
				}
				public Integer UMedida_Id_Length(){
				    return null;
				}
				public Integer UMedida_Id_Precision(){
				    return null;
				}
				public String UMedida_Id_Default(){
				
					return null;
				
				}
				public String UMedida_Id_Comment(){
				
				    return "";
				
				}
				public String UMedida_Id_Pattern(){
				
					return "";
				
				}
				public String UMedida_Id_OriginalDbColumnName(){
				
					return "UMedida_Id_";
				
				}

				
			    public Double Cant_UMedida;

				public Double getCant_UMedida () {
					return this.Cant_UMedida;
				}

				public Boolean Cant_UMedidaIsNullable(){
				    return true;
				}
				public Boolean Cant_UMedidaIsKey(){
				    return false;
				}
				public Integer Cant_UMedidaLength(){
				    return null;
				}
				public Integer Cant_UMedidaPrecision(){
				    return null;
				}
				public String Cant_UMedidaDefault(){
				
					return null;
				
				}
				public String Cant_UMedidaComment(){
				
				    return "";
				
				}
				public String Cant_UMedidaPattern(){
				
					return "";
				
				}
				public String Cant_UMedidaOriginalDbColumnName(){
				
					return "Cant_UMedida";
				
				}

				
			    public String Cant_UMedida_;

				public String getCant_UMedida_ () {
					return this.Cant_UMedida_;
				}

				public Boolean Cant_UMedida_IsNullable(){
				    return true;
				}
				public Boolean Cant_UMedida_IsKey(){
				    return false;
				}
				public Integer Cant_UMedida_Length(){
				    return null;
				}
				public Integer Cant_UMedida_Precision(){
				    return null;
				}
				public String Cant_UMedida_Default(){
				
					return null;
				
				}
				public String Cant_UMedida_Comment(){
				
				    return "";
				
				}
				public String Cant_UMedida_Pattern(){
				
					return "";
				
				}
				public String Cant_UMedida_OriginalDbColumnName(){
				
					return "Cant_UMedida_";
				
				}

				
			    public Integer Cant_Minima;

				public Integer getCant_Minima () {
					return this.Cant_Minima;
				}

				public Boolean Cant_MinimaIsNullable(){
				    return true;
				}
				public Boolean Cant_MinimaIsKey(){
				    return false;
				}
				public Integer Cant_MinimaLength(){
				    return null;
				}
				public Integer Cant_MinimaPrecision(){
				    return null;
				}
				public String Cant_MinimaDefault(){
				
					return null;
				
				}
				public String Cant_MinimaComment(){
				
				    return "";
				
				}
				public String Cant_MinimaPattern(){
				
					return "";
				
				}
				public String Cant_MinimaOriginalDbColumnName(){
				
					return "Cant_Minima";
				
				}

				
			    public String Cant_Minima_;

				public String getCant_Minima_ () {
					return this.Cant_Minima_;
				}

				public Boolean Cant_Minima_IsNullable(){
				    return true;
				}
				public Boolean Cant_Minima_IsKey(){
				    return false;
				}
				public Integer Cant_Minima_Length(){
				    return null;
				}
				public Integer Cant_Minima_Precision(){
				    return null;
				}
				public String Cant_Minima_Default(){
				
					return null;
				
				}
				public String Cant_Minima_Comment(){
				
				    return "";
				
				}
				public String Cant_Minima_Pattern(){
				
					return "";
				
				}
				public String Cant_Minima_OriginalDbColumnName(){
				
					return "Cant_Minima_";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public String Fabricante_Id_;

				public String getFabricante_Id_ () {
					return this.Fabricante_Id_;
				}

				public Boolean Fabricante_Id_IsNullable(){
				    return true;
				}
				public Boolean Fabricante_Id_IsKey(){
				    return false;
				}
				public Integer Fabricante_Id_Length(){
				    return null;
				}
				public Integer Fabricante_Id_Precision(){
				    return null;
				}
				public String Fabricante_Id_Default(){
				
					return null;
				
				}
				public String Fabricante_Id_Comment(){
				
				    return "";
				
				}
				public String Fabricante_Id_Pattern(){
				
					return "";
				
				}
				public String Fabricante_Id_OriginalDbColumnName(){
				
					return "Fabricante_Id_";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return null;
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				
			    public String Importador_Id_;

				public String getImportador_Id_ () {
					return this.Importador_Id_;
				}

				public Boolean Importador_Id_IsNullable(){
				    return true;
				}
				public Boolean Importador_Id_IsKey(){
				    return false;
				}
				public Integer Importador_Id_Length(){
				    return null;
				}
				public Integer Importador_Id_Precision(){
				    return null;
				}
				public String Importador_Id_Default(){
				
					return null;
				
				}
				public String Importador_Id_Comment(){
				
				    return "";
				
				}
				public String Importador_Id_Pattern(){
				
					return "";
				
				}
				public String Importador_Id_OriginalDbColumnName(){
				
					return "Importador_Id_";
				
				}

				
			    public String Ins_Caract;

				public String getIns_Caract () {
					return this.Ins_Caract;
				}

				public Boolean Ins_CaractIsNullable(){
				    return true;
				}
				public Boolean Ins_CaractIsKey(){
				    return false;
				}
				public Integer Ins_CaractLength(){
				    return null;
				}
				public Integer Ins_CaractPrecision(){
				    return null;
				}
				public String Ins_CaractDefault(){
				
					return null;
				
				}
				public String Ins_CaractComment(){
				
				    return "";
				
				}
				public String Ins_CaractPattern(){
				
					return "";
				
				}
				public String Ins_CaractOriginalDbColumnName(){
				
					return "Ins_Caract";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public BigDecimal Id_;

				public BigDecimal getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.Item = readInteger(dis);
					
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Comercial_ = readString(dis);
					
					this.Presentacion_ = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteriticas_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
					this.ViaAdmin_Id_ = readString(dis);
					
						this.Forma_Id = (BigDecimal) dis.readObject();
					
					this.Forma_Id_ = readString(dis);
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id = (BigDecimal) dis.readObject();
					
					this.Formas_Farma_Id_ = readString(dis);
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
					this.UMedida_Id_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Cant_UMedida = null;
           				} else {
           			    	this.Cant_UMedida = dis.readDouble();
           				}
					
					this.Cant_UMedida_ = readString(dis);
					
						this.Cant_Minima = readInteger(dis);
					
					this.Cant_Minima_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
					this.Fabricante_Id_ = readString(dis);
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Importador_Id_ = readString(dis);
					
					this.Ins_Caract = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.Item = readInteger(dis);
					
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Comercial_ = readString(dis);
					
					this.Presentacion_ = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteriticas_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
					this.ViaAdmin_Id_ = readString(dis);
					
						this.Forma_Id = (BigDecimal) dis.readObject();
					
					this.Forma_Id_ = readString(dis);
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id = (BigDecimal) dis.readObject();
					
					this.Formas_Farma_Id_ = readString(dis);
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
					this.UMedida_Id_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Cant_UMedida = null;
           				} else {
           			    	this.Cant_UMedida = dis.readDouble();
           				}
					
					this.Cant_UMedida_ = readString(dis);
					
						this.Cant_Minima = readInteger(dis);
					
					this.Cant_Minima_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
					this.Fabricante_Id_ = readString(dis);
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Importador_Id_ = readString(dis);
					
					this.Ins_Caract = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.Item,dos);
					
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Comercial_,dos);
					
					// String
				
						writeString(this.Presentacion_,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteriticas_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// String
				
						writeString(this.ViaAdmin_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Forma_Id);
					
					// String
				
						writeString(this.Forma_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Formas_Farma_Id);
					
					// String
				
						writeString(this.Formas_Farma_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// String
				
						writeString(this.UMedida_Id_,dos);
					
					// Double
				
						if(this.Cant_UMedida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Cant_UMedida);
		            	}
					
					// String
				
						writeString(this.Cant_UMedida_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Minima,dos);
					
					// String
				
						writeString(this.Cant_Minima_,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// String
				
						writeString(this.Fabricante_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Importador_Id_,dos);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Id_);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.Item,dos);
					
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Comercial_,dos);
					
					// String
				
						writeString(this.Presentacion_,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteriticas_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// String
				
						writeString(this.ViaAdmin_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Forma_Id);
					
					// String
				
						writeString(this.Forma_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Formas_Farma_Id);
					
					// String
				
						writeString(this.Formas_Farma_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// String
				
						writeString(this.UMedida_Id_,dos);
					
					// Double
				
						if(this.Cant_UMedida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Cant_UMedida);
		            	}
					
					// String
				
						writeString(this.Cant_UMedida_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Minima,dos);
					
					// String
				
						writeString(this.Cant_Minima_,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// String
				
						writeString(this.Fabricante_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Importador_Id_,dos);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Id_);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Item="+String.valueOf(Item));
		sb.append(",oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",Estado_="+Estado_);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",Cod_Barras_="+Cod_Barras_);
		sb.append(",Comercial_="+Comercial_);
		sb.append(",Presentacion_="+Presentacion_);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis_="+Unidosis_);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",Reg_Invima_="+Reg_Invima_);
		sb.append(",F_Expedicion_="+F_Expedicion_);
		sb.append(",F_Vencimiento_="+F_Vencimiento_);
		sb.append(",F_Activo_Cum_="+F_Activo_Cum_);
		sb.append(",F_Inactivo_Cum_="+F_Inactivo_Cum_);
		sb.append(",Expediente_="+Expediente_);
		sb.append(",Consecutivo_="+Consecutivo_);
		sb.append(",Cum="+Cum);
		sb.append(",Origen_="+Origen_);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Caracteriticas_="+Caracteriticas_);
		sb.append(",Contraindicaciones_="+Contraindicaciones_);
		sb.append(",Efectos_="+Efectos_);
		sb.append(",Riesgos_="+Riesgos_);
		sb.append(",Dosis_="+Dosis_);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",ViaAdmin_Id_="+ViaAdmin_Id_);
		sb.append(",Forma_Id="+String.valueOf(Forma_Id));
		sb.append(",Forma_Id_="+Forma_Id_);
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",Formas_Farma_Id="+String.valueOf(Formas_Farma_Id));
		sb.append(",Formas_Farma_Id_="+Formas_Farma_Id_);
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",UMedida_Id_="+UMedida_Id_);
		sb.append(",Cant_UMedida="+String.valueOf(Cant_UMedida));
		sb.append(",Cant_UMedida_="+Cant_UMedida_);
		sb.append(",Cant_Minima="+String.valueOf(Cant_Minima));
		sb.append(",Cant_Minima_="+Cant_Minima_);
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Fabricante_Id_="+Fabricante_Id_);
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
		sb.append(",Importador_Id_="+Importador_Id_);
		sb.append(",Ins_Caract="+Ins_Caract);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",Id_="+String.valueOf(Id_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row37Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtSortRow_1 implements routines.system.IPersistableRow<OnRowsEndStructtSortRow_1> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public Integer Item;

				public Integer getItem () {
					return this.Item;
				}

				public Boolean ItemIsNullable(){
				    return true;
				}
				public Boolean ItemIsKey(){
				    return false;
				}
				public Integer ItemLength(){
				    return null;
				}
				public Integer ItemPrecision(){
				    return null;
				}
				public String ItemDefault(){
				
					return null;
				
				}
				public String ItemComment(){
				
				    return "";
				
				}
				public String ItemPattern(){
				
					return "";
				
				}
				public String ItemOriginalDbColumnName(){
				
					return "Item";
				
				}

				
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String Cod_Barras_;

				public String getCod_Barras_ () {
					return this.Cod_Barras_;
				}

				public Boolean Cod_Barras_IsNullable(){
				    return true;
				}
				public Boolean Cod_Barras_IsKey(){
				    return false;
				}
				public Integer Cod_Barras_Length(){
				    return 20;
				}
				public Integer Cod_Barras_Precision(){
				    return 0;
				}
				public String Cod_Barras_Default(){
				
					return null;
				
				}
				public String Cod_Barras_Comment(){
				
				    return "";
				
				}
				public String Cod_Barras_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Cod_Barras_OriginalDbColumnName(){
				
					return "Cod_Barras_";
				
				}

				
			    public String Comercial_;

				public String getComercial_ () {
					return this.Comercial_;
				}

				public Boolean Comercial_IsNullable(){
				    return true;
				}
				public Boolean Comercial_IsKey(){
				    return false;
				}
				public Integer Comercial_Length(){
				    return 150;
				}
				public Integer Comercial_Precision(){
				    return 0;
				}
				public String Comercial_Default(){
				
					return null;
				
				}
				public String Comercial_Comment(){
				
				    return "";
				
				}
				public String Comercial_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Comercial_OriginalDbColumnName(){
				
					return "Comercial_";
				
				}

				
			    public String Presentacion_;

				public String getPresentacion_ () {
					return this.Presentacion_;
				}

				public Boolean Presentacion_IsNullable(){
				    return true;
				}
				public Boolean Presentacion_IsKey(){
				    return false;
				}
				public Integer Presentacion_Length(){
				    return 500;
				}
				public Integer Presentacion_Precision(){
				    return 0;
				}
				public String Presentacion_Default(){
				
					return null;
				
				}
				public String Presentacion_Comment(){
				
				    return "";
				
				}
				public String Presentacion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Presentacion_OriginalDbColumnName(){
				
					return "Presentacion_";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis_;

				public String getUnidosis_ () {
					return this.Unidosis_;
				}

				public Boolean Unidosis_IsNullable(){
				    return true;
				}
				public Boolean Unidosis_IsKey(){
				    return false;
				}
				public Integer Unidosis_Length(){
				    return 2;
				}
				public Integer Unidosis_Precision(){
				    return 0;
				}
				public String Unidosis_Default(){
				
					return null;
				
				}
				public String Unidosis_Comment(){
				
				    return "";
				
				}
				public String Unidosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Unidosis_OriginalDbColumnName(){
				
					return "Unidosis_";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String Reg_Invima_;

				public String getReg_Invima_ () {
					return this.Reg_Invima_;
				}

				public Boolean Reg_Invima_IsNullable(){
				    return true;
				}
				public Boolean Reg_Invima_IsKey(){
				    return false;
				}
				public Integer Reg_Invima_Length(){
				    return 50;
				}
				public Integer Reg_Invima_Precision(){
				    return 0;
				}
				public String Reg_Invima_Default(){
				
					return null;
				
				}
				public String Reg_Invima_Comment(){
				
				    return "";
				
				}
				public String Reg_Invima_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Reg_Invima_OriginalDbColumnName(){
				
					return "Reg_Invima_";
				
				}

				
			    public String F_Expedicion_;

				public String getF_Expedicion_ () {
					return this.F_Expedicion_;
				}

				public Boolean F_Expedicion_IsNullable(){
				    return true;
				}
				public Boolean F_Expedicion_IsKey(){
				    return false;
				}
				public Integer F_Expedicion_Length(){
				    return 15;
				}
				public Integer F_Expedicion_Precision(){
				    return 0;
				}
				public String F_Expedicion_Default(){
				
					return null;
				
				}
				public String F_Expedicion_Comment(){
				
				    return "";
				
				}
				public String F_Expedicion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Expedicion_OriginalDbColumnName(){
				
					return "F_Expedicion_";
				
				}

				
			    public String F_Vencimiento_;

				public String getF_Vencimiento_ () {
					return this.F_Vencimiento_;
				}

				public Boolean F_Vencimiento_IsNullable(){
				    return true;
				}
				public Boolean F_Vencimiento_IsKey(){
				    return false;
				}
				public Integer F_Vencimiento_Length(){
				    return 15;
				}
				public Integer F_Vencimiento_Precision(){
				    return 0;
				}
				public String F_Vencimiento_Default(){
				
					return null;
				
				}
				public String F_Vencimiento_Comment(){
				
				    return "";
				
				}
				public String F_Vencimiento_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Vencimiento_OriginalDbColumnName(){
				
					return "F_Vencimiento_";
				
				}

				
			    public String F_Activo_Cum_;

				public String getF_Activo_Cum_ () {
					return this.F_Activo_Cum_;
				}

				public Boolean F_Activo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Activo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Activo_Cum_Length(){
				    return 15;
				}
				public Integer F_Activo_Cum_Precision(){
				    return 0;
				}
				public String F_Activo_Cum_Default(){
				
					return null;
				
				}
				public String F_Activo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Activo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Activo_Cum_OriginalDbColumnName(){
				
					return "F_Activo_Cum_";
				
				}

				
			    public String F_Inactivo_Cum_;

				public String getF_Inactivo_Cum_ () {
					return this.F_Inactivo_Cum_;
				}

				public Boolean F_Inactivo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Inactivo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Inactivo_Cum_Length(){
				    return 15;
				}
				public Integer F_Inactivo_Cum_Precision(){
				    return 0;
				}
				public String F_Inactivo_Cum_Default(){
				
					return null;
				
				}
				public String F_Inactivo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Inactivo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Inactivo_Cum_OriginalDbColumnName(){
				
					return "F_Inactivo_Cum_";
				
				}

				
			    public String Expediente_;

				public String getExpediente_ () {
					return this.Expediente_;
				}

				public Boolean Expediente_IsNullable(){
				    return true;
				}
				public Boolean Expediente_IsKey(){
				    return false;
				}
				public Integer Expediente_Length(){
				    return 25;
				}
				public Integer Expediente_Precision(){
				    return 0;
				}
				public String Expediente_Default(){
				
					return null;
				
				}
				public String Expediente_Comment(){
				
				    return "";
				
				}
				public String Expediente_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Expediente_OriginalDbColumnName(){
				
					return "Expediente_";
				
				}

				
			    public String Consecutivo_;

				public String getConsecutivo_ () {
					return this.Consecutivo_;
				}

				public Boolean Consecutivo_IsNullable(){
				    return true;
				}
				public Boolean Consecutivo_IsKey(){
				    return false;
				}
				public Integer Consecutivo_Length(){
				    return 10;
				}
				public Integer Consecutivo_Precision(){
				    return 0;
				}
				public String Consecutivo_Default(){
				
					return null;
				
				}
				public String Consecutivo_Comment(){
				
				    return "";
				
				}
				public String Consecutivo_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Consecutivo_OriginalDbColumnName(){
				
					return "Consecutivo_";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen_;

				public String getOrigen_ () {
					return this.Origen_;
				}

				public Boolean Origen_IsNullable(){
				    return true;
				}
				public Boolean Origen_IsKey(){
				    return false;
				}
				public Integer Origen_Length(){
				    return 500;
				}
				public Integer Origen_Precision(){
				    return 0;
				}
				public String Origen_Default(){
				
					return null;
				
				}
				public String Origen_Comment(){
				
				    return "";
				
				}
				public String Origen_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Origen_OriginalDbColumnName(){
				
					return "Origen_";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Caracteriticas_;

				public String getCaracteriticas_ () {
					return this.Caracteriticas_;
				}

				public Boolean Caracteriticas_IsNullable(){
				    return true;
				}
				public Boolean Caracteriticas_IsKey(){
				    return false;
				}
				public Integer Caracteriticas_Length(){
				    return null;
				}
				public Integer Caracteriticas_Precision(){
				    return null;
				}
				public String Caracteriticas_Default(){
				
					return null;
				
				}
				public String Caracteriticas_Comment(){
				
				    return "";
				
				}
				public String Caracteriticas_Pattern(){
				
					return "";
				
				}
				public String Caracteriticas_OriginalDbColumnName(){
				
					return "Caracteriticas_";
				
				}

				
			    public String Contraindicaciones_;

				public String getContraindicaciones_ () {
					return this.Contraindicaciones_;
				}

				public Boolean Contraindicaciones_IsNullable(){
				    return true;
				}
				public Boolean Contraindicaciones_IsKey(){
				    return false;
				}
				public Integer Contraindicaciones_Length(){
				    return 2000;
				}
				public Integer Contraindicaciones_Precision(){
				    return 0;
				}
				public String Contraindicaciones_Default(){
				
					return null;
				
				}
				public String Contraindicaciones_Comment(){
				
				    return "";
				
				}
				public String Contraindicaciones_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Contraindicaciones_OriginalDbColumnName(){
				
					return "Contraindicaciones_";
				
				}

				
			    public String Efectos_;

				public String getEfectos_ () {
					return this.Efectos_;
				}

				public Boolean Efectos_IsNullable(){
				    return true;
				}
				public Boolean Efectos_IsKey(){
				    return false;
				}
				public Integer Efectos_Length(){
				    return 2000;
				}
				public Integer Efectos_Precision(){
				    return 0;
				}
				public String Efectos_Default(){
				
					return null;
				
				}
				public String Efectos_Comment(){
				
				    return "";
				
				}
				public String Efectos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_OriginalDbColumnName(){
				
					return "Efectos_";
				
				}

				
			    public String Riesgos_;

				public String getRiesgos_ () {
					return this.Riesgos_;
				}

				public Boolean Riesgos_IsNullable(){
				    return true;
				}
				public Boolean Riesgos_IsKey(){
				    return false;
				}
				public Integer Riesgos_Length(){
				    return 2000;
				}
				public Integer Riesgos_Precision(){
				    return 0;
				}
				public String Riesgos_Default(){
				
					return null;
				
				}
				public String Riesgos_Comment(){
				
				    return "";
				
				}
				public String Riesgos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_OriginalDbColumnName(){
				
					return "Riesgos_";
				
				}

				
			    public String Dosis_;

				public String getDosis_ () {
					return this.Dosis_;
				}

				public Boolean Dosis_IsNullable(){
				    return true;
				}
				public Boolean Dosis_IsKey(){
				    return false;
				}
				public Integer Dosis_Length(){
				    return 500;
				}
				public Integer Dosis_Precision(){
				    return 0;
				}
				public String Dosis_Default(){
				
					return null;
				
				}
				public String Dosis_Comment(){
				
				    return "";
				
				}
				public String Dosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_OriginalDbColumnName(){
				
					return "Dosis_";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public String ViaAdmin_Id_;

				public String getViaAdmin_Id_ () {
					return this.ViaAdmin_Id_;
				}

				public Boolean ViaAdmin_Id_IsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_Id_IsKey(){
				    return false;
				}
				public Integer ViaAdmin_Id_Length(){
				    return null;
				}
				public Integer ViaAdmin_Id_Precision(){
				    return null;
				}
				public String ViaAdmin_Id_Default(){
				
					return null;
				
				}
				public String ViaAdmin_Id_Comment(){
				
				    return "";
				
				}
				public String ViaAdmin_Id_Pattern(){
				
					return "";
				
				}
				public String ViaAdmin_Id_OriginalDbColumnName(){
				
					return "ViaAdmin_Id_";
				
				}

				
			    public BigDecimal Forma_Id;

				public BigDecimal getForma_Id () {
					return this.Forma_Id;
				}

				public Boolean Forma_IdIsNullable(){
				    return true;
				}
				public Boolean Forma_IdIsKey(){
				    return false;
				}
				public Integer Forma_IdLength(){
				    return null;
				}
				public Integer Forma_IdPrecision(){
				    return null;
				}
				public String Forma_IdDefault(){
				
					return null;
				
				}
				public String Forma_IdComment(){
				
				    return "";
				
				}
				public String Forma_IdPattern(){
				
					return "";
				
				}
				public String Forma_IdOriginalDbColumnName(){
				
					return "Forma_Id";
				
				}

				
			    public String Forma_Id_;

				public String getForma_Id_ () {
					return this.Forma_Id_;
				}

				public Boolean Forma_Id_IsNullable(){
				    return true;
				}
				public Boolean Forma_Id_IsKey(){
				    return false;
				}
				public Integer Forma_Id_Length(){
				    return null;
				}
				public Integer Forma_Id_Precision(){
				    return null;
				}
				public String Forma_Id_Default(){
				
					return null;
				
				}
				public String Forma_Id_Comment(){
				
				    return "";
				
				}
				public String Forma_Id_Pattern(){
				
					return "";
				
				}
				public String Forma_Id_OriginalDbColumnName(){
				
					return "Forma_Id_";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal Formas_Farma_Id;

				public BigDecimal getFormas_Farma_Id () {
					return this.Formas_Farma_Id;
				}

				public Boolean Formas_Farma_IdIsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_IdIsKey(){
				    return false;
				}
				public Integer Formas_Farma_IdLength(){
				    return null;
				}
				public Integer Formas_Farma_IdPrecision(){
				    return null;
				}
				public String Formas_Farma_IdDefault(){
				
					return null;
				
				}
				public String Formas_Farma_IdComment(){
				
				    return "";
				
				}
				public String Formas_Farma_IdPattern(){
				
					return "";
				
				}
				public String Formas_Farma_IdOriginalDbColumnName(){
				
					return "Formas_Farma_Id";
				
				}

				
			    public String Formas_Farma_Id_;

				public String getFormas_Farma_Id_ () {
					return this.Formas_Farma_Id_;
				}

				public Boolean Formas_Farma_Id_IsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_Id_IsKey(){
				    return false;
				}
				public Integer Formas_Farma_Id_Length(){
				    return null;
				}
				public Integer Formas_Farma_Id_Precision(){
				    return null;
				}
				public String Formas_Farma_Id_Default(){
				
					return null;
				
				}
				public String Formas_Farma_Id_Comment(){
				
				    return "";
				
				}
				public String Formas_Farma_Id_Pattern(){
				
					return "";
				
				}
				public String Formas_Farma_Id_OriginalDbColumnName(){
				
					return "Formas_Farma_Id_";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public String UMedida_Id_;

				public String getUMedida_Id_ () {
					return this.UMedida_Id_;
				}

				public Boolean UMedida_Id_IsNullable(){
				    return true;
				}
				public Boolean UMedida_Id_IsKey(){
				    return false;
				}
				public Integer UMedida_Id_Length(){
				    return null;
				}
				public Integer UMedida_Id_Precision(){
				    return null;
				}
				public String UMedida_Id_Default(){
				
					return null;
				
				}
				public String UMedida_Id_Comment(){
				
				    return "";
				
				}
				public String UMedida_Id_Pattern(){
				
					return "";
				
				}
				public String UMedida_Id_OriginalDbColumnName(){
				
					return "UMedida_Id_";
				
				}

				
			    public Double Cant_UMedida;

				public Double getCant_UMedida () {
					return this.Cant_UMedida;
				}

				public Boolean Cant_UMedidaIsNullable(){
				    return true;
				}
				public Boolean Cant_UMedidaIsKey(){
				    return false;
				}
				public Integer Cant_UMedidaLength(){
				    return null;
				}
				public Integer Cant_UMedidaPrecision(){
				    return null;
				}
				public String Cant_UMedidaDefault(){
				
					return null;
				
				}
				public String Cant_UMedidaComment(){
				
				    return "";
				
				}
				public String Cant_UMedidaPattern(){
				
					return "";
				
				}
				public String Cant_UMedidaOriginalDbColumnName(){
				
					return "Cant_UMedida";
				
				}

				
			    public String Cant_UMedida_;

				public String getCant_UMedida_ () {
					return this.Cant_UMedida_;
				}

				public Boolean Cant_UMedida_IsNullable(){
				    return true;
				}
				public Boolean Cant_UMedida_IsKey(){
				    return false;
				}
				public Integer Cant_UMedida_Length(){
				    return null;
				}
				public Integer Cant_UMedida_Precision(){
				    return null;
				}
				public String Cant_UMedida_Default(){
				
					return null;
				
				}
				public String Cant_UMedida_Comment(){
				
				    return "";
				
				}
				public String Cant_UMedida_Pattern(){
				
					return "";
				
				}
				public String Cant_UMedida_OriginalDbColumnName(){
				
					return "Cant_UMedida_";
				
				}

				
			    public Integer Cant_Minima;

				public Integer getCant_Minima () {
					return this.Cant_Minima;
				}

				public Boolean Cant_MinimaIsNullable(){
				    return true;
				}
				public Boolean Cant_MinimaIsKey(){
				    return false;
				}
				public Integer Cant_MinimaLength(){
				    return null;
				}
				public Integer Cant_MinimaPrecision(){
				    return null;
				}
				public String Cant_MinimaDefault(){
				
					return null;
				
				}
				public String Cant_MinimaComment(){
				
				    return "";
				
				}
				public String Cant_MinimaPattern(){
				
					return "";
				
				}
				public String Cant_MinimaOriginalDbColumnName(){
				
					return "Cant_Minima";
				
				}

				
			    public String Cant_Minima_;

				public String getCant_Minima_ () {
					return this.Cant_Minima_;
				}

				public Boolean Cant_Minima_IsNullable(){
				    return true;
				}
				public Boolean Cant_Minima_IsKey(){
				    return false;
				}
				public Integer Cant_Minima_Length(){
				    return null;
				}
				public Integer Cant_Minima_Precision(){
				    return null;
				}
				public String Cant_Minima_Default(){
				
					return null;
				
				}
				public String Cant_Minima_Comment(){
				
				    return "";
				
				}
				public String Cant_Minima_Pattern(){
				
					return "";
				
				}
				public String Cant_Minima_OriginalDbColumnName(){
				
					return "Cant_Minima_";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public String Fabricante_Id_;

				public String getFabricante_Id_ () {
					return this.Fabricante_Id_;
				}

				public Boolean Fabricante_Id_IsNullable(){
				    return true;
				}
				public Boolean Fabricante_Id_IsKey(){
				    return false;
				}
				public Integer Fabricante_Id_Length(){
				    return null;
				}
				public Integer Fabricante_Id_Precision(){
				    return null;
				}
				public String Fabricante_Id_Default(){
				
					return null;
				
				}
				public String Fabricante_Id_Comment(){
				
				    return "";
				
				}
				public String Fabricante_Id_Pattern(){
				
					return "";
				
				}
				public String Fabricante_Id_OriginalDbColumnName(){
				
					return "Fabricante_Id_";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return null;
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				
			    public String Importador_Id_;

				public String getImportador_Id_ () {
					return this.Importador_Id_;
				}

				public Boolean Importador_Id_IsNullable(){
				    return true;
				}
				public Boolean Importador_Id_IsKey(){
				    return false;
				}
				public Integer Importador_Id_Length(){
				    return null;
				}
				public Integer Importador_Id_Precision(){
				    return null;
				}
				public String Importador_Id_Default(){
				
					return null;
				
				}
				public String Importador_Id_Comment(){
				
				    return "";
				
				}
				public String Importador_Id_Pattern(){
				
					return "";
				
				}
				public String Importador_Id_OriginalDbColumnName(){
				
					return "Importador_Id_";
				
				}

				
			    public String Ins_Caract;

				public String getIns_Caract () {
					return this.Ins_Caract;
				}

				public Boolean Ins_CaractIsNullable(){
				    return true;
				}
				public Boolean Ins_CaractIsKey(){
				    return false;
				}
				public Integer Ins_CaractLength(){
				    return null;
				}
				public Integer Ins_CaractPrecision(){
				    return null;
				}
				public String Ins_CaractDefault(){
				
					return null;
				
				}
				public String Ins_CaractComment(){
				
				    return "";
				
				}
				public String Ins_CaractPattern(){
				
					return "";
				
				}
				public String Ins_CaractOriginalDbColumnName(){
				
					return "Ins_Caract";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public BigDecimal Id_;

				public BigDecimal getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.Item = readInteger(dis);
					
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Comercial_ = readString(dis);
					
					this.Presentacion_ = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteriticas_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
					this.ViaAdmin_Id_ = readString(dis);
					
						this.Forma_Id = (BigDecimal) dis.readObject();
					
					this.Forma_Id_ = readString(dis);
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id = (BigDecimal) dis.readObject();
					
					this.Formas_Farma_Id_ = readString(dis);
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
					this.UMedida_Id_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Cant_UMedida = null;
           				} else {
           			    	this.Cant_UMedida = dis.readDouble();
           				}
					
					this.Cant_UMedida_ = readString(dis);
					
						this.Cant_Minima = readInteger(dis);
					
					this.Cant_Minima_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
					this.Fabricante_Id_ = readString(dis);
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Importador_Id_ = readString(dis);
					
					this.Ins_Caract = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.Item = readInteger(dis);
					
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Comercial_ = readString(dis);
					
					this.Presentacion_ = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteriticas_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
					this.ViaAdmin_Id_ = readString(dis);
					
						this.Forma_Id = (BigDecimal) dis.readObject();
					
					this.Forma_Id_ = readString(dis);
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id = (BigDecimal) dis.readObject();
					
					this.Formas_Farma_Id_ = readString(dis);
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
					this.UMedida_Id_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Cant_UMedida = null;
           				} else {
           			    	this.Cant_UMedida = dis.readDouble();
           				}
					
					this.Cant_UMedida_ = readString(dis);
					
						this.Cant_Minima = readInteger(dis);
					
					this.Cant_Minima_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
					this.Fabricante_Id_ = readString(dis);
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Importador_Id_ = readString(dis);
					
					this.Ins_Caract = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.Item,dos);
					
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Comercial_,dos);
					
					// String
				
						writeString(this.Presentacion_,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteriticas_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// String
				
						writeString(this.ViaAdmin_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Forma_Id);
					
					// String
				
						writeString(this.Forma_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Formas_Farma_Id);
					
					// String
				
						writeString(this.Formas_Farma_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// String
				
						writeString(this.UMedida_Id_,dos);
					
					// Double
				
						if(this.Cant_UMedida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Cant_UMedida);
		            	}
					
					// String
				
						writeString(this.Cant_UMedida_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Minima,dos);
					
					// String
				
						writeString(this.Cant_Minima_,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// String
				
						writeString(this.Fabricante_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Importador_Id_,dos);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Id_);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.Item,dos);
					
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Comercial_,dos);
					
					// String
				
						writeString(this.Presentacion_,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteriticas_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// String
				
						writeString(this.ViaAdmin_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Forma_Id);
					
					// String
				
						writeString(this.Forma_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Formas_Farma_Id);
					
					// String
				
						writeString(this.Formas_Farma_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// String
				
						writeString(this.UMedida_Id_,dos);
					
					// Double
				
						if(this.Cant_UMedida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Cant_UMedida);
		            	}
					
					// String
				
						writeString(this.Cant_UMedida_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Minima,dos);
					
					// String
				
						writeString(this.Cant_Minima_,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// String
				
						writeString(this.Fabricante_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Importador_Id_,dos);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Id_);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Item="+String.valueOf(Item));
		sb.append(",oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",Estado_="+Estado_);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",Cod_Barras_="+Cod_Barras_);
		sb.append(",Comercial_="+Comercial_);
		sb.append(",Presentacion_="+Presentacion_);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis_="+Unidosis_);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",Reg_Invima_="+Reg_Invima_);
		sb.append(",F_Expedicion_="+F_Expedicion_);
		sb.append(",F_Vencimiento_="+F_Vencimiento_);
		sb.append(",F_Activo_Cum_="+F_Activo_Cum_);
		sb.append(",F_Inactivo_Cum_="+F_Inactivo_Cum_);
		sb.append(",Expediente_="+Expediente_);
		sb.append(",Consecutivo_="+Consecutivo_);
		sb.append(",Cum="+Cum);
		sb.append(",Origen_="+Origen_);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Caracteriticas_="+Caracteriticas_);
		sb.append(",Contraindicaciones_="+Contraindicaciones_);
		sb.append(",Efectos_="+Efectos_);
		sb.append(",Riesgos_="+Riesgos_);
		sb.append(",Dosis_="+Dosis_);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",ViaAdmin_Id_="+ViaAdmin_Id_);
		sb.append(",Forma_Id="+String.valueOf(Forma_Id));
		sb.append(",Forma_Id_="+Forma_Id_);
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",Formas_Farma_Id="+String.valueOf(Formas_Farma_Id));
		sb.append(",Formas_Farma_Id_="+Formas_Farma_Id_);
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",UMedida_Id_="+UMedida_Id_);
		sb.append(",Cant_UMedida="+String.valueOf(Cant_UMedida));
		sb.append(",Cant_UMedida_="+Cant_UMedida_);
		sb.append(",Cant_Minima="+String.valueOf(Cant_Minima));
		sb.append(",Cant_Minima_="+Cant_Minima_);
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Fabricante_Id_="+Fabricante_Id_);
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
		sb.append(",Importador_Id_="+Importador_Id_);
		sb.append(",Ins_Caract="+Ins_Caract);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",Id_="+String.valueOf(Id_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtSortRow_1 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class next_10Struct implements routines.system.IPersistableRow<next_10Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public Integer Item;

				public Integer getItem () {
					return this.Item;
				}

				public Boolean ItemIsNullable(){
				    return true;
				}
				public Boolean ItemIsKey(){
				    return false;
				}
				public Integer ItemLength(){
				    return null;
				}
				public Integer ItemPrecision(){
				    return null;
				}
				public String ItemDefault(){
				
					return null;
				
				}
				public String ItemComment(){
				
				    return "";
				
				}
				public String ItemPattern(){
				
					return "";
				
				}
				public String ItemOriginalDbColumnName(){
				
					return "Item";
				
				}

				
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String Cod_Barras_;

				public String getCod_Barras_ () {
					return this.Cod_Barras_;
				}

				public Boolean Cod_Barras_IsNullable(){
				    return true;
				}
				public Boolean Cod_Barras_IsKey(){
				    return false;
				}
				public Integer Cod_Barras_Length(){
				    return 20;
				}
				public Integer Cod_Barras_Precision(){
				    return 0;
				}
				public String Cod_Barras_Default(){
				
					return null;
				
				}
				public String Cod_Barras_Comment(){
				
				    return "";
				
				}
				public String Cod_Barras_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Cod_Barras_OriginalDbColumnName(){
				
					return "Cod_Barras_";
				
				}

				
			    public String Comercial_;

				public String getComercial_ () {
					return this.Comercial_;
				}

				public Boolean Comercial_IsNullable(){
				    return true;
				}
				public Boolean Comercial_IsKey(){
				    return false;
				}
				public Integer Comercial_Length(){
				    return 150;
				}
				public Integer Comercial_Precision(){
				    return 0;
				}
				public String Comercial_Default(){
				
					return null;
				
				}
				public String Comercial_Comment(){
				
				    return "";
				
				}
				public String Comercial_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Comercial_OriginalDbColumnName(){
				
					return "Comercial_";
				
				}

				
			    public String Presentacion_;

				public String getPresentacion_ () {
					return this.Presentacion_;
				}

				public Boolean Presentacion_IsNullable(){
				    return true;
				}
				public Boolean Presentacion_IsKey(){
				    return false;
				}
				public Integer Presentacion_Length(){
				    return 500;
				}
				public Integer Presentacion_Precision(){
				    return 0;
				}
				public String Presentacion_Default(){
				
					return null;
				
				}
				public String Presentacion_Comment(){
				
				    return "";
				
				}
				public String Presentacion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Presentacion_OriginalDbColumnName(){
				
					return "Presentacion_";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis_;

				public String getUnidosis_ () {
					return this.Unidosis_;
				}

				public Boolean Unidosis_IsNullable(){
				    return true;
				}
				public Boolean Unidosis_IsKey(){
				    return false;
				}
				public Integer Unidosis_Length(){
				    return 2;
				}
				public Integer Unidosis_Precision(){
				    return 0;
				}
				public String Unidosis_Default(){
				
					return null;
				
				}
				public String Unidosis_Comment(){
				
				    return "";
				
				}
				public String Unidosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Unidosis_OriginalDbColumnName(){
				
					return "Unidosis_";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String Reg_Invima_;

				public String getReg_Invima_ () {
					return this.Reg_Invima_;
				}

				public Boolean Reg_Invima_IsNullable(){
				    return true;
				}
				public Boolean Reg_Invima_IsKey(){
				    return false;
				}
				public Integer Reg_Invima_Length(){
				    return 50;
				}
				public Integer Reg_Invima_Precision(){
				    return 0;
				}
				public String Reg_Invima_Default(){
				
					return null;
				
				}
				public String Reg_Invima_Comment(){
				
				    return "";
				
				}
				public String Reg_Invima_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Reg_Invima_OriginalDbColumnName(){
				
					return "Reg_Invima_";
				
				}

				
			    public String F_Expedicion_;

				public String getF_Expedicion_ () {
					return this.F_Expedicion_;
				}

				public Boolean F_Expedicion_IsNullable(){
				    return true;
				}
				public Boolean F_Expedicion_IsKey(){
				    return false;
				}
				public Integer F_Expedicion_Length(){
				    return 15;
				}
				public Integer F_Expedicion_Precision(){
				    return 0;
				}
				public String F_Expedicion_Default(){
				
					return null;
				
				}
				public String F_Expedicion_Comment(){
				
				    return "";
				
				}
				public String F_Expedicion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Expedicion_OriginalDbColumnName(){
				
					return "F_Expedicion_";
				
				}

				
			    public String F_Vencimiento_;

				public String getF_Vencimiento_ () {
					return this.F_Vencimiento_;
				}

				public Boolean F_Vencimiento_IsNullable(){
				    return true;
				}
				public Boolean F_Vencimiento_IsKey(){
				    return false;
				}
				public Integer F_Vencimiento_Length(){
				    return 15;
				}
				public Integer F_Vencimiento_Precision(){
				    return 0;
				}
				public String F_Vencimiento_Default(){
				
					return null;
				
				}
				public String F_Vencimiento_Comment(){
				
				    return "";
				
				}
				public String F_Vencimiento_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Vencimiento_OriginalDbColumnName(){
				
					return "F_Vencimiento_";
				
				}

				
			    public String F_Activo_Cum_;

				public String getF_Activo_Cum_ () {
					return this.F_Activo_Cum_;
				}

				public Boolean F_Activo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Activo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Activo_Cum_Length(){
				    return 15;
				}
				public Integer F_Activo_Cum_Precision(){
				    return 0;
				}
				public String F_Activo_Cum_Default(){
				
					return null;
				
				}
				public String F_Activo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Activo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Activo_Cum_OriginalDbColumnName(){
				
					return "F_Activo_Cum_";
				
				}

				
			    public String F_Inactivo_Cum_;

				public String getF_Inactivo_Cum_ () {
					return this.F_Inactivo_Cum_;
				}

				public Boolean F_Inactivo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Inactivo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Inactivo_Cum_Length(){
				    return 15;
				}
				public Integer F_Inactivo_Cum_Precision(){
				    return 0;
				}
				public String F_Inactivo_Cum_Default(){
				
					return null;
				
				}
				public String F_Inactivo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Inactivo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Inactivo_Cum_OriginalDbColumnName(){
				
					return "F_Inactivo_Cum_";
				
				}

				
			    public String Expediente_;

				public String getExpediente_ () {
					return this.Expediente_;
				}

				public Boolean Expediente_IsNullable(){
				    return true;
				}
				public Boolean Expediente_IsKey(){
				    return false;
				}
				public Integer Expediente_Length(){
				    return 25;
				}
				public Integer Expediente_Precision(){
				    return 0;
				}
				public String Expediente_Default(){
				
					return null;
				
				}
				public String Expediente_Comment(){
				
				    return "";
				
				}
				public String Expediente_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Expediente_OriginalDbColumnName(){
				
					return "Expediente_";
				
				}

				
			    public String Consecutivo_;

				public String getConsecutivo_ () {
					return this.Consecutivo_;
				}

				public Boolean Consecutivo_IsNullable(){
				    return true;
				}
				public Boolean Consecutivo_IsKey(){
				    return false;
				}
				public Integer Consecutivo_Length(){
				    return 10;
				}
				public Integer Consecutivo_Precision(){
				    return 0;
				}
				public String Consecutivo_Default(){
				
					return null;
				
				}
				public String Consecutivo_Comment(){
				
				    return "";
				
				}
				public String Consecutivo_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Consecutivo_OriginalDbColumnName(){
				
					return "Consecutivo_";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen_;

				public String getOrigen_ () {
					return this.Origen_;
				}

				public Boolean Origen_IsNullable(){
				    return true;
				}
				public Boolean Origen_IsKey(){
				    return false;
				}
				public Integer Origen_Length(){
				    return 500;
				}
				public Integer Origen_Precision(){
				    return 0;
				}
				public String Origen_Default(){
				
					return null;
				
				}
				public String Origen_Comment(){
				
				    return "";
				
				}
				public String Origen_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Origen_OriginalDbColumnName(){
				
					return "Origen_";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Caracteriticas_;

				public String getCaracteriticas_ () {
					return this.Caracteriticas_;
				}

				public Boolean Caracteriticas_IsNullable(){
				    return true;
				}
				public Boolean Caracteriticas_IsKey(){
				    return false;
				}
				public Integer Caracteriticas_Length(){
				    return null;
				}
				public Integer Caracteriticas_Precision(){
				    return null;
				}
				public String Caracteriticas_Default(){
				
					return null;
				
				}
				public String Caracteriticas_Comment(){
				
				    return "";
				
				}
				public String Caracteriticas_Pattern(){
				
					return "";
				
				}
				public String Caracteriticas_OriginalDbColumnName(){
				
					return "Caracteriticas_";
				
				}

				
			    public String Contraindicaciones_;

				public String getContraindicaciones_ () {
					return this.Contraindicaciones_;
				}

				public Boolean Contraindicaciones_IsNullable(){
				    return true;
				}
				public Boolean Contraindicaciones_IsKey(){
				    return false;
				}
				public Integer Contraindicaciones_Length(){
				    return 2000;
				}
				public Integer Contraindicaciones_Precision(){
				    return 0;
				}
				public String Contraindicaciones_Default(){
				
					return null;
				
				}
				public String Contraindicaciones_Comment(){
				
				    return "";
				
				}
				public String Contraindicaciones_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Contraindicaciones_OriginalDbColumnName(){
				
					return "Contraindicaciones_";
				
				}

				
			    public String Efectos_;

				public String getEfectos_ () {
					return this.Efectos_;
				}

				public Boolean Efectos_IsNullable(){
				    return true;
				}
				public Boolean Efectos_IsKey(){
				    return false;
				}
				public Integer Efectos_Length(){
				    return 2000;
				}
				public Integer Efectos_Precision(){
				    return 0;
				}
				public String Efectos_Default(){
				
					return null;
				
				}
				public String Efectos_Comment(){
				
				    return "";
				
				}
				public String Efectos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_OriginalDbColumnName(){
				
					return "Efectos_";
				
				}

				
			    public String Riesgos_;

				public String getRiesgos_ () {
					return this.Riesgos_;
				}

				public Boolean Riesgos_IsNullable(){
				    return true;
				}
				public Boolean Riesgos_IsKey(){
				    return false;
				}
				public Integer Riesgos_Length(){
				    return 2000;
				}
				public Integer Riesgos_Precision(){
				    return 0;
				}
				public String Riesgos_Default(){
				
					return null;
				
				}
				public String Riesgos_Comment(){
				
				    return "";
				
				}
				public String Riesgos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_OriginalDbColumnName(){
				
					return "Riesgos_";
				
				}

				
			    public String Dosis_;

				public String getDosis_ () {
					return this.Dosis_;
				}

				public Boolean Dosis_IsNullable(){
				    return true;
				}
				public Boolean Dosis_IsKey(){
				    return false;
				}
				public Integer Dosis_Length(){
				    return 500;
				}
				public Integer Dosis_Precision(){
				    return 0;
				}
				public String Dosis_Default(){
				
					return null;
				
				}
				public String Dosis_Comment(){
				
				    return "";
				
				}
				public String Dosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_OriginalDbColumnName(){
				
					return "Dosis_";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public String ViaAdmin_Id_;

				public String getViaAdmin_Id_ () {
					return this.ViaAdmin_Id_;
				}

				public Boolean ViaAdmin_Id_IsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_Id_IsKey(){
				    return false;
				}
				public Integer ViaAdmin_Id_Length(){
				    return null;
				}
				public Integer ViaAdmin_Id_Precision(){
				    return null;
				}
				public String ViaAdmin_Id_Default(){
				
					return null;
				
				}
				public String ViaAdmin_Id_Comment(){
				
				    return "";
				
				}
				public String ViaAdmin_Id_Pattern(){
				
					return "";
				
				}
				public String ViaAdmin_Id_OriginalDbColumnName(){
				
					return "ViaAdmin_Id_";
				
				}

				
			    public BigDecimal Forma_Id;

				public BigDecimal getForma_Id () {
					return this.Forma_Id;
				}

				public Boolean Forma_IdIsNullable(){
				    return true;
				}
				public Boolean Forma_IdIsKey(){
				    return false;
				}
				public Integer Forma_IdLength(){
				    return null;
				}
				public Integer Forma_IdPrecision(){
				    return null;
				}
				public String Forma_IdDefault(){
				
					return null;
				
				}
				public String Forma_IdComment(){
				
				    return "";
				
				}
				public String Forma_IdPattern(){
				
					return "";
				
				}
				public String Forma_IdOriginalDbColumnName(){
				
					return "Forma_Id";
				
				}

				
			    public String Forma_Id_;

				public String getForma_Id_ () {
					return this.Forma_Id_;
				}

				public Boolean Forma_Id_IsNullable(){
				    return true;
				}
				public Boolean Forma_Id_IsKey(){
				    return false;
				}
				public Integer Forma_Id_Length(){
				    return null;
				}
				public Integer Forma_Id_Precision(){
				    return null;
				}
				public String Forma_Id_Default(){
				
					return null;
				
				}
				public String Forma_Id_Comment(){
				
				    return "";
				
				}
				public String Forma_Id_Pattern(){
				
					return "";
				
				}
				public String Forma_Id_OriginalDbColumnName(){
				
					return "Forma_Id_";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal Formas_Farma_Id;

				public BigDecimal getFormas_Farma_Id () {
					return this.Formas_Farma_Id;
				}

				public Boolean Formas_Farma_IdIsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_IdIsKey(){
				    return false;
				}
				public Integer Formas_Farma_IdLength(){
				    return null;
				}
				public Integer Formas_Farma_IdPrecision(){
				    return null;
				}
				public String Formas_Farma_IdDefault(){
				
					return null;
				
				}
				public String Formas_Farma_IdComment(){
				
				    return "";
				
				}
				public String Formas_Farma_IdPattern(){
				
					return "";
				
				}
				public String Formas_Farma_IdOriginalDbColumnName(){
				
					return "Formas_Farma_Id";
				
				}

				
			    public String Formas_Farma_Id_;

				public String getFormas_Farma_Id_ () {
					return this.Formas_Farma_Id_;
				}

				public Boolean Formas_Farma_Id_IsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_Id_IsKey(){
				    return false;
				}
				public Integer Formas_Farma_Id_Length(){
				    return null;
				}
				public Integer Formas_Farma_Id_Precision(){
				    return null;
				}
				public String Formas_Farma_Id_Default(){
				
					return null;
				
				}
				public String Formas_Farma_Id_Comment(){
				
				    return "";
				
				}
				public String Formas_Farma_Id_Pattern(){
				
					return "";
				
				}
				public String Formas_Farma_Id_OriginalDbColumnName(){
				
					return "Formas_Farma_Id_";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public String UMedida_Id_;

				public String getUMedida_Id_ () {
					return this.UMedida_Id_;
				}

				public Boolean UMedida_Id_IsNullable(){
				    return true;
				}
				public Boolean UMedida_Id_IsKey(){
				    return false;
				}
				public Integer UMedida_Id_Length(){
				    return null;
				}
				public Integer UMedida_Id_Precision(){
				    return null;
				}
				public String UMedida_Id_Default(){
				
					return null;
				
				}
				public String UMedida_Id_Comment(){
				
				    return "";
				
				}
				public String UMedida_Id_Pattern(){
				
					return "";
				
				}
				public String UMedida_Id_OriginalDbColumnName(){
				
					return "UMedida_Id_";
				
				}

				
			    public Double Cant_UMedida;

				public Double getCant_UMedida () {
					return this.Cant_UMedida;
				}

				public Boolean Cant_UMedidaIsNullable(){
				    return true;
				}
				public Boolean Cant_UMedidaIsKey(){
				    return false;
				}
				public Integer Cant_UMedidaLength(){
				    return null;
				}
				public Integer Cant_UMedidaPrecision(){
				    return null;
				}
				public String Cant_UMedidaDefault(){
				
					return null;
				
				}
				public String Cant_UMedidaComment(){
				
				    return "";
				
				}
				public String Cant_UMedidaPattern(){
				
					return "";
				
				}
				public String Cant_UMedidaOriginalDbColumnName(){
				
					return "Cant_UMedida";
				
				}

				
			    public String Cant_UMedida_;

				public String getCant_UMedida_ () {
					return this.Cant_UMedida_;
				}

				public Boolean Cant_UMedida_IsNullable(){
				    return true;
				}
				public Boolean Cant_UMedida_IsKey(){
				    return false;
				}
				public Integer Cant_UMedida_Length(){
				    return null;
				}
				public Integer Cant_UMedida_Precision(){
				    return null;
				}
				public String Cant_UMedida_Default(){
				
					return null;
				
				}
				public String Cant_UMedida_Comment(){
				
				    return "";
				
				}
				public String Cant_UMedida_Pattern(){
				
					return "";
				
				}
				public String Cant_UMedida_OriginalDbColumnName(){
				
					return "Cant_UMedida_";
				
				}

				
			    public Integer Cant_Minima;

				public Integer getCant_Minima () {
					return this.Cant_Minima;
				}

				public Boolean Cant_MinimaIsNullable(){
				    return true;
				}
				public Boolean Cant_MinimaIsKey(){
				    return false;
				}
				public Integer Cant_MinimaLength(){
				    return null;
				}
				public Integer Cant_MinimaPrecision(){
				    return null;
				}
				public String Cant_MinimaDefault(){
				
					return null;
				
				}
				public String Cant_MinimaComment(){
				
				    return "";
				
				}
				public String Cant_MinimaPattern(){
				
					return "";
				
				}
				public String Cant_MinimaOriginalDbColumnName(){
				
					return "Cant_Minima";
				
				}

				
			    public String Cant_Minima_;

				public String getCant_Minima_ () {
					return this.Cant_Minima_;
				}

				public Boolean Cant_Minima_IsNullable(){
				    return true;
				}
				public Boolean Cant_Minima_IsKey(){
				    return false;
				}
				public Integer Cant_Minima_Length(){
				    return null;
				}
				public Integer Cant_Minima_Precision(){
				    return null;
				}
				public String Cant_Minima_Default(){
				
					return null;
				
				}
				public String Cant_Minima_Comment(){
				
				    return "";
				
				}
				public String Cant_Minima_Pattern(){
				
					return "";
				
				}
				public String Cant_Minima_OriginalDbColumnName(){
				
					return "Cant_Minima_";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public String Fabricante_Id_;

				public String getFabricante_Id_ () {
					return this.Fabricante_Id_;
				}

				public Boolean Fabricante_Id_IsNullable(){
				    return true;
				}
				public Boolean Fabricante_Id_IsKey(){
				    return false;
				}
				public Integer Fabricante_Id_Length(){
				    return null;
				}
				public Integer Fabricante_Id_Precision(){
				    return null;
				}
				public String Fabricante_Id_Default(){
				
					return null;
				
				}
				public String Fabricante_Id_Comment(){
				
				    return "";
				
				}
				public String Fabricante_Id_Pattern(){
				
					return "";
				
				}
				public String Fabricante_Id_OriginalDbColumnName(){
				
					return "Fabricante_Id_";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return null;
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				
			    public String Importador_Id_;

				public String getImportador_Id_ () {
					return this.Importador_Id_;
				}

				public Boolean Importador_Id_IsNullable(){
				    return true;
				}
				public Boolean Importador_Id_IsKey(){
				    return false;
				}
				public Integer Importador_Id_Length(){
				    return null;
				}
				public Integer Importador_Id_Precision(){
				    return null;
				}
				public String Importador_Id_Default(){
				
					return null;
				
				}
				public String Importador_Id_Comment(){
				
				    return "";
				
				}
				public String Importador_Id_Pattern(){
				
					return "";
				
				}
				public String Importador_Id_OriginalDbColumnName(){
				
					return "Importador_Id_";
				
				}

				
			    public String Ins_Caract;

				public String getIns_Caract () {
					return this.Ins_Caract;
				}

				public Boolean Ins_CaractIsNullable(){
				    return true;
				}
				public Boolean Ins_CaractIsKey(){
				    return false;
				}
				public Integer Ins_CaractLength(){
				    return null;
				}
				public Integer Ins_CaractPrecision(){
				    return null;
				}
				public String Ins_CaractDefault(){
				
					return null;
				
				}
				public String Ins_CaractComment(){
				
				    return "";
				
				}
				public String Ins_CaractPattern(){
				
					return "";
				
				}
				public String Ins_CaractOriginalDbColumnName(){
				
					return "Ins_Caract";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public BigDecimal Id_;

				public BigDecimal getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.Item = readInteger(dis);
					
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Comercial_ = readString(dis);
					
					this.Presentacion_ = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteriticas_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
					this.ViaAdmin_Id_ = readString(dis);
					
						this.Forma_Id = (BigDecimal) dis.readObject();
					
					this.Forma_Id_ = readString(dis);
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id = (BigDecimal) dis.readObject();
					
					this.Formas_Farma_Id_ = readString(dis);
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
					this.UMedida_Id_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Cant_UMedida = null;
           				} else {
           			    	this.Cant_UMedida = dis.readDouble();
           				}
					
					this.Cant_UMedida_ = readString(dis);
					
						this.Cant_Minima = readInteger(dis);
					
					this.Cant_Minima_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
					this.Fabricante_Id_ = readString(dis);
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Importador_Id_ = readString(dis);
					
					this.Ins_Caract = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.Item = readInteger(dis);
					
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Comercial_ = readString(dis);
					
					this.Presentacion_ = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteriticas_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
					this.ViaAdmin_Id_ = readString(dis);
					
						this.Forma_Id = (BigDecimal) dis.readObject();
					
					this.Forma_Id_ = readString(dis);
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id = (BigDecimal) dis.readObject();
					
					this.Formas_Farma_Id_ = readString(dis);
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
					this.UMedida_Id_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Cant_UMedida = null;
           				} else {
           			    	this.Cant_UMedida = dis.readDouble();
           				}
					
					this.Cant_UMedida_ = readString(dis);
					
						this.Cant_Minima = readInteger(dis);
					
					this.Cant_Minima_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
					this.Fabricante_Id_ = readString(dis);
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Importador_Id_ = readString(dis);
					
					this.Ins_Caract = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.Item,dos);
					
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Comercial_,dos);
					
					// String
				
						writeString(this.Presentacion_,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteriticas_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// String
				
						writeString(this.ViaAdmin_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Forma_Id);
					
					// String
				
						writeString(this.Forma_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Formas_Farma_Id);
					
					// String
				
						writeString(this.Formas_Farma_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// String
				
						writeString(this.UMedida_Id_,dos);
					
					// Double
				
						if(this.Cant_UMedida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Cant_UMedida);
		            	}
					
					// String
				
						writeString(this.Cant_UMedida_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Minima,dos);
					
					// String
				
						writeString(this.Cant_Minima_,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// String
				
						writeString(this.Fabricante_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Importador_Id_,dos);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Id_);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.Item,dos);
					
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Comercial_,dos);
					
					// String
				
						writeString(this.Presentacion_,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteriticas_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// String
				
						writeString(this.ViaAdmin_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Forma_Id);
					
					// String
				
						writeString(this.Forma_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Formas_Farma_Id);
					
					// String
				
						writeString(this.Formas_Farma_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// String
				
						writeString(this.UMedida_Id_,dos);
					
					// Double
				
						if(this.Cant_UMedida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Cant_UMedida);
		            	}
					
					// String
				
						writeString(this.Cant_UMedida_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Minima,dos);
					
					// String
				
						writeString(this.Cant_Minima_,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// String
				
						writeString(this.Fabricante_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Importador_Id_,dos);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Id_);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Item="+String.valueOf(Item));
		sb.append(",oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",Estado_="+Estado_);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",Cod_Barras_="+Cod_Barras_);
		sb.append(",Comercial_="+Comercial_);
		sb.append(",Presentacion_="+Presentacion_);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis_="+Unidosis_);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",Reg_Invima_="+Reg_Invima_);
		sb.append(",F_Expedicion_="+F_Expedicion_);
		sb.append(",F_Vencimiento_="+F_Vencimiento_);
		sb.append(",F_Activo_Cum_="+F_Activo_Cum_);
		sb.append(",F_Inactivo_Cum_="+F_Inactivo_Cum_);
		sb.append(",Expediente_="+Expediente_);
		sb.append(",Consecutivo_="+Consecutivo_);
		sb.append(",Cum="+Cum);
		sb.append(",Origen_="+Origen_);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Caracteriticas_="+Caracteriticas_);
		sb.append(",Contraindicaciones_="+Contraindicaciones_);
		sb.append(",Efectos_="+Efectos_);
		sb.append(",Riesgos_="+Riesgos_);
		sb.append(",Dosis_="+Dosis_);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",ViaAdmin_Id_="+ViaAdmin_Id_);
		sb.append(",Forma_Id="+String.valueOf(Forma_Id));
		sb.append(",Forma_Id_="+Forma_Id_);
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",Formas_Farma_Id="+String.valueOf(Formas_Farma_Id));
		sb.append(",Formas_Farma_Id_="+Formas_Farma_Id_);
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",UMedida_Id_="+UMedida_Id_);
		sb.append(",Cant_UMedida="+String.valueOf(Cant_UMedida));
		sb.append(",Cant_UMedida_="+Cant_UMedida_);
		sb.append(",Cant_Minima="+String.valueOf(Cant_Minima));
		sb.append(",Cant_Minima_="+Cant_Minima_);
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Fabricante_Id_="+Fabricante_Id_);
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
		sb.append(",Importador_Id_="+Importador_Id_);
		sb.append(",Ins_Caract="+Ins_Caract);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",Id_="+String.valueOf(Id_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(next_10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row48Struct implements routines.system.IPersistableRow<row48Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String Cod_Barras_;

				public String getCod_Barras_ () {
					return this.Cod_Barras_;
				}

				public Boolean Cod_Barras_IsNullable(){
				    return true;
				}
				public Boolean Cod_Barras_IsKey(){
				    return false;
				}
				public Integer Cod_Barras_Length(){
				    return 20;
				}
				public Integer Cod_Barras_Precision(){
				    return 0;
				}
				public String Cod_Barras_Default(){
				
					return null;
				
				}
				public String Cod_Barras_Comment(){
				
				    return "";
				
				}
				public String Cod_Barras_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Cod_Barras_OriginalDbColumnName(){
				
					return "Cod_Barras_";
				
				}

				
			    public String Comercial_;

				public String getComercial_ () {
					return this.Comercial_;
				}

				public Boolean Comercial_IsNullable(){
				    return true;
				}
				public Boolean Comercial_IsKey(){
				    return false;
				}
				public Integer Comercial_Length(){
				    return 150;
				}
				public Integer Comercial_Precision(){
				    return 0;
				}
				public String Comercial_Default(){
				
					return null;
				
				}
				public String Comercial_Comment(){
				
				    return "";
				
				}
				public String Comercial_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Comercial_OriginalDbColumnName(){
				
					return "Comercial_";
				
				}

				
			    public String Presentacion_;

				public String getPresentacion_ () {
					return this.Presentacion_;
				}

				public Boolean Presentacion_IsNullable(){
				    return true;
				}
				public Boolean Presentacion_IsKey(){
				    return false;
				}
				public Integer Presentacion_Length(){
				    return 500;
				}
				public Integer Presentacion_Precision(){
				    return 0;
				}
				public String Presentacion_Default(){
				
					return null;
				
				}
				public String Presentacion_Comment(){
				
				    return "";
				
				}
				public String Presentacion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Presentacion_OriginalDbColumnName(){
				
					return "Presentacion_";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis_;

				public String getUnidosis_ () {
					return this.Unidosis_;
				}

				public Boolean Unidosis_IsNullable(){
				    return true;
				}
				public Boolean Unidosis_IsKey(){
				    return false;
				}
				public Integer Unidosis_Length(){
				    return 2;
				}
				public Integer Unidosis_Precision(){
				    return 0;
				}
				public String Unidosis_Default(){
				
					return null;
				
				}
				public String Unidosis_Comment(){
				
				    return "";
				
				}
				public String Unidosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Unidosis_OriginalDbColumnName(){
				
					return "Unidosis_";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String Reg_Invima_;

				public String getReg_Invima_ () {
					return this.Reg_Invima_;
				}

				public Boolean Reg_Invima_IsNullable(){
				    return true;
				}
				public Boolean Reg_Invima_IsKey(){
				    return false;
				}
				public Integer Reg_Invima_Length(){
				    return 50;
				}
				public Integer Reg_Invima_Precision(){
				    return 0;
				}
				public String Reg_Invima_Default(){
				
					return null;
				
				}
				public String Reg_Invima_Comment(){
				
				    return "";
				
				}
				public String Reg_Invima_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Reg_Invima_OriginalDbColumnName(){
				
					return "Reg_Invima_";
				
				}

				
			    public String F_Expedicion_;

				public String getF_Expedicion_ () {
					return this.F_Expedicion_;
				}

				public Boolean F_Expedicion_IsNullable(){
				    return true;
				}
				public Boolean F_Expedicion_IsKey(){
				    return false;
				}
				public Integer F_Expedicion_Length(){
				    return 15;
				}
				public Integer F_Expedicion_Precision(){
				    return 0;
				}
				public String F_Expedicion_Default(){
				
					return null;
				
				}
				public String F_Expedicion_Comment(){
				
				    return "";
				
				}
				public String F_Expedicion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Expedicion_OriginalDbColumnName(){
				
					return "F_Expedicion_";
				
				}

				
			    public String F_Vencimiento_;

				public String getF_Vencimiento_ () {
					return this.F_Vencimiento_;
				}

				public Boolean F_Vencimiento_IsNullable(){
				    return true;
				}
				public Boolean F_Vencimiento_IsKey(){
				    return false;
				}
				public Integer F_Vencimiento_Length(){
				    return 15;
				}
				public Integer F_Vencimiento_Precision(){
				    return 0;
				}
				public String F_Vencimiento_Default(){
				
					return null;
				
				}
				public String F_Vencimiento_Comment(){
				
				    return "";
				
				}
				public String F_Vencimiento_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Vencimiento_OriginalDbColumnName(){
				
					return "F_Vencimiento_";
				
				}

				
			    public String F_Activo_Cum_;

				public String getF_Activo_Cum_ () {
					return this.F_Activo_Cum_;
				}

				public Boolean F_Activo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Activo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Activo_Cum_Length(){
				    return 15;
				}
				public Integer F_Activo_Cum_Precision(){
				    return 0;
				}
				public String F_Activo_Cum_Default(){
				
					return null;
				
				}
				public String F_Activo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Activo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Activo_Cum_OriginalDbColumnName(){
				
					return "F_Activo_Cum_";
				
				}

				
			    public String F_Inactivo_Cum_;

				public String getF_Inactivo_Cum_ () {
					return this.F_Inactivo_Cum_;
				}

				public Boolean F_Inactivo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Inactivo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Inactivo_Cum_Length(){
				    return 15;
				}
				public Integer F_Inactivo_Cum_Precision(){
				    return 0;
				}
				public String F_Inactivo_Cum_Default(){
				
					return null;
				
				}
				public String F_Inactivo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Inactivo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Inactivo_Cum_OriginalDbColumnName(){
				
					return "F_Inactivo_Cum_";
				
				}

				
			    public String Expediente_;

				public String getExpediente_ () {
					return this.Expediente_;
				}

				public Boolean Expediente_IsNullable(){
				    return true;
				}
				public Boolean Expediente_IsKey(){
				    return false;
				}
				public Integer Expediente_Length(){
				    return 25;
				}
				public Integer Expediente_Precision(){
				    return 0;
				}
				public String Expediente_Default(){
				
					return null;
				
				}
				public String Expediente_Comment(){
				
				    return "";
				
				}
				public String Expediente_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Expediente_OriginalDbColumnName(){
				
					return "Expediente_";
				
				}

				
			    public String Consecutivo_;

				public String getConsecutivo_ () {
					return this.Consecutivo_;
				}

				public Boolean Consecutivo_IsNullable(){
				    return true;
				}
				public Boolean Consecutivo_IsKey(){
				    return false;
				}
				public Integer Consecutivo_Length(){
				    return 10;
				}
				public Integer Consecutivo_Precision(){
				    return 0;
				}
				public String Consecutivo_Default(){
				
					return null;
				
				}
				public String Consecutivo_Comment(){
				
				    return "";
				
				}
				public String Consecutivo_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Consecutivo_OriginalDbColumnName(){
				
					return "Consecutivo_";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen_;

				public String getOrigen_ () {
					return this.Origen_;
				}

				public Boolean Origen_IsNullable(){
				    return true;
				}
				public Boolean Origen_IsKey(){
				    return false;
				}
				public Integer Origen_Length(){
				    return 500;
				}
				public Integer Origen_Precision(){
				    return 0;
				}
				public String Origen_Default(){
				
					return null;
				
				}
				public String Origen_Comment(){
				
				    return "";
				
				}
				public String Origen_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Origen_OriginalDbColumnName(){
				
					return "Origen_";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Caracteriticas_;

				public String getCaracteriticas_ () {
					return this.Caracteriticas_;
				}

				public Boolean Caracteriticas_IsNullable(){
				    return true;
				}
				public Boolean Caracteriticas_IsKey(){
				    return false;
				}
				public Integer Caracteriticas_Length(){
				    return null;
				}
				public Integer Caracteriticas_Precision(){
				    return null;
				}
				public String Caracteriticas_Default(){
				
					return null;
				
				}
				public String Caracteriticas_Comment(){
				
				    return "";
				
				}
				public String Caracteriticas_Pattern(){
				
					return "";
				
				}
				public String Caracteriticas_OriginalDbColumnName(){
				
					return "Caracteriticas_";
				
				}

				
			    public String Contraindicaciones_;

				public String getContraindicaciones_ () {
					return this.Contraindicaciones_;
				}

				public Boolean Contraindicaciones_IsNullable(){
				    return true;
				}
				public Boolean Contraindicaciones_IsKey(){
				    return false;
				}
				public Integer Contraindicaciones_Length(){
				    return 2000;
				}
				public Integer Contraindicaciones_Precision(){
				    return 0;
				}
				public String Contraindicaciones_Default(){
				
					return null;
				
				}
				public String Contraindicaciones_Comment(){
				
				    return "";
				
				}
				public String Contraindicaciones_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Contraindicaciones_OriginalDbColumnName(){
				
					return "Contraindicaciones_";
				
				}

				
			    public String Efectos_;

				public String getEfectos_ () {
					return this.Efectos_;
				}

				public Boolean Efectos_IsNullable(){
				    return true;
				}
				public Boolean Efectos_IsKey(){
				    return false;
				}
				public Integer Efectos_Length(){
				    return 2000;
				}
				public Integer Efectos_Precision(){
				    return 0;
				}
				public String Efectos_Default(){
				
					return null;
				
				}
				public String Efectos_Comment(){
				
				    return "";
				
				}
				public String Efectos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_OriginalDbColumnName(){
				
					return "Efectos_";
				
				}

				
			    public String Riesgos_;

				public String getRiesgos_ () {
					return this.Riesgos_;
				}

				public Boolean Riesgos_IsNullable(){
				    return true;
				}
				public Boolean Riesgos_IsKey(){
				    return false;
				}
				public Integer Riesgos_Length(){
				    return 2000;
				}
				public Integer Riesgos_Precision(){
				    return 0;
				}
				public String Riesgos_Default(){
				
					return null;
				
				}
				public String Riesgos_Comment(){
				
				    return "";
				
				}
				public String Riesgos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_OriginalDbColumnName(){
				
					return "Riesgos_";
				
				}

				
			    public String Dosis_;

				public String getDosis_ () {
					return this.Dosis_;
				}

				public Boolean Dosis_IsNullable(){
				    return true;
				}
				public Boolean Dosis_IsKey(){
				    return false;
				}
				public Integer Dosis_Length(){
				    return 500;
				}
				public Integer Dosis_Precision(){
				    return 0;
				}
				public String Dosis_Default(){
				
					return null;
				
				}
				public String Dosis_Comment(){
				
				    return "";
				
				}
				public String Dosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_OriginalDbColumnName(){
				
					return "Dosis_";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public String ViaAdmin_Id_;

				public String getViaAdmin_Id_ () {
					return this.ViaAdmin_Id_;
				}

				public Boolean ViaAdmin_Id_IsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_Id_IsKey(){
				    return false;
				}
				public Integer ViaAdmin_Id_Length(){
				    return null;
				}
				public Integer ViaAdmin_Id_Precision(){
				    return null;
				}
				public String ViaAdmin_Id_Default(){
				
					return null;
				
				}
				public String ViaAdmin_Id_Comment(){
				
				    return "";
				
				}
				public String ViaAdmin_Id_Pattern(){
				
					return "";
				
				}
				public String ViaAdmin_Id_OriginalDbColumnName(){
				
					return "ViaAdmin_Id_";
				
				}

				
			    public BigDecimal Forma_Id;

				public BigDecimal getForma_Id () {
					return this.Forma_Id;
				}

				public Boolean Forma_IdIsNullable(){
				    return true;
				}
				public Boolean Forma_IdIsKey(){
				    return false;
				}
				public Integer Forma_IdLength(){
				    return null;
				}
				public Integer Forma_IdPrecision(){
				    return null;
				}
				public String Forma_IdDefault(){
				
					return null;
				
				}
				public String Forma_IdComment(){
				
				    return "";
				
				}
				public String Forma_IdPattern(){
				
					return "";
				
				}
				public String Forma_IdOriginalDbColumnName(){
				
					return "Forma_Id";
				
				}

				
			    public String Forma_Id_;

				public String getForma_Id_ () {
					return this.Forma_Id_;
				}

				public Boolean Forma_Id_IsNullable(){
				    return true;
				}
				public Boolean Forma_Id_IsKey(){
				    return false;
				}
				public Integer Forma_Id_Length(){
				    return null;
				}
				public Integer Forma_Id_Precision(){
				    return null;
				}
				public String Forma_Id_Default(){
				
					return null;
				
				}
				public String Forma_Id_Comment(){
				
				    return "";
				
				}
				public String Forma_Id_Pattern(){
				
					return "";
				
				}
				public String Forma_Id_OriginalDbColumnName(){
				
					return "Forma_Id_";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal Formas_Farma_Id;

				public BigDecimal getFormas_Farma_Id () {
					return this.Formas_Farma_Id;
				}

				public Boolean Formas_Farma_IdIsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_IdIsKey(){
				    return false;
				}
				public Integer Formas_Farma_IdLength(){
				    return null;
				}
				public Integer Formas_Farma_IdPrecision(){
				    return null;
				}
				public String Formas_Farma_IdDefault(){
				
					return null;
				
				}
				public String Formas_Farma_IdComment(){
				
				    return "";
				
				}
				public String Formas_Farma_IdPattern(){
				
					return "";
				
				}
				public String Formas_Farma_IdOriginalDbColumnName(){
				
					return "Formas_Farma_Id";
				
				}

				
			    public String Formas_Farma_Id_;

				public String getFormas_Farma_Id_ () {
					return this.Formas_Farma_Id_;
				}

				public Boolean Formas_Farma_Id_IsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_Id_IsKey(){
				    return false;
				}
				public Integer Formas_Farma_Id_Length(){
				    return null;
				}
				public Integer Formas_Farma_Id_Precision(){
				    return null;
				}
				public String Formas_Farma_Id_Default(){
				
					return null;
				
				}
				public String Formas_Farma_Id_Comment(){
				
				    return "";
				
				}
				public String Formas_Farma_Id_Pattern(){
				
					return "";
				
				}
				public String Formas_Farma_Id_OriginalDbColumnName(){
				
					return "Formas_Farma_Id_";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public String UMedida_Id_;

				public String getUMedida_Id_ () {
					return this.UMedida_Id_;
				}

				public Boolean UMedida_Id_IsNullable(){
				    return true;
				}
				public Boolean UMedida_Id_IsKey(){
				    return false;
				}
				public Integer UMedida_Id_Length(){
				    return null;
				}
				public Integer UMedida_Id_Precision(){
				    return null;
				}
				public String UMedida_Id_Default(){
				
					return null;
				
				}
				public String UMedida_Id_Comment(){
				
				    return "";
				
				}
				public String UMedida_Id_Pattern(){
				
					return "";
				
				}
				public String UMedida_Id_OriginalDbColumnName(){
				
					return "UMedida_Id_";
				
				}

				
			    public Double Cant_UMedida;

				public Double getCant_UMedida () {
					return this.Cant_UMedida;
				}

				public Boolean Cant_UMedidaIsNullable(){
				    return true;
				}
				public Boolean Cant_UMedidaIsKey(){
				    return false;
				}
				public Integer Cant_UMedidaLength(){
				    return null;
				}
				public Integer Cant_UMedidaPrecision(){
				    return null;
				}
				public String Cant_UMedidaDefault(){
				
					return null;
				
				}
				public String Cant_UMedidaComment(){
				
				    return "";
				
				}
				public String Cant_UMedidaPattern(){
				
					return "";
				
				}
				public String Cant_UMedidaOriginalDbColumnName(){
				
					return "Cant_UMedida";
				
				}

				
			    public String Cant_UMedida_;

				public String getCant_UMedida_ () {
					return this.Cant_UMedida_;
				}

				public Boolean Cant_UMedida_IsNullable(){
				    return true;
				}
				public Boolean Cant_UMedida_IsKey(){
				    return false;
				}
				public Integer Cant_UMedida_Length(){
				    return null;
				}
				public Integer Cant_UMedida_Precision(){
				    return null;
				}
				public String Cant_UMedida_Default(){
				
					return null;
				
				}
				public String Cant_UMedida_Comment(){
				
				    return "";
				
				}
				public String Cant_UMedida_Pattern(){
				
					return "";
				
				}
				public String Cant_UMedida_OriginalDbColumnName(){
				
					return "Cant_UMedida_";
				
				}

				
			    public Integer Cant_Minima;

				public Integer getCant_Minima () {
					return this.Cant_Minima;
				}

				public Boolean Cant_MinimaIsNullable(){
				    return true;
				}
				public Boolean Cant_MinimaIsKey(){
				    return false;
				}
				public Integer Cant_MinimaLength(){
				    return null;
				}
				public Integer Cant_MinimaPrecision(){
				    return null;
				}
				public String Cant_MinimaDefault(){
				
					return null;
				
				}
				public String Cant_MinimaComment(){
				
				    return "";
				
				}
				public String Cant_MinimaPattern(){
				
					return "";
				
				}
				public String Cant_MinimaOriginalDbColumnName(){
				
					return "Cant_Minima";
				
				}

				
			    public String Cant_Minima_;

				public String getCant_Minima_ () {
					return this.Cant_Minima_;
				}

				public Boolean Cant_Minima_IsNullable(){
				    return true;
				}
				public Boolean Cant_Minima_IsKey(){
				    return false;
				}
				public Integer Cant_Minima_Length(){
				    return null;
				}
				public Integer Cant_Minima_Precision(){
				    return null;
				}
				public String Cant_Minima_Default(){
				
					return null;
				
				}
				public String Cant_Minima_Comment(){
				
				    return "";
				
				}
				public String Cant_Minima_Pattern(){
				
					return "";
				
				}
				public String Cant_Minima_OriginalDbColumnName(){
				
					return "Cant_Minima_";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public String Fabricante_Id_;

				public String getFabricante_Id_ () {
					return this.Fabricante_Id_;
				}

				public Boolean Fabricante_Id_IsNullable(){
				    return true;
				}
				public Boolean Fabricante_Id_IsKey(){
				    return false;
				}
				public Integer Fabricante_Id_Length(){
				    return null;
				}
				public Integer Fabricante_Id_Precision(){
				    return null;
				}
				public String Fabricante_Id_Default(){
				
					return null;
				
				}
				public String Fabricante_Id_Comment(){
				
				    return "";
				
				}
				public String Fabricante_Id_Pattern(){
				
					return "";
				
				}
				public String Fabricante_Id_OriginalDbColumnName(){
				
					return "Fabricante_Id_";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return null;
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				
			    public String Importador_Id_;

				public String getImportador_Id_ () {
					return this.Importador_Id_;
				}

				public Boolean Importador_Id_IsNullable(){
				    return true;
				}
				public Boolean Importador_Id_IsKey(){
				    return false;
				}
				public Integer Importador_Id_Length(){
				    return null;
				}
				public Integer Importador_Id_Precision(){
				    return null;
				}
				public String Importador_Id_Default(){
				
					return null;
				
				}
				public String Importador_Id_Comment(){
				
				    return "";
				
				}
				public String Importador_Id_Pattern(){
				
					return "";
				
				}
				public String Importador_Id_OriginalDbColumnName(){
				
					return "Importador_Id_";
				
				}

				
			    public BigDecimal usuarios_Id_;

				public BigDecimal getUsuarios_Id_ () {
					return this.usuarios_Id_;
				}

				public Boolean usuarios_Id_IsNullable(){
				    return true;
				}
				public Boolean usuarios_Id_IsKey(){
				    return false;
				}
				public Integer usuarios_Id_Length(){
				    return 10;
				}
				public Integer usuarios_Id_Precision(){
				    return 0;
				}
				public String usuarios_Id_Default(){
				
					return null;
				
				}
				public String usuarios_Id_Comment(){
				
				    return "";
				
				}
				public String usuarios_Id_Pattern(){
				
					return "";
				
				}
				public String usuarios_Id_OriginalDbColumnName(){
				
					return "usuarios_Id_";
				
				}

				
			    public BigDecimal uorg_Id_;

				public BigDecimal getUorg_Id_ () {
					return this.uorg_Id_;
				}

				public Boolean uorg_Id_IsNullable(){
				    return true;
				}
				public Boolean uorg_Id_IsKey(){
				    return false;
				}
				public Integer uorg_Id_Length(){
				    return 10;
				}
				public Integer uorg_Id_Precision(){
				    return 0;
				}
				public String uorg_Id_Default(){
				
					return null;
				
				}
				public String uorg_Id_Comment(){
				
				    return "";
				
				}
				public String uorg_Id_Pattern(){
				
					return "";
				
				}
				public String uorg_Id_OriginalDbColumnName(){
				
					return "uorg_Id_";
				
				}

				
			    public String Ins_Caract;

				public String getIns_Caract () {
					return this.Ins_Caract;
				}

				public Boolean Ins_CaractIsNullable(){
				    return true;
				}
				public Boolean Ins_CaractIsKey(){
				    return false;
				}
				public Integer Ins_CaractLength(){
				    return null;
				}
				public Integer Ins_CaractPrecision(){
				    return null;
				}
				public String Ins_CaractDefault(){
				
					return null;
				
				}
				public String Ins_CaractComment(){
				
				    return "";
				
				}
				public String Ins_CaractPattern(){
				
					return "";
				
				}
				public String Ins_CaractOriginalDbColumnName(){
				
					return "Ins_Caract";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public BigDecimal Id_;

				public BigDecimal getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Comercial_ = readString(dis);
					
					this.Presentacion_ = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteriticas_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
					this.ViaAdmin_Id_ = readString(dis);
					
						this.Forma_Id = (BigDecimal) dis.readObject();
					
					this.Forma_Id_ = readString(dis);
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id = (BigDecimal) dis.readObject();
					
					this.Formas_Farma_Id_ = readString(dis);
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
					this.UMedida_Id_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Cant_UMedida = null;
           				} else {
           			    	this.Cant_UMedida = dis.readDouble();
           				}
					
					this.Cant_UMedida_ = readString(dis);
					
						this.Cant_Minima = readInteger(dis);
					
					this.Cant_Minima_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
					this.Fabricante_Id_ = readString(dis);
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Importador_Id_ = readString(dis);
					
						this.usuarios_Id_ = (BigDecimal) dis.readObject();
					
						this.uorg_Id_ = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Comercial_ = readString(dis);
					
					this.Presentacion_ = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteriticas_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
					this.ViaAdmin_Id_ = readString(dis);
					
						this.Forma_Id = (BigDecimal) dis.readObject();
					
					this.Forma_Id_ = readString(dis);
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id = (BigDecimal) dis.readObject();
					
					this.Formas_Farma_Id_ = readString(dis);
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
					this.UMedida_Id_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Cant_UMedida = null;
           				} else {
           			    	this.Cant_UMedida = dis.readDouble();
           				}
					
					this.Cant_UMedida_ = readString(dis);
					
						this.Cant_Minima = readInteger(dis);
					
					this.Cant_Minima_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
					this.Fabricante_Id_ = readString(dis);
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Importador_Id_ = readString(dis);
					
						this.usuarios_Id_ = (BigDecimal) dis.readObject();
					
						this.uorg_Id_ = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Comercial_,dos);
					
					// String
				
						writeString(this.Presentacion_,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteriticas_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// String
				
						writeString(this.ViaAdmin_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Forma_Id);
					
					// String
				
						writeString(this.Forma_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Formas_Farma_Id);
					
					// String
				
						writeString(this.Formas_Farma_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// String
				
						writeString(this.UMedida_Id_,dos);
					
					// Double
				
						if(this.Cant_UMedida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Cant_UMedida);
		            	}
					
					// String
				
						writeString(this.Cant_UMedida_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Minima,dos);
					
					// String
				
						writeString(this.Cant_Minima_,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// String
				
						writeString(this.Fabricante_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Importador_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuarios_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorg_Id_);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Id_);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Comercial_,dos);
					
					// String
				
						writeString(this.Presentacion_,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteriticas_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// String
				
						writeString(this.ViaAdmin_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Forma_Id);
					
					// String
				
						writeString(this.Forma_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Formas_Farma_Id);
					
					// String
				
						writeString(this.Formas_Farma_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// String
				
						writeString(this.UMedida_Id_,dos);
					
					// Double
				
						if(this.Cant_UMedida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Cant_UMedida);
		            	}
					
					// String
				
						writeString(this.Cant_UMedida_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Minima,dos);
					
					// String
				
						writeString(this.Cant_Minima_,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// String
				
						writeString(this.Fabricante_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Importador_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuarios_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorg_Id_);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Id_);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",Estado_="+Estado_);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",Cod_Barras_="+Cod_Barras_);
		sb.append(",Comercial_="+Comercial_);
		sb.append(",Presentacion_="+Presentacion_);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis_="+Unidosis_);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",Reg_Invima_="+Reg_Invima_);
		sb.append(",F_Expedicion_="+F_Expedicion_);
		sb.append(",F_Vencimiento_="+F_Vencimiento_);
		sb.append(",F_Activo_Cum_="+F_Activo_Cum_);
		sb.append(",F_Inactivo_Cum_="+F_Inactivo_Cum_);
		sb.append(",Expediente_="+Expediente_);
		sb.append(",Consecutivo_="+Consecutivo_);
		sb.append(",Cum="+Cum);
		sb.append(",Origen_="+Origen_);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Caracteriticas_="+Caracteriticas_);
		sb.append(",Contraindicaciones_="+Contraindicaciones_);
		sb.append(",Efectos_="+Efectos_);
		sb.append(",Riesgos_="+Riesgos_);
		sb.append(",Dosis_="+Dosis_);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",ViaAdmin_Id_="+ViaAdmin_Id_);
		sb.append(",Forma_Id="+String.valueOf(Forma_Id));
		sb.append(",Forma_Id_="+Forma_Id_);
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",Formas_Farma_Id="+String.valueOf(Formas_Farma_Id));
		sb.append(",Formas_Farma_Id_="+Formas_Farma_Id_);
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",UMedida_Id_="+UMedida_Id_);
		sb.append(",Cant_UMedida="+String.valueOf(Cant_UMedida));
		sb.append(",Cant_UMedida_="+Cant_UMedida_);
		sb.append(",Cant_Minima="+String.valueOf(Cant_Minima));
		sb.append(",Cant_Minima_="+Cant_Minima_);
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Fabricante_Id_="+Fabricante_Id_);
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
		sb.append(",Importador_Id_="+Importador_Id_);
		sb.append(",usuarios_Id_="+String.valueOf(usuarios_Id_));
		sb.append(",uorg_Id_="+String.valueOf(uorg_Id_));
		sb.append(",Ins_Caract="+Ins_Caract);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",Id_="+String.valueOf(Id_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row48Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String Cod_Barras_;

				public String getCod_Barras_ () {
					return this.Cod_Barras_;
				}

				public Boolean Cod_Barras_IsNullable(){
				    return true;
				}
				public Boolean Cod_Barras_IsKey(){
				    return false;
				}
				public Integer Cod_Barras_Length(){
				    return 20;
				}
				public Integer Cod_Barras_Precision(){
				    return 0;
				}
				public String Cod_Barras_Default(){
				
					return null;
				
				}
				public String Cod_Barras_Comment(){
				
				    return "";
				
				}
				public String Cod_Barras_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Cod_Barras_OriginalDbColumnName(){
				
					return "Cod_Barras_";
				
				}

				
			    public String Comercial_;

				public String getComercial_ () {
					return this.Comercial_;
				}

				public Boolean Comercial_IsNullable(){
				    return true;
				}
				public Boolean Comercial_IsKey(){
				    return false;
				}
				public Integer Comercial_Length(){
				    return 150;
				}
				public Integer Comercial_Precision(){
				    return 0;
				}
				public String Comercial_Default(){
				
					return null;
				
				}
				public String Comercial_Comment(){
				
				    return "";
				
				}
				public String Comercial_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Comercial_OriginalDbColumnName(){
				
					return "Comercial_";
				
				}

				
			    public String Presentacion_;

				public String getPresentacion_ () {
					return this.Presentacion_;
				}

				public Boolean Presentacion_IsNullable(){
				    return true;
				}
				public Boolean Presentacion_IsKey(){
				    return false;
				}
				public Integer Presentacion_Length(){
				    return 500;
				}
				public Integer Presentacion_Precision(){
				    return 0;
				}
				public String Presentacion_Default(){
				
					return null;
				
				}
				public String Presentacion_Comment(){
				
				    return "";
				
				}
				public String Presentacion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Presentacion_OriginalDbColumnName(){
				
					return "Presentacion_";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis_;

				public String getUnidosis_ () {
					return this.Unidosis_;
				}

				public Boolean Unidosis_IsNullable(){
				    return true;
				}
				public Boolean Unidosis_IsKey(){
				    return false;
				}
				public Integer Unidosis_Length(){
				    return 2;
				}
				public Integer Unidosis_Precision(){
				    return 0;
				}
				public String Unidosis_Default(){
				
					return null;
				
				}
				public String Unidosis_Comment(){
				
				    return "";
				
				}
				public String Unidosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Unidosis_OriginalDbColumnName(){
				
					return "Unidosis_";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String Reg_Invima_;

				public String getReg_Invima_ () {
					return this.Reg_Invima_;
				}

				public Boolean Reg_Invima_IsNullable(){
				    return true;
				}
				public Boolean Reg_Invima_IsKey(){
				    return false;
				}
				public Integer Reg_Invima_Length(){
				    return 50;
				}
				public Integer Reg_Invima_Precision(){
				    return 0;
				}
				public String Reg_Invima_Default(){
				
					return null;
				
				}
				public String Reg_Invima_Comment(){
				
				    return "";
				
				}
				public String Reg_Invima_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Reg_Invima_OriginalDbColumnName(){
				
					return "Reg_Invima_";
				
				}

				
			    public String F_Expedicion_;

				public String getF_Expedicion_ () {
					return this.F_Expedicion_;
				}

				public Boolean F_Expedicion_IsNullable(){
				    return true;
				}
				public Boolean F_Expedicion_IsKey(){
				    return false;
				}
				public Integer F_Expedicion_Length(){
				    return 15;
				}
				public Integer F_Expedicion_Precision(){
				    return 0;
				}
				public String F_Expedicion_Default(){
				
					return null;
				
				}
				public String F_Expedicion_Comment(){
				
				    return "";
				
				}
				public String F_Expedicion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Expedicion_OriginalDbColumnName(){
				
					return "F_Expedicion_";
				
				}

				
			    public String F_Vencimiento_;

				public String getF_Vencimiento_ () {
					return this.F_Vencimiento_;
				}

				public Boolean F_Vencimiento_IsNullable(){
				    return true;
				}
				public Boolean F_Vencimiento_IsKey(){
				    return false;
				}
				public Integer F_Vencimiento_Length(){
				    return 15;
				}
				public Integer F_Vencimiento_Precision(){
				    return 0;
				}
				public String F_Vencimiento_Default(){
				
					return null;
				
				}
				public String F_Vencimiento_Comment(){
				
				    return "";
				
				}
				public String F_Vencimiento_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Vencimiento_OriginalDbColumnName(){
				
					return "F_Vencimiento_";
				
				}

				
			    public String F_Activo_Cum_;

				public String getF_Activo_Cum_ () {
					return this.F_Activo_Cum_;
				}

				public Boolean F_Activo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Activo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Activo_Cum_Length(){
				    return 15;
				}
				public Integer F_Activo_Cum_Precision(){
				    return 0;
				}
				public String F_Activo_Cum_Default(){
				
					return null;
				
				}
				public String F_Activo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Activo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Activo_Cum_OriginalDbColumnName(){
				
					return "F_Activo_Cum_";
				
				}

				
			    public String F_Inactivo_Cum_;

				public String getF_Inactivo_Cum_ () {
					return this.F_Inactivo_Cum_;
				}

				public Boolean F_Inactivo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Inactivo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Inactivo_Cum_Length(){
				    return 15;
				}
				public Integer F_Inactivo_Cum_Precision(){
				    return 0;
				}
				public String F_Inactivo_Cum_Default(){
				
					return null;
				
				}
				public String F_Inactivo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Inactivo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Inactivo_Cum_OriginalDbColumnName(){
				
					return "F_Inactivo_Cum_";
				
				}

				
			    public String Expediente_;

				public String getExpediente_ () {
					return this.Expediente_;
				}

				public Boolean Expediente_IsNullable(){
				    return true;
				}
				public Boolean Expediente_IsKey(){
				    return false;
				}
				public Integer Expediente_Length(){
				    return 25;
				}
				public Integer Expediente_Precision(){
				    return 0;
				}
				public String Expediente_Default(){
				
					return null;
				
				}
				public String Expediente_Comment(){
				
				    return "";
				
				}
				public String Expediente_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Expediente_OriginalDbColumnName(){
				
					return "Expediente_";
				
				}

				
			    public String Consecutivo_;

				public String getConsecutivo_ () {
					return this.Consecutivo_;
				}

				public Boolean Consecutivo_IsNullable(){
				    return true;
				}
				public Boolean Consecutivo_IsKey(){
				    return false;
				}
				public Integer Consecutivo_Length(){
				    return 10;
				}
				public Integer Consecutivo_Precision(){
				    return 0;
				}
				public String Consecutivo_Default(){
				
					return null;
				
				}
				public String Consecutivo_Comment(){
				
				    return "";
				
				}
				public String Consecutivo_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Consecutivo_OriginalDbColumnName(){
				
					return "Consecutivo_";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen_;

				public String getOrigen_ () {
					return this.Origen_;
				}

				public Boolean Origen_IsNullable(){
				    return true;
				}
				public Boolean Origen_IsKey(){
				    return false;
				}
				public Integer Origen_Length(){
				    return 500;
				}
				public Integer Origen_Precision(){
				    return 0;
				}
				public String Origen_Default(){
				
					return null;
				
				}
				public String Origen_Comment(){
				
				    return "";
				
				}
				public String Origen_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Origen_OriginalDbColumnName(){
				
					return "Origen_";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Caracteriticas_;

				public String getCaracteriticas_ () {
					return this.Caracteriticas_;
				}

				public Boolean Caracteriticas_IsNullable(){
				    return true;
				}
				public Boolean Caracteriticas_IsKey(){
				    return false;
				}
				public Integer Caracteriticas_Length(){
				    return null;
				}
				public Integer Caracteriticas_Precision(){
				    return null;
				}
				public String Caracteriticas_Default(){
				
					return null;
				
				}
				public String Caracteriticas_Comment(){
				
				    return "";
				
				}
				public String Caracteriticas_Pattern(){
				
					return "";
				
				}
				public String Caracteriticas_OriginalDbColumnName(){
				
					return "Caracteriticas_";
				
				}

				
			    public String Contraindicaciones_;

				public String getContraindicaciones_ () {
					return this.Contraindicaciones_;
				}

				public Boolean Contraindicaciones_IsNullable(){
				    return true;
				}
				public Boolean Contraindicaciones_IsKey(){
				    return false;
				}
				public Integer Contraindicaciones_Length(){
				    return 2000;
				}
				public Integer Contraindicaciones_Precision(){
				    return 0;
				}
				public String Contraindicaciones_Default(){
				
					return null;
				
				}
				public String Contraindicaciones_Comment(){
				
				    return "";
				
				}
				public String Contraindicaciones_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Contraindicaciones_OriginalDbColumnName(){
				
					return "Contraindicaciones_";
				
				}

				
			    public String Efectos_;

				public String getEfectos_ () {
					return this.Efectos_;
				}

				public Boolean Efectos_IsNullable(){
				    return true;
				}
				public Boolean Efectos_IsKey(){
				    return false;
				}
				public Integer Efectos_Length(){
				    return 2000;
				}
				public Integer Efectos_Precision(){
				    return 0;
				}
				public String Efectos_Default(){
				
					return null;
				
				}
				public String Efectos_Comment(){
				
				    return "";
				
				}
				public String Efectos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_OriginalDbColumnName(){
				
					return "Efectos_";
				
				}

				
			    public String Riesgos_;

				public String getRiesgos_ () {
					return this.Riesgos_;
				}

				public Boolean Riesgos_IsNullable(){
				    return true;
				}
				public Boolean Riesgos_IsKey(){
				    return false;
				}
				public Integer Riesgos_Length(){
				    return 2000;
				}
				public Integer Riesgos_Precision(){
				    return 0;
				}
				public String Riesgos_Default(){
				
					return null;
				
				}
				public String Riesgos_Comment(){
				
				    return "";
				
				}
				public String Riesgos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_OriginalDbColumnName(){
				
					return "Riesgos_";
				
				}

				
			    public String Dosis_;

				public String getDosis_ () {
					return this.Dosis_;
				}

				public Boolean Dosis_IsNullable(){
				    return true;
				}
				public Boolean Dosis_IsKey(){
				    return false;
				}
				public Integer Dosis_Length(){
				    return 500;
				}
				public Integer Dosis_Precision(){
				    return 0;
				}
				public String Dosis_Default(){
				
					return null;
				
				}
				public String Dosis_Comment(){
				
				    return "";
				
				}
				public String Dosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_OriginalDbColumnName(){
				
					return "Dosis_";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public String ViaAdmin_Id_;

				public String getViaAdmin_Id_ () {
					return this.ViaAdmin_Id_;
				}

				public Boolean ViaAdmin_Id_IsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_Id_IsKey(){
				    return false;
				}
				public Integer ViaAdmin_Id_Length(){
				    return null;
				}
				public Integer ViaAdmin_Id_Precision(){
				    return null;
				}
				public String ViaAdmin_Id_Default(){
				
					return null;
				
				}
				public String ViaAdmin_Id_Comment(){
				
				    return "";
				
				}
				public String ViaAdmin_Id_Pattern(){
				
					return "";
				
				}
				public String ViaAdmin_Id_OriginalDbColumnName(){
				
					return "ViaAdmin_Id_";
				
				}

				
			    public BigDecimal Forma_Id;

				public BigDecimal getForma_Id () {
					return this.Forma_Id;
				}

				public Boolean Forma_IdIsNullable(){
				    return true;
				}
				public Boolean Forma_IdIsKey(){
				    return false;
				}
				public Integer Forma_IdLength(){
				    return null;
				}
				public Integer Forma_IdPrecision(){
				    return null;
				}
				public String Forma_IdDefault(){
				
					return null;
				
				}
				public String Forma_IdComment(){
				
				    return "";
				
				}
				public String Forma_IdPattern(){
				
					return "";
				
				}
				public String Forma_IdOriginalDbColumnName(){
				
					return "Forma_Id";
				
				}

				
			    public String Forma_Id_;

				public String getForma_Id_ () {
					return this.Forma_Id_;
				}

				public Boolean Forma_Id_IsNullable(){
				    return true;
				}
				public Boolean Forma_Id_IsKey(){
				    return false;
				}
				public Integer Forma_Id_Length(){
				    return null;
				}
				public Integer Forma_Id_Precision(){
				    return null;
				}
				public String Forma_Id_Default(){
				
					return null;
				
				}
				public String Forma_Id_Comment(){
				
				    return "";
				
				}
				public String Forma_Id_Pattern(){
				
					return "";
				
				}
				public String Forma_Id_OriginalDbColumnName(){
				
					return "Forma_Id_";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal Formas_Farma_Id;

				public BigDecimal getFormas_Farma_Id () {
					return this.Formas_Farma_Id;
				}

				public Boolean Formas_Farma_IdIsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_IdIsKey(){
				    return false;
				}
				public Integer Formas_Farma_IdLength(){
				    return null;
				}
				public Integer Formas_Farma_IdPrecision(){
				    return null;
				}
				public String Formas_Farma_IdDefault(){
				
					return null;
				
				}
				public String Formas_Farma_IdComment(){
				
				    return "";
				
				}
				public String Formas_Farma_IdPattern(){
				
					return "";
				
				}
				public String Formas_Farma_IdOriginalDbColumnName(){
				
					return "Formas_Farma_Id";
				
				}

				
			    public String Formas_Farma_Id_;

				public String getFormas_Farma_Id_ () {
					return this.Formas_Farma_Id_;
				}

				public Boolean Formas_Farma_Id_IsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_Id_IsKey(){
				    return false;
				}
				public Integer Formas_Farma_Id_Length(){
				    return null;
				}
				public Integer Formas_Farma_Id_Precision(){
				    return null;
				}
				public String Formas_Farma_Id_Default(){
				
					return null;
				
				}
				public String Formas_Farma_Id_Comment(){
				
				    return "";
				
				}
				public String Formas_Farma_Id_Pattern(){
				
					return "";
				
				}
				public String Formas_Farma_Id_OriginalDbColumnName(){
				
					return "Formas_Farma_Id_";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public String UMedida_Id_;

				public String getUMedida_Id_ () {
					return this.UMedida_Id_;
				}

				public Boolean UMedida_Id_IsNullable(){
				    return true;
				}
				public Boolean UMedida_Id_IsKey(){
				    return false;
				}
				public Integer UMedida_Id_Length(){
				    return null;
				}
				public Integer UMedida_Id_Precision(){
				    return null;
				}
				public String UMedida_Id_Default(){
				
					return null;
				
				}
				public String UMedida_Id_Comment(){
				
				    return "";
				
				}
				public String UMedida_Id_Pattern(){
				
					return "";
				
				}
				public String UMedida_Id_OriginalDbColumnName(){
				
					return "UMedida_Id_";
				
				}

				
			    public Double Cant_UMedida;

				public Double getCant_UMedida () {
					return this.Cant_UMedida;
				}

				public Boolean Cant_UMedidaIsNullable(){
				    return true;
				}
				public Boolean Cant_UMedidaIsKey(){
				    return false;
				}
				public Integer Cant_UMedidaLength(){
				    return null;
				}
				public Integer Cant_UMedidaPrecision(){
				    return null;
				}
				public String Cant_UMedidaDefault(){
				
					return null;
				
				}
				public String Cant_UMedidaComment(){
				
				    return "";
				
				}
				public String Cant_UMedidaPattern(){
				
					return "";
				
				}
				public String Cant_UMedidaOriginalDbColumnName(){
				
					return "Cant_UMedida";
				
				}

				
			    public String Cant_UMedida_;

				public String getCant_UMedida_ () {
					return this.Cant_UMedida_;
				}

				public Boolean Cant_UMedida_IsNullable(){
				    return true;
				}
				public Boolean Cant_UMedida_IsKey(){
				    return false;
				}
				public Integer Cant_UMedida_Length(){
				    return null;
				}
				public Integer Cant_UMedida_Precision(){
				    return null;
				}
				public String Cant_UMedida_Default(){
				
					return null;
				
				}
				public String Cant_UMedida_Comment(){
				
				    return "";
				
				}
				public String Cant_UMedida_Pattern(){
				
					return "";
				
				}
				public String Cant_UMedida_OriginalDbColumnName(){
				
					return "Cant_UMedida_";
				
				}

				
			    public Integer Cant_Minima;

				public Integer getCant_Minima () {
					return this.Cant_Minima;
				}

				public Boolean Cant_MinimaIsNullable(){
				    return true;
				}
				public Boolean Cant_MinimaIsKey(){
				    return false;
				}
				public Integer Cant_MinimaLength(){
				    return null;
				}
				public Integer Cant_MinimaPrecision(){
				    return null;
				}
				public String Cant_MinimaDefault(){
				
					return null;
				
				}
				public String Cant_MinimaComment(){
				
				    return "";
				
				}
				public String Cant_MinimaPattern(){
				
					return "";
				
				}
				public String Cant_MinimaOriginalDbColumnName(){
				
					return "Cant_Minima";
				
				}

				
			    public String Cant_Minima_;

				public String getCant_Minima_ () {
					return this.Cant_Minima_;
				}

				public Boolean Cant_Minima_IsNullable(){
				    return true;
				}
				public Boolean Cant_Minima_IsKey(){
				    return false;
				}
				public Integer Cant_Minima_Length(){
				    return null;
				}
				public Integer Cant_Minima_Precision(){
				    return null;
				}
				public String Cant_Minima_Default(){
				
					return null;
				
				}
				public String Cant_Minima_Comment(){
				
				    return "";
				
				}
				public String Cant_Minima_Pattern(){
				
					return "";
				
				}
				public String Cant_Minima_OriginalDbColumnName(){
				
					return "Cant_Minima_";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public String Fabricante_Id_;

				public String getFabricante_Id_ () {
					return this.Fabricante_Id_;
				}

				public Boolean Fabricante_Id_IsNullable(){
				    return true;
				}
				public Boolean Fabricante_Id_IsKey(){
				    return false;
				}
				public Integer Fabricante_Id_Length(){
				    return null;
				}
				public Integer Fabricante_Id_Precision(){
				    return null;
				}
				public String Fabricante_Id_Default(){
				
					return null;
				
				}
				public String Fabricante_Id_Comment(){
				
				    return "";
				
				}
				public String Fabricante_Id_Pattern(){
				
					return "";
				
				}
				public String Fabricante_Id_OriginalDbColumnName(){
				
					return "Fabricante_Id_";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return null;
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				
			    public String Importador_Id_;

				public String getImportador_Id_ () {
					return this.Importador_Id_;
				}

				public Boolean Importador_Id_IsNullable(){
				    return true;
				}
				public Boolean Importador_Id_IsKey(){
				    return false;
				}
				public Integer Importador_Id_Length(){
				    return null;
				}
				public Integer Importador_Id_Precision(){
				    return null;
				}
				public String Importador_Id_Default(){
				
					return null;
				
				}
				public String Importador_Id_Comment(){
				
				    return "";
				
				}
				public String Importador_Id_Pattern(){
				
					return "";
				
				}
				public String Importador_Id_OriginalDbColumnName(){
				
					return "Importador_Id_";
				
				}

				
			    public BigDecimal usuarios_Id_;

				public BigDecimal getUsuarios_Id_ () {
					return this.usuarios_Id_;
				}

				public Boolean usuarios_Id_IsNullable(){
				    return true;
				}
				public Boolean usuarios_Id_IsKey(){
				    return false;
				}
				public Integer usuarios_Id_Length(){
				    return 10;
				}
				public Integer usuarios_Id_Precision(){
				    return 0;
				}
				public String usuarios_Id_Default(){
				
					return null;
				
				}
				public String usuarios_Id_Comment(){
				
				    return "";
				
				}
				public String usuarios_Id_Pattern(){
				
					return "";
				
				}
				public String usuarios_Id_OriginalDbColumnName(){
				
					return "usuarios_Id_";
				
				}

				
			    public BigDecimal uorg_Id_;

				public BigDecimal getUorg_Id_ () {
					return this.uorg_Id_;
				}

				public Boolean uorg_Id_IsNullable(){
				    return true;
				}
				public Boolean uorg_Id_IsKey(){
				    return false;
				}
				public Integer uorg_Id_Length(){
				    return 10;
				}
				public Integer uorg_Id_Precision(){
				    return 0;
				}
				public String uorg_Id_Default(){
				
					return null;
				
				}
				public String uorg_Id_Comment(){
				
				    return "";
				
				}
				public String uorg_Id_Pattern(){
				
					return "";
				
				}
				public String uorg_Id_OriginalDbColumnName(){
				
					return "uorg_Id_";
				
				}

				
			    public String Ins_Caract;

				public String getIns_Caract () {
					return this.Ins_Caract;
				}

				public Boolean Ins_CaractIsNullable(){
				    return true;
				}
				public Boolean Ins_CaractIsKey(){
				    return false;
				}
				public Integer Ins_CaractLength(){
				    return null;
				}
				public Integer Ins_CaractPrecision(){
				    return null;
				}
				public String Ins_CaractDefault(){
				
					return null;
				
				}
				public String Ins_CaractComment(){
				
				    return "";
				
				}
				public String Ins_CaractPattern(){
				
					return "";
				
				}
				public String Ins_CaractOriginalDbColumnName(){
				
					return "Ins_Caract";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public BigDecimal Id_;

				public BigDecimal getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				
			    public String errorMessage;

				public String getErrorMessage () {
					return this.errorMessage;
				}

				public Boolean errorMessageIsNullable(){
				    return true;
				}
				public Boolean errorMessageIsKey(){
				    return false;
				}
				public Integer errorMessageLength(){
				    return 255;
				}
				public Integer errorMessagePrecision(){
				    return 0;
				}
				public String errorMessageDefault(){
				
					return null;
				
				}
				public String errorMessageComment(){
				
				    return null;
				
				}
				public String errorMessagePattern(){
				
				    return null;
				
				}
				public String errorMessageOriginalDbColumnName(){
				
					return "errorMessage";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Comercial_ = readString(dis);
					
					this.Presentacion_ = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteriticas_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
					this.ViaAdmin_Id_ = readString(dis);
					
						this.Forma_Id = (BigDecimal) dis.readObject();
					
					this.Forma_Id_ = readString(dis);
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id = (BigDecimal) dis.readObject();
					
					this.Formas_Farma_Id_ = readString(dis);
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
					this.UMedida_Id_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Cant_UMedida = null;
           				} else {
           			    	this.Cant_UMedida = dis.readDouble();
           				}
					
					this.Cant_UMedida_ = readString(dis);
					
						this.Cant_Minima = readInteger(dis);
					
					this.Cant_Minima_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
					this.Fabricante_Id_ = readString(dis);
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Importador_Id_ = readString(dis);
					
						this.usuarios_Id_ = (BigDecimal) dis.readObject();
					
						this.uorg_Id_ = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = (BigDecimal) dis.readObject();
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Comercial_ = readString(dis);
					
					this.Presentacion_ = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteriticas_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
					this.ViaAdmin_Id_ = readString(dis);
					
						this.Forma_Id = (BigDecimal) dis.readObject();
					
					this.Forma_Id_ = readString(dis);
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id = (BigDecimal) dis.readObject();
					
					this.Formas_Farma_Id_ = readString(dis);
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
					this.UMedida_Id_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Cant_UMedida = null;
           				} else {
           			    	this.Cant_UMedida = dis.readDouble();
           				}
					
					this.Cant_UMedida_ = readString(dis);
					
						this.Cant_Minima = readInteger(dis);
					
					this.Cant_Minima_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
					this.Fabricante_Id_ = readString(dis);
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Importador_Id_ = readString(dis);
					
						this.usuarios_Id_ = (BigDecimal) dis.readObject();
					
						this.uorg_Id_ = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = (BigDecimal) dis.readObject();
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Comercial_,dos);
					
					// String
				
						writeString(this.Presentacion_,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteriticas_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// String
				
						writeString(this.ViaAdmin_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Forma_Id);
					
					// String
				
						writeString(this.Forma_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Formas_Farma_Id);
					
					// String
				
						writeString(this.Formas_Farma_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// String
				
						writeString(this.UMedida_Id_,dos);
					
					// Double
				
						if(this.Cant_UMedida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Cant_UMedida);
		            	}
					
					// String
				
						writeString(this.Cant_UMedida_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Minima,dos);
					
					// String
				
						writeString(this.Cant_Minima_,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// String
				
						writeString(this.Fabricante_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Importador_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuarios_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorg_Id_);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Id_);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Comercial_,dos);
					
					// String
				
						writeString(this.Presentacion_,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteriticas_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// String
				
						writeString(this.ViaAdmin_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Forma_Id);
					
					// String
				
						writeString(this.Forma_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Formas_Farma_Id);
					
					// String
				
						writeString(this.Formas_Farma_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// String
				
						writeString(this.UMedida_Id_,dos);
					
					// Double
				
						if(this.Cant_UMedida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Cant_UMedida);
		            	}
					
					// String
				
						writeString(this.Cant_UMedida_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Minima,dos);
					
					// String
				
						writeString(this.Cant_Minima_,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// String
				
						writeString(this.Fabricante_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Importador_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuarios_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorg_Id_);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Id_);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",Estado_="+Estado_);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",Cod_Barras_="+Cod_Barras_);
		sb.append(",Comercial_="+Comercial_);
		sb.append(",Presentacion_="+Presentacion_);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis_="+Unidosis_);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",Reg_Invima_="+Reg_Invima_);
		sb.append(",F_Expedicion_="+F_Expedicion_);
		sb.append(",F_Vencimiento_="+F_Vencimiento_);
		sb.append(",F_Activo_Cum_="+F_Activo_Cum_);
		sb.append(",F_Inactivo_Cum_="+F_Inactivo_Cum_);
		sb.append(",Expediente_="+Expediente_);
		sb.append(",Consecutivo_="+Consecutivo_);
		sb.append(",Cum="+Cum);
		sb.append(",Origen_="+Origen_);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Caracteriticas_="+Caracteriticas_);
		sb.append(",Contraindicaciones_="+Contraindicaciones_);
		sb.append(",Efectos_="+Efectos_);
		sb.append(",Riesgos_="+Riesgos_);
		sb.append(",Dosis_="+Dosis_);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",ViaAdmin_Id_="+ViaAdmin_Id_);
		sb.append(",Forma_Id="+String.valueOf(Forma_Id));
		sb.append(",Forma_Id_="+Forma_Id_);
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",Formas_Farma_Id="+String.valueOf(Formas_Farma_Id));
		sb.append(",Formas_Farma_Id_="+Formas_Farma_Id_);
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",UMedida_Id_="+UMedida_Id_);
		sb.append(",Cant_UMedida="+String.valueOf(Cant_UMedida));
		sb.append(",Cant_UMedida_="+Cant_UMedida_);
		sb.append(",Cant_Minima="+String.valueOf(Cant_Minima));
		sb.append(",Cant_Minima_="+Cant_Minima_);
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Fabricante_Id_="+Fabricante_Id_);
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
		sb.append(",Importador_Id_="+Importador_Id_);
		sb.append(",usuarios_Id_="+String.valueOf(usuarios_Id_));
		sb.append(",uorg_Id_="+String.valueOf(uorg_Id_));
		sb.append(",Ins_Caract="+Ins_Caract);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",Id_="+String.valueOf(Id_));
		sb.append(",errorMessage="+errorMessage);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row40Struct implements routines.system.IPersistableRow<row40Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String Cod_Barras_;

				public String getCod_Barras_ () {
					return this.Cod_Barras_;
				}

				public Boolean Cod_Barras_IsNullable(){
				    return true;
				}
				public Boolean Cod_Barras_IsKey(){
				    return false;
				}
				public Integer Cod_Barras_Length(){
				    return 20;
				}
				public Integer Cod_Barras_Precision(){
				    return 0;
				}
				public String Cod_Barras_Default(){
				
					return null;
				
				}
				public String Cod_Barras_Comment(){
				
				    return "";
				
				}
				public String Cod_Barras_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Cod_Barras_OriginalDbColumnName(){
				
					return "Cod_Barras_";
				
				}

				
			    public String Comercial_;

				public String getComercial_ () {
					return this.Comercial_;
				}

				public Boolean Comercial_IsNullable(){
				    return true;
				}
				public Boolean Comercial_IsKey(){
				    return false;
				}
				public Integer Comercial_Length(){
				    return 150;
				}
				public Integer Comercial_Precision(){
				    return 0;
				}
				public String Comercial_Default(){
				
					return null;
				
				}
				public String Comercial_Comment(){
				
				    return "";
				
				}
				public String Comercial_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Comercial_OriginalDbColumnName(){
				
					return "Comercial_";
				
				}

				
			    public String Presentacion_;

				public String getPresentacion_ () {
					return this.Presentacion_;
				}

				public Boolean Presentacion_IsNullable(){
				    return true;
				}
				public Boolean Presentacion_IsKey(){
				    return false;
				}
				public Integer Presentacion_Length(){
				    return 500;
				}
				public Integer Presentacion_Precision(){
				    return 0;
				}
				public String Presentacion_Default(){
				
					return null;
				
				}
				public String Presentacion_Comment(){
				
				    return "";
				
				}
				public String Presentacion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Presentacion_OriginalDbColumnName(){
				
					return "Presentacion_";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis_;

				public String getUnidosis_ () {
					return this.Unidosis_;
				}

				public Boolean Unidosis_IsNullable(){
				    return true;
				}
				public Boolean Unidosis_IsKey(){
				    return false;
				}
				public Integer Unidosis_Length(){
				    return 2;
				}
				public Integer Unidosis_Precision(){
				    return 0;
				}
				public String Unidosis_Default(){
				
					return null;
				
				}
				public String Unidosis_Comment(){
				
				    return "";
				
				}
				public String Unidosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Unidosis_OriginalDbColumnName(){
				
					return "Unidosis_";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String Reg_Invima_;

				public String getReg_Invima_ () {
					return this.Reg_Invima_;
				}

				public Boolean Reg_Invima_IsNullable(){
				    return true;
				}
				public Boolean Reg_Invima_IsKey(){
				    return false;
				}
				public Integer Reg_Invima_Length(){
				    return 50;
				}
				public Integer Reg_Invima_Precision(){
				    return 0;
				}
				public String Reg_Invima_Default(){
				
					return null;
				
				}
				public String Reg_Invima_Comment(){
				
				    return "";
				
				}
				public String Reg_Invima_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Reg_Invima_OriginalDbColumnName(){
				
					return "Reg_Invima_";
				
				}

				
			    public String F_Expedicion_;

				public String getF_Expedicion_ () {
					return this.F_Expedicion_;
				}

				public Boolean F_Expedicion_IsNullable(){
				    return true;
				}
				public Boolean F_Expedicion_IsKey(){
				    return false;
				}
				public Integer F_Expedicion_Length(){
				    return 15;
				}
				public Integer F_Expedicion_Precision(){
				    return 0;
				}
				public String F_Expedicion_Default(){
				
					return null;
				
				}
				public String F_Expedicion_Comment(){
				
				    return "";
				
				}
				public String F_Expedicion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Expedicion_OriginalDbColumnName(){
				
					return "F_Expedicion_";
				
				}

				
			    public String F_Vencimiento_;

				public String getF_Vencimiento_ () {
					return this.F_Vencimiento_;
				}

				public Boolean F_Vencimiento_IsNullable(){
				    return true;
				}
				public Boolean F_Vencimiento_IsKey(){
				    return false;
				}
				public Integer F_Vencimiento_Length(){
				    return 15;
				}
				public Integer F_Vencimiento_Precision(){
				    return 0;
				}
				public String F_Vencimiento_Default(){
				
					return null;
				
				}
				public String F_Vencimiento_Comment(){
				
				    return "";
				
				}
				public String F_Vencimiento_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Vencimiento_OriginalDbColumnName(){
				
					return "F_Vencimiento_";
				
				}

				
			    public String F_Activo_Cum_;

				public String getF_Activo_Cum_ () {
					return this.F_Activo_Cum_;
				}

				public Boolean F_Activo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Activo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Activo_Cum_Length(){
				    return 15;
				}
				public Integer F_Activo_Cum_Precision(){
				    return 0;
				}
				public String F_Activo_Cum_Default(){
				
					return null;
				
				}
				public String F_Activo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Activo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Activo_Cum_OriginalDbColumnName(){
				
					return "F_Activo_Cum_";
				
				}

				
			    public String F_Inactivo_Cum_;

				public String getF_Inactivo_Cum_ () {
					return this.F_Inactivo_Cum_;
				}

				public Boolean F_Inactivo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Inactivo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Inactivo_Cum_Length(){
				    return 15;
				}
				public Integer F_Inactivo_Cum_Precision(){
				    return 0;
				}
				public String F_Inactivo_Cum_Default(){
				
					return null;
				
				}
				public String F_Inactivo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Inactivo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Inactivo_Cum_OriginalDbColumnName(){
				
					return "F_Inactivo_Cum_";
				
				}

				
			    public String Expediente_;

				public String getExpediente_ () {
					return this.Expediente_;
				}

				public Boolean Expediente_IsNullable(){
				    return true;
				}
				public Boolean Expediente_IsKey(){
				    return false;
				}
				public Integer Expediente_Length(){
				    return 25;
				}
				public Integer Expediente_Precision(){
				    return 0;
				}
				public String Expediente_Default(){
				
					return null;
				
				}
				public String Expediente_Comment(){
				
				    return "";
				
				}
				public String Expediente_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Expediente_OriginalDbColumnName(){
				
					return "Expediente_";
				
				}

				
			    public String Consecutivo_;

				public String getConsecutivo_ () {
					return this.Consecutivo_;
				}

				public Boolean Consecutivo_IsNullable(){
				    return true;
				}
				public Boolean Consecutivo_IsKey(){
				    return false;
				}
				public Integer Consecutivo_Length(){
				    return 10;
				}
				public Integer Consecutivo_Precision(){
				    return 0;
				}
				public String Consecutivo_Default(){
				
					return null;
				
				}
				public String Consecutivo_Comment(){
				
				    return "";
				
				}
				public String Consecutivo_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Consecutivo_OriginalDbColumnName(){
				
					return "Consecutivo_";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen_;

				public String getOrigen_ () {
					return this.Origen_;
				}

				public Boolean Origen_IsNullable(){
				    return true;
				}
				public Boolean Origen_IsKey(){
				    return false;
				}
				public Integer Origen_Length(){
				    return 500;
				}
				public Integer Origen_Precision(){
				    return 0;
				}
				public String Origen_Default(){
				
					return null;
				
				}
				public String Origen_Comment(){
				
				    return "";
				
				}
				public String Origen_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Origen_OriginalDbColumnName(){
				
					return "Origen_";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Caracteriticas_;

				public String getCaracteriticas_ () {
					return this.Caracteriticas_;
				}

				public Boolean Caracteriticas_IsNullable(){
				    return true;
				}
				public Boolean Caracteriticas_IsKey(){
				    return false;
				}
				public Integer Caracteriticas_Length(){
				    return null;
				}
				public Integer Caracteriticas_Precision(){
				    return null;
				}
				public String Caracteriticas_Default(){
				
					return null;
				
				}
				public String Caracteriticas_Comment(){
				
				    return "";
				
				}
				public String Caracteriticas_Pattern(){
				
					return "";
				
				}
				public String Caracteriticas_OriginalDbColumnName(){
				
					return "Caracteriticas_";
				
				}

				
			    public String Contraindicaciones_;

				public String getContraindicaciones_ () {
					return this.Contraindicaciones_;
				}

				public Boolean Contraindicaciones_IsNullable(){
				    return true;
				}
				public Boolean Contraindicaciones_IsKey(){
				    return false;
				}
				public Integer Contraindicaciones_Length(){
				    return 2000;
				}
				public Integer Contraindicaciones_Precision(){
				    return 0;
				}
				public String Contraindicaciones_Default(){
				
					return null;
				
				}
				public String Contraindicaciones_Comment(){
				
				    return "";
				
				}
				public String Contraindicaciones_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Contraindicaciones_OriginalDbColumnName(){
				
					return "Contraindicaciones_";
				
				}

				
			    public String Efectos_;

				public String getEfectos_ () {
					return this.Efectos_;
				}

				public Boolean Efectos_IsNullable(){
				    return true;
				}
				public Boolean Efectos_IsKey(){
				    return false;
				}
				public Integer Efectos_Length(){
				    return 2000;
				}
				public Integer Efectos_Precision(){
				    return 0;
				}
				public String Efectos_Default(){
				
					return null;
				
				}
				public String Efectos_Comment(){
				
				    return "";
				
				}
				public String Efectos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_OriginalDbColumnName(){
				
					return "Efectos_";
				
				}

				
			    public String Riesgos_;

				public String getRiesgos_ () {
					return this.Riesgos_;
				}

				public Boolean Riesgos_IsNullable(){
				    return true;
				}
				public Boolean Riesgos_IsKey(){
				    return false;
				}
				public Integer Riesgos_Length(){
				    return 2000;
				}
				public Integer Riesgos_Precision(){
				    return 0;
				}
				public String Riesgos_Default(){
				
					return null;
				
				}
				public String Riesgos_Comment(){
				
				    return "";
				
				}
				public String Riesgos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_OriginalDbColumnName(){
				
					return "Riesgos_";
				
				}

				
			    public String Dosis_;

				public String getDosis_ () {
					return this.Dosis_;
				}

				public Boolean Dosis_IsNullable(){
				    return true;
				}
				public Boolean Dosis_IsKey(){
				    return false;
				}
				public Integer Dosis_Length(){
				    return 500;
				}
				public Integer Dosis_Precision(){
				    return 0;
				}
				public String Dosis_Default(){
				
					return null;
				
				}
				public String Dosis_Comment(){
				
				    return "";
				
				}
				public String Dosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_OriginalDbColumnName(){
				
					return "Dosis_";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public String ViaAdmin_Id_;

				public String getViaAdmin_Id_ () {
					return this.ViaAdmin_Id_;
				}

				public Boolean ViaAdmin_Id_IsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_Id_IsKey(){
				    return false;
				}
				public Integer ViaAdmin_Id_Length(){
				    return null;
				}
				public Integer ViaAdmin_Id_Precision(){
				    return null;
				}
				public String ViaAdmin_Id_Default(){
				
					return null;
				
				}
				public String ViaAdmin_Id_Comment(){
				
				    return "";
				
				}
				public String ViaAdmin_Id_Pattern(){
				
					return "";
				
				}
				public String ViaAdmin_Id_OriginalDbColumnName(){
				
					return "ViaAdmin_Id_";
				
				}

				
			    public BigDecimal Forma_Id;

				public BigDecimal getForma_Id () {
					return this.Forma_Id;
				}

				public Boolean Forma_IdIsNullable(){
				    return true;
				}
				public Boolean Forma_IdIsKey(){
				    return false;
				}
				public Integer Forma_IdLength(){
				    return null;
				}
				public Integer Forma_IdPrecision(){
				    return null;
				}
				public String Forma_IdDefault(){
				
					return null;
				
				}
				public String Forma_IdComment(){
				
				    return "";
				
				}
				public String Forma_IdPattern(){
				
					return "";
				
				}
				public String Forma_IdOriginalDbColumnName(){
				
					return "Forma_Id";
				
				}

				
			    public String Forma_Id_;

				public String getForma_Id_ () {
					return this.Forma_Id_;
				}

				public Boolean Forma_Id_IsNullable(){
				    return true;
				}
				public Boolean Forma_Id_IsKey(){
				    return false;
				}
				public Integer Forma_Id_Length(){
				    return null;
				}
				public Integer Forma_Id_Precision(){
				    return null;
				}
				public String Forma_Id_Default(){
				
					return null;
				
				}
				public String Forma_Id_Comment(){
				
				    return "";
				
				}
				public String Forma_Id_Pattern(){
				
					return "";
				
				}
				public String Forma_Id_OriginalDbColumnName(){
				
					return "Forma_Id_";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal Formas_Farma_Id;

				public BigDecimal getFormas_Farma_Id () {
					return this.Formas_Farma_Id;
				}

				public Boolean Formas_Farma_IdIsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_IdIsKey(){
				    return false;
				}
				public Integer Formas_Farma_IdLength(){
				    return null;
				}
				public Integer Formas_Farma_IdPrecision(){
				    return null;
				}
				public String Formas_Farma_IdDefault(){
				
					return null;
				
				}
				public String Formas_Farma_IdComment(){
				
				    return "";
				
				}
				public String Formas_Farma_IdPattern(){
				
					return "";
				
				}
				public String Formas_Farma_IdOriginalDbColumnName(){
				
					return "Formas_Farma_Id";
				
				}

				
			    public String Formas_Farma_Id_;

				public String getFormas_Farma_Id_ () {
					return this.Formas_Farma_Id_;
				}

				public Boolean Formas_Farma_Id_IsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_Id_IsKey(){
				    return false;
				}
				public Integer Formas_Farma_Id_Length(){
				    return null;
				}
				public Integer Formas_Farma_Id_Precision(){
				    return null;
				}
				public String Formas_Farma_Id_Default(){
				
					return null;
				
				}
				public String Formas_Farma_Id_Comment(){
				
				    return "";
				
				}
				public String Formas_Farma_Id_Pattern(){
				
					return "";
				
				}
				public String Formas_Farma_Id_OriginalDbColumnName(){
				
					return "Formas_Farma_Id_";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public String UMedida_Id_;

				public String getUMedida_Id_ () {
					return this.UMedida_Id_;
				}

				public Boolean UMedida_Id_IsNullable(){
				    return true;
				}
				public Boolean UMedida_Id_IsKey(){
				    return false;
				}
				public Integer UMedida_Id_Length(){
				    return null;
				}
				public Integer UMedida_Id_Precision(){
				    return null;
				}
				public String UMedida_Id_Default(){
				
					return null;
				
				}
				public String UMedida_Id_Comment(){
				
				    return "";
				
				}
				public String UMedida_Id_Pattern(){
				
					return "";
				
				}
				public String UMedida_Id_OriginalDbColumnName(){
				
					return "UMedida_Id_";
				
				}

				
			    public Double Cant_UMedida;

				public Double getCant_UMedida () {
					return this.Cant_UMedida;
				}

				public Boolean Cant_UMedidaIsNullable(){
				    return true;
				}
				public Boolean Cant_UMedidaIsKey(){
				    return false;
				}
				public Integer Cant_UMedidaLength(){
				    return null;
				}
				public Integer Cant_UMedidaPrecision(){
				    return null;
				}
				public String Cant_UMedidaDefault(){
				
					return null;
				
				}
				public String Cant_UMedidaComment(){
				
				    return "";
				
				}
				public String Cant_UMedidaPattern(){
				
					return "";
				
				}
				public String Cant_UMedidaOriginalDbColumnName(){
				
					return "Cant_UMedida";
				
				}

				
			    public String Cant_UMedida_;

				public String getCant_UMedida_ () {
					return this.Cant_UMedida_;
				}

				public Boolean Cant_UMedida_IsNullable(){
				    return true;
				}
				public Boolean Cant_UMedida_IsKey(){
				    return false;
				}
				public Integer Cant_UMedida_Length(){
				    return null;
				}
				public Integer Cant_UMedida_Precision(){
				    return null;
				}
				public String Cant_UMedida_Default(){
				
					return null;
				
				}
				public String Cant_UMedida_Comment(){
				
				    return "";
				
				}
				public String Cant_UMedida_Pattern(){
				
					return "";
				
				}
				public String Cant_UMedida_OriginalDbColumnName(){
				
					return "Cant_UMedida_";
				
				}

				
			    public Integer Cant_Minima;

				public Integer getCant_Minima () {
					return this.Cant_Minima;
				}

				public Boolean Cant_MinimaIsNullable(){
				    return true;
				}
				public Boolean Cant_MinimaIsKey(){
				    return false;
				}
				public Integer Cant_MinimaLength(){
				    return null;
				}
				public Integer Cant_MinimaPrecision(){
				    return null;
				}
				public String Cant_MinimaDefault(){
				
					return null;
				
				}
				public String Cant_MinimaComment(){
				
				    return "";
				
				}
				public String Cant_MinimaPattern(){
				
					return "";
				
				}
				public String Cant_MinimaOriginalDbColumnName(){
				
					return "Cant_Minima";
				
				}

				
			    public String Cant_Minima_;

				public String getCant_Minima_ () {
					return this.Cant_Minima_;
				}

				public Boolean Cant_Minima_IsNullable(){
				    return true;
				}
				public Boolean Cant_Minima_IsKey(){
				    return false;
				}
				public Integer Cant_Minima_Length(){
				    return null;
				}
				public Integer Cant_Minima_Precision(){
				    return null;
				}
				public String Cant_Minima_Default(){
				
					return null;
				
				}
				public String Cant_Minima_Comment(){
				
				    return "";
				
				}
				public String Cant_Minima_Pattern(){
				
					return "";
				
				}
				public String Cant_Minima_OriginalDbColumnName(){
				
					return "Cant_Minima_";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public String Fabricante_Id_;

				public String getFabricante_Id_ () {
					return this.Fabricante_Id_;
				}

				public Boolean Fabricante_Id_IsNullable(){
				    return true;
				}
				public Boolean Fabricante_Id_IsKey(){
				    return false;
				}
				public Integer Fabricante_Id_Length(){
				    return null;
				}
				public Integer Fabricante_Id_Precision(){
				    return null;
				}
				public String Fabricante_Id_Default(){
				
					return null;
				
				}
				public String Fabricante_Id_Comment(){
				
				    return "";
				
				}
				public String Fabricante_Id_Pattern(){
				
					return "";
				
				}
				public String Fabricante_Id_OriginalDbColumnName(){
				
					return "Fabricante_Id_";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return null;
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				
			    public String Importador_Id_;

				public String getImportador_Id_ () {
					return this.Importador_Id_;
				}

				public Boolean Importador_Id_IsNullable(){
				    return true;
				}
				public Boolean Importador_Id_IsKey(){
				    return false;
				}
				public Integer Importador_Id_Length(){
				    return null;
				}
				public Integer Importador_Id_Precision(){
				    return null;
				}
				public String Importador_Id_Default(){
				
					return null;
				
				}
				public String Importador_Id_Comment(){
				
				    return "";
				
				}
				public String Importador_Id_Pattern(){
				
					return "";
				
				}
				public String Importador_Id_OriginalDbColumnName(){
				
					return "Importador_Id_";
				
				}

				
			    public BigDecimal usuarios_Id_;

				public BigDecimal getUsuarios_Id_ () {
					return this.usuarios_Id_;
				}

				public Boolean usuarios_Id_IsNullable(){
				    return true;
				}
				public Boolean usuarios_Id_IsKey(){
				    return false;
				}
				public Integer usuarios_Id_Length(){
				    return 10;
				}
				public Integer usuarios_Id_Precision(){
				    return 0;
				}
				public String usuarios_Id_Default(){
				
					return null;
				
				}
				public String usuarios_Id_Comment(){
				
				    return "";
				
				}
				public String usuarios_Id_Pattern(){
				
					return "";
				
				}
				public String usuarios_Id_OriginalDbColumnName(){
				
					return "usuarios_Id_";
				
				}

				
			    public BigDecimal uorg_Id_;

				public BigDecimal getUorg_Id_ () {
					return this.uorg_Id_;
				}

				public Boolean uorg_Id_IsNullable(){
				    return true;
				}
				public Boolean uorg_Id_IsKey(){
				    return false;
				}
				public Integer uorg_Id_Length(){
				    return 10;
				}
				public Integer uorg_Id_Precision(){
				    return 0;
				}
				public String uorg_Id_Default(){
				
					return null;
				
				}
				public String uorg_Id_Comment(){
				
				    return "";
				
				}
				public String uorg_Id_Pattern(){
				
					return "";
				
				}
				public String uorg_Id_OriginalDbColumnName(){
				
					return "uorg_Id_";
				
				}

				
			    public String Ins_Caract;

				public String getIns_Caract () {
					return this.Ins_Caract;
				}

				public Boolean Ins_CaractIsNullable(){
				    return true;
				}
				public Boolean Ins_CaractIsKey(){
				    return false;
				}
				public Integer Ins_CaractLength(){
				    return null;
				}
				public Integer Ins_CaractPrecision(){
				    return null;
				}
				public String Ins_CaractDefault(){
				
					return null;
				
				}
				public String Ins_CaractComment(){
				
				    return "";
				
				}
				public String Ins_CaractPattern(){
				
					return "";
				
				}
				public String Ins_CaractOriginalDbColumnName(){
				
					return "Ins_Caract";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public BigDecimal Id_;

				public BigDecimal getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Comercial_ = readString(dis);
					
					this.Presentacion_ = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteriticas_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
					this.ViaAdmin_Id_ = readString(dis);
					
						this.Forma_Id = (BigDecimal) dis.readObject();
					
					this.Forma_Id_ = readString(dis);
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id = (BigDecimal) dis.readObject();
					
					this.Formas_Farma_Id_ = readString(dis);
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
					this.UMedida_Id_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Cant_UMedida = null;
           				} else {
           			    	this.Cant_UMedida = dis.readDouble();
           				}
					
					this.Cant_UMedida_ = readString(dis);
					
						this.Cant_Minima = readInteger(dis);
					
					this.Cant_Minima_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
					this.Fabricante_Id_ = readString(dis);
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Importador_Id_ = readString(dis);
					
						this.usuarios_Id_ = (BigDecimal) dis.readObject();
					
						this.uorg_Id_ = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Comercial_ = readString(dis);
					
					this.Presentacion_ = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteriticas_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
					this.ViaAdmin_Id_ = readString(dis);
					
						this.Forma_Id = (BigDecimal) dis.readObject();
					
					this.Forma_Id_ = readString(dis);
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id = (BigDecimal) dis.readObject();
					
					this.Formas_Farma_Id_ = readString(dis);
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
					this.UMedida_Id_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Cant_UMedida = null;
           				} else {
           			    	this.Cant_UMedida = dis.readDouble();
           				}
					
					this.Cant_UMedida_ = readString(dis);
					
						this.Cant_Minima = readInteger(dis);
					
					this.Cant_Minima_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
					this.Fabricante_Id_ = readString(dis);
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Importador_Id_ = readString(dis);
					
						this.usuarios_Id_ = (BigDecimal) dis.readObject();
					
						this.uorg_Id_ = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Comercial_,dos);
					
					// String
				
						writeString(this.Presentacion_,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteriticas_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// String
				
						writeString(this.ViaAdmin_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Forma_Id);
					
					// String
				
						writeString(this.Forma_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Formas_Farma_Id);
					
					// String
				
						writeString(this.Formas_Farma_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// String
				
						writeString(this.UMedida_Id_,dos);
					
					// Double
				
						if(this.Cant_UMedida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Cant_UMedida);
		            	}
					
					// String
				
						writeString(this.Cant_UMedida_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Minima,dos);
					
					// String
				
						writeString(this.Cant_Minima_,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// String
				
						writeString(this.Fabricante_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Importador_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuarios_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorg_Id_);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Id_);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Comercial_,dos);
					
					// String
				
						writeString(this.Presentacion_,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteriticas_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// String
				
						writeString(this.ViaAdmin_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Forma_Id);
					
					// String
				
						writeString(this.Forma_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Formas_Farma_Id);
					
					// String
				
						writeString(this.Formas_Farma_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// String
				
						writeString(this.UMedida_Id_,dos);
					
					// Double
				
						if(this.Cant_UMedida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Cant_UMedida);
		            	}
					
					// String
				
						writeString(this.Cant_UMedida_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Minima,dos);
					
					// String
				
						writeString(this.Cant_Minima_,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// String
				
						writeString(this.Fabricante_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Importador_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuarios_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorg_Id_);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Id_);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",Estado_="+Estado_);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",Cod_Barras_="+Cod_Barras_);
		sb.append(",Comercial_="+Comercial_);
		sb.append(",Presentacion_="+Presentacion_);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis_="+Unidosis_);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",Reg_Invima_="+Reg_Invima_);
		sb.append(",F_Expedicion_="+F_Expedicion_);
		sb.append(",F_Vencimiento_="+F_Vencimiento_);
		sb.append(",F_Activo_Cum_="+F_Activo_Cum_);
		sb.append(",F_Inactivo_Cum_="+F_Inactivo_Cum_);
		sb.append(",Expediente_="+Expediente_);
		sb.append(",Consecutivo_="+Consecutivo_);
		sb.append(",Cum="+Cum);
		sb.append(",Origen_="+Origen_);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Caracteriticas_="+Caracteriticas_);
		sb.append(",Contraindicaciones_="+Contraindicaciones_);
		sb.append(",Efectos_="+Efectos_);
		sb.append(",Riesgos_="+Riesgos_);
		sb.append(",Dosis_="+Dosis_);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",ViaAdmin_Id_="+ViaAdmin_Id_);
		sb.append(",Forma_Id="+String.valueOf(Forma_Id));
		sb.append(",Forma_Id_="+Forma_Id_);
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",Formas_Farma_Id="+String.valueOf(Formas_Farma_Id));
		sb.append(",Formas_Farma_Id_="+Formas_Farma_Id_);
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",UMedida_Id_="+UMedida_Id_);
		sb.append(",Cant_UMedida="+String.valueOf(Cant_UMedida));
		sb.append(",Cant_UMedida_="+Cant_UMedida_);
		sb.append(",Cant_Minima="+String.valueOf(Cant_Minima));
		sb.append(",Cant_Minima_="+Cant_Minima_);
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Fabricante_Id_="+Fabricante_Id_);
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
		sb.append(",Importador_Id_="+Importador_Id_);
		sb.append(",usuarios_Id_="+String.valueOf(usuarios_Id_));
		sb.append(",uorg_Id_="+String.valueOf(uorg_Id_));
		sb.append(",Ins_Caract="+Ins_Caract);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",Id_="+String.valueOf(Id_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row40Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String Cod_Barras_;

				public String getCod_Barras_ () {
					return this.Cod_Barras_;
				}

				public Boolean Cod_Barras_IsNullable(){
				    return true;
				}
				public Boolean Cod_Barras_IsKey(){
				    return false;
				}
				public Integer Cod_Barras_Length(){
				    return 20;
				}
				public Integer Cod_Barras_Precision(){
				    return 0;
				}
				public String Cod_Barras_Default(){
				
					return null;
				
				}
				public String Cod_Barras_Comment(){
				
				    return "";
				
				}
				public String Cod_Barras_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Cod_Barras_OriginalDbColumnName(){
				
					return "Cod_Barras_";
				
				}

				
			    public String Comercial_;

				public String getComercial_ () {
					return this.Comercial_;
				}

				public Boolean Comercial_IsNullable(){
				    return true;
				}
				public Boolean Comercial_IsKey(){
				    return false;
				}
				public Integer Comercial_Length(){
				    return 150;
				}
				public Integer Comercial_Precision(){
				    return 0;
				}
				public String Comercial_Default(){
				
					return null;
				
				}
				public String Comercial_Comment(){
				
				    return "";
				
				}
				public String Comercial_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Comercial_OriginalDbColumnName(){
				
					return "Comercial_";
				
				}

				
			    public String Presentacion_;

				public String getPresentacion_ () {
					return this.Presentacion_;
				}

				public Boolean Presentacion_IsNullable(){
				    return true;
				}
				public Boolean Presentacion_IsKey(){
				    return false;
				}
				public Integer Presentacion_Length(){
				    return 500;
				}
				public Integer Presentacion_Precision(){
				    return 0;
				}
				public String Presentacion_Default(){
				
					return null;
				
				}
				public String Presentacion_Comment(){
				
				    return "";
				
				}
				public String Presentacion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Presentacion_OriginalDbColumnName(){
				
					return "Presentacion_";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis_;

				public String getUnidosis_ () {
					return this.Unidosis_;
				}

				public Boolean Unidosis_IsNullable(){
				    return true;
				}
				public Boolean Unidosis_IsKey(){
				    return false;
				}
				public Integer Unidosis_Length(){
				    return 2;
				}
				public Integer Unidosis_Precision(){
				    return 0;
				}
				public String Unidosis_Default(){
				
					return null;
				
				}
				public String Unidosis_Comment(){
				
				    return "";
				
				}
				public String Unidosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Unidosis_OriginalDbColumnName(){
				
					return "Unidosis_";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String Reg_Invima_;

				public String getReg_Invima_ () {
					return this.Reg_Invima_;
				}

				public Boolean Reg_Invima_IsNullable(){
				    return true;
				}
				public Boolean Reg_Invima_IsKey(){
				    return false;
				}
				public Integer Reg_Invima_Length(){
				    return 50;
				}
				public Integer Reg_Invima_Precision(){
				    return 0;
				}
				public String Reg_Invima_Default(){
				
					return null;
				
				}
				public String Reg_Invima_Comment(){
				
				    return "";
				
				}
				public String Reg_Invima_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Reg_Invima_OriginalDbColumnName(){
				
					return "Reg_Invima_";
				
				}

				
			    public String F_Expedicion_;

				public String getF_Expedicion_ () {
					return this.F_Expedicion_;
				}

				public Boolean F_Expedicion_IsNullable(){
				    return true;
				}
				public Boolean F_Expedicion_IsKey(){
				    return false;
				}
				public Integer F_Expedicion_Length(){
				    return 15;
				}
				public Integer F_Expedicion_Precision(){
				    return 0;
				}
				public String F_Expedicion_Default(){
				
					return null;
				
				}
				public String F_Expedicion_Comment(){
				
				    return "";
				
				}
				public String F_Expedicion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Expedicion_OriginalDbColumnName(){
				
					return "F_Expedicion_";
				
				}

				
			    public String F_Vencimiento_;

				public String getF_Vencimiento_ () {
					return this.F_Vencimiento_;
				}

				public Boolean F_Vencimiento_IsNullable(){
				    return true;
				}
				public Boolean F_Vencimiento_IsKey(){
				    return false;
				}
				public Integer F_Vencimiento_Length(){
				    return 15;
				}
				public Integer F_Vencimiento_Precision(){
				    return 0;
				}
				public String F_Vencimiento_Default(){
				
					return null;
				
				}
				public String F_Vencimiento_Comment(){
				
				    return "";
				
				}
				public String F_Vencimiento_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Vencimiento_OriginalDbColumnName(){
				
					return "F_Vencimiento_";
				
				}

				
			    public String F_Activo_Cum_;

				public String getF_Activo_Cum_ () {
					return this.F_Activo_Cum_;
				}

				public Boolean F_Activo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Activo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Activo_Cum_Length(){
				    return 15;
				}
				public Integer F_Activo_Cum_Precision(){
				    return 0;
				}
				public String F_Activo_Cum_Default(){
				
					return null;
				
				}
				public String F_Activo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Activo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Activo_Cum_OriginalDbColumnName(){
				
					return "F_Activo_Cum_";
				
				}

				
			    public String F_Inactivo_Cum_;

				public String getF_Inactivo_Cum_ () {
					return this.F_Inactivo_Cum_;
				}

				public Boolean F_Inactivo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Inactivo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Inactivo_Cum_Length(){
				    return 15;
				}
				public Integer F_Inactivo_Cum_Precision(){
				    return 0;
				}
				public String F_Inactivo_Cum_Default(){
				
					return null;
				
				}
				public String F_Inactivo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Inactivo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Inactivo_Cum_OriginalDbColumnName(){
				
					return "F_Inactivo_Cum_";
				
				}

				
			    public String Expediente_;

				public String getExpediente_ () {
					return this.Expediente_;
				}

				public Boolean Expediente_IsNullable(){
				    return true;
				}
				public Boolean Expediente_IsKey(){
				    return false;
				}
				public Integer Expediente_Length(){
				    return 25;
				}
				public Integer Expediente_Precision(){
				    return 0;
				}
				public String Expediente_Default(){
				
					return null;
				
				}
				public String Expediente_Comment(){
				
				    return "";
				
				}
				public String Expediente_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Expediente_OriginalDbColumnName(){
				
					return "Expediente_";
				
				}

				
			    public String Consecutivo_;

				public String getConsecutivo_ () {
					return this.Consecutivo_;
				}

				public Boolean Consecutivo_IsNullable(){
				    return true;
				}
				public Boolean Consecutivo_IsKey(){
				    return false;
				}
				public Integer Consecutivo_Length(){
				    return 10;
				}
				public Integer Consecutivo_Precision(){
				    return 0;
				}
				public String Consecutivo_Default(){
				
					return null;
				
				}
				public String Consecutivo_Comment(){
				
				    return "";
				
				}
				public String Consecutivo_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Consecutivo_OriginalDbColumnName(){
				
					return "Consecutivo_";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen_;

				public String getOrigen_ () {
					return this.Origen_;
				}

				public Boolean Origen_IsNullable(){
				    return true;
				}
				public Boolean Origen_IsKey(){
				    return false;
				}
				public Integer Origen_Length(){
				    return 500;
				}
				public Integer Origen_Precision(){
				    return 0;
				}
				public String Origen_Default(){
				
					return null;
				
				}
				public String Origen_Comment(){
				
				    return "";
				
				}
				public String Origen_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Origen_OriginalDbColumnName(){
				
					return "Origen_";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Caracteriticas_;

				public String getCaracteriticas_ () {
					return this.Caracteriticas_;
				}

				public Boolean Caracteriticas_IsNullable(){
				    return true;
				}
				public Boolean Caracteriticas_IsKey(){
				    return false;
				}
				public Integer Caracteriticas_Length(){
				    return null;
				}
				public Integer Caracteriticas_Precision(){
				    return null;
				}
				public String Caracteriticas_Default(){
				
					return null;
				
				}
				public String Caracteriticas_Comment(){
				
				    return "";
				
				}
				public String Caracteriticas_Pattern(){
				
					return "";
				
				}
				public String Caracteriticas_OriginalDbColumnName(){
				
					return "Caracteriticas_";
				
				}

				
			    public String Contraindicaciones_;

				public String getContraindicaciones_ () {
					return this.Contraindicaciones_;
				}

				public Boolean Contraindicaciones_IsNullable(){
				    return true;
				}
				public Boolean Contraindicaciones_IsKey(){
				    return false;
				}
				public Integer Contraindicaciones_Length(){
				    return 2000;
				}
				public Integer Contraindicaciones_Precision(){
				    return 0;
				}
				public String Contraindicaciones_Default(){
				
					return null;
				
				}
				public String Contraindicaciones_Comment(){
				
				    return "";
				
				}
				public String Contraindicaciones_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Contraindicaciones_OriginalDbColumnName(){
				
					return "Contraindicaciones_";
				
				}

				
			    public String Efectos_;

				public String getEfectos_ () {
					return this.Efectos_;
				}

				public Boolean Efectos_IsNullable(){
				    return true;
				}
				public Boolean Efectos_IsKey(){
				    return false;
				}
				public Integer Efectos_Length(){
				    return 2000;
				}
				public Integer Efectos_Precision(){
				    return 0;
				}
				public String Efectos_Default(){
				
					return null;
				
				}
				public String Efectos_Comment(){
				
				    return "";
				
				}
				public String Efectos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_OriginalDbColumnName(){
				
					return "Efectos_";
				
				}

				
			    public String Riesgos_;

				public String getRiesgos_ () {
					return this.Riesgos_;
				}

				public Boolean Riesgos_IsNullable(){
				    return true;
				}
				public Boolean Riesgos_IsKey(){
				    return false;
				}
				public Integer Riesgos_Length(){
				    return 2000;
				}
				public Integer Riesgos_Precision(){
				    return 0;
				}
				public String Riesgos_Default(){
				
					return null;
				
				}
				public String Riesgos_Comment(){
				
				    return "";
				
				}
				public String Riesgos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_OriginalDbColumnName(){
				
					return "Riesgos_";
				
				}

				
			    public String Dosis_;

				public String getDosis_ () {
					return this.Dosis_;
				}

				public Boolean Dosis_IsNullable(){
				    return true;
				}
				public Boolean Dosis_IsKey(){
				    return false;
				}
				public Integer Dosis_Length(){
				    return 500;
				}
				public Integer Dosis_Precision(){
				    return 0;
				}
				public String Dosis_Default(){
				
					return null;
				
				}
				public String Dosis_Comment(){
				
				    return "";
				
				}
				public String Dosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_OriginalDbColumnName(){
				
					return "Dosis_";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public String ViaAdmin_Id_;

				public String getViaAdmin_Id_ () {
					return this.ViaAdmin_Id_;
				}

				public Boolean ViaAdmin_Id_IsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_Id_IsKey(){
				    return false;
				}
				public Integer ViaAdmin_Id_Length(){
				    return null;
				}
				public Integer ViaAdmin_Id_Precision(){
				    return null;
				}
				public String ViaAdmin_Id_Default(){
				
					return null;
				
				}
				public String ViaAdmin_Id_Comment(){
				
				    return "";
				
				}
				public String ViaAdmin_Id_Pattern(){
				
					return "";
				
				}
				public String ViaAdmin_Id_OriginalDbColumnName(){
				
					return "ViaAdmin_Id_";
				
				}

				
			    public BigDecimal Forma_Id;

				public BigDecimal getForma_Id () {
					return this.Forma_Id;
				}

				public Boolean Forma_IdIsNullable(){
				    return true;
				}
				public Boolean Forma_IdIsKey(){
				    return false;
				}
				public Integer Forma_IdLength(){
				    return null;
				}
				public Integer Forma_IdPrecision(){
				    return null;
				}
				public String Forma_IdDefault(){
				
					return null;
				
				}
				public String Forma_IdComment(){
				
				    return "";
				
				}
				public String Forma_IdPattern(){
				
					return "";
				
				}
				public String Forma_IdOriginalDbColumnName(){
				
					return "Forma_Id";
				
				}

				
			    public String Forma_Id_;

				public String getForma_Id_ () {
					return this.Forma_Id_;
				}

				public Boolean Forma_Id_IsNullable(){
				    return true;
				}
				public Boolean Forma_Id_IsKey(){
				    return false;
				}
				public Integer Forma_Id_Length(){
				    return null;
				}
				public Integer Forma_Id_Precision(){
				    return null;
				}
				public String Forma_Id_Default(){
				
					return null;
				
				}
				public String Forma_Id_Comment(){
				
				    return "";
				
				}
				public String Forma_Id_Pattern(){
				
					return "";
				
				}
				public String Forma_Id_OriginalDbColumnName(){
				
					return "Forma_Id_";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal Formas_Farma_Id;

				public BigDecimal getFormas_Farma_Id () {
					return this.Formas_Farma_Id;
				}

				public Boolean Formas_Farma_IdIsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_IdIsKey(){
				    return false;
				}
				public Integer Formas_Farma_IdLength(){
				    return null;
				}
				public Integer Formas_Farma_IdPrecision(){
				    return null;
				}
				public String Formas_Farma_IdDefault(){
				
					return null;
				
				}
				public String Formas_Farma_IdComment(){
				
				    return "";
				
				}
				public String Formas_Farma_IdPattern(){
				
					return "";
				
				}
				public String Formas_Farma_IdOriginalDbColumnName(){
				
					return "Formas_Farma_Id";
				
				}

				
			    public String Formas_Farma_Id_;

				public String getFormas_Farma_Id_ () {
					return this.Formas_Farma_Id_;
				}

				public Boolean Formas_Farma_Id_IsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_Id_IsKey(){
				    return false;
				}
				public Integer Formas_Farma_Id_Length(){
				    return null;
				}
				public Integer Formas_Farma_Id_Precision(){
				    return null;
				}
				public String Formas_Farma_Id_Default(){
				
					return null;
				
				}
				public String Formas_Farma_Id_Comment(){
				
				    return "";
				
				}
				public String Formas_Farma_Id_Pattern(){
				
					return "";
				
				}
				public String Formas_Farma_Id_OriginalDbColumnName(){
				
					return "Formas_Farma_Id_";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public String UMedida_Id_;

				public String getUMedida_Id_ () {
					return this.UMedida_Id_;
				}

				public Boolean UMedida_Id_IsNullable(){
				    return true;
				}
				public Boolean UMedida_Id_IsKey(){
				    return false;
				}
				public Integer UMedida_Id_Length(){
				    return null;
				}
				public Integer UMedida_Id_Precision(){
				    return null;
				}
				public String UMedida_Id_Default(){
				
					return null;
				
				}
				public String UMedida_Id_Comment(){
				
				    return "";
				
				}
				public String UMedida_Id_Pattern(){
				
					return "";
				
				}
				public String UMedida_Id_OriginalDbColumnName(){
				
					return "UMedida_Id_";
				
				}

				
			    public Double Cant_UMedida;

				public Double getCant_UMedida () {
					return this.Cant_UMedida;
				}

				public Boolean Cant_UMedidaIsNullable(){
				    return true;
				}
				public Boolean Cant_UMedidaIsKey(){
				    return false;
				}
				public Integer Cant_UMedidaLength(){
				    return null;
				}
				public Integer Cant_UMedidaPrecision(){
				    return null;
				}
				public String Cant_UMedidaDefault(){
				
					return null;
				
				}
				public String Cant_UMedidaComment(){
				
				    return "";
				
				}
				public String Cant_UMedidaPattern(){
				
					return "";
				
				}
				public String Cant_UMedidaOriginalDbColumnName(){
				
					return "Cant_UMedida";
				
				}

				
			    public String Cant_UMedida_;

				public String getCant_UMedida_ () {
					return this.Cant_UMedida_;
				}

				public Boolean Cant_UMedida_IsNullable(){
				    return true;
				}
				public Boolean Cant_UMedida_IsKey(){
				    return false;
				}
				public Integer Cant_UMedida_Length(){
				    return null;
				}
				public Integer Cant_UMedida_Precision(){
				    return null;
				}
				public String Cant_UMedida_Default(){
				
					return null;
				
				}
				public String Cant_UMedida_Comment(){
				
				    return "";
				
				}
				public String Cant_UMedida_Pattern(){
				
					return "";
				
				}
				public String Cant_UMedida_OriginalDbColumnName(){
				
					return "Cant_UMedida_";
				
				}

				
			    public Integer Cant_Minima;

				public Integer getCant_Minima () {
					return this.Cant_Minima;
				}

				public Boolean Cant_MinimaIsNullable(){
				    return true;
				}
				public Boolean Cant_MinimaIsKey(){
				    return false;
				}
				public Integer Cant_MinimaLength(){
				    return null;
				}
				public Integer Cant_MinimaPrecision(){
				    return null;
				}
				public String Cant_MinimaDefault(){
				
					return null;
				
				}
				public String Cant_MinimaComment(){
				
				    return "";
				
				}
				public String Cant_MinimaPattern(){
				
					return "";
				
				}
				public String Cant_MinimaOriginalDbColumnName(){
				
					return "Cant_Minima";
				
				}

				
			    public String Cant_Minima_;

				public String getCant_Minima_ () {
					return this.Cant_Minima_;
				}

				public Boolean Cant_Minima_IsNullable(){
				    return true;
				}
				public Boolean Cant_Minima_IsKey(){
				    return false;
				}
				public Integer Cant_Minima_Length(){
				    return null;
				}
				public Integer Cant_Minima_Precision(){
				    return null;
				}
				public String Cant_Minima_Default(){
				
					return null;
				
				}
				public String Cant_Minima_Comment(){
				
				    return "";
				
				}
				public String Cant_Minima_Pattern(){
				
					return "";
				
				}
				public String Cant_Minima_OriginalDbColumnName(){
				
					return "Cant_Minima_";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public String Fabricante_Id_;

				public String getFabricante_Id_ () {
					return this.Fabricante_Id_;
				}

				public Boolean Fabricante_Id_IsNullable(){
				    return true;
				}
				public Boolean Fabricante_Id_IsKey(){
				    return false;
				}
				public Integer Fabricante_Id_Length(){
				    return null;
				}
				public Integer Fabricante_Id_Precision(){
				    return null;
				}
				public String Fabricante_Id_Default(){
				
					return null;
				
				}
				public String Fabricante_Id_Comment(){
				
				    return "";
				
				}
				public String Fabricante_Id_Pattern(){
				
					return "";
				
				}
				public String Fabricante_Id_OriginalDbColumnName(){
				
					return "Fabricante_Id_";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return null;
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				
			    public String Importador_Id_;

				public String getImportador_Id_ () {
					return this.Importador_Id_;
				}

				public Boolean Importador_Id_IsNullable(){
				    return true;
				}
				public Boolean Importador_Id_IsKey(){
				    return false;
				}
				public Integer Importador_Id_Length(){
				    return null;
				}
				public Integer Importador_Id_Precision(){
				    return null;
				}
				public String Importador_Id_Default(){
				
					return null;
				
				}
				public String Importador_Id_Comment(){
				
				    return "";
				
				}
				public String Importador_Id_Pattern(){
				
					return "";
				
				}
				public String Importador_Id_OriginalDbColumnName(){
				
					return "Importador_Id_";
				
				}

				
			    public BigDecimal usuarios_Id_;

				public BigDecimal getUsuarios_Id_ () {
					return this.usuarios_Id_;
				}

				public Boolean usuarios_Id_IsNullable(){
				    return true;
				}
				public Boolean usuarios_Id_IsKey(){
				    return false;
				}
				public Integer usuarios_Id_Length(){
				    return 10;
				}
				public Integer usuarios_Id_Precision(){
				    return 0;
				}
				public String usuarios_Id_Default(){
				
					return null;
				
				}
				public String usuarios_Id_Comment(){
				
				    return "";
				
				}
				public String usuarios_Id_Pattern(){
				
					return "";
				
				}
				public String usuarios_Id_OriginalDbColumnName(){
				
					return "usuarios_Id_";
				
				}

				
			    public BigDecimal uorg_Id_;

				public BigDecimal getUorg_Id_ () {
					return this.uorg_Id_;
				}

				public Boolean uorg_Id_IsNullable(){
				    return true;
				}
				public Boolean uorg_Id_IsKey(){
				    return false;
				}
				public Integer uorg_Id_Length(){
				    return 10;
				}
				public Integer uorg_Id_Precision(){
				    return 0;
				}
				public String uorg_Id_Default(){
				
					return null;
				
				}
				public String uorg_Id_Comment(){
				
				    return "";
				
				}
				public String uorg_Id_Pattern(){
				
					return "";
				
				}
				public String uorg_Id_OriginalDbColumnName(){
				
					return "uorg_Id_";
				
				}

				
			    public String Ins_Caract;

				public String getIns_Caract () {
					return this.Ins_Caract;
				}

				public Boolean Ins_CaractIsNullable(){
				    return true;
				}
				public Boolean Ins_CaractIsKey(){
				    return false;
				}
				public Integer Ins_CaractLength(){
				    return null;
				}
				public Integer Ins_CaractPrecision(){
				    return null;
				}
				public String Ins_CaractDefault(){
				
					return null;
				
				}
				public String Ins_CaractComment(){
				
				    return "";
				
				}
				public String Ins_CaractPattern(){
				
					return "";
				
				}
				public String Ins_CaractOriginalDbColumnName(){
				
					return "Ins_Caract";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public BigDecimal Id_;

				public BigDecimal getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Comercial_ = readString(dis);
					
					this.Presentacion_ = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteriticas_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
					this.ViaAdmin_Id_ = readString(dis);
					
						this.Forma_Id = (BigDecimal) dis.readObject();
					
					this.Forma_Id_ = readString(dis);
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id = (BigDecimal) dis.readObject();
					
					this.Formas_Farma_Id_ = readString(dis);
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
					this.UMedida_Id_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Cant_UMedida = null;
           				} else {
           			    	this.Cant_UMedida = dis.readDouble();
           				}
					
					this.Cant_UMedida_ = readString(dis);
					
						this.Cant_Minima = readInteger(dis);
					
					this.Cant_Minima_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
					this.Fabricante_Id_ = readString(dis);
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Importador_Id_ = readString(dis);
					
						this.usuarios_Id_ = (BigDecimal) dis.readObject();
					
						this.uorg_Id_ = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Comercial_ = readString(dis);
					
					this.Presentacion_ = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteriticas_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
					this.ViaAdmin_Id_ = readString(dis);
					
						this.Forma_Id = (BigDecimal) dis.readObject();
					
					this.Forma_Id_ = readString(dis);
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id = (BigDecimal) dis.readObject();
					
					this.Formas_Farma_Id_ = readString(dis);
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
					this.UMedida_Id_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Cant_UMedida = null;
           				} else {
           			    	this.Cant_UMedida = dis.readDouble();
           				}
					
					this.Cant_UMedida_ = readString(dis);
					
						this.Cant_Minima = readInteger(dis);
					
					this.Cant_Minima_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
					this.Fabricante_Id_ = readString(dis);
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Importador_Id_ = readString(dis);
					
						this.usuarios_Id_ = (BigDecimal) dis.readObject();
					
						this.uorg_Id_ = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Comercial_,dos);
					
					// String
				
						writeString(this.Presentacion_,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteriticas_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// String
				
						writeString(this.ViaAdmin_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Forma_Id);
					
					// String
				
						writeString(this.Forma_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Formas_Farma_Id);
					
					// String
				
						writeString(this.Formas_Farma_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// String
				
						writeString(this.UMedida_Id_,dos);
					
					// Double
				
						if(this.Cant_UMedida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Cant_UMedida);
		            	}
					
					// String
				
						writeString(this.Cant_UMedida_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Minima,dos);
					
					// String
				
						writeString(this.Cant_Minima_,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// String
				
						writeString(this.Fabricante_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Importador_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuarios_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorg_Id_);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Id_);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Comercial_,dos);
					
					// String
				
						writeString(this.Presentacion_,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteriticas_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// String
				
						writeString(this.ViaAdmin_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Forma_Id);
					
					// String
				
						writeString(this.Forma_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Formas_Farma_Id);
					
					// String
				
						writeString(this.Formas_Farma_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// String
				
						writeString(this.UMedida_Id_,dos);
					
					// Double
				
						if(this.Cant_UMedida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Cant_UMedida);
		            	}
					
					// String
				
						writeString(this.Cant_UMedida_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Minima,dos);
					
					// String
				
						writeString(this.Cant_Minima_,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// String
				
						writeString(this.Fabricante_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Importador_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuarios_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorg_Id_);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Id_);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",Estado_="+Estado_);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",Cod_Barras_="+Cod_Barras_);
		sb.append(",Comercial_="+Comercial_);
		sb.append(",Presentacion_="+Presentacion_);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis_="+Unidosis_);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",Reg_Invima_="+Reg_Invima_);
		sb.append(",F_Expedicion_="+F_Expedicion_);
		sb.append(",F_Vencimiento_="+F_Vencimiento_);
		sb.append(",F_Activo_Cum_="+F_Activo_Cum_);
		sb.append(",F_Inactivo_Cum_="+F_Inactivo_Cum_);
		sb.append(",Expediente_="+Expediente_);
		sb.append(",Consecutivo_="+Consecutivo_);
		sb.append(",Cum="+Cum);
		sb.append(",Origen_="+Origen_);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Caracteriticas_="+Caracteriticas_);
		sb.append(",Contraindicaciones_="+Contraindicaciones_);
		sb.append(",Efectos_="+Efectos_);
		sb.append(",Riesgos_="+Riesgos_);
		sb.append(",Dosis_="+Dosis_);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",ViaAdmin_Id_="+ViaAdmin_Id_);
		sb.append(",Forma_Id="+String.valueOf(Forma_Id));
		sb.append(",Forma_Id_="+Forma_Id_);
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",Formas_Farma_Id="+String.valueOf(Formas_Farma_Id));
		sb.append(",Formas_Farma_Id_="+Formas_Farma_Id_);
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",UMedida_Id_="+UMedida_Id_);
		sb.append(",Cant_UMedida="+String.valueOf(Cant_UMedida));
		sb.append(",Cant_UMedida_="+Cant_UMedida_);
		sb.append(",Cant_Minima="+String.valueOf(Cant_Minima));
		sb.append(",Cant_Minima_="+Cant_Minima_);
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Fabricante_Id_="+Fabricante_Id_);
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
		sb.append(",Importador_Id_="+Importador_Id_);
		sb.append(",usuarios_Id_="+String.valueOf(usuarios_Id_));
		sb.append(",uorg_Id_="+String.valueOf(uorg_Id_));
		sb.append(",Ins_Caract="+Ins_Caract);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",Id_="+String.valueOf(Id_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class next_7Struct implements routines.system.IPersistableRow<next_7Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String Cod_Barras_;

				public String getCod_Barras_ () {
					return this.Cod_Barras_;
				}

				public Boolean Cod_Barras_IsNullable(){
				    return true;
				}
				public Boolean Cod_Barras_IsKey(){
				    return false;
				}
				public Integer Cod_Barras_Length(){
				    return 20;
				}
				public Integer Cod_Barras_Precision(){
				    return 0;
				}
				public String Cod_Barras_Default(){
				
					return null;
				
				}
				public String Cod_Barras_Comment(){
				
				    return "";
				
				}
				public String Cod_Barras_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Cod_Barras_OriginalDbColumnName(){
				
					return "Cod_Barras_";
				
				}

				
			    public String Comercial_;

				public String getComercial_ () {
					return this.Comercial_;
				}

				public Boolean Comercial_IsNullable(){
				    return true;
				}
				public Boolean Comercial_IsKey(){
				    return false;
				}
				public Integer Comercial_Length(){
				    return 150;
				}
				public Integer Comercial_Precision(){
				    return 0;
				}
				public String Comercial_Default(){
				
					return null;
				
				}
				public String Comercial_Comment(){
				
				    return "";
				
				}
				public String Comercial_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Comercial_OriginalDbColumnName(){
				
					return "Comercial_";
				
				}

				
			    public String Presentacion_;

				public String getPresentacion_ () {
					return this.Presentacion_;
				}

				public Boolean Presentacion_IsNullable(){
				    return true;
				}
				public Boolean Presentacion_IsKey(){
				    return false;
				}
				public Integer Presentacion_Length(){
				    return 500;
				}
				public Integer Presentacion_Precision(){
				    return 0;
				}
				public String Presentacion_Default(){
				
					return null;
				
				}
				public String Presentacion_Comment(){
				
				    return "";
				
				}
				public String Presentacion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Presentacion_OriginalDbColumnName(){
				
					return "Presentacion_";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis_;

				public String getUnidosis_ () {
					return this.Unidosis_;
				}

				public Boolean Unidosis_IsNullable(){
				    return true;
				}
				public Boolean Unidosis_IsKey(){
				    return false;
				}
				public Integer Unidosis_Length(){
				    return 2;
				}
				public Integer Unidosis_Precision(){
				    return 0;
				}
				public String Unidosis_Default(){
				
					return null;
				
				}
				public String Unidosis_Comment(){
				
				    return "";
				
				}
				public String Unidosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Unidosis_OriginalDbColumnName(){
				
					return "Unidosis_";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String Reg_Invima_;

				public String getReg_Invima_ () {
					return this.Reg_Invima_;
				}

				public Boolean Reg_Invima_IsNullable(){
				    return true;
				}
				public Boolean Reg_Invima_IsKey(){
				    return false;
				}
				public Integer Reg_Invima_Length(){
				    return 50;
				}
				public Integer Reg_Invima_Precision(){
				    return 0;
				}
				public String Reg_Invima_Default(){
				
					return null;
				
				}
				public String Reg_Invima_Comment(){
				
				    return "";
				
				}
				public String Reg_Invima_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Reg_Invima_OriginalDbColumnName(){
				
					return "Reg_Invima_";
				
				}

				
			    public String F_Expedicion_;

				public String getF_Expedicion_ () {
					return this.F_Expedicion_;
				}

				public Boolean F_Expedicion_IsNullable(){
				    return true;
				}
				public Boolean F_Expedicion_IsKey(){
				    return false;
				}
				public Integer F_Expedicion_Length(){
				    return 15;
				}
				public Integer F_Expedicion_Precision(){
				    return 0;
				}
				public String F_Expedicion_Default(){
				
					return null;
				
				}
				public String F_Expedicion_Comment(){
				
				    return "";
				
				}
				public String F_Expedicion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Expedicion_OriginalDbColumnName(){
				
					return "F_Expedicion_";
				
				}

				
			    public String F_Vencimiento_;

				public String getF_Vencimiento_ () {
					return this.F_Vencimiento_;
				}

				public Boolean F_Vencimiento_IsNullable(){
				    return true;
				}
				public Boolean F_Vencimiento_IsKey(){
				    return false;
				}
				public Integer F_Vencimiento_Length(){
				    return 15;
				}
				public Integer F_Vencimiento_Precision(){
				    return 0;
				}
				public String F_Vencimiento_Default(){
				
					return null;
				
				}
				public String F_Vencimiento_Comment(){
				
				    return "";
				
				}
				public String F_Vencimiento_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Vencimiento_OriginalDbColumnName(){
				
					return "F_Vencimiento_";
				
				}

				
			    public String F_Activo_Cum_;

				public String getF_Activo_Cum_ () {
					return this.F_Activo_Cum_;
				}

				public Boolean F_Activo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Activo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Activo_Cum_Length(){
				    return 15;
				}
				public Integer F_Activo_Cum_Precision(){
				    return 0;
				}
				public String F_Activo_Cum_Default(){
				
					return null;
				
				}
				public String F_Activo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Activo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Activo_Cum_OriginalDbColumnName(){
				
					return "F_Activo_Cum_";
				
				}

				
			    public String F_Inactivo_Cum_;

				public String getF_Inactivo_Cum_ () {
					return this.F_Inactivo_Cum_;
				}

				public Boolean F_Inactivo_Cum_IsNullable(){
				    return true;
				}
				public Boolean F_Inactivo_Cum_IsKey(){
				    return false;
				}
				public Integer F_Inactivo_Cum_Length(){
				    return 15;
				}
				public Integer F_Inactivo_Cum_Precision(){
				    return 0;
				}
				public String F_Inactivo_Cum_Default(){
				
					return null;
				
				}
				public String F_Inactivo_Cum_Comment(){
				
				    return "";
				
				}
				public String F_Inactivo_Cum_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String F_Inactivo_Cum_OriginalDbColumnName(){
				
					return "F_Inactivo_Cum_";
				
				}

				
			    public String Expediente_;

				public String getExpediente_ () {
					return this.Expediente_;
				}

				public Boolean Expediente_IsNullable(){
				    return true;
				}
				public Boolean Expediente_IsKey(){
				    return false;
				}
				public Integer Expediente_Length(){
				    return 25;
				}
				public Integer Expediente_Precision(){
				    return 0;
				}
				public String Expediente_Default(){
				
					return null;
				
				}
				public String Expediente_Comment(){
				
				    return "";
				
				}
				public String Expediente_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Expediente_OriginalDbColumnName(){
				
					return "Expediente_";
				
				}

				
			    public String Consecutivo_;

				public String getConsecutivo_ () {
					return this.Consecutivo_;
				}

				public Boolean Consecutivo_IsNullable(){
				    return true;
				}
				public Boolean Consecutivo_IsKey(){
				    return false;
				}
				public Integer Consecutivo_Length(){
				    return 10;
				}
				public Integer Consecutivo_Precision(){
				    return 0;
				}
				public String Consecutivo_Default(){
				
					return null;
				
				}
				public String Consecutivo_Comment(){
				
				    return "";
				
				}
				public String Consecutivo_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Consecutivo_OriginalDbColumnName(){
				
					return "Consecutivo_";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen_;

				public String getOrigen_ () {
					return this.Origen_;
				}

				public Boolean Origen_IsNullable(){
				    return true;
				}
				public Boolean Origen_IsKey(){
				    return false;
				}
				public Integer Origen_Length(){
				    return 500;
				}
				public Integer Origen_Precision(){
				    return 0;
				}
				public String Origen_Default(){
				
					return null;
				
				}
				public String Origen_Comment(){
				
				    return "";
				
				}
				public String Origen_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Origen_OriginalDbColumnName(){
				
					return "Origen_";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Caracteriticas_;

				public String getCaracteriticas_ () {
					return this.Caracteriticas_;
				}

				public Boolean Caracteriticas_IsNullable(){
				    return true;
				}
				public Boolean Caracteriticas_IsKey(){
				    return false;
				}
				public Integer Caracteriticas_Length(){
				    return null;
				}
				public Integer Caracteriticas_Precision(){
				    return null;
				}
				public String Caracteriticas_Default(){
				
					return null;
				
				}
				public String Caracteriticas_Comment(){
				
				    return "";
				
				}
				public String Caracteriticas_Pattern(){
				
					return "";
				
				}
				public String Caracteriticas_OriginalDbColumnName(){
				
					return "Caracteriticas_";
				
				}

				
			    public String Contraindicaciones_;

				public String getContraindicaciones_ () {
					return this.Contraindicaciones_;
				}

				public Boolean Contraindicaciones_IsNullable(){
				    return true;
				}
				public Boolean Contraindicaciones_IsKey(){
				    return false;
				}
				public Integer Contraindicaciones_Length(){
				    return 2000;
				}
				public Integer Contraindicaciones_Precision(){
				    return 0;
				}
				public String Contraindicaciones_Default(){
				
					return null;
				
				}
				public String Contraindicaciones_Comment(){
				
				    return "";
				
				}
				public String Contraindicaciones_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Contraindicaciones_OriginalDbColumnName(){
				
					return "Contraindicaciones_";
				
				}

				
			    public String Efectos_;

				public String getEfectos_ () {
					return this.Efectos_;
				}

				public Boolean Efectos_IsNullable(){
				    return true;
				}
				public Boolean Efectos_IsKey(){
				    return false;
				}
				public Integer Efectos_Length(){
				    return 2000;
				}
				public Integer Efectos_Precision(){
				    return 0;
				}
				public String Efectos_Default(){
				
					return null;
				
				}
				public String Efectos_Comment(){
				
				    return "";
				
				}
				public String Efectos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_OriginalDbColumnName(){
				
					return "Efectos_";
				
				}

				
			    public String Riesgos_;

				public String getRiesgos_ () {
					return this.Riesgos_;
				}

				public Boolean Riesgos_IsNullable(){
				    return true;
				}
				public Boolean Riesgos_IsKey(){
				    return false;
				}
				public Integer Riesgos_Length(){
				    return 2000;
				}
				public Integer Riesgos_Precision(){
				    return 0;
				}
				public String Riesgos_Default(){
				
					return null;
				
				}
				public String Riesgos_Comment(){
				
				    return "";
				
				}
				public String Riesgos_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_OriginalDbColumnName(){
				
					return "Riesgos_";
				
				}

				
			    public String Dosis_;

				public String getDosis_ () {
					return this.Dosis_;
				}

				public Boolean Dosis_IsNullable(){
				    return true;
				}
				public Boolean Dosis_IsKey(){
				    return false;
				}
				public Integer Dosis_Length(){
				    return 500;
				}
				public Integer Dosis_Precision(){
				    return 0;
				}
				public String Dosis_Default(){
				
					return null;
				
				}
				public String Dosis_Comment(){
				
				    return "";
				
				}
				public String Dosis_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_OriginalDbColumnName(){
				
					return "Dosis_";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return null;
				}
				public Integer usuariosIdPrecision(){
				    return null;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return null;
				}
				public Integer uorgIdPrecision(){
				    return null;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public String ViaAdmin_Id_;

				public String getViaAdmin_Id_ () {
					return this.ViaAdmin_Id_;
				}

				public Boolean ViaAdmin_Id_IsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_Id_IsKey(){
				    return false;
				}
				public Integer ViaAdmin_Id_Length(){
				    return null;
				}
				public Integer ViaAdmin_Id_Precision(){
				    return null;
				}
				public String ViaAdmin_Id_Default(){
				
					return null;
				
				}
				public String ViaAdmin_Id_Comment(){
				
				    return "";
				
				}
				public String ViaAdmin_Id_Pattern(){
				
					return "";
				
				}
				public String ViaAdmin_Id_OriginalDbColumnName(){
				
					return "ViaAdmin_Id_";
				
				}

				
			    public BigDecimal Forma_Id;

				public BigDecimal getForma_Id () {
					return this.Forma_Id;
				}

				public Boolean Forma_IdIsNullable(){
				    return true;
				}
				public Boolean Forma_IdIsKey(){
				    return false;
				}
				public Integer Forma_IdLength(){
				    return null;
				}
				public Integer Forma_IdPrecision(){
				    return null;
				}
				public String Forma_IdDefault(){
				
					return null;
				
				}
				public String Forma_IdComment(){
				
				    return "";
				
				}
				public String Forma_IdPattern(){
				
					return "";
				
				}
				public String Forma_IdOriginalDbColumnName(){
				
					return "Forma_Id";
				
				}

				
			    public String Forma_Id_;

				public String getForma_Id_ () {
					return this.Forma_Id_;
				}

				public Boolean Forma_Id_IsNullable(){
				    return true;
				}
				public Boolean Forma_Id_IsKey(){
				    return false;
				}
				public Integer Forma_Id_Length(){
				    return null;
				}
				public Integer Forma_Id_Precision(){
				    return null;
				}
				public String Forma_Id_Default(){
				
					return null;
				
				}
				public String Forma_Id_Comment(){
				
				    return "";
				
				}
				public String Forma_Id_Pattern(){
				
					return "";
				
				}
				public String Forma_Id_OriginalDbColumnName(){
				
					return "Forma_Id_";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal Formas_Farma_Id;

				public BigDecimal getFormas_Farma_Id () {
					return this.Formas_Farma_Id;
				}

				public Boolean Formas_Farma_IdIsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_IdIsKey(){
				    return false;
				}
				public Integer Formas_Farma_IdLength(){
				    return null;
				}
				public Integer Formas_Farma_IdPrecision(){
				    return null;
				}
				public String Formas_Farma_IdDefault(){
				
					return null;
				
				}
				public String Formas_Farma_IdComment(){
				
				    return "";
				
				}
				public String Formas_Farma_IdPattern(){
				
					return "";
				
				}
				public String Formas_Farma_IdOriginalDbColumnName(){
				
					return "Formas_Farma_Id";
				
				}

				
			    public String Formas_Farma_Id_;

				public String getFormas_Farma_Id_ () {
					return this.Formas_Farma_Id_;
				}

				public Boolean Formas_Farma_Id_IsNullable(){
				    return true;
				}
				public Boolean Formas_Farma_Id_IsKey(){
				    return false;
				}
				public Integer Formas_Farma_Id_Length(){
				    return null;
				}
				public Integer Formas_Farma_Id_Precision(){
				    return null;
				}
				public String Formas_Farma_Id_Default(){
				
					return null;
				
				}
				public String Formas_Farma_Id_Comment(){
				
				    return "";
				
				}
				public String Formas_Farma_Id_Pattern(){
				
					return "";
				
				}
				public String Formas_Farma_Id_OriginalDbColumnName(){
				
					return "Formas_Farma_Id_";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public String UMedida_Id_;

				public String getUMedida_Id_ () {
					return this.UMedida_Id_;
				}

				public Boolean UMedida_Id_IsNullable(){
				    return true;
				}
				public Boolean UMedida_Id_IsKey(){
				    return false;
				}
				public Integer UMedida_Id_Length(){
				    return null;
				}
				public Integer UMedida_Id_Precision(){
				    return null;
				}
				public String UMedida_Id_Default(){
				
					return null;
				
				}
				public String UMedida_Id_Comment(){
				
				    return "";
				
				}
				public String UMedida_Id_Pattern(){
				
					return "";
				
				}
				public String UMedida_Id_OriginalDbColumnName(){
				
					return "UMedida_Id_";
				
				}

				
			    public Double Cant_UMedida;

				public Double getCant_UMedida () {
					return this.Cant_UMedida;
				}

				public Boolean Cant_UMedidaIsNullable(){
				    return true;
				}
				public Boolean Cant_UMedidaIsKey(){
				    return false;
				}
				public Integer Cant_UMedidaLength(){
				    return null;
				}
				public Integer Cant_UMedidaPrecision(){
				    return null;
				}
				public String Cant_UMedidaDefault(){
				
					return null;
				
				}
				public String Cant_UMedidaComment(){
				
				    return "";
				
				}
				public String Cant_UMedidaPattern(){
				
					return "";
				
				}
				public String Cant_UMedidaOriginalDbColumnName(){
				
					return "Cant_UMedida";
				
				}

				
			    public String Cant_UMedida_;

				public String getCant_UMedida_ () {
					return this.Cant_UMedida_;
				}

				public Boolean Cant_UMedida_IsNullable(){
				    return true;
				}
				public Boolean Cant_UMedida_IsKey(){
				    return false;
				}
				public Integer Cant_UMedida_Length(){
				    return null;
				}
				public Integer Cant_UMedida_Precision(){
				    return null;
				}
				public String Cant_UMedida_Default(){
				
					return null;
				
				}
				public String Cant_UMedida_Comment(){
				
				    return "";
				
				}
				public String Cant_UMedida_Pattern(){
				
					return "";
				
				}
				public String Cant_UMedida_OriginalDbColumnName(){
				
					return "Cant_UMedida_";
				
				}

				
			    public Integer Cant_Minima;

				public Integer getCant_Minima () {
					return this.Cant_Minima;
				}

				public Boolean Cant_MinimaIsNullable(){
				    return true;
				}
				public Boolean Cant_MinimaIsKey(){
				    return false;
				}
				public Integer Cant_MinimaLength(){
				    return null;
				}
				public Integer Cant_MinimaPrecision(){
				    return null;
				}
				public String Cant_MinimaDefault(){
				
					return null;
				
				}
				public String Cant_MinimaComment(){
				
				    return "";
				
				}
				public String Cant_MinimaPattern(){
				
					return "";
				
				}
				public String Cant_MinimaOriginalDbColumnName(){
				
					return "Cant_Minima";
				
				}

				
			    public String Cant_Minima_;

				public String getCant_Minima_ () {
					return this.Cant_Minima_;
				}

				public Boolean Cant_Minima_IsNullable(){
				    return true;
				}
				public Boolean Cant_Minima_IsKey(){
				    return false;
				}
				public Integer Cant_Minima_Length(){
				    return null;
				}
				public Integer Cant_Minima_Precision(){
				    return null;
				}
				public String Cant_Minima_Default(){
				
					return null;
				
				}
				public String Cant_Minima_Comment(){
				
				    return "";
				
				}
				public String Cant_Minima_Pattern(){
				
					return "";
				
				}
				public String Cant_Minima_OriginalDbColumnName(){
				
					return "Cant_Minima_";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public String Fabricante_Id_;

				public String getFabricante_Id_ () {
					return this.Fabricante_Id_;
				}

				public Boolean Fabricante_Id_IsNullable(){
				    return true;
				}
				public Boolean Fabricante_Id_IsKey(){
				    return false;
				}
				public Integer Fabricante_Id_Length(){
				    return null;
				}
				public Integer Fabricante_Id_Precision(){
				    return null;
				}
				public String Fabricante_Id_Default(){
				
					return null;
				
				}
				public String Fabricante_Id_Comment(){
				
				    return "";
				
				}
				public String Fabricante_Id_Pattern(){
				
					return "";
				
				}
				public String Fabricante_Id_OriginalDbColumnName(){
				
					return "Fabricante_Id_";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return null;
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				
			    public String Importador_Id_;

				public String getImportador_Id_ () {
					return this.Importador_Id_;
				}

				public Boolean Importador_Id_IsNullable(){
				    return true;
				}
				public Boolean Importador_Id_IsKey(){
				    return false;
				}
				public Integer Importador_Id_Length(){
				    return null;
				}
				public Integer Importador_Id_Precision(){
				    return null;
				}
				public String Importador_Id_Default(){
				
					return null;
				
				}
				public String Importador_Id_Comment(){
				
				    return "";
				
				}
				public String Importador_Id_Pattern(){
				
					return "";
				
				}
				public String Importador_Id_OriginalDbColumnName(){
				
					return "Importador_Id_";
				
				}

				
			    public BigDecimal usuarios_Id_;

				public BigDecimal getUsuarios_Id_ () {
					return this.usuarios_Id_;
				}

				public Boolean usuarios_Id_IsNullable(){
				    return true;
				}
				public Boolean usuarios_Id_IsKey(){
				    return false;
				}
				public Integer usuarios_Id_Length(){
				    return 10;
				}
				public Integer usuarios_Id_Precision(){
				    return 0;
				}
				public String usuarios_Id_Default(){
				
					return null;
				
				}
				public String usuarios_Id_Comment(){
				
				    return "";
				
				}
				public String usuarios_Id_Pattern(){
				
					return "";
				
				}
				public String usuarios_Id_OriginalDbColumnName(){
				
					return "usuarios_Id_";
				
				}

				
			    public BigDecimal uorg_Id_;

				public BigDecimal getUorg_Id_ () {
					return this.uorg_Id_;
				}

				public Boolean uorg_Id_IsNullable(){
				    return true;
				}
				public Boolean uorg_Id_IsKey(){
				    return false;
				}
				public Integer uorg_Id_Length(){
				    return 10;
				}
				public Integer uorg_Id_Precision(){
				    return 0;
				}
				public String uorg_Id_Default(){
				
					return null;
				
				}
				public String uorg_Id_Comment(){
				
				    return "";
				
				}
				public String uorg_Id_Pattern(){
				
					return "";
				
				}
				public String uorg_Id_OriginalDbColumnName(){
				
					return "uorg_Id_";
				
				}

				
			    public String Ins_Caract;

				public String getIns_Caract () {
					return this.Ins_Caract;
				}

				public Boolean Ins_CaractIsNullable(){
				    return true;
				}
				public Boolean Ins_CaractIsKey(){
				    return false;
				}
				public Integer Ins_CaractLength(){
				    return null;
				}
				public Integer Ins_CaractPrecision(){
				    return null;
				}
				public String Ins_CaractDefault(){
				
					return null;
				
				}
				public String Ins_CaractComment(){
				
				    return "";
				
				}
				public String Ins_CaractPattern(){
				
					return "";
				
				}
				public String Ins_CaractOriginalDbColumnName(){
				
					return "Ins_Caract";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public Integer Cod_Barras_Duplicidad_;

				public Integer getCod_Barras_Duplicidad_ () {
					return this.Cod_Barras_Duplicidad_;
				}

				public Boolean Cod_Barras_Duplicidad_IsNullable(){
				    return true;
				}
				public Boolean Cod_Barras_Duplicidad_IsKey(){
				    return false;
				}
				public Integer Cod_Barras_Duplicidad_Length(){
				    return null;
				}
				public Integer Cod_Barras_Duplicidad_Precision(){
				    return null;
				}
				public String Cod_Barras_Duplicidad_Default(){
				
					return null;
				
				}
				public String Cod_Barras_Duplicidad_Comment(){
				
				    return "";
				
				}
				public String Cod_Barras_Duplicidad_Pattern(){
				
					return "";
				
				}
				public String Cod_Barras_Duplicidad_OriginalDbColumnName(){
				
					return "Cod_Barras_Duplicidad_";
				
				}

				
			    public BigDecimal Id_;

				public BigDecimal getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Comercial_ = readString(dis);
					
					this.Presentacion_ = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteriticas_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
					this.ViaAdmin_Id_ = readString(dis);
					
						this.Forma_Id = (BigDecimal) dis.readObject();
					
					this.Forma_Id_ = readString(dis);
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id = (BigDecimal) dis.readObject();
					
					this.Formas_Farma_Id_ = readString(dis);
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
					this.UMedida_Id_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Cant_UMedida = null;
           				} else {
           			    	this.Cant_UMedida = dis.readDouble();
           				}
					
					this.Cant_UMedida_ = readString(dis);
					
						this.Cant_Minima = readInteger(dis);
					
					this.Cant_Minima_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
					this.Fabricante_Id_ = readString(dis);
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Importador_Id_ = readString(dis);
					
						this.usuarios_Id_ = (BigDecimal) dis.readObject();
					
						this.uorg_Id_ = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Cod_Barras_Duplicidad_ = readInteger(dis);
					
						this.Id_ = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.Cod_Barras_ = readString(dis);
					
					this.Comercial_ = readString(dis);
					
					this.Presentacion_ = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis_ = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.Reg_Invima_ = readString(dis);
					
					this.F_Expedicion_ = readString(dis);
					
					this.F_Vencimiento_ = readString(dis);
					
					this.F_Activo_Cum_ = readString(dis);
					
					this.F_Inactivo_Cum_ = readString(dis);
					
					this.Expediente_ = readString(dis);
					
					this.Consecutivo_ = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen_ = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteriticas_ = readString(dis);
					
					this.Contraindicaciones_ = readString(dis);
					
					this.Efectos_ = readString(dis);
					
					this.Riesgos_ = readString(dis);
					
					this.Dosis_ = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
					this.ViaAdmin_Id_ = readString(dis);
					
						this.Forma_Id = (BigDecimal) dis.readObject();
					
					this.Forma_Id_ = readString(dis);
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.Formas_Farma_Id = (BigDecimal) dis.readObject();
					
					this.Formas_Farma_Id_ = readString(dis);
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
					this.UMedida_Id_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Cant_UMedida = null;
           				} else {
           			    	this.Cant_UMedida = dis.readDouble();
           				}
					
					this.Cant_UMedida_ = readString(dis);
					
						this.Cant_Minima = readInteger(dis);
					
					this.Cant_Minima_ = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
					this.Fabricante_Id_ = readString(dis);
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Importador_Id_ = readString(dis);
					
						this.usuarios_Id_ = (BigDecimal) dis.readObject();
					
						this.uorg_Id_ = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Cod_Barras_Duplicidad_ = readInteger(dis);
					
						this.Id_ = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Comercial_,dos);
					
					// String
				
						writeString(this.Presentacion_,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteriticas_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// String
				
						writeString(this.ViaAdmin_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Forma_Id);
					
					// String
				
						writeString(this.Forma_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Formas_Farma_Id);
					
					// String
				
						writeString(this.Formas_Farma_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// String
				
						writeString(this.UMedida_Id_,dos);
					
					// Double
				
						if(this.Cant_UMedida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Cant_UMedida);
		            	}
					
					// String
				
						writeString(this.Cant_UMedida_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Minima,dos);
					
					// String
				
						writeString(this.Cant_Minima_,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// String
				
						writeString(this.Fabricante_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Importador_Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuarios_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorg_Id_);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// Integer
				
						writeInteger(this.Cod_Barras_Duplicidad_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Id_);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.Cod_Barras_,dos);
					
					// String
				
						writeString(this.Comercial_,dos);
					
					// String
				
						writeString(this.Presentacion_,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis_,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.Reg_Invima_,dos);
					
					// String
				
						writeString(this.F_Expedicion_,dos);
					
					// String
				
						writeString(this.F_Vencimiento_,dos);
					
					// String
				
						writeString(this.F_Activo_Cum_,dos);
					
					// String
				
						writeString(this.F_Inactivo_Cum_,dos);
					
					// String
				
						writeString(this.Expediente_,dos);
					
					// String
				
						writeString(this.Consecutivo_,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen_,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteriticas_,dos);
					
					// String
				
						writeString(this.Contraindicaciones_,dos);
					
					// String
				
						writeString(this.Efectos_,dos);
					
					// String
				
						writeString(this.Riesgos_,dos);
					
					// String
				
						writeString(this.Dosis_,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// String
				
						writeString(this.ViaAdmin_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Forma_Id);
					
					// String
				
						writeString(this.Forma_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Formas_Farma_Id);
					
					// String
				
						writeString(this.Formas_Farma_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// String
				
						writeString(this.UMedida_Id_,dos);
					
					// Double
				
						if(this.Cant_UMedida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Cant_UMedida);
		            	}
					
					// String
				
						writeString(this.Cant_UMedida_,dos);
					
					// Integer
				
						writeInteger(this.Cant_Minima,dos);
					
					// String
				
						writeString(this.Cant_Minima_,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// String
				
						writeString(this.Fabricante_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Importador_Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuarios_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorg_Id_);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// Integer
				
						writeInteger(this.Cod_Barras_Duplicidad_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Id_);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",Estado_="+Estado_);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",Cod_Barras_="+Cod_Barras_);
		sb.append(",Comercial_="+Comercial_);
		sb.append(",Presentacion_="+Presentacion_);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis_="+Unidosis_);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",Reg_Invima_="+Reg_Invima_);
		sb.append(",F_Expedicion_="+F_Expedicion_);
		sb.append(",F_Vencimiento_="+F_Vencimiento_);
		sb.append(",F_Activo_Cum_="+F_Activo_Cum_);
		sb.append(",F_Inactivo_Cum_="+F_Inactivo_Cum_);
		sb.append(",Expediente_="+Expediente_);
		sb.append(",Consecutivo_="+Consecutivo_);
		sb.append(",Cum="+Cum);
		sb.append(",Origen_="+Origen_);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Caracteriticas_="+Caracteriticas_);
		sb.append(",Contraindicaciones_="+Contraindicaciones_);
		sb.append(",Efectos_="+Efectos_);
		sb.append(",Riesgos_="+Riesgos_);
		sb.append(",Dosis_="+Dosis_);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",ViaAdmin_Id_="+ViaAdmin_Id_);
		sb.append(",Forma_Id="+String.valueOf(Forma_Id));
		sb.append(",Forma_Id_="+Forma_Id_);
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",Formas_Farma_Id="+String.valueOf(Formas_Farma_Id));
		sb.append(",Formas_Farma_Id_="+Formas_Farma_Id_);
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",UMedida_Id_="+UMedida_Id_);
		sb.append(",Cant_UMedida="+String.valueOf(Cant_UMedida));
		sb.append(",Cant_UMedida_="+Cant_UMedida_);
		sb.append(",Cant_Minima="+String.valueOf(Cant_Minima));
		sb.append(",Cant_Minima_="+Cant_Minima_);
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Fabricante_Id_="+Fabricante_Id_);
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
		sb.append(",Importador_Id_="+Importador_Id_);
		sb.append(",usuarios_Id_="+String.valueOf(usuarios_Id_));
		sb.append(",uorg_Id_="+String.valueOf(uorg_Id_));
		sb.append(",Ins_Caract="+Ins_Caract);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",Cod_Barras_Duplicidad_="+String.valueOf(Cod_Barras_Duplicidad_));
		sb.append(",Id_="+String.valueOf(Id_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(next_7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row30Struct implements routines.system.IPersistableRow<row30Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Caracteristicas_Ids;

				public String getCaracteristicas_Ids () {
					return this.Caracteristicas_Ids;
				}

				public Boolean Caracteristicas_IdsIsNullable(){
				    return true;
				}
				public Boolean Caracteristicas_IdsIsKey(){
				    return false;
				}
				public Integer Caracteristicas_IdsLength(){
				    return null;
				}
				public Integer Caracteristicas_IdsPrecision(){
				    return null;
				}
				public String Caracteristicas_IdsDefault(){
				
					return null;
				
				}
				public String Caracteristicas_IdsComment(){
				
				    return "";
				
				}
				public String Caracteristicas_IdsPattern(){
				
					return "";
				
				}
				public String Caracteristicas_IdsOriginalDbColumnName(){
				
					return "Caracteristicas_Ids";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public BigDecimal TFFarmaceutica_Id;

				public BigDecimal getTFFarmaceutica_Id () {
					return this.TFFarmaceutica_Id;
				}

				public Boolean TFFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean TFFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer TFFarmaceutica_IdLength(){
				    return null;
				}
				public Integer TFFarmaceutica_IdPrecision(){
				    return null;
				}
				public String TFFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String TFFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String TFFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String TFFarmaceutica_IdOriginalDbColumnName(){
				
					return "TFFarmaceutica_Id";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal FFarmaceutica_Id;

				public BigDecimal getFFarmaceutica_Id () {
					return this.FFarmaceutica_Id;
				}

				public Boolean FFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean FFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer FFarmaceutica_IdLength(){
				    return null;
				}
				public Integer FFarmaceutica_IdPrecision(){
				    return null;
				}
				public String FFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String FFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String FFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String FFarmaceutica_IdOriginalDbColumnName(){
				
					return "FFarmaceutica_Id";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public Double CantUMedida_Int;

				public Double getCantUMedida_Int () {
					return this.CantUMedida_Int;
				}

				public Boolean CantUMedida_IntIsNullable(){
				    return true;
				}
				public Boolean CantUMedida_IntIsKey(){
				    return false;
				}
				public Integer CantUMedida_IntLength(){
				    return null;
				}
				public Integer CantUMedida_IntPrecision(){
				    return null;
				}
				public String CantUMedida_IntDefault(){
				
					return null;
				
				}
				public String CantUMedida_IntComment(){
				
				    return "";
				
				}
				public String CantUMedida_IntPattern(){
				
					return "";
				
				}
				public String CantUMedida_IntOriginalDbColumnName(){
				
					return "CantUMedida_Int";
				
				}

				
			    public Integer CantMinima_Int;

				public Integer getCantMinima_Int () {
					return this.CantMinima_Int;
				}

				public Boolean CantMinima_IntIsNullable(){
				    return true;
				}
				public Boolean CantMinima_IntIsKey(){
				    return false;
				}
				public Integer CantMinima_IntLength(){
				    return null;
				}
				public Integer CantMinima_IntPrecision(){
				    return null;
				}
				public String CantMinima_IntDefault(){
				
					return null;
				
				}
				public String CantMinima_IntComment(){
				
				    return "";
				
				}
				public String CantMinima_IntPattern(){
				
					return "";
				
				}
				public String CantMinima_IntOriginalDbColumnName(){
				
					return "CantMinima_Int";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return null;
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				
			    public String Ins_Caract;

				public String getIns_Caract () {
					return this.Ins_Caract;
				}

				public Boolean Ins_CaractIsNullable(){
				    return true;
				}
				public Boolean Ins_CaractIsKey(){
				    return false;
				}
				public Integer Ins_CaractLength(){
				    return null;
				}
				public Integer Ins_CaractPrecision(){
				    return null;
				}
				public String Ins_CaractDefault(){
				
					return null;
				
				}
				public String Ins_CaractComment(){
				
				    return "";
				
				}
				public String Ins_CaractPattern(){
				
					return "";
				
				}
				public String Ins_CaractOriginalDbColumnName(){
				
					return "Ins_Caract";
				
				}

				
			    public Integer Cod_Barras_Duplicidad_;

				public Integer getCod_Barras_Duplicidad_ () {
					return this.Cod_Barras_Duplicidad_;
				}

				public Boolean Cod_Barras_Duplicidad_IsNullable(){
				    return true;
				}
				public Boolean Cod_Barras_Duplicidad_IsKey(){
				    return false;
				}
				public Integer Cod_Barras_Duplicidad_Length(){
				    return null;
				}
				public Integer Cod_Barras_Duplicidad_Precision(){
				    return null;
				}
				public String Cod_Barras_Duplicidad_Default(){
				
					return null;
				
				}
				public String Cod_Barras_Duplicidad_Comment(){
				
				    return "";
				
				}
				public String Cod_Barras_Duplicidad_Pattern(){
				
					return "";
				
				}
				public String Cod_Barras_Duplicidad_OriginalDbColumnName(){
				
					return "Cod_Barras_Duplicidad_";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteristicas_Ids = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
						this.Cod_Barras_Duplicidad_ = readInteger(dis);
					
					this.Respuesta_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteristicas_Ids = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
						this.Cod_Barras_Duplicidad_ = readInteger(dis);
					
					this.Respuesta_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteristicas_Ids,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// Integer
				
						writeInteger(this.Cod_Barras_Duplicidad_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteristicas_Ids,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// Integer
				
						writeInteger(this.Cod_Barras_Duplicidad_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Caracteristicas_Ids="+Caracteristicas_Ids);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",TFFarmaceutica_Id="+String.valueOf(TFFarmaceutica_Id));
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",FFarmaceutica_Id="+String.valueOf(FFarmaceutica_Id));
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",CantUMedida_Int="+String.valueOf(CantUMedida_Int));
		sb.append(",CantMinima_Int="+String.valueOf(CantMinima_Int));
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
		sb.append(",Ins_Caract="+Ins_Caract);
		sb.append(",Cod_Barras_Duplicidad_="+String.valueOf(Cod_Barras_Duplicidad_));
		sb.append(",Respuesta_="+Respuesta_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row30Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row35Struct implements routines.system.IPersistableRow<row35Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Caracteristicas_Ids;

				public String getCaracteristicas_Ids () {
					return this.Caracteristicas_Ids;
				}

				public Boolean Caracteristicas_IdsIsNullable(){
				    return true;
				}
				public Boolean Caracteristicas_IdsIsKey(){
				    return false;
				}
				public Integer Caracteristicas_IdsLength(){
				    return null;
				}
				public Integer Caracteristicas_IdsPrecision(){
				    return null;
				}
				public String Caracteristicas_IdsDefault(){
				
					return null;
				
				}
				public String Caracteristicas_IdsComment(){
				
				    return "";
				
				}
				public String Caracteristicas_IdsPattern(){
				
					return "";
				
				}
				public String Caracteristicas_IdsOriginalDbColumnName(){
				
					return "Caracteristicas_Ids";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public BigDecimal TFFarmaceutica_Id;

				public BigDecimal getTFFarmaceutica_Id () {
					return this.TFFarmaceutica_Id;
				}

				public Boolean TFFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean TFFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer TFFarmaceutica_IdLength(){
				    return null;
				}
				public Integer TFFarmaceutica_IdPrecision(){
				    return null;
				}
				public String TFFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String TFFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String TFFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String TFFarmaceutica_IdOriginalDbColumnName(){
				
					return "TFFarmaceutica_Id";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal FFarmaceutica_Id;

				public BigDecimal getFFarmaceutica_Id () {
					return this.FFarmaceutica_Id;
				}

				public Boolean FFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean FFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer FFarmaceutica_IdLength(){
				    return null;
				}
				public Integer FFarmaceutica_IdPrecision(){
				    return null;
				}
				public String FFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String FFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String FFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String FFarmaceutica_IdOriginalDbColumnName(){
				
					return "FFarmaceutica_Id";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public Double CantUMedida_Int;

				public Double getCantUMedida_Int () {
					return this.CantUMedida_Int;
				}

				public Boolean CantUMedida_IntIsNullable(){
				    return true;
				}
				public Boolean CantUMedida_IntIsKey(){
				    return false;
				}
				public Integer CantUMedida_IntLength(){
				    return null;
				}
				public Integer CantUMedida_IntPrecision(){
				    return null;
				}
				public String CantUMedida_IntDefault(){
				
					return null;
				
				}
				public String CantUMedida_IntComment(){
				
				    return "";
				
				}
				public String CantUMedida_IntPattern(){
				
					return "";
				
				}
				public String CantUMedida_IntOriginalDbColumnName(){
				
					return "CantUMedida_Int";
				
				}

				
			    public Integer CantMinima_Int;

				public Integer getCantMinima_Int () {
					return this.CantMinima_Int;
				}

				public Boolean CantMinima_IntIsNullable(){
				    return true;
				}
				public Boolean CantMinima_IntIsKey(){
				    return false;
				}
				public Integer CantMinima_IntLength(){
				    return null;
				}
				public Integer CantMinima_IntPrecision(){
				    return null;
				}
				public String CantMinima_IntDefault(){
				
					return null;
				
				}
				public String CantMinima_IntComment(){
				
				    return "";
				
				}
				public String CantMinima_IntPattern(){
				
					return "";
				
				}
				public String CantMinima_IntOriginalDbColumnName(){
				
					return "CantMinima_Int";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return null;
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				
			    public String Ins_Caract;

				public String getIns_Caract () {
					return this.Ins_Caract;
				}

				public Boolean Ins_CaractIsNullable(){
				    return true;
				}
				public Boolean Ins_CaractIsKey(){
				    return false;
				}
				public Integer Ins_CaractLength(){
				    return null;
				}
				public Integer Ins_CaractPrecision(){
				    return null;
				}
				public String Ins_CaractDefault(){
				
					return null;
				
				}
				public String Ins_CaractComment(){
				
				    return "";
				
				}
				public String Ins_CaractPattern(){
				
					return "";
				
				}
				public String Ins_CaractOriginalDbColumnName(){
				
					return "Ins_Caract";
				
				}

				
			    public Integer Cod_Barras_Duplicidad_;

				public Integer getCod_Barras_Duplicidad_ () {
					return this.Cod_Barras_Duplicidad_;
				}

				public Boolean Cod_Barras_Duplicidad_IsNullable(){
				    return true;
				}
				public Boolean Cod_Barras_Duplicidad_IsKey(){
				    return false;
				}
				public Integer Cod_Barras_Duplicidad_Length(){
				    return null;
				}
				public Integer Cod_Barras_Duplicidad_Precision(){
				    return null;
				}
				public String Cod_Barras_Duplicidad_Default(){
				
					return null;
				
				}
				public String Cod_Barras_Duplicidad_Comment(){
				
				    return "";
				
				}
				public String Cod_Barras_Duplicidad_Pattern(){
				
					return "";
				
				}
				public String Cod_Barras_Duplicidad_OriginalDbColumnName(){
				
					return "Cod_Barras_Duplicidad_";
				
				}

				
			    public Integer Cod_Barras_Registrado_;

				public Integer getCod_Barras_Registrado_ () {
					return this.Cod_Barras_Registrado_;
				}

				public Boolean Cod_Barras_Registrado_IsNullable(){
				    return true;
				}
				public Boolean Cod_Barras_Registrado_IsKey(){
				    return false;
				}
				public Integer Cod_Barras_Registrado_Length(){
				    return null;
				}
				public Integer Cod_Barras_Registrado_Precision(){
				    return null;
				}
				public String Cod_Barras_Registrado_Default(){
				
					return null;
				
				}
				public String Cod_Barras_Registrado_Comment(){
				
				    return "";
				
				}
				public String Cod_Barras_Registrado_Pattern(){
				
					return "";
				
				}
				public String Cod_Barras_Registrado_OriginalDbColumnName(){
				
					return "Cod_Barras_Registrado_";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteristicas_Ids = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
						this.Cod_Barras_Duplicidad_ = readInteger(dis);
					
						this.Cod_Barras_Registrado_ = readInteger(dis);
					
					this.Respuesta_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteristicas_Ids = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
						this.Cod_Barras_Duplicidad_ = readInteger(dis);
					
						this.Cod_Barras_Registrado_ = readInteger(dis);
					
					this.Respuesta_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteristicas_Ids,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// Integer
				
						writeInteger(this.Cod_Barras_Duplicidad_,dos);
					
					// Integer
				
						writeInteger(this.Cod_Barras_Registrado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteristicas_Ids,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// Integer
				
						writeInteger(this.Cod_Barras_Duplicidad_,dos);
					
					// Integer
				
						writeInteger(this.Cod_Barras_Registrado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Caracteristicas_Ids="+Caracteristicas_Ids);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",TFFarmaceutica_Id="+String.valueOf(TFFarmaceutica_Id));
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",FFarmaceutica_Id="+String.valueOf(FFarmaceutica_Id));
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",CantUMedida_Int="+String.valueOf(CantUMedida_Int));
		sb.append(",CantMinima_Int="+String.valueOf(CantMinima_Int));
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
		sb.append(",Ins_Caract="+Ins_Caract);
		sb.append(",Cod_Barras_Duplicidad_="+String.valueOf(Cod_Barras_Duplicidad_));
		sb.append(",Cod_Barras_Registrado_="+String.valueOf(Cod_Barras_Registrado_));
		sb.append(",Respuesta_="+Respuesta_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row35Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtDenormalize_1 implements routines.system.IPersistableRow<OnRowsEndStructtDenormalize_1> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Caracteristicas_Ids;

				public String getCaracteristicas_Ids () {
					return this.Caracteristicas_Ids;
				}

				public Boolean Caracteristicas_IdsIsNullable(){
				    return true;
				}
				public Boolean Caracteristicas_IdsIsKey(){
				    return false;
				}
				public Integer Caracteristicas_IdsLength(){
				    return null;
				}
				public Integer Caracteristicas_IdsPrecision(){
				    return null;
				}
				public String Caracteristicas_IdsDefault(){
				
					return null;
				
				}
				public String Caracteristicas_IdsComment(){
				
				    return "";
				
				}
				public String Caracteristicas_IdsPattern(){
				
					return "";
				
				}
				public String Caracteristicas_IdsOriginalDbColumnName(){
				
					return "Caracteristicas_Ids";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public BigDecimal TFFarmaceutica_Id;

				public BigDecimal getTFFarmaceutica_Id () {
					return this.TFFarmaceutica_Id;
				}

				public Boolean TFFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean TFFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer TFFarmaceutica_IdLength(){
				    return null;
				}
				public Integer TFFarmaceutica_IdPrecision(){
				    return null;
				}
				public String TFFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String TFFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String TFFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String TFFarmaceutica_IdOriginalDbColumnName(){
				
					return "TFFarmaceutica_Id";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal FFarmaceutica_Id;

				public BigDecimal getFFarmaceutica_Id () {
					return this.FFarmaceutica_Id;
				}

				public Boolean FFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean FFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer FFarmaceutica_IdLength(){
				    return null;
				}
				public Integer FFarmaceutica_IdPrecision(){
				    return null;
				}
				public String FFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String FFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String FFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String FFarmaceutica_IdOriginalDbColumnName(){
				
					return "FFarmaceutica_Id";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public Double CantUMedida_Int;

				public Double getCantUMedida_Int () {
					return this.CantUMedida_Int;
				}

				public Boolean CantUMedida_IntIsNullable(){
				    return true;
				}
				public Boolean CantUMedida_IntIsKey(){
				    return false;
				}
				public Integer CantUMedida_IntLength(){
				    return null;
				}
				public Integer CantUMedida_IntPrecision(){
				    return null;
				}
				public String CantUMedida_IntDefault(){
				
					return null;
				
				}
				public String CantUMedida_IntComment(){
				
				    return "";
				
				}
				public String CantUMedida_IntPattern(){
				
					return "";
				
				}
				public String CantUMedida_IntOriginalDbColumnName(){
				
					return "CantUMedida_Int";
				
				}

				
			    public Integer CantMinima_Int;

				public Integer getCantMinima_Int () {
					return this.CantMinima_Int;
				}

				public Boolean CantMinima_IntIsNullable(){
				    return true;
				}
				public Boolean CantMinima_IntIsKey(){
				    return false;
				}
				public Integer CantMinima_IntLength(){
				    return null;
				}
				public Integer CantMinima_IntPrecision(){
				    return null;
				}
				public String CantMinima_IntDefault(){
				
					return null;
				
				}
				public String CantMinima_IntComment(){
				
				    return "";
				
				}
				public String CantMinima_IntPattern(){
				
					return "";
				
				}
				public String CantMinima_IntOriginalDbColumnName(){
				
					return "CantMinima_Int";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return null;
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				
			    public String Ins_Caract;

				public String getIns_Caract () {
					return this.Ins_Caract;
				}

				public Boolean Ins_CaractIsNullable(){
				    return true;
				}
				public Boolean Ins_CaractIsKey(){
				    return false;
				}
				public Integer Ins_CaractLength(){
				    return null;
				}
				public Integer Ins_CaractPrecision(){
				    return null;
				}
				public String Ins_CaractDefault(){
				
					return null;
				
				}
				public String Ins_CaractComment(){
				
				    return "";
				
				}
				public String Ins_CaractPattern(){
				
					return "";
				
				}
				public String Ins_CaractOriginalDbColumnName(){
				
					return "Ins_Caract";
				
				}

				
			    public Integer Cod_Barras_Duplicidad_;

				public Integer getCod_Barras_Duplicidad_ () {
					return this.Cod_Barras_Duplicidad_;
				}

				public Boolean Cod_Barras_Duplicidad_IsNullable(){
				    return true;
				}
				public Boolean Cod_Barras_Duplicidad_IsKey(){
				    return false;
				}
				public Integer Cod_Barras_Duplicidad_Length(){
				    return null;
				}
				public Integer Cod_Barras_Duplicidad_Precision(){
				    return null;
				}
				public String Cod_Barras_Duplicidad_Default(){
				
					return null;
				
				}
				public String Cod_Barras_Duplicidad_Comment(){
				
				    return "";
				
				}
				public String Cod_Barras_Duplicidad_Pattern(){
				
					return "";
				
				}
				public String Cod_Barras_Duplicidad_OriginalDbColumnName(){
				
					return "Cod_Barras_Duplicidad_";
				
				}

				
			    public Integer Cod_Barras_Registrado_;

				public Integer getCod_Barras_Registrado_ () {
					return this.Cod_Barras_Registrado_;
				}

				public Boolean Cod_Barras_Registrado_IsNullable(){
				    return true;
				}
				public Boolean Cod_Barras_Registrado_IsKey(){
				    return false;
				}
				public Integer Cod_Barras_Registrado_Length(){
				    return null;
				}
				public Integer Cod_Barras_Registrado_Precision(){
				    return null;
				}
				public String Cod_Barras_Registrado_Default(){
				
					return null;
				
				}
				public String Cod_Barras_Registrado_Comment(){
				
				    return "";
				
				}
				public String Cod_Barras_Registrado_Pattern(){
				
					return "";
				
				}
				public String Cod_Barras_Registrado_OriginalDbColumnName(){
				
					return "Cod_Barras_Registrado_";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteristicas_Ids = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
						this.Cod_Barras_Duplicidad_ = readInteger(dis);
					
						this.Cod_Barras_Registrado_ = readInteger(dis);
					
					this.Respuesta_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteristicas_Ids = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
						this.Cod_Barras_Duplicidad_ = readInteger(dis);
					
						this.Cod_Barras_Registrado_ = readInteger(dis);
					
					this.Respuesta_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteristicas_Ids,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// Integer
				
						writeInteger(this.Cod_Barras_Duplicidad_,dos);
					
					// Integer
				
						writeInteger(this.Cod_Barras_Registrado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteristicas_Ids,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// Integer
				
						writeInteger(this.Cod_Barras_Duplicidad_,dos);
					
					// Integer
				
						writeInteger(this.Cod_Barras_Registrado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Caracteristicas_Ids="+Caracteristicas_Ids);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",TFFarmaceutica_Id="+String.valueOf(TFFarmaceutica_Id));
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",FFarmaceutica_Id="+String.valueOf(FFarmaceutica_Id));
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",CantUMedida_Int="+String.valueOf(CantUMedida_Int));
		sb.append(",CantMinima_Int="+String.valueOf(CantMinima_Int));
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
		sb.append(",Ins_Caract="+Ins_Caract);
		sb.append(",Cod_Barras_Duplicidad_="+String.valueOf(Cod_Barras_Duplicidad_));
		sb.append(",Cod_Barras_Registrado_="+String.valueOf(Cod_Barras_Registrado_));
		sb.append(",Respuesta_="+Respuesta_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtDenormalize_1 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row28Struct implements routines.system.IPersistableRow<row28Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Caracteristicas_Ids;

				public String getCaracteristicas_Ids () {
					return this.Caracteristicas_Ids;
				}

				public Boolean Caracteristicas_IdsIsNullable(){
				    return true;
				}
				public Boolean Caracteristicas_IdsIsKey(){
				    return false;
				}
				public Integer Caracteristicas_IdsLength(){
				    return null;
				}
				public Integer Caracteristicas_IdsPrecision(){
				    return null;
				}
				public String Caracteristicas_IdsDefault(){
				
					return null;
				
				}
				public String Caracteristicas_IdsComment(){
				
				    return "";
				
				}
				public String Caracteristicas_IdsPattern(){
				
					return "";
				
				}
				public String Caracteristicas_IdsOriginalDbColumnName(){
				
					return "Caracteristicas_Ids";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return "";
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return "";
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return "";
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public BigDecimal TFFarmaceutica_Id;

				public BigDecimal getTFFarmaceutica_Id () {
					return this.TFFarmaceutica_Id;
				}

				public Boolean TFFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean TFFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer TFFarmaceutica_IdLength(){
				    return null;
				}
				public Integer TFFarmaceutica_IdPrecision(){
				    return null;
				}
				public String TFFarmaceutica_IdDefault(){
				
					return "";
				
				}
				public String TFFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String TFFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String TFFarmaceutica_IdOriginalDbColumnName(){
				
					return "TFFarmaceutica_Id";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return "";
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal FFarmaceutica_Id;

				public BigDecimal getFFarmaceutica_Id () {
					return this.FFarmaceutica_Id;
				}

				public Boolean FFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean FFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer FFarmaceutica_IdLength(){
				    return null;
				}
				public Integer FFarmaceutica_IdPrecision(){
				    return null;
				}
				public String FFarmaceutica_IdDefault(){
				
					return "";
				
				}
				public String FFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String FFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String FFarmaceutica_IdOriginalDbColumnName(){
				
					return "FFarmaceutica_Id";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return "";
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public Double CantUMedida_Int;

				public Double getCantUMedida_Int () {
					return this.CantUMedida_Int;
				}

				public Boolean CantUMedida_IntIsNullable(){
				    return true;
				}
				public Boolean CantUMedida_IntIsKey(){
				    return false;
				}
				public Integer CantUMedida_IntLength(){
				    return null;
				}
				public Integer CantUMedida_IntPrecision(){
				    return null;
				}
				public String CantUMedida_IntDefault(){
				
					return "";
				
				}
				public String CantUMedida_IntComment(){
				
				    return "";
				
				}
				public String CantUMedida_IntPattern(){
				
					return "";
				
				}
				public String CantUMedida_IntOriginalDbColumnName(){
				
					return "CantUMedida_Int";
				
				}

				
			    public Integer CantMinima_Int;

				public Integer getCantMinima_Int () {
					return this.CantMinima_Int;
				}

				public Boolean CantMinima_IntIsNullable(){
				    return true;
				}
				public Boolean CantMinima_IntIsKey(){
				    return false;
				}
				public Integer CantMinima_IntLength(){
				    return null;
				}
				public Integer CantMinima_IntPrecision(){
				    return null;
				}
				public String CantMinima_IntDefault(){
				
					return "";
				
				}
				public String CantMinima_IntComment(){
				
				    return "";
				
				}
				public String CantMinima_IntPattern(){
				
					return "";
				
				}
				public String CantMinima_IntOriginalDbColumnName(){
				
					return "CantMinima_Int";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return "";
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return "";
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return "";
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return "";
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return "";
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return "";
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				
			    public String Ins_Caract;

				public String getIns_Caract () {
					return this.Ins_Caract;
				}

				public Boolean Ins_CaractIsNullable(){
				    return true;
				}
				public Boolean Ins_CaractIsKey(){
				    return false;
				}
				public Integer Ins_CaractLength(){
				    return null;
				}
				public Integer Ins_CaractPrecision(){
				    return null;
				}
				public String Ins_CaractDefault(){
				
					return null;
				
				}
				public String Ins_CaractComment(){
				
				    return "";
				
				}
				public String Ins_CaractPattern(){
				
					return "";
				
				}
				public String Ins_CaractOriginalDbColumnName(){
				
					return "Ins_Caract";
				
				}

				
			    public Integer Cod_Barras_Duplicidad_;

				public Integer getCod_Barras_Duplicidad_ () {
					return this.Cod_Barras_Duplicidad_;
				}

				public Boolean Cod_Barras_Duplicidad_IsNullable(){
				    return true;
				}
				public Boolean Cod_Barras_Duplicidad_IsKey(){
				    return false;
				}
				public Integer Cod_Barras_Duplicidad_Length(){
				    return null;
				}
				public Integer Cod_Barras_Duplicidad_Precision(){
				    return null;
				}
				public String Cod_Barras_Duplicidad_Default(){
				
					return null;
				
				}
				public String Cod_Barras_Duplicidad_Comment(){
				
				    return "";
				
				}
				public String Cod_Barras_Duplicidad_Pattern(){
				
					return "";
				
				}
				public String Cod_Barras_Duplicidad_OriginalDbColumnName(){
				
					return "Cod_Barras_Duplicidad_";
				
				}

				
			    public Integer Cod_Barras_Registrado_;

				public Integer getCod_Barras_Registrado_ () {
					return this.Cod_Barras_Registrado_;
				}

				public Boolean Cod_Barras_Registrado_IsNullable(){
				    return true;
				}
				public Boolean Cod_Barras_Registrado_IsKey(){
				    return false;
				}
				public Integer Cod_Barras_Registrado_Length(){
				    return null;
				}
				public Integer Cod_Barras_Registrado_Precision(){
				    return null;
				}
				public String Cod_Barras_Registrado_Default(){
				
					return null;
				
				}
				public String Cod_Barras_Registrado_Comment(){
				
				    return "";
				
				}
				public String Cod_Barras_Registrado_Pattern(){
				
					return "";
				
				}
				public String Cod_Barras_Registrado_OriginalDbColumnName(){
				
					return "Cod_Barras_Registrado_";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteristicas_Ids = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
						this.Cod_Barras_Duplicidad_ = readInteger(dis);
					
						this.Cod_Barras_Registrado_ = readInteger(dis);
					
					this.Respuesta_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteristicas_Ids = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
						this.Cod_Barras_Duplicidad_ = readInteger(dis);
					
						this.Cod_Barras_Registrado_ = readInteger(dis);
					
					this.Respuesta_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteristicas_Ids,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// Integer
				
						writeInteger(this.Cod_Barras_Duplicidad_,dos);
					
					// Integer
				
						writeInteger(this.Cod_Barras_Registrado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteristicas_Ids,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
					// Integer
				
						writeInteger(this.Cod_Barras_Duplicidad_,dos);
					
					// Integer
				
						writeInteger(this.Cod_Barras_Registrado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Caracteristicas_Ids="+Caracteristicas_Ids);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",TFFarmaceutica_Id="+String.valueOf(TFFarmaceutica_Id));
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",FFarmaceutica_Id="+String.valueOf(FFarmaceutica_Id));
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",CantUMedida_Int="+String.valueOf(CantUMedida_Int));
		sb.append(",CantMinima_Int="+String.valueOf(CantMinima_Int));
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
		sb.append(",Ins_Caract="+Ins_Caract);
		sb.append(",Cod_Barras_Duplicidad_="+String.valueOf(Cod_Barras_Duplicidad_));
		sb.append(",Cod_Barras_Registrado_="+String.valueOf(Cod_Barras_Registrado_));
		sb.append(",Respuesta_="+Respuesta_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row28Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class next_6Struct implements routines.system.IPersistableRow<next_6Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Caracteristicas_Ids;

				public String getCaracteristicas_Ids () {
					return this.Caracteristicas_Ids;
				}

				public Boolean Caracteristicas_IdsIsNullable(){
				    return true;
				}
				public Boolean Caracteristicas_IdsIsKey(){
				    return false;
				}
				public Integer Caracteristicas_IdsLength(){
				    return null;
				}
				public Integer Caracteristicas_IdsPrecision(){
				    return null;
				}
				public String Caracteristicas_IdsDefault(){
				
					return null;
				
				}
				public String Caracteristicas_IdsComment(){
				
				    return "";
				
				}
				public String Caracteristicas_IdsPattern(){
				
					return "";
				
				}
				public String Caracteristicas_IdsOriginalDbColumnName(){
				
					return "Caracteristicas_Ids";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public BigDecimal TFFarmaceutica_Id;

				public BigDecimal getTFFarmaceutica_Id () {
					return this.TFFarmaceutica_Id;
				}

				public Boolean TFFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean TFFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer TFFarmaceutica_IdLength(){
				    return null;
				}
				public Integer TFFarmaceutica_IdPrecision(){
				    return null;
				}
				public String TFFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String TFFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String TFFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String TFFarmaceutica_IdOriginalDbColumnName(){
				
					return "TFFarmaceutica_Id";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal FFarmaceutica_Id;

				public BigDecimal getFFarmaceutica_Id () {
					return this.FFarmaceutica_Id;
				}

				public Boolean FFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean FFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer FFarmaceutica_IdLength(){
				    return null;
				}
				public Integer FFarmaceutica_IdPrecision(){
				    return null;
				}
				public String FFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String FFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String FFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String FFarmaceutica_IdOriginalDbColumnName(){
				
					return "FFarmaceutica_Id";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public Double CantUMedida_Int;

				public Double getCantUMedida_Int () {
					return this.CantUMedida_Int;
				}

				public Boolean CantUMedida_IntIsNullable(){
				    return true;
				}
				public Boolean CantUMedida_IntIsKey(){
				    return false;
				}
				public Integer CantUMedida_IntLength(){
				    return null;
				}
				public Integer CantUMedida_IntPrecision(){
				    return null;
				}
				public String CantUMedida_IntDefault(){
				
					return null;
				
				}
				public String CantUMedida_IntComment(){
				
				    return "";
				
				}
				public String CantUMedida_IntPattern(){
				
					return "";
				
				}
				public String CantUMedida_IntOriginalDbColumnName(){
				
					return "CantUMedida_Int";
				
				}

				
			    public Integer CantMinima_Int;

				public Integer getCantMinima_Int () {
					return this.CantMinima_Int;
				}

				public Boolean CantMinima_IntIsNullable(){
				    return true;
				}
				public Boolean CantMinima_IntIsKey(){
				    return false;
				}
				public Integer CantMinima_IntLength(){
				    return null;
				}
				public Integer CantMinima_IntPrecision(){
				    return null;
				}
				public String CantMinima_IntDefault(){
				
					return null;
				
				}
				public String CantMinima_IntComment(){
				
				    return "";
				
				}
				public String CantMinima_IntPattern(){
				
					return "";
				
				}
				public String CantMinima_IntOriginalDbColumnName(){
				
					return "CantMinima_Int";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return null;
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				
			    public String Ins_Caract;

				public String getIns_Caract () {
					return this.Ins_Caract;
				}

				public Boolean Ins_CaractIsNullable(){
				    return true;
				}
				public Boolean Ins_CaractIsKey(){
				    return false;
				}
				public Integer Ins_CaractLength(){
				    return null;
				}
				public Integer Ins_CaractPrecision(){
				    return null;
				}
				public String Ins_CaractDefault(){
				
					return null;
				
				}
				public String Ins_CaractComment(){
				
				    return "";
				
				}
				public String Ins_CaractPattern(){
				
					return "";
				
				}
				public String Ins_CaractOriginalDbColumnName(){
				
					return "Ins_Caract";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteristicas_Ids = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteristicas_Ids = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteristicas_Ids,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteristicas_Ids,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Caracteristicas_Ids="+Caracteristicas_Ids);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",TFFarmaceutica_Id="+String.valueOf(TFFarmaceutica_Id));
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",FFarmaceutica_Id="+String.valueOf(FFarmaceutica_Id));
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",CantUMedida_Int="+String.valueOf(CantUMedida_Int));
		sb.append(",CantMinima_Int="+String.valueOf(CantMinima_Int));
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
		sb.append(",Ins_Caract="+Ins_Caract);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(next_6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row34Struct implements routines.system.IPersistableRow<row34Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Caracteristicas_Ids;

				public String getCaracteristicas_Ids () {
					return this.Caracteristicas_Ids;
				}

				public Boolean Caracteristicas_IdsIsNullable(){
				    return true;
				}
				public Boolean Caracteristicas_IdsIsKey(){
				    return false;
				}
				public Integer Caracteristicas_IdsLength(){
				    return null;
				}
				public Integer Caracteristicas_IdsPrecision(){
				    return null;
				}
				public String Caracteristicas_IdsDefault(){
				
					return null;
				
				}
				public String Caracteristicas_IdsComment(){
				
				    return "";
				
				}
				public String Caracteristicas_IdsPattern(){
				
					return "";
				
				}
				public String Caracteristicas_IdsOriginalDbColumnName(){
				
					return "Caracteristicas_Ids";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public BigDecimal TFFarmaceutica_Id;

				public BigDecimal getTFFarmaceutica_Id () {
					return this.TFFarmaceutica_Id;
				}

				public Boolean TFFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean TFFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer TFFarmaceutica_IdLength(){
				    return null;
				}
				public Integer TFFarmaceutica_IdPrecision(){
				    return null;
				}
				public String TFFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String TFFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String TFFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String TFFarmaceutica_IdOriginalDbColumnName(){
				
					return "TFFarmaceutica_Id";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal FFarmaceutica_Id;

				public BigDecimal getFFarmaceutica_Id () {
					return this.FFarmaceutica_Id;
				}

				public Boolean FFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean FFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer FFarmaceutica_IdLength(){
				    return null;
				}
				public Integer FFarmaceutica_IdPrecision(){
				    return null;
				}
				public String FFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String FFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String FFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String FFarmaceutica_IdOriginalDbColumnName(){
				
					return "FFarmaceutica_Id";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public Double CantUMedida_Int;

				public Double getCantUMedida_Int () {
					return this.CantUMedida_Int;
				}

				public Boolean CantUMedida_IntIsNullable(){
				    return true;
				}
				public Boolean CantUMedida_IntIsKey(){
				    return false;
				}
				public Integer CantUMedida_IntLength(){
				    return null;
				}
				public Integer CantUMedida_IntPrecision(){
				    return null;
				}
				public String CantUMedida_IntDefault(){
				
					return null;
				
				}
				public String CantUMedida_IntComment(){
				
				    return "";
				
				}
				public String CantUMedida_IntPattern(){
				
					return "";
				
				}
				public String CantUMedida_IntOriginalDbColumnName(){
				
					return "CantUMedida_Int";
				
				}

				
			    public Integer CantMinima_Int;

				public Integer getCantMinima_Int () {
					return this.CantMinima_Int;
				}

				public Boolean CantMinima_IntIsNullable(){
				    return true;
				}
				public Boolean CantMinima_IntIsKey(){
				    return false;
				}
				public Integer CantMinima_IntLength(){
				    return null;
				}
				public Integer CantMinima_IntPrecision(){
				    return null;
				}
				public String CantMinima_IntDefault(){
				
					return null;
				
				}
				public String CantMinima_IntComment(){
				
				    return "";
				
				}
				public String CantMinima_IntPattern(){
				
					return "";
				
				}
				public String CantMinima_IntOriginalDbColumnName(){
				
					return "CantMinima_Int";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return null;
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				
			    public BigDecimal PCaracteristicas_Id;

				public BigDecimal getPCaracteristicas_Id () {
					return this.PCaracteristicas_Id;
				}

				public Boolean PCaracteristicas_IdIsNullable(){
				    return true;
				}
				public Boolean PCaracteristicas_IdIsKey(){
				    return false;
				}
				public Integer PCaracteristicas_IdLength(){
				    return null;
				}
				public Integer PCaracteristicas_IdPrecision(){
				    return null;
				}
				public String PCaracteristicas_IdDefault(){
				
					return null;
				
				}
				public String PCaracteristicas_IdComment(){
				
				    return "";
				
				}
				public String PCaracteristicas_IdPattern(){
				
					return "";
				
				}
				public String PCaracteristicas_IdOriginalDbColumnName(){
				
					return "PCaracteristicas_Id";
				
				}

				
			    public String Ins_Caract;

				public String getIns_Caract () {
					return this.Ins_Caract;
				}

				public Boolean Ins_CaractIsNullable(){
				    return true;
				}
				public Boolean Ins_CaractIsKey(){
				    return false;
				}
				public Integer Ins_CaractLength(){
				    return null;
				}
				public Integer Ins_CaractPrecision(){
				    return null;
				}
				public String Ins_CaractDefault(){
				
					return null;
				
				}
				public String Ins_CaractComment(){
				
				    return "";
				
				}
				public String Ins_CaractPattern(){
				
					return "";
				
				}
				public String Ins_CaractOriginalDbColumnName(){
				
					return "Ins_Caract";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteristicas_Ids = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
						this.PCaracteristicas_Id = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteristicas_Ids = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
						this.PCaracteristicas_Id = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteristicas_Ids,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PCaracteristicas_Id);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteristicas_Ids,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PCaracteristicas_Id);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Caracteristicas_Ids="+Caracteristicas_Ids);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",TFFarmaceutica_Id="+String.valueOf(TFFarmaceutica_Id));
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",FFarmaceutica_Id="+String.valueOf(FFarmaceutica_Id));
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",CantUMedida_Int="+String.valueOf(CantUMedida_Int));
		sb.append(",CantMinima_Int="+String.valueOf(CantMinima_Int));
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
		sb.append(",PCaracteristicas_Id="+String.valueOf(PCaracteristicas_Id));
		sb.append(",Ins_Caract="+Ins_Caract);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row34Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class next_5Struct implements routines.system.IPersistableRow<next_5Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Caracteristicas_Ids;

				public String getCaracteristicas_Ids () {
					return this.Caracteristicas_Ids;
				}

				public Boolean Caracteristicas_IdsIsNullable(){
				    return true;
				}
				public Boolean Caracteristicas_IdsIsKey(){
				    return false;
				}
				public Integer Caracteristicas_IdsLength(){
				    return null;
				}
				public Integer Caracteristicas_IdsPrecision(){
				    return null;
				}
				public String Caracteristicas_IdsDefault(){
				
					return null;
				
				}
				public String Caracteristicas_IdsComment(){
				
				    return "";
				
				}
				public String Caracteristicas_IdsPattern(){
				
					return "";
				
				}
				public String Caracteristicas_IdsOriginalDbColumnName(){
				
					return "Caracteristicas_Ids";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public BigDecimal TFFarmaceutica_Id;

				public BigDecimal getTFFarmaceutica_Id () {
					return this.TFFarmaceutica_Id;
				}

				public Boolean TFFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean TFFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer TFFarmaceutica_IdLength(){
				    return null;
				}
				public Integer TFFarmaceutica_IdPrecision(){
				    return null;
				}
				public String TFFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String TFFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String TFFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String TFFarmaceutica_IdOriginalDbColumnName(){
				
					return "TFFarmaceutica_Id";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal FFarmaceutica_Id;

				public BigDecimal getFFarmaceutica_Id () {
					return this.FFarmaceutica_Id;
				}

				public Boolean FFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean FFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer FFarmaceutica_IdLength(){
				    return null;
				}
				public Integer FFarmaceutica_IdPrecision(){
				    return null;
				}
				public String FFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String FFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String FFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String FFarmaceutica_IdOriginalDbColumnName(){
				
					return "FFarmaceutica_Id";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public Double CantUMedida_Int;

				public Double getCantUMedida_Int () {
					return this.CantUMedida_Int;
				}

				public Boolean CantUMedida_IntIsNullable(){
				    return true;
				}
				public Boolean CantUMedida_IntIsKey(){
				    return false;
				}
				public Integer CantUMedida_IntLength(){
				    return null;
				}
				public Integer CantUMedida_IntPrecision(){
				    return null;
				}
				public String CantUMedida_IntDefault(){
				
					return null;
				
				}
				public String CantUMedida_IntComment(){
				
				    return "";
				
				}
				public String CantUMedida_IntPattern(){
				
					return "";
				
				}
				public String CantUMedida_IntOriginalDbColumnName(){
				
					return "CantUMedida_Int";
				
				}

				
			    public Integer CantMinima_Int;

				public Integer getCantMinima_Int () {
					return this.CantMinima_Int;
				}

				public Boolean CantMinima_IntIsNullable(){
				    return true;
				}
				public Boolean CantMinima_IntIsKey(){
				    return false;
				}
				public Integer CantMinima_IntLength(){
				    return null;
				}
				public Integer CantMinima_IntPrecision(){
				    return null;
				}
				public String CantMinima_IntDefault(){
				
					return null;
				
				}
				public String CantMinima_IntComment(){
				
				    return "";
				
				}
				public String CantMinima_IntPattern(){
				
					return "";
				
				}
				public String CantMinima_IntOriginalDbColumnName(){
				
					return "CantMinima_Int";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return null;
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				
			    public BigDecimal PCaracteristicas_Id;

				public BigDecimal getPCaracteristicas_Id () {
					return this.PCaracteristicas_Id;
				}

				public Boolean PCaracteristicas_IdIsNullable(){
				    return true;
				}
				public Boolean PCaracteristicas_IdIsKey(){
				    return false;
				}
				public Integer PCaracteristicas_IdLength(){
				    return null;
				}
				public Integer PCaracteristicas_IdPrecision(){
				    return null;
				}
				public String PCaracteristicas_IdDefault(){
				
					return null;
				
				}
				public String PCaracteristicas_IdComment(){
				
				    return "";
				
				}
				public String PCaracteristicas_IdPattern(){
				
					return "";
				
				}
				public String PCaracteristicas_IdOriginalDbColumnName(){
				
					return "PCaracteristicas_Id";
				
				}

				
			    public String Ins_Caract;

				public String getIns_Caract () {
					return this.Ins_Caract;
				}

				public Boolean Ins_CaractIsNullable(){
				    return true;
				}
				public Boolean Ins_CaractIsKey(){
				    return false;
				}
				public Integer Ins_CaractLength(){
				    return null;
				}
				public Integer Ins_CaractPrecision(){
				    return null;
				}
				public String Ins_CaractDefault(){
				
					return null;
				
				}
				public String Ins_CaractComment(){
				
				    return "";
				
				}
				public String Ins_CaractPattern(){
				
					return "";
				
				}
				public String Ins_CaractOriginalDbColumnName(){
				
					return "Ins_Caract";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteristicas_Ids = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
						this.PCaracteristicas_Id = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Caracteristicas_Ids = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
						this.PCaracteristicas_Id = (BigDecimal) dis.readObject();
					
					this.Ins_Caract = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteristicas_Ids,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PCaracteristicas_Id);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Caracteristicas_Ids,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PCaracteristicas_Id);
					
					// String
				
						writeString(this.Ins_Caract,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Caracteristicas_Ids="+Caracteristicas_Ids);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",TFFarmaceutica_Id="+String.valueOf(TFFarmaceutica_Id));
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",FFarmaceutica_Id="+String.valueOf(FFarmaceutica_Id));
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",CantUMedida_Int="+String.valueOf(CantUMedida_Int));
		sb.append(",CantMinima_Int="+String.valueOf(CantMinima_Int));
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
		sb.append(",PCaracteristicas_Id="+String.valueOf(PCaracteristicas_Id));
		sb.append(",Ins_Caract="+Ins_Caract);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(next_5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row33Struct implements routines.system.IPersistableRow<row33Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String PCaracteristicas;

				public String getPCaracteristicas () {
					return this.PCaracteristicas;
				}

				public Boolean PCaracteristicasIsNullable(){
				    return true;
				}
				public Boolean PCaracteristicasIsKey(){
				    return false;
				}
				public Integer PCaracteristicasLength(){
				    return null;
				}
				public Integer PCaracteristicasPrecision(){
				    return null;
				}
				public String PCaracteristicasDefault(){
				
					return null;
				
				}
				public String PCaracteristicasComment(){
				
				    return "";
				
				}
				public String PCaracteristicasPattern(){
				
					return "";
				
				}
				public String PCaracteristicasOriginalDbColumnName(){
				
					return "PCaracteristicas";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public BigDecimal TFFarmaceutica_Id;

				public BigDecimal getTFFarmaceutica_Id () {
					return this.TFFarmaceutica_Id;
				}

				public Boolean TFFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean TFFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer TFFarmaceutica_IdLength(){
				    return null;
				}
				public Integer TFFarmaceutica_IdPrecision(){
				    return null;
				}
				public String TFFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String TFFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String TFFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String TFFarmaceutica_IdOriginalDbColumnName(){
				
					return "TFFarmaceutica_Id";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal FFarmaceutica_Id;

				public BigDecimal getFFarmaceutica_Id () {
					return this.FFarmaceutica_Id;
				}

				public Boolean FFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean FFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer FFarmaceutica_IdLength(){
				    return null;
				}
				public Integer FFarmaceutica_IdPrecision(){
				    return null;
				}
				public String FFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String FFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String FFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String FFarmaceutica_IdOriginalDbColumnName(){
				
					return "FFarmaceutica_Id";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public Double CantUMedida_Int;

				public Double getCantUMedida_Int () {
					return this.CantUMedida_Int;
				}

				public Boolean CantUMedida_IntIsNullable(){
				    return true;
				}
				public Boolean CantUMedida_IntIsKey(){
				    return false;
				}
				public Integer CantUMedida_IntLength(){
				    return null;
				}
				public Integer CantUMedida_IntPrecision(){
				    return null;
				}
				public String CantUMedida_IntDefault(){
				
					return null;
				
				}
				public String CantUMedida_IntComment(){
				
				    return "";
				
				}
				public String CantUMedida_IntPattern(){
				
					return "";
				
				}
				public String CantUMedida_IntOriginalDbColumnName(){
				
					return "CantUMedida_Int";
				
				}

				
			    public Integer CantMinima_Int;

				public Integer getCantMinima_Int () {
					return this.CantMinima_Int;
				}

				public Boolean CantMinima_IntIsNullable(){
				    return true;
				}
				public Boolean CantMinima_IntIsKey(){
				    return false;
				}
				public Integer CantMinima_IntLength(){
				    return null;
				}
				public Integer CantMinima_IntPrecision(){
				    return null;
				}
				public String CantMinima_IntDefault(){
				
					return null;
				
				}
				public String CantMinima_IntComment(){
				
				    return "";
				
				}
				public String CantMinima_IntPattern(){
				
					return "";
				
				}
				public String CantMinima_IntOriginalDbColumnName(){
				
					return "CantMinima_Int";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return null;
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				
			    public BigDecimal PCaracteristicas_Id;

				public BigDecimal getPCaracteristicas_Id () {
					return this.PCaracteristicas_Id;
				}

				public Boolean PCaracteristicas_IdIsNullable(){
				    return true;
				}
				public Boolean PCaracteristicas_IdIsKey(){
				    return false;
				}
				public Integer PCaracteristicas_IdLength(){
				    return null;
				}
				public Integer PCaracteristicas_IdPrecision(){
				    return null;
				}
				public String PCaracteristicas_IdDefault(){
				
					return null;
				
				}
				public String PCaracteristicas_IdComment(){
				
				    return "";
				
				}
				public String PCaracteristicas_IdPattern(){
				
					return "";
				
				}
				public String PCaracteristicas_IdOriginalDbColumnName(){
				
					return "PCaracteristicas_Id";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.PCaracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
						this.PCaracteristicas_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.PCaracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
						this.PCaracteristicas_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.PCaracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PCaracteristicas_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.PCaracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PCaracteristicas_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",PCaracteristicas="+PCaracteristicas);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",TFFarmaceutica_Id="+String.valueOf(TFFarmaceutica_Id));
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",FFarmaceutica_Id="+String.valueOf(FFarmaceutica_Id));
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",CantUMedida_Int="+String.valueOf(CantUMedida_Int));
		sb.append(",CantMinima_Int="+String.valueOf(CantMinima_Int));
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
		sb.append(",PCaracteristicas_Id="+String.valueOf(PCaracteristicas_Id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row33Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class next_4Struct implements routines.system.IPersistableRow<next_4Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String PCaracteristicas;

				public String getPCaracteristicas () {
					return this.PCaracteristicas;
				}

				public Boolean PCaracteristicasIsNullable(){
				    return true;
				}
				public Boolean PCaracteristicasIsKey(){
				    return false;
				}
				public Integer PCaracteristicasLength(){
				    return null;
				}
				public Integer PCaracteristicasPrecision(){
				    return null;
				}
				public String PCaracteristicasDefault(){
				
					return null;
				
				}
				public String PCaracteristicasComment(){
				
				    return "";
				
				}
				public String PCaracteristicasPattern(){
				
					return "";
				
				}
				public String PCaracteristicasOriginalDbColumnName(){
				
					return "PCaracteristicas";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public BigDecimal TFFarmaceutica_Id;

				public BigDecimal getTFFarmaceutica_Id () {
					return this.TFFarmaceutica_Id;
				}

				public Boolean TFFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean TFFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer TFFarmaceutica_IdLength(){
				    return null;
				}
				public Integer TFFarmaceutica_IdPrecision(){
				    return null;
				}
				public String TFFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String TFFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String TFFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String TFFarmaceutica_IdOriginalDbColumnName(){
				
					return "TFFarmaceutica_Id";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal FFarmaceutica_Id;

				public BigDecimal getFFarmaceutica_Id () {
					return this.FFarmaceutica_Id;
				}

				public Boolean FFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean FFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer FFarmaceutica_IdLength(){
				    return null;
				}
				public Integer FFarmaceutica_IdPrecision(){
				    return null;
				}
				public String FFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String FFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String FFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String FFarmaceutica_IdOriginalDbColumnName(){
				
					return "FFarmaceutica_Id";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public Double CantUMedida_Int;

				public Double getCantUMedida_Int () {
					return this.CantUMedida_Int;
				}

				public Boolean CantUMedida_IntIsNullable(){
				    return true;
				}
				public Boolean CantUMedida_IntIsKey(){
				    return false;
				}
				public Integer CantUMedida_IntLength(){
				    return null;
				}
				public Integer CantUMedida_IntPrecision(){
				    return null;
				}
				public String CantUMedida_IntDefault(){
				
					return null;
				
				}
				public String CantUMedida_IntComment(){
				
				    return "";
				
				}
				public String CantUMedida_IntPattern(){
				
					return "";
				
				}
				public String CantUMedida_IntOriginalDbColumnName(){
				
					return "CantUMedida_Int";
				
				}

				
			    public Integer CantMinima_Int;

				public Integer getCantMinima_Int () {
					return this.CantMinima_Int;
				}

				public Boolean CantMinima_IntIsNullable(){
				    return true;
				}
				public Boolean CantMinima_IntIsKey(){
				    return false;
				}
				public Integer CantMinima_IntLength(){
				    return null;
				}
				public Integer CantMinima_IntPrecision(){
				    return null;
				}
				public String CantMinima_IntDefault(){
				
					return null;
				
				}
				public String CantMinima_IntComment(){
				
				    return "";
				
				}
				public String CantMinima_IntPattern(){
				
					return "";
				
				}
				public String CantMinima_IntOriginalDbColumnName(){
				
					return "CantMinima_Int";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return null;
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.PCaracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.PCaracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.PCaracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.PCaracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",PCaracteristicas="+PCaracteristicas);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",TFFarmaceutica_Id="+String.valueOf(TFFarmaceutica_Id));
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",FFarmaceutica_Id="+String.valueOf(FFarmaceutica_Id));
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",CantUMedida_Int="+String.valueOf(CantUMedida_Int));
		sb.append(",CantMinima_Int="+String.valueOf(CantMinima_Int));
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(next_4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row31Struct implements routines.system.IPersistableRow<row31Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public BigDecimal TFFarmaceutica_Id;

				public BigDecimal getTFFarmaceutica_Id () {
					return this.TFFarmaceutica_Id;
				}

				public Boolean TFFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean TFFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer TFFarmaceutica_IdLength(){
				    return null;
				}
				public Integer TFFarmaceutica_IdPrecision(){
				    return null;
				}
				public String TFFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String TFFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String TFFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String TFFarmaceutica_IdOriginalDbColumnName(){
				
					return "TFFarmaceutica_Id";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal FFarmaceutica_Id;

				public BigDecimal getFFarmaceutica_Id () {
					return this.FFarmaceutica_Id;
				}

				public Boolean FFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean FFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer FFarmaceutica_IdLength(){
				    return null;
				}
				public Integer FFarmaceutica_IdPrecision(){
				    return null;
				}
				public String FFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String FFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String FFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String FFarmaceutica_IdOriginalDbColumnName(){
				
					return "FFarmaceutica_Id";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public Double CantUMedida_Int;

				public Double getCantUMedida_Int () {
					return this.CantUMedida_Int;
				}

				public Boolean CantUMedida_IntIsNullable(){
				    return true;
				}
				public Boolean CantUMedida_IntIsKey(){
				    return false;
				}
				public Integer CantUMedida_IntLength(){
				    return null;
				}
				public Integer CantUMedida_IntPrecision(){
				    return null;
				}
				public String CantUMedida_IntDefault(){
				
					return null;
				
				}
				public String CantUMedida_IntComment(){
				
				    return "";
				
				}
				public String CantUMedida_IntPattern(){
				
					return "";
				
				}
				public String CantUMedida_IntOriginalDbColumnName(){
				
					return "CantUMedida_Int";
				
				}

				
			    public Integer CantMinima_Int;

				public Integer getCantMinima_Int () {
					return this.CantMinima_Int;
				}

				public Boolean CantMinima_IntIsNullable(){
				    return true;
				}
				public Boolean CantMinima_IntIsKey(){
				    return false;
				}
				public Integer CantMinima_IntLength(){
				    return null;
				}
				public Integer CantMinima_IntPrecision(){
				    return null;
				}
				public String CantMinima_IntDefault(){
				
					return null;
				
				}
				public String CantMinima_IntComment(){
				
				    return "";
				
				}
				public String CantMinima_IntPattern(){
				
					return "";
				
				}
				public String CantMinima_IntOriginalDbColumnName(){
				
					return "CantMinima_Int";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return null;
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",TFFarmaceutica_Id="+String.valueOf(TFFarmaceutica_Id));
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",FFarmaceutica_Id="+String.valueOf(FFarmaceutica_Id));
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",CantUMedida_Int="+String.valueOf(CantUMedida_Int));
		sb.append(",CantMinima_Int="+String.valueOf(CantMinima_Int));
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row31Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row25Struct implements routines.system.IPersistableRow<row25Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public BigDecimal TFFarmaceutica_Id;

				public BigDecimal getTFFarmaceutica_Id () {
					return this.TFFarmaceutica_Id;
				}

				public Boolean TFFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean TFFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer TFFarmaceutica_IdLength(){
				    return null;
				}
				public Integer TFFarmaceutica_IdPrecision(){
				    return null;
				}
				public String TFFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String TFFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String TFFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String TFFarmaceutica_IdOriginalDbColumnName(){
				
					return "TFFarmaceutica_Id";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal FFarmaceutica_Id;

				public BigDecimal getFFarmaceutica_Id () {
					return this.FFarmaceutica_Id;
				}

				public Boolean FFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean FFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer FFarmaceutica_IdLength(){
				    return null;
				}
				public Integer FFarmaceutica_IdPrecision(){
				    return null;
				}
				public String FFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String FFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String FFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String FFarmaceutica_IdOriginalDbColumnName(){
				
					return "FFarmaceutica_Id";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public Double CantUMedida_Int;

				public Double getCantUMedida_Int () {
					return this.CantUMedida_Int;
				}

				public Boolean CantUMedida_IntIsNullable(){
				    return true;
				}
				public Boolean CantUMedida_IntIsKey(){
				    return false;
				}
				public Integer CantUMedida_IntLength(){
				    return null;
				}
				public Integer CantUMedida_IntPrecision(){
				    return null;
				}
				public String CantUMedida_IntDefault(){
				
					return null;
				
				}
				public String CantUMedida_IntComment(){
				
				    return "";
				
				}
				public String CantUMedida_IntPattern(){
				
					return "";
				
				}
				public String CantUMedida_IntOriginalDbColumnName(){
				
					return "CantUMedida_Int";
				
				}

				
			    public Integer CantMinima_Int;

				public Integer getCantMinima_Int () {
					return this.CantMinima_Int;
				}

				public Boolean CantMinima_IntIsNullable(){
				    return true;
				}
				public Boolean CantMinima_IntIsKey(){
				    return false;
				}
				public Integer CantMinima_IntLength(){
				    return null;
				}
				public Integer CantMinima_IntPrecision(){
				    return null;
				}
				public String CantMinima_IntDefault(){
				
					return null;
				
				}
				public String CantMinima_IntComment(){
				
				    return "";
				
				}
				public String CantMinima_IntPattern(){
				
					return "";
				
				}
				public String CantMinima_IntOriginalDbColumnName(){
				
					return "CantMinima_Int";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return null;
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",TFFarmaceutica_Id="+String.valueOf(TFFarmaceutica_Id));
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",FFarmaceutica_Id="+String.valueOf(FFarmaceutica_Id));
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",CantUMedida_Int="+String.valueOf(CantUMedida_Int));
		sb.append(",CantMinima_Int="+String.valueOf(CantMinima_Int));
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row25Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row24Struct implements routines.system.IPersistableRow<row24Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public BigDecimal TFFarmaceutica_Id;

				public BigDecimal getTFFarmaceutica_Id () {
					return this.TFFarmaceutica_Id;
				}

				public Boolean TFFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean TFFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer TFFarmaceutica_IdLength(){
				    return null;
				}
				public Integer TFFarmaceutica_IdPrecision(){
				    return null;
				}
				public String TFFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String TFFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String TFFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String TFFarmaceutica_IdOriginalDbColumnName(){
				
					return "TFFarmaceutica_Id";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal FFarmaceutica_Id;

				public BigDecimal getFFarmaceutica_Id () {
					return this.FFarmaceutica_Id;
				}

				public Boolean FFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean FFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer FFarmaceutica_IdLength(){
				    return null;
				}
				public Integer FFarmaceutica_IdPrecision(){
				    return null;
				}
				public String FFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String FFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String FFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String FFarmaceutica_IdOriginalDbColumnName(){
				
					return "FFarmaceutica_Id";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public Double CantUMedida_Int;

				public Double getCantUMedida_Int () {
					return this.CantUMedida_Int;
				}

				public Boolean CantUMedida_IntIsNullable(){
				    return true;
				}
				public Boolean CantUMedida_IntIsKey(){
				    return false;
				}
				public Integer CantUMedida_IntLength(){
				    return null;
				}
				public Integer CantUMedida_IntPrecision(){
				    return null;
				}
				public String CantUMedida_IntDefault(){
				
					return null;
				
				}
				public String CantUMedida_IntComment(){
				
				    return "";
				
				}
				public String CantUMedida_IntPattern(){
				
					return "";
				
				}
				public String CantUMedida_IntOriginalDbColumnName(){
				
					return "CantUMedida_Int";
				
				}

				
			    public Integer CantMinima_Int;

				public Integer getCantMinima_Int () {
					return this.CantMinima_Int;
				}

				public Boolean CantMinima_IntIsNullable(){
				    return true;
				}
				public Boolean CantMinima_IntIsKey(){
				    return false;
				}
				public Integer CantMinima_IntLength(){
				    return null;
				}
				public Integer CantMinima_IntPrecision(){
				    return null;
				}
				public String CantMinima_IntDefault(){
				
					return null;
				
				}
				public String CantMinima_IntComment(){
				
				    return "";
				
				}
				public String CantMinima_IntPattern(){
				
					return "";
				
				}
				public String CantMinima_IntOriginalDbColumnName(){
				
					return "CantMinima_Int";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				
			    public BigDecimal Importador_Id;

				public BigDecimal getImportador_Id () {
					return this.Importador_Id;
				}

				public Boolean Importador_IdIsNullable(){
				    return true;
				}
				public Boolean Importador_IdIsKey(){
				    return false;
				}
				public Integer Importador_IdLength(){
				    return null;
				}
				public Integer Importador_IdPrecision(){
				    return null;
				}
				public String Importador_IdDefault(){
				
					return null;
				
				}
				public String Importador_IdComment(){
				
				    return "";
				
				}
				public String Importador_IdPattern(){
				
					return "";
				
				}
				public String Importador_IdOriginalDbColumnName(){
				
					return "Importador_Id";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
						this.Importador_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Importador_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Importador_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",TFFarmaceutica_Id="+String.valueOf(TFFarmaceutica_Id));
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",FFarmaceutica_Id="+String.valueOf(FFarmaceutica_Id));
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",CantUMedida_Int="+String.valueOf(CantUMedida_Int));
		sb.append(",CantMinima_Int="+String.valueOf(CantMinima_Int));
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
		sb.append(",Importador_Id="+String.valueOf(Importador_Id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row22Struct implements routines.system.IPersistableRow<row22Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public BigDecimal TFFarmaceutica_Id;

				public BigDecimal getTFFarmaceutica_Id () {
					return this.TFFarmaceutica_Id;
				}

				public Boolean TFFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean TFFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer TFFarmaceutica_IdLength(){
				    return null;
				}
				public Integer TFFarmaceutica_IdPrecision(){
				    return null;
				}
				public String TFFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String TFFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String TFFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String TFFarmaceutica_IdOriginalDbColumnName(){
				
					return "TFFarmaceutica_Id";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal FFarmaceutica_Id;

				public BigDecimal getFFarmaceutica_Id () {
					return this.FFarmaceutica_Id;
				}

				public Boolean FFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean FFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer FFarmaceutica_IdLength(){
				    return null;
				}
				public Integer FFarmaceutica_IdPrecision(){
				    return null;
				}
				public String FFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String FFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String FFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String FFarmaceutica_IdOriginalDbColumnName(){
				
					return "FFarmaceutica_Id";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public Double CantUMedida_Int;

				public Double getCantUMedida_Int () {
					return this.CantUMedida_Int;
				}

				public Boolean CantUMedida_IntIsNullable(){
				    return true;
				}
				public Boolean CantUMedida_IntIsKey(){
				    return false;
				}
				public Integer CantUMedida_IntLength(){
				    return null;
				}
				public Integer CantUMedida_IntPrecision(){
				    return null;
				}
				public String CantUMedida_IntDefault(){
				
					return null;
				
				}
				public String CantUMedida_IntComment(){
				
				    return "";
				
				}
				public String CantUMedida_IntPattern(){
				
					return "";
				
				}
				public String CantUMedida_IntOriginalDbColumnName(){
				
					return "CantUMedida_Int";
				
				}

				
			    public Integer CantMinima_Int;

				public Integer getCantMinima_Int () {
					return this.CantMinima_Int;
				}

				public Boolean CantMinima_IntIsNullable(){
				    return true;
				}
				public Boolean CantMinima_IntIsKey(){
				    return false;
				}
				public Integer CantMinima_IntLength(){
				    return null;
				}
				public Integer CantMinima_IntPrecision(){
				    return null;
				}
				public String CantMinima_IntDefault(){
				
					return null;
				
				}
				public String CantMinima_IntComment(){
				
				    return "";
				
				}
				public String CantMinima_IntPattern(){
				
					return "";
				
				}
				public String CantMinima_IntOriginalDbColumnName(){
				
					return "CantMinima_Int";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",TFFarmaceutica_Id="+String.valueOf(TFFarmaceutica_Id));
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",FFarmaceutica_Id="+String.valueOf(FFarmaceutica_Id));
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",CantUMedida_Int="+String.valueOf(CantUMedida_Int));
		sb.append(",CantMinima_Int="+String.valueOf(CantMinima_Int));
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row22Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class next_3Struct implements routines.system.IPersistableRow<next_3Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public BigDecimal TFFarmaceutica_Id;

				public BigDecimal getTFFarmaceutica_Id () {
					return this.TFFarmaceutica_Id;
				}

				public Boolean TFFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean TFFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer TFFarmaceutica_IdLength(){
				    return null;
				}
				public Integer TFFarmaceutica_IdPrecision(){
				    return null;
				}
				public String TFFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String TFFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String TFFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String TFFarmaceutica_IdOriginalDbColumnName(){
				
					return "TFFarmaceutica_Id";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal FFarmaceutica_Id;

				public BigDecimal getFFarmaceutica_Id () {
					return this.FFarmaceutica_Id;
				}

				public Boolean FFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean FFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer FFarmaceutica_IdLength(){
				    return null;
				}
				public Integer FFarmaceutica_IdPrecision(){
				    return null;
				}
				public String FFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String FFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String FFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String FFarmaceutica_IdOriginalDbColumnName(){
				
					return "FFarmaceutica_Id";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public Double CantUMedida_Int;

				public Double getCantUMedida_Int () {
					return this.CantUMedida_Int;
				}

				public Boolean CantUMedida_IntIsNullable(){
				    return true;
				}
				public Boolean CantUMedida_IntIsKey(){
				    return false;
				}
				public Integer CantUMedida_IntLength(){
				    return null;
				}
				public Integer CantUMedida_IntPrecision(){
				    return null;
				}
				public String CantUMedida_IntDefault(){
				
					return null;
				
				}
				public String CantUMedida_IntComment(){
				
				    return "";
				
				}
				public String CantUMedida_IntPattern(){
				
					return "";
				
				}
				public String CantUMedida_IntOriginalDbColumnName(){
				
					return "CantUMedida_Int";
				
				}

				
			    public Integer CantMinima_Int;

				public Integer getCantMinima_Int () {
					return this.CantMinima_Int;
				}

				public Boolean CantMinima_IntIsNullable(){
				    return true;
				}
				public Boolean CantMinima_IntIsKey(){
				    return false;
				}
				public Integer CantMinima_IntLength(){
				    return null;
				}
				public Integer CantMinima_IntPrecision(){
				    return null;
				}
				public String CantMinima_IntDefault(){
				
					return null;
				
				}
				public String CantMinima_IntComment(){
				
				    return "";
				
				}
				public String CantMinima_IntPattern(){
				
					return "";
				
				}
				public String CantMinima_IntOriginalDbColumnName(){
				
					return "CantMinima_Int";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				
			    public String Fabricante_NitN;

				public String getFabricante_NitN () {
					return this.Fabricante_NitN;
				}

				public Boolean Fabricante_NitNIsNullable(){
				    return true;
				}
				public Boolean Fabricante_NitNIsKey(){
				    return false;
				}
				public Integer Fabricante_NitNLength(){
				    return null;
				}
				public Integer Fabricante_NitNPrecision(){
				    return null;
				}
				public String Fabricante_NitNDefault(){
				
					return null;
				
				}
				public String Fabricante_NitNComment(){
				
				    return "";
				
				}
				public String Fabricante_NitNPattern(){
				
					return "";
				
				}
				public String Fabricante_NitNOriginalDbColumnName(){
				
					return "Fabricante_NitN";
				
				}

				
			    public String Importador_NitN;

				public String getImportador_NitN () {
					return this.Importador_NitN;
				}

				public Boolean Importador_NitNIsNullable(){
				    return true;
				}
				public Boolean Importador_NitNIsKey(){
				    return false;
				}
				public Integer Importador_NitNLength(){
				    return null;
				}
				public Integer Importador_NitNPrecision(){
				    return null;
				}
				public String Importador_NitNDefault(){
				
					return null;
				
				}
				public String Importador_NitNComment(){
				
				    return "";
				
				}
				public String Importador_NitNPattern(){
				
					return "";
				
				}
				public String Importador_NitNOriginalDbColumnName(){
				
					return "Importador_NitN";
				
				}

				
			    public BigDecimal Fabricante_Id;

				public BigDecimal getFabricante_Id () {
					return this.Fabricante_Id;
				}

				public Boolean Fabricante_IdIsNullable(){
				    return true;
				}
				public Boolean Fabricante_IdIsKey(){
				    return false;
				}
				public Integer Fabricante_IdLength(){
				    return null;
				}
				public Integer Fabricante_IdPrecision(){
				    return null;
				}
				public String Fabricante_IdDefault(){
				
					return null;
				
				}
				public String Fabricante_IdComment(){
				
				    return "";
				
				}
				public String Fabricante_IdPattern(){
				
					return "";
				
				}
				public String Fabricante_IdOriginalDbColumnName(){
				
					return "Fabricante_Id";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
					this.Fabricante_NitN = readString(dis);
					
					this.Importador_NitN = readString(dis);
					
						this.Fabricante_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Fabricante_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
					// String
				
						writeString(this.Fabricante_NitN,dos);
					
					// String
				
						writeString(this.Importador_NitN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Fabricante_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",TFFarmaceutica_Id="+String.valueOf(TFFarmaceutica_Id));
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",FFarmaceutica_Id="+String.valueOf(FFarmaceutica_Id));
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",CantUMedida_Int="+String.valueOf(CantUMedida_Int));
		sb.append(",CantMinima_Int="+String.valueOf(CantMinima_Int));
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
		sb.append(",Fabricante_NitN="+Fabricante_NitN);
		sb.append(",Importador_NitN="+Importador_NitN);
		sb.append(",Fabricante_Id="+String.valueOf(Fabricante_Id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(next_3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row14Struct implements routines.system.IPersistableRow<row14Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public BigDecimal TFFarmaceutica_Id;

				public BigDecimal getTFFarmaceutica_Id () {
					return this.TFFarmaceutica_Id;
				}

				public Boolean TFFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean TFFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer TFFarmaceutica_IdLength(){
				    return null;
				}
				public Integer TFFarmaceutica_IdPrecision(){
				    return null;
				}
				public String TFFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String TFFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String TFFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String TFFarmaceutica_IdOriginalDbColumnName(){
				
					return "TFFarmaceutica_Id";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal TViaAdmin_id;

				public BigDecimal getTViaAdmin_id () {
					return this.TViaAdmin_id;
				}

				public Boolean TViaAdmin_idIsNullable(){
				    return true;
				}
				public Boolean TViaAdmin_idIsKey(){
				    return false;
				}
				public Integer TViaAdmin_idLength(){
				    return null;
				}
				public Integer TViaAdmin_idPrecision(){
				    return null;
				}
				public String TViaAdmin_idDefault(){
				
					return null;
				
				}
				public String TViaAdmin_idComment(){
				
				    return "";
				
				}
				public String TViaAdmin_idPattern(){
				
					return "";
				
				}
				public String TViaAdmin_idOriginalDbColumnName(){
				
					return "TViaAdmin_id";
				
				}

				
			    public BigDecimal FFarmaceutica_Id;

				public BigDecimal getFFarmaceutica_Id () {
					return this.FFarmaceutica_Id;
				}

				public Boolean FFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean FFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer FFarmaceutica_IdLength(){
				    return null;
				}
				public Integer FFarmaceutica_IdPrecision(){
				    return null;
				}
				public String FFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String FFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String FFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String FFarmaceutica_IdOriginalDbColumnName(){
				
					return "FFarmaceutica_Id";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				
			    public Double CantUMedida_Int;

				public Double getCantUMedida_Int () {
					return this.CantUMedida_Int;
				}

				public Boolean CantUMedida_IntIsNullable(){
				    return true;
				}
				public Boolean CantUMedida_IntIsKey(){
				    return false;
				}
				public Integer CantUMedida_IntLength(){
				    return null;
				}
				public Integer CantUMedida_IntPrecision(){
				    return null;
				}
				public String CantUMedida_IntDefault(){
				
					return null;
				
				}
				public String CantUMedida_IntComment(){
				
				    return "";
				
				}
				public String CantUMedida_IntPattern(){
				
					return "";
				
				}
				public String CantUMedida_IntOriginalDbColumnName(){
				
					return "CantUMedida_Int";
				
				}

				
			    public Integer CantMinima_Int;

				public Integer getCantMinima_Int () {
					return this.CantMinima_Int;
				}

				public Boolean CantMinima_IntIsNullable(){
				    return true;
				}
				public Boolean CantMinima_IntIsKey(){
				    return false;
				}
				public Integer CantMinima_IntLength(){
				    return null;
				}
				public Integer CantMinima_IntPrecision(){
				    return null;
				}
				public String CantMinima_IntDefault(){
				
					return null;
				
				}
				public String CantMinima_IntComment(){
				
				    return "";
				
				}
				public String CantMinima_IntPattern(){
				
					return "";
				
				}
				public String CantMinima_IntOriginalDbColumnName(){
				
					return "CantMinima_Int";
				
				}

				
			    public Boolean _FExp_RegInvima;

				public Boolean get_FExp_RegInvima () {
					return this._FExp_RegInvima;
				}

				public Boolean _FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FExp_RegInvimaLength(){
				    return null;
				}
				public Integer _FExp_RegInvimaPrecision(){
				    return null;
				}
				public String _FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FExp_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FExp_RegInvimaOriginalDbColumnName(){
				
					return "_FExp_RegInvima";
				
				}

				
			    public Boolean _FVen_RegInvima;

				public Boolean get_FVen_RegInvima () {
					return this._FVen_RegInvima;
				}

				public Boolean _FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean _FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer _FVen_RegInvimaLength(){
				    return null;
				}
				public Integer _FVen_RegInvimaPrecision(){
				    return null;
				}
				public String _FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String _FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String _FVen_RegInvimaPattern(){
				
					return "";
				
				}
				public String _FVen_RegInvimaOriginalDbColumnName(){
				
					return "_FVen_RegInvima";
				
				}

				
			    public Boolean _FActivoCum;

				public Boolean get_FActivoCum () {
					return this._FActivoCum;
				}

				public Boolean _FActivoCumIsNullable(){
				    return true;
				}
				public Boolean _FActivoCumIsKey(){
				    return false;
				}
				public Integer _FActivoCumLength(){
				    return null;
				}
				public Integer _FActivoCumPrecision(){
				    return null;
				}
				public String _FActivoCumDefault(){
				
					return null;
				
				}
				public String _FActivoCumComment(){
				
				    return "";
				
				}
				public String _FActivoCumPattern(){
				
					return "";
				
				}
				public String _FActivoCumOriginalDbColumnName(){
				
					return "_FActivoCum";
				
				}

				
			    public Boolean _FInactivoCum;

				public Boolean get_FInactivoCum () {
					return this._FInactivoCum;
				}

				public Boolean _FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean _FInactivoCumIsKey(){
				    return false;
				}
				public Integer _FInactivoCumLength(){
				    return null;
				}
				public Integer _FInactivoCumPrecision(){
				    return null;
				}
				public String _FInactivoCumDefault(){
				
					return null;
				
				}
				public String _FInactivoCumComment(){
				
				    return "";
				
				}
				public String _FInactivoCumPattern(){
				
					return "";
				
				}
				public String _FInactivoCumOriginalDbColumnName(){
				
					return "_FInactivoCum";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.TViaAdmin_id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.TViaAdmin_id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.CantUMedida_Int = null;
           				} else {
           			    	this.CantUMedida_Int = dis.readDouble();
           				}
					
						this.CantMinima_Int = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FExp_RegInvima = null;
           				} else {
           			    	this._FExp_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FVen_RegInvima = null;
           				} else {
           			    	this._FVen_RegInvima = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FActivoCum = null;
           				} else {
           			    	this._FActivoCum = dis.readBoolean();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this._FInactivoCum = null;
           				} else {
           			    	this._FInactivoCum = dis.readBoolean();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TViaAdmin_id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TViaAdmin_id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
					// Double
				
						if(this.CantUMedida_Int == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.CantUMedida_Int);
		            	}
					
					// Integer
				
						writeInteger(this.CantMinima_Int,dos);
					
					// Boolean
				
						if(this._FExp_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FExp_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FVen_RegInvima == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FVen_RegInvima);
		            	}
					
					// Boolean
				
						if(this._FActivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FActivoCum);
		            	}
					
					// Boolean
				
						if(this._FInactivoCum == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeBoolean(this._FInactivoCum);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",TFFarmaceutica_Id="+String.valueOf(TFFarmaceutica_Id));
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",TViaAdmin_id="+String.valueOf(TViaAdmin_id));
		sb.append(",FFarmaceutica_Id="+String.valueOf(FFarmaceutica_Id));
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
		sb.append(",CantUMedida_Int="+String.valueOf(CantUMedida_Int));
		sb.append(",CantMinima_Int="+String.valueOf(CantMinima_Int));
		sb.append(",_FExp_RegInvima="+String.valueOf(_FExp_RegInvima));
		sb.append(",_FVen_RegInvima="+String.valueOf(_FVen_RegInvima));
		sb.append(",_FActivoCum="+String.valueOf(_FActivoCum));
		sb.append(",_FInactivoCum="+String.valueOf(_FInactivoCum));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row19Struct implements routines.system.IPersistableRow<row19Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public BigDecimal TFFarmaceutica_Id;

				public BigDecimal getTFFarmaceutica_Id () {
					return this.TFFarmaceutica_Id;
				}

				public Boolean TFFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean TFFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer TFFarmaceutica_IdLength(){
				    return null;
				}
				public Integer TFFarmaceutica_IdPrecision(){
				    return null;
				}
				public String TFFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String TFFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String TFFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String TFFarmaceutica_IdOriginalDbColumnName(){
				
					return "TFFarmaceutica_Id";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal TViaAdmin_id;

				public BigDecimal getTViaAdmin_id () {
					return this.TViaAdmin_id;
				}

				public Boolean TViaAdmin_idIsNullable(){
				    return true;
				}
				public Boolean TViaAdmin_idIsKey(){
				    return false;
				}
				public Integer TViaAdmin_idLength(){
				    return null;
				}
				public Integer TViaAdmin_idPrecision(){
				    return null;
				}
				public String TViaAdmin_idDefault(){
				
					return null;
				
				}
				public String TViaAdmin_idComment(){
				
				    return "";
				
				}
				public String TViaAdmin_idPattern(){
				
					return "";
				
				}
				public String TViaAdmin_idOriginalDbColumnName(){
				
					return "TViaAdmin_id";
				
				}

				
			    public BigDecimal FFarmaceutica_Id;

				public BigDecimal getFFarmaceutica_Id () {
					return this.FFarmaceutica_Id;
				}

				public Boolean FFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean FFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer FFarmaceutica_IdLength(){
				    return null;
				}
				public Integer FFarmaceutica_IdPrecision(){
				    return null;
				}
				public String FFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String FFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String FFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String FFarmaceutica_IdOriginalDbColumnName(){
				
					return "FFarmaceutica_Id";
				
				}

				
			    public BigDecimal UMedida_Id;

				public BigDecimal getUMedida_Id () {
					return this.UMedida_Id;
				}

				public Boolean UMedida_IdIsNullable(){
				    return true;
				}
				public Boolean UMedida_IdIsKey(){
				    return false;
				}
				public Integer UMedida_IdLength(){
				    return null;
				}
				public Integer UMedida_IdPrecision(){
				    return null;
				}
				public String UMedida_IdDefault(){
				
					return null;
				
				}
				public String UMedida_IdComment(){
				
				    return "";
				
				}
				public String UMedida_IdPattern(){
				
					return "";
				
				}
				public String UMedida_IdOriginalDbColumnName(){
				
					return "UMedida_Id";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.TViaAdmin_id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.TViaAdmin_id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.UMedida_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TViaAdmin_id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.UMedida_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TViaAdmin_id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.UMedida_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",TFFarmaceutica_Id="+String.valueOf(TFFarmaceutica_Id));
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",TViaAdmin_id="+String.valueOf(TViaAdmin_id));
		sb.append(",FFarmaceutica_Id="+String.valueOf(FFarmaceutica_Id));
		sb.append(",UMedida_Id="+String.valueOf(UMedida_Id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public BigDecimal TFFarmaceutica_Id;

				public BigDecimal getTFFarmaceutica_Id () {
					return this.TFFarmaceutica_Id;
				}

				public Boolean TFFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean TFFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer TFFarmaceutica_IdLength(){
				    return null;
				}
				public Integer TFFarmaceutica_IdPrecision(){
				    return null;
				}
				public String TFFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String TFFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String TFFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String TFFarmaceutica_IdOriginalDbColumnName(){
				
					return "TFFarmaceutica_Id";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal TViaAdmin_id;

				public BigDecimal getTViaAdmin_id () {
					return this.TViaAdmin_id;
				}

				public Boolean TViaAdmin_idIsNullable(){
				    return true;
				}
				public Boolean TViaAdmin_idIsKey(){
				    return false;
				}
				public Integer TViaAdmin_idLength(){
				    return null;
				}
				public Integer TViaAdmin_idPrecision(){
				    return null;
				}
				public String TViaAdmin_idDefault(){
				
					return null;
				
				}
				public String TViaAdmin_idComment(){
				
				    return "";
				
				}
				public String TViaAdmin_idPattern(){
				
					return "";
				
				}
				public String TViaAdmin_idOriginalDbColumnName(){
				
					return "TViaAdmin_id";
				
				}

				
			    public BigDecimal FFarmaceutica_Id;

				public BigDecimal getFFarmaceutica_Id () {
					return this.FFarmaceutica_Id;
				}

				public Boolean FFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean FFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer FFarmaceutica_IdLength(){
				    return null;
				}
				public Integer FFarmaceutica_IdPrecision(){
				    return null;
				}
				public String FFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String FFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String FFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String FFarmaceutica_IdOriginalDbColumnName(){
				
					return "FFarmaceutica_Id";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.TViaAdmin_id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.TViaAdmin_id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TViaAdmin_id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FFarmaceutica_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TViaAdmin_id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FFarmaceutica_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",TFFarmaceutica_Id="+String.valueOf(TFFarmaceutica_Id));
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",TViaAdmin_id="+String.valueOf(TViaAdmin_id));
		sb.append(",FFarmaceutica_Id="+String.valueOf(FFarmaceutica_Id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row27Struct implements routines.system.IPersistableRow<row27Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public BigDecimal TFFarmaceutica_Id;

				public BigDecimal getTFFarmaceutica_Id () {
					return this.TFFarmaceutica_Id;
				}

				public Boolean TFFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean TFFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer TFFarmaceutica_IdLength(){
				    return null;
				}
				public Integer TFFarmaceutica_IdPrecision(){
				    return null;
				}
				public String TFFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String TFFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String TFFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String TFFarmaceutica_IdOriginalDbColumnName(){
				
					return "TFFarmaceutica_Id";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal TViaAdmin_id;

				public BigDecimal getTViaAdmin_id () {
					return this.TViaAdmin_id;
				}

				public Boolean TViaAdmin_idIsNullable(){
				    return true;
				}
				public Boolean TViaAdmin_idIsKey(){
				    return false;
				}
				public Integer TViaAdmin_idLength(){
				    return null;
				}
				public Integer TViaAdmin_idPrecision(){
				    return null;
				}
				public String TViaAdmin_idDefault(){
				
					return null;
				
				}
				public String TViaAdmin_idComment(){
				
				    return "";
				
				}
				public String TViaAdmin_idPattern(){
				
					return "";
				
				}
				public String TViaAdmin_idOriginalDbColumnName(){
				
					return "TViaAdmin_id";
				
				}

				
			    public BigDecimal FFarmaceutica_Id;

				public BigDecimal getFFarmaceutica_Id () {
					return this.FFarmaceutica_Id;
				}

				public Boolean FFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean FFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer FFarmaceutica_IdLength(){
				    return null;
				}
				public Integer FFarmaceutica_IdPrecision(){
				    return null;
				}
				public String FFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String FFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String FFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String FFarmaceutica_IdOriginalDbColumnName(){
				
					return "FFarmaceutica_Id";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.TViaAdmin_id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.TViaAdmin_id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TViaAdmin_id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FFarmaceutica_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TViaAdmin_id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FFarmaceutica_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",TFFarmaceutica_Id="+String.valueOf(TFFarmaceutica_Id));
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",TViaAdmin_id="+String.valueOf(TViaAdmin_id));
		sb.append(",FFarmaceutica_Id="+String.valueOf(FFarmaceutica_Id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row27Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row20Struct implements routines.system.IPersistableRow<row20Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public BigDecimal TFFarmaceutica_Id;

				public BigDecimal getTFFarmaceutica_Id () {
					return this.TFFarmaceutica_Id;
				}

				public Boolean TFFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean TFFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer TFFarmaceutica_IdLength(){
				    return null;
				}
				public Integer TFFarmaceutica_IdPrecision(){
				    return null;
				}
				public String TFFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String TFFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String TFFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String TFFarmaceutica_IdOriginalDbColumnName(){
				
					return "TFFarmaceutica_Id";
				
				}

				
			    public BigDecimal MedGenerico_Id;

				public BigDecimal getMedGenerico_Id () {
					return this.MedGenerico_Id;
				}

				public Boolean MedGenerico_IdIsNullable(){
				    return true;
				}
				public Boolean MedGenerico_IdIsKey(){
				    return false;
				}
				public Integer MedGenerico_IdLength(){
				    return null;
				}
				public Integer MedGenerico_IdPrecision(){
				    return null;
				}
				public String MedGenerico_IdDefault(){
				
					return null;
				
				}
				public String MedGenerico_IdComment(){
				
				    return "";
				
				}
				public String MedGenerico_IdPattern(){
				
					return "";
				
				}
				public String MedGenerico_IdOriginalDbColumnName(){
				
					return "MedGenerico_Id";
				
				}

				
			    public BigDecimal TViaAdmin_id;

				public BigDecimal getTViaAdmin_id () {
					return this.TViaAdmin_id;
				}

				public Boolean TViaAdmin_idIsNullable(){
				    return true;
				}
				public Boolean TViaAdmin_idIsKey(){
				    return false;
				}
				public Integer TViaAdmin_idLength(){
				    return null;
				}
				public Integer TViaAdmin_idPrecision(){
				    return null;
				}
				public String TViaAdmin_idDefault(){
				
					return null;
				
				}
				public String TViaAdmin_idComment(){
				
				    return "";
				
				}
				public String TViaAdmin_idPattern(){
				
					return "";
				
				}
				public String TViaAdmin_idOriginalDbColumnName(){
				
					return "TViaAdmin_id";
				
				}

				
			    public BigDecimal FFarmaceutica_Id;

				public BigDecimal getFFarmaceutica_Id () {
					return this.FFarmaceutica_Id;
				}

				public Boolean FFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean FFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer FFarmaceutica_IdLength(){
				    return null;
				}
				public Integer FFarmaceutica_IdPrecision(){
				    return null;
				}
				public String FFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String FFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String FFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String FFarmaceutica_IdOriginalDbColumnName(){
				
					return "FFarmaceutica_Id";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.TViaAdmin_id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
						this.MedGenerico_Id = (BigDecimal) dis.readObject();
					
						this.TViaAdmin_id = (BigDecimal) dis.readObject();
					
						this.FFarmaceutica_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TViaAdmin_id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.FFarmaceutica_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFFarmaceutica_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MedGenerico_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TViaAdmin_id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.FFarmaceutica_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",TFFarmaceutica_Id="+String.valueOf(TFFarmaceutica_Id));
		sb.append(",MedGenerico_Id="+String.valueOf(MedGenerico_Id));
		sb.append(",TViaAdmin_id="+String.valueOf(TViaAdmin_id));
		sb.append(",FFarmaceutica_Id="+String.valueOf(FFarmaceutica_Id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row20Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				
			    public BigDecimal TFFarmaceutica_Id;

				public BigDecimal getTFFarmaceutica_Id () {
					return this.TFFarmaceutica_Id;
				}

				public Boolean TFFarmaceutica_IdIsNullable(){
				    return true;
				}
				public Boolean TFFarmaceutica_IdIsKey(){
				    return false;
				}
				public Integer TFFarmaceutica_IdLength(){
				    return null;
				}
				public Integer TFFarmaceutica_IdPrecision(){
				    return null;
				}
				public String TFFarmaceutica_IdDefault(){
				
					return null;
				
				}
				public String TFFarmaceutica_IdComment(){
				
				    return "";
				
				}
				public String TFFarmaceutica_IdPattern(){
				
					return "";
				
				}
				public String TFFarmaceutica_IdOriginalDbColumnName(){
				
					return "TFFarmaceutica_Id";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
						this.TFFarmaceutica_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TFFarmaceutica_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFFarmaceutica_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
		sb.append(",TFFarmaceutica_Id="+String.valueOf(TFFarmaceutica_Id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				
			    public BigDecimal ViaAdmin_Id;

				public BigDecimal getViaAdmin_Id () {
					return this.ViaAdmin_Id;
				}

				public Boolean ViaAdmin_IdIsNullable(){
				    return true;
				}
				public Boolean ViaAdmin_IdIsKey(){
				    return false;
				}
				public Integer ViaAdmin_IdLength(){
				    return null;
				}
				public Integer ViaAdmin_IdPrecision(){
				    return null;
				}
				public String ViaAdmin_IdDefault(){
				
					return null;
				
				}
				public String ViaAdmin_IdComment(){
				
				    return "";
				
				}
				public String ViaAdmin_IdPattern(){
				
					return "";
				
				}
				public String ViaAdmin_IdOriginalDbColumnName(){
				
					return "ViaAdmin_Id";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
						this.ViaAdmin_Id = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ViaAdmin_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ViaAdmin_Id);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
		sb.append(",ViaAdmin_Id="+String.valueOf(ViaAdmin_Id));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class next_2Struct implements routines.system.IPersistableRow<next_2Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return null;
				}
				public Integer oViaAdminPrecision(){
				    return null;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return null;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return null;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return null;
				}
				public Integer oNGenericoPrecision(){
				    return null;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return null;
				}
				public Integer oConcentracionPrecision(){
				    return null;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return null;
				}
				public Integer oUnidosisPrecision(){
				    return null;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return null;
				}
				public Integer oUMedidaPrecision(){
				    return null;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return null;
				}
				public Integer oFabricantePrecision(){
				    return null;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return null;
				}
				public Integer oImportadorPrecision(){
				    return null;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return null;
				}
				public Integer StatePrecision(){
				    return null;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String Ins;

				public String getIns () {
					return this.Ins;
				}

				public Boolean InsIsNullable(){
				    return true;
				}
				public Boolean InsIsKey(){
				    return false;
				}
				public Integer InsLength(){
				    return null;
				}
				public Integer InsPrecision(){
				    return null;
				}
				public String InsDefault(){
				
					return null;
				
				}
				public String InsComment(){
				
				    return "";
				
				}
				public String InsPattern(){
				
					return "";
				
				}
				public String InsOriginalDbColumnName(){
				
					return "Ins";
				
				}

				
			    public String _ErrorMessage;

				public String get_ErrorMessage () {
					return this._ErrorMessage;
				}

				public Boolean _ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean _ErrorMessageIsKey(){
				    return false;
				}
				public Integer _ErrorMessageLength(){
				    return null;
				}
				public Integer _ErrorMessagePrecision(){
				    return null;
				}
				public String _ErrorMessageDefault(){
				
					return null;
				
				}
				public String _ErrorMessageComment(){
				
				    return "";
				
				}
				public String _ErrorMessagePattern(){
				
					return "";
				
				}
				public String _ErrorMessageOriginalDbColumnName(){
				
					return "_ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExp_RegInvima;

				public String getFExp_RegInvima () {
					return this.FExp_RegInvima;
				}

				public Boolean FExp_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExp_RegInvimaIsKey(){
				    return false;
				}
				public Integer FExp_RegInvimaLength(){
				    return 15;
				}
				public Integer FExp_RegInvimaPrecision(){
				    return 0;
				}
				public String FExp_RegInvimaDefault(){
				
					return null;
				
				}
				public String FExp_RegInvimaComment(){
				
				    return "";
				
				}
				public String FExp_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExp_RegInvimaOriginalDbColumnName(){
				
					return "FExp_RegInvima";
				
				}

				
			    public String FVen_RegInvima;

				public String getFVen_RegInvima () {
					return this.FVen_RegInvima;
				}

				public Boolean FVen_RegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVen_RegInvimaIsKey(){
				    return false;
				}
				public Integer FVen_RegInvimaLength(){
				    return 15;
				}
				public Integer FVen_RegInvimaPrecision(){
				    return 0;
				}
				public String FVen_RegInvimaDefault(){
				
					return null;
				
				}
				public String FVen_RegInvimaComment(){
				
				    return "";
				
				}
				public String FVen_RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVen_RegInvimaOriginalDbColumnName(){
				
					return "FVen_RegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String Efectos_Posteriores;

				public String getEfectos_Posteriores () {
					return this.Efectos_Posteriores;
				}

				public Boolean Efectos_PosterioresIsNullable(){
				    return true;
				}
				public Boolean Efectos_PosterioresIsKey(){
				    return false;
				}
				public Integer Efectos_PosterioresLength(){
				    return 2000;
				}
				public Integer Efectos_PosterioresPrecision(){
				    return 0;
				}
				public String Efectos_PosterioresDefault(){
				
					return null;
				
				}
				public String Efectos_PosterioresComment(){
				
				    return "";
				
				}
				public String Efectos_PosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Efectos_PosterioresOriginalDbColumnName(){
				
					return "Efectos_Posteriores";
				
				}

				
			    public String Riesgos_Asociados;

				public String getRiesgos_Asociados () {
					return this.Riesgos_Asociados;
				}

				public Boolean Riesgos_AsociadosIsNullable(){
				    return true;
				}
				public Boolean Riesgos_AsociadosIsKey(){
				    return false;
				}
				public Integer Riesgos_AsociadosLength(){
				    return 2000;
				}
				public Integer Riesgos_AsociadosPrecision(){
				    return 0;
				}
				public String Riesgos_AsociadosDefault(){
				
					return null;
				
				}
				public String Riesgos_AsociadosComment(){
				
				    return "";
				
				}
				public String Riesgos_AsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Riesgos_AsociadosOriginalDbColumnName(){
				
					return "Riesgos_Asociados";
				
				}

				
			    public String Dosis_Aplicacion;

				public String getDosis_Aplicacion () {
					return this.Dosis_Aplicacion;
				}

				public Boolean Dosis_AplicacionIsNullable(){
				    return true;
				}
				public Boolean Dosis_AplicacionIsKey(){
				    return false;
				}
				public Integer Dosis_AplicacionLength(){
				    return 500;
				}
				public Integer Dosis_AplicacionPrecision(){
				    return 0;
				}
				public String Dosis_AplicacionDefault(){
				
					return null;
				
				}
				public String Dosis_AplicacionComment(){
				
				    return "";
				
				}
				public String Dosis_AplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Dosis_AplicacionOriginalDbColumnName(){
				
					return "Dosis_Aplicacion";
				
				}

				
			    public String NIT_Fabricante;

				public String getNIT_Fabricante () {
					return this.NIT_Fabricante;
				}

				public Boolean NIT_FabricanteIsNullable(){
				    return true;
				}
				public Boolean NIT_FabricanteIsKey(){
				    return false;
				}
				public Integer NIT_FabricanteLength(){
				    return 100;
				}
				public Integer NIT_FabricantePrecision(){
				    return 0;
				}
				public String NIT_FabricanteDefault(){
				
					return null;
				
				}
				public String NIT_FabricanteComment(){
				
				    return "";
				
				}
				public String NIT_FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_FabricanteOriginalDbColumnName(){
				
					return "NIT_Fabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NIT_Importador;

				public String getNIT_Importador () {
					return this.NIT_Importador;
				}

				public Boolean NIT_ImportadorIsNullable(){
				    return true;
				}
				public Boolean NIT_ImportadorIsKey(){
				    return false;
				}
				public Integer NIT_ImportadorLength(){
				    return 100;
				}
				public Integer NIT_ImportadorPrecision(){
				    return 0;
				}
				public String NIT_ImportadorDefault(){
				
					return null;
				
				}
				public String NIT_ImportadorComment(){
				
				    return "";
				
				}
				public String NIT_ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIT_ImportadorOriginalDbColumnName(){
				
					return "NIT_Importador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.Ins = readString(dis);
					
					this._ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExp_RegInvima = readString(dis);
					
					this.FVen_RegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.Efectos_Posteriores = readString(dis);
					
					this.Riesgos_Asociados = readString(dis);
					
					this.Dosis_Aplicacion = readString(dis);
					
					this.NIT_Fabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NIT_Importador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.Ins,dos);
					
					// String
				
						writeString(this._ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExp_RegInvima,dos);
					
					// String
				
						writeString(this.FVen_RegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.Efectos_Posteriores,dos);
					
					// String
				
						writeString(this.Riesgos_Asociados,dos);
					
					// String
				
						writeString(this.Dosis_Aplicacion,dos);
					
					// String
				
						writeString(this.NIT_Fabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NIT_Importador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",Ins="+Ins);
		sb.append(",_ErrorMessage="+_ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExp_RegInvima="+FExp_RegInvima);
		sb.append(",FVen_RegInvima="+FVen_RegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",Efectos_Posteriores="+Efectos_Posteriores);
		sb.append(",Riesgos_Asociados="+Riesgos_Asociados);
		sb.append(",Dosis_Aplicacion="+Dosis_Aplicacion);
		sb.append(",NIT_Fabricante="+NIT_Fabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NIT_Importador="+NIT_Importador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(next_2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return 200;
				}
				public Integer oViaAdminPrecision(){
				    return 0;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return 100;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return 0;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return 400;
				}
				public Integer oNGenericoPrecision(){
				    return 0;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return 50;
				}
				public Integer oConcentracionPrecision(){
				    return 0;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return 2;
				}
				public Integer oUnidosisPrecision(){
				    return 0;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return 100;
				}
				public Integer oUMedidaPrecision(){
				    return 0;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return 500;
				}
				public Integer oFabricantePrecision(){
				    return 0;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return 500;
				}
				public Integer oImportadorPrecision(){
				    return 0;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return 50;
				}
				public Integer StatePrecision(){
				    return 0;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String ErrorMessage;

				public String getErrorMessage () {
					return this.ErrorMessage;
				}

				public Boolean ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean ErrorMessageIsKey(){
				    return false;
				}
				public Integer ErrorMessageLength(){
				    return 50;
				}
				public Integer ErrorMessagePrecision(){
				    return 0;
				}
				public String ErrorMessageDefault(){
				
					return null;
				
				}
				public String ErrorMessageComment(){
				
				    return "";
				
				}
				public String ErrorMessagePattern(){
				
					return "";
				
				}
				public String ErrorMessageOriginalDbColumnName(){
				
					return "ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExpRegInvima;

				public String getFExpRegInvima () {
					return this.FExpRegInvima;
				}

				public Boolean FExpRegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExpRegInvimaIsKey(){
				    return false;
				}
				public Integer FExpRegInvimaLength(){
				    return 15;
				}
				public Integer FExpRegInvimaPrecision(){
				    return 0;
				}
				public String FExpRegInvimaDefault(){
				
					return null;
				
				}
				public String FExpRegInvimaComment(){
				
				    return "";
				
				}
				public String FExpRegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExpRegInvimaOriginalDbColumnName(){
				
					return "FExpRegInvima";
				
				}

				
			    public String FVenRegInvima;

				public String getFVenRegInvima () {
					return this.FVenRegInvima;
				}

				public Boolean FVenRegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVenRegInvimaIsKey(){
				    return false;
				}
				public Integer FVenRegInvimaLength(){
				    return 15;
				}
				public Integer FVenRegInvimaPrecision(){
				    return 0;
				}
				public String FVenRegInvimaDefault(){
				
					return null;
				
				}
				public String FVenRegInvimaComment(){
				
				    return "";
				
				}
				public String FVenRegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVenRegInvimaOriginalDbColumnName(){
				
					return "FVenRegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String EfectosPosteriores;

				public String getEfectosPosteriores () {
					return this.EfectosPosteriores;
				}

				public Boolean EfectosPosterioresIsNullable(){
				    return true;
				}
				public Boolean EfectosPosterioresIsKey(){
				    return false;
				}
				public Integer EfectosPosterioresLength(){
				    return 2000;
				}
				public Integer EfectosPosterioresPrecision(){
				    return 0;
				}
				public String EfectosPosterioresDefault(){
				
					return null;
				
				}
				public String EfectosPosterioresComment(){
				
				    return "";
				
				}
				public String EfectosPosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EfectosPosterioresOriginalDbColumnName(){
				
					return "EfectosPosteriores";
				
				}

				
			    public String RiesgosAsociados;

				public String getRiesgosAsociados () {
					return this.RiesgosAsociados;
				}

				public Boolean RiesgosAsociadosIsNullable(){
				    return true;
				}
				public Boolean RiesgosAsociadosIsKey(){
				    return false;
				}
				public Integer RiesgosAsociadosLength(){
				    return 2000;
				}
				public Integer RiesgosAsociadosPrecision(){
				    return 0;
				}
				public String RiesgosAsociadosDefault(){
				
					return null;
				
				}
				public String RiesgosAsociadosComment(){
				
				    return "";
				
				}
				public String RiesgosAsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RiesgosAsociadosOriginalDbColumnName(){
				
					return "RiesgosAsociados";
				
				}

				
			    public String DosisAplicacion;

				public String getDosisAplicacion () {
					return this.DosisAplicacion;
				}

				public Boolean DosisAplicacionIsNullable(){
				    return true;
				}
				public Boolean DosisAplicacionIsKey(){
				    return false;
				}
				public Integer DosisAplicacionLength(){
				    return 500;
				}
				public Integer DosisAplicacionPrecision(){
				    return 0;
				}
				public String DosisAplicacionDefault(){
				
					return null;
				
				}
				public String DosisAplicacionComment(){
				
				    return "";
				
				}
				public String DosisAplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DosisAplicacionOriginalDbColumnName(){
				
					return "DosisAplicacion";
				
				}

				
			    public String NITFabricante;

				public String getNITFabricante () {
					return this.NITFabricante;
				}

				public Boolean NITFabricanteIsNullable(){
				    return true;
				}
				public Boolean NITFabricanteIsKey(){
				    return false;
				}
				public Integer NITFabricanteLength(){
				    return 100;
				}
				public Integer NITFabricantePrecision(){
				    return 0;
				}
				public String NITFabricanteDefault(){
				
					return null;
				
				}
				public String NITFabricanteComment(){
				
				    return "";
				
				}
				public String NITFabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NITFabricanteOriginalDbColumnName(){
				
					return "NITFabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NITImportador;

				public String getNITImportador () {
					return this.NITImportador;
				}

				public Boolean NITImportadorIsNullable(){
				    return true;
				}
				public Boolean NITImportadorIsKey(){
				    return false;
				}
				public Integer NITImportadorLength(){
				    return 100;
				}
				public Integer NITImportadorPrecision(){
				    return 0;
				}
				public String NITImportadorDefault(){
				
					return null;
				
				}
				public String NITImportadorComment(){
				
				    return "";
				
				}
				public String NITImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NITImportadorOriginalDbColumnName(){
				
					return "NITImportador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExpRegInvima = readString(dis);
					
					this.FVenRegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.EfectosPosteriores = readString(dis);
					
					this.RiesgosAsociados = readString(dis);
					
					this.DosisAplicacion = readString(dis);
					
					this.NITFabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NITImportador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExpRegInvima = readString(dis);
					
					this.FVenRegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.EfectosPosteriores = readString(dis);
					
					this.RiesgosAsociados = readString(dis);
					
					this.DosisAplicacion = readString(dis);
					
					this.NITFabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NITImportador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExpRegInvima,dos);
					
					// String
				
						writeString(this.FVenRegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.EfectosPosteriores,dos);
					
					// String
				
						writeString(this.RiesgosAsociados,dos);
					
					// String
				
						writeString(this.DosisAplicacion,dos);
					
					// String
				
						writeString(this.NITFabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NITImportador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExpRegInvima,dos);
					
					// String
				
						writeString(this.FVenRegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.EfectosPosteriores,dos);
					
					// String
				
						writeString(this.RiesgosAsociados,dos);
					
					// String
				
						writeString(this.DosisAplicacion,dos);
					
					// String
				
						writeString(this.NITFabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NITImportador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",ErrorMessage="+ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExpRegInvima="+FExpRegInvima);
		sb.append(",FVenRegInvima="+FVenRegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",EfectosPosteriores="+EfectosPosteriores);
		sb.append(",RiesgosAsociados="+RiesgosAsociados);
		sb.append(",DosisAplicacion="+DosisAplicacion);
		sb.append(",NITFabricante="+NITFabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NITImportador="+NITImportador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tOracleInput_10Struct implements routines.system.IPersistableRow<after_tOracleInput_10Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String oViaAdmin;

				public String getOViaAdmin () {
					return this.oViaAdmin;
				}

				public Boolean oViaAdminIsNullable(){
				    return true;
				}
				public Boolean oViaAdminIsKey(){
				    return false;
				}
				public Integer oViaAdminLength(){
				    return 200;
				}
				public Integer oViaAdminPrecision(){
				    return 0;
				}
				public String oViaAdminDefault(){
				
					return null;
				
				}
				public String oViaAdminComment(){
				
				    return "";
				
				}
				public String oViaAdminPattern(){
				
					return "";
				
				}
				public String oViaAdminOriginalDbColumnName(){
				
					return "oViaAdmin";
				
				}

				
			    public String oFFarmaceutica;

				public String getOFFarmaceutica () {
					return this.oFFarmaceutica;
				}

				public Boolean oFFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean oFFarmaceuticaIsKey(){
				    return false;
				}
				public Integer oFFarmaceuticaLength(){
				    return 100;
				}
				public Integer oFFarmaceuticaPrecision(){
				    return 0;
				}
				public String oFFarmaceuticaDefault(){
				
					return null;
				
				}
				public String oFFarmaceuticaComment(){
				
				    return "";
				
				}
				public String oFFarmaceuticaPattern(){
				
					return "";
				
				}
				public String oFFarmaceuticaOriginalDbColumnName(){
				
					return "oFFarmaceutica";
				
				}

				
			    public String oNGenerico;

				public String getONGenerico () {
					return this.oNGenerico;
				}

				public Boolean oNGenericoIsNullable(){
				    return true;
				}
				public Boolean oNGenericoIsKey(){
				    return false;
				}
				public Integer oNGenericoLength(){
				    return 400;
				}
				public Integer oNGenericoPrecision(){
				    return 0;
				}
				public String oNGenericoDefault(){
				
					return null;
				
				}
				public String oNGenericoComment(){
				
				    return "";
				
				}
				public String oNGenericoPattern(){
				
					return "";
				
				}
				public String oNGenericoOriginalDbColumnName(){
				
					return "oNGenerico";
				
				}

				
			    public String oConcentracion;

				public String getOConcentracion () {
					return this.oConcentracion;
				}

				public Boolean oConcentracionIsNullable(){
				    return true;
				}
				public Boolean oConcentracionIsKey(){
				    return false;
				}
				public Integer oConcentracionLength(){
				    return 50;
				}
				public Integer oConcentracionPrecision(){
				    return 0;
				}
				public String oConcentracionDefault(){
				
					return null;
				
				}
				public String oConcentracionComment(){
				
				    return "";
				
				}
				public String oConcentracionPattern(){
				
					return "";
				
				}
				public String oConcentracionOriginalDbColumnName(){
				
					return "oConcentracion";
				
				}

				
			    public String oUnidosis;

				public String getOUnidosis () {
					return this.oUnidosis;
				}

				public Boolean oUnidosisIsNullable(){
				    return true;
				}
				public Boolean oUnidosisIsKey(){
				    return false;
				}
				public Integer oUnidosisLength(){
				    return 2;
				}
				public Integer oUnidosisPrecision(){
				    return 0;
				}
				public String oUnidosisDefault(){
				
					return null;
				
				}
				public String oUnidosisComment(){
				
				    return "";
				
				}
				public String oUnidosisPattern(){
				
					return "";
				
				}
				public String oUnidosisOriginalDbColumnName(){
				
					return "oUnidosis";
				
				}

				
			    public String oUMedida;

				public String getOUMedida () {
					return this.oUMedida;
				}

				public Boolean oUMedidaIsNullable(){
				    return true;
				}
				public Boolean oUMedidaIsKey(){
				    return false;
				}
				public Integer oUMedidaLength(){
				    return 100;
				}
				public Integer oUMedidaPrecision(){
				    return 0;
				}
				public String oUMedidaDefault(){
				
					return null;
				
				}
				public String oUMedidaComment(){
				
				    return "";
				
				}
				public String oUMedidaPattern(){
				
					return "";
				
				}
				public String oUMedidaOriginalDbColumnName(){
				
					return "oUMedida";
				
				}

				
			    public String oFabricante;

				public String getOFabricante () {
					return this.oFabricante;
				}

				public Boolean oFabricanteIsNullable(){
				    return true;
				}
				public Boolean oFabricanteIsKey(){
				    return false;
				}
				public Integer oFabricanteLength(){
				    return 500;
				}
				public Integer oFabricantePrecision(){
				    return 0;
				}
				public String oFabricanteDefault(){
				
					return null;
				
				}
				public String oFabricanteComment(){
				
				    return "";
				
				}
				public String oFabricantePattern(){
				
					return "";
				
				}
				public String oFabricanteOriginalDbColumnName(){
				
					return "oFabricante";
				
				}

				
			    public String oImportador;

				public String getOImportador () {
					return this.oImportador;
				}

				public Boolean oImportadorIsNullable(){
				    return true;
				}
				public Boolean oImportadorIsKey(){
				    return false;
				}
				public Integer oImportadorLength(){
				    return 500;
				}
				public Integer oImportadorPrecision(){
				    return 0;
				}
				public String oImportadorDefault(){
				
					return null;
				
				}
				public String oImportadorComment(){
				
				    return "";
				
				}
				public String oImportadorPattern(){
				
					return "";
				
				}
				public String oImportadorOriginalDbColumnName(){
				
					return "oImportador";
				
				}

				
			    public String State;

				public String getState () {
					return this.State;
				}

				public Boolean StateIsNullable(){
				    return true;
				}
				public Boolean StateIsKey(){
				    return false;
				}
				public Integer StateLength(){
				    return 50;
				}
				public Integer StatePrecision(){
				    return 0;
				}
				public String StateDefault(){
				
					return null;
				
				}
				public String StateComment(){
				
				    return "";
				
				}
				public String StatePattern(){
				
					return "";
				
				}
				public String StateOriginalDbColumnName(){
				
					return "State";
				
				}

				
			    public String ErrorMessage;

				public String getErrorMessage () {
					return this.ErrorMessage;
				}

				public Boolean ErrorMessageIsNullable(){
				    return true;
				}
				public Boolean ErrorMessageIsKey(){
				    return false;
				}
				public Integer ErrorMessageLength(){
				    return 50;
				}
				public Integer ErrorMessagePrecision(){
				    return 0;
				}
				public String ErrorMessageDefault(){
				
					return null;
				
				}
				public String ErrorMessageComment(){
				
				    return "";
				
				}
				public String ErrorMessagePattern(){
				
					return "";
				
				}
				public String ErrorMessageOriginalDbColumnName(){
				
					return "ErrorMessage";
				
				}

				
			    public String CodBarras;

				public String getCodBarras () {
					return this.CodBarras;
				}

				public Boolean CodBarrasIsNullable(){
				    return true;
				}
				public Boolean CodBarrasIsKey(){
				    return false;
				}
				public Integer CodBarrasLength(){
				    return 20;
				}
				public Integer CodBarrasPrecision(){
				    return 0;
				}
				public String CodBarrasDefault(){
				
					return null;
				
				}
				public String CodBarrasComment(){
				
				    return "";
				
				}
				public String CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CodBarrasOriginalDbColumnName(){
				
					return "CodBarras";
				
				}

				
			    public String NComercial;

				public String getNComercial () {
					return this.NComercial;
				}

				public Boolean NComercialIsNullable(){
				    return true;
				}
				public Boolean NComercialIsKey(){
				    return false;
				}
				public Integer NComercialLength(){
				    return 150;
				}
				public Integer NComercialPrecision(){
				    return 0;
				}
				public String NComercialDefault(){
				
					return null;
				
				}
				public String NComercialComment(){
				
				    return "";
				
				}
				public String NComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NComercialOriginalDbColumnName(){
				
					return "NComercial";
				
				}

				
			    public String PComercial;

				public String getPComercial () {
					return this.PComercial;
				}

				public Boolean PComercialIsNullable(){
				    return true;
				}
				public Boolean PComercialIsKey(){
				    return false;
				}
				public Integer PComercialLength(){
				    return 500;
				}
				public Integer PComercialPrecision(){
				    return 0;
				}
				public String PComercialDefault(){
				
					return null;
				
				}
				public String PComercialComment(){
				
				    return "";
				
				}
				public String PComercialPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PComercialOriginalDbColumnName(){
				
					return "PComercial";
				
				}

				
			    public String ViaAdmin;

				public String getViaAdmin () {
					return this.ViaAdmin;
				}

				public Boolean ViaAdminIsNullable(){
				    return true;
				}
				public Boolean ViaAdminIsKey(){
				    return false;
				}
				public Integer ViaAdminLength(){
				    return 200;
				}
				public Integer ViaAdminPrecision(){
				    return 0;
				}
				public String ViaAdminDefault(){
				
					return null;
				
				}
				public String ViaAdminComment(){
				
				    return "";
				
				}
				public String ViaAdminPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ViaAdminOriginalDbColumnName(){
				
					return "ViaAdmin";
				
				}

				
			    public String FFarmaceutica;

				public String getFFarmaceutica () {
					return this.FFarmaceutica;
				}

				public Boolean FFarmaceuticaIsNullable(){
				    return true;
				}
				public Boolean FFarmaceuticaIsKey(){
				    return false;
				}
				public Integer FFarmaceuticaLength(){
				    return 100;
				}
				public Integer FFarmaceuticaPrecision(){
				    return 0;
				}
				public String FFarmaceuticaDefault(){
				
					return null;
				
				}
				public String FFarmaceuticaComment(){
				
				    return "";
				
				}
				public String FFarmaceuticaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FFarmaceuticaOriginalDbColumnName(){
				
					return "FFarmaceutica";
				
				}

				
			    public String NGenerico;

				public String getNGenerico () {
					return this.NGenerico;
				}

				public Boolean NGenericoIsNullable(){
				    return true;
				}
				public Boolean NGenericoIsKey(){
				    return false;
				}
				public Integer NGenericoLength(){
				    return 400;
				}
				public Integer NGenericoPrecision(){
				    return 0;
				}
				public String NGenericoDefault(){
				
					return null;
				
				}
				public String NGenericoComment(){
				
				    return "";
				
				}
				public String NGenericoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NGenericoOriginalDbColumnName(){
				
					return "NGenerico";
				
				}

				
			    public String Concentracion;

				public String getConcentracion () {
					return this.Concentracion;
				}

				public Boolean ConcentracionIsNullable(){
				    return true;
				}
				public Boolean ConcentracionIsKey(){
				    return false;
				}
				public Integer ConcentracionLength(){
				    return 50;
				}
				public Integer ConcentracionPrecision(){
				    return 0;
				}
				public String ConcentracionDefault(){
				
					return null;
				
				}
				public String ConcentracionComment(){
				
				    return "";
				
				}
				public String ConcentracionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConcentracionOriginalDbColumnName(){
				
					return "Concentracion";
				
				}

				
			    public String Unidosis;

				public String getUnidosis () {
					return this.Unidosis;
				}

				public Boolean UnidosisIsNullable(){
				    return true;
				}
				public Boolean UnidosisIsKey(){
				    return false;
				}
				public Integer UnidosisLength(){
				    return 2;
				}
				public Integer UnidosisPrecision(){
				    return 0;
				}
				public String UnidosisDefault(){
				
					return null;
				
				}
				public String UnidosisComment(){
				
				    return "";
				
				}
				public String UnidosisPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UnidosisOriginalDbColumnName(){
				
					return "Unidosis";
				
				}

				
			    public String UMedida;

				public String getUMedida () {
					return this.UMedida;
				}

				public Boolean UMedidaIsNullable(){
				    return true;
				}
				public Boolean UMedidaIsKey(){
				    return false;
				}
				public Integer UMedidaLength(){
				    return 100;
				}
				public Integer UMedidaPrecision(){
				    return 0;
				}
				public String UMedidaDefault(){
				
					return null;
				
				}
				public String UMedidaComment(){
				
				    return "";
				
				}
				public String UMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UMedidaOriginalDbColumnName(){
				
					return "UMedida";
				
				}

				
			    public String CantUMedida;

				public String getCantUMedida () {
					return this.CantUMedida;
				}

				public Boolean CantUMedidaIsNullable(){
				    return true;
				}
				public Boolean CantUMedidaIsKey(){
				    return false;
				}
				public Integer CantUMedidaLength(){
				    return 10;
				}
				public Integer CantUMedidaPrecision(){
				    return 0;
				}
				public String CantUMedidaDefault(){
				
					return null;
				
				}
				public String CantUMedidaComment(){
				
				    return "";
				
				}
				public String CantUMedidaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantUMedidaOriginalDbColumnName(){
				
					return "CantUMedida";
				
				}

				
			    public String CantMinima;

				public String getCantMinima () {
					return this.CantMinima;
				}

				public Boolean CantMinimaIsNullable(){
				    return true;
				}
				public Boolean CantMinimaIsKey(){
				    return false;
				}
				public Integer CantMinimaLength(){
				    return 10;
				}
				public Integer CantMinimaPrecision(){
				    return 0;
				}
				public String CantMinimaDefault(){
				
					return null;
				
				}
				public String CantMinimaComment(){
				
				    return "";
				
				}
				public String CantMinimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantMinimaOriginalDbColumnName(){
				
					return "CantMinima";
				
				}

				
			    public String RegInvima;

				public String getRegInvima () {
					return this.RegInvima;
				}

				public Boolean RegInvimaIsNullable(){
				    return true;
				}
				public Boolean RegInvimaIsKey(){
				    return false;
				}
				public Integer RegInvimaLength(){
				    return 50;
				}
				public Integer RegInvimaPrecision(){
				    return 0;
				}
				public String RegInvimaDefault(){
				
					return null;
				
				}
				public String RegInvimaComment(){
				
				    return "";
				
				}
				public String RegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RegInvimaOriginalDbColumnName(){
				
					return "RegInvima";
				
				}

				
			    public String FExpRegInvima;

				public String getFExpRegInvima () {
					return this.FExpRegInvima;
				}

				public Boolean FExpRegInvimaIsNullable(){
				    return true;
				}
				public Boolean FExpRegInvimaIsKey(){
				    return false;
				}
				public Integer FExpRegInvimaLength(){
				    return 15;
				}
				public Integer FExpRegInvimaPrecision(){
				    return 0;
				}
				public String FExpRegInvimaDefault(){
				
					return null;
				
				}
				public String FExpRegInvimaComment(){
				
				    return "";
				
				}
				public String FExpRegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FExpRegInvimaOriginalDbColumnName(){
				
					return "FExpRegInvima";
				
				}

				
			    public String FVenRegInvima;

				public String getFVenRegInvima () {
					return this.FVenRegInvima;
				}

				public Boolean FVenRegInvimaIsNullable(){
				    return true;
				}
				public Boolean FVenRegInvimaIsKey(){
				    return false;
				}
				public Integer FVenRegInvimaLength(){
				    return 15;
				}
				public Integer FVenRegInvimaPrecision(){
				    return 0;
				}
				public String FVenRegInvimaDefault(){
				
					return null;
				
				}
				public String FVenRegInvimaComment(){
				
				    return "";
				
				}
				public String FVenRegInvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVenRegInvimaOriginalDbColumnName(){
				
					return "FVenRegInvima";
				
				}

				
			    public String FActivoCum;

				public String getFActivoCum () {
					return this.FActivoCum;
				}

				public Boolean FActivoCumIsNullable(){
				    return true;
				}
				public Boolean FActivoCumIsKey(){
				    return false;
				}
				public Integer FActivoCumLength(){
				    return 15;
				}
				public Integer FActivoCumPrecision(){
				    return 0;
				}
				public String FActivoCumDefault(){
				
					return null;
				
				}
				public String FActivoCumComment(){
				
				    return "";
				
				}
				public String FActivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FActivoCumOriginalDbColumnName(){
				
					return "FActivoCum";
				
				}

				
			    public String FInactivoCum;

				public String getFInactivoCum () {
					return this.FInactivoCum;
				}

				public Boolean FInactivoCumIsNullable(){
				    return true;
				}
				public Boolean FInactivoCumIsKey(){
				    return false;
				}
				public Integer FInactivoCumLength(){
				    return 15;
				}
				public Integer FInactivoCumPrecision(){
				    return 0;
				}
				public String FInactivoCumDefault(){
				
					return null;
				
				}
				public String FInactivoCumComment(){
				
				    return "";
				
				}
				public String FInactivoCumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FInactivoCumOriginalDbColumnName(){
				
					return "FInactivoCum";
				
				}

				
			    public String Expediente;

				public String getExpediente () {
					return this.Expediente;
				}

				public Boolean ExpedienteIsNullable(){
				    return true;
				}
				public Boolean ExpedienteIsKey(){
				    return false;
				}
				public Integer ExpedienteLength(){
				    return 25;
				}
				public Integer ExpedientePrecision(){
				    return 0;
				}
				public String ExpedienteDefault(){
				
					return null;
				
				}
				public String ExpedienteComment(){
				
				    return "";
				
				}
				public String ExpedientePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ExpedienteOriginalDbColumnName(){
				
					return "Expediente";
				
				}

				
			    public String Consecutivo;

				public String getConsecutivo () {
					return this.Consecutivo;
				}

				public Boolean ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean ConsecutivoIsKey(){
				    return false;
				}
				public Integer ConsecutivoLength(){
				    return 10;
				}
				public Integer ConsecutivoPrecision(){
				    return 0;
				}
				public String ConsecutivoDefault(){
				
					return null;
				
				}
				public String ConsecutivoComment(){
				
				    return "";
				
				}
				public String ConsecutivoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ConsecutivoOriginalDbColumnName(){
				
					return "Consecutivo";
				
				}

				
			    public String Cum;

				public String getCum () {
					return this.Cum;
				}

				public Boolean CumIsNullable(){
				    return true;
				}
				public Boolean CumIsKey(){
				    return false;
				}
				public Integer CumLength(){
				    return 35;
				}
				public Integer CumPrecision(){
				    return 0;
				}
				public String CumDefault(){
				
					return null;
				
				}
				public String CumComment(){
				
				    return "";
				
				}
				public String CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CumOriginalDbColumnName(){
				
					return "Cum";
				
				}

				
			    public String Origen;

				public String getOrigen () {
					return this.Origen;
				}

				public Boolean OrigenIsNullable(){
				    return true;
				}
				public Boolean OrigenIsKey(){
				    return false;
				}
				public Integer OrigenLength(){
				    return 500;
				}
				public Integer OrigenPrecision(){
				    return 0;
				}
				public String OrigenDefault(){
				
					return null;
				
				}
				public String OrigenComment(){
				
				    return "";
				
				}
				public String OrigenPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String OrigenOriginalDbColumnName(){
				
					return "Origen";
				
				}

				
			    public String Caracteristicas;

				public String getCaracteristicas () {
					return this.Caracteristicas;
				}

				public Boolean CaracteristicasIsNullable(){
				    return true;
				}
				public Boolean CaracteristicasIsKey(){
				    return false;
				}
				public Integer CaracteristicasLength(){
				    return 2000;
				}
				public Integer CaracteristicasPrecision(){
				    return 0;
				}
				public String CaracteristicasDefault(){
				
					return null;
				
				}
				public String CaracteristicasComment(){
				
				    return "";
				
				}
				public String CaracteristicasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CaracteristicasOriginalDbColumnName(){
				
					return "Caracteristicas";
				
				}

				
			    public String Contraindicaciones;

				public String getContraindicaciones () {
					return this.Contraindicaciones;
				}

				public Boolean ContraindicacionesIsNullable(){
				    return true;
				}
				public Boolean ContraindicacionesIsKey(){
				    return false;
				}
				public Integer ContraindicacionesLength(){
				    return 2000;
				}
				public Integer ContraindicacionesPrecision(){
				    return 0;
				}
				public String ContraindicacionesDefault(){
				
					return null;
				
				}
				public String ContraindicacionesComment(){
				
				    return "";
				
				}
				public String ContraindicacionesPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ContraindicacionesOriginalDbColumnName(){
				
					return "Contraindicaciones";
				
				}

				
			    public String EfectosPosteriores;

				public String getEfectosPosteriores () {
					return this.EfectosPosteriores;
				}

				public Boolean EfectosPosterioresIsNullable(){
				    return true;
				}
				public Boolean EfectosPosterioresIsKey(){
				    return false;
				}
				public Integer EfectosPosterioresLength(){
				    return 2000;
				}
				public Integer EfectosPosterioresPrecision(){
				    return 0;
				}
				public String EfectosPosterioresDefault(){
				
					return null;
				
				}
				public String EfectosPosterioresComment(){
				
				    return "";
				
				}
				public String EfectosPosterioresPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String EfectosPosterioresOriginalDbColumnName(){
				
					return "EfectosPosteriores";
				
				}

				
			    public String RiesgosAsociados;

				public String getRiesgosAsociados () {
					return this.RiesgosAsociados;
				}

				public Boolean RiesgosAsociadosIsNullable(){
				    return true;
				}
				public Boolean RiesgosAsociadosIsKey(){
				    return false;
				}
				public Integer RiesgosAsociadosLength(){
				    return 2000;
				}
				public Integer RiesgosAsociadosPrecision(){
				    return 0;
				}
				public String RiesgosAsociadosDefault(){
				
					return null;
				
				}
				public String RiesgosAsociadosComment(){
				
				    return "";
				
				}
				public String RiesgosAsociadosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RiesgosAsociadosOriginalDbColumnName(){
				
					return "RiesgosAsociados";
				
				}

				
			    public String DosisAplicacion;

				public String getDosisAplicacion () {
					return this.DosisAplicacion;
				}

				public Boolean DosisAplicacionIsNullable(){
				    return true;
				}
				public Boolean DosisAplicacionIsKey(){
				    return false;
				}
				public Integer DosisAplicacionLength(){
				    return 500;
				}
				public Integer DosisAplicacionPrecision(){
				    return 0;
				}
				public String DosisAplicacionDefault(){
				
					return null;
				
				}
				public String DosisAplicacionComment(){
				
				    return "";
				
				}
				public String DosisAplicacionPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DosisAplicacionOriginalDbColumnName(){
				
					return "DosisAplicacion";
				
				}

				
			    public String NITFabricante;

				public String getNITFabricante () {
					return this.NITFabricante;
				}

				public Boolean NITFabricanteIsNullable(){
				    return true;
				}
				public Boolean NITFabricanteIsKey(){
				    return false;
				}
				public Integer NITFabricanteLength(){
				    return 100;
				}
				public Integer NITFabricantePrecision(){
				    return 0;
				}
				public String NITFabricanteDefault(){
				
					return null;
				
				}
				public String NITFabricanteComment(){
				
				    return "";
				
				}
				public String NITFabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NITFabricanteOriginalDbColumnName(){
				
					return "NITFabricante";
				
				}

				
			    public String Fabricante;

				public String getFabricante () {
					return this.Fabricante;
				}

				public Boolean FabricanteIsNullable(){
				    return true;
				}
				public Boolean FabricanteIsKey(){
				    return false;
				}
				public Integer FabricanteLength(){
				    return 500;
				}
				public Integer FabricantePrecision(){
				    return 0;
				}
				public String FabricanteDefault(){
				
					return null;
				
				}
				public String FabricanteComment(){
				
				    return "";
				
				}
				public String FabricantePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FabricanteOriginalDbColumnName(){
				
					return "Fabricante";
				
				}

				
			    public String NITImportador;

				public String getNITImportador () {
					return this.NITImportador;
				}

				public Boolean NITImportadorIsNullable(){
				    return true;
				}
				public Boolean NITImportadorIsKey(){
				    return false;
				}
				public Integer NITImportadorLength(){
				    return 100;
				}
				public Integer NITImportadorPrecision(){
				    return 0;
				}
				public String NITImportadorDefault(){
				
					return null;
				
				}
				public String NITImportadorComment(){
				
				    return "";
				
				}
				public String NITImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NITImportadorOriginalDbColumnName(){
				
					return "NITImportador";
				
				}

				
			    public String Importador;

				public String getImportador () {
					return this.Importador;
				}

				public Boolean ImportadorIsNullable(){
				    return true;
				}
				public Boolean ImportadorIsKey(){
				    return false;
				}
				public Integer ImportadorLength(){
				    return 500;
				}
				public Integer ImportadorPrecision(){
				    return 0;
				}
				public String ImportadorDefault(){
				
					return null;
				
				}
				public String ImportadorComment(){
				
				    return "";
				
				}
				public String ImportadorPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ImportadorOriginalDbColumnName(){
				
					return "Importador";
				
				}

				
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return true;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 10;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return true;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 10;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExpRegInvima = readString(dis);
					
					this.FVenRegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.EfectosPosteriores = readString(dis);
					
					this.RiesgosAsociados = readString(dis);
					
					this.DosisAplicacion = readString(dis);
					
					this.NITFabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NITImportador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.oViaAdmin = readString(dis);
					
					this.oFFarmaceutica = readString(dis);
					
					this.oNGenerico = readString(dis);
					
					this.oConcentracion = readString(dis);
					
					this.oUnidosis = readString(dis);
					
					this.oUMedida = readString(dis);
					
					this.oFabricante = readString(dis);
					
					this.oImportador = readString(dis);
					
					this.State = readString(dis);
					
					this.ErrorMessage = readString(dis);
					
					this.CodBarras = readString(dis);
					
					this.NComercial = readString(dis);
					
					this.PComercial = readString(dis);
					
					this.ViaAdmin = readString(dis);
					
					this.FFarmaceutica = readString(dis);
					
					this.NGenerico = readString(dis);
					
					this.Concentracion = readString(dis);
					
					this.Unidosis = readString(dis);
					
					this.UMedida = readString(dis);
					
					this.CantUMedida = readString(dis);
					
					this.CantMinima = readString(dis);
					
					this.RegInvima = readString(dis);
					
					this.FExpRegInvima = readString(dis);
					
					this.FVenRegInvima = readString(dis);
					
					this.FActivoCum = readString(dis);
					
					this.FInactivoCum = readString(dis);
					
					this.Expediente = readString(dis);
					
					this.Consecutivo = readString(dis);
					
					this.Cum = readString(dis);
					
					this.Origen = readString(dis);
					
					this.Caracteristicas = readString(dis);
					
					this.Contraindicaciones = readString(dis);
					
					this.EfectosPosteriores = readString(dis);
					
					this.RiesgosAsociados = readString(dis);
					
					this.DosisAplicacion = readString(dis);
					
					this.NITFabricante = readString(dis);
					
					this.Fabricante = readString(dis);
					
					this.NITImportador = readString(dis);
					
					this.Importador = readString(dis);
					
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExpRegInvima,dos);
					
					// String
				
						writeString(this.FVenRegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.EfectosPosteriores,dos);
					
					// String
				
						writeString(this.RiesgosAsociados,dos);
					
					// String
				
						writeString(this.DosisAplicacion,dos);
					
					// String
				
						writeString(this.NITFabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NITImportador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.oViaAdmin,dos);
					
					// String
				
						writeString(this.oFFarmaceutica,dos);
					
					// String
				
						writeString(this.oNGenerico,dos);
					
					// String
				
						writeString(this.oConcentracion,dos);
					
					// String
				
						writeString(this.oUnidosis,dos);
					
					// String
				
						writeString(this.oUMedida,dos);
					
					// String
				
						writeString(this.oFabricante,dos);
					
					// String
				
						writeString(this.oImportador,dos);
					
					// String
				
						writeString(this.State,dos);
					
					// String
				
						writeString(this.ErrorMessage,dos);
					
					// String
				
						writeString(this.CodBarras,dos);
					
					// String
				
						writeString(this.NComercial,dos);
					
					// String
				
						writeString(this.PComercial,dos);
					
					// String
				
						writeString(this.ViaAdmin,dos);
					
					// String
				
						writeString(this.FFarmaceutica,dos);
					
					// String
				
						writeString(this.NGenerico,dos);
					
					// String
				
						writeString(this.Concentracion,dos);
					
					// String
				
						writeString(this.Unidosis,dos);
					
					// String
				
						writeString(this.UMedida,dos);
					
					// String
				
						writeString(this.CantUMedida,dos);
					
					// String
				
						writeString(this.CantMinima,dos);
					
					// String
				
						writeString(this.RegInvima,dos);
					
					// String
				
						writeString(this.FExpRegInvima,dos);
					
					// String
				
						writeString(this.FVenRegInvima,dos);
					
					// String
				
						writeString(this.FActivoCum,dos);
					
					// String
				
						writeString(this.FInactivoCum,dos);
					
					// String
				
						writeString(this.Expediente,dos);
					
					// String
				
						writeString(this.Consecutivo,dos);
					
					// String
				
						writeString(this.Cum,dos);
					
					// String
				
						writeString(this.Origen,dos);
					
					// String
				
						writeString(this.Caracteristicas,dos);
					
					// String
				
						writeString(this.Contraindicaciones,dos);
					
					// String
				
						writeString(this.EfectosPosteriores,dos);
					
					// String
				
						writeString(this.RiesgosAsociados,dos);
					
					// String
				
						writeString(this.DosisAplicacion,dos);
					
					// String
				
						writeString(this.NITFabricante,dos);
					
					// String
				
						writeString(this.Fabricante,dos);
					
					// String
				
						writeString(this.NITImportador,dos);
					
					// String
				
						writeString(this.Importador,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("oViaAdmin="+oViaAdmin);
		sb.append(",oFFarmaceutica="+oFFarmaceutica);
		sb.append(",oNGenerico="+oNGenerico);
		sb.append(",oConcentracion="+oConcentracion);
		sb.append(",oUnidosis="+oUnidosis);
		sb.append(",oUMedida="+oUMedida);
		sb.append(",oFabricante="+oFabricante);
		sb.append(",oImportador="+oImportador);
		sb.append(",State="+State);
		sb.append(",ErrorMessage="+ErrorMessage);
		sb.append(",CodBarras="+CodBarras);
		sb.append(",NComercial="+NComercial);
		sb.append(",PComercial="+PComercial);
		sb.append(",ViaAdmin="+ViaAdmin);
		sb.append(",FFarmaceutica="+FFarmaceutica);
		sb.append(",NGenerico="+NGenerico);
		sb.append(",Concentracion="+Concentracion);
		sb.append(",Unidosis="+Unidosis);
		sb.append(",UMedida="+UMedida);
		sb.append(",CantUMedida="+CantUMedida);
		sb.append(",CantMinima="+CantMinima);
		sb.append(",RegInvima="+RegInvima);
		sb.append(",FExpRegInvima="+FExpRegInvima);
		sb.append(",FVenRegInvima="+FVenRegInvima);
		sb.append(",FActivoCum="+FActivoCum);
		sb.append(",FInactivoCum="+FInactivoCum);
		sb.append(",Expediente="+Expediente);
		sb.append(",Consecutivo="+Consecutivo);
		sb.append(",Cum="+Cum);
		sb.append(",Origen="+Origen);
		sb.append(",Caracteristicas="+Caracteristicas);
		sb.append(",Contraindicaciones="+Contraindicaciones);
		sb.append(",EfectosPosteriores="+EfectosPosteriores);
		sb.append(",RiesgosAsociados="+RiesgosAsociados);
		sb.append(",DosisAplicacion="+DosisAplicacion);
		sb.append(",NITFabricante="+NITFabricante);
		sb.append(",Fabricante="+Fabricante);
		sb.append(",NITImportador="+NITImportador);
		sb.append(",Importador="+Importador);
		sb.append(",usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tOracleInput_10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tOracleInput_4Process(globalMap);
		tOracleInput_7Process(globalMap);
		tOracleInput_5Process(globalMap);
		tOracleInput_2Process(globalMap);
		tOracleInput_8Process(globalMap);
		tOracleInput_9Process(globalMap);
		tOracleInput_6Process(globalMap);

		row5Struct row5 = new row5Struct();
next_2Struct next_2 = new next_2Struct();
row8Struct row8 = new row8Struct();
row10Struct row10 = new row10Struct();
row11Struct row11 = new row11Struct();
row13Struct row13 = new row13Struct();
row20Struct row20 = new row20Struct();
row27Struct row27 = new row27Struct();
row17Struct row17 = new row17Struct();
row19Struct row19 = new row19Struct();
row14Struct row14 = new row14Struct();
next_3Struct next_3 = new next_3Struct();
row22Struct row22 = new row22Struct();
row24Struct row24 = new row24Struct();
row25Struct row25 = new row25Struct();
row31Struct row31 = new row31Struct();
next_4Struct next_4 = new next_4Struct();
row33Struct row33 = new row33Struct();
next_5Struct next_5 = new next_5Struct();
row34Struct row34 = new row34Struct();
next_6Struct next_6 = new next_6Struct();
row28Struct row28 = new row28Struct();
row35Struct row35 = new row35Struct();
row30Struct row30 = new row30Struct();
next_7Struct next_7 = new next_7Struct();
row2Struct row2 = new row2Struct();
row40Struct row40 = new row40Struct();
row48Struct row48 = new row48Struct();
next_10Struct next_10 = new next_10Struct();
row37Struct row37 = new row37Struct();
row42Struct row42 = new row42Struct();
row38Struct row38 = new row38Struct();
next_8Struct next_8 = new next_8Struct();
row7Struct row7 = new row7Struct();

























	
	/**
	 * [tDenormalize_1_DenormalizeOut begin ] start
	 */

	

	
		
		ok_Hash.put("tDenormalize_1_DenormalizeOut", false);
		start_Hash.put("tDenormalize_1_DenormalizeOut", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tDenormalize_1";
	
	currentComponent="tDenormalize_1_DenormalizeOut";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row28");
					}
				
		int tos_count_tDenormalize_1_DenormalizeOut = 0;
		

class DenormalizeStructtDenormalize_1_DenormalizeOut {
StringBuilder Caracteristicas = new StringBuilder();
StringBuilder Caracteristicas_Ids = new StringBuilder();
java.util.List<String> State = new java.util.ArrayList<String>();
java.util.List<String> Ins_Caract = new java.util.ArrayList<String>();
}
DenormalizeStructtDenormalize_1_DenormalizeOut denormalize_result_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_oViaAdmin_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_oFFarmaceutica_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_oNGenerico_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_oConcentracion_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_oUnidosis_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_oUMedida_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_oFabricante_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_oImportador_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_Ins_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash__ErrorMessage_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_CodBarras_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_NComercial_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_PComercial_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_ViaAdmin_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_FFarmaceutica_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_NGenerico_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_Concentracion_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_Unidosis_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_UMedida_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_CantUMedida_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_CantMinima_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_RegInvima_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_FExp_RegInvima_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_FVen_RegInvima_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_FActivoCum_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_FInactivoCum_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_Expediente_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_Consecutivo_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_Cum_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_Origen_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_Contraindicaciones_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>> hash_Efectos_Posteriores_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>> hash_Riesgos_Asociados_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>> hash_Dosis_Aplicacion_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>> hash_NIT_Fabricante_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>> hash_Fabricante_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>> hash_NIT_Importador_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>> hash_Importador_tDenormalize_1_DenormalizeOut = null;java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>> hash_usuariosId_tDenormalize_1_DenormalizeOut = null;java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>> hash_uorgId_tDenormalize_1_DenormalizeOut = null;java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>> hash_ViaAdmin_Id_tDenormalize_1_DenormalizeOut = null;java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>> hash_TFFarmaceutica_Id_tDenormalize_1_DenormalizeOut = null;java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>> hash_MedGenerico_Id_tDenormalize_1_DenormalizeOut = null;java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>> hash_FFarmaceutica_Id_tDenormalize_1_DenormalizeOut = null;java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>> hash_UMedida_Id_tDenormalize_1_DenormalizeOut = null;java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>> hash_CantUMedida_Int_tDenormalize_1_DenormalizeOut = null;java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>> hash_CantMinima_Int_tDenormalize_1_DenormalizeOut = null;java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>> hash__FExp_RegInvima_tDenormalize_1_DenormalizeOut = null;java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>> hash__FVen_RegInvima_tDenormalize_1_DenormalizeOut = null;java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>> hash__FActivoCum_tDenormalize_1_DenormalizeOut = null;java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>> hash__FInactivoCum_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>> hash_Fabricante_NitN_tDenormalize_1_DenormalizeOut = null;java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>> hash_Importador_NitN_tDenormalize_1_DenormalizeOut = null;java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>> hash_Fabricante_Id_tDenormalize_1_DenormalizeOut = null;java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>> hash_Importador_Id_tDenormalize_1_DenormalizeOut = null;java.util.Map<Integer,java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>> hash_Cod_Barras_Duplicidad__tDenormalize_1_DenormalizeOut = null;java.util.Map<Integer,
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>> hash_Cod_Barras_Registrado__tDenormalize_1_DenormalizeOut = null;
java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut> hash_Respuesta__tDenormalize_1_DenormalizeOut = null;

 



/**
 * [tDenormalize_1_DenormalizeOut begin ] stop
 */



	
	/**
	 * [tOracleSP_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_4", false);
		start_Hash.put("tOracleSP_4", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"next_6");
					}
				
		int tos_count_tOracleSP_4 = 0;
		

	java.sql.Connection connection_tOracleSP_4 = null;
	connection_tOracleSP_4 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_4 = connection_tOracleSP_4.prepareCall("{call " + "MED.GetCodBarrasRegistrado" + "(?,?,?,?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_4;
String tmpString_tOracleSP_4;

 



/**
 * [tOracleSP_4 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row34");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
next_6Struct next_6_tmp = new next_6Struct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */



	
	/**
	 * [tJavaRow_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_8", false);
		start_Hash.put("tJavaRow_8", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"next_5");
					}
				
		int tos_count_tJavaRow_8 = 0;
		

int nb_line_tJavaRow_8 = 0;

 



/**
 * [tJavaRow_8 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row33");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
next_5Struct next_5_tmp = new next_5Struct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */



	
	/**
	 * [tJoin_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tJoin_8", false);
		start_Hash.put("tJoin_8", System.currentTimeMillis());
		
	
	currentComponent="tJoin_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"next_4");
					}
				
		int tos_count_tJoin_8 = 0;
		
    final java.util.Map<row32Struct, row32Struct> tHash_tJoin_8 = (java.util.Map<row32Struct, row32Struct>) globalMap.get("tHash_row32");
    
    class Util_tJoin_8
    {
        row32Struct lookupValue = null;
        row32Struct row32HashKey = new row32Struct(); 
        
        public boolean isJoined(next_4Struct mainRow) {                        
           row32HashKey.NOMBRE = mainRow.Caracteristicas;

			row32HashKey.hashCodeDirty = true;			             
            lookupValue = tHash_tJoin_8.get(row32HashKey);            
            if(lookupValue != null){
            	return true;
            }else{
            }  
            return false;
        }
    }
        
	Util_tJoin_8 util_tJoin_8 = new Util_tJoin_8();
        
    int nb_line_tJoin_8 = 0; 
 



/**
 * [tJoin_8 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row31");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
next_4Struct next_4_tmp = new next_4Struct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tNormalize_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tNormalize_1", false);
		start_Hash.put("tNormalize_1", System.currentTimeMillis());
		
	
	currentComponent="tNormalize_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row25");
					}
				
		int tos_count_tNormalize_1 = 0;
		

	int lastNoEmptyIndex_tNormalize_1 = 0;
    int nb_line_tNormalize_1 = 0;
        String tmp_tNormalize_1 = null;
        StringBuilder currentRecord_tNormalize_1 = null;
        String [] normalizeRecord_tNormalize_1 = null;
        java.util.Set<String> recordSet_tNormalize_1 = new java.util.HashSet<String>();
        
				if ( ((String)"/").length() == 0 ){
					throw new IllegalArgumentException("Field Separator must be assigned a char."); 
				}
				

 



/**
 * [tNormalize_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_11", false);
		start_Hash.put("tJavaRow_11", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tJavaRow_11 = 0;
		

int nb_line_tJavaRow_11 = 0;

 



/**
 * [tJavaRow_11 begin ] stop
 */



	
	/**
	 * [tJoin_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tJoin_7", false);
		start_Hash.put("tJoin_7", System.currentTimeMillis());
		
	
	currentComponent="tJoin_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row22");
					}
				
		int tos_count_tJoin_7 = 0;
		
    final java.util.Map<row23Struct, row23Struct> tHash_tJoin_7 = (java.util.Map<row23Struct, row23Struct>) globalMap.get("tHash_row23");
    
    class Util_tJoin_7
    {
        row23Struct lookupValue = null;
        row23Struct row23HashKey = new row23Struct(); 
        
        public boolean isJoined(row22Struct mainRow) {                        
           row23HashKey.NOMBRE = mainRow.Importador;

			row23HashKey.hashCodeDirty = true;			             
            lookupValue = tHash_tJoin_7.get(row23HashKey);            
            if(lookupValue != null){
            	return true;
            }else{
            }  
            return false;
        }
    }
        
	Util_tJoin_7 util_tJoin_7 = new Util_tJoin_7();
        
    int nb_line_tJoin_7 = 0; 
 



/**
 * [tJoin_7 begin ] stop
 */



	
	/**
	 * [tJoin_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJoin_6", false);
		start_Hash.put("tJoin_6", System.currentTimeMillis());
		
	
	currentComponent="tJoin_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"next_3");
					}
				
		int tos_count_tJoin_6 = 0;
		
    final java.util.Map<row21Struct, row21Struct> tHash_tJoin_6 = (java.util.Map<row21Struct, row21Struct>) globalMap.get("tHash_row21");
    
    class Util_tJoin_6
    {
        row21Struct lookupValue = null;
        row21Struct row21HashKey = new row21Struct(); 
        
        public boolean isJoined(next_3Struct mainRow) {                        
           row21HashKey.NOMBRE = mainRow.Fabricante;

			row21HashKey.hashCodeDirty = true;			             
            lookupValue = tHash_tJoin_6.get(row21HashKey);            
            if(lookupValue != null){
            	return true;
            }else{
            }  
            return false;
        }
    }
        
	Util_tJoin_6 util_tJoin_6 = new Util_tJoin_6();
        
    int nb_line_tJoin_6 = 0; 
 



/**
 * [tJoin_6 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
next_3Struct next_3_tmp = new next_3Struct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tJavaRow_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_7", false);
		start_Hash.put("tJavaRow_7", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row19");
					}
				
		int tos_count_tJavaRow_7 = 0;
		

int nb_line_tJavaRow_7 = 0;

 



/**
 * [tJavaRow_7 begin ] stop
 */



	
	/**
	 * [tJoin_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJoin_4", false);
		start_Hash.put("tJoin_4", System.currentTimeMillis());
		
	
	currentComponent="tJoin_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tJoin_4 = 0;
		
    final java.util.Map<row18Struct, row18Struct> tHash_tJoin_4 = (java.util.Map<row18Struct, row18Struct>) globalMap.get("tHash_row18");
    
    class Util_tJoin_4
    {
        row18Struct lookupValue = null;
        row18Struct row18HashKey = new row18Struct(); 
        
        public boolean isJoined(row17Struct mainRow) {                        
           row18HashKey.SIGLA = mainRow.UMedida;

			row18HashKey.hashCodeDirty = true;			             
            lookupValue = tHash_tJoin_4.get(row18HashKey);            
            if(lookupValue != null){
            	return true;
            }else{
            }  
            return false;
        }
    }
        
	Util_tJoin_4 util_tJoin_4 = new Util_tJoin_4();
        
    int nb_line_tJoin_4 = 0; 
 



/**
 * [tJoin_4 begin ] stop
 */



	
	/**
	 * [tJavaRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_2", false);
		start_Hash.put("tJavaRow_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row27");
					}
				
		int tos_count_tJavaRow_2 = 0;
		

int nb_line_tJavaRow_2 = 0;

 



/**
 * [tJavaRow_2 begin ] stop
 */



	
	/**
	 * [tJoin_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJoin_2", false);
		start_Hash.put("tJoin_2", System.currentTimeMillis());
		
	
	currentComponent="tJoin_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row20");
					}
				
		int tos_count_tJoin_2 = 0;
		
    final java.util.Map<row26Struct, row26Struct> tHash_tJoin_2 = (java.util.Map<row26Struct, row26Struct>) globalMap.get("tHash_row26");
    
    class Util_tJoin_2
    {
        row26Struct lookupValue = null;
        row26Struct row26HashKey = new row26Struct(); 
        
        public boolean isJoined(row20Struct mainRow) {                        
           row26HashKey.NOMBRE_GENERICO = mainRow.NGenerico;
            
           row26HashKey.CONCENTRACION = mainRow.Concentracion;
            
           row26HashKey.TFORMASFARMACEUTICAS_ID = mainRow.TFFarmaceutica_Id;

			row26HashKey.hashCodeDirty = true;			             
            lookupValue = tHash_tJoin_2.get(row26HashKey);            
            if(lookupValue != null){
            	return true;
            }else{
            }  
            return false;
        }
    }
        
	Util_tJoin_2 util_tJoin_2 = new Util_tJoin_2();
        
    int nb_line_tJoin_2 = 0; 
 



/**
 * [tJoin_2 begin ] stop
 */



	
	/**
	 * [tJavaRow_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_6", false);
		start_Hash.put("tJavaRow_6", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tJavaRow_6 = 0;
		

int nb_line_tJavaRow_6 = 0;

 



/**
 * [tJavaRow_6 begin ] stop
 */



	
	/**
	 * [tJoin_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJoin_5", false);
		start_Hash.put("tJoin_5", System.currentTimeMillis());
		
	
	currentComponent="tJoin_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tJoin_5 = 0;
		
    final java.util.Map<row12Struct, row12Struct> tHash_tJoin_5 = (java.util.Map<row12Struct, row12Struct>) globalMap.get("tHash_row12");
    
    class Util_tJoin_5
    {
        row12Struct lookupValue = null;
        row12Struct row12HashKey = new row12Struct(); 
        
        public boolean isJoined(row11Struct mainRow) {                        
           row12HashKey.NOMBRE = mainRow.FFarmaceutica;

			row12HashKey.hashCodeDirty = true;			             
            lookupValue = tHash_tJoin_5.get(row12HashKey);            
            if(lookupValue != null){
            	return true;
            }else{
            }  
            return false;
        }
    }
        
	Util_tJoin_5 util_tJoin_5 = new Util_tJoin_5();
        
    int nb_line_tJoin_5 = 0; 
 



/**
 * [tJoin_5 begin ] stop
 */



	
	/**
	 * [tJavaRow_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_5", false);
		start_Hash.put("tJavaRow_5", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tJavaRow_5 = 0;
		

int nb_line_tJavaRow_5 = 0;

 



/**
 * [tJavaRow_5 begin ] stop
 */



	
	/**
	 * [tJoin_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJoin_3", false);
		start_Hash.put("tJoin_3", System.currentTimeMillis());
		
	
	currentComponent="tJoin_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tJoin_3 = 0;
		
    final java.util.Map<row9Struct, row9Struct> tHash_tJoin_3 = (java.util.Map<row9Struct, row9Struct>) globalMap.get("tHash_row9");
    
    class Util_tJoin_3
    {
        row9Struct lookupValue = null;
        row9Struct row9HashKey = new row9Struct(); 
        
        public boolean isJoined(row8Struct mainRow) {                        
           row9HashKey.SIGLA = mainRow.ViaAdmin;

			row9HashKey.hashCodeDirty = true;			             
            lookupValue = tHash_tJoin_3.get(row9HashKey);            
            if(lookupValue != null){
            	return true;
            }else{
            }  
            return false;
        }
    }
        
	Util_tJoin_3 util_tJoin_3 = new Util_tJoin_3();
        
    int nb_line_tJoin_3 = 0; 
 



/**
 * [tJoin_3 begin ] stop
 */



	
	/**
	 * [tJavaRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_4", false);
		start_Hash.put("tJavaRow_4", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"next_2");
					}
				
		int tos_count_tJavaRow_4 = 0;
		

int nb_line_tJavaRow_4 = 0;

 



/**
 * [tJavaRow_4 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
next_2Struct next_2_tmp = new next_2Struct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tOracleInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_10", false);
		start_Hash.put("tOracleInput_10", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_10";
	
	
		int tos_count_tOracleInput_10 = 0;
		
	


	
		    int nb_line_tOracleInput_10 = 0;
		    java.sql.Connection conn_tOracleInput_10 = null;
				conn_tOracleInput_10 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_10 = false;
				boolean isConnectionWrapped_tOracleInput_10 = !(conn_tOracleInput_10 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_10.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_10 = null;
                if (isConnectionWrapped_tOracleInput_10) {
					unwrappedOraConn_tOracleInput_10 = conn_tOracleInput_10.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_10 != null) {
                        isTimeZoneNull_tOracleInput_10 = (unwrappedOraConn_tOracleInput_10.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_10 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_10).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_10) {
					java.sql.Statement stmtGetTZ_tOracleInput_10 = conn_tOracleInput_10.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_10 = stmtGetTZ_tOracleInput_10.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_10 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_10.next()) {
						sessionTimezone_tOracleInput_10 = rsGetTZ_tOracleInput_10.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_10 && unwrappedOraConn_tOracleInput_10 != null) {
                        unwrappedOraConn_tOracleInput_10.setSessionTimeZone(sessionTimezone_tOracleInput_10);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_10).setSessionTimeZone(sessionTimezone_tOracleInput_10);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_10 = conn_tOracleInput_10.createStatement();

		    String dbquery_tOracleInput_10 = /*"SELECT * FROM MED_PRODUCTOS_COMERCIALES_TEMP"*/

"SELECT G.OVIAADMIN,G.OFFARMACEUTICA,G.ONGENERICO,G.OCONCENTRACION,G.OUNIDOSIS,G.OUMEDIDA,\nG.OFABRICANTE,G.OIMPORTADOR,"
+"'Erróneo' AS STATE, 'El registro se encuentra diligenciado mas de una vez en el formato' || ' ' || 'Cantidad' || ' ' ||G"
+".CANTIDAD || ' veces' AS ERRORMESSAGE,G.CODBARRAS, G.NCOMERCIAL, G.PCOMERCIAL,\nG.VIAADMIN, G.FFARMACEUTICA, G.NGENERICO"
+", G.CONCENTRACION, G.UNIDOSIS, G.UMEDIDA, G.CANTUMEDIDA, G.CANTMINIMA, G.REGINVIMA,\nG.FEXPREGINVIMA, G.FVENREGINVIMA, G"
+".FACTIVOCUM, G.FINACTIVOCUM, G.EXPEDIENTE, G.CONSECUTIVO, G.CUM, G.ORIGEN,\nG.CARACTERISTICAS, G.CONTRAINDICACIONES, G.E"
+"FECTOSPOSTERIORES, G.RIESGOSASOCIADOS, G.DOSISAPLICACION, G.NITFABRICANTE,\nG.FABRICANTE, G.NITIMPORTADOR,G.IMPORTADOR, "
+"G.USUARIOSID, G.UORGID\nFROM\n(SELECT OVIAADMIN,OFFARMACEUTICA,ONGENERICO,OCONCENTRACION,OUNIDOSIS,OUMEDIDA,\nOFABRICANT"
+"E,OIMPORTADOR,STATE, ERRORMESSAGE, CODBARRAS, NCOMERCIAL, PCOMERCIAL,\nVIAADMIN, FFARMACEUTICA, NGENERICO, CONCENTRACION"
+", UNIDOSIS, UMEDIDA, CANTUMEDIDA, CANTMINIMA, REGINVIMA,\nFEXPREGINVIMA, FVENREGINVIMA, FACTIVOCUM, FINACTIVOCUM, EXPEDI"
+"ENTE, CONSECUTIVO, CUM, ORIGEN,\nCARACTERISTICAS, CONTRAINDICACIONES, EFECTOSPOSTERIORES, RIESGOSASOCIADOS, DOSISAPLICAC"
+"ION, NITFABRICANTE,\nFABRICANTE, NITIMPORTADOR,IMPORTADOR, USUARIOSID, UORGID, COUNT(*) AS CANTIDAD\nFROM SALUDSIS.MED_P"
+"RODUCTOS_COMERCIALES_TEMP\nGROUP BY OVIAADMIN,OFFARMACEUTICA,ONGENERICO,OCONCENTRACION,OUNIDOSIS,OUMEDIDA,\nOFABRICANTE,"
+"OIMPORTADOR,STATE, ERRORMESSAGE, CODBARRAS, NCOMERCIAL, PCOMERCIAL,\nVIAADMIN, FFARMACEUTICA, NGENERICO, CONCENTRACION, "
+"UNIDOSIS, UMEDIDA, CANTUMEDIDA, CANTMINIMA, REGINVIMA,\nFEXPREGINVIMA, FVENREGINVIMA, FACTIVOCUM, FINACTIVOCUM, EXPEDIEN"
+"TE, CONSECUTIVO, CUM, ORIGEN,\nCARACTERISTICAS, CONTRAINDICACIONES, EFECTOSPOSTERIORES, RIESGOSASOCIADOS, DOSISAPLICACIO"
+"N, NITFABRICANTE,\nFABRICANTE, NITIMPORTADOR,IMPORTADOR, USUARIOSID, UORGID\nHAVING COUNT(*) > 1) G --(YA TA)\nINNER JOI"
+"N (SELECT M.OVIAADMIN, M.OFFARMACEUTICA, M.ONGENERICO, M.OCONCENTRACION, M.OUNIDOSIS, M.OUMEDIDA,\nM.OFABRICANTE, M.OIMP"
+"ORTADOR, M.STATE, M.ERRORMESSAGE, M.CODBARRAS, M.NCOMERCIAL, M.PCOMERCIAL,\nM.VIAADMIN, M.FFARMACEUTICA, M.NGENERICO, M."
+"CONCENTRACION, M.UNIDOSIS, M.UMEDIDA, M.CANTUMEDIDA, M.CANTMINIMA, M.REGINVIMA,\nM.FEXPREGINVIMA, M.FVENREGINVIMA, M.FAC"
+"TIVOCUM, M.FINACTIVOCUM, M.EXPEDIENTE, M.CONSECUTIVO, M.CUM, M.ORIGEN,\nM.CARACTERISTICAS, M.CONTRAINDICACIONES, M.EFECT"
+"OSPOSTERIORES, M.RIESGOSASOCIADOS, M.DOSISAPLICACION, M.NITFABRICANTE,\nM.FABRICANTE, M.NITIMPORTADOR,M.IMPORTADOR, M.US"
+"UARIOSID, M.UORGID\nFROM SALUDSIS.MED_PRODUCTOS_COMERCIALES_TEMP M) T ON T.OVIAADMIN = G.OVIAADMIN AND T.OFFARMACEUTICA "
+"= G.OFFARMACEUTICA AND T.ONGENERICO = G.ONGENERICO \nAND T.OUNIDOSIS = G.OUNIDOSIS AND T.OUMEDIDA = G.OUMEDIDA AND T.OFA"
+"BRICANTE = G.OFABRICANTE\nAND T.OIMPORTADOR = G.OIMPORTADOR AND T.NCOMERCIAL = G.NCOMERCIAL AND T.PCOMERCIAL = G.PCOMERC"
+"IAL\nAND T.VIAADMIN = G.VIAADMIN AND T.FFARMACEUTICA = G.FFARMACEUTICA AND T.NGENERICO = G.NGENERICO AND T.CONCENTRACION"
+" = G.CONCENTRACION\nAND T.UNIDOSIS = G.UNIDOSIS AND T.UMEDIDA = G.UMEDIDA AND T.CANTUMEDIDA = G.CANTUMEDIDA AND T.CANTMI"
+"NIMA = G.CANTMINIMA AND T.REGINVIMA = G.REGINVIMA \nAND T.CUM = G.CUM AND T.CARACTERISTICAS = G.CARACTERISTICAS AND T.FA"
+"BRICANTE = G.FABRICANTE AND T.IMPORTADOR = G.IMPORTADOR \nAND T.USUARIOSID = G.USUARIOSID AND T.UORGID = G.UORGID \n--(Y"
+"A TA)\nUNION ALL\nSELECT G.OVIAADMIN, G.OFFARMACEUTICA, G.ONGENERICO, G.OCONCENTRACION, G.OUNIDOSIS, G.OUMEDIDA,\nG.OFAB"
+"RICANTE, G.OIMPORTADOR, G.STATE, G.ERRORMESSAGE, G.CODBARRAS, G.NCOMERCIAL, G.PCOMERCIAL,\nG.VIAADMIN, G.FFARMACEUTICA, "
+"G.NGENERICO, G.CONCENTRACION, G.UNIDOSIS, G.UMEDIDA, G.CANTUMEDIDA, G.CANTMINIMA, G.REGINVIMA,\nG.FEXPREGINVIMA, G.FVENR"
+"EGINVIMA, G.FACTIVOCUM, G.FINACTIVOCUM, G.EXPEDIENTE, G.CONSECUTIVO, G.CUM, G.ORIGEN,\nG.CARACTERISTICAS, G.CONTRAINDICA"
+"CIONES, G.EFECTOSPOSTERIORES, G.RIESGOSASOCIADOS, G.DOSISAPLICACION, G.NITFABRICANTE,\nG.FABRICANTE, G.NITIMPORTADOR, G."
+"IMPORTADOR, G.USUARIOSID, G.UORGID --(YA TA)\nFROM\n(SELECT OVIAADMIN,OFFARMACEUTICA,ONGENERICO,OCONCENTRACION,OUNIDOSIS"
+",OUMEDIDA,\nOFABRICANTE,OIMPORTADOR,STATE, ERRORMESSAGE, CODBARRAS, NCOMERCIAL, PCOMERCIAL,\nVIAADMIN, FFARMACEUTICA, NG"
+"ENERICO, CONCENTRACION, UNIDOSIS, UMEDIDA, CANTUMEDIDA, CANTMINIMA, REGINVIMA,\nFEXPREGINVIMA, FVENREGINVIMA, FACTIVOCUM"
+", FINACTIVOCUM, EXPEDIENTE, CONSECUTIVO, CUM, ORIGEN,\nCARACTERISTICAS, CONTRAINDICACIONES, EFECTOSPOSTERIORES, RIESGOSA"
+"SOCIADOS, DOSISAPLICACION, NITFABRICANTE,\nFABRICANTE, NITIMPORTADOR,IMPORTADOR, USUARIOSID, UORGID, COUNT(*) AS CANTIDA"
+"D\nFROM SALUDSIS.MED_PRODUCTOS_COMERCIALES_TEMP\nGROUP BY OVIAADMIN,OFFARMACEUTICA,ONGENERICO,OCONCENTRACION,OUNIDOSIS,O"
+"UMEDIDA,\nOFABRICANTE,OIMPORTADOR,STATE, ERRORMESSAGE, CODBARRAS, NCOMERCIAL, PCOMERCIAL,\nVIAADMIN, FFARMACEUTICA, NGEN"
+"ERICO, CONCENTRACION, UNIDOSIS, UMEDIDA, CANTUMEDIDA, CANTMINIMA, REGINVIMA,\nFEXPREGINVIMA, FVENREGINVIMA, FACTIVOCUM, "
+"FINACTIVOCUM, EXPEDIENTE, CONSECUTIVO, CUM, ORIGEN,\nCARACTERISTICAS, CONTRAINDICACIONES, EFECTOSPOSTERIORES, RIESGOSASO"
+"CIADOS, DOSISAPLICACION, NITFABRICANTE,\nFABRICANTE, NITIMPORTADOR, IMPORTADOR, USUARIOSID, UORGID HAVING COUNT(*) = 1)G"
+" INNER JOIN (SELECT M.OVIAADMIN, M.OFFARMACEUTICA, M.ONGENERICO, M.OCONCENTRACION, M.OUNIDOSIS, M.OUMEDIDA,\nM.OFABRICAN"
+"TE, M.OIMPORTADOR, M.STATE, M.ERRORMESSAGE, M.CODBARRAS, M.NCOMERCIAL, M.PCOMERCIAL,\nM.VIAADMIN, M.FFARMACEUTICA, M.NGE"
+"NERICO, M.CONCENTRACION, M.UNIDOSIS, M.UMEDIDA, M.CANTUMEDIDA, M.CANTMINIMA, M.REGINVIMA,\nM.FEXPREGINVIMA, M.FVENREGINV"
+"IMA, M.FACTIVOCUM, M.FINACTIVOCUM, M.EXPEDIENTE, M.CONSECUTIVO, M.CUM, M.ORIGEN,\nM.CARACTERISTICAS, M.CONTRAINDICACIONE"
+"S, M.EFECTOSPOSTERIORES, M.RIESGOSASOCIADOS, M.DOSISAPLICACION, M.NITFABRICANTE,\nM.FABRICANTE, M.NITIMPORTADOR,M.IMPORT"
+"ADOR, M.USUARIOSID, M.UORGID\nFROM SALUDSIS.MED_PRODUCTOS_COMERCIALES_TEMP M) T ON T.OVIAADMIN = G.OVIAADMIN AND T.OFFAR"
+"MACEUTICA = G.OFFARMACEUTICA AND T.ONGENERICO = G.ONGENERICO \nAND T.OUNIDOSIS = G.OUNIDOSIS AND T.OUMEDIDA = G.OUMEDIDA"
+" AND T.OFABRICANTE = G.OFABRICANTE\nAND T.OIMPORTADOR = G.OIMPORTADOR AND T.NCOMERCIAL = G.NCOMERCIAL AND T.PCOMERCIAL ="
+" G.PCOMERCIAL\nAND T.VIAADMIN = G.VIAADMIN AND T.FFARMACEUTICA = G.FFARMACEUTICA AND T.NGENERICO = G.NGENERICO AND T.CON"
+"CENTRACION = G.CONCENTRACION\nAND T.UNIDOSIS = G.UNIDOSIS AND T.UMEDIDA = G.UMEDIDA AND T.CANTUMEDIDA = G.CANTUMEDIDA AN"
+"D T.CANTMINIMA = G.CANTMINIMA AND T.REGINVIMA = G.REGINVIMA AND T.CUM = G.CUM AND T.CARACTERISTICAS = G.CARACTERISTICAS"
+"\nAND T.FABRICANTE = G.FABRICANTE AND T.IMPORTADOR = G.IMPORTADOR AND T.USUARIOSID = G.USUARIOSID AND T.UORGID = G.UORGID"
+" ";
		    

		    globalMap.put("tOracleInput_10_QUERY",dbquery_tOracleInput_10);

		    java.sql.ResultSet rs_tOracleInput_10 = null;

		    try {
		    	rs_tOracleInput_10 = stmt_tOracleInput_10.executeQuery(dbquery_tOracleInput_10);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_10 = rs_tOracleInput_10.getMetaData();
		    	int colQtyInRs_tOracleInput_10 = rsmd_tOracleInput_10.getColumnCount();

		    String tmpContent_tOracleInput_10 = null;
		    
		    
		    while (rs_tOracleInput_10.next()) {
		        nb_line_tOracleInput_10++;
		        
							if(colQtyInRs_tOracleInput_10 < 1) {
								row5.oViaAdmin = null;
							} else {
	                         		
        	row5.oViaAdmin = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 2) {
								row5.oFFarmaceutica = null;
							} else {
	                         		
        	row5.oFFarmaceutica = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 3) {
								row5.oNGenerico = null;
							} else {
	                         		
        	row5.oNGenerico = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 4) {
								row5.oConcentracion = null;
							} else {
	                         		
        	row5.oConcentracion = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 5) {
								row5.oUnidosis = null;
							} else {
	                         		
        	row5.oUnidosis = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 6) {
								row5.oUMedida = null;
							} else {
	                         		
        	row5.oUMedida = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 7) {
								row5.oFabricante = null;
							} else {
	                         		
        	row5.oFabricante = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 8) {
								row5.oImportador = null;
							} else {
	                         		
        	row5.oImportador = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 8, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 9) {
								row5.State = null;
							} else {
	                         		
        	row5.State = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 10) {
								row5.ErrorMessage = null;
							} else {
	                         		
        	row5.ErrorMessage = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 11) {
								row5.CodBarras = null;
							} else {
	                         		
        	row5.CodBarras = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 11, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 12) {
								row5.NComercial = null;
							} else {
	                         		
        	row5.NComercial = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 13) {
								row5.PComercial = null;
							} else {
	                         		
        	row5.PComercial = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 13, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 14) {
								row5.ViaAdmin = null;
							} else {
	                         		
        	row5.ViaAdmin = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 14, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 15) {
								row5.FFarmaceutica = null;
							} else {
	                         		
        	row5.FFarmaceutica = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 15, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 16) {
								row5.NGenerico = null;
							} else {
	                         		
        	row5.NGenerico = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 16, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 17) {
								row5.Concentracion = null;
							} else {
	                         		
        	row5.Concentracion = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 17, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 18) {
								row5.Unidosis = null;
							} else {
	                         		
        	row5.Unidosis = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 18, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 19) {
								row5.UMedida = null;
							} else {
	                         		
        	row5.UMedida = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 19, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 20) {
								row5.CantUMedida = null;
							} else {
	                         		
        	row5.CantUMedida = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 20, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 21) {
								row5.CantMinima = null;
							} else {
	                         		
        	row5.CantMinima = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 21, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 22) {
								row5.RegInvima = null;
							} else {
	                         		
        	row5.RegInvima = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 22, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 23) {
								row5.FExpRegInvima = null;
							} else {
	                         		
        	row5.FExpRegInvima = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 23, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 24) {
								row5.FVenRegInvima = null;
							} else {
	                         		
        	row5.FVenRegInvima = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 24, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 25) {
								row5.FActivoCum = null;
							} else {
	                         		
        	row5.FActivoCum = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 25, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 26) {
								row5.FInactivoCum = null;
							} else {
	                         		
        	row5.FInactivoCum = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 26, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 27) {
								row5.Expediente = null;
							} else {
	                         		
        	row5.Expediente = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 27, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 28) {
								row5.Consecutivo = null;
							} else {
	                         		
        	row5.Consecutivo = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 28, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 29) {
								row5.Cum = null;
							} else {
	                         		
        	row5.Cum = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 29, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 30) {
								row5.Origen = null;
							} else {
	                         		
        	row5.Origen = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 30, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 31) {
								row5.Caracteristicas = null;
							} else {
	                         		
        	row5.Caracteristicas = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 31, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 32) {
								row5.Contraindicaciones = null;
							} else {
	                         		
        	row5.Contraindicaciones = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 32, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 33) {
								row5.EfectosPosteriores = null;
							} else {
	                         		
        	row5.EfectosPosteriores = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 33, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 34) {
								row5.RiesgosAsociados = null;
							} else {
	                         		
        	row5.RiesgosAsociados = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 34, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 35) {
								row5.DosisAplicacion = null;
							} else {
	                         		
        	row5.DosisAplicacion = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 35, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 36) {
								row5.NITFabricante = null;
							} else {
	                         		
        	row5.NITFabricante = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 36, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 37) {
								row5.Fabricante = null;
							} else {
	                         		
        	row5.Fabricante = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 37, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 38) {
								row5.NITImportador = null;
							} else {
	                         		
        	row5.NITImportador = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 38, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 39) {
								row5.Importador = null;
							} else {
	                         		
        	row5.Importador = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 39, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 40) {
								row5.usuariosId = null;
							} else {
		                          
					if(rs_tOracleInput_10.getObject(40) != null) {
						row5.usuariosId = rs_tOracleInput_10.getBigDecimal(40);
					} else {
				
						row5.usuariosId = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_10 < 41) {
								row5.uorgId = null;
							} else {
		                          
					if(rs_tOracleInput_10.getObject(41) != null) {
						row5.uorgId = rs_tOracleInput_10.getBigDecimal(41);
					} else {
				
						row5.uorgId = null;
					}
		                    }
					




 



/**
 * [tOracleInput_10 begin ] stop
 */
	
	/**
	 * [tOracleInput_10 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 


	tos_count_tOracleInput_10++;

/**
 * [tOracleInput_10 main ] stop
 */
	
	/**
	 * [tOracleInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 



/**
 * [tOracleInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

next_2 = null;


// # Output table : 'next_2'
next_2_tmp.oViaAdmin = row5.oViaAdmin ;
next_2_tmp.oFFarmaceutica = row5.oFFarmaceutica ;
next_2_tmp.oNGenerico = Utils.mayusculasSinAcentos(row5.oNGenerico.toUpperCase()) ;
next_2_tmp.oConcentracion = row5.oConcentracion ;
next_2_tmp.oUnidosis = row5.oUnidosis ;
next_2_tmp.oUMedida = row5.oUMedida ;
next_2_tmp.oFabricante = row5.oFabricante ;
next_2_tmp.oImportador = row5.oImportador ;
next_2_tmp.State = row5.State;
next_2_tmp.Ins = "";
next_2_tmp._ErrorMessage = row5.ErrorMessage;
next_2_tmp.CodBarras = row5.CodBarras;
next_2_tmp.NComercial = row5.NComercial;
next_2_tmp.PComercial = row5.PComercial;
next_2_tmp.ViaAdmin = Utils.mayusculasSinAcentos(row5.ViaAdmin) ;
next_2_tmp.FFarmaceutica = Utils.mayusculasSinAcentos(row5.FFarmaceutica ) ;
next_2_tmp.NGenerico = Utils.mayusculasSinAcentos(row5.NGenerico.toUpperCase()) ;
next_2_tmp.Concentracion = Utils.mayusculasSinAcentos(row5.Concentracion.replace(" ","")) ;
next_2_tmp.Unidosis = Utils.mayusculasSinAcentos(row5.Unidosis);
next_2_tmp.UMedida = Utils.mayusculasSinAcentos(row5.UMedida);
next_2_tmp.CantUMedida = row5.CantUMedida ;
next_2_tmp.CantMinima = row5.CantMinima ;
next_2_tmp.RegInvima = row5.RegInvima ;
next_2_tmp.FExp_RegInvima = (row5.FExpRegInvima != null && (!row5.FExpRegInvima.equals("")) ) ?
(TalendDate.isDate(row5.FExpRegInvima,"dd/mm/yyyy") == true?
row5.FExpRegInvima:row5.FExpRegInvima): null ;
next_2_tmp.FVen_RegInvima = (row5.FVenRegInvima != null && (!row5.FVenRegInvima.equals("")) ) ?
(TalendDate.isDate(row5.FVenRegInvima,"dd/mm/yyyy") == true?
row5.FVenRegInvima:row5.FVenRegInvima): null ;
next_2_tmp.FActivoCum = (row5.FActivoCum != null && (!row5.FActivoCum.equals("")) ) ?
(TalendDate.isDate(row5.FActivoCum,"dd/mm/yyyy") == true?
row5.FActivoCum:row5.FActivoCum): null ;
next_2_tmp.FInactivoCum = (row5.FInactivoCum != null && (!row5.FInactivoCum.equals("")) ) ?
(TalendDate.isDate(row5.FInactivoCum,"dd/mm/yyyy") == true?
row5.FInactivoCum:row5.FInactivoCum): null ;
next_2_tmp.Expediente = null;
next_2_tmp.Consecutivo = null;
next_2_tmp.Cum = row5.Cum;
next_2_tmp.Origen = row5.Origen ;
next_2_tmp.Caracteristicas = row5.Caracteristicas ;
next_2_tmp.Contraindicaciones = row5.Contraindicaciones ;
next_2_tmp.Efectos_Posteriores = row5.EfectosPosteriores ;
next_2_tmp.Riesgos_Asociados = row5.RiesgosAsociados;
next_2_tmp.Dosis_Aplicacion = row5.DosisAplicacion ;
next_2_tmp.NIT_Fabricante = row5.NITFabricante;
next_2_tmp.Fabricante = Utils.mayusculasSinAcentos(row5.Fabricante ) ;
next_2_tmp.NIT_Importador = row5.NITImportador ;
next_2_tmp.Importador = Utils.mayusculasSinAcentos(row5.Importador ) ;
next_2_tmp.usuariosId = row5.usuariosId;
next_2_tmp.uorgId = row5.uorgId;
next_2 = next_2_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "next_2"
if(next_2 != null) { 



	
	/**
	 * [tJavaRow_4 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"next_2"
						
						);
					}
					

    //Code generate according to input schema and output schema
row8.oViaAdmin = next_2.oViaAdmin;
row8.oFFarmaceutica = next_2.oFFarmaceutica;
row8.oNGenerico = next_2.oNGenerico;
row8.oConcentracion = next_2.oConcentracion;
row8.oUnidosis = next_2.oUnidosis;
row8.oUMedida = next_2.oUMedida;
row8.oFabricante = next_2.oFabricante;
row8.oImportador = next_2.oImportador;
row8.State = next_2.State;
row8.Ins = next_2.Ins;
row8._ErrorMessage = next_2._ErrorMessage;
row8.CodBarras = next_2.CodBarras;
row8.NComercial = next_2.NComercial;
row8.PComercial = next_2.PComercial;
row8.ViaAdmin = next_2.ViaAdmin;
row8.FFarmaceutica = next_2.FFarmaceutica;
row8.NGenerico = next_2.NGenerico;
row8.Concentracion = next_2.Concentracion;
row8.Unidosis = next_2.Unidosis;
row8.UMedida = next_2.UMedida;
row8.CantUMedida = next_2.CantUMedida;
row8.CantMinima = next_2.CantMinima;
row8.RegInvima = next_2.RegInvima;
row8.FExp_RegInvima = next_2.FExp_RegInvima;
row8.FVen_RegInvima = next_2.FVen_RegInvima;
row8.FActivoCum = next_2.FActivoCum;
row8.FInactivoCum = next_2.FInactivoCum;
row8.Expediente = next_2.Expediente;
row8.Consecutivo = next_2.Consecutivo;
row8.Cum = next_2.Cum;
row8.Origen = next_2.Origen;
row8.Caracteristicas = next_2.Caracteristicas;
row8.Contraindicaciones = next_2.Contraindicaciones;
row8.Efectos_Posteriores = next_2.Efectos_Posteriores;
row8.Riesgos_Asociados = next_2.Riesgos_Asociados;
row8.Dosis_Aplicacion = next_2.Dosis_Aplicacion;
row8.NIT_Fabricante = next_2.NIT_Fabricante;
row8.Fabricante = next_2.Fabricante;
row8.NIT_Importador = next_2.NIT_Importador;
row8.Importador = next_2.Importador;
row8.usuariosId = next_2.usuariosId;
row8.uorgId = next_2.uorgId;


boolean required = false;


if ( Utils.empty(next_2.CodBarras) == true)	 { row8.CodBarras = "El campo es obligatorio(*)"; required = true;} 
else { 
	if(Utils.validarCodigoBarras(next_2.CodBarras) == false){
		row8.CodBarras = next_2.CodBarras + " | Valor no permitido";
		row8.State = "Erróneo";
		row8.Ins = "No";
	    row8._ErrorMessage = next_2.CodBarras + " , " +"Valor de código de barras no permitido; \n";
	
	}
}



if (Utils.empty(next_2.NComercial) == true)	 { row8.NComercial = "(*)"; required = true;} 
if (Utils.empty(next_2.PComercial) == true)	 { row8.PComercial = "(*)"; required = true;} 

if (Utils.empty(next_2.ViaAdmin) == true)	     { row8.ViaAdmin = "(*)"; required = true;} 
if (Utils.empty(next_2.FFarmaceutica) == true){ row8.FFarmaceutica = "(*)"; required = true;} 
if (Utils.empty(next_2.NGenerico) == true)    { row8.NGenerico = "(*)"; required = true;}
//if (Utils.empty(next_2.Concentracion) == true){ row8.Concentracion = "(*)"; required = true;}
if (Utils.empty(next_2.Concentracion) == true){ row8.Concentracion = "X"; }

//if (Utils.empty(next_2.UMedida) == true)      { row8.UMedida = "(*)"; required = true;}
if (Utils.empty(next_2.CantUMedida) == true)  { row8.CantUMedida = "(*)"; required = true;}
if (Utils.empty(next_2.CantMinima) == true)   { row8.CantMinima = "(*)"; required = true;}

if (Utils.empty(next_2.Cum) == true)   { row8.Cum = "(*)"; required = true;}
else {

	String[] cum = Utils.validarCUM(next_2.Cum); 
	
	if ( cum != null  ){
		row8.Expediente = cum[0];
		row8.Consecutivo = cum[1];
	}
	else { 
		row8.Cum += next_2.Cum + " , " +" | No válido"; 
		row8.State = "Erróneo";
	    row8._ErrorMessage = next_2.Cum + " , " +"El valor de cum no es valido; \n";
	}
}

if (Utils.empty(next_2.Caracteristicas) == true)   { row8.Caracteristicas = "(*)"; required = true;}

//if (next_2.NIT_Fabricante == null) { row8.NIT_Fabricante = "(*)"; required = true;}
if (Utils.empty(next_2.Fabricante) == true)     { row8.Fabricante = "(*)"; required = true;}
//if (next_2.NIT_Importador == null) { row8.NIT_Importador = "(*)"; required = true;}
if (Utils.empty(next_2.Importador) == true )     { row8.Importador = "(*)"; required = true;}



if(Utils.empty(next_2.Unidosis) != true && next_2.Unidosis.equals("SI") == true){ row8.Unidosis = "Si";   }
else if(Utils.empty(next_2.Unidosis) != true && next_2.Unidosis.equals("NO") == true){
	 row8.Unidosis = "No";
}
else if (Utils.empty(next_2.Unidosis) == true){
	row8.Unidosis = "No";
}
else if(Utils.empty(next_2.Unidosis) != true) {
	row8.Unidosis = next_2.oUnidosis + " | Valor no permitido";
	row8.State = "Erróneo";
	row8.Ins = "No";
	row8._ErrorMessage = "Valor de unidosis no permitido; \n";
}


if( Utils.empty(next_2.Caracteristicas) == true){
	row8.Caracteristicas = "(*)";
	required = true;
}
else {

	if(Utils.valCaractProducto(next_2.Caracteristicas) == true ){
		//row8.Caracteristicas += " - No puede ser Vigilado y Regulado; "; 
		row8._ErrorMessage += next_2.Caracteristicas + "," +"No puede ser Vigilado y Regulado a la vez; \n";
		row8.State = "Erróneo";
		row8.Ins = "No";
	}
}



if (required == true ){
	row8.State = "Erróneo";
	row8.Ins = "No";
	row8._ErrorMessage = "Faltan columnas obligatorias (*); \n";
}

if (next_2._ErrorMessage != null ){
	row8.Ins = "No";
}
    nb_line_tJavaRow_4++;   

 


	tos_count_tJavaRow_4++;

/**
 * [tJavaRow_4 main ] stop
 */
	
	/**
	 * [tJavaRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_begin ] stop
 */

	
	/**
	 * [tJoin_3 main ] start
	 */

	

	
	
	currentComponent="tJoin_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					

			row10 = null;	
	
				row10 = new row10Struct();						
						row10.oViaAdmin = row8.oViaAdmin;					
						row10.oFFarmaceutica = row8.oFFarmaceutica;					
						row10.oNGenerico = row8.oNGenerico;					
						row10.oConcentracion = row8.oConcentracion;					
						row10.oUnidosis = row8.oUnidosis;					
						row10.oUMedida = row8.oUMedida;					
						row10.oFabricante = row8.oFabricante;					
						row10.oImportador = row8.oImportador;					
						row10.State = row8.State;					
						row10.Ins = row8.Ins;					
						row10._ErrorMessage = row8._ErrorMessage;					
						row10.CodBarras = row8.CodBarras;					
						row10.NComercial = row8.NComercial;					
						row10.PComercial = row8.PComercial;					
						row10.ViaAdmin = row8.ViaAdmin;					
						row10.FFarmaceutica = row8.FFarmaceutica;					
						row10.NGenerico = row8.NGenerico;					
						row10.Concentracion = row8.Concentracion;					
						row10.Unidosis = row8.Unidosis;					
						row10.UMedida = row8.UMedida;					
						row10.CantUMedida = row8.CantUMedida;					
						row10.CantMinima = row8.CantMinima;					
						row10.RegInvima = row8.RegInvima;					
						row10.FExp_RegInvima = row8.FExp_RegInvima;					
						row10.FVen_RegInvima = row8.FVen_RegInvima;					
						row10.FActivoCum = row8.FActivoCum;					
						row10.FInactivoCum = row8.FInactivoCum;					
						row10.Expediente = row8.Expediente;					
						row10.Consecutivo = row8.Consecutivo;					
						row10.Cum = row8.Cum;					
						row10.Origen = row8.Origen;					
						row10.Caracteristicas = row8.Caracteristicas;					
						row10.Contraindicaciones = row8.Contraindicaciones;					
						row10.Efectos_Posteriores = row8.Efectos_Posteriores;					
						row10.Riesgos_Asociados = row8.Riesgos_Asociados;					
						row10.Dosis_Aplicacion = row8.Dosis_Aplicacion;					
						row10.NIT_Fabricante = row8.NIT_Fabricante;					
						row10.Fabricante = row8.Fabricante;					
						row10.NIT_Importador = row8.NIT_Importador;					
						row10.Importador = row8.Importador;					
						row10.usuariosId = row8.usuariosId;					
						row10.uorgId = row8.uorgId;

			if(util_tJoin_3.isJoined(row8)){ 			
								row10.ViaAdmin_Id = util_tJoin_3.lookupValue.ID;
			} 
			
///////////////////////    			

 


	tos_count_tJoin_3++;

/**
 * [tJoin_3 main ] stop
 */
	
	/**
	 * [tJoin_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJoin_3";
	
	

 



/**
 * [tJoin_3 process_data_begin ] stop
 */
// Start of branch "row10"
if(row10 != null) { 



	
	/**
	 * [tJavaRow_5 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					

    //Code generate according to input schema and output schema
row11.oViaAdmin = row10.oViaAdmin;
row11.oFFarmaceutica = row10.oFFarmaceutica;
row11.oNGenerico = row10.oNGenerico;
row11.oConcentracion = row10.oConcentracion;
row11.oUnidosis = row10.oUnidosis;
row11.oUMedida = row10.oUMedida;
row11.oFabricante = row10.oFabricante;
row11.oImportador = row10.oImportador;
row11.State = row10.State;
row11.Ins = row10.Ins;
row11._ErrorMessage = row10._ErrorMessage;
row11.CodBarras = row10.CodBarras;
row11.NComercial = row10.NComercial;
row11.PComercial = row10.PComercial;
row11.ViaAdmin = row10.ViaAdmin;
row11.FFarmaceutica = row10.FFarmaceutica;
row11.NGenerico = row10.NGenerico;
row11.Concentracion = row10.Concentracion;
row11.Unidosis = row10.Unidosis;
row11.UMedida = row10.UMedida;
row11.CantUMedida = row10.CantUMedida;
row11.CantMinima = row10.CantMinima;
row11.RegInvima = row10.RegInvima;
row11.FExp_RegInvima = row10.FExp_RegInvima;
row11.FVen_RegInvima = row10.FVen_RegInvima;
row11.FActivoCum = row10.FActivoCum;
row11.FInactivoCum = row10.FInactivoCum;
row11.Expediente = row10.Expediente;
row11.Consecutivo = row10.Consecutivo;
row11.Cum = row10.Cum;
row11.Origen = row10.Origen;
row11.Caracteristicas = row10.Caracteristicas;
row11.Contraindicaciones = row10.Contraindicaciones;
row11.Efectos_Posteriores = row10.Efectos_Posteriores;
row11.Riesgos_Asociados = row10.Riesgos_Asociados;
row11.Dosis_Aplicacion = row10.Dosis_Aplicacion;
row11.NIT_Fabricante = row10.NIT_Fabricante;
row11.Fabricante = row10.Fabricante;
row11.NIT_Importador = row10.NIT_Importador;
row11.Importador = row10.Importador;
row11.usuariosId = row10.usuariosId;
row11.uorgId = row10.uorgId;
row11.ViaAdmin_Id = row10.ViaAdmin_Id;

/*if(row11.oViaAdmin != null  && row10.ViaAdmin_Id == null){
	//row11.ViaAdmin = " | No registrada";
	row11.State = "Erróneo";
	row11.Ins = "No";
    row11._ErrorMessage += row10.oViaAdmin + "," +"Via de administración no registrada; \n";
}
else if( Utils.empty( row11.oViaAdmin) == false) { 
	row11.ViaAdmin = row11.oViaAdmin; 
}*/ 

 if(row11.oViaAdmin != null  && row10.ViaAdmin_Id == null && row11._ErrorMessage == null)
 { 
	row11.State = "Erróneo";
	row11.Ins = "No";
	row11._ErrorMessage = row10.oViaAdmin + "," +"Via de administración no registrada; \n";
  }
  else
  {
    if (row11.oViaAdmin != null  && row10.ViaAdmin_Id == null)
    {
	row11.State = "Erróneo";
	row11.Ins = "No";
    row11._ErrorMessage += row10.oViaAdmin + "," +"Via de administración no registrada; \n";
    }
  }
    nb_line_tJavaRow_5++;   

 


	tos_count_tJavaRow_5++;

/**
 * [tJavaRow_5 main ] stop
 */
	
	/**
	 * [tJavaRow_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_begin ] stop
 */

	
	/**
	 * [tJoin_5 main ] start
	 */

	

	
	
	currentComponent="tJoin_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					

			row13 = null;	
	
				row13 = new row13Struct();						
						row13.oViaAdmin = row11.oViaAdmin;					
						row13.oFFarmaceutica = row11.oFFarmaceutica;					
						row13.oNGenerico = row11.oNGenerico;					
						row13.oConcentracion = row11.oConcentracion;					
						row13.oUnidosis = row11.oUnidosis;					
						row13.oUMedida = row11.oUMedida;					
						row13.oFabricante = row11.oFabricante;					
						row13.oImportador = row11.oImportador;					
						row13.State = row11.State;					
						row13.Ins = row11.Ins;					
						row13._ErrorMessage = row11._ErrorMessage;					
						row13.CodBarras = row11.CodBarras;					
						row13.NComercial = row11.NComercial;					
						row13.PComercial = row11.PComercial;					
						row13.ViaAdmin = row11.ViaAdmin;					
						row13.FFarmaceutica = row11.FFarmaceutica;					
						row13.NGenerico = row11.NGenerico;					
						row13.Concentracion = row11.Concentracion;					
						row13.Unidosis = row11.Unidosis;					
						row13.UMedida = row11.UMedida;					
						row13.CantUMedida = row11.CantUMedida;					
						row13.CantMinima = row11.CantMinima;					
						row13.RegInvima = row11.RegInvima;					
						row13.FExp_RegInvima = row11.FExp_RegInvima;					
						row13.FVen_RegInvima = row11.FVen_RegInvima;					
						row13.FActivoCum = row11.FActivoCum;					
						row13.FInactivoCum = row11.FInactivoCum;					
						row13.Expediente = row11.Expediente;					
						row13.Consecutivo = row11.Consecutivo;					
						row13.Cum = row11.Cum;					
						row13.Origen = row11.Origen;					
						row13.Caracteristicas = row11.Caracteristicas;					
						row13.Contraindicaciones = row11.Contraindicaciones;					
						row13.Efectos_Posteriores = row11.Efectos_Posteriores;					
						row13.Riesgos_Asociados = row11.Riesgos_Asociados;					
						row13.Dosis_Aplicacion = row11.Dosis_Aplicacion;					
						row13.NIT_Fabricante = row11.NIT_Fabricante;					
						row13.Fabricante = row11.Fabricante;					
						row13.NIT_Importador = row11.NIT_Importador;					
						row13.Importador = row11.Importador;					
						row13.usuariosId = row11.usuariosId;					
						row13.uorgId = row11.uorgId;					
						row13.ViaAdmin_Id = row11.ViaAdmin_Id;

			if(util_tJoin_5.isJoined(row11)){ 			
								row13.TFFarmaceutica_Id = util_tJoin_5.lookupValue.ID;
			} 
			
///////////////////////    			

 


	tos_count_tJoin_5++;

/**
 * [tJoin_5 main ] stop
 */
	
	/**
	 * [tJoin_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJoin_5";
	
	

 



/**
 * [tJoin_5 process_data_begin ] stop
 */
// Start of branch "row13"
if(row13 != null) { 



	
	/**
	 * [tJavaRow_6 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					

    //Code generate according to input schema and output schema
row20.oViaAdmin = row13.oViaAdmin;
row20.oFFarmaceutica = row13.oFFarmaceutica;
row20.oNGenerico = row13.oNGenerico;
row20.oConcentracion = row13.oConcentracion;
row20.oUnidosis = row13.oUnidosis;
row20.oUMedida = row13.oUMedida;
row20.oFabricante = row13.oFabricante;
row20.oImportador = row13.oImportador;
row20.State = row13.State;
row20.Ins = row13.Ins;
row20._ErrorMessage = row13._ErrorMessage;
row20.CodBarras = row13.CodBarras;
row20.NComercial = row13.NComercial;
row20.PComercial = row13.PComercial;
row20.ViaAdmin = row13.ViaAdmin;
row20.FFarmaceutica = row13.FFarmaceutica;
row20.NGenerico = row13.NGenerico;
row20.Concentracion = row13.Concentracion;
row20.Unidosis = row13.Unidosis;
row20.UMedida = row13.UMedida;
row20.CantUMedida = row13.CantUMedida;
row20.CantMinima = row13.CantMinima;
row20.RegInvima = row13.RegInvima;
row20.FExp_RegInvima = row13.FExp_RegInvima;
row20.FVen_RegInvima = row13.FVen_RegInvima;
row20.FActivoCum = row13.FActivoCum;
row20.FInactivoCum = row13.FInactivoCum;
row20.Expediente = row13.Expediente;
row20.Consecutivo = row13.Consecutivo;
row20.Cum = row13.Cum;
row20.Origen = row13.Origen;
row20.Caracteristicas = row13.Caracteristicas;
row20.Contraindicaciones = row13.Contraindicaciones;
row20.Efectos_Posteriores = row13.Efectos_Posteriores;
row20.Riesgos_Asociados = row13.Riesgos_Asociados;
row20.Dosis_Aplicacion = row13.Dosis_Aplicacion;
row20.NIT_Fabricante = row13.NIT_Fabricante;
row20.Fabricante = row13.Fabricante;
row20.NIT_Importador = row13.NIT_Importador;
row20.Importador = row13.Importador;
row20.usuariosId = row13.usuariosId;
row20.uorgId = row13.uorgId;
row20.ViaAdmin_Id = row13.ViaAdmin_Id;
row20.TFFarmaceutica_Id = row13.TFFarmaceutica_Id;

/*if(row13.oFFarmaceutica != null  && row13.TFFarmaceutica_Id == null){
	row20.FFarmaceutica = " | No registrada";
	row20.State = "Erróneo";
	row20.Ins = "No";
	row20._ErrorMessage += row13.oFFarmaceutica + "," +"Forma farmaceutica no registrada; \n";
}
else if (Utils.empty(row13.oFFarmaceutica) == false ) {
 	row20.FFarmaceutica = row13.oFFarmaceutica; 
}*/

 if(row13.oFFarmaceutica != null  && row13.TFFarmaceutica_Id == null && row20._ErrorMessage == null)
 { 
	row20.State = "Erróneo";
	row20.Ins = "No";
	row20._ErrorMessage = row13.oFFarmaceutica + "," +"Forma farmaceutica no registrada; \n";
  }
  else
  {
    if (row13.oFFarmaceutica != null  && row13.TFFarmaceutica_Id == null)
    {
	row20.State = "Erróneo";
	row20.Ins = "No";
    row20._ErrorMessage += row13.oFFarmaceutica + "," +"Forma farmaceutica no registrada; \n";
    }
  }
    nb_line_tJavaRow_6++;   

 


	tos_count_tJavaRow_6++;

/**
 * [tJavaRow_6 main ] stop
 */
	
	/**
	 * [tJavaRow_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_begin ] stop
 */

	
	/**
	 * [tJoin_2 main ] start
	 */

	

	
	
	currentComponent="tJoin_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row20"
						
						);
					}
					

			row27 = null;	
	
				row27 = new row27Struct();						
						row27.oViaAdmin = row20.oViaAdmin;					
						row27.oFFarmaceutica = row20.oFFarmaceutica;					
						row27.oNGenerico = row20.oNGenerico;					
						row27.oConcentracion = row20.oConcentracion;					
						row27.oUnidosis = row20.oUnidosis;					
						row27.oUMedida = row20.oUMedida;					
						row27.oFabricante = row20.oFabricante;					
						row27.oImportador = row20.oImportador;					
						row27.State = row20.State;					
						row27.Ins = row20.Ins;					
						row27._ErrorMessage = row20._ErrorMessage;					
						row27.CodBarras = row20.CodBarras;					
						row27.NComercial = row20.NComercial;					
						row27.PComercial = row20.PComercial;					
						row27.ViaAdmin = row20.ViaAdmin;					
						row27.FFarmaceutica = row20.FFarmaceutica;					
						row27.NGenerico = row20.NGenerico;					
						row27.Concentracion = row20.Concentracion;					
						row27.Unidosis = row20.Unidosis;					
						row27.UMedida = row20.UMedida;					
						row27.CantUMedida = row20.CantUMedida;					
						row27.CantMinima = row20.CantMinima;					
						row27.RegInvima = row20.RegInvima;					
						row27.FExp_RegInvima = row20.FExp_RegInvima;					
						row27.FVen_RegInvima = row20.FVen_RegInvima;					
						row27.FActivoCum = row20.FActivoCum;					
						row27.FInactivoCum = row20.FInactivoCum;					
						row27.Expediente = row20.Expediente;					
						row27.Consecutivo = row20.Consecutivo;					
						row27.Cum = row20.Cum;					
						row27.Origen = row20.Origen;					
						row27.Caracteristicas = row20.Caracteristicas;					
						row27.Contraindicaciones = row20.Contraindicaciones;					
						row27.Efectos_Posteriores = row20.Efectos_Posteriores;					
						row27.Riesgos_Asociados = row20.Riesgos_Asociados;					
						row27.Dosis_Aplicacion = row20.Dosis_Aplicacion;					
						row27.NIT_Fabricante = row20.NIT_Fabricante;					
						row27.Fabricante = row20.Fabricante;					
						row27.NIT_Importador = row20.NIT_Importador;					
						row27.Importador = row20.Importador;					
						row27.usuariosId = row20.usuariosId;					
						row27.uorgId = row20.uorgId;					
						row27.ViaAdmin_Id = row20.ViaAdmin_Id;					
						row27.TFFarmaceutica_Id = row20.TFFarmaceutica_Id;					
						row27.TViaAdmin_id = row20.TViaAdmin_id;

			if(util_tJoin_2.isJoined(row20)){ 			
								row27.MedGenerico_Id = util_tJoin_2.lookupValue.GENERICOS_ID;			
								row27.FFarmaceutica_Id = util_tJoin_2.lookupValue.ID;
			} 
			
///////////////////////    			

 


	tos_count_tJoin_2++;

/**
 * [tJoin_2 main ] stop
 */
	
	/**
	 * [tJoin_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJoin_2";
	
	

 



/**
 * [tJoin_2 process_data_begin ] stop
 */
// Start of branch "row27"
if(row27 != null) { 



	
	/**
	 * [tJavaRow_2 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row27"
						
						);
					}
					

    //Code generate according to input schema and output schema
row17.oViaAdmin = row27.oViaAdmin;
row17.oFFarmaceutica = row27.oFFarmaceutica;
row17.oNGenerico = row27.oNGenerico;
row17.oConcentracion = row27.oConcentracion;
row17.oUnidosis = row27.oUnidosis;
row17.oUMedida = row27.oUMedida;
row17.oFabricante = row27.oFabricante;
row17.oImportador = row27.oImportador;
row17.State = row27.State;
row17.Ins = row27.Ins;
row17._ErrorMessage = row27._ErrorMessage;
row17.CodBarras = row27.CodBarras;
row17.NComercial = row27.NComercial;
row17.PComercial = row27.PComercial;
row17.ViaAdmin = row27.ViaAdmin;
row17.FFarmaceutica = row27.FFarmaceutica;
row17.NGenerico = row27.NGenerico;
row17.Concentracion = row27.Concentracion;
row17.Unidosis = row27.Unidosis;
row17.UMedida = row27.UMedida;
row17.CantUMedida = row27.CantUMedida;
row17.CantMinima = row27.CantMinima;
row17.RegInvima = row27.RegInvima;
row17.FExp_RegInvima = row27.FExp_RegInvima;
row17.FVen_RegInvima = row27.FVen_RegInvima;
row17.FActivoCum = row27.FActivoCum;
row17.FInactivoCum = row27.FInactivoCum;
row17.Expediente = row27.Expediente;
row17.Consecutivo = row27.Consecutivo;
row17.Cum = row27.Cum;
row17.Origen = row27.Origen;
row17.Caracteristicas = row27.Caracteristicas;
row17.Contraindicaciones = row27.Contraindicaciones;
row17.Efectos_Posteriores = row27.Efectos_Posteriores;
row17.Riesgos_Asociados = row27.Riesgos_Asociados;
row17.Dosis_Aplicacion = row27.Dosis_Aplicacion;
row17.NIT_Fabricante = row27.NIT_Fabricante;
row17.Fabricante = row27.Fabricante;
row17.NIT_Importador = row27.NIT_Importador;
row17.Importador = row27.Importador;
row17.usuariosId = row27.usuariosId;
row17.uorgId = row27.uorgId;
row17.ViaAdmin_Id = row27.ViaAdmin_Id;
row17.TFFarmaceutica_Id = row27.TFFarmaceutica_Id;
row17.MedGenerico_Id = row27.MedGenerico_Id;
row17.TViaAdmin_id = row27.TViaAdmin_id;
row17.FFarmaceutica_Id = row27.FFarmaceutica_Id;

//System.out.println("row27.FFarmaceutica:"+row27.FFarmaceutica);

/*if(row27.NGenerico.equals("(*)") == false  && row27.Concentracion.equals("(*)") == false  && row27.MedGenerico_Id == null){
	row17.State = "Erróneo";
	row17.Ins = "No";
	row17._ErrorMessage = "No hay información del generico \n";
	
	if(Utils.empty(row27.oConcentracion) == true){
		row17.NGenerico = row27.oNGenerico +  " | Medicamento generico no registrado.";
	}
	else { 
		row17.NGenerico = row27.oNGenerico +  " | Medicamento generico con concentracion " + row27.oConcentracion + " no  registrado.";
	}
		
	row17._ErrorMessage += row27.NGenerico +" "+ row27.Concentracion + " Sustancia activa no registrada; \n";
}
else if ( Utils.empty(row27.oNGenerico) == false) { 
	row17.NGenerico = row27.oNGenerico; 
}*/

/*
if( row27.MedGenerico_Id != null && row27.ViaAdmin_Id != null){
	
	if(row27.ViaAdmin_Id.compareTo ( row27.TViaAdmin_id ) != 0){	
		row17.ViaAdmin = row17.oViaAdmin + " | Diferente a la del medicamento generico";
		row17.State = "Erróneo";
		row17.Ins = "No";
	}
}
*/

/*if(row27.FFarmaceutica.equals("(*)") == false && row27.MedGenerico_Id != null  && row27.FFarmaceutica_Id ==null ){
	row17.State = "Erróneo";
	row17.Ins = "No";
	row17._ErrorMessage += row27.FFarmaceutica + "," +"Medicamento generico sin formas farmaceuticas registradas; \n";	
}*/

 if(row27.FFarmaceutica.equals("(*)") == false && row27.MedGenerico_Id != null  && row27.FFarmaceutica_Id ==null  &&   row17._ErrorMessage == null)
 { 
	row17.State = "Erróneo";
	row17.Ins = "No";
	row17._ErrorMessage = row27.FFarmaceutica + "," +"Medicamento generico sin formas farmaceuticas registradas; \n";	
  }
  else
  {
    if (row27.FFarmaceutica.equals("(*)") == false && row27.MedGenerico_Id != null  && row27.FFarmaceutica_Id ==null )
    {
	row17.State = "Erróneo";
	row17.Ins = "No";
    row17._ErrorMessage += row27.FFarmaceutica + "," +"Medicamento generico sin formas farmaceuticas registradas; \n";	
    }
  }


/*if(row27.MedGenerico_Id == null){
   	row17.State = "Erróneo";
	row17.Ins = "No";
	row17._ErrorMessage += row27.oNGenerico + "," + "Medicamento generico no registrado; \n";
}*/


 if(row27.MedGenerico_Id == null &&   row17._ErrorMessage == null)
 { 
	row17.State = "Erróneo";
	row17.Ins = "No";
	row17._ErrorMessage = row27.oNGenerico + "," + "Medicamento generico no registrado; \n";
  }
  else
  {
    if (row27.MedGenerico_Id == null)
    {
	row17.State = "Erróneo";
	row17.Ins = "No";
    row17._ErrorMessage += row27.oNGenerico + "," + "Medicamento generico no registrado; \n";	
    }
  }
    nb_line_tJavaRow_2++;   

 


	tos_count_tJavaRow_2++;

/**
 * [tJavaRow_2 main ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_begin ] stop
 */

	
	/**
	 * [tJoin_4 main ] start
	 */

	

	
	
	currentComponent="tJoin_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					

			row19 = null;	
	
				row19 = new row19Struct();						
						row19.oViaAdmin = row17.oViaAdmin;					
						row19.oFFarmaceutica = row17.oFFarmaceutica;					
						row19.oNGenerico = row17.oNGenerico;					
						row19.oConcentracion = row17.oConcentracion;					
						row19.oUnidosis = row17.oUnidosis;					
						row19.oUMedida = row17.oUMedida;					
						row19.oFabricante = row17.oFabricante;					
						row19.oImportador = row17.oImportador;					
						row19.State = row17.State;					
						row19.Ins = row17.Ins;					
						row19._ErrorMessage = row17._ErrorMessage;					
						row19.CodBarras = row17.CodBarras;					
						row19.NComercial = row17.NComercial;					
						row19.PComercial = row17.PComercial;					
						row19.ViaAdmin = row17.ViaAdmin;					
						row19.FFarmaceutica = row17.FFarmaceutica;					
						row19.NGenerico = row17.NGenerico;					
						row19.Concentracion = row17.Concentracion;					
						row19.Unidosis = row17.Unidosis;					
						row19.UMedida = row17.UMedida;					
						row19.CantUMedida = row17.CantUMedida;					
						row19.CantMinima = row17.CantMinima;					
						row19.RegInvima = row17.RegInvima;					
						row19.FExp_RegInvima = row17.FExp_RegInvima;					
						row19.FVen_RegInvima = row17.FVen_RegInvima;					
						row19.FActivoCum = row17.FActivoCum;					
						row19.FInactivoCum = row17.FInactivoCum;					
						row19.Expediente = row17.Expediente;					
						row19.Consecutivo = row17.Consecutivo;					
						row19.Cum = row17.Cum;					
						row19.Origen = row17.Origen;					
						row19.Caracteristicas = row17.Caracteristicas;					
						row19.Contraindicaciones = row17.Contraindicaciones;					
						row19.Efectos_Posteriores = row17.Efectos_Posteriores;					
						row19.Riesgos_Asociados = row17.Riesgos_Asociados;					
						row19.Dosis_Aplicacion = row17.Dosis_Aplicacion;					
						row19.NIT_Fabricante = row17.NIT_Fabricante;					
						row19.Fabricante = row17.Fabricante;					
						row19.NIT_Importador = row17.NIT_Importador;					
						row19.Importador = row17.Importador;					
						row19.usuariosId = row17.usuariosId;					
						row19.uorgId = row17.uorgId;					
						row19.ViaAdmin_Id = row17.ViaAdmin_Id;					
						row19.TFFarmaceutica_Id = row17.TFFarmaceutica_Id;					
						row19.MedGenerico_Id = row17.MedGenerico_Id;					
						row19.TViaAdmin_id = row17.TViaAdmin_id;					
						row19.FFarmaceutica_Id = row17.FFarmaceutica_Id;

			if(util_tJoin_4.isJoined(row17)){ 			
								row19.UMedida_Id = util_tJoin_4.lookupValue.ID;
			} 
			
///////////////////////    			

 


	tos_count_tJoin_4++;

/**
 * [tJoin_4 main ] stop
 */
	
	/**
	 * [tJoin_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJoin_4";
	
	

 



/**
 * [tJoin_4 process_data_begin ] stop
 */
// Start of branch "row19"
if(row19 != null) { 



	
	/**
	 * [tJavaRow_7 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row19"
						
						);
					}
					

    //Code generate according to input schema and output schema
row14.oViaAdmin = row19.oViaAdmin;
row14.oFFarmaceutica = row19.oFFarmaceutica;
row14.oNGenerico = row19.oNGenerico;
row14.oConcentracion = row19.oConcentracion;
row14.oUnidosis = row19.oUnidosis;
row14.oUMedida = row19.oUMedida;
row14.oFabricante = row19.oFabricante;
row14.oImportador = row19.oImportador;
row14.State = row19.State;
row14.Ins = row19.Ins;
row14._ErrorMessage = row19._ErrorMessage;
row14.CodBarras = row19.CodBarras;
row14.NComercial = row19.NComercial;
row14.PComercial = row19.PComercial;
row14.ViaAdmin = row19.ViaAdmin;
row14.FFarmaceutica = row19.FFarmaceutica;
row14.NGenerico = row19.NGenerico;
row14.Concentracion = row19.Concentracion;
row14.Unidosis = row19.Unidosis;
row14.UMedida = row19.UMedida;
row14.CantUMedida = row19.CantUMedida;
row14.CantMinima = row19.CantMinima;
row14.RegInvima = row19.RegInvima;
row14.FExp_RegInvima = row19.FExp_RegInvima;
row14.FVen_RegInvima = row19.FVen_RegInvima;
row14.FActivoCum = row19.FActivoCum;
row14.FInactivoCum = row19.FInactivoCum;
row14.Expediente = row19.Expediente;
row14.Consecutivo = row19.Consecutivo;
row14.Cum = row19.Cum;
row14.Origen = row19.Origen;
row14.Caracteristicas = row19.Caracteristicas;
row14.Contraindicaciones = row19.Contraindicaciones;
row14.Efectos_Posteriores = row19.Efectos_Posteriores;
row14.Riesgos_Asociados = row19.Riesgos_Asociados;
row14.Dosis_Aplicacion = row19.Dosis_Aplicacion;
row14.NIT_Fabricante = row19.NIT_Fabricante;
row14.Fabricante = row19.Fabricante;
row14.NIT_Importador = row19.NIT_Importador;
row14.Importador = row19.Importador;
row14.usuariosId = row19.usuariosId;
row14.uorgId = row19.uorgId;
row14.ViaAdmin_Id = row19.ViaAdmin_Id;
row14.TFFarmaceutica_Id = row19.TFFarmaceutica_Id;
row14.MedGenerico_Id = row19.MedGenerico_Id;
row14.TViaAdmin_id = row19.TViaAdmin_id;
row14.FFarmaceutica_Id = row19.FFarmaceutica_Id;
row14.UMedida_Id = row19.UMedida_Id;



/*if(row19.oUMedida != null  && row19.UMedida_Id == null){
	row14.State = "Erróneo";
	row14.Ins = "No";
	row14.UMedida = " | No registrada";
	row14._ErrorMessage += row19.oUMedida + "," +"Unidad de medida no registrada; \n";
}*/
/*else 
if (Utils.empty(row19.oUMedida)== false) 
{ row14.UMedida = row19.oUMedida; }*/ 

 if(row19.oUMedida != null  && row19.UMedida_Id == null && row14._ErrorMessage == null)
 { 
	row14.State = "Erróneo";
	row14.Ins = "No";
	row14._ErrorMessage = row19.oUMedida + "," +"Unidad de medida no registrada; \n";
  }
  else
  {
    if (row19.oUMedida != null  && row19.UMedida_Id == null)
    { 
	row14.State = "Erróneo";
	row14.Ins = "No";
    row14._ErrorMessage += row19.oUMedida + "," +"Unidad de medida no registrada; \n";
    }
  }


//row14.CantUMedida_Int = Utils.toInteger(row19.CantUMedida,false);
row14.CantUMedida_Int = Utils.toDouble(row19.CantUMedida,null);
row14.CantMinima_Int = Utils.toInteger(row19.CantMinima,true);


/*if(Utils.empty(row19.CantUMedida) == false && row19.CantUMedida.contains("(*)") == false  && row14.CantUMedida_Int == null){
	//row14.CantUMedida += " | Valor invalido"; 
	row14.State = "Erróneo";
	row14.Ins = "No";
	row14._ErrorMessage += row19.CantUMedida + "," +"Valor de cantidad de unidad de medida no valido; \n";
}*/

 if(Utils.empty(row19.CantUMedida) == false && row19.CantUMedida.contains("(*)") == false  && row14.CantUMedida_Int == null && row14._ErrorMessage == null)
 { 
	row14.State = "Erróneo";
	row14.Ins = "No";
	row14._ErrorMessage = row19.CantUMedida + "," +"Valor de cantidad de unidad de medida no valido; \n";
  }
  else
  {
    if (Utils.empty(row19.CantUMedida) == false && row19.CantUMedida.contains("(*)") == false  && row14.CantUMedida_Int == null)
    {
	row14.State = "Erróneo";
	row14.Ins = "No";
    row14._ErrorMessage += row19.CantUMedida + "," +"Valor de cantidad de unidad de medida no valido; \n";
    }
  }

/*if(row19.CantMinima.contains("(*)") == false  && row14.CantMinima_Int == null){
	//row14.CantMinima += " | Valor invalido"; 
	row14.State = "Erróneo";
	row14.Ins = "No";
	row14._ErrorMessage = "Valor de cantidad mínima no valido; \n";
}*/

 if(row19.CantMinima.contains("(*)") == false  && row14.CantMinima_Int == null && row14._ErrorMessage == null)
 { 
	row14.State = "Erróneo";
	row14.Ins = "No";
	row14._ErrorMessage = row19.CantMinima + "," +"Valor de cantidad mínima no valido; \n";
  }
  else
  {
    if (row19.CantMinima.contains("(*)") == false  && row14.CantMinima_Int == null)
    {
	row14.State = "Erróneo";
	row14.Ins = "No";
    row14._ErrorMessage += row19.CantMinima + "," +"Valor de cantidad mínima no valido; \n";
    }
  }

row14._FExp_RegInvima = null;
row14._FVen_RegInvima = null;
row14._FActivoCum = null;
row14._FInactivoCum = null;


/*if(row19.FExp_RegInvima != null && row19.FExp_RegInvima != ""){ 
	row14._FExp_RegInvima = TalendDate.isDate(row19.FExp_RegInvima,"dd/MM/yyyy");
	if(row14._FExp_RegInvima == false){ 
		//row14.FExp_RegInvima += " | No valida";
		row14.State = "Erróneo";
		row14.Ins = "No";
		row14._ErrorMessage += row19.FExp_RegInvima + "," +"Fecha de registro no valida; \n";		
	}
}*/
//Uno
 if(row19.FExp_RegInvima != null && row19.FExp_RegInvima != "" && row14._ErrorMessage == null)
 { 
    row14._FExp_RegInvima = TalendDate.isDate(row19.FExp_RegInvima,"dd/MM/yyyy");
	if(row14._FExp_RegInvima == false)
	{ 
		row14.State = "Erróneo";
		row14.Ins = "No";
		row14._ErrorMessage = row19.FExp_RegInvima + "," +"Fecha de registro no valida; \n";		
	}
  }
  else
  {
    if (row19.FExp_RegInvima != null && row19.FExp_RegInvima != "")
    {
    row14._FExp_RegInvima = TalendDate.isDate(row19.FExp_RegInvima,"dd/MM/yyyy");
	if(row14._FExp_RegInvima == false)
	{ 
		row14.State = "Erróneo";
		row14.Ins = "No";
		row14._ErrorMessage += row19.FExp_RegInvima + "," +"Fecha de registro no valida; \n";		
	}
    }
  }
//Dos
/*if(row19.FVen_RegInvima != null && row19.FVen_RegInvima != ""){
	row14._FVen_RegInvima = TalendDate.isDate(row19.FVen_RegInvima,"dd/MM/yyyy");
	if( row14._FVen_RegInvima == false){ 
		//row14.FVen_RegInvima += " | No valida";
		row14.State = "Erróneo";
		row14.Ins = "No";	
		row14._ErrorMessage += row19.FVen_RegInvima + "," +"Fecha de vencimiento no valida; \n";
	}
}*/

 if(row19.FVen_RegInvima != null && row19.FVen_RegInvima != "" && row14._ErrorMessage == null)
 { 
	row14._FVen_RegInvima = TalendDate.isDate(row19.FVen_RegInvima,"dd/MM/yyyy");
	if( row14._FVen_RegInvima == false){ 
		row14.State = "Erróneo";
		row14.Ins = "No";	
		row14._ErrorMessage = row19.FVen_RegInvima + "," +"Fecha de vencimiento no valida; \n";
	}
  }
  else
  {
    if (row19.FVen_RegInvima != null && row19.FVen_RegInvima != "" )
    {
	row14._FVen_RegInvima = TalendDate.isDate(row19.FVen_RegInvima,"dd/MM/yyyy");
	if( row14._FVen_RegInvima == false){ 
		row14.State = "Erróneo";
		row14.Ins = "No";	
		row14._ErrorMessage += row19.FVen_RegInvima + "," +"Fecha de vencimiento no valida; \n";
	}
    }
  }

//Tres
/*if(row19.FActivoCum != null && row19.FActivoCum != ""){
	row14._FActivoCum = TalendDate.isDate(row19.FActivoCum,"dd/MM/yyyy");
	if(row14._FActivoCum == false){
		//row14.FActivoCum += " | No valida";
		row14.State = "Erróneo";
		row14.Ins = "No";	
	    row14._ErrorMessage += row19.FActivoCum + "," +"Fecha de activación no valida; \n";	
	}
}*/

 if(row19.FActivoCum != null && row19.FActivoCum != "" && row14._ErrorMessage == null)
 { 
	row14._FActivoCum = TalendDate.isDate(row19.FActivoCum,"dd/MM/yyyy");
	if(row14._FActivoCum == false){
		row14.State = "Erróneo";
		row14.Ins = "No";	
	    row14._ErrorMessage = row19.FActivoCum + "," +"Fecha de activación no valida; \n";	
	}
  }
  else
  {
    if (row19.FVen_RegInvima != null && row19.FVen_RegInvima != "" )
    {
	row14._FActivoCum = TalendDate.isDate(row19.FActivoCum,"dd/MM/yyyy");
	if(row14._FActivoCum == false){
		row14.State = "Erróneo";
		row14.Ins = "No";	
	    row14._ErrorMessage += row19.FActivoCum + "," +"Fecha de activación no valida; \n";	
	}
    }
  }
//Cuatro
/*if(row19.FInactivoCum != null && row19.FInactivoCum != ""){
	row14._FInactivoCum = TalendDate.isDate(row19.FInactivoCum,"dd/MM/yyyy");
	if( row14._FInactivoCum == false) { 
		//row14.FInactivoCum += " | No valida";
		row14.State = "Erróneo";
		row14.Ins = "No";
	    row14._ErrorMessage += row19.FInactivoCum + "," +"Fecha de inactivación no valida; \n";			
		
	}
}*/

 if(row19.FInactivoCum != null && row19.FInactivoCum != "" && row14._ErrorMessage == null)
 { 
	row14._FInactivoCum = TalendDate.isDate(row19.FInactivoCum,"dd/MM/yyyy");
	if( row14._FInactivoCum == false) { 
		//row14.FInactivoCum += " | No valida";
		row14.State = "Erróneo";
		row14.Ins = "No";
	    row14._ErrorMessage = row19.FInactivoCum + "," +"Fecha de inactivación no valida; \n";			
		
	}
  }
  else
  {
    if (row19.FInactivoCum != null && row19.FInactivoCum != "" )
    {
	row14._FInactivoCum = TalendDate.isDate(row19.FInactivoCum,"dd/MM/yyyy");
	if( row14._FInactivoCum == false) { 
		//row14.FInactivoCum += " | No valida";
		row14.State = "Erróneo";
		row14.Ins = "No";
	    row14._ErrorMessage += row19.FInactivoCum + "," +"Fecha de inactivación no valida; \n";			
		
	}
    }
  }

    nb_line_tJavaRow_7++;   

 


	tos_count_tJavaRow_7++;

/**
 * [tJavaRow_7 main ] stop
 */
	
	/**
	 * [tJavaRow_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

next_3 = null;


// # Output table : 'next_3'
next_3_tmp.oViaAdmin = row14.oViaAdmin ;
next_3_tmp.oFFarmaceutica = row14.oFFarmaceutica ;
next_3_tmp.oNGenerico = row14.oNGenerico ;
next_3_tmp.oConcentracion = row14.oConcentracion ;
next_3_tmp.oUnidosis = row14.oUnidosis ;
next_3_tmp.oUMedida = row14.oUMedida ;
next_3_tmp.oFabricante = row14.oFabricante ;
next_3_tmp.oImportador = row14.oImportador ;
next_3_tmp.State = row14.State ;
next_3_tmp.Ins = row14.Ins ;
next_3_tmp._ErrorMessage = row14._ErrorMessage ;
next_3_tmp.CodBarras = row14.CodBarras ;
next_3_tmp.NComercial = row14.NComercial ;
next_3_tmp.PComercial = row14.PComercial ;
next_3_tmp.ViaAdmin = row14.ViaAdmin ;
next_3_tmp.FFarmaceutica = row14.FFarmaceutica ;
next_3_tmp.NGenerico = row14.NGenerico ;
next_3_tmp.Concentracion = row14.Concentracion ;
next_3_tmp.Unidosis = row14.Unidosis ;
next_3_tmp.UMedida = row14.UMedida ;
next_3_tmp.CantUMedida = row14.CantUMedida ;
next_3_tmp.CantMinima = row14.CantMinima ;
next_3_tmp.RegInvima = row14.RegInvima ;
next_3_tmp.FExp_RegInvima = row14.FExp_RegInvima != null ? StringHandling.UPCASE(row20.FExp_RegInvima).equals("NA") ? null : row20.FExp_RegInvima : row20.FExp_RegInvima ;
next_3_tmp.FVen_RegInvima = row14.FVen_RegInvima != null ? StringHandling.UPCASE(row20.FVen_RegInvima).equals("NA") ? null : row20.FVen_RegInvima : row20.FVen_RegInvima ;
next_3_tmp.FActivoCum = row14.FActivoCum != null ? StringHandling.UPCASE(row20.FActivoCum).equals("NA") ? null : row20.FActivoCum : row20.FActivoCum ;
next_3_tmp.FInactivoCum = row14.FInactivoCum != null ? StringHandling.UPCASE(row20.FInactivoCum).equals("NA") ? null : row20.FInactivoCum : row20.FInactivoCum ;
next_3_tmp.Expediente = row14.Expediente ;
next_3_tmp.Consecutivo = row14.Consecutivo ;
next_3_tmp.Cum = row14.Cum ;
next_3_tmp.Origen = row14.Origen ;
next_3_tmp.Caracteristicas = row14.Caracteristicas ;
next_3_tmp.Contraindicaciones = row14.Contraindicaciones ;
next_3_tmp.Efectos_Posteriores = row14.Efectos_Posteriores ;
next_3_tmp.Riesgos_Asociados = row14.Riesgos_Asociados ;
next_3_tmp.Dosis_Aplicacion = row14.Dosis_Aplicacion ;
next_3_tmp.NIT_Fabricante = row14.NIT_Fabricante ;
next_3_tmp.Fabricante = row14.Fabricante ;
next_3_tmp.NIT_Importador = row14.NIT_Importador ;
next_3_tmp.Importador = row14.Importador ;
next_3_tmp.usuariosId = row14.usuariosId;
next_3_tmp.uorgId = row14.uorgId;
next_3_tmp.ViaAdmin_Id = row14.ViaAdmin_Id ;
next_3_tmp.TFFarmaceutica_Id = row14.TFFarmaceutica_Id ;
next_3_tmp.MedGenerico_Id = row14.MedGenerico_Id ;
next_3_tmp.FFarmaceutica_Id = row14.FFarmaceutica_Id ;
next_3_tmp.UMedida_Id = row14.UMedida_Id ;
next_3_tmp.CantUMedida_Int = row14.CantUMedida_Int ;
next_3_tmp.CantMinima_Int = row14.CantMinima_Int ;
next_3_tmp._FExp_RegInvima = row14._FExp_RegInvima ;
next_3_tmp._FVen_RegInvima = row14._FVen_RegInvima ;
next_3_tmp._FActivoCum = row14._FActivoCum ;
next_3_tmp._FInactivoCum = row14._FInactivoCum ;
next_3_tmp.Fabricante_NitN = StringHandling.TRIM(row14.Fabricante) + StringHandling.TRIM(row14.NIT_Fabricante) ;
next_3_tmp.Importador_NitN = StringHandling.TRIM(row14.Importador) + StringHandling.TRIM(row14.NIT_Importador) ;
next_3_tmp.Fabricante_Id = null;
next_3 = next_3_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "next_3"
if(next_3 != null) { 



	
	/**
	 * [tJoin_6 main ] start
	 */

	

	
	
	currentComponent="tJoin_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"next_3"
						
						);
					}
					

			row22 = null;	
	
				row22 = new row22Struct();						
						row22.oViaAdmin = next_3.oViaAdmin;					
						row22.oFFarmaceutica = next_3.oFFarmaceutica;					
						row22.oNGenerico = next_3.oNGenerico;					
						row22.oConcentracion = next_3.oConcentracion;					
						row22.oUnidosis = next_3.oUnidosis;					
						row22.oUMedida = next_3.oUMedida;					
						row22.oFabricante = next_3.oFabricante;					
						row22.oImportador = next_3.oImportador;					
						row22.State = next_3.State;					
						row22.Ins = next_3.Ins;					
						row22._ErrorMessage = next_3._ErrorMessage;					
						row22.CodBarras = next_3.CodBarras;					
						row22.NComercial = next_3.NComercial;					
						row22.PComercial = next_3.PComercial;					
						row22.ViaAdmin = next_3.ViaAdmin;					
						row22.FFarmaceutica = next_3.FFarmaceutica;					
						row22.NGenerico = next_3.NGenerico;					
						row22.Concentracion = next_3.Concentracion;					
						row22.Unidosis = next_3.Unidosis;					
						row22.UMedida = next_3.UMedida;					
						row22.CantUMedida = next_3.CantUMedida;					
						row22.CantMinima = next_3.CantMinima;					
						row22.RegInvima = next_3.RegInvima;					
						row22.FExp_RegInvima = next_3.FExp_RegInvima;					
						row22.FVen_RegInvima = next_3.FVen_RegInvima;					
						row22.FActivoCum = next_3.FActivoCum;					
						row22.FInactivoCum = next_3.FInactivoCum;					
						row22.Expediente = next_3.Expediente;					
						row22.Consecutivo = next_3.Consecutivo;					
						row22.Cum = next_3.Cum;					
						row22.Origen = next_3.Origen;					
						row22.Caracteristicas = next_3.Caracteristicas;					
						row22.Contraindicaciones = next_3.Contraindicaciones;					
						row22.Efectos_Posteriores = next_3.Efectos_Posteriores;					
						row22.Riesgos_Asociados = next_3.Riesgos_Asociados;					
						row22.Dosis_Aplicacion = next_3.Dosis_Aplicacion;					
						row22.NIT_Fabricante = next_3.NIT_Fabricante;					
						row22.Fabricante = next_3.Fabricante;					
						row22.NIT_Importador = next_3.NIT_Importador;					
						row22.Importador = next_3.Importador;					
						row22.usuariosId = next_3.usuariosId;					
						row22.uorgId = next_3.uorgId;					
						row22.ViaAdmin_Id = next_3.ViaAdmin_Id;					
						row22.TFFarmaceutica_Id = next_3.TFFarmaceutica_Id;					
						row22.MedGenerico_Id = next_3.MedGenerico_Id;					
						row22.FFarmaceutica_Id = next_3.FFarmaceutica_Id;					
						row22.UMedida_Id = next_3.UMedida_Id;					
						row22.CantUMedida_Int = next_3.CantUMedida_Int;					
						row22.CantMinima_Int = next_3.CantMinima_Int;					
						row22._FExp_RegInvima = next_3._FExp_RegInvima;					
						row22._FVen_RegInvima = next_3._FVen_RegInvima;					
						row22._FActivoCum = next_3._FActivoCum;					
						row22._FInactivoCum = next_3._FInactivoCum;					
						row22.Fabricante_NitN = next_3.Fabricante_NitN;					
						row22.Importador_NitN = next_3.Importador_NitN;

			if(util_tJoin_6.isJoined(next_3)){ 			
								row22.Fabricante_Id = util_tJoin_6.lookupValue.ID;
			} 
			
///////////////////////    			

 


	tos_count_tJoin_6++;

/**
 * [tJoin_6 main ] stop
 */
	
	/**
	 * [tJoin_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJoin_6";
	
	

 



/**
 * [tJoin_6 process_data_begin ] stop
 */
// Start of branch "row22"
if(row22 != null) { 



	
	/**
	 * [tJoin_7 main ] start
	 */

	

	
	
	currentComponent="tJoin_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row22"
						
						);
					}
					

			row24 = null;	
	
				row24 = new row24Struct();						
						row24.oViaAdmin = row22.oViaAdmin;					
						row24.oFFarmaceutica = row22.oFFarmaceutica;					
						row24.oNGenerico = row22.oNGenerico;					
						row24.oConcentracion = row22.oConcentracion;					
						row24.oUnidosis = row22.oUnidosis;					
						row24.oUMedida = row22.oUMedida;					
						row24.oFabricante = row22.oFabricante;					
						row24.oImportador = row22.oImportador;					
						row24.State = row22.State;					
						row24.Ins = row22.Ins;					
						row24._ErrorMessage = row22._ErrorMessage;					
						row24.CodBarras = row22.CodBarras;					
						row24.NComercial = row22.NComercial;					
						row24.PComercial = row22.PComercial;					
						row24.ViaAdmin = row22.ViaAdmin;					
						row24.FFarmaceutica = row22.FFarmaceutica;					
						row24.NGenerico = row22.NGenerico;					
						row24.Concentracion = row22.Concentracion;					
						row24.Unidosis = row22.Unidosis;					
						row24.UMedida = row22.UMedida;					
						row24.CantUMedida = row22.CantUMedida;					
						row24.CantMinima = row22.CantMinima;					
						row24.RegInvima = row22.RegInvima;					
						row24.FExp_RegInvima = row22.FExp_RegInvima;					
						row24.FVen_RegInvima = row22.FVen_RegInvima;					
						row24.FActivoCum = row22.FActivoCum;					
						row24.FInactivoCum = row22.FInactivoCum;					
						row24.Expediente = row22.Expediente;					
						row24.Consecutivo = row22.Consecutivo;					
						row24.Cum = row22.Cum;					
						row24.Origen = row22.Origen;					
						row24.Caracteristicas = row22.Caracteristicas;					
						row24.Contraindicaciones = row22.Contraindicaciones;					
						row24.Efectos_Posteriores = row22.Efectos_Posteriores;					
						row24.Riesgos_Asociados = row22.Riesgos_Asociados;					
						row24.Dosis_Aplicacion = row22.Dosis_Aplicacion;					
						row24.NIT_Fabricante = row22.NIT_Fabricante;					
						row24.Fabricante = row22.Fabricante;					
						row24.NIT_Importador = row22.NIT_Importador;					
						row24.Importador = row22.Importador;					
						row24.usuariosId = row22.usuariosId;					
						row24.uorgId = row22.uorgId;					
						row24.ViaAdmin_Id = row22.ViaAdmin_Id;					
						row24.TFFarmaceutica_Id = row22.TFFarmaceutica_Id;					
						row24.MedGenerico_Id = row22.MedGenerico_Id;					
						row24.FFarmaceutica_Id = row22.FFarmaceutica_Id;					
						row24.UMedida_Id = row22.UMedida_Id;					
						row24.CantUMedida_Int = row22.CantUMedida_Int;					
						row24.CantMinima_Int = row22.CantMinima_Int;					
						row24._FExp_RegInvima = row22._FExp_RegInvima;					
						row24._FVen_RegInvima = row22._FVen_RegInvima;					
						row24._FActivoCum = row22._FActivoCum;					
						row24._FInactivoCum = row22._FInactivoCum;					
						row24.Fabricante_NitN = row22.Fabricante_NitN;					
						row24.Importador_NitN = row22.Importador_NitN;					
						row24.Fabricante_Id = row22.Fabricante_Id;

			if(util_tJoin_7.isJoined(row22)){ 			
								row24.Importador_Id = util_tJoin_7.lookupValue.ID;
			} 
			
///////////////////////    			

 


	tos_count_tJoin_7++;

/**
 * [tJoin_7 main ] stop
 */
	
	/**
	 * [tJoin_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJoin_7";
	
	

 



/**
 * [tJoin_7 process_data_begin ] stop
 */
// Start of branch "row24"
if(row24 != null) { 



	
	/**
	 * [tJavaRow_11 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					

    //Code generate according to input schema and output schema
row25.oViaAdmin = row24.oViaAdmin;
row25.oFFarmaceutica = row24.oFFarmaceutica;
row25.oNGenerico = row24.oNGenerico;
row25.oConcentracion = row24.oConcentracion;
row25.oUnidosis = row24.oUnidosis;
row25.oUMedida = row24.oUMedida;
row25.oFabricante = row24.oFabricante;
row25.oImportador = row24.oImportador;
row25.State = row24.State;
row25.Ins = row24.Ins;
row25._ErrorMessage = row24._ErrorMessage;
row25.CodBarras = row24.CodBarras;
row25.NComercial = row24.NComercial;
row25.PComercial = row24.PComercial;
row25.ViaAdmin = row24.ViaAdmin;
row25.FFarmaceutica = row24.FFarmaceutica;
row25.NGenerico = row24.NGenerico;
row25.Concentracion = row24.Concentracion;
row25.Unidosis = row24.Unidosis;
row25.UMedida = row24.UMedida;
row25.CantUMedida = row24.CantUMedida;
row25.CantMinima = row24.CantMinima;
row25.RegInvima = row24.RegInvima;
row25.FExp_RegInvima = row24.FExp_RegInvima;
row25.FVen_RegInvima = row24.FVen_RegInvima;
row25.FActivoCum = row24.FActivoCum;
row25.FInactivoCum = row24.FInactivoCum;
row25.Expediente = row24.Expediente;
row25.Consecutivo = row24.Consecutivo;
row25.Cum = row24.Cum;
row25.Origen = row24.Origen;
row25.Caracteristicas = row24.Caracteristicas;
row25.Contraindicaciones = row24.Contraindicaciones;
row25.Efectos_Posteriores = row24.Efectos_Posteriores;
row25.Riesgos_Asociados = row24.Riesgos_Asociados;
row25.Dosis_Aplicacion = row24.Dosis_Aplicacion;
row25.NIT_Fabricante = row24.NIT_Fabricante;
row25.Fabricante = row24.Fabricante;
row25.NIT_Importador = row24.NIT_Importador;
row25.Importador = row24.Importador;
row25.usuariosId = row24.usuariosId;
row25.uorgId = row24.uorgId;
row25.ViaAdmin_Id = row24.ViaAdmin_Id;
row25.TFFarmaceutica_Id = row24.TFFarmaceutica_Id;
row25.MedGenerico_Id = row24.MedGenerico_Id;
row25.FFarmaceutica_Id = row24.FFarmaceutica_Id;
row25.UMedida_Id = row24.UMedida_Id;
row25.CantUMedida_Int = row24.CantUMedida_Int;
row25.CantMinima_Int = row24.CantMinima_Int;
row25._FExp_RegInvima = row24._FExp_RegInvima;
row25._FVen_RegInvima = row24._FVen_RegInvima;
row25._FActivoCum = row24._FActivoCum;
row25._FInactivoCum = row24._FInactivoCum;
row25.Fabricante_NitN = row24.Fabricante_NitN;
row25.Importador_NitN = row24.Importador_NitN;
row25.Fabricante_Id = row24.Fabricante_Id;
row25.Importador_Id = row24.Importador_Id;

/*if(row24.oFabricante != null && row24.Fabricante_Id == null && row25._ErrorMessage == null){ 
	//row25.Fabricante = " | No registrado"; 
	row25.State = "Erróneo";
	row25.Ins = "No";
    row25._ErrorMessage = row25.Fabricante + "," +"Fabricante no registrado; \n";
	
}*/

if(row24.oFabricante != null && row24.Fabricante_Id == null && row25._ErrorMessage == null){ 
	//row25.Fabricante = " | No registrado"; 
	row25.State = "Erróneo";
	row25.Ins = "No";
    row25._ErrorMessage = row25.Fabricante + "," +"Fabricante no registrado; \n";
  }
  else
  {
    if (row24.oFabricante != null && row24.Fabricante_Id == null)
    {
     //row25.Fabricante = " | No registrado"; 
	row25.State = "Erróneo";
	row25.Ins = "No";
    row25._ErrorMessage += row25.Fabricante + "," +"Fabricante no registrado; \n";
    }
  }

	
/*if(row24.oImportador !=null && row24.Importador_Id == null){ 
	//row25.Importador = " | No registrado"; 
	row25.State = "Erróneo";
	row25.Ins = "No";
	row25._ErrorMessage = row24.oImportador + "," +"Importador no registrado; \n";
}*/

if(row24.oImportador !=null && row24.Importador_Id == null && row25._ErrorMessage == null){ 
	row25.State = "Erróneo";
	row25.Ins = "No";
    row25._ErrorMessage = row24.oImportador + "," +"Importador no registrado; \n";
  }
  else
  {
    if (row24.oImportador !=null && row24.Importador_Id == null)
    {
	row25.State = "Erróneo";
	row25.Ins = "No";
    row25._ErrorMessage += row24.oImportador + "," +"Importador no registrado; \n";
    }
  }

/*if(StringHandling.LEN(row24.RegInvima) > 50){
	//row25.RegInvima = row24.RegInvima + " | Supera el numero de caracteres permitidos (50)";
	row25.State = "Erróneo";
	row25.Ins = "No";
    row25._ErrorMessage += row24.RegInvima + "," +"El código de registro invima supera el limite de caracteres permitidos (50); \n";
}*/


if(StringHandling.LEN(row24.RegInvima) > 50 && row25._ErrorMessage == null){ 
	row25.State = "Erróneo";
	row25.Ins = "No";
    row25._ErrorMessage = row24.RegInvima + "," +"El código de registro invima supera el limite de caracteres permitidos (50); \n";
  }
  else
  {
    if (StringHandling.LEN(row24.RegInvima) > 50)
    {
	row25.State = "Erróneo";
	row25.Ins = "No";
    row25._ErrorMessage += row24.RegInvima + "," +"El código de registro invima supera el limite de caracteres permitidos (50); \n";
    }
  }

    nb_line_tJavaRow_11++;   

 


	tos_count_tJavaRow_11++;

/**
 * [tJavaRow_11 main ] stop
 */
	
	/**
	 * [tJavaRow_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

 



/**
 * [tJavaRow_11 process_data_begin ] stop
 */

	
	/**
	 * [tNormalize_1 main ] start
	 */

	

	
	
	currentComponent="tNormalize_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					

            normalizeRecord_tNormalize_1 = new String[1];
            if(row25.Caracteristicas != null) {
				if("".equals(row25.Caracteristicas)){
		        	normalizeRecord_tNormalize_1[0] = "";
		        }else{
	                
	                    	normalizeRecord_tNormalize_1 = row25.Caracteristicas.split("/");
	                        
                }           
            }
             		lastNoEmptyIndex_tNormalize_1=normalizeRecord_tNormalize_1.length;
	             	
	             		if(lastNoEmptyIndex_tNormalize_1 == 1 && "".equals(normalizeRecord_tNormalize_1[0])){
	             			lastNoEmptyIndex_tNormalize_1 = 0;
	             		}
	             	
            	
            	for(int i_tNormalize_1 = 0 ; i_tNormalize_1 < lastNoEmptyIndex_tNormalize_1 ; i_tNormalize_1++) {
		  			
		            	if(normalizeRecord_tNormalize_1[i_tNormalize_1]!=null){
		            		normalizeRecord_tNormalize_1[i_tNormalize_1]=normalizeRecord_tNormalize_1[i_tNormalize_1].trim();
		            	}
		            
	                currentRecord_tNormalize_1 = new StringBuilder();
	                nb_line_tNormalize_1++;               
	                
	                                	tmp_tNormalize_1 = row25.oViaAdmin == null ? null : String.valueOf(row25.oViaAdmin);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.oFFarmaceutica == null ? null : String.valueOf(row25.oFFarmaceutica);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.oNGenerico == null ? null : String.valueOf(row25.oNGenerico);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.oConcentracion == null ? null : String.valueOf(row25.oConcentracion);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.oUnidosis == null ? null : String.valueOf(row25.oUnidosis);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.oUMedida == null ? null : String.valueOf(row25.oUMedida);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.oFabricante == null ? null : String.valueOf(row25.oFabricante);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.oImportador == null ? null : String.valueOf(row25.oImportador);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.State == null ? null : String.valueOf(row25.State);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.Ins == null ? null : String.valueOf(row25.Ins);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25._ErrorMessage == null ? null : String.valueOf(row25._ErrorMessage);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.CodBarras == null ? null : String.valueOf(row25.CodBarras);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.NComercial == null ? null : String.valueOf(row25.NComercial);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.PComercial == null ? null : String.valueOf(row25.PComercial);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.ViaAdmin == null ? null : String.valueOf(row25.ViaAdmin);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.FFarmaceutica == null ? null : String.valueOf(row25.FFarmaceutica);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.NGenerico == null ? null : String.valueOf(row25.NGenerico);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.Concentracion == null ? null : String.valueOf(row25.Concentracion);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.Unidosis == null ? null : String.valueOf(row25.Unidosis);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.UMedida == null ? null : String.valueOf(row25.UMedida);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.CantUMedida == null ? null : String.valueOf(row25.CantUMedida);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.CantMinima == null ? null : String.valueOf(row25.CantMinima);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.RegInvima == null ? null : String.valueOf(row25.RegInvima);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.FExp_RegInvima == null ? null : String.valueOf(row25.FExp_RegInvima);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.FVen_RegInvima == null ? null : String.valueOf(row25.FVen_RegInvima);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.FActivoCum == null ? null : String.valueOf(row25.FActivoCum);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.FInactivoCum == null ? null : String.valueOf(row25.FInactivoCum);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.Expediente == null ? null : String.valueOf(row25.Expediente);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.Consecutivo == null ? null : String.valueOf(row25.Consecutivo);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.Cum == null ? null : String.valueOf(row25.Cum);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.Origen == null ? null : String.valueOf(row25.Origen);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
		                            if(normalizeRecord_tNormalize_1[i_tNormalize_1] != null) {
		                                currentRecord_tNormalize_1.append(normalizeRecord_tNormalize_1[i_tNormalize_1] + normalizeRecord_tNormalize_1[i_tNormalize_1].length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.Contraindicaciones == null ? null : String.valueOf(row25.Contraindicaciones);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.Efectos_Posteriores == null ? null : String.valueOf(row25.Efectos_Posteriores);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.Riesgos_Asociados == null ? null : String.valueOf(row25.Riesgos_Asociados);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.Dosis_Aplicacion == null ? null : String.valueOf(row25.Dosis_Aplicacion);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.NIT_Fabricante == null ? null : String.valueOf(row25.NIT_Fabricante);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.Fabricante == null ? null : String.valueOf(row25.Fabricante);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.NIT_Importador == null ? null : String.valueOf(row25.NIT_Importador);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.Importador == null ? null : String.valueOf(row25.Importador);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = String.valueOf(row25.usuariosId);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = String.valueOf(row25.uorgId);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = String.valueOf(row25.ViaAdmin_Id);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = String.valueOf(row25.TFFarmaceutica_Id);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = String.valueOf(row25.MedGenerico_Id);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = String.valueOf(row25.FFarmaceutica_Id);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = String.valueOf(row25.UMedida_Id);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
		                                    tmp_tNormalize_1 = row25.CantUMedida_Int == null ? null : row25.CantUMedida_Int.toString();
		                                    
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
		                                    tmp_tNormalize_1 = row25.CantMinima_Int == null ? null : row25.CantMinima_Int.toString();
		                                    
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
		                                    tmp_tNormalize_1 = row25._FExp_RegInvima == null ? null : row25._FExp_RegInvima.toString();
		                                    
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
		                                    tmp_tNormalize_1 = row25._FVen_RegInvima == null ? null : row25._FVen_RegInvima.toString();
		                                    
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
		                                    tmp_tNormalize_1 = row25._FActivoCum == null ? null : row25._FActivoCum.toString();
		                                    
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
		                                    tmp_tNormalize_1 = row25._FInactivoCum == null ? null : row25._FInactivoCum.toString();
		                                    
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.Fabricante_NitN == null ? null : String.valueOf(row25.Fabricante_NitN);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = row25.Importador_NitN == null ? null : String.valueOf(row25.Importador_NitN);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = String.valueOf(row25.Fabricante_Id);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
	                                	tmp_tNormalize_1 = String.valueOf(row25.Importador_Id);
	                                
		                            if(tmp_tNormalize_1 != null){
		                                currentRecord_tNormalize_1.append(tmp_tNormalize_1 + tmp_tNormalize_1.length());
		                            }
	                            
		                    if(!recordSet_tNormalize_1.contains(currentRecord_tNormalize_1.toString())) {
		                        recordSet_tNormalize_1.add(currentRecord_tNormalize_1.toString());
		                    } else {
		                        continue;
		                    }                    
		                
	                        	row31.oViaAdmin = row25.oViaAdmin;
	                        
	                        	row31.oFFarmaceutica = row25.oFFarmaceutica;
	                        
	                        	row31.oNGenerico = row25.oNGenerico;
	                        
	                        	row31.oConcentracion = row25.oConcentracion;
	                        
	                        	row31.oUnidosis = row25.oUnidosis;
	                        
	                        	row31.oUMedida = row25.oUMedida;
	                        
	                        	row31.oFabricante = row25.oFabricante;
	                        
	                        	row31.oImportador = row25.oImportador;
	                        
	                        	row31.State = row25.State;
	                        
	                        	row31.Ins = row25.Ins;
	                        
	                        	row31._ErrorMessage = row25._ErrorMessage;
	                        
	                        	row31.CodBarras = row25.CodBarras;
	                        
	                        	row31.NComercial = row25.NComercial;
	                        
	                        	row31.PComercial = row25.PComercial;
	                        
	                        	row31.ViaAdmin = row25.ViaAdmin;
	                        
	                        	row31.FFarmaceutica = row25.FFarmaceutica;
	                        
	                        	row31.NGenerico = row25.NGenerico;
	                        
	                        	row31.Concentracion = row25.Concentracion;
	                        
	                        	row31.Unidosis = row25.Unidosis;
	                        
	                        	row31.UMedida = row25.UMedida;
	                        
	                        	row31.CantUMedida = row25.CantUMedida;
	                        
	                        	row31.CantMinima = row25.CantMinima;
	                        
	                        	row31.RegInvima = row25.RegInvima;
	                        
	                        	row31.FExp_RegInvima = row25.FExp_RegInvima;
	                        
	                        	row31.FVen_RegInvima = row25.FVen_RegInvima;
	                        
	                        	row31.FActivoCum = row25.FActivoCum;
	                        
	                        	row31.FInactivoCum = row25.FInactivoCum;
	                        
	                        	row31.Expediente = row25.Expediente;
	                        
	                        	row31.Consecutivo = row25.Consecutivo;
	                        
	                        	row31.Cum = row25.Cum;
	                        
	                        	row31.Origen = row25.Origen;
	                        
	                        	row31.Caracteristicas = normalizeRecord_tNormalize_1[i_tNormalize_1];
		                    
	                        	row31.Contraindicaciones = row25.Contraindicaciones;
	                        
	                        	row31.Efectos_Posteriores = row25.Efectos_Posteriores;
	                        
	                        	row31.Riesgos_Asociados = row25.Riesgos_Asociados;
	                        
	                        	row31.Dosis_Aplicacion = row25.Dosis_Aplicacion;
	                        
	                        	row31.NIT_Fabricante = row25.NIT_Fabricante;
	                        
	                        	row31.Fabricante = row25.Fabricante;
	                        
	                        	row31.NIT_Importador = row25.NIT_Importador;
	                        
	                        	row31.Importador = row25.Importador;
	                        
	                        	row31.usuariosId = row25.usuariosId;
	                        
	                        	row31.uorgId = row25.uorgId;
	                        
	                        	row31.ViaAdmin_Id = row25.ViaAdmin_Id;
	                        
	                        	row31.TFFarmaceutica_Id = row25.TFFarmaceutica_Id;
	                        
	                        	row31.MedGenerico_Id = row25.MedGenerico_Id;
	                        
	                        	row31.FFarmaceutica_Id = row25.FFarmaceutica_Id;
	                        
	                        	row31.UMedida_Id = row25.UMedida_Id;
	                        
	                        	row31.CantUMedida_Int = row25.CantUMedida_Int;
	                        
	                        	row31.CantMinima_Int = row25.CantMinima_Int;
	                        
	                        	row31._FExp_RegInvima = row25._FExp_RegInvima;
	                        
	                        	row31._FVen_RegInvima = row25._FVen_RegInvima;
	                        
	                        	row31._FActivoCum = row25._FActivoCum;
	                        
	                        	row31._FInactivoCum = row25._FInactivoCum;
	                        
	                        	row31.Fabricante_NitN = row25.Fabricante_NitN;
	                        
	                        	row31.Importador_NitN = row25.Importador_NitN;
	                        
	                        	row31.Fabricante_Id = row25.Fabricante_Id;
	                        
	                        	row31.Importador_Id = row25.Importador_Id;
	                        

 


	tos_count_tNormalize_1++;

/**
 * [tNormalize_1 main ] stop
 */
	
	/**
	 * [tNormalize_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tNormalize_1";
	
	

 



/**
 * [tNormalize_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row31"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_4 = false;
		boolean mainRowRejected_tMap_4 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

next_4 = null;


// # Output table : 'next_4'
next_4_tmp.oViaAdmin = row31.oViaAdmin ;
next_4_tmp.oFFarmaceutica = row31.oFFarmaceutica ;
next_4_tmp.oNGenerico = row31.oNGenerico ;
next_4_tmp.oConcentracion = row31.oConcentracion ;
next_4_tmp.oUnidosis = row31.oUnidosis ;
next_4_tmp.oUMedida = row31.oUMedida ;
next_4_tmp.oFabricante = row31.oFabricante ;
next_4_tmp.oImportador = row31.oImportador ;
next_4_tmp.State = row31.State ;
next_4_tmp.Ins = row31.Ins ;
next_4_tmp._ErrorMessage = row31._ErrorMessage ;
next_4_tmp.CodBarras = row31.CodBarras ;
next_4_tmp.NComercial = row31.NComercial ;
next_4_tmp.PComercial = row31.PComercial ;
next_4_tmp.ViaAdmin = row31.ViaAdmin ;
next_4_tmp.FFarmaceutica = row31.FFarmaceutica ;
next_4_tmp.NGenerico = row31.NGenerico ;
next_4_tmp.Concentracion = row31.Concentracion ;
next_4_tmp.Unidosis = row31.Unidosis ;
next_4_tmp.UMedida = row31.UMedida ;
next_4_tmp.CantUMedida = row31.CantUMedida ;
next_4_tmp.CantMinima = row31.CantMinima ;
next_4_tmp.RegInvima = row31.RegInvima ;
next_4_tmp.FExp_RegInvima = row31.FExp_RegInvima ;
next_4_tmp.FVen_RegInvima = row31.FVen_RegInvima ;
next_4_tmp.FActivoCum = row31.FActivoCum ;
next_4_tmp.FInactivoCum = row31.FInactivoCum ;
next_4_tmp.Expediente = row31.Expediente ;
next_4_tmp.Consecutivo = row31.Consecutivo ;
next_4_tmp.Cum = row31.Cum ;
next_4_tmp.Origen = row31.Origen ;
next_4_tmp.Caracteristicas = row31.Caracteristicas ;
next_4_tmp.PCaracteristicas = Utils.mayusculasSinAcentos(row31.Caracteristicas) ;
next_4_tmp.Contraindicaciones = row31.Contraindicaciones ;
next_4_tmp.Efectos_Posteriores = row31.Efectos_Posteriores ;
next_4_tmp.Riesgos_Asociados = row31.Riesgos_Asociados ;
next_4_tmp.Dosis_Aplicacion = row31.Dosis_Aplicacion ;
next_4_tmp.NIT_Fabricante = row31.NIT_Fabricante ;
next_4_tmp.Fabricante = row31.Fabricante ;
next_4_tmp.NIT_Importador = row31.NIT_Importador ;
next_4_tmp.Importador = row31.Importador ;
next_4_tmp.usuariosId = row31.usuariosId;
next_4_tmp.uorgId = row31.uorgId;
next_4_tmp.ViaAdmin_Id = row31.ViaAdmin_Id ;
next_4_tmp.TFFarmaceutica_Id = row31.TFFarmaceutica_Id ;
next_4_tmp.MedGenerico_Id = row31.MedGenerico_Id ;
next_4_tmp.FFarmaceutica_Id = row31.FFarmaceutica_Id ;
next_4_tmp.UMedida_Id = row31.UMedida_Id ;
next_4_tmp.CantUMedida_Int = row31.CantUMedida_Int ;
next_4_tmp.CantMinima_Int = row31.CantMinima_Int ;
next_4_tmp._FExp_RegInvima = row31._FExp_RegInvima ;
next_4_tmp._FVen_RegInvima = row31._FVen_RegInvima ;
next_4_tmp._FActivoCum = row31._FActivoCum ;
next_4_tmp._FInactivoCum = row31._FInactivoCum ;
next_4_tmp.Fabricante_NitN = row31.Fabricante_NitN ;
next_4_tmp.Importador_NitN = row31.Importador_NitN ;
next_4_tmp.Fabricante_Id = row31.Fabricante_Id ;
next_4_tmp.Importador_Id = row31.Importador_Id ;
next_4 = next_4_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "next_4"
if(next_4 != null) { 



	
	/**
	 * [tJoin_8 main ] start
	 */

	

	
	
	currentComponent="tJoin_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"next_4"
						
						);
					}
					

			row33 = null;	
	
				row33 = new row33Struct();						
						row33.oViaAdmin = next_4.oViaAdmin;					
						row33.oFFarmaceutica = next_4.oFFarmaceutica;					
						row33.oNGenerico = next_4.oNGenerico;					
						row33.oConcentracion = next_4.oConcentracion;					
						row33.oUnidosis = next_4.oUnidosis;					
						row33.oUMedida = next_4.oUMedida;					
						row33.oFabricante = next_4.oFabricante;					
						row33.oImportador = next_4.oImportador;					
						row33.State = next_4.State;					
						row33.Ins = next_4.Ins;					
						row33._ErrorMessage = next_4._ErrorMessage;					
						row33.CodBarras = next_4.CodBarras;					
						row33.NComercial = next_4.NComercial;					
						row33.PComercial = next_4.PComercial;					
						row33.ViaAdmin = next_4.ViaAdmin;					
						row33.FFarmaceutica = next_4.FFarmaceutica;					
						row33.NGenerico = next_4.NGenerico;					
						row33.Concentracion = next_4.Concentracion;					
						row33.Unidosis = next_4.Unidosis;					
						row33.UMedida = next_4.UMedida;					
						row33.CantUMedida = next_4.CantUMedida;					
						row33.CantMinima = next_4.CantMinima;					
						row33.RegInvima = next_4.RegInvima;					
						row33.FExp_RegInvima = next_4.FExp_RegInvima;					
						row33.FVen_RegInvima = next_4.FVen_RegInvima;					
						row33.FActivoCum = next_4.FActivoCum;					
						row33.FInactivoCum = next_4.FInactivoCum;					
						row33.Expediente = next_4.Expediente;					
						row33.Consecutivo = next_4.Consecutivo;					
						row33.Cum = next_4.Cum;					
						row33.Origen = next_4.Origen;					
						row33.Caracteristicas = next_4.Caracteristicas;					
						row33.PCaracteristicas = next_4.PCaracteristicas;					
						row33.Contraindicaciones = next_4.Contraindicaciones;					
						row33.Efectos_Posteriores = next_4.Efectos_Posteriores;					
						row33.Riesgos_Asociados = next_4.Riesgos_Asociados;					
						row33.Dosis_Aplicacion = next_4.Dosis_Aplicacion;					
						row33.NIT_Fabricante = next_4.NIT_Fabricante;					
						row33.Fabricante = next_4.Fabricante;					
						row33.NIT_Importador = next_4.NIT_Importador;					
						row33.Importador = next_4.Importador;					
						row33.usuariosId = next_4.usuariosId;					
						row33.uorgId = next_4.uorgId;					
						row33.ViaAdmin_Id = next_4.ViaAdmin_Id;					
						row33.TFFarmaceutica_Id = next_4.TFFarmaceutica_Id;					
						row33.MedGenerico_Id = next_4.MedGenerico_Id;					
						row33.FFarmaceutica_Id = next_4.FFarmaceutica_Id;					
						row33.UMedida_Id = next_4.UMedida_Id;					
						row33.CantUMedida_Int = next_4.CantUMedida_Int;					
						row33.CantMinima_Int = next_4.CantMinima_Int;					
						row33._FExp_RegInvima = next_4._FExp_RegInvima;					
						row33._FVen_RegInvima = next_4._FVen_RegInvima;					
						row33._FActivoCum = next_4._FActivoCum;					
						row33._FInactivoCum = next_4._FInactivoCum;					
						row33.Fabricante_NitN = next_4.Fabricante_NitN;					
						row33.Importador_NitN = next_4.Importador_NitN;					
						row33.Fabricante_Id = next_4.Fabricante_Id;					
						row33.Importador_Id = next_4.Importador_Id;

			if(util_tJoin_8.isJoined(next_4)){ 			
								row33.PCaracteristicas_Id = util_tJoin_8.lookupValue.ID;
			} 
			
///////////////////////    			

 


	tos_count_tJoin_8++;

/**
 * [tJoin_8 main ] stop
 */
	
	/**
	 * [tJoin_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJoin_8";
	
	

 



/**
 * [tJoin_8 process_data_begin ] stop
 */
// Start of branch "row33"
if(row33 != null) { 



	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row33"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_5 = false;
		boolean mainRowRejected_tMap_5 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

next_5 = null;


// # Output table : 'next_5'
next_5_tmp.oViaAdmin = row33.oViaAdmin ;
next_5_tmp.oFFarmaceutica = row33.oFFarmaceutica ;
next_5_tmp.oNGenerico = row33.oNGenerico ;
next_5_tmp.oConcentracion = row33.oConcentracion ;
next_5_tmp.oUnidosis = row33.oUnidosis ;
next_5_tmp.oUMedida = row33.oUMedida ;
next_5_tmp.oFabricante = row33.oFabricante ;
next_5_tmp.oImportador = row33.oImportador ;
next_5_tmp.State = row33.State ;
next_5_tmp.Ins = row33.Ins ;
next_5_tmp._ErrorMessage = row33._ErrorMessage ;
next_5_tmp.CodBarras = row33.CodBarras ;
next_5_tmp.NComercial = row33.NComercial ;
next_5_tmp.PComercial = row33.PComercial ;
next_5_tmp.ViaAdmin = row33.ViaAdmin ;
next_5_tmp.FFarmaceutica = row33.FFarmaceutica ;
next_5_tmp.NGenerico = row33.NGenerico ;
next_5_tmp.Concentracion = row33.Concentracion ;
next_5_tmp.Unidosis = row33.Unidosis ;
next_5_tmp.UMedida = row33.UMedida ;
next_5_tmp.CantUMedida = row33.CantUMedida ;
next_5_tmp.CantMinima = row33.CantMinima ;
next_5_tmp.RegInvima = row33.RegInvima ;
next_5_tmp.FExp_RegInvima = row33.FExp_RegInvima ;
next_5_tmp.FVen_RegInvima = row33.FVen_RegInvima ;
next_5_tmp.FActivoCum = row33.FActivoCum ;
next_5_tmp.FInactivoCum = row33.FInactivoCum ;
next_5_tmp.Expediente = row33.Expediente ;
next_5_tmp.Consecutivo = row33.Consecutivo ;
next_5_tmp.Cum = row33.Cum ;
next_5_tmp.Origen = row33.Origen ;
next_5_tmp.Caracteristicas = row33.Caracteristicas ;
next_5_tmp.Caracteristicas_Ids = "";
next_5_tmp.Contraindicaciones = row33.Contraindicaciones ;
next_5_tmp.Efectos_Posteriores = row33.Efectos_Posteriores ;
next_5_tmp.Riesgos_Asociados = row33.Riesgos_Asociados ;
next_5_tmp.Dosis_Aplicacion = row33.Dosis_Aplicacion ;
next_5_tmp.NIT_Fabricante = row33.NIT_Fabricante ;
next_5_tmp.Fabricante = row33.Fabricante ;
next_5_tmp.NIT_Importador = row33.NIT_Importador ;
next_5_tmp.Importador = row33.Importador ;
next_5_tmp.usuariosId = row33.usuariosId;
next_5_tmp.uorgId = row33.uorgId;
next_5_tmp.ViaAdmin_Id = row33.ViaAdmin_Id ;
next_5_tmp.TFFarmaceutica_Id = row33.TFFarmaceutica_Id ;
next_5_tmp.MedGenerico_Id = row33.MedGenerico_Id ;
next_5_tmp.FFarmaceutica_Id = row33.FFarmaceutica_Id ;
next_5_tmp.UMedida_Id = row33.UMedida_Id ;
next_5_tmp.CantUMedida_Int = row33.CantUMedida_Int ;
next_5_tmp.CantMinima_Int = row33.CantMinima_Int ;
next_5_tmp._FExp_RegInvima = row33._FExp_RegInvima ;
next_5_tmp._FVen_RegInvima = row33._FVen_RegInvima ;
next_5_tmp._FActivoCum = row33._FActivoCum ;
next_5_tmp._FInactivoCum = row33._FInactivoCum ;
next_5_tmp.Fabricante_NitN = row33.Fabricante_NitN ;
next_5_tmp.Importador_NitN = row33.Importador_NitN ;
next_5_tmp.Fabricante_Id = row33.Fabricante_Id ;
next_5_tmp.Importador_Id = row33.Importador_Id ;
next_5_tmp.PCaracteristicas_Id = row33.PCaracteristicas_Id ;
next_5_tmp.Ins_Caract = "";
next_5 = next_5_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "next_5"
if(next_5 != null) { 



	
	/**
	 * [tJavaRow_8 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"next_5"
						
						);
					}
					

    //Code generate according to input schema and output schema
row34.oViaAdmin = next_5.oViaAdmin;
row34.oFFarmaceutica = next_5.oFFarmaceutica;
row34.oNGenerico = next_5.oNGenerico;
row34.oConcentracion = next_5.oConcentracion;
row34.oUnidosis = next_5.oUnidosis;
row34.oUMedida = next_5.oUMedida;
row34.oFabricante = next_5.oFabricante;
row34.oImportador = next_5.oImportador;
row34.State = next_5.State;
row34.Ins = next_5.Ins;
row34._ErrorMessage = next_5._ErrorMessage;
row34.CodBarras = next_5.CodBarras;
row34.NComercial = next_5.NComercial;
row34.PComercial = next_5.PComercial;
row34.ViaAdmin = next_5.ViaAdmin;
row34.FFarmaceutica = next_5.FFarmaceutica;
row34.NGenerico = next_5.NGenerico;
row34.Concentracion = next_5.Concentracion;
row34.Unidosis = next_5.Unidosis;
row34.UMedida = next_5.UMedida;
row34.CantUMedida = next_5.CantUMedida;
row34.CantMinima = next_5.CantMinima;
row34.RegInvima = next_5.RegInvima;
row34.FExp_RegInvima = next_5.FExp_RegInvima;
row34.FVen_RegInvima = next_5.FVen_RegInvima;
row34.FActivoCum = next_5.FActivoCum;
row34.FInactivoCum = next_5.FInactivoCum;
row34.Expediente = next_5.Expediente;
row34.Consecutivo = next_5.Consecutivo;
row34.Cum = next_5.Cum;
row34.Origen = next_5.Origen;
row34.Caracteristicas = next_5.Caracteristicas;
row34.Caracteristicas_Ids = next_5.Caracteristicas_Ids;
row34.Contraindicaciones = next_5.Contraindicaciones;
row34.Efectos_Posteriores = next_5.Efectos_Posteriores;
row34.Riesgos_Asociados = next_5.Riesgos_Asociados;
row34.Dosis_Aplicacion = next_5.Dosis_Aplicacion;
row34.NIT_Fabricante = next_5.NIT_Fabricante;
row34.Fabricante = next_5.Fabricante;
row34.NIT_Importador = next_5.NIT_Importador;
row34.Importador = next_5.Importador;
row34.usuariosId = next_5.usuariosId;
row34.uorgId = next_5.uorgId;
row34.ViaAdmin_Id = next_5.ViaAdmin_Id;
row34.TFFarmaceutica_Id = next_5.TFFarmaceutica_Id;
row34.MedGenerico_Id = next_5.MedGenerico_Id;
row34.FFarmaceutica_Id = next_5.FFarmaceutica_Id;
row34.UMedida_Id = next_5.UMedida_Id;
row34.CantUMedida_Int = next_5.CantUMedida_Int;
row34.CantMinima_Int = next_5.CantMinima_Int;
row34._FExp_RegInvima = next_5._FExp_RegInvima;
row34._FVen_RegInvima = next_5._FVen_RegInvima;
row34._FActivoCum = next_5._FActivoCum;
row34._FInactivoCum = next_5._FInactivoCum;
row34.Fabricante_NitN = next_5.Fabricante_NitN;
row34.Importador_NitN = next_5.Importador_NitN;
row34.Fabricante_Id = next_5.Fabricante_Id;
row34.Importador_Id = next_5.Importador_Id;
row34.PCaracteristicas_Id = next_5.PCaracteristicas_Id;
row34.Ins_Caract = next_5.Ins_Caract;



/*if(next_5.Caracteristicas.contains("(*)") == false && next_5.PCaracteristicas_Id == null){
	row34.Caracteristicas += " | No registrada";
	row34.State = "Erróneo";
	row34.Ins_Caract = "No";
    row34._ErrorMessage += next_5.Caracteristicas + "," +"Caracteristicas no registradas; \n";	
}
else if(next_5.PCaracteristicas_Id != null){
	row34.Caracteristicas_Ids = next_5.PCaracteristicas_Id.toString();
	row34.Ins_Caract = "Si";
/*	System.out.println("-----------99");
}*/

if(next_5.PCaracteristicas_Id == null && row34._ErrorMessage == null)
{
	row34.State = "Erróneo";
	row34.Ins_Caract = "No";
    row34._ErrorMessage = next_5.Caracteristicas + "," +"Caracteristica no registrada; \n";	

}
else if(next_5.PCaracteristicas_Id == null){
      row34.State = "Erróneo";
	  row34.Ins_Caract = "No";
      row34._ErrorMessage += next_5.Caracteristicas + "," +"Caracteristica no registrada; \n";	
}
else if(next_5.PCaracteristicas_Id != null){
	row34.Caracteristicas_Ids = next_5.PCaracteristicas_Id.toString();
	row34.Ins_Caract = "Si";
/*	System.out.println("-----------99");*/
}


/*System.out.println(next_5.Caracteristicas);
System.out.println("-5->" +  row34.PCaracteristicas_Id + " " + row34.State);*/

/*if (next_5.PCaracteristicas_Id == null)
  {
      row34.State = "Erróneo";
	  row34.Ins_Caract = "No";
      row34._ErrorMessage += next_5.Caracteristicas + "," +"Caracteristica no registrada; \n";	
  }
    
  else if(next_5.PCaracteristicas_Id != null)
  {
	row34.Caracteristicas_Ids = next_5.PCaracteristicas_Id.toString();
	row34.Ins_Caract = "Si";
/*	System.out.println("-----------99");
  }*/
    nb_line_tJavaRow_8++;   

 


	tos_count_tJavaRow_8++;

/**
 * [tJavaRow_8 main ] stop
 */
	
	/**
	 * [tJavaRow_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 process_data_begin ] stop
 */

	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row34"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_6 = false;
		boolean mainRowRejected_tMap_6 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

next_6 = null;


// # Output table : 'next_6'
next_6_tmp.oViaAdmin = row34.oViaAdmin;
next_6_tmp.oFFarmaceutica = row34.oFFarmaceutica;
next_6_tmp.oNGenerico = row34.oNGenerico;
next_6_tmp.oConcentracion = row34.oConcentracion;
next_6_tmp.oUnidosis = row34.oUnidosis;
next_6_tmp.oUMedida = row34.oUMedida;
next_6_tmp.oFabricante = row34.oFabricante;
next_6_tmp.oImportador = row34.oImportador;
next_6_tmp.State = row34.State;
next_6_tmp.Ins = row34.Ins;
next_6_tmp._ErrorMessage = row34._ErrorMessage;
next_6_tmp.CodBarras = row34.CodBarras;
next_6_tmp.NComercial = row34.NComercial;
next_6_tmp.PComercial = row34.PComercial;
next_6_tmp.ViaAdmin = row34.ViaAdmin;
next_6_tmp.FFarmaceutica = row34.FFarmaceutica;
next_6_tmp.NGenerico = row34.NGenerico;
next_6_tmp.Concentracion = row34.Concentracion;
next_6_tmp.Unidosis = row34.Unidosis;
next_6_tmp.UMedida = row34.UMedida;
next_6_tmp.CantUMedida = row34.CantUMedida;
next_6_tmp.CantMinima = row34.CantMinima;
next_6_tmp.RegInvima = row34.RegInvima;
next_6_tmp.FExp_RegInvima = row34.FExp_RegInvima;
next_6_tmp.FVen_RegInvima = row34.FVen_RegInvima;
next_6_tmp.FActivoCum = row34.FActivoCum;
next_6_tmp.FInactivoCum = row34.FInactivoCum;
next_6_tmp.Expediente = row34.Expediente;
next_6_tmp.Consecutivo = row34.Consecutivo;
next_6_tmp.Cum = row34.Cum ;
next_6_tmp.Origen = row34.Origen;
next_6_tmp.Caracteristicas = row34.Caracteristicas;
next_6_tmp.Caracteristicas_Ids = row34.Caracteristicas_Ids;
next_6_tmp.Contraindicaciones = row34.Contraindicaciones;
next_6_tmp.Efectos_Posteriores = row34.Efectos_Posteriores;
next_6_tmp.Riesgos_Asociados = row34.Riesgos_Asociados;
next_6_tmp.Dosis_Aplicacion = row34.Dosis_Aplicacion;
next_6_tmp.NIT_Fabricante = row34.NIT_Fabricante;
next_6_tmp.Fabricante = row34.Fabricante;
next_6_tmp.NIT_Importador = row34.NIT_Importador;
next_6_tmp.Importador = row34.Importador;
next_6_tmp.usuariosId = row34.usuariosId;
next_6_tmp.uorgId = row34.uorgId;
next_6_tmp.ViaAdmin_Id = row34.ViaAdmin_Id;
next_6_tmp.TFFarmaceutica_Id = row34.TFFarmaceutica_Id;
next_6_tmp.MedGenerico_Id = row34.MedGenerico_Id;
next_6_tmp.FFarmaceutica_Id = row34.FFarmaceutica_Id;
next_6_tmp.UMedida_Id = row34.UMedida_Id;
next_6_tmp.CantUMedida_Int = row34.CantUMedida_Int;
next_6_tmp.CantMinima_Int = row34.CantMinima_Int;
next_6_tmp._FExp_RegInvima = row34._FExp_RegInvima;
next_6_tmp._FVen_RegInvima = row34._FVen_RegInvima;
next_6_tmp._FActivoCum = row34._FActivoCum;
next_6_tmp._FInactivoCum = row34._FInactivoCum;
next_6_tmp.Fabricante_NitN = row34.Fabricante_NitN;
next_6_tmp.Importador_NitN = row34.Importador_NitN;
next_6_tmp.Fabricante_Id = row34.Fabricante_Id;
next_6_tmp.Importador_Id = row34.Importador_Id;
next_6_tmp.Ins_Caract = row34.Ins_Caract ;
next_6 = next_6_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "next_6"
if(next_6 != null) { 



	
	/**
	 * [tOracleSP_4 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"next_6"
						
						);
					}
					

			// code for the argument 1 (CodBarras) of type 'IN CLOB'
    					if (next_6.CodBarras == null) {
    						statement_tOracleSP_4.setNull(1, java.sql.Types.VARCHAR);
    					} else {
    					
                        java.sql.Clob clob_tOracleSP_4 = connection_tOracleSP_4.createClob();
                        clob_tOracleSP_4.setString(1, next_6.CodBarras);
                        statement_tOracleSP_4.setClob(1, clob_tOracleSP_4);
    					}
    					
			// code for the argument 2 (Cod_Barras_Duplicidad_) of type 'OUT NUMERIC'
					statement_tOracleSP_4.registerOutParameter(2, java.sql.Types.NUMERIC);
			// code for the argument 3 (Cod_Barras_Registrado_) of type 'OUT NUMERIC'
					statement_tOracleSP_4.registerOutParameter(3, java.sql.Types.NUMERIC);
			// code for the argument 4 (State) of type 'OUT AUTOMAPPING'
					statement_tOracleSP_4.registerOutParameter(4, java.sql.Types.VARCHAR);
			// code for the argument 5 (Respuesta_) of type 'OUT AUTOMAPPING'
					statement_tOracleSP_4.registerOutParameter(5, java.sql.Types.VARCHAR);
		statement_tOracleSP_4.execute();
		
										row28.oViaAdmin = next_6.oViaAdmin;
										
										row28.oFFarmaceutica = next_6.oFFarmaceutica;
										
										row28.oNGenerico = next_6.oNGenerico;
										
										row28.oConcentracion = next_6.oConcentracion;
										
										row28.oUnidosis = next_6.oUnidosis;
										
										row28.oUMedida = next_6.oUMedida;
										
										row28.oFabricante = next_6.oFabricante;
										
										row28.oImportador = next_6.oImportador;
										
									row28.State = statement_tOracleSP_4.getString(4);
									
									if (statement_tOracleSP_4.wasNull()) {
										row28.State = null;
									}
									
										row28.Ins = next_6.Ins;
										
										row28._ErrorMessage = next_6._ErrorMessage;
										
								row28.CodBarras = next_6.CodBarras;
								
										row28.NComercial = next_6.NComercial;
										
										row28.PComercial = next_6.PComercial;
										
										row28.ViaAdmin = next_6.ViaAdmin;
										
										row28.FFarmaceutica = next_6.FFarmaceutica;
										
										row28.NGenerico = next_6.NGenerico;
										
										row28.Concentracion = next_6.Concentracion;
										
										row28.Unidosis = next_6.Unidosis;
										
										row28.UMedida = next_6.UMedida;
										
										row28.CantUMedida = next_6.CantUMedida;
										
										row28.CantMinima = next_6.CantMinima;
										
										row28.RegInvima = next_6.RegInvima;
										
										row28.FExp_RegInvima = next_6.FExp_RegInvima;
										
										row28.FVen_RegInvima = next_6.FVen_RegInvima;
										
										row28.FActivoCum = next_6.FActivoCum;
										
										row28.FInactivoCum = next_6.FInactivoCum;
										
										row28.Expediente = next_6.Expediente;
										
										row28.Consecutivo = next_6.Consecutivo;
										
										row28.Cum = next_6.Cum;
										
										row28.Origen = next_6.Origen;
										
										row28.Caracteristicas = next_6.Caracteristicas;
										
										row28.Caracteristicas_Ids = next_6.Caracteristicas_Ids;
										
										row28.Contraindicaciones = next_6.Contraindicaciones;
										
										row28.Efectos_Posteriores = next_6.Efectos_Posteriores;
										
										row28.Riesgos_Asociados = next_6.Riesgos_Asociados;
										
										row28.Dosis_Aplicacion = next_6.Dosis_Aplicacion;
										
										row28.NIT_Fabricante = next_6.NIT_Fabricante;
										
										row28.Fabricante = next_6.Fabricante;
										
										row28.NIT_Importador = next_6.NIT_Importador;
										
										row28.Importador = next_6.Importador;
										
										row28.usuariosId = next_6.usuariosId;
										
										row28.uorgId = next_6.uorgId;
										
										row28.ViaAdmin_Id = next_6.ViaAdmin_Id;
										
										row28.TFFarmaceutica_Id = next_6.TFFarmaceutica_Id;
										
										row28.MedGenerico_Id = next_6.MedGenerico_Id;
										
										row28.FFarmaceutica_Id = next_6.FFarmaceutica_Id;
										
										row28.UMedida_Id = next_6.UMedida_Id;
										
										row28.CantUMedida_Int = next_6.CantUMedida_Int;
										
										row28.CantMinima_Int = next_6.CantMinima_Int;
										
										row28._FExp_RegInvima = next_6._FExp_RegInvima;
										
										row28._FVen_RegInvima = next_6._FVen_RegInvima;
										
										row28._FActivoCum = next_6._FActivoCum;
										
										row28._FInactivoCum = next_6._FInactivoCum;
										
										row28.Fabricante_NitN = next_6.Fabricante_NitN;
										
										row28.Importador_NitN = next_6.Importador_NitN;
										
										row28.Fabricante_Id = next_6.Fabricante_Id;
										
										row28.Importador_Id = next_6.Importador_Id;
										
										row28.Ins_Caract = next_6.Ins_Caract;
										
									row28.Cod_Barras_Duplicidad_ = statement_tOracleSP_4.getInt(2);
									
									if (statement_tOracleSP_4.wasNull()) {
										row28.Cod_Barras_Duplicidad_ = null;
									}
									
									row28.Cod_Barras_Registrado_ = statement_tOracleSP_4.getInt(3);
									
									if (statement_tOracleSP_4.wasNull()) {
										row28.Cod_Barras_Registrado_ = null;
									}
									
									row28.Respuesta_ = statement_tOracleSP_4.getString(5);
									
									if (statement_tOracleSP_4.wasNull()) {
										row28.Respuesta_ = null;
									}
									

 


	tos_count_tOracleSP_4++;

/**
 * [tOracleSP_4 main ] stop
 */
	
	/**
	 * [tOracleSP_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	

 



/**
 * [tOracleSP_4 process_data_begin ] stop
 */

	
	/**
	 * [tDenormalize_1_DenormalizeOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tDenormalize_1";
	
	currentComponent="tDenormalize_1_DenormalizeOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row28"
						
						);
					}
					

if(hash_oViaAdmin_tDenormalize_1_DenormalizeOut.containsKey(row28.oViaAdmin)){
	hash_oFFarmaceutica_tDenormalize_1_DenormalizeOut = hash_oViaAdmin_tDenormalize_1_DenormalizeOut.get(row28.oViaAdmin);                    
}else{
	hash_oFFarmaceutica_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_oViaAdmin_tDenormalize_1_DenormalizeOut.put(row28.oViaAdmin,hash_oFFarmaceutica_tDenormalize_1_DenormalizeOut);
}
if(hash_oFFarmaceutica_tDenormalize_1_DenormalizeOut.containsKey(row28.oFFarmaceutica)){
	hash_oNGenerico_tDenormalize_1_DenormalizeOut = hash_oFFarmaceutica_tDenormalize_1_DenormalizeOut.get(row28.oFFarmaceutica);                    
}else{
	hash_oNGenerico_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_oFFarmaceutica_tDenormalize_1_DenormalizeOut.put(row28.oFFarmaceutica,hash_oNGenerico_tDenormalize_1_DenormalizeOut);
}
if(hash_oNGenerico_tDenormalize_1_DenormalizeOut.containsKey(row28.oNGenerico)){
	hash_oConcentracion_tDenormalize_1_DenormalizeOut = hash_oNGenerico_tDenormalize_1_DenormalizeOut.get(row28.oNGenerico);                    
}else{
	hash_oConcentracion_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_oNGenerico_tDenormalize_1_DenormalizeOut.put(row28.oNGenerico,hash_oConcentracion_tDenormalize_1_DenormalizeOut);
}
if(hash_oConcentracion_tDenormalize_1_DenormalizeOut.containsKey(row28.oConcentracion)){
	hash_oUnidosis_tDenormalize_1_DenormalizeOut = hash_oConcentracion_tDenormalize_1_DenormalizeOut.get(row28.oConcentracion);                    
}else{
	hash_oUnidosis_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_oConcentracion_tDenormalize_1_DenormalizeOut.put(row28.oConcentracion,hash_oUnidosis_tDenormalize_1_DenormalizeOut);
}
if(hash_oUnidosis_tDenormalize_1_DenormalizeOut.containsKey(row28.oUnidosis)){
	hash_oUMedida_tDenormalize_1_DenormalizeOut = hash_oUnidosis_tDenormalize_1_DenormalizeOut.get(row28.oUnidosis);                    
}else{
	hash_oUMedida_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_oUnidosis_tDenormalize_1_DenormalizeOut.put(row28.oUnidosis,hash_oUMedida_tDenormalize_1_DenormalizeOut);
}
if(hash_oUMedida_tDenormalize_1_DenormalizeOut.containsKey(row28.oUMedida)){
	hash_oFabricante_tDenormalize_1_DenormalizeOut = hash_oUMedida_tDenormalize_1_DenormalizeOut.get(row28.oUMedida);                    
}else{
	hash_oFabricante_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_oUMedida_tDenormalize_1_DenormalizeOut.put(row28.oUMedida,hash_oFabricante_tDenormalize_1_DenormalizeOut);
}
if(hash_oFabricante_tDenormalize_1_DenormalizeOut.containsKey(row28.oFabricante)){
	hash_oImportador_tDenormalize_1_DenormalizeOut = hash_oFabricante_tDenormalize_1_DenormalizeOut.get(row28.oFabricante);                    
}else{
	hash_oImportador_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_oFabricante_tDenormalize_1_DenormalizeOut.put(row28.oFabricante,hash_oImportador_tDenormalize_1_DenormalizeOut);
}
if(hash_oImportador_tDenormalize_1_DenormalizeOut.containsKey(row28.oImportador)){
	hash_Ins_tDenormalize_1_DenormalizeOut = hash_oImportador_tDenormalize_1_DenormalizeOut.get(row28.oImportador);                    
}else{
	hash_Ins_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_oImportador_tDenormalize_1_DenormalizeOut.put(row28.oImportador,hash_Ins_tDenormalize_1_DenormalizeOut);
}
if(hash_Ins_tDenormalize_1_DenormalizeOut.containsKey(row28.Ins)){
	hash__ErrorMessage_tDenormalize_1_DenormalizeOut = hash_Ins_tDenormalize_1_DenormalizeOut.get(row28.Ins);                    
}else{
	hash__ErrorMessage_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_Ins_tDenormalize_1_DenormalizeOut.put(row28.Ins,hash__ErrorMessage_tDenormalize_1_DenormalizeOut);
}
if(hash__ErrorMessage_tDenormalize_1_DenormalizeOut.containsKey(row28._ErrorMessage)){
	hash_CodBarras_tDenormalize_1_DenormalizeOut = hash__ErrorMessage_tDenormalize_1_DenormalizeOut.get(row28._ErrorMessage);                    
}else{
	hash_CodBarras_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash__ErrorMessage_tDenormalize_1_DenormalizeOut.put(row28._ErrorMessage,hash_CodBarras_tDenormalize_1_DenormalizeOut);
}
if(hash_CodBarras_tDenormalize_1_DenormalizeOut.containsKey(row28.CodBarras)){
	hash_NComercial_tDenormalize_1_DenormalizeOut = hash_CodBarras_tDenormalize_1_DenormalizeOut.get(row28.CodBarras);                    
}else{
	hash_NComercial_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_CodBarras_tDenormalize_1_DenormalizeOut.put(row28.CodBarras,hash_NComercial_tDenormalize_1_DenormalizeOut);
}
if(hash_NComercial_tDenormalize_1_DenormalizeOut.containsKey(row28.NComercial)){
	hash_PComercial_tDenormalize_1_DenormalizeOut = hash_NComercial_tDenormalize_1_DenormalizeOut.get(row28.NComercial);                    
}else{
	hash_PComercial_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_NComercial_tDenormalize_1_DenormalizeOut.put(row28.NComercial,hash_PComercial_tDenormalize_1_DenormalizeOut);
}
if(hash_PComercial_tDenormalize_1_DenormalizeOut.containsKey(row28.PComercial)){
	hash_ViaAdmin_tDenormalize_1_DenormalizeOut = hash_PComercial_tDenormalize_1_DenormalizeOut.get(row28.PComercial);                    
}else{
	hash_ViaAdmin_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_PComercial_tDenormalize_1_DenormalizeOut.put(row28.PComercial,hash_ViaAdmin_tDenormalize_1_DenormalizeOut);
}
if(hash_ViaAdmin_tDenormalize_1_DenormalizeOut.containsKey(row28.ViaAdmin)){
	hash_FFarmaceutica_tDenormalize_1_DenormalizeOut = hash_ViaAdmin_tDenormalize_1_DenormalizeOut.get(row28.ViaAdmin);                    
}else{
	hash_FFarmaceutica_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_ViaAdmin_tDenormalize_1_DenormalizeOut.put(row28.ViaAdmin,hash_FFarmaceutica_tDenormalize_1_DenormalizeOut);
}
if(hash_FFarmaceutica_tDenormalize_1_DenormalizeOut.containsKey(row28.FFarmaceutica)){
	hash_NGenerico_tDenormalize_1_DenormalizeOut = hash_FFarmaceutica_tDenormalize_1_DenormalizeOut.get(row28.FFarmaceutica);                    
}else{
	hash_NGenerico_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_FFarmaceutica_tDenormalize_1_DenormalizeOut.put(row28.FFarmaceutica,hash_NGenerico_tDenormalize_1_DenormalizeOut);
}
if(hash_NGenerico_tDenormalize_1_DenormalizeOut.containsKey(row28.NGenerico)){
	hash_Concentracion_tDenormalize_1_DenormalizeOut = hash_NGenerico_tDenormalize_1_DenormalizeOut.get(row28.NGenerico);                    
}else{
	hash_Concentracion_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_NGenerico_tDenormalize_1_DenormalizeOut.put(row28.NGenerico,hash_Concentracion_tDenormalize_1_DenormalizeOut);
}
if(hash_Concentracion_tDenormalize_1_DenormalizeOut.containsKey(row28.Concentracion)){
	hash_Unidosis_tDenormalize_1_DenormalizeOut = hash_Concentracion_tDenormalize_1_DenormalizeOut.get(row28.Concentracion);                    
}else{
	hash_Unidosis_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_Concentracion_tDenormalize_1_DenormalizeOut.put(row28.Concentracion,hash_Unidosis_tDenormalize_1_DenormalizeOut);
}
if(hash_Unidosis_tDenormalize_1_DenormalizeOut.containsKey(row28.Unidosis)){
	hash_UMedida_tDenormalize_1_DenormalizeOut = hash_Unidosis_tDenormalize_1_DenormalizeOut.get(row28.Unidosis);                    
}else{
	hash_UMedida_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_Unidosis_tDenormalize_1_DenormalizeOut.put(row28.Unidosis,hash_UMedida_tDenormalize_1_DenormalizeOut);
}
if(hash_UMedida_tDenormalize_1_DenormalizeOut.containsKey(row28.UMedida)){
	hash_CantUMedida_tDenormalize_1_DenormalizeOut = hash_UMedida_tDenormalize_1_DenormalizeOut.get(row28.UMedida);                    
}else{
	hash_CantUMedida_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_UMedida_tDenormalize_1_DenormalizeOut.put(row28.UMedida,hash_CantUMedida_tDenormalize_1_DenormalizeOut);
}
if(hash_CantUMedida_tDenormalize_1_DenormalizeOut.containsKey(row28.CantUMedida)){
	hash_CantMinima_tDenormalize_1_DenormalizeOut = hash_CantUMedida_tDenormalize_1_DenormalizeOut.get(row28.CantUMedida);                    
}else{
	hash_CantMinima_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_CantUMedida_tDenormalize_1_DenormalizeOut.put(row28.CantUMedida,hash_CantMinima_tDenormalize_1_DenormalizeOut);
}
if(hash_CantMinima_tDenormalize_1_DenormalizeOut.containsKey(row28.CantMinima)){
	hash_RegInvima_tDenormalize_1_DenormalizeOut = hash_CantMinima_tDenormalize_1_DenormalizeOut.get(row28.CantMinima);                    
}else{
	hash_RegInvima_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_CantMinima_tDenormalize_1_DenormalizeOut.put(row28.CantMinima,hash_RegInvima_tDenormalize_1_DenormalizeOut);
}
if(hash_RegInvima_tDenormalize_1_DenormalizeOut.containsKey(row28.RegInvima)){
	hash_FExp_RegInvima_tDenormalize_1_DenormalizeOut = hash_RegInvima_tDenormalize_1_DenormalizeOut.get(row28.RegInvima);                    
}else{
	hash_FExp_RegInvima_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_RegInvima_tDenormalize_1_DenormalizeOut.put(row28.RegInvima,hash_FExp_RegInvima_tDenormalize_1_DenormalizeOut);
}
if(hash_FExp_RegInvima_tDenormalize_1_DenormalizeOut.containsKey(row28.FExp_RegInvima)){
	hash_FVen_RegInvima_tDenormalize_1_DenormalizeOut = hash_FExp_RegInvima_tDenormalize_1_DenormalizeOut.get(row28.FExp_RegInvima);                    
}else{
	hash_FVen_RegInvima_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_FExp_RegInvima_tDenormalize_1_DenormalizeOut.put(row28.FExp_RegInvima,hash_FVen_RegInvima_tDenormalize_1_DenormalizeOut);
}
if(hash_FVen_RegInvima_tDenormalize_1_DenormalizeOut.containsKey(row28.FVen_RegInvima)){
	hash_FActivoCum_tDenormalize_1_DenormalizeOut = hash_FVen_RegInvima_tDenormalize_1_DenormalizeOut.get(row28.FVen_RegInvima);                    
}else{
	hash_FActivoCum_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_FVen_RegInvima_tDenormalize_1_DenormalizeOut.put(row28.FVen_RegInvima,hash_FActivoCum_tDenormalize_1_DenormalizeOut);
}
if(hash_FActivoCum_tDenormalize_1_DenormalizeOut.containsKey(row28.FActivoCum)){
	hash_FInactivoCum_tDenormalize_1_DenormalizeOut = hash_FActivoCum_tDenormalize_1_DenormalizeOut.get(row28.FActivoCum);                    
}else{
	hash_FInactivoCum_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_FActivoCum_tDenormalize_1_DenormalizeOut.put(row28.FActivoCum,hash_FInactivoCum_tDenormalize_1_DenormalizeOut);
}
if(hash_FInactivoCum_tDenormalize_1_DenormalizeOut.containsKey(row28.FInactivoCum)){
	hash_Expediente_tDenormalize_1_DenormalizeOut = hash_FInactivoCum_tDenormalize_1_DenormalizeOut.get(row28.FInactivoCum);                    
}else{
	hash_Expediente_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_FInactivoCum_tDenormalize_1_DenormalizeOut.put(row28.FInactivoCum,hash_Expediente_tDenormalize_1_DenormalizeOut);
}
if(hash_Expediente_tDenormalize_1_DenormalizeOut.containsKey(row28.Expediente)){
	hash_Consecutivo_tDenormalize_1_DenormalizeOut = hash_Expediente_tDenormalize_1_DenormalizeOut.get(row28.Expediente);                    
}else{
	hash_Consecutivo_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_Expediente_tDenormalize_1_DenormalizeOut.put(row28.Expediente,hash_Consecutivo_tDenormalize_1_DenormalizeOut);
}
if(hash_Consecutivo_tDenormalize_1_DenormalizeOut.containsKey(row28.Consecutivo)){
	hash_Cum_tDenormalize_1_DenormalizeOut = hash_Consecutivo_tDenormalize_1_DenormalizeOut.get(row28.Consecutivo);                    
}else{
	hash_Cum_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_Consecutivo_tDenormalize_1_DenormalizeOut.put(row28.Consecutivo,hash_Cum_tDenormalize_1_DenormalizeOut);
}
if(hash_Cum_tDenormalize_1_DenormalizeOut.containsKey(row28.Cum)){
	hash_Origen_tDenormalize_1_DenormalizeOut = hash_Cum_tDenormalize_1_DenormalizeOut.get(row28.Cum);                    
}else{
	hash_Origen_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_Cum_tDenormalize_1_DenormalizeOut.put(row28.Cum,hash_Origen_tDenormalize_1_DenormalizeOut);
}
if(hash_Origen_tDenormalize_1_DenormalizeOut.containsKey(row28.Origen)){
	hash_Contraindicaciones_tDenormalize_1_DenormalizeOut = hash_Origen_tDenormalize_1_DenormalizeOut.get(row28.Origen);                    
}else{
	hash_Contraindicaciones_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_Origen_tDenormalize_1_DenormalizeOut.put(row28.Origen,hash_Contraindicaciones_tDenormalize_1_DenormalizeOut);
}
if(hash_Contraindicaciones_tDenormalize_1_DenormalizeOut.containsKey(row28.Contraindicaciones)){
	hash_Efectos_Posteriores_tDenormalize_1_DenormalizeOut = hash_Contraindicaciones_tDenormalize_1_DenormalizeOut.get(row28.Contraindicaciones);                    
}else{
	hash_Efectos_Posteriores_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_Contraindicaciones_tDenormalize_1_DenormalizeOut.put(row28.Contraindicaciones,hash_Efectos_Posteriores_tDenormalize_1_DenormalizeOut);
}
if(hash_Efectos_Posteriores_tDenormalize_1_DenormalizeOut.containsKey(row28.Efectos_Posteriores)){
	hash_Riesgos_Asociados_tDenormalize_1_DenormalizeOut = hash_Efectos_Posteriores_tDenormalize_1_DenormalizeOut.get(row28.Efectos_Posteriores);                    
}else{
	hash_Riesgos_Asociados_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_Efectos_Posteriores_tDenormalize_1_DenormalizeOut.put(row28.Efectos_Posteriores,hash_Riesgos_Asociados_tDenormalize_1_DenormalizeOut);
}
if(hash_Riesgos_Asociados_tDenormalize_1_DenormalizeOut.containsKey(row28.Riesgos_Asociados)){
	hash_Dosis_Aplicacion_tDenormalize_1_DenormalizeOut = hash_Riesgos_Asociados_tDenormalize_1_DenormalizeOut.get(row28.Riesgos_Asociados);                    
}else{
	hash_Dosis_Aplicacion_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_Riesgos_Asociados_tDenormalize_1_DenormalizeOut.put(row28.Riesgos_Asociados,hash_Dosis_Aplicacion_tDenormalize_1_DenormalizeOut);
}
if(hash_Dosis_Aplicacion_tDenormalize_1_DenormalizeOut.containsKey(row28.Dosis_Aplicacion)){
	hash_NIT_Fabricante_tDenormalize_1_DenormalizeOut = hash_Dosis_Aplicacion_tDenormalize_1_DenormalizeOut.get(row28.Dosis_Aplicacion);                    
}else{
	hash_NIT_Fabricante_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>>();
	hash_Dosis_Aplicacion_tDenormalize_1_DenormalizeOut.put(row28.Dosis_Aplicacion,hash_NIT_Fabricante_tDenormalize_1_DenormalizeOut);
}
if(hash_NIT_Fabricante_tDenormalize_1_DenormalizeOut.containsKey(row28.NIT_Fabricante)){
	hash_Fabricante_tDenormalize_1_DenormalizeOut = hash_NIT_Fabricante_tDenormalize_1_DenormalizeOut.get(row28.NIT_Fabricante);                    
}else{
	hash_Fabricante_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>>();
	hash_NIT_Fabricante_tDenormalize_1_DenormalizeOut.put(row28.NIT_Fabricante,hash_Fabricante_tDenormalize_1_DenormalizeOut);
}
if(hash_Fabricante_tDenormalize_1_DenormalizeOut.containsKey(row28.Fabricante)){
	hash_NIT_Importador_tDenormalize_1_DenormalizeOut = hash_Fabricante_tDenormalize_1_DenormalizeOut.get(row28.Fabricante);                    
}else{
	hash_NIT_Importador_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>>();
	hash_Fabricante_tDenormalize_1_DenormalizeOut.put(row28.Fabricante,hash_NIT_Importador_tDenormalize_1_DenormalizeOut);
}
if(hash_NIT_Importador_tDenormalize_1_DenormalizeOut.containsKey(row28.NIT_Importador)){
	hash_Importador_tDenormalize_1_DenormalizeOut = hash_NIT_Importador_tDenormalize_1_DenormalizeOut.get(row28.NIT_Importador);                    
}else{
	hash_Importador_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>>();
	hash_NIT_Importador_tDenormalize_1_DenormalizeOut.put(row28.NIT_Importador,hash_Importador_tDenormalize_1_DenormalizeOut);
}
if(hash_Importador_tDenormalize_1_DenormalizeOut.containsKey(row28.Importador)){
	hash_usuariosId_tDenormalize_1_DenormalizeOut = hash_Importador_tDenormalize_1_DenormalizeOut.get(row28.Importador);                    
}else{
	hash_usuariosId_tDenormalize_1_DenormalizeOut = new java.util.HashMap<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>>();
	hash_Importador_tDenormalize_1_DenormalizeOut.put(row28.Importador,hash_usuariosId_tDenormalize_1_DenormalizeOut);
}
if(hash_usuariosId_tDenormalize_1_DenormalizeOut.containsKey(row28.usuariosId)){
	hash_uorgId_tDenormalize_1_DenormalizeOut = hash_usuariosId_tDenormalize_1_DenormalizeOut.get(row28.usuariosId);                    
}else{
	hash_uorgId_tDenormalize_1_DenormalizeOut = new java.util.HashMap<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>>();
	hash_usuariosId_tDenormalize_1_DenormalizeOut.put(row28.usuariosId,hash_uorgId_tDenormalize_1_DenormalizeOut);
}
if(hash_uorgId_tDenormalize_1_DenormalizeOut.containsKey(row28.uorgId)){
	hash_ViaAdmin_Id_tDenormalize_1_DenormalizeOut = hash_uorgId_tDenormalize_1_DenormalizeOut.get(row28.uorgId);                    
}else{
	hash_ViaAdmin_Id_tDenormalize_1_DenormalizeOut = new java.util.HashMap<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>>();
	hash_uorgId_tDenormalize_1_DenormalizeOut.put(row28.uorgId,hash_ViaAdmin_Id_tDenormalize_1_DenormalizeOut);
}
if(hash_ViaAdmin_Id_tDenormalize_1_DenormalizeOut.containsKey(row28.ViaAdmin_Id)){
	hash_TFFarmaceutica_Id_tDenormalize_1_DenormalizeOut = hash_ViaAdmin_Id_tDenormalize_1_DenormalizeOut.get(row28.ViaAdmin_Id);                    
}else{
	hash_TFFarmaceutica_Id_tDenormalize_1_DenormalizeOut = new java.util.HashMap<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>>();
	hash_ViaAdmin_Id_tDenormalize_1_DenormalizeOut.put(row28.ViaAdmin_Id,hash_TFFarmaceutica_Id_tDenormalize_1_DenormalizeOut);
}
if(hash_TFFarmaceutica_Id_tDenormalize_1_DenormalizeOut.containsKey(row28.TFFarmaceutica_Id)){
	hash_MedGenerico_Id_tDenormalize_1_DenormalizeOut = hash_TFFarmaceutica_Id_tDenormalize_1_DenormalizeOut.get(row28.TFFarmaceutica_Id);                    
}else{
	hash_MedGenerico_Id_tDenormalize_1_DenormalizeOut = new java.util.HashMap<BigDecimal,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>>();
	hash_TFFarmaceutica_Id_tDenormalize_1_DenormalizeOut.put(row28.TFFarmaceutica_Id,hash_MedGenerico_Id_tDenormalize_1_DenormalizeOut);
}
if(hash_MedGenerico_Id_tDenormalize_1_DenormalizeOut.containsKey(row28.MedGenerico_Id)){
	hash_FFarmaceutica_Id_tDenormalize_1_DenormalizeOut = hash_MedGenerico_Id_tDenormalize_1_DenormalizeOut.get(row28.MedGenerico_Id);                    
}else{
	hash_FFarmaceutica_Id_tDenormalize_1_DenormalizeOut = new java.util.HashMap<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>>();
	hash_MedGenerico_Id_tDenormalize_1_DenormalizeOut.put(row28.MedGenerico_Id,hash_FFarmaceutica_Id_tDenormalize_1_DenormalizeOut);
}
if(hash_FFarmaceutica_Id_tDenormalize_1_DenormalizeOut.containsKey(row28.FFarmaceutica_Id)){
	hash_UMedida_Id_tDenormalize_1_DenormalizeOut = hash_FFarmaceutica_Id_tDenormalize_1_DenormalizeOut.get(row28.FFarmaceutica_Id);                    
}else{
	hash_UMedida_Id_tDenormalize_1_DenormalizeOut = new java.util.HashMap<BigDecimal,java.util.Map<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>>();
	hash_FFarmaceutica_Id_tDenormalize_1_DenormalizeOut.put(row28.FFarmaceutica_Id,hash_UMedida_Id_tDenormalize_1_DenormalizeOut);
}
if(hash_UMedida_Id_tDenormalize_1_DenormalizeOut.containsKey(row28.UMedida_Id)){
	hash_CantUMedida_Int_tDenormalize_1_DenormalizeOut = hash_UMedida_Id_tDenormalize_1_DenormalizeOut.get(row28.UMedida_Id);                    
}else{
	hash_CantUMedida_Int_tDenormalize_1_DenormalizeOut = new java.util.HashMap<Double,java.util.Map<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>>();
	hash_UMedida_Id_tDenormalize_1_DenormalizeOut.put(row28.UMedida_Id,hash_CantUMedida_Int_tDenormalize_1_DenormalizeOut);
}
if(hash_CantUMedida_Int_tDenormalize_1_DenormalizeOut.containsKey(row28.CantUMedida_Int)){
	hash_CantMinima_Int_tDenormalize_1_DenormalizeOut = hash_CantUMedida_Int_tDenormalize_1_DenormalizeOut.get(row28.CantUMedida_Int);                    
}else{
	hash_CantMinima_Int_tDenormalize_1_DenormalizeOut = new java.util.HashMap<Integer,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>>();
	hash_CantUMedida_Int_tDenormalize_1_DenormalizeOut.put(row28.CantUMedida_Int,hash_CantMinima_Int_tDenormalize_1_DenormalizeOut);
}
if(hash_CantMinima_Int_tDenormalize_1_DenormalizeOut.containsKey(row28.CantMinima_Int)){
	hash__FExp_RegInvima_tDenormalize_1_DenormalizeOut = hash_CantMinima_Int_tDenormalize_1_DenormalizeOut.get(row28.CantMinima_Int);                    
}else{
	hash__FExp_RegInvima_tDenormalize_1_DenormalizeOut = new java.util.HashMap<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>>();
	hash_CantMinima_Int_tDenormalize_1_DenormalizeOut.put(row28.CantMinima_Int,hash__FExp_RegInvima_tDenormalize_1_DenormalizeOut);
}
if(hash__FExp_RegInvima_tDenormalize_1_DenormalizeOut.containsKey(row28._FExp_RegInvima)){
	hash__FVen_RegInvima_tDenormalize_1_DenormalizeOut = hash__FExp_RegInvima_tDenormalize_1_DenormalizeOut.get(row28._FExp_RegInvima);                    
}else{
	hash__FVen_RegInvima_tDenormalize_1_DenormalizeOut = new java.util.HashMap<Boolean,java.util.Map<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>>();
	hash__FExp_RegInvima_tDenormalize_1_DenormalizeOut.put(row28._FExp_RegInvima,hash__FVen_RegInvima_tDenormalize_1_DenormalizeOut);
}
if(hash__FVen_RegInvima_tDenormalize_1_DenormalizeOut.containsKey(row28._FVen_RegInvima)){
	hash__FActivoCum_tDenormalize_1_DenormalizeOut = hash__FVen_RegInvima_tDenormalize_1_DenormalizeOut.get(row28._FVen_RegInvima);                    
}else{
	hash__FActivoCum_tDenormalize_1_DenormalizeOut = new java.util.HashMap<Boolean,java.util.Map<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>>();
	hash__FVen_RegInvima_tDenormalize_1_DenormalizeOut.put(row28._FVen_RegInvima,hash__FActivoCum_tDenormalize_1_DenormalizeOut);
}
if(hash__FActivoCum_tDenormalize_1_DenormalizeOut.containsKey(row28._FActivoCum)){
	hash__FInactivoCum_tDenormalize_1_DenormalizeOut = hash__FActivoCum_tDenormalize_1_DenormalizeOut.get(row28._FActivoCum);                    
}else{
	hash__FInactivoCum_tDenormalize_1_DenormalizeOut = new java.util.HashMap<Boolean,java.util.Map<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>>();
	hash__FActivoCum_tDenormalize_1_DenormalizeOut.put(row28._FActivoCum,hash__FInactivoCum_tDenormalize_1_DenormalizeOut);
}
if(hash__FInactivoCum_tDenormalize_1_DenormalizeOut.containsKey(row28._FInactivoCum)){
	hash_Fabricante_NitN_tDenormalize_1_DenormalizeOut = hash__FInactivoCum_tDenormalize_1_DenormalizeOut.get(row28._FInactivoCum);                    
}else{
	hash_Fabricante_NitN_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>>();
	hash__FInactivoCum_tDenormalize_1_DenormalizeOut.put(row28._FInactivoCum,hash_Fabricante_NitN_tDenormalize_1_DenormalizeOut);
}
if(hash_Fabricante_NitN_tDenormalize_1_DenormalizeOut.containsKey(row28.Fabricante_NitN)){
	hash_Importador_NitN_tDenormalize_1_DenormalizeOut = hash_Fabricante_NitN_tDenormalize_1_DenormalizeOut.get(row28.Fabricante_NitN);                    
}else{
	hash_Importador_NitN_tDenormalize_1_DenormalizeOut = new java.util.HashMap<String,java.util.Map<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>>();
	hash_Fabricante_NitN_tDenormalize_1_DenormalizeOut.put(row28.Fabricante_NitN,hash_Importador_NitN_tDenormalize_1_DenormalizeOut);
}
if(hash_Importador_NitN_tDenormalize_1_DenormalizeOut.containsKey(row28.Importador_NitN)){
	hash_Fabricante_Id_tDenormalize_1_DenormalizeOut = hash_Importador_NitN_tDenormalize_1_DenormalizeOut.get(row28.Importador_NitN);                    
}else{
	hash_Fabricante_Id_tDenormalize_1_DenormalizeOut = new java.util.HashMap<BigDecimal,java.util.Map<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>>();
	hash_Importador_NitN_tDenormalize_1_DenormalizeOut.put(row28.Importador_NitN,hash_Fabricante_Id_tDenormalize_1_DenormalizeOut);
}
if(hash_Fabricante_Id_tDenormalize_1_DenormalizeOut.containsKey(row28.Fabricante_Id)){
	hash_Importador_Id_tDenormalize_1_DenormalizeOut = hash_Fabricante_Id_tDenormalize_1_DenormalizeOut.get(row28.Fabricante_Id);                    
}else{
	hash_Importador_Id_tDenormalize_1_DenormalizeOut = new java.util.HashMap<BigDecimal,java.util.Map<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>>();
	hash_Fabricante_Id_tDenormalize_1_DenormalizeOut.put(row28.Fabricante_Id,hash_Importador_Id_tDenormalize_1_DenormalizeOut);
}
if(hash_Importador_Id_tDenormalize_1_DenormalizeOut.containsKey(row28.Importador_Id)){
	hash_Cod_Barras_Duplicidad__tDenormalize_1_DenormalizeOut = hash_Importador_Id_tDenormalize_1_DenormalizeOut.get(row28.Importador_Id);                    
}else{
	hash_Cod_Barras_Duplicidad__tDenormalize_1_DenormalizeOut = new java.util.HashMap<Integer,java.util.Map<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>>();
	hash_Importador_Id_tDenormalize_1_DenormalizeOut.put(row28.Importador_Id,hash_Cod_Barras_Duplicidad__tDenormalize_1_DenormalizeOut);
}
if(hash_Cod_Barras_Duplicidad__tDenormalize_1_DenormalizeOut.containsKey(row28.Cod_Barras_Duplicidad_)){
	hash_Cod_Barras_Registrado__tDenormalize_1_DenormalizeOut = hash_Cod_Barras_Duplicidad__tDenormalize_1_DenormalizeOut.get(row28.Cod_Barras_Duplicidad_);                    
}else{
	hash_Cod_Barras_Registrado__tDenormalize_1_DenormalizeOut = new java.util.HashMap<Integer,java.util.Map<String, DenormalizeStructtDenormalize_1_DenormalizeOut>>();
	hash_Cod_Barras_Duplicidad__tDenormalize_1_DenormalizeOut.put(row28.Cod_Barras_Duplicidad_,hash_Cod_Barras_Registrado__tDenormalize_1_DenormalizeOut);
}
if(hash_Cod_Barras_Registrado__tDenormalize_1_DenormalizeOut.containsKey(row28.Cod_Barras_Registrado_)){
	hash_Respuesta__tDenormalize_1_DenormalizeOut = hash_Cod_Barras_Registrado__tDenormalize_1_DenormalizeOut.get(row28.Cod_Barras_Registrado_);                    
}else{
	hash_Respuesta__tDenormalize_1_DenormalizeOut = new java.util.HashMap<String, DenormalizeStructtDenormalize_1_DenormalizeOut>();
	hash_Cod_Barras_Registrado__tDenormalize_1_DenormalizeOut.put(row28.Cod_Barras_Registrado_,hash_Respuesta__tDenormalize_1_DenormalizeOut);
}
if(hash_Respuesta__tDenormalize_1_DenormalizeOut.containsKey(row28.Respuesta_)){
	denormalize_result_tDenormalize_1_DenormalizeOut = hash_Respuesta__tDenormalize_1_DenormalizeOut.get(row28.Respuesta_);		
	denormalize_result_tDenormalize_1_DenormalizeOut.Caracteristicas.append("/").append(row28.Caracteristicas);
					
	denormalize_result_tDenormalize_1_DenormalizeOut.Caracteristicas_Ids.append("/").append(row28.Caracteristicas_Ids);
			
	if(!denormalize_result_tDenormalize_1_DenormalizeOut.State.contains(row28.State)){
		denormalize_result_tDenormalize_1_DenormalizeOut.State.add(row28.State);
	}
	if(!denormalize_result_tDenormalize_1_DenormalizeOut.Ins_Caract.contains(row28.Ins_Caract)){
		denormalize_result_tDenormalize_1_DenormalizeOut.Ins_Caract.add(row28.Ins_Caract);
	}                  
}else{
	denormalize_result_tDenormalize_1_DenormalizeOut = new DenormalizeStructtDenormalize_1_DenormalizeOut();		
	denormalize_result_tDenormalize_1_DenormalizeOut.Caracteristicas.append(row28.Caracteristicas);
					
	denormalize_result_tDenormalize_1_DenormalizeOut.Caracteristicas_Ids.append(row28.Caracteristicas_Ids);
			
	if(!denormalize_result_tDenormalize_1_DenormalizeOut.State.contains(row28.State)){
		denormalize_result_tDenormalize_1_DenormalizeOut.State.add(row28.State);
	}
	if(!denormalize_result_tDenormalize_1_DenormalizeOut.Ins_Caract.contains(row28.Ins_Caract)){
		denormalize_result_tDenormalize_1_DenormalizeOut.Ins_Caract.add(row28.Ins_Caract);
	}
	hash_Respuesta__tDenormalize_1_DenormalizeOut.put(row28.Respuesta_, denormalize_result_tDenormalize_1_DenormalizeOut);
}

 


	tos_count_tDenormalize_1_DenormalizeOut++;

/**
 * [tDenormalize_1_DenormalizeOut main ] stop
 */
	
	/**
	 * [tDenormalize_1_DenormalizeOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tDenormalize_1";
	
	currentComponent="tDenormalize_1_DenormalizeOut";
	
	

 



/**
 * [tDenormalize_1_DenormalizeOut process_data_begin ] stop
 */
	
	/**
	 * [tDenormalize_1_DenormalizeOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tDenormalize_1";
	
	currentComponent="tDenormalize_1_DenormalizeOut";
	
	

 



/**
 * [tDenormalize_1_DenormalizeOut process_data_end ] stop
 */



	
	/**
	 * [tOracleSP_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	

 



/**
 * [tOracleSP_4 process_data_end ] stop
 */

} // End of branch "next_6"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 process_data_end ] stop
 */

} // End of branch "next_5"




	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_end ] stop
 */

} // End of branch "row33"




	
	/**
	 * [tJoin_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tJoin_8";
	
	

 



/**
 * [tJoin_8 process_data_end ] stop
 */

} // End of branch "next_4"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_end ] stop
 */
		// end for
	}



	
	/**
	 * [tNormalize_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tNormalize_1";
	
	

 



/**
 * [tNormalize_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

 



/**
 * [tJavaRow_11 process_data_end ] stop
 */

} // End of branch "row24"




	
	/**
	 * [tJoin_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tJoin_7";
	
	

 



/**
 * [tJoin_7 process_data_end ] stop
 */

} // End of branch "row22"




	
	/**
	 * [tJoin_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJoin_6";
	
	

 



/**
 * [tJoin_6 process_data_end ] stop
 */

} // End of branch "next_3"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 process_data_end ] stop
 */

} // End of branch "row19"




	
	/**
	 * [tJoin_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJoin_4";
	
	

 



/**
 * [tJoin_4 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_end ] stop
 */

} // End of branch "row27"




	
	/**
	 * [tJoin_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJoin_2";
	
	

 



/**
 * [tJoin_2 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_end ] stop
 */

} // End of branch "row13"




	
	/**
	 * [tJoin_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJoin_5";
	
	

 



/**
 * [tJoin_5 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_end ] stop
 */

} // End of branch "row10"




	
	/**
	 * [tJoin_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJoin_3";
	
	

 



/**
 * [tJoin_3 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_end ] stop
 */

} // End of branch "next_2"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 



/**
 * [tOracleInput_10 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_10 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

}
}finally{
	if (rs_tOracleInput_10 != null) {
		rs_tOracleInput_10.close();
	}
	if (stmt_tOracleInput_10 != null) {
		stmt_tOracleInput_10.close();
	}
}

globalMap.put("tOracleInput_10_NB_LINE",nb_line_tOracleInput_10);
 

ok_Hash.put("tOracleInput_10", true);
end_Hash.put("tOracleInput_10", System.currentTimeMillis());




/**
 * [tOracleInput_10 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tJavaRow_4 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

globalMap.put("tJavaRow_4_NB_LINE",nb_line_tJavaRow_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"next_2");
			  	}
			  	
 

ok_Hash.put("tJavaRow_4", true);
end_Hash.put("tJavaRow_4", System.currentTimeMillis());




/**
 * [tJavaRow_4 end ] stop
 */

	
	/**
	 * [tJoin_3 end ] start
	 */

	

	
	
	currentComponent="tJoin_3";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tJoin_3", true);
end_Hash.put("tJoin_3", System.currentTimeMillis());




/**
 * [tJoin_3 end ] stop
 */

	
	/**
	 * [tJavaRow_5 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

globalMap.put("tJavaRow_5_NB_LINE",nb_line_tJavaRow_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tJavaRow_5", true);
end_Hash.put("tJavaRow_5", System.currentTimeMillis());




/**
 * [tJavaRow_5 end ] stop
 */

	
	/**
	 * [tJoin_5 end ] start
	 */

	

	
	
	currentComponent="tJoin_5";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tJoin_5", true);
end_Hash.put("tJoin_5", System.currentTimeMillis());




/**
 * [tJoin_5 end ] stop
 */

	
	/**
	 * [tJavaRow_6 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

globalMap.put("tJavaRow_6_NB_LINE",nb_line_tJavaRow_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tJavaRow_6", true);
end_Hash.put("tJavaRow_6", System.currentTimeMillis());




/**
 * [tJavaRow_6 end ] stop
 */

	
	/**
	 * [tJoin_2 end ] start
	 */

	

	
	
	currentComponent="tJoin_2";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row20");
			  	}
			  	
 

ok_Hash.put("tJoin_2", true);
end_Hash.put("tJoin_2", System.currentTimeMillis());




/**
 * [tJoin_2 end ] stop
 */

	
	/**
	 * [tJavaRow_2 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

globalMap.put("tJavaRow_2_NB_LINE",nb_line_tJavaRow_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row27");
			  	}
			  	
 

ok_Hash.put("tJavaRow_2", true);
end_Hash.put("tJavaRow_2", System.currentTimeMillis());




/**
 * [tJavaRow_2 end ] stop
 */

	
	/**
	 * [tJoin_4 end ] start
	 */

	

	
	
	currentComponent="tJoin_4";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tJoin_4", true);
end_Hash.put("tJoin_4", System.currentTimeMillis());




/**
 * [tJoin_4 end ] stop
 */

	
	/**
	 * [tJavaRow_7 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

globalMap.put("tJavaRow_7_NB_LINE",nb_line_tJavaRow_7);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row19");
			  	}
			  	
 

ok_Hash.put("tJavaRow_7", true);
end_Hash.put("tJavaRow_7", System.currentTimeMillis());




/**
 * [tJavaRow_7 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tJoin_6 end ] start
	 */

	

	
	
	currentComponent="tJoin_6";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"next_3");
			  	}
			  	
 

ok_Hash.put("tJoin_6", true);
end_Hash.put("tJoin_6", System.currentTimeMillis());




/**
 * [tJoin_6 end ] stop
 */

	
	/**
	 * [tJoin_7 end ] start
	 */

	

	
	
	currentComponent="tJoin_7";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row22");
			  	}
			  	
 

ok_Hash.put("tJoin_7", true);
end_Hash.put("tJoin_7", System.currentTimeMillis());




/**
 * [tJoin_7 end ] stop
 */

	
	/**
	 * [tJavaRow_11 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

globalMap.put("tJavaRow_11_NB_LINE",nb_line_tJavaRow_11);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tJavaRow_11", true);
end_Hash.put("tJavaRow_11", System.currentTimeMillis());




/**
 * [tJavaRow_11 end ] stop
 */

	
	/**
	 * [tNormalize_1 end ] start
	 */

	

	
	
	currentComponent="tNormalize_1";
	
	

    globalMap.put("tNormalize_1_NB_LINE", nb_line_tNormalize_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row25");
			  	}
			  	
 

ok_Hash.put("tNormalize_1", true);
end_Hash.put("tNormalize_1", System.currentTimeMillis());




/**
 * [tNormalize_1 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row31");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tJoin_8 end ] start
	 */

	

	
	
	currentComponent="tJoin_8";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"next_4");
			  	}
			  	
 

ok_Hash.put("tJoin_8", true);
end_Hash.put("tJoin_8", System.currentTimeMillis());




/**
 * [tJoin_8 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row33");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tJavaRow_8 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

globalMap.put("tJavaRow_8_NB_LINE",nb_line_tJavaRow_8);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"next_5");
			  	}
			  	
 

ok_Hash.put("tJavaRow_8", true);
end_Hash.put("tJavaRow_8", System.currentTimeMillis());




/**
 * [tJavaRow_8 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row34");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tOracleSP_4 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	


	statement_tOracleSP_4.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"next_6");
			  	}
			  	
 

ok_Hash.put("tOracleSP_4", true);
end_Hash.put("tOracleSP_4", System.currentTimeMillis());




/**
 * [tOracleSP_4 end ] stop
 */

	
	/**
	 * [tDenormalize_1_DenormalizeOut end ] start
	 */

	

	
	
		currentVirtualComponent = "tDenormalize_1";
	
	currentComponent="tDenormalize_1_DenormalizeOut";
	
	
java.util.List<OnRowsEndStructtDenormalize_1> result_list_tDenormalize_1_DenormalizeOut = new java.util.ArrayList<OnRowsEndStructtDenormalize_1>();
if (denormalize_result_tDenormalize_1_DenormalizeOut != null) {
StringBuilder sb_tDenormalize_1_DenormalizeOut = null;

//generate result begin
java.util.Iterator<String> oViaAdmin_iterator_tDenormalize_1_DenormalizeOut = hash_oViaAdmin_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(oViaAdmin_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_oViaAdmin_tDenormalize_1_DenormalizeOut = oViaAdmin_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_oFFarmaceutica_tDenormalize_1_DenormalizeOut = hash_oViaAdmin_tDenormalize_1_DenormalizeOut.get(key_oViaAdmin_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> oFFarmaceutica_iterator_tDenormalize_1_DenormalizeOut = hash_oFFarmaceutica_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(oFFarmaceutica_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_oFFarmaceutica_tDenormalize_1_DenormalizeOut = oFFarmaceutica_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_oNGenerico_tDenormalize_1_DenormalizeOut = hash_oFFarmaceutica_tDenormalize_1_DenormalizeOut.get(key_oFFarmaceutica_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> oNGenerico_iterator_tDenormalize_1_DenormalizeOut = hash_oNGenerico_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(oNGenerico_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_oNGenerico_tDenormalize_1_DenormalizeOut = oNGenerico_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_oConcentracion_tDenormalize_1_DenormalizeOut = hash_oNGenerico_tDenormalize_1_DenormalizeOut.get(key_oNGenerico_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> oConcentracion_iterator_tDenormalize_1_DenormalizeOut = hash_oConcentracion_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(oConcentracion_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_oConcentracion_tDenormalize_1_DenormalizeOut = oConcentracion_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_oUnidosis_tDenormalize_1_DenormalizeOut = hash_oConcentracion_tDenormalize_1_DenormalizeOut.get(key_oConcentracion_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> oUnidosis_iterator_tDenormalize_1_DenormalizeOut = hash_oUnidosis_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(oUnidosis_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_oUnidosis_tDenormalize_1_DenormalizeOut = oUnidosis_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_oUMedida_tDenormalize_1_DenormalizeOut = hash_oUnidosis_tDenormalize_1_DenormalizeOut.get(key_oUnidosis_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> oUMedida_iterator_tDenormalize_1_DenormalizeOut = hash_oUMedida_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(oUMedida_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_oUMedida_tDenormalize_1_DenormalizeOut = oUMedida_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_oFabricante_tDenormalize_1_DenormalizeOut = hash_oUMedida_tDenormalize_1_DenormalizeOut.get(key_oUMedida_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> oFabricante_iterator_tDenormalize_1_DenormalizeOut = hash_oFabricante_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(oFabricante_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_oFabricante_tDenormalize_1_DenormalizeOut = oFabricante_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_oImportador_tDenormalize_1_DenormalizeOut = hash_oFabricante_tDenormalize_1_DenormalizeOut.get(key_oFabricante_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> oImportador_iterator_tDenormalize_1_DenormalizeOut = hash_oImportador_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(oImportador_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_oImportador_tDenormalize_1_DenormalizeOut = oImportador_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_Ins_tDenormalize_1_DenormalizeOut = hash_oImportador_tDenormalize_1_DenormalizeOut.get(key_oImportador_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> Ins_iterator_tDenormalize_1_DenormalizeOut = hash_Ins_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(Ins_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_Ins_tDenormalize_1_DenormalizeOut = Ins_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash__ErrorMessage_tDenormalize_1_DenormalizeOut = hash_Ins_tDenormalize_1_DenormalizeOut.get(key_Ins_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> _ErrorMessage_iterator_tDenormalize_1_DenormalizeOut = hash__ErrorMessage_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(_ErrorMessage_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key__ErrorMessage_tDenormalize_1_DenormalizeOut = _ErrorMessage_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_CodBarras_tDenormalize_1_DenormalizeOut = hash__ErrorMessage_tDenormalize_1_DenormalizeOut.get(key__ErrorMessage_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> CodBarras_iterator_tDenormalize_1_DenormalizeOut = hash_CodBarras_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(CodBarras_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_CodBarras_tDenormalize_1_DenormalizeOut = CodBarras_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_NComercial_tDenormalize_1_DenormalizeOut = hash_CodBarras_tDenormalize_1_DenormalizeOut.get(key_CodBarras_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> NComercial_iterator_tDenormalize_1_DenormalizeOut = hash_NComercial_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(NComercial_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_NComercial_tDenormalize_1_DenormalizeOut = NComercial_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_PComercial_tDenormalize_1_DenormalizeOut = hash_NComercial_tDenormalize_1_DenormalizeOut.get(key_NComercial_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> PComercial_iterator_tDenormalize_1_DenormalizeOut = hash_PComercial_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(PComercial_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_PComercial_tDenormalize_1_DenormalizeOut = PComercial_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_ViaAdmin_tDenormalize_1_DenormalizeOut = hash_PComercial_tDenormalize_1_DenormalizeOut.get(key_PComercial_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> ViaAdmin_iterator_tDenormalize_1_DenormalizeOut = hash_ViaAdmin_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(ViaAdmin_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_ViaAdmin_tDenormalize_1_DenormalizeOut = ViaAdmin_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_FFarmaceutica_tDenormalize_1_DenormalizeOut = hash_ViaAdmin_tDenormalize_1_DenormalizeOut.get(key_ViaAdmin_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> FFarmaceutica_iterator_tDenormalize_1_DenormalizeOut = hash_FFarmaceutica_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(FFarmaceutica_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_FFarmaceutica_tDenormalize_1_DenormalizeOut = FFarmaceutica_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_NGenerico_tDenormalize_1_DenormalizeOut = hash_FFarmaceutica_tDenormalize_1_DenormalizeOut.get(key_FFarmaceutica_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> NGenerico_iterator_tDenormalize_1_DenormalizeOut = hash_NGenerico_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(NGenerico_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_NGenerico_tDenormalize_1_DenormalizeOut = NGenerico_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_Concentracion_tDenormalize_1_DenormalizeOut = hash_NGenerico_tDenormalize_1_DenormalizeOut.get(key_NGenerico_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> Concentracion_iterator_tDenormalize_1_DenormalizeOut = hash_Concentracion_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(Concentracion_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_Concentracion_tDenormalize_1_DenormalizeOut = Concentracion_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_Unidosis_tDenormalize_1_DenormalizeOut = hash_Concentracion_tDenormalize_1_DenormalizeOut.get(key_Concentracion_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> Unidosis_iterator_tDenormalize_1_DenormalizeOut = hash_Unidosis_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(Unidosis_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_Unidosis_tDenormalize_1_DenormalizeOut = Unidosis_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_UMedida_tDenormalize_1_DenormalizeOut = hash_Unidosis_tDenormalize_1_DenormalizeOut.get(key_Unidosis_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> UMedida_iterator_tDenormalize_1_DenormalizeOut = hash_UMedida_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(UMedida_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_UMedida_tDenormalize_1_DenormalizeOut = UMedida_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_CantUMedida_tDenormalize_1_DenormalizeOut = hash_UMedida_tDenormalize_1_DenormalizeOut.get(key_UMedida_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> CantUMedida_iterator_tDenormalize_1_DenormalizeOut = hash_CantUMedida_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(CantUMedida_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_CantUMedida_tDenormalize_1_DenormalizeOut = CantUMedida_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_CantMinima_tDenormalize_1_DenormalizeOut = hash_CantUMedida_tDenormalize_1_DenormalizeOut.get(key_CantUMedida_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> CantMinima_iterator_tDenormalize_1_DenormalizeOut = hash_CantMinima_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(CantMinima_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_CantMinima_tDenormalize_1_DenormalizeOut = CantMinima_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_RegInvima_tDenormalize_1_DenormalizeOut = hash_CantMinima_tDenormalize_1_DenormalizeOut.get(key_CantMinima_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> RegInvima_iterator_tDenormalize_1_DenormalizeOut = hash_RegInvima_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(RegInvima_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_RegInvima_tDenormalize_1_DenormalizeOut = RegInvima_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_FExp_RegInvima_tDenormalize_1_DenormalizeOut = hash_RegInvima_tDenormalize_1_DenormalizeOut.get(key_RegInvima_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> FExp_RegInvima_iterator_tDenormalize_1_DenormalizeOut = hash_FExp_RegInvima_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(FExp_RegInvima_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_FExp_RegInvima_tDenormalize_1_DenormalizeOut = FExp_RegInvima_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_FVen_RegInvima_tDenormalize_1_DenormalizeOut = hash_FExp_RegInvima_tDenormalize_1_DenormalizeOut.get(key_FExp_RegInvima_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> FVen_RegInvima_iterator_tDenormalize_1_DenormalizeOut = hash_FVen_RegInvima_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(FVen_RegInvima_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_FVen_RegInvima_tDenormalize_1_DenormalizeOut = FVen_RegInvima_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_FActivoCum_tDenormalize_1_DenormalizeOut = hash_FVen_RegInvima_tDenormalize_1_DenormalizeOut.get(key_FVen_RegInvima_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> FActivoCum_iterator_tDenormalize_1_DenormalizeOut = hash_FActivoCum_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(FActivoCum_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_FActivoCum_tDenormalize_1_DenormalizeOut = FActivoCum_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_FInactivoCum_tDenormalize_1_DenormalizeOut = hash_FActivoCum_tDenormalize_1_DenormalizeOut.get(key_FActivoCum_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> FInactivoCum_iterator_tDenormalize_1_DenormalizeOut = hash_FInactivoCum_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(FInactivoCum_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_FInactivoCum_tDenormalize_1_DenormalizeOut = FInactivoCum_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_Expediente_tDenormalize_1_DenormalizeOut = hash_FInactivoCum_tDenormalize_1_DenormalizeOut.get(key_FInactivoCum_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> Expediente_iterator_tDenormalize_1_DenormalizeOut = hash_Expediente_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(Expediente_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_Expediente_tDenormalize_1_DenormalizeOut = Expediente_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_Consecutivo_tDenormalize_1_DenormalizeOut = hash_Expediente_tDenormalize_1_DenormalizeOut.get(key_Expediente_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> Consecutivo_iterator_tDenormalize_1_DenormalizeOut = hash_Consecutivo_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(Consecutivo_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_Consecutivo_tDenormalize_1_DenormalizeOut = Consecutivo_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_Cum_tDenormalize_1_DenormalizeOut = hash_Consecutivo_tDenormalize_1_DenormalizeOut.get(key_Consecutivo_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> Cum_iterator_tDenormalize_1_DenormalizeOut = hash_Cum_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(Cum_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_Cum_tDenormalize_1_DenormalizeOut = Cum_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_Origen_tDenormalize_1_DenormalizeOut = hash_Cum_tDenormalize_1_DenormalizeOut.get(key_Cum_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> Origen_iterator_tDenormalize_1_DenormalizeOut = hash_Origen_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(Origen_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_Origen_tDenormalize_1_DenormalizeOut = Origen_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_Contraindicaciones_tDenormalize_1_DenormalizeOut = hash_Origen_tDenormalize_1_DenormalizeOut.get(key_Origen_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> Contraindicaciones_iterator_tDenormalize_1_DenormalizeOut = hash_Contraindicaciones_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(Contraindicaciones_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_Contraindicaciones_tDenormalize_1_DenormalizeOut = Contraindicaciones_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_Efectos_Posteriores_tDenormalize_1_DenormalizeOut = hash_Contraindicaciones_tDenormalize_1_DenormalizeOut.get(key_Contraindicaciones_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> Efectos_Posteriores_iterator_tDenormalize_1_DenormalizeOut = hash_Efectos_Posteriores_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(Efectos_Posteriores_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_Efectos_Posteriores_tDenormalize_1_DenormalizeOut = Efectos_Posteriores_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_Riesgos_Asociados_tDenormalize_1_DenormalizeOut = hash_Efectos_Posteriores_tDenormalize_1_DenormalizeOut.get(key_Efectos_Posteriores_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> Riesgos_Asociados_iterator_tDenormalize_1_DenormalizeOut = hash_Riesgos_Asociados_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(Riesgos_Asociados_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_Riesgos_Asociados_tDenormalize_1_DenormalizeOut = Riesgos_Asociados_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_Dosis_Aplicacion_tDenormalize_1_DenormalizeOut = hash_Riesgos_Asociados_tDenormalize_1_DenormalizeOut.get(key_Riesgos_Asociados_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> Dosis_Aplicacion_iterator_tDenormalize_1_DenormalizeOut = hash_Dosis_Aplicacion_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(Dosis_Aplicacion_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_Dosis_Aplicacion_tDenormalize_1_DenormalizeOut = Dosis_Aplicacion_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_NIT_Fabricante_tDenormalize_1_DenormalizeOut = hash_Dosis_Aplicacion_tDenormalize_1_DenormalizeOut.get(key_Dosis_Aplicacion_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> NIT_Fabricante_iterator_tDenormalize_1_DenormalizeOut = hash_NIT_Fabricante_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(NIT_Fabricante_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_NIT_Fabricante_tDenormalize_1_DenormalizeOut = NIT_Fabricante_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_Fabricante_tDenormalize_1_DenormalizeOut = hash_NIT_Fabricante_tDenormalize_1_DenormalizeOut.get(key_NIT_Fabricante_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> Fabricante_iterator_tDenormalize_1_DenormalizeOut = hash_Fabricante_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(Fabricante_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_Fabricante_tDenormalize_1_DenormalizeOut = Fabricante_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_NIT_Importador_tDenormalize_1_DenormalizeOut = hash_Fabricante_tDenormalize_1_DenormalizeOut.get(key_Fabricante_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> NIT_Importador_iterator_tDenormalize_1_DenormalizeOut = hash_NIT_Importador_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(NIT_Importador_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_NIT_Importador_tDenormalize_1_DenormalizeOut = NIT_Importador_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_Importador_tDenormalize_1_DenormalizeOut = hash_NIT_Importador_tDenormalize_1_DenormalizeOut.get(key_NIT_Importador_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> Importador_iterator_tDenormalize_1_DenormalizeOut = hash_Importador_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(Importador_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_Importador_tDenormalize_1_DenormalizeOut = Importador_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_usuariosId_tDenormalize_1_DenormalizeOut = hash_Importador_tDenormalize_1_DenormalizeOut.get(key_Importador_tDenormalize_1_DenormalizeOut);

java.util.Iterator<BigDecimal> usuariosId_iterator_tDenormalize_1_DenormalizeOut = hash_usuariosId_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(usuariosId_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	BigDecimal key_usuariosId_tDenormalize_1_DenormalizeOut = usuariosId_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_uorgId_tDenormalize_1_DenormalizeOut = hash_usuariosId_tDenormalize_1_DenormalizeOut.get(key_usuariosId_tDenormalize_1_DenormalizeOut);

java.util.Iterator<BigDecimal> uorgId_iterator_tDenormalize_1_DenormalizeOut = hash_uorgId_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(uorgId_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	BigDecimal key_uorgId_tDenormalize_1_DenormalizeOut = uorgId_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_ViaAdmin_Id_tDenormalize_1_DenormalizeOut = hash_uorgId_tDenormalize_1_DenormalizeOut.get(key_uorgId_tDenormalize_1_DenormalizeOut);

java.util.Iterator<BigDecimal> ViaAdmin_Id_iterator_tDenormalize_1_DenormalizeOut = hash_ViaAdmin_Id_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(ViaAdmin_Id_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	BigDecimal key_ViaAdmin_Id_tDenormalize_1_DenormalizeOut = ViaAdmin_Id_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_TFFarmaceutica_Id_tDenormalize_1_DenormalizeOut = hash_ViaAdmin_Id_tDenormalize_1_DenormalizeOut.get(key_ViaAdmin_Id_tDenormalize_1_DenormalizeOut);

java.util.Iterator<BigDecimal> TFFarmaceutica_Id_iterator_tDenormalize_1_DenormalizeOut = hash_TFFarmaceutica_Id_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(TFFarmaceutica_Id_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	BigDecimal key_TFFarmaceutica_Id_tDenormalize_1_DenormalizeOut = TFFarmaceutica_Id_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_MedGenerico_Id_tDenormalize_1_DenormalizeOut = hash_TFFarmaceutica_Id_tDenormalize_1_DenormalizeOut.get(key_TFFarmaceutica_Id_tDenormalize_1_DenormalizeOut);

java.util.Iterator<BigDecimal> MedGenerico_Id_iterator_tDenormalize_1_DenormalizeOut = hash_MedGenerico_Id_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(MedGenerico_Id_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	BigDecimal key_MedGenerico_Id_tDenormalize_1_DenormalizeOut = MedGenerico_Id_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_FFarmaceutica_Id_tDenormalize_1_DenormalizeOut = hash_MedGenerico_Id_tDenormalize_1_DenormalizeOut.get(key_MedGenerico_Id_tDenormalize_1_DenormalizeOut);

java.util.Iterator<BigDecimal> FFarmaceutica_Id_iterator_tDenormalize_1_DenormalizeOut = hash_FFarmaceutica_Id_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(FFarmaceutica_Id_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	BigDecimal key_FFarmaceutica_Id_tDenormalize_1_DenormalizeOut = FFarmaceutica_Id_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_UMedida_Id_tDenormalize_1_DenormalizeOut = hash_FFarmaceutica_Id_tDenormalize_1_DenormalizeOut.get(key_FFarmaceutica_Id_tDenormalize_1_DenormalizeOut);

java.util.Iterator<BigDecimal> UMedida_Id_iterator_tDenormalize_1_DenormalizeOut = hash_UMedida_Id_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(UMedida_Id_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	BigDecimal key_UMedida_Id_tDenormalize_1_DenormalizeOut = UMedida_Id_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_CantUMedida_Int_tDenormalize_1_DenormalizeOut = hash_UMedida_Id_tDenormalize_1_DenormalizeOut.get(key_UMedida_Id_tDenormalize_1_DenormalizeOut);

java.util.Iterator<Double> CantUMedida_Int_iterator_tDenormalize_1_DenormalizeOut = hash_CantUMedida_Int_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(CantUMedida_Int_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	Double key_CantUMedida_Int_tDenormalize_1_DenormalizeOut = CantUMedida_Int_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_CantMinima_Int_tDenormalize_1_DenormalizeOut = hash_CantUMedida_Int_tDenormalize_1_DenormalizeOut.get(key_CantUMedida_Int_tDenormalize_1_DenormalizeOut);

java.util.Iterator<Integer> CantMinima_Int_iterator_tDenormalize_1_DenormalizeOut = hash_CantMinima_Int_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(CantMinima_Int_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	Integer key_CantMinima_Int_tDenormalize_1_DenormalizeOut = CantMinima_Int_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash__FExp_RegInvima_tDenormalize_1_DenormalizeOut = hash_CantMinima_Int_tDenormalize_1_DenormalizeOut.get(key_CantMinima_Int_tDenormalize_1_DenormalizeOut);

java.util.Iterator<Boolean> _FExp_RegInvima_iterator_tDenormalize_1_DenormalizeOut = hash__FExp_RegInvima_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(_FExp_RegInvima_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	Boolean key__FExp_RegInvima_tDenormalize_1_DenormalizeOut = _FExp_RegInvima_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash__FVen_RegInvima_tDenormalize_1_DenormalizeOut = hash__FExp_RegInvima_tDenormalize_1_DenormalizeOut.get(key__FExp_RegInvima_tDenormalize_1_DenormalizeOut);

java.util.Iterator<Boolean> _FVen_RegInvima_iterator_tDenormalize_1_DenormalizeOut = hash__FVen_RegInvima_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(_FVen_RegInvima_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	Boolean key__FVen_RegInvima_tDenormalize_1_DenormalizeOut = _FVen_RegInvima_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash__FActivoCum_tDenormalize_1_DenormalizeOut = hash__FVen_RegInvima_tDenormalize_1_DenormalizeOut.get(key__FVen_RegInvima_tDenormalize_1_DenormalizeOut);

java.util.Iterator<Boolean> _FActivoCum_iterator_tDenormalize_1_DenormalizeOut = hash__FActivoCum_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(_FActivoCum_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	Boolean key__FActivoCum_tDenormalize_1_DenormalizeOut = _FActivoCum_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash__FInactivoCum_tDenormalize_1_DenormalizeOut = hash__FActivoCum_tDenormalize_1_DenormalizeOut.get(key__FActivoCum_tDenormalize_1_DenormalizeOut);

java.util.Iterator<Boolean> _FInactivoCum_iterator_tDenormalize_1_DenormalizeOut = hash__FInactivoCum_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(_FInactivoCum_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	Boolean key__FInactivoCum_tDenormalize_1_DenormalizeOut = _FInactivoCum_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_Fabricante_NitN_tDenormalize_1_DenormalizeOut = hash__FInactivoCum_tDenormalize_1_DenormalizeOut.get(key__FInactivoCum_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> Fabricante_NitN_iterator_tDenormalize_1_DenormalizeOut = hash_Fabricante_NitN_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(Fabricante_NitN_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_Fabricante_NitN_tDenormalize_1_DenormalizeOut = Fabricante_NitN_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_Importador_NitN_tDenormalize_1_DenormalizeOut = hash_Fabricante_NitN_tDenormalize_1_DenormalizeOut.get(key_Fabricante_NitN_tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> Importador_NitN_iterator_tDenormalize_1_DenormalizeOut = hash_Importador_NitN_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(Importador_NitN_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_Importador_NitN_tDenormalize_1_DenormalizeOut = Importador_NitN_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_Fabricante_Id_tDenormalize_1_DenormalizeOut = hash_Importador_NitN_tDenormalize_1_DenormalizeOut.get(key_Importador_NitN_tDenormalize_1_DenormalizeOut);

java.util.Iterator<BigDecimal> Fabricante_Id_iterator_tDenormalize_1_DenormalizeOut = hash_Fabricante_Id_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(Fabricante_Id_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	BigDecimal key_Fabricante_Id_tDenormalize_1_DenormalizeOut = Fabricante_Id_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_Importador_Id_tDenormalize_1_DenormalizeOut = hash_Fabricante_Id_tDenormalize_1_DenormalizeOut.get(key_Fabricante_Id_tDenormalize_1_DenormalizeOut);

java.util.Iterator<BigDecimal> Importador_Id_iterator_tDenormalize_1_DenormalizeOut = hash_Importador_Id_tDenormalize_1_DenormalizeOut.keySet().iterator();

while(Importador_Id_iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	BigDecimal key_Importador_Id_tDenormalize_1_DenormalizeOut = Importador_Id_iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_Cod_Barras_Duplicidad__tDenormalize_1_DenormalizeOut = hash_Importador_Id_tDenormalize_1_DenormalizeOut.get(key_Importador_Id_tDenormalize_1_DenormalizeOut);

java.util.Iterator<Integer> Cod_Barras_Duplicidad__iterator_tDenormalize_1_DenormalizeOut = hash_Cod_Barras_Duplicidad__tDenormalize_1_DenormalizeOut.keySet().iterator();

while(Cod_Barras_Duplicidad__iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	Integer key_Cod_Barras_Duplicidad__tDenormalize_1_DenormalizeOut = Cod_Barras_Duplicidad__iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_Cod_Barras_Registrado__tDenormalize_1_DenormalizeOut = hash_Cod_Barras_Duplicidad__tDenormalize_1_DenormalizeOut.get(key_Cod_Barras_Duplicidad__tDenormalize_1_DenormalizeOut);

java.util.Iterator<Integer> Cod_Barras_Registrado__iterator_tDenormalize_1_DenormalizeOut = hash_Cod_Barras_Registrado__tDenormalize_1_DenormalizeOut.keySet().iterator();

while(Cod_Barras_Registrado__iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	Integer key_Cod_Barras_Registrado__tDenormalize_1_DenormalizeOut = Cod_Barras_Registrado__iterator_tDenormalize_1_DenormalizeOut.next();
	
	hash_Respuesta__tDenormalize_1_DenormalizeOut = hash_Cod_Barras_Registrado__tDenormalize_1_DenormalizeOut.get(key_Cod_Barras_Registrado__tDenormalize_1_DenormalizeOut);

java.util.Iterator<String> Respuesta__iterator_tDenormalize_1_DenormalizeOut = hash_Respuesta__tDenormalize_1_DenormalizeOut.keySet().iterator();

while(Respuesta__iterator_tDenormalize_1_DenormalizeOut.hasNext()){

	String key_Respuesta__tDenormalize_1_DenormalizeOut = Respuesta__iterator_tDenormalize_1_DenormalizeOut.next();
	
	denormalize_result_tDenormalize_1_DenormalizeOut = hash_Respuesta__tDenormalize_1_DenormalizeOut.get(key_Respuesta__tDenormalize_1_DenormalizeOut);

	OnRowsEndStructtDenormalize_1 denormalize_row_tDenormalize_1_DenormalizeOut = new OnRowsEndStructtDenormalize_1();
                
	denormalize_row_tDenormalize_1_DenormalizeOut.oViaAdmin = key_oViaAdmin_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.oFFarmaceutica = key_oFFarmaceutica_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.oNGenerico = key_oNGenerico_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.oConcentracion = key_oConcentracion_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.oUnidosis = key_oUnidosis_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.oUMedida = key_oUMedida_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.oFabricante = key_oFabricante_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.oImportador = key_oImportador_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.Ins = key_Ins_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut._ErrorMessage = key__ErrorMessage_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.CodBarras = key_CodBarras_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.NComercial = key_NComercial_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.PComercial = key_PComercial_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.ViaAdmin = key_ViaAdmin_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.FFarmaceutica = key_FFarmaceutica_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.NGenerico = key_NGenerico_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.Concentracion = key_Concentracion_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.Unidosis = key_Unidosis_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.UMedida = key_UMedida_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.CantUMedida = key_CantUMedida_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.CantMinima = key_CantMinima_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.RegInvima = key_RegInvima_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.FExp_RegInvima = key_FExp_RegInvima_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.FVen_RegInvima = key_FVen_RegInvima_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.FActivoCum = key_FActivoCum_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.FInactivoCum = key_FInactivoCum_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.Expediente = key_Expediente_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.Consecutivo = key_Consecutivo_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.Cum = key_Cum_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.Origen = key_Origen_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.Contraindicaciones = key_Contraindicaciones_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.Efectos_Posteriores = key_Efectos_Posteriores_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.Riesgos_Asociados = key_Riesgos_Asociados_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.Dosis_Aplicacion = key_Dosis_Aplicacion_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.NIT_Fabricante = key_NIT_Fabricante_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.Fabricante = key_Fabricante_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.NIT_Importador = key_NIT_Importador_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.Importador = key_Importador_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.usuariosId = key_usuariosId_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.uorgId = key_uorgId_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.ViaAdmin_Id = key_ViaAdmin_Id_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.TFFarmaceutica_Id = key_TFFarmaceutica_Id_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.MedGenerico_Id = key_MedGenerico_Id_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.FFarmaceutica_Id = key_FFarmaceutica_Id_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.UMedida_Id = key_UMedida_Id_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.CantUMedida_Int = key_CantUMedida_Int_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.CantMinima_Int = key_CantMinima_Int_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut._FExp_RegInvima = key__FExp_RegInvima_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut._FVen_RegInvima = key__FVen_RegInvima_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut._FActivoCum = key__FActivoCum_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut._FInactivoCum = key__FInactivoCum_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.Fabricante_NitN = key_Fabricante_NitN_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.Importador_NitN = key_Importador_NitN_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.Fabricante_Id = key_Fabricante_Id_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.Importador_Id = key_Importador_Id_tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.Cod_Barras_Duplicidad_ = key_Cod_Barras_Duplicidad__tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.Cod_Barras_Registrado_ = key_Cod_Barras_Registrado__tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.Respuesta_ = key_Respuesta__tDenormalize_1_DenormalizeOut;
	denormalize_row_tDenormalize_1_DenormalizeOut.Caracteristicas = denormalize_result_tDenormalize_1_DenormalizeOut.Caracteristicas.toString();
	
	denormalize_row_tDenormalize_1_DenormalizeOut.Caracteristicas_Ids = denormalize_result_tDenormalize_1_DenormalizeOut.Caracteristicas_Ids.toString();
	
	for(String temp_tDenormalize_1_DenormalizeOut : denormalize_result_tDenormalize_1_DenormalizeOut.State){
	
		if(sb_tDenormalize_1_DenormalizeOut == null){
		
			sb_tDenormalize_1_DenormalizeOut = new StringBuilder();		
			sb_tDenormalize_1_DenormalizeOut.append(temp_tDenormalize_1_DenormalizeOut);
			
			
		}else{		
			sb_tDenormalize_1_DenormalizeOut.append("").append(temp_tDenormalize_1_DenormalizeOut);
			
		}
		
	}
	if (sb_tDenormalize_1_DenormalizeOut != null)
		denormalize_row_tDenormalize_1_DenormalizeOut.State = sb_tDenormalize_1_DenormalizeOut.toString();
	
	sb_tDenormalize_1_DenormalizeOut = null;
	
	for(String temp_tDenormalize_1_DenormalizeOut : denormalize_result_tDenormalize_1_DenormalizeOut.Ins_Caract){
	
		if(sb_tDenormalize_1_DenormalizeOut == null){
		
			sb_tDenormalize_1_DenormalizeOut = new StringBuilder();		
			sb_tDenormalize_1_DenormalizeOut.append(temp_tDenormalize_1_DenormalizeOut);
			
			
		}else{		
			sb_tDenormalize_1_DenormalizeOut.append("-").append(temp_tDenormalize_1_DenormalizeOut);
			
		}
		
	}
	if (sb_tDenormalize_1_DenormalizeOut != null)
		denormalize_row_tDenormalize_1_DenormalizeOut.Ins_Caract = sb_tDenormalize_1_DenormalizeOut.toString();
	
	sb_tDenormalize_1_DenormalizeOut = null;
	
	//in the deepest end
	
	result_list_tDenormalize_1_DenormalizeOut.add(denormalize_row_tDenormalize_1_DenormalizeOut);

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}

}
//generate result end
globalMap.put("tDenormalize_1", result_list_tDenormalize_1_DenormalizeOut);
globalMap.put("tDenormalize_1_DenormalizeOut_NB_LINE", result_list_tDenormalize_1_DenormalizeOut.size()); 

        


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row28");
			  	}
			  	
 

ok_Hash.put("tDenormalize_1_DenormalizeOut", true);
end_Hash.put("tDenormalize_1_DenormalizeOut", System.currentTimeMillis());




/**
 * [tDenormalize_1_DenormalizeOut end ] stop
 */








	
	/**
	 * [tSortRow_1_SortOut begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_1_SortOut", false);
		start_Hash.put("tSortRow_1_SortOut", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"next_10");
					}
				
		int tos_count_tSortRow_1_SortOut = 0;
		


class Comparablenext_10Struct extends next_10Struct implements Comparable<Comparablenext_10Struct> {
	
	public int compareTo(Comparablenext_10Struct other) {

		if(this.Comercial_ == null && other.Comercial_ != null){
			return -1;
						
		}else if(this.Comercial_ != null && other.Comercial_ == null){
			return 1;
						
		}else if(this.Comercial_ != null && other.Comercial_ != null){
			if(!this.Comercial_.equals(other.Comercial_)){
				return this.Comercial_.compareTo(other.Comercial_);
			}
		}
		return 0;
	}
}

java.util.List<Comparablenext_10Struct> list_tSortRow_1_SortOut = new java.util.ArrayList<Comparablenext_10Struct>();


 



/**
 * [tSortRow_1_SortOut begin ] stop
 */



	
	/**
	 * [tMap_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_7", false);
		start_Hash.put("tMap_7", System.currentTimeMillis());
		
	
	currentComponent="tMap_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row48");
					}
				
		int tos_count_tMap_7 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_7__Struct  {
}
Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
next_10Struct next_10_tmp = new next_10Struct();
// ###############################

        
        



        









 



/**
 * [tMap_7 begin ] stop
 */




	
	/**
	 * [tOracleSP_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_5", false);
		start_Hash.put("tOracleSP_5", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tOracleSP_5 = 0;
		

	java.sql.Connection connection_tOracleSP_5 = null;
	connection_tOracleSP_5 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_5 = connection_tOracleSP_5.prepareCall("{call " + "MED.InsProductoCM" + "(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_5;
String tmpString_tOracleSP_5;

 



/**
 * [tOracleSP_5 begin ] stop
 */



	
	/**
	 * [tFilterRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_2", false);
		start_Hash.put("tFilterRow_2", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row40");
					}
				
		int tos_count_tFilterRow_2 = 0;
		
    int nb_line_tFilterRow_2 = 0;
    int nb_line_ok_tFilterRow_2 = 0;
    int nb_line_reject_tFilterRow_2 = 0;

    class Operator_tFilterRow_2 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_2(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_2 begin ] stop
 */



	
	/**
	 * [tJavaRow_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_9", false);
		start_Hash.put("tJavaRow_9", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tJavaRow_9 = 0;
		

int nb_line_tJavaRow_9 = 0;

 



/**
 * [tJavaRow_9 begin ] stop
 */



	
	/**
	 * [tJavaRow_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_10", false);
		start_Hash.put("tJavaRow_10", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"next_7");
					}
				
		int tos_count_tJavaRow_10 = 0;
		

int nb_line_tJavaRow_10 = 0;

 



/**
 * [tJavaRow_10 begin ] stop
 */



	
	/**
	 * [tMap_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_8", false);
		start_Hash.put("tMap_8", System.currentTimeMillis());
		
	
	currentComponent="tMap_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row30");
					}
				
		int tos_count_tMap_8 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_8__Struct  {
}
Var__tMap_8__Struct Var__tMap_8 = new Var__tMap_8__Struct();
// ###############################

// ###############################
// # Outputs initialization
next_7Struct next_7_tmp = new next_7Struct();
// ###############################

        
        



        









 



/**
 * [tMap_8 begin ] stop
 */



	
	/**
	 * [tJavaRow_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_12", false);
		start_Hash.put("tJavaRow_12", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row35");
					}
				
		int tos_count_tJavaRow_12 = 0;
		

int nb_line_tJavaRow_12 = 0;

 



/**
 * [tJavaRow_12 begin ] stop
 */



	
	/**
	 * [tDenormalize_1_ArrayIn begin ] start
	 */

	

	
		
		ok_Hash.put("tDenormalize_1_ArrayIn", false);
		start_Hash.put("tDenormalize_1_ArrayIn", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tDenormalize_1";
	
	currentComponent="tDenormalize_1_ArrayIn";
	
	
		int tos_count_tDenormalize_1_ArrayIn = 0;
		

        
        int nb_line_tDenormalize_1_ArrayIn = 0;
        java.util.List<OnRowsEndStructtDenormalize_1> list_tDenormalize_1_ArrayIn = (java.util.List<OnRowsEndStructtDenormalize_1>)globalMap.get("tDenormalize_1");
        if(list_tDenormalize_1_ArrayIn == null) {
            list_tDenormalize_1_ArrayIn = new java.util.ArrayList<OnRowsEndStructtDenormalize_1>();
        }        
        for(OnRowsEndStructtDenormalize_1 row_tDenormalize_1_ArrayIn : list_tDenormalize_1_ArrayIn){
        					
    						row35.oViaAdmin = row_tDenormalize_1_ArrayIn.oViaAdmin;
    											
    						row35.oFFarmaceutica = row_tDenormalize_1_ArrayIn.oFFarmaceutica;
    											
    						row35.oNGenerico = row_tDenormalize_1_ArrayIn.oNGenerico;
    											
    						row35.oConcentracion = row_tDenormalize_1_ArrayIn.oConcentracion;
    											
    						row35.oUnidosis = row_tDenormalize_1_ArrayIn.oUnidosis;
    											
    						row35.oUMedida = row_tDenormalize_1_ArrayIn.oUMedida;
    											
    						row35.oFabricante = row_tDenormalize_1_ArrayIn.oFabricante;
    											
    						row35.oImportador = row_tDenormalize_1_ArrayIn.oImportador;
    											
    						row35.State = row_tDenormalize_1_ArrayIn.State;
    											
    						row35.Ins = row_tDenormalize_1_ArrayIn.Ins;
    											
    						row35._ErrorMessage = row_tDenormalize_1_ArrayIn._ErrorMessage;
    											
    						row35.CodBarras = row_tDenormalize_1_ArrayIn.CodBarras;
    											
    						row35.NComercial = row_tDenormalize_1_ArrayIn.NComercial;
    											
    						row35.PComercial = row_tDenormalize_1_ArrayIn.PComercial;
    											
    						row35.ViaAdmin = row_tDenormalize_1_ArrayIn.ViaAdmin;
    											
    						row35.FFarmaceutica = row_tDenormalize_1_ArrayIn.FFarmaceutica;
    											
    						row35.NGenerico = row_tDenormalize_1_ArrayIn.NGenerico;
    											
    						row35.Concentracion = row_tDenormalize_1_ArrayIn.Concentracion;
    											
    						row35.Unidosis = row_tDenormalize_1_ArrayIn.Unidosis;
    											
    						row35.UMedida = row_tDenormalize_1_ArrayIn.UMedida;
    											
    						row35.CantUMedida = row_tDenormalize_1_ArrayIn.CantUMedida;
    											
    						row35.CantMinima = row_tDenormalize_1_ArrayIn.CantMinima;
    											
    						row35.RegInvima = row_tDenormalize_1_ArrayIn.RegInvima;
    											
    						row35.FExp_RegInvima = row_tDenormalize_1_ArrayIn.FExp_RegInvima;
    											
    						row35.FVen_RegInvima = row_tDenormalize_1_ArrayIn.FVen_RegInvima;
    											
    						row35.FActivoCum = row_tDenormalize_1_ArrayIn.FActivoCum;
    											
    						row35.FInactivoCum = row_tDenormalize_1_ArrayIn.FInactivoCum;
    											
    						row35.Expediente = row_tDenormalize_1_ArrayIn.Expediente;
    											
    						row35.Consecutivo = row_tDenormalize_1_ArrayIn.Consecutivo;
    											
    						row35.Cum = row_tDenormalize_1_ArrayIn.Cum;
    											
    						row35.Origen = row_tDenormalize_1_ArrayIn.Origen;
    											
    						row35.Caracteristicas = row_tDenormalize_1_ArrayIn.Caracteristicas;
    											
    						row35.Caracteristicas_Ids = row_tDenormalize_1_ArrayIn.Caracteristicas_Ids;
    											
    						row35.Contraindicaciones = row_tDenormalize_1_ArrayIn.Contraindicaciones;
    											
    						row35.Efectos_Posteriores = row_tDenormalize_1_ArrayIn.Efectos_Posteriores;
    											
    						row35.Riesgos_Asociados = row_tDenormalize_1_ArrayIn.Riesgos_Asociados;
    											
    						row35.Dosis_Aplicacion = row_tDenormalize_1_ArrayIn.Dosis_Aplicacion;
    											
    						row35.NIT_Fabricante = row_tDenormalize_1_ArrayIn.NIT_Fabricante;
    											
    						row35.Fabricante = row_tDenormalize_1_ArrayIn.Fabricante;
    											
    						row35.NIT_Importador = row_tDenormalize_1_ArrayIn.NIT_Importador;
    											
    						row35.Importador = row_tDenormalize_1_ArrayIn.Importador;
    											
    						row35.usuariosId = row_tDenormalize_1_ArrayIn.usuariosId;
    											
    						row35.uorgId = row_tDenormalize_1_ArrayIn.uorgId;
    											
    						row35.ViaAdmin_Id = row_tDenormalize_1_ArrayIn.ViaAdmin_Id;
    											
    						row35.TFFarmaceutica_Id = row_tDenormalize_1_ArrayIn.TFFarmaceutica_Id;
    											
    						row35.MedGenerico_Id = row_tDenormalize_1_ArrayIn.MedGenerico_Id;
    											
    						row35.FFarmaceutica_Id = row_tDenormalize_1_ArrayIn.FFarmaceutica_Id;
    											
    						row35.UMedida_Id = row_tDenormalize_1_ArrayIn.UMedida_Id;
    											
    						row35.CantUMedida_Int = row_tDenormalize_1_ArrayIn.CantUMedida_Int;
    											
    						row35.CantMinima_Int = row_tDenormalize_1_ArrayIn.CantMinima_Int;
    											
    						row35._FExp_RegInvima = row_tDenormalize_1_ArrayIn._FExp_RegInvima;
    											
    						row35._FVen_RegInvima = row_tDenormalize_1_ArrayIn._FVen_RegInvima;
    											
    						row35._FActivoCum = row_tDenormalize_1_ArrayIn._FActivoCum;
    											
    						row35._FInactivoCum = row_tDenormalize_1_ArrayIn._FInactivoCum;
    											
    						row35.Fabricante_NitN = row_tDenormalize_1_ArrayIn.Fabricante_NitN;
    											
    						row35.Importador_NitN = row_tDenormalize_1_ArrayIn.Importador_NitN;
    											
    						row35.Fabricante_Id = row_tDenormalize_1_ArrayIn.Fabricante_Id;
    											
    						row35.Importador_Id = row_tDenormalize_1_ArrayIn.Importador_Id;
    											
    						row35.Ins_Caract = row_tDenormalize_1_ArrayIn.Ins_Caract;
    											
    						row35.Cod_Barras_Duplicidad_ = row_tDenormalize_1_ArrayIn.Cod_Barras_Duplicidad_;
    											
    						row35.Cod_Barras_Registrado_ = row_tDenormalize_1_ArrayIn.Cod_Barras_Registrado_;
    											
    						row35.Respuesta_ = row_tDenormalize_1_ArrayIn.Respuesta_;
    						

 



/**
 * [tDenormalize_1_ArrayIn begin ] stop
 */
	
	/**
	 * [tDenormalize_1_ArrayIn main ] start
	 */

	

	
	
		currentVirtualComponent = "tDenormalize_1";
	
	currentComponent="tDenormalize_1_ArrayIn";
	
	

 


	tos_count_tDenormalize_1_ArrayIn++;

/**
 * [tDenormalize_1_ArrayIn main ] stop
 */
	
	/**
	 * [tDenormalize_1_ArrayIn process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tDenormalize_1";
	
	currentComponent="tDenormalize_1_ArrayIn";
	
	

 



/**
 * [tDenormalize_1_ArrayIn process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_12 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row35"
						
						);
					}
					

    //Code generate according to input schema and output schema
row30.oViaAdmin = row35.oViaAdmin;
row30.oFFarmaceutica = row35.oFFarmaceutica;
row30.oNGenerico = row35.oNGenerico;
row30.oConcentracion = row35.oConcentracion;
row30.oUnidosis = row35.oUnidosis;
row30.oUMedida = row35.oUMedida;
row30.oFabricante = row35.oFabricante;
row30.oImportador = row35.oImportador;
row30.State = row35.State;
row30.Ins = row35.Ins;
row30._ErrorMessage = row35._ErrorMessage;
row30.CodBarras = row35.CodBarras;
row30.NComercial = row35.NComercial;
row30.PComercial = row35.PComercial;
row30.ViaAdmin = row35.ViaAdmin;
row30.FFarmaceutica = row35.FFarmaceutica;
row30.NGenerico = row35.NGenerico;
row30.Concentracion = row35.Concentracion;
row30.Unidosis = row35.Unidosis;
row30.UMedida = row35.UMedida;
row30.CantUMedida = row35.CantUMedida;
row30.CantMinima = row35.CantMinima;
row30.RegInvima = row35.RegInvima;
row30.FExp_RegInvima = row35.FExp_RegInvima;
row30.FVen_RegInvima = row35.FVen_RegInvima;
row30.FActivoCum = row35.FActivoCum;
row30.FInactivoCum = row35.FInactivoCum;
row30.Expediente = row35.Expediente;
row30.Consecutivo = row35.Consecutivo;
row30.Cum = row35.Cum;
row30.Origen = row35.Origen;
row30.Caracteristicas = row35.Caracteristicas;
row30.Caracteristicas_Ids = row35.Caracteristicas_Ids;
row30.Contraindicaciones = row35.Contraindicaciones;
row30.Efectos_Posteriores = row35.Efectos_Posteriores;
row30.Riesgos_Asociados = row35.Riesgos_Asociados;
row30.Dosis_Aplicacion = row35.Dosis_Aplicacion;
row30.NIT_Fabricante = row35.NIT_Fabricante;
row30.Fabricante = row35.Fabricante;
row30.NIT_Importador = row35.NIT_Importador;
row30.usuariosId = row35.usuariosId;
row30.uorgId = row35.uorgId;
row30.Importador = row35.Importador;
row30.ViaAdmin_Id = row35.ViaAdmin_Id;
row30.TFFarmaceutica_Id = row35.TFFarmaceutica_Id;
row30.MedGenerico_Id = row35.MedGenerico_Id;
row30.FFarmaceutica_Id = row35.FFarmaceutica_Id;
row30.UMedida_Id = row35.UMedida_Id;
row30.CantUMedida_Int = row35.CantUMedida_Int;
row30.CantMinima_Int = row35.CantMinima_Int;
row30._FExp_RegInvima = row35._FExp_RegInvima;
row30._FVen_RegInvima = row35._FVen_RegInvima;
row30._FActivoCum = row35._FActivoCum;
row30._FInactivoCum = row35._FInactivoCum;
row30.Fabricante_NitN = row35.Fabricante_NitN;
row30.Importador_NitN = row35.Importador_NitN;
row30.Fabricante_Id = row35.Fabricante_Id;
row30.Importador_Id = row35.Importador_Id;
row30.Ins_Caract = row35.Ins_Caract;


if(row35.Ins_Caract.equals("No") == true){
	row30.State = "Erróneo";
	//row30.Ins_Caract = "No";
}

if(row35.Cod_Barras_Duplicidad_ != null && row35.Cod_Barras_Duplicidad_ > 1 && row30._ErrorMessage == null){ 
	//row30.Fabricante = " | No registrado"; 
	row30.State = "Erróneo";
	row30.Ins = "No";
    row30._ErrorMessage = row30.CodBarras + "," +"El codigo de barras se encuentra diligenciado mas de una vez en el formato; \n";
  }
  else
  {
    if (row35.Cod_Barras_Duplicidad_ != null && row35.Cod_Barras_Duplicidad_ > 1)
    {
     //row30.Fabricante = " | No registrado"; 
	row30.State = "Erróneo";
	row30.Ins = "No";
    row30._ErrorMessage += row30.CodBarras + "," +"El codigo de barras se encuentra diligenciado mas de una vez en el formato; \n";
    }
  }
  
  if(row35.Cod_Barras_Registrado_ != null && row35.Cod_Barras_Registrado_ == 1 && row30._ErrorMessage == null){ 
	//row30.Fabricante = " | No registrado"; 
	row30.State = "Erróneo";
	row30.Ins = "No";
    row30._ErrorMessage = row30.CodBarras + "," +"El codigo de barras ya se encuentra registrado en el sistema; \n";
  }
  else
  {
    if (row35.Cod_Barras_Registrado_ != null && row35.Cod_Barras_Registrado_ == 1)
    {
     //row30.Fabricante = " | No registrado"; 
	row30.State = "Erróneo";
	row30.Ins = "No";
    row30._ErrorMessage += row30.CodBarras + "," +"El codigo de barras ya se encuentra registrado en el sistema; \n";
    }
  }

/*System.out.println("carac --> " + row30.Ins_Caract);
System.out.println("state " + row30.State);*/
    nb_line_tJavaRow_12++;   

 


	tos_count_tJavaRow_12++;

/**
 * [tJavaRow_12 main ] stop
 */
	
	/**
	 * [tJavaRow_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	

 



/**
 * [tJavaRow_12 process_data_begin ] stop
 */

	
	/**
	 * [tMap_8 main ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row30"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_8 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_8 = false;
		boolean mainRowRejected_tMap_8 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_8__Struct Var = Var__tMap_8;// ###############################
        // ###############################
        // # Output tables

next_7 = null;


// # Output table : 'next_7'
next_7_tmp.oViaAdmin = row30.oViaAdmin;
next_7_tmp.oFFarmaceutica = row30.oFFarmaceutica;
next_7_tmp.oNGenerico = row30.oNGenerico;
next_7_tmp.oConcentracion = row30.oConcentracion;
next_7_tmp.oUnidosis = row30.oUnidosis;
next_7_tmp.oUMedida = row30.oUMedida;
next_7_tmp.oFabricante = row30.oFabricante;
next_7_tmp.oImportador = row30.oImportador;
next_7_tmp.Estado_ = row30.State;
next_7_tmp.Ins = row30.Ins;
next_7_tmp._ErrorMessage = row30._ErrorMessage;
next_7_tmp.Cod_Barras_ = row30.CodBarras;
next_7_tmp.Comercial_ = row30.NComercial;
next_7_tmp.Presentacion_ = row30.PComercial;
next_7_tmp.ViaAdmin = row30.ViaAdmin;
next_7_tmp.FFarmaceutica = row30.FFarmaceutica;
next_7_tmp.NGenerico = row30.NGenerico;
next_7_tmp.Concentracion = row30.Concentracion;
next_7_tmp.Unidosis_ = row30.Unidosis;
next_7_tmp.UMedida = row30.UMedida;
next_7_tmp.CantUMedida = row30.CantUMedida;
next_7_tmp.CantMinima = row30.CantMinima;
next_7_tmp.Reg_Invima_ = row30.RegInvima;
next_7_tmp.F_Expedicion_ = row30.FExp_RegInvima;
next_7_tmp.F_Vencimiento_ = row30.FVen_RegInvima;
next_7_tmp.F_Activo_Cum_ = row30.FActivoCum;
next_7_tmp.F_Inactivo_Cum_ = row30.FInactivoCum;
next_7_tmp.Expediente_ = row30.Expediente;
next_7_tmp.Consecutivo_ = row30.Consecutivo;
next_7_tmp.Cum = row30.Cum ;
next_7_tmp.Origen_ = row30.Origen;
next_7_tmp.Caracteristicas = row30.Caracteristicas;
next_7_tmp.Caracteriticas_ = row30.Caracteristicas_Ids;
next_7_tmp.Contraindicaciones_ = row30.Contraindicaciones;
next_7_tmp.Efectos_ = row30.Efectos_Posteriores;
next_7_tmp.Riesgos_ = row30.Riesgos_Asociados;
next_7_tmp.Dosis_ = row30.Dosis_Aplicacion;
next_7_tmp.NIT_Fabricante = row30.NIT_Fabricante;
next_7_tmp.Fabricante = row30.Fabricante;
next_7_tmp.NIT_Importador = row30.NIT_Importador;
next_7_tmp.Importador = row30.Importador;
next_7_tmp.usuariosId = row30.usuariosId;
next_7_tmp.uorgId = row30.uorgId;
next_7_tmp.ViaAdmin_Id = row30.ViaAdmin_Id;
next_7_tmp.ViaAdmin_Id_ = " ";
next_7_tmp.Forma_Id = row30.TFFarmaceutica_Id;
next_7_tmp.Forma_Id_ = " ";
next_7_tmp.MedGenerico_Id = row30.MedGenerico_Id;
next_7_tmp.Formas_Farma_Id = row30.FFarmaceutica_Id;
next_7_tmp.Formas_Farma_Id_ = " ";
next_7_tmp.UMedida_Id = row30.UMedida_Id;
next_7_tmp.UMedida_Id_ = " ";
next_7_tmp.Cant_UMedida = row30.CantUMedida_Int;
next_7_tmp.Cant_UMedida_ = " ";
next_7_tmp.Cant_Minima = row30.CantMinima_Int;
next_7_tmp.Cant_Minima_ = " ";
next_7_tmp._FExp_RegInvima = row30._FExp_RegInvima;
next_7_tmp._FVen_RegInvima = row30._FVen_RegInvima;
next_7_tmp._FActivoCum = row30._FActivoCum;
next_7_tmp._FInactivoCum = row30._FInactivoCum;
next_7_tmp.Fabricante_NitN = row30.Fabricante_NitN;
next_7_tmp.Importador_NitN = row30.Importador_NitN;
next_7_tmp.Fabricante_Id = row30.Fabricante_Id;
next_7_tmp.Fabricante_Id_ = " " ;
next_7_tmp.Importador_Id = row30.Importador_Id;
next_7_tmp.Importador_Id_ = " ";
next_7_tmp.usuarios_Id_ = row30.usuariosId;
next_7_tmp.uorg_Id_ = row30.uorgId;
next_7_tmp.Ins_Caract = row30.Ins_Caract;
next_7_tmp.Respuesta_ = row30.Respuesta_;
next_7_tmp.Cod_Barras_Duplicidad_ = row30.Cod_Barras_Duplicidad_;
next_7_tmp.Id_ = null;
next_7 = next_7_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_8 = false;










 


	tos_count_tMap_8++;

/**
 * [tMap_8 main ] stop
 */
	
	/**
	 * [tMap_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_begin ] stop
 */
// Start of branch "next_7"
if(next_7 != null) { 



	
	/**
	 * [tJavaRow_10 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"next_7"
						
						);
					}
					

    //Code generate according to input schema and output schema
row2.oViaAdmin = next_7.oViaAdmin;
row2.oFFarmaceutica = next_7.oFFarmaceutica;
row2.oNGenerico = next_7.oNGenerico;
row2.oConcentracion = next_7.oConcentracion;
row2.oUnidosis = next_7.oUnidosis;
row2.oUMedida = next_7.oUMedida;
row2.oFabricante = next_7.oFabricante;
row2.oImportador = next_7.oImportador;
row2.Estado_ = next_7.Estado_;
row2.Ins = next_7.Ins;
row2._ErrorMessage = next_7._ErrorMessage;
row2.Cod_Barras_ = next_7.Cod_Barras_;
row2.Comercial_ = next_7.Comercial_;
row2.Presentacion_ = next_7.Presentacion_;
row2.ViaAdmin = next_7.ViaAdmin;
row2.FFarmaceutica = next_7.FFarmaceutica;
row2.NGenerico = next_7.NGenerico;
row2.Concentracion = next_7.Concentracion;
row2.Unidosis_ = next_7.Unidosis_;
row2.UMedida = next_7.UMedida;
row2.CantUMedida = next_7.CantUMedida;
row2.CantMinima = next_7.CantMinima;
row2.Reg_Invima_ = next_7.Reg_Invima_;
row2.F_Expedicion_ = next_7.F_Expedicion_;
row2.F_Vencimiento_ = next_7.F_Vencimiento_;
row2.F_Activo_Cum_ = next_7.F_Activo_Cum_;
row2.F_Inactivo_Cum_ = next_7.F_Inactivo_Cum_;
row2.Expediente_ = next_7.Expediente_;
row2.Consecutivo_ = next_7.Consecutivo_;
row2.Cum = next_7.Cum;
row2.Origen_ = next_7.Origen_;
row2.Caracteristicas = next_7.Caracteristicas;
row2.Caracteriticas_ = next_7.Caracteriticas_;
row2.Contraindicaciones_ = next_7.Contraindicaciones_;
row2.Efectos_ = next_7.Efectos_;
row2.Riesgos_ = next_7.Riesgos_;
row2.Dosis_ = next_7.Dosis_;
row2.NIT_Fabricante = next_7.NIT_Fabricante;
row2.Fabricante = next_7.Fabricante;
row2.NIT_Importador = next_7.NIT_Importador;
row2.Importador = next_7.Importador;
row2.usuariosId = next_7.usuariosId;
row2.uorgId = next_7.uorgId;
row2.ViaAdmin_Id = next_7.ViaAdmin_Id;
row2.ViaAdmin_Id_ = next_7.ViaAdmin_Id_;
row2.Forma_Id = next_7.Forma_Id;
row2.Forma_Id_ = next_7.Forma_Id_;
row2.MedGenerico_Id = next_7.MedGenerico_Id;
row2.Formas_Farma_Id = next_7.Formas_Farma_Id;
row2.Formas_Farma_Id_ = next_7.Formas_Farma_Id_;
row2.UMedida_Id = next_7.UMedida_Id;
row2.UMedida_Id_ = next_7.UMedida_Id_;
row2.Cant_UMedida = next_7.Cant_UMedida;
row2.Cant_UMedida_ = next_7.Cant_UMedida_;
row2.Cant_Minima = next_7.Cant_Minima;
row2.Cant_Minima_ = next_7.Cant_Minima_;
row2._FExp_RegInvima = next_7._FExp_RegInvima;
row2._FVen_RegInvima = next_7._FVen_RegInvima;
row2._FActivoCum = next_7._FActivoCum;
row2._FInactivoCum = next_7._FInactivoCum;
row2.Fabricante_NitN = next_7.Fabricante_NitN;
row2.Importador_NitN = next_7.Importador_NitN;
row2.Fabricante_Id = next_7.Fabricante_Id;
row2.Fabricante_Id_ = next_7.Fabricante_Id_;
row2.Importador_Id = next_7.Importador_Id;
row2.Importador_Id_ = next_7.Importador_Id_;
row2.usuarios_Id_ = next_7.usuarios_Id_;
row2.uorg_Id_ = next_7.uorg_Id_;
row2.Ins_Caract = next_7.Ins_Caract;
row2.Respuesta_ = next_7.Respuesta_;
row2.Id_ = next_7.Id_;


if(next_7.ViaAdmin_Id != null){
	row2.ViaAdmin_Id_	= next_7.ViaAdmin_Id.toString();
}

if(next_7.Forma_Id != null){
	row2.Forma_Id_ = next_7.Forma_Id.toString();
}

if(next_7.Formas_Farma_Id != null){
	row2.Formas_Farma_Id_ = next_7.Formas_Farma_Id.toString();
}

if(next_7.UMedida_Id != null){
	row2.UMedida_Id_ = next_7.UMedida_Id.toString();
}


if(next_7.Cant_UMedida != null){
	row2.Cant_UMedida_ = next_7.Cant_UMedida.toString().replace('.', ',');
}
else { row2.Cant_UMedida_ = null; } 


if(next_7.Cant_Minima != null){
	row2.Cant_Minima_ = next_7.Cant_Minima.toString();
}

if(next_7.Fabricante_Id != null){
	row2.Fabricante_Id_ = next_7.Fabricante_Id.toString();
}

if(next_7.Importador_Id != null)
{
	row2.Importador_Id_ = next_7.Importador_Id.toString();
}


/*System.out.println("CdoBarr: " + row2.Cod_Barras_);
System.out.println("EST " + row2.Estado_);
System.out.println(row2.Respuesta_);
System.out.println("->" + next_7.Caracteriticas_);
System.out.println(row2.Caracteristicas);*/

    nb_line_tJavaRow_10++;   

 


	tos_count_tJavaRow_10++;

/**
 * [tJavaRow_10 main ] stop
 */
	
	/**
	 * [tJavaRow_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

 



/**
 * [tJavaRow_10 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_9 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					

    //Code generate according to input schema and output schema
row40.oViaAdmin = row2.oViaAdmin;
row40.oFFarmaceutica = row2.oFFarmaceutica;
row40.oNGenerico = row2.oNGenerico;
row40.oConcentracion = row2.oConcentracion;
row40.oUnidosis = row2.oUnidosis;
row40.oUMedida = row2.oUMedida;
row40.oFabricante = row2.oFabricante;
row40.oImportador = row2.oImportador;
row40.Estado_ = row2.Estado_;
row40.Ins = row2.Ins;
row40._ErrorMessage = row2._ErrorMessage;
row40.Cod_Barras_ = row2.Cod_Barras_;
row40.Comercial_ = row2.Comercial_;
row40.Presentacion_ = row2.Presentacion_;
row40.ViaAdmin = row2.ViaAdmin;
row40.FFarmaceutica = row2.FFarmaceutica;
row40.NGenerico = row2.NGenerico;
row40.Concentracion = row2.Concentracion;
row40.Unidosis_ = row2.Unidosis_;
row40.UMedida = row2.UMedida;
row40.CantUMedida = row2.CantUMedida;
row40.CantMinima = row2.CantMinima;
row40.Reg_Invima_ = row2.Reg_Invima_;
row40.F_Expedicion_ = row2.F_Expedicion_;
row40.F_Vencimiento_ = row2.F_Vencimiento_;
row40.F_Activo_Cum_ = row2.F_Activo_Cum_;
row40.F_Inactivo_Cum_ = row2.F_Inactivo_Cum_;
row40.Expediente_ = row2.Expediente_;
row40.Consecutivo_ = row2.Consecutivo_;
row40.Cum = row2.Cum;
row40.Origen_ = row2.Origen_;
row40.Caracteristicas = row2.Caracteristicas;
row40.Caracteriticas_ = row2.Caracteriticas_;
row40.Contraindicaciones_ = row2.Contraindicaciones_;
row40.Efectos_ = row2.Efectos_;
row40.Riesgos_ = row2.Riesgos_;
row40.Dosis_ = row2.Dosis_;
row40.NIT_Fabricante = row2.NIT_Fabricante;
row40.Fabricante = row2.Fabricante;
row40.NIT_Importador = row2.NIT_Importador;
row40.Importador = row2.Importador;
row40.usuariosId = row2.usuariosId;
row40.uorgId = row2.uorgId;
row40.ViaAdmin_Id = row2.ViaAdmin_Id;
row40.ViaAdmin_Id_ = row2.ViaAdmin_Id_;
row40.Forma_Id = row2.Forma_Id;
row40.Forma_Id_ = row2.Forma_Id_;
row40.MedGenerico_Id = row2.MedGenerico_Id;
row40.Formas_Farma_Id = row2.Formas_Farma_Id;
row40.Formas_Farma_Id_ = row2.Formas_Farma_Id_;
row40.UMedida_Id = row2.UMedida_Id;
row40.UMedida_Id_ = row2.UMedida_Id_;
row40.Cant_UMedida = row2.Cant_UMedida;
row40.Cant_UMedida_ = row2.Cant_UMedida_;
row40.Cant_Minima = row2.Cant_Minima;
row40.Cant_Minima_ = row2.Cant_Minima_;
row40._FExp_RegInvima = row2._FExp_RegInvima;
row40._FVen_RegInvima = row2._FVen_RegInvima;
row40._FActivoCum = row2._FActivoCum;
row40._FInactivoCum = row2._FInactivoCum;
row40.Fabricante_NitN = row2.Fabricante_NitN;
row40.Importador_NitN = row2.Importador_NitN;
row40.Fabricante_Id = row2.Fabricante_Id;
row40.Fabricante_Id_ = row2.Fabricante_Id_;
row40.Importador_Id = row2.Importador_Id;
row40.Importador_Id_ = row2.Importador_Id_;
row40.usuarios_Id_ = row2.usuarios_Id_;
row40.uorg_Id_ = row2.uorg_Id_;
row40.Ins_Caract = row2.Ins_Caract;
row40.Respuesta_ = row2.Respuesta_;
row40.Id_ = row2.Id_;

/*if( row2.Id_ == null){
	//row40.nLine = ((Integer)globalMap.get("tJavaRow_15_NB_LINE")).
	row40.Estado_ = "Erróneo";
	row40.Ins  = "No";
	if( row2.Respuesta_ != null){
		row40._ErrorMessage += "\n\r" + row2.Respuesta_;
	}
	
	
}*/

    nb_line_tJavaRow_9++;   

 


	tos_count_tJavaRow_9++;

/**
 * [tJavaRow_9 main ] stop
 */
	
	/**
	 * [tJavaRow_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_2 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row40"
						
						);
					}
					

          row7 = null;
          row48 = null;
    Operator_tFilterRow_2 ope_tFilterRow_2 = new Operator_tFilterRow_2("||");
            ope_tFilterRow_2.matches((row40.Ins == null? false : row40.Ins.compareTo("No") == 0)
                           , "Ins.compareTo(\"No\") == 0 failed");
            ope_tFilterRow_2.matches((row40.Estado_ == null? false : row40.Estado_.compareTo("Erróneo") == 0)
                           , "Estado_.compareTo(\"Erróneo\") == 0 failed");
    
    if (ope_tFilterRow_2.getMatchFlag()) {
              if(row48 == null){ 
                row48 = new row48Struct();
              }
               row48.oViaAdmin = row40.oViaAdmin;
               row48.oFFarmaceutica = row40.oFFarmaceutica;
               row48.oNGenerico = row40.oNGenerico;
               row48.oConcentracion = row40.oConcentracion;
               row48.oUnidosis = row40.oUnidosis;
               row48.oUMedida = row40.oUMedida;
               row48.oFabricante = row40.oFabricante;
               row48.oImportador = row40.oImportador;
               row48.Estado_ = row40.Estado_;
               row48.Ins = row40.Ins;
               row48._ErrorMessage = row40._ErrorMessage;
               row48.Cod_Barras_ = row40.Cod_Barras_;
               row48.Comercial_ = row40.Comercial_;
               row48.Presentacion_ = row40.Presentacion_;
               row48.ViaAdmin = row40.ViaAdmin;
               row48.FFarmaceutica = row40.FFarmaceutica;
               row48.NGenerico = row40.NGenerico;
               row48.Concentracion = row40.Concentracion;
               row48.Unidosis_ = row40.Unidosis_;
               row48.UMedida = row40.UMedida;
               row48.CantUMedida = row40.CantUMedida;
               row48.CantMinima = row40.CantMinima;
               row48.Reg_Invima_ = row40.Reg_Invima_;
               row48.F_Expedicion_ = row40.F_Expedicion_;
               row48.F_Vencimiento_ = row40.F_Vencimiento_;
               row48.F_Activo_Cum_ = row40.F_Activo_Cum_;
               row48.F_Inactivo_Cum_ = row40.F_Inactivo_Cum_;
               row48.Expediente_ = row40.Expediente_;
               row48.Consecutivo_ = row40.Consecutivo_;
               row48.Cum = row40.Cum;
               row48.Origen_ = row40.Origen_;
               row48.Caracteristicas = row40.Caracteristicas;
               row48.Caracteriticas_ = row40.Caracteriticas_;
               row48.Contraindicaciones_ = row40.Contraindicaciones_;
               row48.Efectos_ = row40.Efectos_;
               row48.Riesgos_ = row40.Riesgos_;
               row48.Dosis_ = row40.Dosis_;
               row48.NIT_Fabricante = row40.NIT_Fabricante;
               row48.Fabricante = row40.Fabricante;
               row48.NIT_Importador = row40.NIT_Importador;
               row48.Importador = row40.Importador;
               row48.usuariosId = row40.usuariosId;
               row48.uorgId = row40.uorgId;
               row48.ViaAdmin_Id = row40.ViaAdmin_Id;
               row48.ViaAdmin_Id_ = row40.ViaAdmin_Id_;
               row48.Forma_Id = row40.Forma_Id;
               row48.Forma_Id_ = row40.Forma_Id_;
               row48.MedGenerico_Id = row40.MedGenerico_Id;
               row48.Formas_Farma_Id = row40.Formas_Farma_Id;
               row48.Formas_Farma_Id_ = row40.Formas_Farma_Id_;
               row48.UMedida_Id = row40.UMedida_Id;
               row48.UMedida_Id_ = row40.UMedida_Id_;
               row48.Cant_UMedida = row40.Cant_UMedida;
               row48.Cant_UMedida_ = row40.Cant_UMedida_;
               row48.Cant_Minima = row40.Cant_Minima;
               row48.Cant_Minima_ = row40.Cant_Minima_;
               row48._FExp_RegInvima = row40._FExp_RegInvima;
               row48._FVen_RegInvima = row40._FVen_RegInvima;
               row48._FActivoCum = row40._FActivoCum;
               row48._FInactivoCum = row40._FInactivoCum;
               row48.Fabricante_NitN = row40.Fabricante_NitN;
               row48.Importador_NitN = row40.Importador_NitN;
               row48.Fabricante_Id = row40.Fabricante_Id;
               row48.Fabricante_Id_ = row40.Fabricante_Id_;
               row48.Importador_Id = row40.Importador_Id;
               row48.Importador_Id_ = row40.Importador_Id_;
               row48.usuarios_Id_ = row40.usuarios_Id_;
               row48.uorg_Id_ = row40.uorg_Id_;
               row48.Ins_Caract = row40.Ins_Caract;
               row48.Respuesta_ = row40.Respuesta_;
               row48.Id_ = row40.Id_;    
      nb_line_ok_tFilterRow_2++;
    } else {
            if (row7 == null){
              row7 = new row7Struct();
            }
                row7.oViaAdmin = row40.oViaAdmin;
                row7.oFFarmaceutica = row40.oFFarmaceutica;
                row7.oNGenerico = row40.oNGenerico;
                row7.oConcentracion = row40.oConcentracion;
                row7.oUnidosis = row40.oUnidosis;
                row7.oUMedida = row40.oUMedida;
                row7.oFabricante = row40.oFabricante;
                row7.oImportador = row40.oImportador;
                row7.Estado_ = row40.Estado_;
                row7.Ins = row40.Ins;
                row7._ErrorMessage = row40._ErrorMessage;
                row7.Cod_Barras_ = row40.Cod_Barras_;
                row7.Comercial_ = row40.Comercial_;
                row7.Presentacion_ = row40.Presentacion_;
                row7.ViaAdmin = row40.ViaAdmin;
                row7.FFarmaceutica = row40.FFarmaceutica;
                row7.NGenerico = row40.NGenerico;
                row7.Concentracion = row40.Concentracion;
                row7.Unidosis_ = row40.Unidosis_;
                row7.UMedida = row40.UMedida;
                row7.CantUMedida = row40.CantUMedida;
                row7.CantMinima = row40.CantMinima;
                row7.Reg_Invima_ = row40.Reg_Invima_;
                row7.F_Expedicion_ = row40.F_Expedicion_;
                row7.F_Vencimiento_ = row40.F_Vencimiento_;
                row7.F_Activo_Cum_ = row40.F_Activo_Cum_;
                row7.F_Inactivo_Cum_ = row40.F_Inactivo_Cum_;
                row7.Expediente_ = row40.Expediente_;
                row7.Consecutivo_ = row40.Consecutivo_;
                row7.Cum = row40.Cum;
                row7.Origen_ = row40.Origen_;
                row7.Caracteristicas = row40.Caracteristicas;
                row7.Caracteriticas_ = row40.Caracteriticas_;
                row7.Contraindicaciones_ = row40.Contraindicaciones_;
                row7.Efectos_ = row40.Efectos_;
                row7.Riesgos_ = row40.Riesgos_;
                row7.Dosis_ = row40.Dosis_;
                row7.NIT_Fabricante = row40.NIT_Fabricante;
                row7.Fabricante = row40.Fabricante;
                row7.NIT_Importador = row40.NIT_Importador;
                row7.Importador = row40.Importador;
                row7.usuariosId = row40.usuariosId;
                row7.uorgId = row40.uorgId;
                row7.ViaAdmin_Id = row40.ViaAdmin_Id;
                row7.ViaAdmin_Id_ = row40.ViaAdmin_Id_;
                row7.Forma_Id = row40.Forma_Id;
                row7.Forma_Id_ = row40.Forma_Id_;
                row7.MedGenerico_Id = row40.MedGenerico_Id;
                row7.Formas_Farma_Id = row40.Formas_Farma_Id;
                row7.Formas_Farma_Id_ = row40.Formas_Farma_Id_;
                row7.UMedida_Id = row40.UMedida_Id;
                row7.UMedida_Id_ = row40.UMedida_Id_;
                row7.Cant_UMedida = row40.Cant_UMedida;
                row7.Cant_UMedida_ = row40.Cant_UMedida_;
                row7.Cant_Minima = row40.Cant_Minima;
                row7.Cant_Minima_ = row40.Cant_Minima_;
                row7._FExp_RegInvima = row40._FExp_RegInvima;
                row7._FVen_RegInvima = row40._FVen_RegInvima;
                row7._FActivoCum = row40._FActivoCum;
                row7._FInactivoCum = row40._FInactivoCum;
                row7.Fabricante_NitN = row40.Fabricante_NitN;
                row7.Importador_NitN = row40.Importador_NitN;
                row7.Fabricante_Id = row40.Fabricante_Id;
                row7.Fabricante_Id_ = row40.Fabricante_Id_;
                row7.Importador_Id = row40.Importador_Id;
                row7.Importador_Id_ = row40.Importador_Id_;
                row7.usuarios_Id_ = row40.usuarios_Id_;
                row7.uorg_Id_ = row40.uorg_Id_;
                row7.Ins_Caract = row40.Ins_Caract;
                row7.Respuesta_ = row40.Respuesta_;
                row7.Id_ = row40.Id_;
	            row7.errorMessage = ope_tFilterRow_2.getErrorMsg();
      nb_line_reject_tFilterRow_2++;
    }

nb_line_tFilterRow_2++;

 


	tos_count_tFilterRow_2++;

/**
 * [tFilterRow_2 main ] stop
 */
	
	/**
	 * [tFilterRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_2";
	
	

 



/**
 * [tFilterRow_2 process_data_begin ] stop
 */
// Start of branch "row48"
if(row48 != null) { 



	
	/**
	 * [tMap_7 main ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row48"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_7 = false;
		boolean mainRowRejected_tMap_7 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
        // ###############################
        // # Output tables

next_10 = null;


// # Output table : 'next_10'
next_10_tmp.Item = null;
next_10_tmp.oViaAdmin = row48.oViaAdmin ;
next_10_tmp.oFFarmaceutica = row48.oFFarmaceutica ;
next_10_tmp.oNGenerico = row48.oNGenerico ;
next_10_tmp.oConcentracion = row48.oConcentracion ;
next_10_tmp.oUnidosis = row48.oUnidosis ;
next_10_tmp.oUMedida = row48.oUMedida ;
next_10_tmp.oFabricante = row48.oFabricante ;
next_10_tmp.oImportador = row48.oImportador ;
next_10_tmp.Estado_ = row48.Estado_ ;
next_10_tmp.Ins = row48.Ins ;
next_10_tmp._ErrorMessage = row48._ErrorMessage ;
next_10_tmp.Cod_Barras_ = row48.Cod_Barras_ ;
next_10_tmp.Comercial_ = row48.Comercial_ ;
next_10_tmp.Presentacion_ = row48.Presentacion_ ;
next_10_tmp.ViaAdmin = row48.ViaAdmin ;
next_10_tmp.FFarmaceutica = row48.FFarmaceutica ;
next_10_tmp.NGenerico = row48.NGenerico ;
next_10_tmp.Concentracion = row48.Concentracion ;
next_10_tmp.Unidosis_ = row48.Unidosis_ ;
next_10_tmp.UMedida = row48.UMedida ;
next_10_tmp.CantUMedida = row48.CantUMedida ;
next_10_tmp.CantMinima = row48.CantMinima ;
next_10_tmp.Reg_Invima_ = row48.Reg_Invima_ ;
next_10_tmp.F_Expedicion_ = row48.F_Expedicion_ ;
next_10_tmp.F_Vencimiento_ = row48.F_Vencimiento_ ;
next_10_tmp.F_Activo_Cum_ = row48.F_Activo_Cum_ ;
next_10_tmp.F_Inactivo_Cum_ = row48.F_Inactivo_Cum_ ;
next_10_tmp.Expediente_ = row48.Expediente_ ;
next_10_tmp.Consecutivo_ = row48.Consecutivo_ ;
next_10_tmp.Cum = row48.Cum ;
next_10_tmp.Origen_ = row48.Origen_ ;
next_10_tmp.Caracteristicas = row48.Caracteristicas ;
next_10_tmp.Caracteriticas_ = row48.Caracteriticas_ ;
next_10_tmp.Contraindicaciones_ = row48.Contraindicaciones_ ;
next_10_tmp.Efectos_ = row48.Efectos_ ;
next_10_tmp.Riesgos_ = row48.Riesgos_ ;
next_10_tmp.Dosis_ = row48.Dosis_ ;
next_10_tmp.NIT_Fabricante = row48.NIT_Fabricante ;
next_10_tmp.Fabricante = row48.Fabricante ;
next_10_tmp.NIT_Importador = row48.NIT_Importador ;
next_10_tmp.Importador = row48.Importador ;
next_10_tmp.ViaAdmin_Id = row48.ViaAdmin_Id ;
next_10_tmp.ViaAdmin_Id_ = row48.ViaAdmin_Id_ ;
next_10_tmp.Forma_Id = row48.Forma_Id ;
next_10_tmp.Forma_Id_ = row48.Forma_Id_ ;
next_10_tmp.MedGenerico_Id = row48.MedGenerico_Id ;
next_10_tmp.Formas_Farma_Id = row48.Formas_Farma_Id ;
next_10_tmp.Formas_Farma_Id_ = row48.Formas_Farma_Id_ ;
next_10_tmp.UMedida_Id = row48.UMedida_Id ;
next_10_tmp.UMedida_Id_ = row48.UMedida_Id_ ;
next_10_tmp.Cant_UMedida = row48.Cant_UMedida ;
next_10_tmp.Cant_UMedida_ = row48.Cant_UMedida_ ;
next_10_tmp.Cant_Minima = row48.Cant_Minima ;
next_10_tmp.Cant_Minima_ = row48.Cant_Minima_ ;
next_10_tmp._FExp_RegInvima = row48._FExp_RegInvima ;
next_10_tmp._FVen_RegInvima = row48._FVen_RegInvima ;
next_10_tmp._FActivoCum = row48._FActivoCum ;
next_10_tmp._FInactivoCum = row48._FInactivoCum ;
next_10_tmp.Fabricante_NitN = row48.Fabricante_NitN ;
next_10_tmp.Importador_NitN = row48.Importador_NitN ;
next_10_tmp.Fabricante_Id = row48.Fabricante_Id ;
next_10_tmp.Fabricante_Id_ = row48.Fabricante_Id_ ;
next_10_tmp.Importador_Id = row48.Importador_Id ;
next_10_tmp.Importador_Id_ = row48.Importador_Id_ ;
next_10_tmp.Ins_Caract = row48.Ins_Caract ;
next_10_tmp.Respuesta_ = row48.Respuesta_ ;
next_10_tmp.Id_ = row48.Id_ ;
next_10 = next_10_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_7 = false;










 


	tos_count_tMap_7++;

/**
 * [tMap_7 main ] stop
 */
	
	/**
	 * [tMap_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_begin ] stop
 */
// Start of branch "next_10"
if(next_10 != null) { 



	
	/**
	 * [tSortRow_1_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"next_10"
						
						);
					}
					



	Comparablenext_10Struct arrayRowtSortRow_1_SortOut = new Comparablenext_10Struct();

	arrayRowtSortRow_1_SortOut.Item = next_10.Item;
	arrayRowtSortRow_1_SortOut.oViaAdmin = next_10.oViaAdmin;
	arrayRowtSortRow_1_SortOut.oFFarmaceutica = next_10.oFFarmaceutica;
	arrayRowtSortRow_1_SortOut.oNGenerico = next_10.oNGenerico;
	arrayRowtSortRow_1_SortOut.oConcentracion = next_10.oConcentracion;
	arrayRowtSortRow_1_SortOut.oUnidosis = next_10.oUnidosis;
	arrayRowtSortRow_1_SortOut.oUMedida = next_10.oUMedida;
	arrayRowtSortRow_1_SortOut.oFabricante = next_10.oFabricante;
	arrayRowtSortRow_1_SortOut.oImportador = next_10.oImportador;
	arrayRowtSortRow_1_SortOut.Estado_ = next_10.Estado_;
	arrayRowtSortRow_1_SortOut.Ins = next_10.Ins;
	arrayRowtSortRow_1_SortOut._ErrorMessage = next_10._ErrorMessage;
	arrayRowtSortRow_1_SortOut.Cod_Barras_ = next_10.Cod_Barras_;
	arrayRowtSortRow_1_SortOut.Comercial_ = next_10.Comercial_;
	arrayRowtSortRow_1_SortOut.Presentacion_ = next_10.Presentacion_;
	arrayRowtSortRow_1_SortOut.ViaAdmin = next_10.ViaAdmin;
	arrayRowtSortRow_1_SortOut.FFarmaceutica = next_10.FFarmaceutica;
	arrayRowtSortRow_1_SortOut.NGenerico = next_10.NGenerico;
	arrayRowtSortRow_1_SortOut.Concentracion = next_10.Concentracion;
	arrayRowtSortRow_1_SortOut.Unidosis_ = next_10.Unidosis_;
	arrayRowtSortRow_1_SortOut.UMedida = next_10.UMedida;
	arrayRowtSortRow_1_SortOut.CantUMedida = next_10.CantUMedida;
	arrayRowtSortRow_1_SortOut.CantMinima = next_10.CantMinima;
	arrayRowtSortRow_1_SortOut.Reg_Invima_ = next_10.Reg_Invima_;
	arrayRowtSortRow_1_SortOut.F_Expedicion_ = next_10.F_Expedicion_;
	arrayRowtSortRow_1_SortOut.F_Vencimiento_ = next_10.F_Vencimiento_;
	arrayRowtSortRow_1_SortOut.F_Activo_Cum_ = next_10.F_Activo_Cum_;
	arrayRowtSortRow_1_SortOut.F_Inactivo_Cum_ = next_10.F_Inactivo_Cum_;
	arrayRowtSortRow_1_SortOut.Expediente_ = next_10.Expediente_;
	arrayRowtSortRow_1_SortOut.Consecutivo_ = next_10.Consecutivo_;
	arrayRowtSortRow_1_SortOut.Cum = next_10.Cum;
	arrayRowtSortRow_1_SortOut.Origen_ = next_10.Origen_;
	arrayRowtSortRow_1_SortOut.Caracteristicas = next_10.Caracteristicas;
	arrayRowtSortRow_1_SortOut.Caracteriticas_ = next_10.Caracteriticas_;
	arrayRowtSortRow_1_SortOut.Contraindicaciones_ = next_10.Contraindicaciones_;
	arrayRowtSortRow_1_SortOut.Efectos_ = next_10.Efectos_;
	arrayRowtSortRow_1_SortOut.Riesgos_ = next_10.Riesgos_;
	arrayRowtSortRow_1_SortOut.Dosis_ = next_10.Dosis_;
	arrayRowtSortRow_1_SortOut.NIT_Fabricante = next_10.NIT_Fabricante;
	arrayRowtSortRow_1_SortOut.Fabricante = next_10.Fabricante;
	arrayRowtSortRow_1_SortOut.NIT_Importador = next_10.NIT_Importador;
	arrayRowtSortRow_1_SortOut.Importador = next_10.Importador;
	arrayRowtSortRow_1_SortOut.ViaAdmin_Id = next_10.ViaAdmin_Id;
	arrayRowtSortRow_1_SortOut.ViaAdmin_Id_ = next_10.ViaAdmin_Id_;
	arrayRowtSortRow_1_SortOut.Forma_Id = next_10.Forma_Id;
	arrayRowtSortRow_1_SortOut.Forma_Id_ = next_10.Forma_Id_;
	arrayRowtSortRow_1_SortOut.MedGenerico_Id = next_10.MedGenerico_Id;
	arrayRowtSortRow_1_SortOut.Formas_Farma_Id = next_10.Formas_Farma_Id;
	arrayRowtSortRow_1_SortOut.Formas_Farma_Id_ = next_10.Formas_Farma_Id_;
	arrayRowtSortRow_1_SortOut.UMedida_Id = next_10.UMedida_Id;
	arrayRowtSortRow_1_SortOut.UMedida_Id_ = next_10.UMedida_Id_;
	arrayRowtSortRow_1_SortOut.Cant_UMedida = next_10.Cant_UMedida;
	arrayRowtSortRow_1_SortOut.Cant_UMedida_ = next_10.Cant_UMedida_;
	arrayRowtSortRow_1_SortOut.Cant_Minima = next_10.Cant_Minima;
	arrayRowtSortRow_1_SortOut.Cant_Minima_ = next_10.Cant_Minima_;
	arrayRowtSortRow_1_SortOut._FExp_RegInvima = next_10._FExp_RegInvima;
	arrayRowtSortRow_1_SortOut._FVen_RegInvima = next_10._FVen_RegInvima;
	arrayRowtSortRow_1_SortOut._FActivoCum = next_10._FActivoCum;
	arrayRowtSortRow_1_SortOut._FInactivoCum = next_10._FInactivoCum;
	arrayRowtSortRow_1_SortOut.Fabricante_NitN = next_10.Fabricante_NitN;
	arrayRowtSortRow_1_SortOut.Importador_NitN = next_10.Importador_NitN;
	arrayRowtSortRow_1_SortOut.Fabricante_Id = next_10.Fabricante_Id;
	arrayRowtSortRow_1_SortOut.Fabricante_Id_ = next_10.Fabricante_Id_;
	arrayRowtSortRow_1_SortOut.Importador_Id = next_10.Importador_Id;
	arrayRowtSortRow_1_SortOut.Importador_Id_ = next_10.Importador_Id_;
	arrayRowtSortRow_1_SortOut.Ins_Caract = next_10.Ins_Caract;
	arrayRowtSortRow_1_SortOut.Respuesta_ = next_10.Respuesta_;
	arrayRowtSortRow_1_SortOut.Id_ = next_10.Id_;	
	list_tSortRow_1_SortOut.add(arrayRowtSortRow_1_SortOut);

 


	tos_count_tSortRow_1_SortOut++;

/**
 * [tSortRow_1_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_1_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_1_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut process_data_end ] stop
 */

} // End of branch "next_10"




	
	/**
	 * [tMap_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_end ] stop
 */

} // End of branch "row48"




// Start of branch "row7"
if(row7 != null) { 



	
	/**
	 * [tOracleSP_5 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					

			// code for the argument 1 (Cod_Barras_) of type 'IN CLOB'
    					if (row7.Cod_Barras_ == null) {
    						statement_tOracleSP_5.setNull(1, java.sql.Types.VARCHAR);
    					} else {
    					
                        java.sql.Clob clob_tOracleSP_5 = connection_tOracleSP_5.createClob();
                        clob_tOracleSP_5.setString(1, row7.Cod_Barras_);
                        statement_tOracleSP_5.setClob(1, clob_tOracleSP_5);
    					}
    					
			// code for the argument 2 (Comercial_) of type 'IN CLOB'
    					if (row7.Comercial_ == null) {
    						statement_tOracleSP_5.setNull(2, java.sql.Types.VARCHAR);
    					} else {
    					
                        java.sql.Clob clob_tOracleSP_5 = connection_tOracleSP_5.createClob();
                        clob_tOracleSP_5.setString(1, row7.Comercial_);
                        statement_tOracleSP_5.setClob(2, clob_tOracleSP_5);
    					}
    					
			// code for the argument 3 (Presentacion_) of type 'IN CLOB'
    					if (row7.Presentacion_ == null) {
    						statement_tOracleSP_5.setNull(3, java.sql.Types.VARCHAR);
    					} else {
    					
                        java.sql.Clob clob_tOracleSP_5 = connection_tOracleSP_5.createClob();
                        clob_tOracleSP_5.setString(1, row7.Presentacion_);
                        statement_tOracleSP_5.setClob(3, clob_tOracleSP_5);
    					}
    					
			// code for the argument 4 (Formas_Farma_Id) of type 'IN NUMERIC'
    					if (row7.Formas_Farma_Id == null) {
    						statement_tOracleSP_5.setNull(4, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_5.setBigDecimal(4, row7.Formas_Farma_Id);
    					}
    					
			// code for the argument 5 (Unidosis_) of type 'IN CLOB'
    					if (row7.Unidosis_ == null) {
    						statement_tOracleSP_5.setNull(5, java.sql.Types.VARCHAR);
    					} else {
    					
                        java.sql.Clob clob_tOracleSP_5 = connection_tOracleSP_5.createClob();
                        clob_tOracleSP_5.setString(1, row7.Unidosis_);
                        statement_tOracleSP_5.setClob(5, clob_tOracleSP_5);
    					}
    					
			// code for the argument 6 (UMedida_Id) of type 'IN NUMERIC'
    					if (row7.UMedida_Id == null) {
    						statement_tOracleSP_5.setNull(6, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_5.setBigDecimal(6, row7.UMedida_Id);
    					}
    					
			// code for the argument 7 (Cant_UMedida) of type 'IN NUMERIC'
    					if (row7.Cant_UMedida == null) {
    						statement_tOracleSP_5.setNull(7, java.sql.Types.DOUBLE);
    					} else {
    					
                        statement_tOracleSP_5.setDouble(7, row7.Cant_UMedida);
    					}
    					
			// code for the argument 8 (Cant_Minima) of type 'IN NUMERIC'
    					if (row7.Cant_Minima == null) {
    						statement_tOracleSP_5.setNull(8, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_5.setInt(8, row7.Cant_Minima);
    					}
    					
			// code for the argument 9 (Reg_Invima_) of type 'IN CLOB'
    					if (row7.Reg_Invima_ == null) {
    						statement_tOracleSP_5.setNull(9, java.sql.Types.VARCHAR);
    					} else {
    					
                        java.sql.Clob clob_tOracleSP_5 = connection_tOracleSP_5.createClob();
                        clob_tOracleSP_5.setString(1, row7.Reg_Invima_);
                        statement_tOracleSP_5.setClob(9, clob_tOracleSP_5);
    					}
    					
			// code for the argument 10 (F_Expedicion_) of type 'IN CLOB'
    					if (row7.F_Expedicion_ == null) {
    						statement_tOracleSP_5.setNull(10, java.sql.Types.VARCHAR);
    					} else {
    					
                        java.sql.Clob clob_tOracleSP_5 = connection_tOracleSP_5.createClob();
                        clob_tOracleSP_5.setString(1, row7.F_Expedicion_);
                        statement_tOracleSP_5.setClob(10, clob_tOracleSP_5);
    					}
    					
			// code for the argument 11 (F_Vencimiento_) of type 'IN CLOB'
    					if (row7.F_Vencimiento_ == null) {
    						statement_tOracleSP_5.setNull(11, java.sql.Types.VARCHAR);
    					} else {
    					
                        java.sql.Clob clob_tOracleSP_5 = connection_tOracleSP_5.createClob();
                        clob_tOracleSP_5.setString(1, row7.F_Vencimiento_);
                        statement_tOracleSP_5.setClob(11, clob_tOracleSP_5);
    					}
    					
			// code for the argument 12 (F_Activo_Cum_) of type 'IN CLOB'
    					if (row7.F_Activo_Cum_ == null) {
    						statement_tOracleSP_5.setNull(12, java.sql.Types.VARCHAR);
    					} else {
    					
                        java.sql.Clob clob_tOracleSP_5 = connection_tOracleSP_5.createClob();
                        clob_tOracleSP_5.setString(1, row7.F_Activo_Cum_);
                        statement_tOracleSP_5.setClob(12, clob_tOracleSP_5);
    					}
    					
			// code for the argument 13 (F_Inactivo_Cum_) of type 'IN CLOB'
    					if (row7.F_Inactivo_Cum_ == null) {
    						statement_tOracleSP_5.setNull(13, java.sql.Types.VARCHAR);
    					} else {
    					
                        java.sql.Clob clob_tOracleSP_5 = connection_tOracleSP_5.createClob();
                        clob_tOracleSP_5.setString(1, row7.F_Inactivo_Cum_);
                        statement_tOracleSP_5.setClob(13, clob_tOracleSP_5);
    					}
    					
			// code for the argument 14 (Expediente_) of type 'IN CLOB'
    					if (row7.Expediente_ == null) {
    						statement_tOracleSP_5.setNull(14, java.sql.Types.VARCHAR);
    					} else {
    					
                        java.sql.Clob clob_tOracleSP_5 = connection_tOracleSP_5.createClob();
                        clob_tOracleSP_5.setString(1, row7.Expediente_);
                        statement_tOracleSP_5.setClob(14, clob_tOracleSP_5);
    					}
    					
			// code for the argument 15 (Consecutivo_) of type 'IN CLOB'
    					if (row7.Consecutivo_ == null) {
    						statement_tOracleSP_5.setNull(15, java.sql.Types.VARCHAR);
    					} else {
    					
                        java.sql.Clob clob_tOracleSP_5 = connection_tOracleSP_5.createClob();
                        clob_tOracleSP_5.setString(1, row7.Consecutivo_);
                        statement_tOracleSP_5.setClob(15, clob_tOracleSP_5);
    					}
    					
			// code for the argument 16 (Origen_) of type 'IN CLOB'
    					if (row7.Origen_ == null) {
    						statement_tOracleSP_5.setNull(16, java.sql.Types.VARCHAR);
    					} else {
    					
                        java.sql.Clob clob_tOracleSP_5 = connection_tOracleSP_5.createClob();
                        clob_tOracleSP_5.setString(1, row7.Origen_);
                        statement_tOracleSP_5.setClob(16, clob_tOracleSP_5);
    					}
    					
			// code for the argument 17 (Caracteriticas_) of type 'IN CLOB'
    					if (row7.Caracteriticas_ == null) {
    						statement_tOracleSP_5.setNull(17, java.sql.Types.VARCHAR);
    					} else {
    					
                        java.sql.Clob clob_tOracleSP_5 = connection_tOracleSP_5.createClob();
                        clob_tOracleSP_5.setString(1, row7.Caracteriticas_);
                        statement_tOracleSP_5.setClob(17, clob_tOracleSP_5);
    					}
    					
			// code for the argument 18 (Contraindicaciones_) of type 'IN CLOB'
    					if (row7.Contraindicaciones_ == null) {
    						statement_tOracleSP_5.setNull(18, java.sql.Types.VARCHAR);
    					} else {
    					
                        java.sql.Clob clob_tOracleSP_5 = connection_tOracleSP_5.createClob();
                        clob_tOracleSP_5.setString(1, row7.Contraindicaciones_);
                        statement_tOracleSP_5.setClob(18, clob_tOracleSP_5);
    					}
    					
			// code for the argument 19 (Efectos_) of type 'IN CLOB'
    					if (row7.Efectos_ == null) {
    						statement_tOracleSP_5.setNull(19, java.sql.Types.VARCHAR);
    					} else {
    					
                        java.sql.Clob clob_tOracleSP_5 = connection_tOracleSP_5.createClob();
                        clob_tOracleSP_5.setString(1, row7.Efectos_);
                        statement_tOracleSP_5.setClob(19, clob_tOracleSP_5);
    					}
    					
			// code for the argument 20 (Riesgos_) of type 'IN CLOB'
    					if (row7.Riesgos_ == null) {
    						statement_tOracleSP_5.setNull(20, java.sql.Types.VARCHAR);
    					} else {
    					
                        java.sql.Clob clob_tOracleSP_5 = connection_tOracleSP_5.createClob();
                        clob_tOracleSP_5.setString(1, row7.Riesgos_);
                        statement_tOracleSP_5.setClob(20, clob_tOracleSP_5);
    					}
    					
			// code for the argument 21 (Dosis_) of type 'IN CLOB'
    					if (row7.Dosis_ == null) {
    						statement_tOracleSP_5.setNull(21, java.sql.Types.VARCHAR);
    					} else {
    					
                        java.sql.Clob clob_tOracleSP_5 = connection_tOracleSP_5.createClob();
                        clob_tOracleSP_5.setString(1, row7.Dosis_);
                        statement_tOracleSP_5.setClob(21, clob_tOracleSP_5);
    					}
    					
			// code for the argument 22 (Fabricante_Id) of type 'IN NUMERIC'
    					if (row7.Fabricante_Id == null) {
    						statement_tOracleSP_5.setNull(22, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_5.setBigDecimal(22, row7.Fabricante_Id);
    					}
    					
			// code for the argument 23 (Importador_Id) of type 'IN NUMERIC'
    					if (row7.Importador_Id == null) {
    						statement_tOracleSP_5.setNull(23, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_5.setBigDecimal(23, row7.Importador_Id);
    					}
    					
			// code for the argument 24 (usuarios_Id_) of type 'IN NUMERIC'
    					if (row7.usuarios_Id_ == null) {
    						statement_tOracleSP_5.setNull(24, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_5.setBigDecimal(24, row7.usuarios_Id_);
    					}
    					
			// code for the argument 25 (uorg_Id_) of type 'IN NUMERIC'
    					if (row7.uorg_Id_ == null) {
    						statement_tOracleSP_5.setNull(25, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_5.setBigDecimal(25, row7.uorg_Id_);
    					}
    					
			// code for the argument 26 (Estado_) of type 'INOUT AUTOMAPPING'
    					if (row7.Estado_ == null) {
    						statement_tOracleSP_5.setNull(26, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_5.setString(26, row7.Estado_);
    					}
    					
					statement_tOracleSP_5.registerOutParameter(26, java.sql.Types.VARCHAR);
			// code for the argument 27 (Respuesta_) of type 'OUT CLOB'
					statement_tOracleSP_5.registerOutParameter(27, java.sql.Types.CLOB);
			// code for the argument 28 (Id_) of type 'OUT NUMERIC'
					statement_tOracleSP_5.registerOutParameter(28, java.sql.Types.NUMERIC);
		statement_tOracleSP_5.execute();
		

 


	tos_count_tOracleSP_5++;

/**
 * [tOracleSP_5 main ] stop
 */
	
	/**
	 * [tOracleSP_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_5";
	
	

 



/**
 * [tOracleSP_5 process_data_begin ] stop
 */
	
	/**
	 * [tOracleSP_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_5";
	
	

 



/**
 * [tOracleSP_5 process_data_end ] stop
 */

} // End of branch "row7"




	
	/**
	 * [tFilterRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_2";
	
	

 



/**
 * [tFilterRow_2 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

 



/**
 * [tJavaRow_10 process_data_end ] stop
 */

} // End of branch "next_7"




	
	/**
	 * [tMap_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	

 



/**
 * [tJavaRow_12 process_data_end ] stop
 */



	
	/**
	 * [tDenormalize_1_ArrayIn process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tDenormalize_1";
	
	currentComponent="tDenormalize_1_ArrayIn";
	
	

 



/**
 * [tDenormalize_1_ArrayIn process_data_end ] stop
 */
	
	/**
	 * [tDenormalize_1_ArrayIn end ] start
	 */

	

	
	
		currentVirtualComponent = "tDenormalize_1";
	
	currentComponent="tDenormalize_1_ArrayIn";
	
	
	nb_line_tDenormalize_1_ArrayIn++;
}
globalMap.put("tDenormalize_1_ArrayIn_NB_LINE",nb_line_tDenormalize_1_ArrayIn);
 

ok_Hash.put("tDenormalize_1_ArrayIn", true);
end_Hash.put("tDenormalize_1_ArrayIn", System.currentTimeMillis());




/**
 * [tDenormalize_1_ArrayIn end ] stop
 */

	
	/**
	 * [tJavaRow_12 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	

globalMap.put("tJavaRow_12_NB_LINE",nb_line_tJavaRow_12);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row35");
			  	}
			  	
 

ok_Hash.put("tJavaRow_12", true);
end_Hash.put("tJavaRow_12", System.currentTimeMillis());




/**
 * [tJavaRow_12 end ] stop
 */

	
	/**
	 * [tMap_8 end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row30");
			  	}
			  	
 

ok_Hash.put("tMap_8", true);
end_Hash.put("tMap_8", System.currentTimeMillis());




/**
 * [tMap_8 end ] stop
 */

	
	/**
	 * [tJavaRow_10 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

globalMap.put("tJavaRow_10_NB_LINE",nb_line_tJavaRow_10);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"next_7");
			  	}
			  	
 

ok_Hash.put("tJavaRow_10", true);
end_Hash.put("tJavaRow_10", System.currentTimeMillis());




/**
 * [tJavaRow_10 end ] stop
 */

	
	/**
	 * [tJavaRow_9 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

globalMap.put("tJavaRow_9_NB_LINE",nb_line_tJavaRow_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tJavaRow_9", true);
end_Hash.put("tJavaRow_9", System.currentTimeMillis());




/**
 * [tJavaRow_9 end ] stop
 */

	
	/**
	 * [tFilterRow_2 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_2";
	
	
    globalMap.put("tFilterRow_2_NB_LINE", nb_line_tFilterRow_2);
    globalMap.put("tFilterRow_2_NB_LINE_OK", nb_line_ok_tFilterRow_2);
    globalMap.put("tFilterRow_2_NB_LINE_REJECT", nb_line_reject_tFilterRow_2);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row40");
			  	}
			  	
 

ok_Hash.put("tFilterRow_2", true);
end_Hash.put("tFilterRow_2", System.currentTimeMillis());




/**
 * [tFilterRow_2 end ] stop
 */

	
	/**
	 * [tMap_7 end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row48");
			  	}
			  	
 

ok_Hash.put("tMap_7", true);
end_Hash.put("tMap_7", System.currentTimeMillis());




/**
 * [tMap_7 end ] stop
 */

	
	/**
	 * [tSortRow_1_SortOut end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

next_10Struct[] array_tSortRow_1_SortOut = list_tSortRow_1_SortOut.toArray(new Comparablenext_10Struct[0]);

java.util.Arrays.sort(array_tSortRow_1_SortOut);

globalMap.put("tSortRow_1",array_tSortRow_1_SortOut);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"next_10");
			  	}
			  	
 

ok_Hash.put("tSortRow_1_SortOut", true);
end_Hash.put("tSortRow_1_SortOut", System.currentTimeMillis());




/**
 * [tSortRow_1_SortOut end ] stop
 */





	
	/**
	 * [tOracleOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_2", false);
		start_Hash.put("tOracleOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"next_8");
					}
				
		int tos_count_tOracleOutput_2 = 0;
		






    
    int nb_line_tOracleOutput_2 = 0;
    int nb_line_update_tOracleOutput_2 = 0;
    int nb_line_inserted_tOracleOutput_2 = 0;
    int nb_line_deleted_tOracleOutput_2 = 0;
    int nb_line_rejected_tOracleOutput_2 = 0;

    int tmp_batchUpdateCount_tOracleOutput_2 = 0;

    int deletedCount_tOracleOutput_2=0;
    int updatedCount_tOracleOutput_2=0;
    int insertedCount_tOracleOutput_2=0;
    int rowsToCommitCount_tOracleOutput_2=0;
    int rejectedCount_tOracleOutput_2=0;

    boolean whetherReject_tOracleOutput_2 = false;

    java.sql.Connection conn_tOracleOutput_2 = null;

    //optional table
    String dbschema_tOracleOutput_2 = null;
    String tableName_tOracleOutput_2 = null;
        dbschema_tOracleOutput_2 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_2 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_2=0;

        if(dbschema_tOracleOutput_2 == null || dbschema_tOracleOutput_2.trim().length() == 0) {
            tableName_tOracleOutput_2 = ("MED_PRODUCTOS_COMERCIALES_LOG");
        } else {
            tableName_tOracleOutput_2 = dbschema_tOracleOutput_2 + "." + ("MED_PRODUCTOS_COMERCIALES_LOG");
        }
                                String tableNameForSearch_tOracleOutput_2= "" + ((String)"MED_PRODUCTOS_COMERCIALES_LOG") + "";
String dbschemaForSearch_tOracleOutput_2= null;
if(dbschema_tOracleOutput_2== null || dbschema_tOracleOutput_2.trim().length() == 0) {
dbschemaForSearch_tOracleOutput_2= ((String)globalMap.get("username_tOracleConnection_1")).toUpperCase();
} else {
dbschemaForSearch_tOracleOutput_2= dbschema_tOracleOutput_2.toUpperCase();
}

                                java.sql.DatabaseMetaData dbMetaData_tOracleOutput_2 = conn_tOracleOutput_2.getMetaData();
                                if(tableNameForSearch_tOracleOutput_2.indexOf("\"")==-1){
                                    tableNameForSearch_tOracleOutput_2 = tableNameForSearch_tOracleOutput_2.toUpperCase();
                                }else{
                                    tableNameForSearch_tOracleOutput_2 = tableNameForSearch_tOracleOutput_2.replaceAll("\"","");
                                }
                                boolean whetherExist_tOracleOutput_2 = false;
                                try (java.sql.ResultSet rsTable_tOracleOutput_2 = dbMetaData_tOracleOutput_2.getTables(null, dbschemaForSearch_tOracleOutput_2, tableNameForSearch_tOracleOutput_2, new String[]{"TABLE"})) {
                                    if(rsTable_tOracleOutput_2.next()) {
                                        whetherExist_tOracleOutput_2 = true;
                                    }
                                }

                                if(!whetherExist_tOracleOutput_2) {
                                    try (java.sql.Statement stmtCreate_tOracleOutput_2 = conn_tOracleOutput_2.createStatement()) {
                                        stmtCreate_tOracleOutput_2.execute("CREATE TABLE " + tableName_tOracleOutput_2 + "(ITEM INT ,CODIGODEBARRAS VARCHAR2(20)  ,NOMBRECOMERCIAL VARCHAR2(150)  ,PRESENTACIONCOMERCIAL VARCHAR2(500)  ,VIADEADMINISTRACION VARCHAR2(200)  ,FORMAFARMACEUTICA VARCHAR2(100)  ,NOMBREGENERICO VARCHAR2(400)  ,CONCENTRACION VARCHAR2(50)  ,UNIDOSIS VARCHAR2(2)  ,UNIDADDEMEDIDA VARCHAR2(100)  ,CANTIDADUNIDADUMEDIDA VARCHAR2(10)  ,CANTIDADMINIMA VARCHAR2(10)  ,REGISTROINVIMA VARCHAR2(50)  ,FECHAEXPEDICIONREGINVIMA VARCHAR2(15)  ,FECHAVENCIMIENTOREGINVIMA VARCHAR2(15)  ,FECHAACTIVOCUM VARCHAR2(15)  ,FECHAINACTIVOCUM VARCHAR2(15)  ,CUM VARCHAR2(60)  ,EXPEDIENTE VARCHAR2(25)  ,CONSECUTIVO VARCHAR2(10)  ,LUGARDEORIGEN VARCHAR2(500)  ,CARACTERISTICAS VARCHAR2(2000)  ,CONTRAINDICACIONES VARCHAR2(2000)  ,EFECTOSPOSTERIOR VARCHAR2(2000)  ,RIESGOSASOCIADOS VARCHAR2(2000)  ,DOSISPARAAPLICACION VARCHAR2(500)  ,NITFABRICANTE VARCHAR2(100)  ,FABRICANTE VARCHAR2(500)  ,NITIMPORTADOR VARCHAR2(100)  ,IMPORTADOR VARCHAR2(500)  ,OBSERVACIONES VARCHAR2(500)  )");
                                    }
                                }
                String insert_tOracleOutput_2 = "INSERT INTO " + tableName_tOracleOutput_2 + " (ITEM,CODIGODEBARRAS,NOMBRECOMERCIAL,PRESENTACIONCOMERCIAL,VIADEADMINISTRACION,FORMAFARMACEUTICA,NOMBREGENERICO,CONCENTRACION,UNIDOSIS,UNIDADDEMEDIDA,CANTIDADUNIDADUMEDIDA,CANTIDADMINIMA,REGISTROINVIMA,FECHAEXPEDICIONREGINVIMA,FECHAVENCIMIENTOREGINVIMA,FECHAACTIVOCUM,FECHAINACTIVOCUM,CUM,EXPEDIENTE,CONSECUTIVO,LUGARDEORIGEN,CARACTERISTICAS,CONTRAINDICACIONES,EFECTOSPOSTERIOR,RIESGOSASOCIADOS,DOSISPARAAPLICACION,NITFABRICANTE,FABRICANTE,NITIMPORTADOR,IMPORTADOR,OBSERVACIONES) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_2 = conn_tOracleOutput_2.prepareStatement(insert_tOracleOutput_2);
                        resourceMap.put("pstmt_tOracleOutput_2", pstmt_tOracleOutput_2);





 



/**
 * [tOracleOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_11", false);
		start_Hash.put("tMap_11", System.currentTimeMillis());
		
	
	currentComponent="tMap_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row38");
					}
				
		int tos_count_tMap_11 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_11__Struct  {
}
Var__tMap_11__Struct Var__tMap_11 = new Var__tMap_11__Struct();
// ###############################

// ###############################
// # Outputs initialization
next_8Struct next_8_tmp = new next_8Struct();
// ###############################

        
        



        









 



/**
 * [tMap_11 begin ] stop
 */



	
	/**
	 * [tReplicate_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tReplicate_1", false);
		start_Hash.put("tReplicate_1", System.currentTimeMillis());
		
	
	currentComponent="tReplicate_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row42");
					}
				
		int tos_count_tReplicate_1 = 0;
		

 



/**
 * [tReplicate_1 begin ] stop
 */



	
	/**
	 * [tJavaFlex_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaFlex_1", false);
		start_Hash.put("tJavaFlex_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaFlex_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row37");
					}
				
		int tos_count_tJavaFlex_1 = 0;
		


// start part of your Java code
int count = 1;
      


 



/**
 * [tJavaFlex_1 begin ] stop
 */



	
	/**
	 * [tSortRow_1_SortIn begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_1_SortIn", false);
		start_Hash.put("tSortRow_1_SortIn", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	
		int tos_count_tSortRow_1_SortIn = 0;
		


next_10Struct[] array_tSortRow_1_SortIn = (next_10Struct[]) globalMap.remove("tSortRow_1");

int nb_line_tSortRow_1_SortIn = 0;

next_10Struct current_tSortRow_1_SortIn = null;

for(int i_tSortRow_1_SortIn = 0; i_tSortRow_1_SortIn < array_tSortRow_1_SortIn.length; i_tSortRow_1_SortIn++){
	current_tSortRow_1_SortIn = array_tSortRow_1_SortIn[i_tSortRow_1_SortIn];
	row37.Item = current_tSortRow_1_SortIn.Item;
	row37.oViaAdmin = current_tSortRow_1_SortIn.oViaAdmin;
	row37.oFFarmaceutica = current_tSortRow_1_SortIn.oFFarmaceutica;
	row37.oNGenerico = current_tSortRow_1_SortIn.oNGenerico;
	row37.oConcentracion = current_tSortRow_1_SortIn.oConcentracion;
	row37.oUnidosis = current_tSortRow_1_SortIn.oUnidosis;
	row37.oUMedida = current_tSortRow_1_SortIn.oUMedida;
	row37.oFabricante = current_tSortRow_1_SortIn.oFabricante;
	row37.oImportador = current_tSortRow_1_SortIn.oImportador;
	row37.Estado_ = current_tSortRow_1_SortIn.Estado_;
	row37.Ins = current_tSortRow_1_SortIn.Ins;
	row37._ErrorMessage = current_tSortRow_1_SortIn._ErrorMessage;
	row37.Cod_Barras_ = current_tSortRow_1_SortIn.Cod_Barras_;
	row37.Comercial_ = current_tSortRow_1_SortIn.Comercial_;
	row37.Presentacion_ = current_tSortRow_1_SortIn.Presentacion_;
	row37.ViaAdmin = current_tSortRow_1_SortIn.ViaAdmin;
	row37.FFarmaceutica = current_tSortRow_1_SortIn.FFarmaceutica;
	row37.NGenerico = current_tSortRow_1_SortIn.NGenerico;
	row37.Concentracion = current_tSortRow_1_SortIn.Concentracion;
	row37.Unidosis_ = current_tSortRow_1_SortIn.Unidosis_;
	row37.UMedida = current_tSortRow_1_SortIn.UMedida;
	row37.CantUMedida = current_tSortRow_1_SortIn.CantUMedida;
	row37.CantMinima = current_tSortRow_1_SortIn.CantMinima;
	row37.Reg_Invima_ = current_tSortRow_1_SortIn.Reg_Invima_;
	row37.F_Expedicion_ = current_tSortRow_1_SortIn.F_Expedicion_;
	row37.F_Vencimiento_ = current_tSortRow_1_SortIn.F_Vencimiento_;
	row37.F_Activo_Cum_ = current_tSortRow_1_SortIn.F_Activo_Cum_;
	row37.F_Inactivo_Cum_ = current_tSortRow_1_SortIn.F_Inactivo_Cum_;
	row37.Expediente_ = current_tSortRow_1_SortIn.Expediente_;
	row37.Consecutivo_ = current_tSortRow_1_SortIn.Consecutivo_;
	row37.Cum = current_tSortRow_1_SortIn.Cum;
	row37.Origen_ = current_tSortRow_1_SortIn.Origen_;
	row37.Caracteristicas = current_tSortRow_1_SortIn.Caracteristicas;
	row37.Caracteriticas_ = current_tSortRow_1_SortIn.Caracteriticas_;
	row37.Contraindicaciones_ = current_tSortRow_1_SortIn.Contraindicaciones_;
	row37.Efectos_ = current_tSortRow_1_SortIn.Efectos_;
	row37.Riesgos_ = current_tSortRow_1_SortIn.Riesgos_;
	row37.Dosis_ = current_tSortRow_1_SortIn.Dosis_;
	row37.NIT_Fabricante = current_tSortRow_1_SortIn.NIT_Fabricante;
	row37.Fabricante = current_tSortRow_1_SortIn.Fabricante;
	row37.NIT_Importador = current_tSortRow_1_SortIn.NIT_Importador;
	row37.Importador = current_tSortRow_1_SortIn.Importador;
	row37.ViaAdmin_Id = current_tSortRow_1_SortIn.ViaAdmin_Id;
	row37.ViaAdmin_Id_ = current_tSortRow_1_SortIn.ViaAdmin_Id_;
	row37.Forma_Id = current_tSortRow_1_SortIn.Forma_Id;
	row37.Forma_Id_ = current_tSortRow_1_SortIn.Forma_Id_;
	row37.MedGenerico_Id = current_tSortRow_1_SortIn.MedGenerico_Id;
	row37.Formas_Farma_Id = current_tSortRow_1_SortIn.Formas_Farma_Id;
	row37.Formas_Farma_Id_ = current_tSortRow_1_SortIn.Formas_Farma_Id_;
	row37.UMedida_Id = current_tSortRow_1_SortIn.UMedida_Id;
	row37.UMedida_Id_ = current_tSortRow_1_SortIn.UMedida_Id_;
	row37.Cant_UMedida = current_tSortRow_1_SortIn.Cant_UMedida;
	row37.Cant_UMedida_ = current_tSortRow_1_SortIn.Cant_UMedida_;
	row37.Cant_Minima = current_tSortRow_1_SortIn.Cant_Minima;
	row37.Cant_Minima_ = current_tSortRow_1_SortIn.Cant_Minima_;
	row37._FExp_RegInvima = current_tSortRow_1_SortIn._FExp_RegInvima;
	row37._FVen_RegInvima = current_tSortRow_1_SortIn._FVen_RegInvima;
	row37._FActivoCum = current_tSortRow_1_SortIn._FActivoCum;
	row37._FInactivoCum = current_tSortRow_1_SortIn._FInactivoCum;
	row37.Fabricante_NitN = current_tSortRow_1_SortIn.Fabricante_NitN;
	row37.Importador_NitN = current_tSortRow_1_SortIn.Importador_NitN;
	row37.Fabricante_Id = current_tSortRow_1_SortIn.Fabricante_Id;
	row37.Fabricante_Id_ = current_tSortRow_1_SortIn.Fabricante_Id_;
	row37.Importador_Id = current_tSortRow_1_SortIn.Importador_Id;
	row37.Importador_Id_ = current_tSortRow_1_SortIn.Importador_Id_;
	row37.Ins_Caract = current_tSortRow_1_SortIn.Ins_Caract;
	row37.Respuesta_ = current_tSortRow_1_SortIn.Respuesta_;
	row37.Id_ = current_tSortRow_1_SortIn.Id_;
	// increase number of line sorted
	nb_line_tSortRow_1_SortIn++;

 



/**
 * [tSortRow_1_SortIn begin ] stop
 */
	
	/**
	 * [tSortRow_1_SortIn main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 


	tos_count_tSortRow_1_SortIn++;

/**
 * [tSortRow_1_SortIn main ] stop
 */
	
	/**
	 * [tSortRow_1_SortIn process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 



/**
 * [tSortRow_1_SortIn process_data_begin ] stop
 */

	
	/**
	 * [tJavaFlex_1 main ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row37"
						
						);
					}
					


	        				row42.Item = row37.Item;
	        				row42.oViaAdmin = row37.oViaAdmin;
	        				row42.oFFarmaceutica = row37.oFFarmaceutica;
	        				row42.oNGenerico = row37.oNGenerico;
	        				row42.oConcentracion = row37.oConcentracion;
	        				row42.oUnidosis = row37.oUnidosis;
	        				row42.oUMedida = row37.oUMedida;
	        				row42.oFabricante = row37.oFabricante;
	        				row42.oImportador = row37.oImportador;
	        				row42.Estado_ = row37.Estado_;
	        				row42.Ins = row37.Ins;
	        				row42._ErrorMessage = row37._ErrorMessage;
	        				row42.Cod_Barras_ = row37.Cod_Barras_;
	        				row42.Comercial_ = row37.Comercial_;
	        				row42.Presentacion_ = row37.Presentacion_;
	        				row42.ViaAdmin = row37.ViaAdmin;
	        				row42.FFarmaceutica = row37.FFarmaceutica;
	        				row42.NGenerico = row37.NGenerico;
	        				row42.Concentracion = row37.Concentracion;
	        				row42.Unidosis_ = row37.Unidosis_;
	        				row42.UMedida = row37.UMedida;
	        				row42.CantUMedida = row37.CantUMedida;
	        				row42.CantMinima = row37.CantMinima;
	        				row42.Reg_Invima_ = row37.Reg_Invima_;
	        				row42.F_Expedicion_ = row37.F_Expedicion_;
	        				row42.F_Vencimiento_ = row37.F_Vencimiento_;
	        				row42.F_Activo_Cum_ = row37.F_Activo_Cum_;
	        				row42.F_Inactivo_Cum_ = row37.F_Inactivo_Cum_;
	        				row42.Expediente_ = row37.Expediente_;
	        				row42.Consecutivo_ = row37.Consecutivo_;
	        				row42.Cum = row37.Cum;
	        				row42.Origen_ = row37.Origen_;
	        				row42.Caracteristicas = row37.Caracteristicas;
	        				row42.Caracteriticas_ = row37.Caracteriticas_;
	        				row42.Contraindicaciones_ = row37.Contraindicaciones_;
	        				row42.Efectos_ = row37.Efectos_;
	        				row42.Riesgos_ = row37.Riesgos_;
	        				row42.Dosis_ = row37.Dosis_;
	        				row42.NIT_Fabricante = row37.NIT_Fabricante;
	        				row42.Fabricante = row37.Fabricante;
	        				row42.NIT_Importador = row37.NIT_Importador;
	        				row42.Importador = row37.Importador;
	        				row42.ViaAdmin_Id = row37.ViaAdmin_Id;
	        				row42.ViaAdmin_Id_ = row37.ViaAdmin_Id_;
	        				row42.Forma_Id = row37.Forma_Id;
	        				row42.Forma_Id_ = row37.Forma_Id_;
	        				row42.MedGenerico_Id = row37.MedGenerico_Id;
	        				row42.Formas_Farma_Id = row37.Formas_Farma_Id;
	        				row42.Formas_Farma_Id_ = row37.Formas_Farma_Id_;
	        				row42.UMedida_Id = row37.UMedida_Id;
	        				row42.UMedida_Id_ = row37.UMedida_Id_;
	        				row42.Cant_UMedida = row37.Cant_UMedida;
	        				row42.Cant_UMedida_ = row37.Cant_UMedida_;
	        				row42.Cant_Minima = row37.Cant_Minima;
	        				row42.Cant_Minima_ = row37.Cant_Minima_;
	        				row42._FExp_RegInvima = row37._FExp_RegInvima;
	        				row42._FVen_RegInvima = row37._FVen_RegInvima;
	        				row42._FActivoCum = row37._FActivoCum;
	        				row42._FInactivoCum = row37._FInactivoCum;
	        				row42.Fabricante_NitN = row37.Fabricante_NitN;
	        				row42.Importador_NitN = row37.Importador_NitN;
	        				row42.Fabricante_Id = row37.Fabricante_Id;
	        				row42.Fabricante_Id_ = row37.Fabricante_Id_;
	        				row42.Importador_Id = row37.Importador_Id;
	        				row42.Importador_Id_ = row37.Importador_Id_;
	        				row42.Ins_Caract = row37.Ins_Caract;
	        				row42.Respuesta_ = row37.Respuesta_;
	        				row42.Id_ = row37.Id_;

// here is the main part of the component,
// a piece of code executed in the row
// loop
row42.Item = count;
count +=1; 

 


	tos_count_tJavaFlex_1++;

/**
 * [tJavaFlex_1 main ] stop
 */
	
	/**
	 * [tJavaFlex_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";
	
	

 



/**
 * [tJavaFlex_1 process_data_begin ] stop
 */

	
	/**
	 * [tReplicate_1 main ] start
	 */

	

	
	
	currentComponent="tReplicate_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row42"
						
						);
					}
					


	row38 = new row38Struct();
						
	row38.Item = row42.Item;								
	row38.oViaAdmin = row42.oViaAdmin;								
	row38.oFFarmaceutica = row42.oFFarmaceutica;								
	row38.oNGenerico = row42.oNGenerico;								
	row38.oConcentracion = row42.oConcentracion;								
	row38.oUnidosis = row42.oUnidosis;								
	row38.oUMedida = row42.oUMedida;								
	row38.oFabricante = row42.oFabricante;								
	row38.oImportador = row42.oImportador;								
	row38.Estado_ = row42.Estado_;								
	row38.Ins = row42.Ins;								
	row38._ErrorMessage = row42._ErrorMessage;								
	row38.Cod_Barras_ = row42.Cod_Barras_;								
	row38.Comercial_ = row42.Comercial_;								
	row38.Presentacion_ = row42.Presentacion_;								
	row38.ViaAdmin = row42.ViaAdmin;								
	row38.FFarmaceutica = row42.FFarmaceutica;								
	row38.NGenerico = row42.NGenerico;								
	row38.Concentracion = row42.Concentracion;								
	row38.Unidosis_ = row42.Unidosis_;								
	row38.UMedida = row42.UMedida;								
	row38.CantUMedida = row42.CantUMedida;								
	row38.CantMinima = row42.CantMinima;								
	row38.Reg_Invima_ = row42.Reg_Invima_;								
	row38.F_Expedicion_ = row42.F_Expedicion_;								
	row38.F_Vencimiento_ = row42.F_Vencimiento_;								
	row38.F_Activo_Cum_ = row42.F_Activo_Cum_;								
	row38.F_Inactivo_Cum_ = row42.F_Inactivo_Cum_;								
	row38.Expediente_ = row42.Expediente_;								
	row38.Consecutivo_ = row42.Consecutivo_;								
	row38.Cum = row42.Cum;								
	row38.Origen_ = row42.Origen_;								
	row38.Caracteristicas = row42.Caracteristicas;								
	row38.Caracteriticas_ = row42.Caracteriticas_;								
	row38.Contraindicaciones_ = row42.Contraindicaciones_;								
	row38.Efectos_ = row42.Efectos_;								
	row38.Riesgos_ = row42.Riesgos_;								
	row38.Dosis_ = row42.Dosis_;								
	row38.NIT_Fabricante = row42.NIT_Fabricante;								
	row38.Fabricante = row42.Fabricante;								
	row38.NIT_Importador = row42.NIT_Importador;								
	row38.Importador = row42.Importador;								
	row38.ViaAdmin_Id = row42.ViaAdmin_Id;								
	row38.ViaAdmin_Id_ = row42.ViaAdmin_Id_;								
	row38.Forma_Id = row42.Forma_Id;								
	row38.Forma_Id_ = row42.Forma_Id_;								
	row38.MedGenerico_Id = row42.MedGenerico_Id;								
	row38.Formas_Farma_Id = row42.Formas_Farma_Id;								
	row38.Formas_Farma_Id_ = row42.Formas_Farma_Id_;								
	row38.UMedida_Id = row42.UMedida_Id;								
	row38.UMedida_Id_ = row42.UMedida_Id_;								
	row38.Cant_UMedida = row42.Cant_UMedida;								
	row38.Cant_UMedida_ = row42.Cant_UMedida_;								
	row38.Cant_Minima = row42.Cant_Minima;								
	row38.Cant_Minima_ = row42.Cant_Minima_;								
	row38._FExp_RegInvima = row42._FExp_RegInvima;								
	row38._FVen_RegInvima = row42._FVen_RegInvima;								
	row38._FActivoCum = row42._FActivoCum;								
	row38._FInactivoCum = row42._FInactivoCum;								
	row38.Fabricante_NitN = row42.Fabricante_NitN;								
	row38.Importador_NitN = row42.Importador_NitN;								
	row38.Fabricante_Id = row42.Fabricante_Id;								
	row38.Fabricante_Id_ = row42.Fabricante_Id_;								
	row38.Importador_Id = row42.Importador_Id;								
	row38.Importador_Id_ = row42.Importador_Id_;								
	row38.Ins_Caract = row42.Ins_Caract;								
	row38.Respuesta_ = row42.Respuesta_;								
	row38.Id_ = row42.Id_;			


 


	tos_count_tReplicate_1++;

/**
 * [tReplicate_1 main ] stop
 */
	
	/**
	 * [tReplicate_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tReplicate_1";
	
	

 



/**
 * [tReplicate_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_11 main ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row38"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_11 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_11 = false;
		boolean mainRowRejected_tMap_11 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_11__Struct Var = Var__tMap_11;// ###############################
        // ###############################
        // # Output tables

next_8 = null;


// # Output table : 'next_8'
next_8_tmp.ITEM = row38.Item ;
next_8_tmp.CODIGODEBARRAS = row38.Cod_Barras_ ;
next_8_tmp.NOMBRECOMERCIAL = row38.Comercial_ ;
next_8_tmp.PRESENTACIONCOMERCIAL = row38.Presentacion_ ;
next_8_tmp.VIADEADMINISTRACION = row38.ViaAdmin ;
next_8_tmp.FORMAFARMACEUTICA = row38.FFarmaceutica ;
next_8_tmp.NOMBREGENERICO = row38.NGenerico ;
next_8_tmp.CONCENTRACION = row38.oConcentracion ;
next_8_tmp.UNIDOSIS = row38.Unidosis_ ;
next_8_tmp.UNIDADDEMEDIDA = row38.UMedida ;
next_8_tmp.CANTIDADUNIDADUMEDIDA = row38.CantUMedida ;
next_8_tmp.CANTIDADMINIMA = row38.CantMinima ;
next_8_tmp.REGISTROINVIMA = row38.Reg_Invima_ ;
next_8_tmp.FECHAEXPEDICIONREGINVIMA = row38.F_Expedicion_ ;
next_8_tmp.FECHAVENCIMIENTOREGINVIMA = row38.F_Vencimiento_ ;
next_8_tmp.FECHAACTIVOCUM = row38.F_Activo_Cum_ ;
next_8_tmp.FECHAINACTIVOCUM = row38.F_Inactivo_Cum_ ;
next_8_tmp.CUM = row38.Cum ;
next_8_tmp.EXPEDIENTE = row38.Expediente_ ;
next_8_tmp.CONSECUTIVO = row38.Consecutivo_ ;
next_8_tmp.LUGARDEORIGEN = row38.Origen_ ;
next_8_tmp.CARACTERISTICAS = row38.Caracteristicas ;
next_8_tmp.CONTRAINDICACIONES = row38.Contraindicaciones_ ;
next_8_tmp.EFECTOSPOSTERIOR = row38.Efectos_ ;
next_8_tmp.RIESGOSASOCIADOS = row38.Riesgos_ ;
next_8_tmp.DOSISPARAAPLICACION = row38.Dosis_ ;
next_8_tmp.NITFABRICANTE = row38.NIT_Fabricante;
next_8_tmp.FABRICANTE = row38.Fabricante ;
next_8_tmp.NITIMPORTADOR = row38.NIT_Importador ;
next_8_tmp.IMPORTADOR = row38.Importador ;
next_8_tmp.OBSERVACIONES = row38._ErrorMessage ;
next_8 = next_8_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_11 = false;










 


	tos_count_tMap_11++;

/**
 * [tMap_11 main ] stop
 */
	
	/**
	 * [tMap_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_begin ] stop
 */
// Start of branch "next_8"
if(next_8 != null) { 



	
	/**
	 * [tOracleOutput_2 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"next_8"
						
						);
					}
					



        whetherReject_tOracleOutput_2 = false;
                        if(next_8.ITEM == null) {
pstmt_tOracleOutput_2.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_2.setInt(1, next_8.ITEM);
}

                        if(next_8.CODIGODEBARRAS == null) {
pstmt_tOracleOutput_2.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(2, next_8.CODIGODEBARRAS);
}

                        if(next_8.NOMBRECOMERCIAL == null) {
pstmt_tOracleOutput_2.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(3, next_8.NOMBRECOMERCIAL);
}

                        if(next_8.PRESENTACIONCOMERCIAL == null) {
pstmt_tOracleOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(4, next_8.PRESENTACIONCOMERCIAL);
}

                        if(next_8.VIADEADMINISTRACION == null) {
pstmt_tOracleOutput_2.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(5, next_8.VIADEADMINISTRACION);
}

                        if(next_8.FORMAFARMACEUTICA == null) {
pstmt_tOracleOutput_2.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(6, next_8.FORMAFARMACEUTICA);
}

                        if(next_8.NOMBREGENERICO == null) {
pstmt_tOracleOutput_2.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(7, next_8.NOMBREGENERICO);
}

                        if(next_8.CONCENTRACION == null) {
pstmt_tOracleOutput_2.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(8, next_8.CONCENTRACION);
}

                        if(next_8.UNIDOSIS == null) {
pstmt_tOracleOutput_2.setNull(9, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(9, next_8.UNIDOSIS);
}

                        if(next_8.UNIDADDEMEDIDA == null) {
pstmt_tOracleOutput_2.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(10, next_8.UNIDADDEMEDIDA);
}

                        if(next_8.CANTIDADUNIDADUMEDIDA == null) {
pstmt_tOracleOutput_2.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(11, next_8.CANTIDADUNIDADUMEDIDA);
}

                        if(next_8.CANTIDADMINIMA == null) {
pstmt_tOracleOutput_2.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(12, next_8.CANTIDADMINIMA);
}

                        if(next_8.REGISTROINVIMA == null) {
pstmt_tOracleOutput_2.setNull(13, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(13, next_8.REGISTROINVIMA);
}

                        if(next_8.FECHAEXPEDICIONREGINVIMA == null) {
pstmt_tOracleOutput_2.setNull(14, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(14, next_8.FECHAEXPEDICIONREGINVIMA);
}

                        if(next_8.FECHAVENCIMIENTOREGINVIMA == null) {
pstmt_tOracleOutput_2.setNull(15, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(15, next_8.FECHAVENCIMIENTOREGINVIMA);
}

                        if(next_8.FECHAACTIVOCUM == null) {
pstmt_tOracleOutput_2.setNull(16, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(16, next_8.FECHAACTIVOCUM);
}

                        if(next_8.FECHAINACTIVOCUM == null) {
pstmt_tOracleOutput_2.setNull(17, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(17, next_8.FECHAINACTIVOCUM);
}

                        if(next_8.CUM == null) {
pstmt_tOracleOutput_2.setNull(18, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(18, next_8.CUM);
}

                        if(next_8.EXPEDIENTE == null) {
pstmt_tOracleOutput_2.setNull(19, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(19, next_8.EXPEDIENTE);
}

                        if(next_8.CONSECUTIVO == null) {
pstmt_tOracleOutput_2.setNull(20, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(20, next_8.CONSECUTIVO);
}

                        if(next_8.LUGARDEORIGEN == null) {
pstmt_tOracleOutput_2.setNull(21, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(21, next_8.LUGARDEORIGEN);
}

                        if(next_8.CARACTERISTICAS == null) {
pstmt_tOracleOutput_2.setNull(22, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(22, next_8.CARACTERISTICAS);
}

                        if(next_8.CONTRAINDICACIONES == null) {
pstmt_tOracleOutput_2.setNull(23, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(23, next_8.CONTRAINDICACIONES);
}

                        if(next_8.EFECTOSPOSTERIOR == null) {
pstmt_tOracleOutput_2.setNull(24, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(24, next_8.EFECTOSPOSTERIOR);
}

                        if(next_8.RIESGOSASOCIADOS == null) {
pstmt_tOracleOutput_2.setNull(25, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(25, next_8.RIESGOSASOCIADOS);
}

                        if(next_8.DOSISPARAAPLICACION == null) {
pstmt_tOracleOutput_2.setNull(26, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(26, next_8.DOSISPARAAPLICACION);
}

                        if(next_8.NITFABRICANTE == null) {
pstmt_tOracleOutput_2.setNull(27, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(27, next_8.NITFABRICANTE);
}

                        if(next_8.FABRICANTE == null) {
pstmt_tOracleOutput_2.setNull(28, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(28, next_8.FABRICANTE);
}

                        if(next_8.NITIMPORTADOR == null) {
pstmt_tOracleOutput_2.setNull(29, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(29, next_8.NITIMPORTADOR);
}

                        if(next_8.IMPORTADOR == null) {
pstmt_tOracleOutput_2.setNull(30, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(30, next_8.IMPORTADOR);
}

                        if(next_8.OBSERVACIONES == null) {
pstmt_tOracleOutput_2.setNull(31, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(31, next_8.OBSERVACIONES);
}

                try {
                    nb_line_tOracleOutput_2++;
                    int processedCount_tOracleOutput_2 = pstmt_tOracleOutput_2.executeUpdate();
                    insertedCount_tOracleOutput_2 += processedCount_tOracleOutput_2;
                    rowsToCommitCount_tOracleOutput_2 += processedCount_tOracleOutput_2;
                } catch(java.lang.Exception e_tOracleOutput_2) {
globalMap.put("tOracleOutput_2_ERROR_MESSAGE",e_tOracleOutput_2.getMessage());
                    whetherReject_tOracleOutput_2 = true;
                            System.err.print(e_tOracleOutput_2.getMessage());
                }

 


	tos_count_tOracleOutput_2++;

/**
 * [tOracleOutput_2 main ] stop
 */
	
	/**
	 * [tOracleOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	

 



/**
 * [tOracleOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	

 



/**
 * [tOracleOutput_2 process_data_end ] stop
 */

} // End of branch "next_8"




	
	/**
	 * [tMap_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_end ] stop
 */



	
	/**
	 * [tReplicate_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tReplicate_1";
	
	

 



/**
 * [tReplicate_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaFlex_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";
	
	

 



/**
 * [tJavaFlex_1 process_data_end ] stop
 */



	
	/**
	 * [tSortRow_1_SortIn process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 



/**
 * [tSortRow_1_SortIn process_data_end ] stop
 */
	
	/**
	 * [tSortRow_1_SortIn end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	


}

globalMap.put("tSortRow_1_SortIn_NB_LINE",nb_line_tSortRow_1_SortIn);

 

ok_Hash.put("tSortRow_1_SortIn", true);
end_Hash.put("tSortRow_1_SortIn", System.currentTimeMillis());




/**
 * [tSortRow_1_SortIn end ] stop
 */

	
	/**
	 * [tJavaFlex_1 end ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";
	
	


// end of the component, outside/closing the loop
if(count > 1 ){
	context.result = "1";
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row37");
			  	}
			  	
 

ok_Hash.put("tJavaFlex_1", true);
end_Hash.put("tJavaFlex_1", System.currentTimeMillis());




/**
 * [tJavaFlex_1 end ] stop
 */

	
	/**
	 * [tReplicate_1 end ] start
	 */

	

	
	
	currentComponent="tReplicate_1";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row42");
			  	}
			  	
 

ok_Hash.put("tReplicate_1", true);
end_Hash.put("tReplicate_1", System.currentTimeMillis());




/**
 * [tReplicate_1 end ] stop
 */

	
	/**
	 * [tMap_11 end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row38");
			  	}
			  	
 

ok_Hash.put("tMap_11", true);
end_Hash.put("tMap_11", System.currentTimeMillis());




/**
 * [tMap_11 end ] stop
 */

	
	/**
	 * [tOracleOutput_2 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	
	



	
        if(pstmt_tOracleOutput_2 != null) {
			
				pstmt_tOracleOutput_2.close();
				resourceMap.remove("pstmt_tOracleOutput_2");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_2", true);

	
	nb_line_deleted_tOracleOutput_2=nb_line_deleted_tOracleOutput_2+ deletedCount_tOracleOutput_2;
	nb_line_update_tOracleOutput_2=nb_line_update_tOracleOutput_2 + updatedCount_tOracleOutput_2;
	nb_line_inserted_tOracleOutput_2=nb_line_inserted_tOracleOutput_2 + insertedCount_tOracleOutput_2;
	nb_line_rejected_tOracleOutput_2=nb_line_rejected_tOracleOutput_2 + rejectedCount_tOracleOutput_2;
	
        globalMap.put("tOracleOutput_2_NB_LINE",nb_line_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_UPDATED",nb_line_update_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_2);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"next_8");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_2", true);
end_Hash.put("tOracleOutput_2", System.currentTimeMillis());




/**
 * [tOracleOutput_2 end ] stop
 */






















	
	/**
	 * [tOracleSP_5 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_5";
	
	


	statement_tOracleSP_5.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tOracleSP_5", true);
end_Hash.put("tOracleSP_5", System.currentTimeMillis());




/**
 * [tOracleSP_5 end ] stop
 */























































































				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tSortRow_1_SortIn"
							globalMap.remove("tSortRow_1");
						
							//free memory for "tDenormalize_1_ArrayIn"
							globalMap.remove("tDenormalize_1");
						      	
					      			//free memory for "tJoin_8"
									globalMap.remove("tHash_row32");
				      			      	
					      			//free memory for "tJoin_7"
									globalMap.remove("tHash_row23");
				      			      	
					      			//free memory for "tJoin_6"
									globalMap.remove("tHash_row21");
				      			      	
					      			//free memory for "tJoin_4"
									globalMap.remove("tHash_row18");
				      			      	
					      			//free memory for "tJoin_2"
									globalMap.remove("tHash_row26");
				      			      	
					      			//free memory for "tJoin_5"
									globalMap.remove("tHash_row12");
				      			      	
					      			//free memory for "tJoin_3"
									globalMap.remove("tHash_row9");
				      			
				try{
					
	
	/**
	 * [tOracleInput_10 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 



/**
 * [tOracleInput_10 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_4 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 finally ] stop
 */

	
	/**
	 * [tJoin_3 finally ] start
	 */

	

	
	
	currentComponent="tJoin_3";
	
	

 



/**
 * [tJoin_3 finally ] stop
 */

	
	/**
	 * [tJavaRow_5 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 finally ] stop
 */

	
	/**
	 * [tJoin_5 finally ] start
	 */

	

	
	
	currentComponent="tJoin_5";
	
	

 



/**
 * [tJoin_5 finally ] stop
 */

	
	/**
	 * [tJavaRow_6 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 finally ] stop
 */

	
	/**
	 * [tJoin_2 finally ] start
	 */

	

	
	
	currentComponent="tJoin_2";
	
	

 



/**
 * [tJoin_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 finally ] stop
 */

	
	/**
	 * [tJoin_4 finally ] start
	 */

	

	
	
	currentComponent="tJoin_4";
	
	

 



/**
 * [tJoin_4 finally ] stop
 */

	
	/**
	 * [tJavaRow_7 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tJoin_6 finally ] start
	 */

	

	
	
	currentComponent="tJoin_6";
	
	

 



/**
 * [tJoin_6 finally ] stop
 */

	
	/**
	 * [tJoin_7 finally ] start
	 */

	

	
	
	currentComponent="tJoin_7";
	
	

 



/**
 * [tJoin_7 finally ] stop
 */

	
	/**
	 * [tJavaRow_11 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

 



/**
 * [tJavaRow_11 finally ] stop
 */

	
	/**
	 * [tNormalize_1 finally ] start
	 */

	

	
	
	currentComponent="tNormalize_1";
	
	

 



/**
 * [tNormalize_1 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tJoin_8 finally ] start
	 */

	

	
	
	currentComponent="tJoin_8";
	
	

 



/**
 * [tJoin_8 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tJavaRow_8 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tOracleSP_4 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	

 



/**
 * [tOracleSP_4 finally ] stop
 */

	
	/**
	 * [tDenormalize_1_DenormalizeOut finally ] start
	 */

	

	
	
		currentVirtualComponent = "tDenormalize_1";
	
	currentComponent="tDenormalize_1_DenormalizeOut";
	
	

 



/**
 * [tDenormalize_1_DenormalizeOut finally ] stop
 */

	
	/**
	 * [tDenormalize_1_ArrayIn finally ] start
	 */

	

	
	
		currentVirtualComponent = "tDenormalize_1";
	
	currentComponent="tDenormalize_1_ArrayIn";
	
	

 



/**
 * [tDenormalize_1_ArrayIn finally ] stop
 */

	
	/**
	 * [tJavaRow_12 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	

 



/**
 * [tJavaRow_12 finally ] stop
 */

	
	/**
	 * [tMap_8 finally ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 finally ] stop
 */

	
	/**
	 * [tJavaRow_10 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

 



/**
 * [tJavaRow_10 finally ] stop
 */

	
	/**
	 * [tJavaRow_9 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 finally ] stop
 */

	
	/**
	 * [tFilterRow_2 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_2";
	
	

 



/**
 * [tFilterRow_2 finally ] stop
 */

	
	/**
	 * [tMap_7 finally ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 finally ] stop
 */

	
	/**
	 * [tSortRow_1_SortOut finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut finally ] stop
 */

	
	/**
	 * [tSortRow_1_SortIn finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 



/**
 * [tSortRow_1_SortIn finally ] stop
 */

	
	/**
	 * [tJavaFlex_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";
	
	

 



/**
 * [tJavaFlex_1 finally ] stop
 */

	
	/**
	 * [tReplicate_1 finally ] start
	 */

	

	
	
	currentComponent="tReplicate_1";
	
	

 



/**
 * [tReplicate_1 finally ] stop
 */

	
	/**
	 * [tMap_11 finally ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 finally ] stop
 */

	
	/**
	 * [tOracleOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_2") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_2 = null;
                if ((pstmtToClose_tOracleOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_2")) != null) {
                    pstmtToClose_tOracleOutput_2.close();
                }
    }
 



/**
 * [tOracleOutput_2 finally ] stop
 */






















	
	/**
	 * [tOracleSP_5 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_5";
	
	

 



/**
 * [tOracleSP_5 finally ] stop
 */























































































				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_10_SUBPROCESS_STATE", 1);
	}
	


public static class row43Struct implements routines.system.IPersistableRow<row43Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public BigDecimal usuariosId;

				public BigDecimal getUsuariosId () {
					return this.usuariosId;
				}

				public Boolean usuariosIdIsNullable(){
				    return false;
				}
				public Boolean usuariosIdIsKey(){
				    return false;
				}
				public Integer usuariosIdLength(){
				    return 100;
				}
				public Integer usuariosIdPrecision(){
				    return 0;
				}
				public String usuariosIdDefault(){
				
					return null;
				
				}
				public String usuariosIdComment(){
				
				    return "";
				
				}
				public String usuariosIdPattern(){
				
					return "";
				
				}
				public String usuariosIdOriginalDbColumnName(){
				
					return "usuariosId";
				
				}

				
			    public BigDecimal uorgId;

				public BigDecimal getUorgId () {
					return this.uorgId;
				}

				public Boolean uorgIdIsNullable(){
				    return false;
				}
				public Boolean uorgIdIsKey(){
				    return false;
				}
				public Integer uorgIdLength(){
				    return 100;
				}
				public Integer uorgIdPrecision(){
				    return 0;
				}
				public String uorgIdDefault(){
				
					return null;
				
				}
				public String uorgIdComment(){
				
				    return "";
				
				}
				public String uorgIdPattern(){
				
					return "";
				
				}
				public String uorgIdOriginalDbColumnName(){
				
					return "uorgId";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.usuariosId = (BigDecimal) dis.readObject();
					
						this.uorgId = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
       			    	dos.writeObject(this.uorgId);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.usuariosId);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.uorgId);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("usuariosId="+String.valueOf(usuariosId));
		sb.append(",uorgId="+String.valueOf(uorgId));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row43Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_12Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_12_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row43Struct row43 = new row43Struct();




	
	/**
	 * [tAdvancedHash_row43 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row43", false);
		start_Hash.put("tAdvancedHash_row43", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row43";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row43");
					}
				
		int tos_count_tAdvancedHash_row43 = 0;
		

			   		// connection name:row43
			   		// source node:tOracleInput_12 - inputs:(after_tOracleInput_3) outputs:(row43,row43) | target node:tAdvancedHash_row43 - inputs:(row43) outputs:()
			   		// linked node: tMap_12 - inputs:(row16,row43) outputs:(next11)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row43 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_ROWS;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row43Struct> tHash_Lookup_row43 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row43Struct>getLookup(matchingModeEnum_row43);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row43", tHash_Lookup_row43);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row43 begin ] stop
 */



	
	/**
	 * [tOracleInput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_12", false);
		start_Hash.put("tOracleInput_12", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_12";
	
	
		int tos_count_tOracleInput_12 = 0;
		
	


	
		    int nb_line_tOracleInput_12 = 0;
		    java.sql.Connection conn_tOracleInput_12 = null;
				conn_tOracleInput_12 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_12 = false;
				boolean isConnectionWrapped_tOracleInput_12 = !(conn_tOracleInput_12 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_12.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_12 = null;
                if (isConnectionWrapped_tOracleInput_12) {
					unwrappedOraConn_tOracleInput_12 = conn_tOracleInput_12.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_12 != null) {
                        isTimeZoneNull_tOracleInput_12 = (unwrappedOraConn_tOracleInput_12.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_12 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_12).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_12) {
					java.sql.Statement stmtGetTZ_tOracleInput_12 = conn_tOracleInput_12.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_12 = stmtGetTZ_tOracleInput_12.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_12 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_12.next()) {
						sessionTimezone_tOracleInput_12 = rsGetTZ_tOracleInput_12.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_12 && unwrappedOraConn_tOracleInput_12 != null) {
                        unwrappedOraConn_tOracleInput_12.setSessionTimeZone(sessionTimezone_tOracleInput_12);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_12).setSessionTimeZone(sessionTimezone_tOracleInput_12);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_12 = conn_tOracleInput_12.createStatement();

		    String dbquery_tOracleInput_12 = "select \n	carga.usuarios_id AS usuariosId,\n    '200' as uorg_id\nfrom med_cargasmasivas carga\ninner join med_anexos a"
+"nex on anex.id=carga.anexos_id\nwhere carga.ESTREGISTRO_ID=1 and carga.id= " + context.carga_id+"";
		    

		    globalMap.put("tOracleInput_12_QUERY",dbquery_tOracleInput_12);

		    java.sql.ResultSet rs_tOracleInput_12 = null;

		    try {
		    	rs_tOracleInput_12 = stmt_tOracleInput_12.executeQuery(dbquery_tOracleInput_12);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_12 = rs_tOracleInput_12.getMetaData();
		    	int colQtyInRs_tOracleInput_12 = rsmd_tOracleInput_12.getColumnCount();

		    String tmpContent_tOracleInput_12 = null;
		    
		    
		    while (rs_tOracleInput_12.next()) {
		        nb_line_tOracleInput_12++;
		        
							if(colQtyInRs_tOracleInput_12 < 1) {
								row43.usuariosId = null;
							} else {
		                          
					if(rs_tOracleInput_12.getObject(1) != null) {
						row43.usuariosId = rs_tOracleInput_12.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_12 < 2) {
								row43.uorgId = null;
							} else {
		                          
					if(rs_tOracleInput_12.getObject(2) != null) {
						row43.uorgId = rs_tOracleInput_12.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_12 begin ] stop
 */
	
	/**
	 * [tOracleInput_12 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 


	tos_count_tOracleInput_12++;

/**
 * [tOracleInput_12 main ] stop
 */
	
	/**
	 * [tOracleInput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 



/**
 * [tOracleInput_12 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row43 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row43"
						
						);
					}
					


			   
			   

					row43Struct row43_HashRow = new row43Struct();
		   	   	   
				
				row43_HashRow.usuariosId = row43.usuariosId;
				
				row43_HashRow.uorgId = row43.uorgId;
				
			tHash_Lookup_row43.put(row43_HashRow);
			
            




 


	tos_count_tAdvancedHash_row43++;

/**
 * [tAdvancedHash_row43 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row43 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";
	
	

 



/**
 * [tAdvancedHash_row43 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row43 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";
	
	

 



/**
 * [tAdvancedHash_row43 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 



/**
 * [tOracleInput_12 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_12 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

}
}finally{
	if (rs_tOracleInput_12 != null) {
		rs_tOracleInput_12.close();
	}
	if (stmt_tOracleInput_12 != null) {
		stmt_tOracleInput_12.close();
	}
}

globalMap.put("tOracleInput_12_NB_LINE",nb_line_tOracleInput_12);
 

ok_Hash.put("tOracleInput_12", true);
end_Hash.put("tOracleInput_12", System.currentTimeMillis());




/**
 * [tOracleInput_12 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row43 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";
	
	

tHash_Lookup_row43.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row43");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row43", true);
end_Hash.put("tAdvancedHash_row43", System.currentTimeMillis());




/**
 * [tAdvancedHash_row43 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_12 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 



/**
 * [tOracleInput_12 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row43 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row43";
	
	

 



/**
 * [tAdvancedHash_row43 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_12_SUBPROCESS_STATE", 1);
	}
	


public static class logCargaStruct implements routines.system.IPersistableRow<logCargaStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal Id_;

				public BigDecimal getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return false;
				}
				public Boolean Id_IsKey(){
				    return true;
				}
				public Integer Id_Length(){
				    return 0;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return "SALUDSIS\".\"ISEQ$$_108067\".nextval";
				
				}
				public String Id_Comment(){
				
				    return "PK - Llave primaria";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				
			    public Object Log_;

				public Object getLog_ () {
					return this.Log_;
				}

				public Boolean Log_IsNullable(){
				    return true;
				}
				public Boolean Log_IsKey(){
				    return false;
				}
				public Integer Log_Length(){
				    return 4000;
				}
				public Integer Log_Precision(){
				    return 0;
				}
				public String Log_Default(){
				
					return null;
				
				}
				public String Log_Comment(){
				
				    return "Descripcion del log de errores";
				
				}
				public String Log_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Log_OriginalDbColumnName(){
				
					return "Log_";
				
				}

				
			    public String Extension_;

				public String getExtension_ () {
					return this.Extension_;
				}

				public Boolean Extension_IsNullable(){
				    return true;
				}
				public Boolean Extension_IsKey(){
				    return false;
				}
				public Integer Extension_Length(){
				    return null;
				}
				public Integer Extension_Precision(){
				    return null;
				}
				public String Extension_Default(){
				
					return null;
				
				}
				public String Extension_Comment(){
				
				    return "";
				
				}
				public String Extension_Pattern(){
				
					return "";
				
				}
				public String Extension_OriginalDbColumnName(){
				
					return "Extension_";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.Id_ == null) ? 0 : this.Id_.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final logCargaStruct other = (logCargaStruct) obj;
		
						if (this.Id_ == null) {
							if (other.Id_ != null)
								return false;
						
						} else if (!this.Id_.equals(other.Id_))
						
							return false;
					

		return true;
    }

	public void copyDataTo(logCargaStruct other) {

		other.Id_ = this.Id_;
	            other.Log_ = this.Log_;
	            other.Extension_ = this.Extension_;
	            
	}

	public void copyKeysDataTo(logCargaStruct other) {

		other.Id_ = this.Id_;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.Id_ = (BigDecimal) dis.readObject();
					
						this.Log_ = (Object) dis.readObject();
					
					this.Extension_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.Id_ = (BigDecimal) dis.readObject();
					
						this.Log_ = (Object) dis.readObject();
					
					this.Extension_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.Id_);
					
					// Object
				
       			    	dos.writeObject(this.Log_);
					
					// String
				
						writeString(this.Extension_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Id_);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.Log_);
					
					// String
				
						writeString(this.Extension_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id_="+String.valueOf(Id_));
		sb.append(",Log_="+String.valueOf(Log_));
		sb.append(",Extension_="+Extension_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(logCargaStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.Id_, other.Id_);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row39Struct implements routines.system.IPersistableRow<row39Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String NO_DATA;

				public String getNO_DATA () {
					return this.NO_DATA;
				}

				public Boolean NO_DATAIsNullable(){
				    return false;
				}
				public Boolean NO_DATAIsKey(){
				    return false;
				}
				public Integer NO_DATALength(){
				    return null;
				}
				public Integer NO_DATAPrecision(){
				    return null;
				}
				public String NO_DATADefault(){
				
					return null;
				
				}
				public String NO_DATAComment(){
				
				    return "";
				
				}
				public String NO_DATAPattern(){
				
					return "";
				
				}
				public String NO_DATAOriginalDbColumnName(){
				
					return "NO_DATA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.NO_DATA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.NO_DATA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.NO_DATA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.NO_DATA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NO_DATA="+NO_DATA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row39Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row39Struct row39 = new row39Struct();
logCargaStruct logCarga = new logCargaStruct();





	
	/**
	 * [tOracleSP_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_3", false);
		start_Hash.put("tOracleSP_3", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"logCarga");
					}
				
		int tos_count_tOracleSP_3 = 0;
		

	java.sql.Connection connection_tOracleSP_3 = null;
	connection_tOracleSP_3 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_3 = connection_tOracleSP_3.prepareCall("{call " + "MED.UpdLogCargaMasiva" + "(?,?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_3;
String tmpString_tOracleSP_3;

 



/**
 * [tOracleSP_3 begin ] stop
 */



	
	/**
	 * [tMap_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_10", false);
		start_Hash.put("tMap_10", System.currentTimeMillis());
		
	
	currentComponent="tMap_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row39");
					}
				
		int tos_count_tMap_10 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_10__Struct  {
}
Var__tMap_10__Struct Var__tMap_10 = new Var__tMap_10__Struct();
// ###############################

// ###############################
// # Outputs initialization
logCargaStruct logCarga_tmp = new logCargaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_10 begin ] stop
 */



	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
		int tos_count_tJava_1 = 0;
		


context.Salida = globalMap.get("archivo_salida");
//System.out.println(context.Salida);
 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_10 main ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row39"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_10 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_10 = false;
		boolean mainRowRejected_tMap_10 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_10__Struct Var = Var__tMap_10;// ###############################
        // ###############################
        // # Output tables

logCarga = null;


// # Output table : 'logCarga'
logCarga_tmp.Id_ = context.carga_id ;
logCarga_tmp.Log_ = ((ByteArrayOutputStream)context.Salida).toByteArray(); ;
logCarga_tmp.Extension_ = "xlsx";
logCarga = logCarga_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_10 = false;










 


	tos_count_tMap_10++;

/**
 * [tMap_10 main ] stop
 */
	
	/**
	 * [tMap_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_begin ] stop
 */
// Start of branch "logCarga"
if(logCarga != null) { 



	
	/**
	 * [tOracleSP_3 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"logCarga"
						
						);
					}
					

			// code for the argument 1 (Id_) of type 'IN AUTOMAPPING'
                        statement_tOracleSP_3.setBigDecimal(1, logCarga.Id_);
			// code for the argument 2 (Log_) of type 'IN AUTOMAPPING'
    					if (logCarga.Log_ == null) {
    						statement_tOracleSP_3.setNull(2, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_3.setObject(2, logCarga.Log_);
    					}
    					
			// code for the argument 3 (Extension_) of type 'IN AUTOMAPPING'
    					if (logCarga.Extension_ == null) {
    						statement_tOracleSP_3.setNull(3, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_3.setString(3, logCarga.Extension_);
    					}
    					
		statement_tOracleSP_3.execute();
		

 


	tos_count_tOracleSP_3++;

/**
 * [tOracleSP_3 main ] stop
 */
	
	/**
	 * [tOracleSP_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	

 



/**
 * [tOracleSP_3 process_data_begin ] stop
 */
	
	/**
	 * [tOracleSP_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	

 



/**
 * [tOracleSP_3 process_data_end ] stop
 */

} // End of branch "logCarga"




	
	/**
	 * [tMap_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_end ] stop
 */



	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());




/**
 * [tJava_1 end ] stop
 */

	
	/**
	 * [tMap_10 end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row39");
			  	}
			  	
 

ok_Hash.put("tMap_10", true);
end_Hash.put("tMap_10", System.currentTimeMillis());




/**
 * [tMap_10 end ] stop
 */

	
	/**
	 * [tOracleSP_3 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	


	statement_tOracleSP_3.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"logCarga");
			  	}
			  	
 

ok_Hash.put("tOracleSP_3", true);
end_Hash.put("tOracleSP_3", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk10", 0, "ok");
				}
				tOracleClose_1Process(globalMap);



/**
 * [tOracleSP_3 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk2", 0, "ok");
								} 
							
							tFixedFlowInput_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */

	
	/**
	 * [tMap_10 finally ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 finally ] stop
 */

	
	/**
	 * [tOracleSP_3 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	

 



/**
 * [tOracleSP_3 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public void tOracleClose_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleClose_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tOracleClose_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleClose_1", false);
		start_Hash.put("tOracleClose_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleClose_1";
	
	
		int tos_count_tOracleClose_1 = 0;
		

 



/**
 * [tOracleClose_1 begin ] stop
 */
	
	/**
	 * [tOracleClose_1 main ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

	java.sql.Connection conn_tOracleClose_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
	
	if(conn_tOracleClose_1 != null && !conn_tOracleClose_1.isClosed())
	{
		
			conn_tOracleClose_1.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_tOracleConnection_1"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}

 


	tos_count_tOracleClose_1++;

/**
 * [tOracleClose_1 main ] stop
 */
	
	/**
	 * [tOracleClose_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleClose_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleClose_1 end ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 

ok_Hash.put("tOracleClose_1", true);
end_Hash.put("tOracleClose_1", System.currentTimeMillis());




/**
 * [tOracleClose_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleClose_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleClose_1_SUBPROCESS_STATE", 1);
	}
	


public static class row36Struct implements routines.system.IPersistableRow<row36Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String Result;

				public String getResult () {
					return this.Result;
				}

				public Boolean ResultIsNullable(){
				    return true;
				}
				public Boolean ResultIsKey(){
				    return false;
				}
				public Integer ResultLength(){
				    return null;
				}
				public Integer ResultPrecision(){
				    return null;
				}
				public String ResultDefault(){
				
					return null;
				
				}
				public String ResultComment(){
				
				    return "";
				
				}
				public String ResultPattern(){
				
					return "";
				
				}
				public String ResultOriginalDbColumnName(){
				
					return "Result";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.Result = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.Result = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Result,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Result,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Result="+Result);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row36Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row36Struct row36 = new row36Struct();




	
	/**
	 * [tBufferOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tBufferOutput_2", false);
		start_Hash.put("tBufferOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tBufferOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row36");
					}
				
		int tos_count_tBufferOutput_2 = 0;
		

 



/**
 * [tBufferOutput_2 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_2", false);
		start_Hash.put("tFixedFlowInput_2", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_2";
	
	
		int tos_count_tFixedFlowInput_2 = 0;
		

	    for (int i_tFixedFlowInput_2 = 0 ; i_tFixedFlowInput_2 < 1 ; i_tFixedFlowInput_2++) {
	                	            	
    	            		row36.Result = context.result;
    	            	

 



/**
 * [tFixedFlowInput_2 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 


	tos_count_tFixedFlowInput_2++;

/**
 * [tFixedFlowInput_2 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tBufferOutput_2 main ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row36"
						
						);
					}
					



String[] row_tBufferOutput_2=new String[]{"",};		
	    if(row36.Result != null){
	        
	            row_tBufferOutput_2[0] = row36.Result;
	                        			    
	    }else{
	    	row_tBufferOutput_2[0] = null;
	    }
	globalBuffer.add(row_tBufferOutput_2);	
	
 


	tos_count_tBufferOutput_2++;

/**
 * [tBufferOutput_2 main ] stop
 */
	
	/**
	 * [tBufferOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	

 



/**
 * [tBufferOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tBufferOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	

 



/**
 * [tBufferOutput_2 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

        }
        globalMap.put("tFixedFlowInput_2_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_2", true);
end_Hash.put("tFixedFlowInput_2", System.currentTimeMillis());




/**
 * [tFixedFlowInput_2 end ] stop
 */

	
	/**
	 * [tBufferOutput_2 end ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row36");
			  	}
			  	
 

ok_Hash.put("tBufferOutput_2", true);
end_Hash.put("tBufferOutput_2", System.currentTimeMillis());




/**
 * [tBufferOutput_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_2 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 finally ] stop
 */

	
	/**
	 * [tBufferOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	

 



/**
 * [tBufferOutput_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row46Struct implements routines.system.IPersistableRow<row46Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row46Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class mailStruct implements routines.system.IPersistableRow<mailStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return null;
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return null;
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return null;
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return null;
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(mailStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class salidaStruct implements routines.system.IPersistableRow<salidaStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return null;
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return null;
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return null;
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return null;
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(salidaStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row45Struct implements routines.system.IPersistableRow<row45Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return null;
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return null;
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return null;
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return null;
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row45Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tLogCatcher_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row45Struct row45 = new row45Struct();
salidaStruct salida = new salidaStruct();
salidaStruct mail = salida;
row46Struct row46 = new row46Struct();







	
	/**
	 * [tJava_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_3", false);
		start_Hash.put("tJava_3", System.currentTimeMillis());
		
	
	currentComponent="tJava_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row46");
					}
				
		int tos_count_tJava_3 = 0;
		


context.FECHA_EJECUCION = TalendDate.getDate("DD/MM/YYYY");
context.ESTADO_EXEC = "Interrumpido";


 



/**
 * [tJava_3 begin ] stop
 */



	
	/**
	 * [tRunJob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRunJob_1", false);
		start_Hash.put("tRunJob_1", System.currentTimeMillis());
		
	
	currentComponent="tRunJob_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"mail");
					}
				
		int tos_count_tRunJob_1 = 0;
		
class DealChildJobLibrary_tRunJob_1 {

	public String replaceJarPathsFromCrcMap(String originalClassPathLine) throws java.lang.Exception {
		String classPathLine = "";
		String crcMapPath = new java.io.File("../crcMap").getCanonicalPath();
		if (isNeedAddLibsPath( crcMapPath)) {
			java.util.Map<String, String> crcMap = null;
			java.io.ObjectInputStream ois = new java.io.ObjectInputStream(new java.io.FileInputStream(crcMapPath)) {
				@Override
				public Class<?> resolveClass(java.io.ObjectStreamClass desc) throws java.io.IOException, ClassNotFoundException {
					if(!"java.util.HashMap".equals(desc.getName())) {
						throw new java.io.InvalidClassException("Unauthorized deserialization attempt : " + desc.getName());
					}
					return super.resolveClass(desc);
				}
			};
			crcMap = (java.util.Map<String, String>) ois.readObject();
			ois.close();
			classPathLine = addLibsPath(originalClassPathLine, crcMap);
		} else {
			classPathLine = originalClassPathLine;
		}
		return classPathLine;
	}
	
	private boolean isNeedAddLibsPath(String crcMapPath) {
		if (!(new java.io.File(crcMapPath).exists())) {// when not use cache
			return false;
		}
		return true;
	}
	
	
	private String addLibsPath(String line, java.util.Map<String, String> crcMap) {
		for (java.util.Map.Entry<String, String> entry : crcMap.entrySet()) {
			line = adaptLibPaths(line, entry);
		}
		return line;
	}
	
	private String adaptLibPaths(String line, java.util.Map.Entry<String, String> entry) {
		String jarName = entry.getValue();
		String crc = entry.getKey();
		String libStringFinder = "../lib/" + jarName;
		if (line.contains(libStringFinder)) {
			line = line.replace(libStringFinder, "../../../cache/lib/" + crc + "/" + jarName);
		} else if (line.contains(":$ROOT_PATH/" + jarName + ":")) {
			line = line.replace(":$ROOT_PATH/" + jarName + ":", ":$ROOT_PATH/../../../cache/lib/" + crc + "/" + jarName + ":");
		} else if (line.contains(";" + jarName + ";")) {
			line = line.replace(";" + jarName + ";", ";../../../cache/lib/" + crc + "/" + jarName + ";");
		}
		return line;
	}
	
}
	DealChildJobLibrary_tRunJob_1 dealChildJobLibrary_tRunJob_1 = new DealChildJobLibrary_tRunJob_1();

	class JVMArgumentHelper_tRunJob_1 {
		
		
		
		private void addClasspath(java.util.List<String> target_argument_list, String job_origin_classpath) {
			
			String extra_classpath = null;
			String path_separator = System.getProperty("path.separator");
			if (path_separator != null && path_separator.length() > 1) {
				throw new RuntimeException("path separator should be single character");
			}
			
			if(extra_classpath!=null && !extra_classpath.isEmpty()) {
				if(extra_classpath.endsWith(path_separator)) {
					target_argument_list.add(extra_classpath+job_origin_classpath);
				} else if(extra_classpath.contains(path_separator)) {
					target_argument_list.add(concatStr(extra_classpath, path_separator, job_origin_classpath));
				} else if(extra_classpath.endsWith(":")) {
					target_argument_list.add(extra_classpath.replace(":", path_separator)+job_origin_classpath);
				} else if(extra_classpath.endsWith(";")) {
					target_argument_list.add(extra_classpath.replace(";", path_separator)+job_origin_classpath);
				} else if(extra_classpath.contains(":")) {
					target_argument_list.add(concatStr(extra_classpath.replace(":", path_separator), path_separator, job_origin_classpath));
				} else if(extra_classpath.contains(";")) {
					target_argument_list.add(concatStr(extra_classpath.replace(";", path_separator), path_separator, job_origin_classpath));
				} else {
					target_argument_list.add(concatStr(extra_classpath, path_separator, job_origin_classpath));
				}
				return;
			}
			
			target_argument_list.add(job_origin_classpath);
		}
		
		private String concatStr(String s1, String s2, String s3) {
			java.lang.StringBuilder strB = new java.lang.StringBuilder();
			strB.append(s1).append(s2).append(s3);
			return strB.toString();
		}
		
		public void addArgumentsTo(java.util.List<String> target_argument_list, String argument_from_child) {
			addArgumentsTo(target_argument_list, argument_from_child, false);
		}
		
		public void addArgumentsTo(java.util.List<String> target_argument_list, String argument_from_child, boolean isCP) {
			if(isCP) {
				addClasspath(target_argument_list, argument_from_child);
				return;
			}
		
			
			
			
			target_argument_list.add(argument_from_child);
			
		}
		
		
	}
	
	JVMArgumentHelper_tRunJob_1 jvm_argument_helper_tRunJob_1 = new JVMArgumentHelper_tRunJob_1();
	
	String audit_jar_path_tRunJob_1 = System.getProperty("classpath.extended");
	

 



/**
 * [tRunJob_1 begin ] stop
 */



	
	/**
	 * [tFileOutputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_1", false);
		start_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"salida");
					}
				
		int tos_count_tFileOutputDelimited_1 = 0;
		

String fileName_tFileOutputDelimited_1 = "";
    fileName_tFileOutputDelimited_1 = (new java.io.File(context.LOGS_ERROR)).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_1 = null;
    String extension_tFileOutputDelimited_1 = null;
    String directory_tFileOutputDelimited_1 = null;
    if((fileName_tFileOutputDelimited_1.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") < fileName_tFileOutputDelimited_1.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        }
        directory_tFileOutputDelimited_1 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_1 = true;
    java.io.File filetFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
    globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
        if(filetFileOutputDelimited_1.exists()){
            isFileGenerated_tFileOutputDelimited_1 = false;
        }
            int nb_line_tFileOutputDelimited_1 = 0;
            int splitedFileNo_tFileOutputDelimited_1 = 0;
            int currentRow_tFileOutputDelimited_1 = 0;

            final String OUT_DELIM_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_1:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_1:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_1 != null && directory_tFileOutputDelimited_1.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_1 = new java.io.File(directory_tFileOutputDelimited_1);
                        if(!dir_tFileOutputDelimited_1.exists()) {
                            dir_tFileOutputDelimited_1.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_1 = null;

                        outtFileOutputDelimited_1 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_1, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_1", outtFileOutputDelimited_1);
                                    if(filetFileOutputDelimited_1.length()==0){
                                        outtFileOutputDelimited_1.write("moment");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("pid");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("root_pid");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("father_pid");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("project");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("job");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("context");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("priority");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("type");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("origin");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("message");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("code");
                                        outtFileOutputDelimited_1.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

 



/**
 * [tFileOutputDelimited_1 begin ] stop
 */



	
	/**
	 * [tMap_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_9", false);
		start_Hash.put("tMap_9", System.currentTimeMillis());
		
	
	currentComponent="tMap_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row45");
					}
				
		int tos_count_tMap_9 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_9__Struct  {
	String var1;
	String var2;
}
Var__tMap_9__Struct Var__tMap_9 = new Var__tMap_9__Struct();
// ###############################

// ###############################
// # Outputs initialization
salidaStruct salida_tmp = new salidaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_9 begin ] stop
 */



	
	/**
	 * [tLogCatcher_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogCatcher_1", false);
		start_Hash.put("tLogCatcher_1", System.currentTimeMillis());
		
	
	currentComponent="tLogCatcher_1";
	
	
		int tos_count_tLogCatcher_1 = 0;
		

try {
	for (LogCatcherUtils.LogCatcherMessage lcm : tLogCatcher_1.getMessages()) {
		row45.type = lcm.getType();
		row45.origin = (lcm.getOrigin()==null || lcm.getOrigin().length()<1 ? null : lcm.getOrigin());
		row45.priority = lcm.getPriority();
		row45.message = lcm.getMessage();
		row45.code = lcm.getCode();
		
		row45.moment = java.util.Calendar.getInstance().getTime();
	
    	row45.pid = pid;
		row45.root_pid = rootPid;
		row45.father_pid = fatherPid;
	
    	row45.project = projectName;
    	row45.job = jobName;
    	row45.context = contextStr;
    		
 



/**
 * [tLogCatcher_1 begin ] stop
 */
	
	/**
	 * [tLogCatcher_1 main ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 


	tos_count_tLogCatcher_1++;

/**
 * [tLogCatcher_1 main ] stop
 */
	
	/**
	 * [tLogCatcher_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_9 main ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row45"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_9 = false;
		boolean mainRowRejected_tMap_9 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_9__Struct Var = Var__tMap_9;
Var.var1 = context.FECHA_EJECUCION = TalendDate.getDate("DD/MM/YYYY"); ;
Var.var2 = context.ESTADO_EXEC = "Interrumpido";;// ###############################
        // ###############################
        // # Output tables

salida = null;


// # Output table : 'salida'
salida_tmp.moment = row45.moment;
salida_tmp.pid = row45.pid;
salida_tmp.root_pid = row45.root_pid;
salida_tmp.father_pid = row45.father_pid;
salida_tmp.project = row45.project;
salida_tmp.job = row45.job;
salida_tmp.context = row45.context;
salida_tmp.priority = row45.priority;
salida_tmp.type = row45.type;
salida_tmp.origin = row45.origin;
salida_tmp.message = row45.message;
salida_tmp.code = row45.code;
salida = salida_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_9 = false;










 


	tos_count_tMap_9++;

/**
 * [tMap_9 main ] stop
 */
	
	/**
	 * [tMap_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_begin ] stop
 */
// Start of branch "salida"
if(salida != null) { 



	
	/**
	 * [tFileOutputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"salida"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_1 = new StringBuilder();
                            if(salida.moment != null) {
                        sb_tFileOutputDelimited_1.append(
                            FormatterUtils.format_Date(salida.moment, "yyyy-MM-dd HH:mm:ss")
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.pid != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.pid
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.root_pid != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.root_pid
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.father_pid != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.father_pid
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.project != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.project
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.job != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.job
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.context != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.context
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.priority != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.priority
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.type != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.type
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.origin != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.origin
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.message != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.message
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(salida.code != null) {
                        sb_tFileOutputDelimited_1.append(
                            salida.code
                        );
                            }
                    sb_tFileOutputDelimited_1.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);


                    nb_line_tFileOutputDelimited_1++;
                    resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

                        outtFileOutputDelimited_1.write(sb_tFileOutputDelimited_1.toString());




 
     mail = salida;


	tos_count_tFileOutputDelimited_1++;

/**
 * [tFileOutputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_begin ] stop
 */

	
	/**
	 * [tRunJob_1 main ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"mail"
						
						);
					}
					
	java.util.List<String> paraList_tRunJob_1 = new java.util.ArrayList<String>();
	
			
			String osName_tRunJob_1 = System.getProperty("os.name");
			if (osName_tRunJob_1 != null && osName_tRunJob_1.toLowerCase(java.util.Locale.US).startsWith("win")){
				
						paraList_tRunJob_1.add("java");
						String m2 = System.getProperty("talend.component.manager.m2.repository");
						if (m2 != null){
							paraList_tRunJob_1.add("-Dtalend.component.manager.m2.repository=" + m2);
						}
						
						if (Boolean.getBoolean("propagateLoggingConfiguration")) {
							String log4j1_config_tRunJob_1 = System.getProperty("log4j.configuration");
							if (log4j1_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configuration=" + log4j1_config_tRunJob_1);
							}
							String log4j2_config_tRunJob_1 = System.getProperty("log4j.configurationFile");
							if (log4j2_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configurationFile=" + log4j2_config_tRunJob_1);
							}
							if (log4j1_config_tRunJob_1 != null || log4j2_config_tRunJob_1 != null) {
								paraList_tRunJob_1.add("-DpropagateLoggingConfiguration=true");
							}
						}
						
						if(enableLogStash){
							System.getProperties().stringPropertyNames().stream()
								.filter(it -> it.startsWith("audit."))
								.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
						}
							
						System.getProperties().stringPropertyNames().stream()
							.filter(it -> it.startsWith("runtime.lineage.") || "classpath.extended".equals(it))
							.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
					
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Dtalend.component.manager.m2.repository=../lib");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xms256M");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xmx1024M");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-cp");
		      				
              					String classpath_tRunJob_1_5 = ".;../lib/routines.jar;../lib/log4j-slf4j-impl-2.17.1.jar;../lib/log4j-api-2.17.1.jar;../lib/log4j-core-2.17.1.jar;../lib/activation-1.1.jar;../lib/jakarta.mail-1.6.7.jar;../lib/xpathutil-1.0.0.jar;../lib/slf4j-api-1.7.34.jar;../lib/crypto-utils-7.1.16.jar;../lib/jboss-marshalling-2.0.12.Final.jar;../lib/dom4j-2.1.3.jar;../lib/jaxen-1.1.6.jar;mail_1_5.jar;";
              					
              					if(audit_jar_path_tRunJob_1!=null && !audit_jar_path_tRunJob_1.isEmpty()) {
		      						classpath_tRunJob_1_5 += audit_jar_path_tRunJob_1;
		      					}
		      					
	        					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, dealChildJobLibrary_tRunJob_1.replaceJarPathsFromCrcMap(classpath_tRunJob_1_5), true);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "med_cargue_productos_comerciales.mail_1_5.Mail");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_pid="+pid);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--root_pid="+rootPid);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_node=tRunJob_1");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--context=Default");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "%*");
		      				
			} else {
	      		
						paraList_tRunJob_1.add("java");
						String m2 = System.getProperty("talend.component.manager.m2.repository");
						if (m2 != null){
							paraList_tRunJob_1.add("-Dtalend.component.manager.m2.repository=" + m2);
						}
						
						if (Boolean.getBoolean("propagateLoggingConfiguration")) {
							String log4j1_config_tRunJob_1 = System.getProperty("log4j.configuration");
							if (log4j1_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configuration=" + log4j1_config_tRunJob_1);
							}
							String log4j2_config_tRunJob_1 = System.getProperty("log4j.configurationFile");
							if (log4j2_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configurationFile=" + log4j2_config_tRunJob_1);
							}
							if (log4j1_config_tRunJob_1 != null || log4j2_config_tRunJob_1 != null) {
								paraList_tRunJob_1.add("-DpropagateLoggingConfiguration=true");
							}
						}
						
						if(enableLogStash){
							System.getProperties().stringPropertyNames().stream()
								.filter(it -> it.startsWith("audit."))
								.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
						}
							
						System.getProperties().stringPropertyNames().stream()
							.filter(it -> it.startsWith("runtime.lineage.") || "classpath.extended".equals(it))
							.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
					
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Dtalend.component.manager.m2.repository=../lib");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xms256M");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xmx1024M");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-cp");
		      				
		      					String classpath_tRunJob_1_5 = ".:$ROOT_PATH:$ROOT_PATH/../lib/routines.jar:$ROOT_PATH/../lib/log4j-slf4j-impl-2.17.1.jar:$ROOT_PATH/../lib/log4j-api-2.17.1.jar:$ROOT_PATH/../lib/log4j-core-2.17.1.jar:$ROOT_PATH/../lib/activation-1.1.jar:$ROOT_PATH/../lib/jakarta.mail-1.6.7.jar:$ROOT_PATH/../lib/xpathutil-1.0.0.jar:$ROOT_PATH/../lib/slf4j-api-1.7.34.jar:$ROOT_PATH/../lib/crypto-utils-7.1.16.jar:$ROOT_PATH/../lib/jboss-marshalling-2.0.12.Final.jar:$ROOT_PATH/../lib/dom4j-2.1.3.jar:$ROOT_PATH/../lib/jaxen-1.1.6.jar:$ROOT_PATH/mail_1_5.jar:";
		      					
		      					if(audit_jar_path_tRunJob_1!=null && !audit_jar_path_tRunJob_1.isEmpty()) {
		      						classpath_tRunJob_1_5 += audit_jar_path_tRunJob_1;
		      					}
		      					
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, dealChildJobLibrary_tRunJob_1.replaceJarPathsFromCrcMap(classpath_tRunJob_1_5).replace("$ROOT_PATH",System.getProperty("user.dir")), true);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "med_cargue_productos_comerciales.mail_1_5.Mail");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_pid="+pid);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--root_pid="+rootPid);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_node=tRunJob_1");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--context=Default");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "$@");
		      				
			}

			
			
	  	
		if(enableLogStash){
			paraList_tRunJob_1.add("--audit.enabled="+enableLogStash);
		}
		
	//for feature:10589
	
		paraList_tRunJob_1.add("--stat_port=" + null);
	

	if(resuming_logs_dir_path != null){
		paraList_tRunJob_1.add("--resuming_logs_dir_path=" + resuming_logs_dir_path);
	}
	String childResumePath_tRunJob_1 = ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path);
	String tRunJobName_tRunJob_1 = ResumeUtil.getRighttRunJob(resuming_checkpoint_path);
	if("tRunJob_1".equals(tRunJobName_tRunJob_1) && childResumePath_tRunJob_1 != null){
		paraList_tRunJob_1.add("--resuming_checkpoint_path=" + ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path));
	}
	paraList_tRunJob_1.add("--parent_part_launcher=JOB:" + jobName + "/NODE:tRunJob_1");
	
	java.util.Map<String, Object> parentContextMap_tRunJob_1 = new java.util.HashMap<String, Object>();

	

	Object obj_tRunJob_1 = null;

	
		obj_tRunJob_1 = mail.moment;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param moment=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param moment=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param moment=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("moment", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.project;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param project=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param project=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param project=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("project", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.job;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param job=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param job=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param job=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("job", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.context;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param context=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param context=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param context=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("context", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.origin;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param origin=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param origin=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param origin=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("origin", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.message;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param message=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param message=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param message=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("message", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.pid;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param pid=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param pid=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param pid=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("pid", obj_tRunJob_1);
	
	
				class ConsoleHelper_tRunJob_1 {
					private Thread getNormalThread(Process process) {
						return new Thread() {
							public void run() {
								try {
									java.io.BufferedReader reader = new java.io.BufferedReader(
											new java.io.InputStreamReader(
													process.getInputStream()));
									String line = "";
									try {
										while ((line = reader.readLine()) != null) {
											System.out.println(line);
										}
									} finally {
										reader.close();
									}
								} catch (java.io.IOException ioe) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",ioe.getMessage());
						            
									ioe.printStackTrace();
								}
							}
						};
					}

					private Thread getErrorThread(Process process, StringBuffer sb) {
						return new Thread() {
							public void run() {
								try {
									java.io.BufferedReader reader = new java.io.BufferedReader(
											new java.io.InputStreamReader(
													process.getErrorStream()));
									String line = "";
									try {
										while ((line = reader.readLine()) != null) {
											sb.append(line)
													.append("\n");
										}
									} finally {
										reader.close();
									}
								} catch (java.io.IOException ioe) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",ioe.getMessage());
						            
									ioe.printStackTrace();
								}
							}
						};
					}
				}
				ConsoleHelper_tRunJob_1 consoleHelper_tRunJob_1 = new ConsoleHelper_tRunJob_1();

		Runtime runtime_tRunJob_1 = Runtime.getRuntime();
		Process ps_tRunJob_1 = null;
		
		//0 indicates normal termination
        int result_tRunJob_1;
        StringBuffer errorMsg_tRunJob_1 = new StringBuffer();
        try {
            ps_tRunJob_1 = runtime_tRunJob_1.exec((String[])paraList_tRunJob_1.toArray(new String[paraList_tRunJob_1.size()]));

            Thread normal_tRunJob_1 = consoleHelper_tRunJob_1.getNormalThread(ps_tRunJob_1);
            normal_tRunJob_1.start();

            Thread error_tRunJob_1 = consoleHelper_tRunJob_1.getErrorThread(ps_tRunJob_1, errorMsg_tRunJob_1);
            error_tRunJob_1.start();

            result_tRunJob_1 = ps_tRunJob_1.waitFor();
            normal_tRunJob_1.join();
            error_tRunJob_1.join();
        } catch (ThreadDeath tde) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",tde.getMessage());
            ps_tRunJob_1.destroy();
            throw tde;
        }

		globalMap.put("tRunJob_1_CHILD_RETURN_CODE",result_tRunJob_1);
		if(result_tRunJob_1 != 0){
   			globalMap.put("tRunJob_1_CHILD_EXCEPTION_STACKTRACE",errorMsg_tRunJob_1.toString());
			  
	    		throw new RuntimeException("Child job returns " + result_tRunJob_1 + ". It doesn't terminate normally.\n" + errorMsg_tRunJob_1.toString());
			
  		}

		

 


	tos_count_tRunJob_1++;

/**
 * [tRunJob_1 main ] stop
 */
	
	/**
	 * [tRunJob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

 



/**
 * [tRunJob_1 process_data_begin ] stop
 */

	
	/**
	 * [tJava_3 main ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row46"
						
						);
					}
					

 


	tos_count_tJava_3++;

/**
 * [tJava_3 main ] stop
 */
	
	/**
	 * [tJava_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_begin ] stop
 */
	
	/**
	 * [tJava_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_end ] stop
 */



	
	/**
	 * [tRunJob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

 



/**
 * [tRunJob_1 process_data_end ] stop
 */



	
	/**
	 * [tFileOutputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_end ] stop
 */

} // End of branch "salida"




	
	/**
	 * [tMap_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_end ] stop
 */



	
	/**
	 * [tLogCatcher_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_end ] stop
 */
	
	/**
	 * [tLogCatcher_1 end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	
	}
} catch (Exception e_tLogCatcher_1) {
globalMap.put("tLogCatcher_1_ERROR_MESSAGE",e_tLogCatcher_1.getMessage());
	logIgnoredError(String.format("tLogCatcher_1 - tLogCatcher failed to process log message(s) due to internal error: %s", e_tLogCatcher_1), e_tLogCatcher_1);
}

 

ok_Hash.put("tLogCatcher_1", true);
end_Hash.put("tLogCatcher_1", System.currentTimeMillis());




/**
 * [tLogCatcher_1 end ] stop
 */

	
	/**
	 * [tMap_9 end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row45");
			  	}
			  	
 

ok_Hash.put("tMap_9", true);
end_Hash.put("tMap_9", System.currentTimeMillis());




/**
 * [tMap_9 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	



		
			
					if(outtFileOutputDelimited_1!=null) {
						outtFileOutputDelimited_1.flush();
						outtFileOutputDelimited_1.close();
					}
				
				globalMap.put("tFileOutputDelimited_1_NB_LINE",nb_line_tFileOutputDelimited_1);
				globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_1", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"salida");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_1", true);
end_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_1 end ] stop
 */

	
	/**
	 * [tRunJob_1 end ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"mail");
			  	}
			  	
 

ok_Hash.put("tRunJob_1", true);
end_Hash.put("tRunJob_1", System.currentTimeMillis());




/**
 * [tRunJob_1 end ] stop
 */

	
	/**
	 * [tJava_3 end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row46");
			  	}
			  	
 

ok_Hash.put("tJava_3", true);
end_Hash.put("tJava_3", System.currentTimeMillis());




/**
 * [tJava_3 end ] stop
 */












				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tLogCatcher_1 finally ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 finally ] stop
 */

	
	/**
	 * [tMap_9 finally ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_1") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_1 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_1");
						if(outtFileOutputDelimited_1!=null) {
							outtFileOutputDelimited_1.flush();
							outtFileOutputDelimited_1.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_1 finally ] stop
 */

	
	/**
	 * [tRunJob_1 finally ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	
	
 



/**
 * [tRunJob_1 finally ] stop
 */

	
	/**
	 * [tJava_3 finally ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";
	
	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk3", 0, "ok");
				}
				tOracleInput_11Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	


public static class row41Struct implements routines.system.IPersistableRow<row41Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String CODIGODEBARRAS;

				public String getCODIGODEBARRAS () {
					return this.CODIGODEBARRAS;
				}

				public Boolean CODIGODEBARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGODEBARRASIsKey(){
				    return false;
				}
				public Integer CODIGODEBARRASLength(){
				    return 20;
				}
				public Integer CODIGODEBARRASPrecision(){
				    return 0;
				}
				public String CODIGODEBARRASDefault(){
				
					return null;
				
				}
				public String CODIGODEBARRASComment(){
				
				    return "";
				
				}
				public String CODIGODEBARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGODEBARRASOriginalDbColumnName(){
				
					return "CODIGODEBARRAS";
				
				}

				
			    public String OBSERVACIONES;

				public String getOBSERVACIONES () {
					return this.OBSERVACIONES;
				}

				public Boolean OBSERVACIONESIsNullable(){
				    return true;
				}
				public Boolean OBSERVACIONESIsKey(){
				    return false;
				}
				public Integer OBSERVACIONESLength(){
				    return 500;
				}
				public Integer OBSERVACIONESPrecision(){
				    return 0;
				}
				public String OBSERVACIONESDefault(){
				
					return null;
				
				}
				public String OBSERVACIONESComment(){
				
				    return "";
				
				}
				public String OBSERVACIONESPattern(){
				
					return "";
				
				}
				public String OBSERVACIONESOriginalDbColumnName(){
				
					return "OBSERVACIONES";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.CODIGODEBARRAS = readString(dis);
					
					this.OBSERVACIONES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.CODIGODEBARRAS = readString(dis);
					
					this.OBSERVACIONES = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGODEBARRAS,dos);
					
					// String
				
						writeString(this.OBSERVACIONES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGODEBARRAS,dos);
					
					// String
				
						writeString(this.OBSERVACIONES,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGODEBARRAS="+CODIGODEBARRAS);
		sb.append(",OBSERVACIONES="+OBSERVACIONES);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row41Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row41Struct row41 = new row41Struct();




	
	/**
	 * [tFileOutputExcel_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_5", false);
		start_Hash.put("tFileOutputExcel_5", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row41");
					}
				
		int tos_count_tFileOutputExcel_5 = 0;
		


		
		int columnIndex_tFileOutputExcel_5 = 0;
		boolean headerIsInserted_tFileOutputExcel_5 = false;
		
		
		int nb_line_tFileOutputExcel_5 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_5 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_5.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_5.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_5.setSheet("LOG ERRORES PRODUCTOS COMERCIALES");
		xlsxTool_tFileOutputExcel_5.setAppend(false,false, false);
		xlsxTool_tFileOutputExcel_5.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_5.setXY(false,0,0,false);
		
		xlsxTool_tFileOutputExcel_5.prepareStream();
		
		xlsxTool_tFileOutputExcel_5.setFont("");
		
		if (xlsxTool_tFileOutputExcel_5.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_5.addRow();
		
		xlsxTool_tFileOutputExcel_5.addCellValue("CODIGODEBARRAS");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("OBSERVACIONES");
		
		nb_line_tFileOutputExcel_5++;
		headerIsInserted_tFileOutputExcel_5 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_5 begin ] stop
 */



	
	/**
	 * [tOracleInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_11", false);
		start_Hash.put("tOracleInput_11", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_11";
	
	
		int tos_count_tOracleInput_11 = 0;
		
	


	
		    int nb_line_tOracleInput_11 = 0;
		    java.sql.Connection conn_tOracleInput_11 = null;
				conn_tOracleInput_11 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_11 = false;
				boolean isConnectionWrapped_tOracleInput_11 = !(conn_tOracleInput_11 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_11.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_11 = null;
                if (isConnectionWrapped_tOracleInput_11) {
					unwrappedOraConn_tOracleInput_11 = conn_tOracleInput_11.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_11 != null) {
                        isTimeZoneNull_tOracleInput_11 = (unwrappedOraConn_tOracleInput_11.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_11 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_11).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_11) {
					java.sql.Statement stmtGetTZ_tOracleInput_11 = conn_tOracleInput_11.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_11 = stmtGetTZ_tOracleInput_11.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_11 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_11.next()) {
						sessionTimezone_tOracleInput_11 = rsGetTZ_tOracleInput_11.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_11 && unwrappedOraConn_tOracleInput_11 != null) {
                        unwrappedOraConn_tOracleInput_11.setSessionTimeZone(sessionTimezone_tOracleInput_11);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_11).setSessionTimeZone(sessionTimezone_tOracleInput_11);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_11 = conn_tOracleInput_11.createStatement();

		    String dbquery_tOracleInput_11 = "SELECT CODIGODEBARRAS, OBSERVACIONES FROM MED_PRODUCTOS_COMERCIALES_LOG";
		    

		    globalMap.put("tOracleInput_11_QUERY",dbquery_tOracleInput_11);

		    java.sql.ResultSet rs_tOracleInput_11 = null;

		    try {
		    	rs_tOracleInput_11 = stmt_tOracleInput_11.executeQuery(dbquery_tOracleInput_11);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_11 = rs_tOracleInput_11.getMetaData();
		    	int colQtyInRs_tOracleInput_11 = rsmd_tOracleInput_11.getColumnCount();

		    String tmpContent_tOracleInput_11 = null;
		    
		    
		    while (rs_tOracleInput_11.next()) {
		        nb_line_tOracleInput_11++;
		        
							if(colQtyInRs_tOracleInput_11 < 1) {
								row41.CODIGODEBARRAS = null;
							} else {
	                         		
        	row41.CODIGODEBARRAS = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 2) {
								row41.OBSERVACIONES = null;
							} else {
	                         		
        	row41.OBSERVACIONES = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 2, false);
		                    }
					




 



/**
 * [tOracleInput_11 begin ] stop
 */
	
	/**
	 * [tOracleInput_11 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 


	tos_count_tOracleInput_11++;

/**
 * [tOracleInput_11 main ] stop
 */
	
	/**
	 * [tOracleInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 



/**
 * [tOracleInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputExcel_5 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row41"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_5.addRow();
									   				
	    				if(row41.CODIGODEBARRAS != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(String.valueOf(row41.CODIGODEBARRAS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row41.OBSERVACIONES != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(String.valueOf(row41.OBSERVACIONES));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_5++;
				
 


	tos_count_tFileOutputExcel_5++;

/**
 * [tFileOutputExcel_5 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	

 



/**
 * [tFileOutputExcel_5 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	

 



/**
 * [tFileOutputExcel_5 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 



/**
 * [tOracleInput_11 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_11 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

}
}finally{
	if (rs_tOracleInput_11 != null) {
		rs_tOracleInput_11.close();
	}
	if (stmt_tOracleInput_11 != null) {
		stmt_tOracleInput_11.close();
	}
}

globalMap.put("tOracleInput_11_NB_LINE",nb_line_tOracleInput_11);
 

ok_Hash.put("tOracleInput_11", true);
end_Hash.put("tOracleInput_11", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk7", 0, "ok");
				}
				tJava_2Process(globalMap);



/**
 * [tOracleInput_11 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_5 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	

							columnIndex_tFileOutputExcel_5 = 0;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 1;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
	
	
	
			xlsxTool_tFileOutputExcel_5.writeExcel((java.io.OutputStream)globalMap.get("archivo_salida"));
	
		if(headerIsInserted_tFileOutputExcel_5 && nb_line_tFileOutputExcel_5 > 0){
			nb_line_tFileOutputExcel_5 = nb_line_tFileOutputExcel_5 -1;
		}
		globalMap.put("tFileOutputExcel_5_NB_LINE",nb_line_tFileOutputExcel_5);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row41");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_5", true);
end_Hash.put("tFileOutputExcel_5", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk9", 0, "ok");
				}
				tJava_1Process(globalMap);



/**
 * [tFileOutputExcel_5 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_11 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 



/**
 * [tOracleInput_11 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_5 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	

 



/**
 * [tFileOutputExcel_5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_11_SUBPROCESS_STATE", 1);
	}
	


public void tJava_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_2", false);
		start_Hash.put("tJava_2", System.currentTimeMillis());
		
	
	currentComponent="tJava_2";
	
	
		int tos_count_tJava_2 = 0;
		


context.HORA_FINAL = TalendDate.getDate("HH:mm:ss");

 



/**
 * [tJava_2 begin ] stop
 */
	
	/**
	 * [tJava_2 main ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 


	tos_count_tJava_2++;

/**
 * [tJava_2 main ] stop
 */
	
	/**
	 * [tJava_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_begin ] stop
 */
	
	/**
	 * [tJava_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_end ] stop
 */
	
	/**
	 * [tJava_2 end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 

ok_Hash.put("tJava_2", true);
end_Hash.put("tJava_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk5", 0, "ok");
				}
				tFixedFlowInput_3Process(globalMap);



/**
 * [tJava_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_2 finally ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_2_SUBPROCESS_STATE", 1);
	}
	


public static class row47Struct implements routines.system.IPersistableRow<row47Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];

	
			    public String FECHA_EJECUCION;

				public String getFECHA_EJECUCION () {
					return this.FECHA_EJECUCION;
				}

				public Boolean FECHA_EJECUCIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_EJECUCIONIsKey(){
				    return false;
				}
				public Integer FECHA_EJECUCIONLength(){
				    return null;
				}
				public Integer FECHA_EJECUCIONPrecision(){
				    return null;
				}
				public String FECHA_EJECUCIONDefault(){
				
					return null;
				
				}
				public String FECHA_EJECUCIONComment(){
				
				    return "";
				
				}
				public String FECHA_EJECUCIONPattern(){
				
					return "";
				
				}
				public String FECHA_EJECUCIONOriginalDbColumnName(){
				
					return "FECHA_EJECUCION";
				
				}

				
			    public String HORA_INICIO;

				public String getHORA_INICIO () {
					return this.HORA_INICIO;
				}

				public Boolean HORA_INICIOIsNullable(){
				    return true;
				}
				public Boolean HORA_INICIOIsKey(){
				    return false;
				}
				public Integer HORA_INICIOLength(){
				    return null;
				}
				public Integer HORA_INICIOPrecision(){
				    return null;
				}
				public String HORA_INICIODefault(){
				
					return null;
				
				}
				public String HORA_INICIOComment(){
				
				    return "";
				
				}
				public String HORA_INICIOPattern(){
				
					return "";
				
				}
				public String HORA_INICIOOriginalDbColumnName(){
				
					return "HORA_INICIO";
				
				}

				
			    public String HORA_FINAL;

				public String getHORA_FINAL () {
					return this.HORA_FINAL;
				}

				public Boolean HORA_FINALIsNullable(){
				    return true;
				}
				public Boolean HORA_FINALIsKey(){
				    return false;
				}
				public Integer HORA_FINALLength(){
				    return null;
				}
				public Integer HORA_FINALPrecision(){
				    return null;
				}
				public String HORA_FINALDefault(){
				
					return null;
				
				}
				public String HORA_FINALComment(){
				
				    return "";
				
				}
				public String HORA_FINALPattern(){
				
					return "";
				
				}
				public String HORA_FINALOriginalDbColumnName(){
				
					return "HORA_FINAL";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return null;
				}
				public Integer ESTADOPrecision(){
				    return null;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String JOBS;

				public String getJOBS () {
					return this.JOBS;
				}

				public Boolean JOBSIsNullable(){
				    return true;
				}
				public Boolean JOBSIsKey(){
				    return false;
				}
				public Integer JOBSLength(){
				    return null;
				}
				public Integer JOBSPrecision(){
				    return null;
				}
				public String JOBSDefault(){
				
					return null;
				
				}
				public String JOBSComment(){
				
				    return "";
				
				}
				public String JOBSPattern(){
				
					return "";
				
				}
				public String JOBSOriginalDbColumnName(){
				
					return "JOBS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.FECHA_EJECUCION = readString(dis);
					
					this.HORA_INICIO = readString(dis);
					
					this.HORA_FINAL = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.JOBS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.FECHA_EJECUCION = readString(dis);
					
					this.HORA_INICIO = readString(dis);
					
					this.HORA_FINAL = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.JOBS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FECHA_EJECUCION,dos);
					
					// String
				
						writeString(this.HORA_INICIO,dos);
					
					// String
				
						writeString(this.HORA_FINAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.JOBS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.FECHA_EJECUCION,dos);
					
					// String
				
						writeString(this.HORA_INICIO,dos);
					
					// String
				
						writeString(this.HORA_FINAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.JOBS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FECHA_EJECUCION="+FECHA_EJECUCION);
		sb.append(",HORA_INICIO="+HORA_INICIO);
		sb.append(",HORA_FINAL="+HORA_FINAL);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",JOBS="+JOBS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row47Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row47Struct row47 = new row47Struct();




	
	/**
	 * [tFileOutputDelimited_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_2", false);
		start_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row47");
					}
				
		int tos_count_tFileOutputDelimited_2 = 0;
		

String fileName_tFileOutputDelimited_2 = "";
    fileName_tFileOutputDelimited_2 = (new java.io.File(context.LOGS_EXECUTION)).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_2 = null;
    String extension_tFileOutputDelimited_2 = null;
    String directory_tFileOutputDelimited_2 = null;
    if((fileName_tFileOutputDelimited_2.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") < fileName_tFileOutputDelimited_2.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        }
        directory_tFileOutputDelimited_2 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_2 = true;
    java.io.File filetFileOutputDelimited_2 = new java.io.File(fileName_tFileOutputDelimited_2);
    globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
        if(filetFileOutputDelimited_2.exists()){
            isFileGenerated_tFileOutputDelimited_2 = false;
        }
            int nb_line_tFileOutputDelimited_2 = 0;
            int splitedFileNo_tFileOutputDelimited_2 = 0;
            int currentRow_tFileOutputDelimited_2 = 0;

            final String OUT_DELIM_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_2:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_2:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_2 != null && directory_tFileOutputDelimited_2.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_2 = new java.io.File(directory_tFileOutputDelimited_2);
                        if(!dir_tFileOutputDelimited_2.exists()) {
                            dir_tFileOutputDelimited_2.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_2 = null;

                        outtFileOutputDelimited_2 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_2, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_2", outtFileOutputDelimited_2);
                                    if(filetFileOutputDelimited_2.length()==0){
                                        outtFileOutputDelimited_2.write("FECHA_EJECUCION");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("HORA_INICIO");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("HORA_FINAL");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("ESTADO");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("JOBS");
                                        outtFileOutputDelimited_2.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

 



/**
 * [tFileOutputDelimited_2 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_3", false);
		start_Hash.put("tFixedFlowInput_3", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_3";
	
	
		int tos_count_tFixedFlowInput_3 = 0;
		

	    for (int i_tFixedFlowInput_3 = 0 ; i_tFixedFlowInput_3 < 1 ; i_tFixedFlowInput_3++) {
	                	            	
    	            		row47.FECHA_EJECUCION = context.FECHA_EJECUCION;
    	            	        	            	
    	            		row47.HORA_INICIO = context.HORA_INICIO;
    	            	        	            	
    	            		row47.HORA_FINAL = context.HORA_FINAL;
    	            	        	            	
    	            		row47.ESTADO = context.ESTADO_EXEC;
    	            	        	            	
    	            		row47.JOBS = "MedMoleculasAcuerdo";
    	            	

 



/**
 * [tFixedFlowInput_3 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 


	tos_count_tFixedFlowInput_3++;

/**
 * [tFixedFlowInput_3 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row47"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_2 = new StringBuilder();
                            if(row47.FECHA_EJECUCION != null) {
                        sb_tFileOutputDelimited_2.append(
                            row47.FECHA_EJECUCION
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row47.HORA_INICIO != null) {
                        sb_tFileOutputDelimited_2.append(
                            row47.HORA_INICIO
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row47.HORA_FINAL != null) {
                        sb_tFileOutputDelimited_2.append(
                            row47.HORA_FINAL
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row47.ESTADO != null) {
                        sb_tFileOutputDelimited_2.append(
                            row47.ESTADO
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row47.JOBS != null) {
                        sb_tFileOutputDelimited_2.append(
                            row47.JOBS
                        );
                            }
                    sb_tFileOutputDelimited_2.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);


                    nb_line_tFileOutputDelimited_2++;
                    resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

                        outtFileOutputDelimited_2.write(sb_tFileOutputDelimited_2.toString());




 


	tos_count_tFileOutputDelimited_2++;

/**
 * [tFileOutputDelimited_2 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

        }
        globalMap.put("tFixedFlowInput_3_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_3", true);
end_Hash.put("tFixedFlowInput_3", System.currentTimeMillis());




/**
 * [tFixedFlowInput_3 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	



		
			
					if(outtFileOutputDelimited_2!=null) {
						outtFileOutputDelimited_2.flush();
						outtFileOutputDelimited_2.close();
					}
				
				globalMap.put("tFileOutputDelimited_2_NB_LINE",nb_line_tFileOutputDelimited_2);
				globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_2", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row47");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_2", true);
end_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_3 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_2") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_2 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_2");
						if(outtFileOutputDelimited_2!=null) {
							outtFileOutputDelimited_2.flush();
							outtFileOutputDelimited_2.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row9Struct implements routines.system.IPersistableComparableLookupRow<row9Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return true;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 4000;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return true;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 4000;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SIGLA == null) ? 0 : this.SIGLA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row9Struct other = (row9Struct) obj;
		
						if (this.SIGLA == null) {
							if (other.SIGLA != null)
								return false;
						
						} else if (!this.SIGLA.equals(other.SIGLA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row9Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.SIGLA = this.SIGLA;
	            
	}

	public void copyKeysDataTo(row9Struct other) {

		other.SIGLA = this.SIGLA;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.ID = (BigDecimal) ois.readObject();
					
						this.NOMBRE = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.ID = (BigDecimal) objectIn.readObject();
					
						this.NOMBRE = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.ID);
					
						writeString(this.NOMBRE, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ID);
					
						writeString(this.NOMBRE, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",SIGLA="+SIGLA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SIGLA, other.SIGLA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row9Struct row9 = new row9Struct();




	
	/**
	 * [tHash_row9 begin ] start
	 */

	

	
		
		ok_Hash.put("tHash_row9", false);
		start_Hash.put("tHash_row9", System.currentTimeMillis());
		
	
	currentComponent="tHash_row9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tHash_row9 = 0;
		

				java.util.Map<row9Struct, row9Struct> tHash_row9 = new java.util.LinkedHashMap<row9Struct, row9Struct>();
	            globalMap.put("tHash_row9", tHash_row9);
			
            

 



/**
 * [tHash_row9 begin ] stop
 */



	
	/**
	 * [tOracleInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_4", false);
		start_Hash.put("tOracleInput_4", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_4";
	
	
		int tos_count_tOracleInput_4 = 0;
		
	


	
		    int nb_line_tOracleInput_4 = 0;
		    java.sql.Connection conn_tOracleInput_4 = null;
				conn_tOracleInput_4 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_4 = false;
				boolean isConnectionWrapped_tOracleInput_4 = !(conn_tOracleInput_4 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_4.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_4 = null;
                if (isConnectionWrapped_tOracleInput_4) {
					unwrappedOraConn_tOracleInput_4 = conn_tOracleInput_4.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_4 != null) {
                        isTimeZoneNull_tOracleInput_4 = (unwrappedOraConn_tOracleInput_4.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_4 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_4).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_4) {
					java.sql.Statement stmtGetTZ_tOracleInput_4 = conn_tOracleInput_4.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_4 = stmtGetTZ_tOracleInput_4.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_4 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_4.next()) {
						sessionTimezone_tOracleInput_4 = rsGetTZ_tOracleInput_4.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_4 && unwrappedOraConn_tOracleInput_4 != null) {
                        unwrappedOraConn_tOracleInput_4.setSessionTimeZone(sessionTimezone_tOracleInput_4);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_4).setSessionTimeZone(sessionTimezone_tOracleInput_4);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_4 = conn_tOracleInput_4.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_4.setFetchSize(1000);


		    String dbquery_tOracleInput_4 = "SELECT \n  ID, \n  UPPER(TRIM(MED.MayusculasSinAcentos(NOMBRE))) AS NOMBRE, \n  UPPER(TRIM(MED.MayusculasSinAcentos(SIG"
+"LA))) AS SIGLA\nFROM MED_TVIADMIN\nWHERE ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_4_QUERY",dbquery_tOracleInput_4);

		    java.sql.ResultSet rs_tOracleInput_4 = null;

		    try {
		    	rs_tOracleInput_4 = stmt_tOracleInput_4.executeQuery(dbquery_tOracleInput_4);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_4 = rs_tOracleInput_4.getMetaData();
		    	int colQtyInRs_tOracleInput_4 = rsmd_tOracleInput_4.getColumnCount();

		    String tmpContent_tOracleInput_4 = null;
		    
		    
		    while (rs_tOracleInput_4.next()) {
		        nb_line_tOracleInput_4++;
		        
							if(colQtyInRs_tOracleInput_4 < 1) {
								row9.ID = null;
							} else {
		                          
					if(rs_tOracleInput_4.getObject(1) != null) {
						row9.ID = rs_tOracleInput_4.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_4 < 2) {
								row9.NOMBRE = null;
							} else {
	                         		
        	row9.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 3) {
								row9.SIGLA = null;
							} else {
	                         		
        	row9.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 3, false);
		                    }
					




 



/**
 * [tOracleInput_4 begin ] stop
 */
	
	/**
	 * [tOracleInput_4 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 


	tos_count_tOracleInput_4++;

/**
 * [tOracleInput_4 main ] stop
 */
	
	/**
	 * [tOracleInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tHash_row9 main ] start
	 */

	

	
	
	currentComponent="tHash_row9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					

row9Struct row9_HashRow = new row9Struct();

					row9_HashRow.ID = row9.ID;
					row9_HashRow.NOMBRE = row9.NOMBRE;
					row9_HashRow.SIGLA = row9.SIGLA;
tHash_row9.put(row9_HashRow, row9_HashRow);


 


	tos_count_tHash_row9++;

/**
 * [tHash_row9 main ] stop
 */
	
	/**
	 * [tHash_row9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHash_row9";
	
	

 



/**
 * [tHash_row9 process_data_begin ] stop
 */
	
	/**
	 * [tHash_row9 process_data_end ] start
	 */

	

	
	
	currentComponent="tHash_row9";
	
	

 



/**
 * [tHash_row9 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_4 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

}
}finally{
	if (rs_tOracleInput_4 != null) {
		rs_tOracleInput_4.close();
	}
	if (stmt_tOracleInput_4 != null) {
		stmt_tOracleInput_4.close();
	}
}

globalMap.put("tOracleInput_4_NB_LINE",nb_line_tOracleInput_4);
 

ok_Hash.put("tOracleInput_4", true);
end_Hash.put("tOracleInput_4", System.currentTimeMillis());




/**
 * [tOracleInput_4 end ] stop
 */

	
	/**
	 * [tHash_row9 end ] start
	 */

	

	
	
	currentComponent="tHash_row9";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tHash_row9", true);
end_Hash.put("tHash_row9", System.currentTimeMillis());




/**
 * [tHash_row9 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_4 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 finally ] stop
 */

	
	/**
	 * [tHash_row9 finally ] start
	 */

	

	
	
	currentComponent="tHash_row9";
	
	

 



/**
 * [tHash_row9 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row12Struct implements routines.system.IPersistableComparableLookupRow<row12Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return true;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 4000;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return true;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 4000;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.NOMBRE == null) ? 0 : this.NOMBRE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row12Struct other = (row12Struct) obj;
		
						if (this.NOMBRE == null) {
							if (other.NOMBRE != null)
								return false;
						
						} else if (!this.NOMBRE.equals(other.NOMBRE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row12Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.SIGLA = this.SIGLA;
	            
	}

	public void copyKeysDataTo(row12Struct other) {

		other.NOMBRE = this.NOMBRE;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.ID = (BigDecimal) ois.readObject();
					
						this.SIGLA = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.ID = (BigDecimal) objectIn.readObject();
					
						this.SIGLA = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.ID);
					
						writeString(this.SIGLA, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ID);
					
						writeString(this.SIGLA, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",SIGLA="+SIGLA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.NOMBRE, other.NOMBRE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row12Struct row12 = new row12Struct();




	
	/**
	 * [tHash_row12 begin ] start
	 */

	

	
		
		ok_Hash.put("tHash_row12", false);
		start_Hash.put("tHash_row12", System.currentTimeMillis());
		
	
	currentComponent="tHash_row12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tHash_row12 = 0;
		

				java.util.Map<row12Struct, row12Struct> tHash_row12 = new java.util.LinkedHashMap<row12Struct, row12Struct>();
	            globalMap.put("tHash_row12", tHash_row12);
			
            

 



/**
 * [tHash_row12 begin ] stop
 */



	
	/**
	 * [tOracleInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_7", false);
		start_Hash.put("tOracleInput_7", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_7";
	
	
		int tos_count_tOracleInput_7 = 0;
		
	


	
		    int nb_line_tOracleInput_7 = 0;
		    java.sql.Connection conn_tOracleInput_7 = null;
				conn_tOracleInput_7 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_7 = false;
				boolean isConnectionWrapped_tOracleInput_7 = !(conn_tOracleInput_7 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_7.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_7 = null;
                if (isConnectionWrapped_tOracleInput_7) {
					unwrappedOraConn_tOracleInput_7 = conn_tOracleInput_7.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_7 != null) {
                        isTimeZoneNull_tOracleInput_7 = (unwrappedOraConn_tOracleInput_7.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_7 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_7).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_7) {
					java.sql.Statement stmtGetTZ_tOracleInput_7 = conn_tOracleInput_7.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_7 = stmtGetTZ_tOracleInput_7.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_7 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_7.next()) {
						sessionTimezone_tOracleInput_7 = rsGetTZ_tOracleInput_7.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_7 && unwrappedOraConn_tOracleInput_7 != null) {
                        unwrappedOraConn_tOracleInput_7.setSessionTimeZone(sessionTimezone_tOracleInput_7);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_7).setSessionTimeZone(sessionTimezone_tOracleInput_7);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_7 = conn_tOracleInput_7.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_7.setFetchSize(1000);


		    String dbquery_tOracleInput_7 = "SELECT \n  ID, \n  UPPER(TRIM(MED.MayusculasSinAcentos(NOMBRE))) AS NOMBRE, \n  UPPER(TRIM(MED.MayusculasSinAcentos(SIG"
+"LA))) AS SIGLA  \nFROM MED_TFORMASFARMACEUTICAS\nWHERE ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_7_QUERY",dbquery_tOracleInput_7);

		    java.sql.ResultSet rs_tOracleInput_7 = null;

		    try {
		    	rs_tOracleInput_7 = stmt_tOracleInput_7.executeQuery(dbquery_tOracleInput_7);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_7 = rs_tOracleInput_7.getMetaData();
		    	int colQtyInRs_tOracleInput_7 = rsmd_tOracleInput_7.getColumnCount();

		    String tmpContent_tOracleInput_7 = null;
		    
		    
		    while (rs_tOracleInput_7.next()) {
		        nb_line_tOracleInput_7++;
		        
							if(colQtyInRs_tOracleInput_7 < 1) {
								row12.ID = null;
							} else {
		                          
					if(rs_tOracleInput_7.getObject(1) != null) {
						row12.ID = rs_tOracleInput_7.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_7 < 2) {
								row12.NOMBRE = null;
							} else {
	                         		
        	row12.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_7, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_7 < 3) {
								row12.SIGLA = null;
							} else {
	                         		
        	row12.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_7, 3, false);
		                    }
					




 



/**
 * [tOracleInput_7 begin ] stop
 */
	
	/**
	 * [tOracleInput_7 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 


	tos_count_tOracleInput_7++;

/**
 * [tOracleInput_7 main ] stop
 */
	
	/**
	 * [tOracleInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tHash_row12 main ] start
	 */

	

	
	
	currentComponent="tHash_row12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					

row12Struct row12_HashRow = new row12Struct();

					row12_HashRow.ID = row12.ID;
					row12_HashRow.NOMBRE = row12.NOMBRE;
					row12_HashRow.SIGLA = row12.SIGLA;
tHash_row12.put(row12_HashRow, row12_HashRow);


 


	tos_count_tHash_row12++;

/**
 * [tHash_row12 main ] stop
 */
	
	/**
	 * [tHash_row12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHash_row12";
	
	

 



/**
 * [tHash_row12 process_data_begin ] stop
 */
	
	/**
	 * [tHash_row12 process_data_end ] start
	 */

	

	
	
	currentComponent="tHash_row12";
	
	

 



/**
 * [tHash_row12 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_7 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

}
}finally{
	if (rs_tOracleInput_7 != null) {
		rs_tOracleInput_7.close();
	}
	if (stmt_tOracleInput_7 != null) {
		stmt_tOracleInput_7.close();
	}
}

globalMap.put("tOracleInput_7_NB_LINE",nb_line_tOracleInput_7);
 

ok_Hash.put("tOracleInput_7", true);
end_Hash.put("tOracleInput_7", System.currentTimeMillis());




/**
 * [tOracleInput_7 end ] stop
 */

	
	/**
	 * [tHash_row12 end ] start
	 */

	

	
	
	currentComponent="tHash_row12";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tHash_row12", true);
end_Hash.put("tHash_row12", System.currentTimeMillis());




/**
 * [tHash_row12 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_7 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 finally ] stop
 */

	
	/**
	 * [tHash_row12 finally ] start
	 */

	

	
	
	currentComponent="tHash_row12";
	
	

 



/**
 * [tHash_row12 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row26Struct implements routines.system.IPersistableComparableLookupRow<row26Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal GENERICOS_ID;

				public BigDecimal getGENERICOS_ID () {
					return this.GENERICOS_ID;
				}

				public Boolean GENERICOS_IDIsNullable(){
				    return true;
				}
				public Boolean GENERICOS_IDIsKey(){
				    return false;
				}
				public Integer GENERICOS_IDLength(){
				    return 0;
				}
				public Integer GENERICOS_IDPrecision(){
				    return null;
				}
				public String GENERICOS_IDDefault(){
				
					return "";
				
				}
				public String GENERICOS_IDComment(){
				
				    return "";
				
				}
				public String GENERICOS_IDPattern(){
				
					return "";
				
				}
				public String GENERICOS_IDOriginalDbColumnName(){
				
					return "GENERICOS_ID";
				
				}

				
			    public BigDecimal TVIADMIN_ID;

				public BigDecimal getTVIADMIN_ID () {
					return this.TVIADMIN_ID;
				}

				public Boolean TVIADMIN_IDIsNullable(){
				    return true;
				}
				public Boolean TVIADMIN_IDIsKey(){
				    return false;
				}
				public Integer TVIADMIN_IDLength(){
				    return 0;
				}
				public Integer TVIADMIN_IDPrecision(){
				    return null;
				}
				public String TVIADMIN_IDDefault(){
				
					return "";
				
				}
				public String TVIADMIN_IDComment(){
				
				    return "";
				
				}
				public String TVIADMIN_IDPattern(){
				
					return "";
				
				}
				public String TVIADMIN_IDOriginalDbColumnName(){
				
					return "TVIADMIN_ID";
				
				}

				
			    public BigDecimal TFORMASFARMACEUTICAS_ID;

				public BigDecimal getTFORMASFARMACEUTICAS_ID () {
					return this.TFORMASFARMACEUTICAS_ID;
				}

				public Boolean TFORMASFARMACEUTICAS_IDIsNullable(){
				    return true;
				}
				public Boolean TFORMASFARMACEUTICAS_IDIsKey(){
				    return false;
				}
				public Integer TFORMASFARMACEUTICAS_IDLength(){
				    return null;
				}
				public Integer TFORMASFARMACEUTICAS_IDPrecision(){
				    return null;
				}
				public String TFORMASFARMACEUTICAS_IDDefault(){
				
					return null;
				
				}
				public String TFORMASFARMACEUTICAS_IDComment(){
				
				    return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDPattern(){
				
					return "";
				
				}
				public String TFORMASFARMACEUTICAS_IDOriginalDbColumnName(){
				
					return "TFORMASFARMACEUTICAS_ID";
				
				}

				
			    public String NOMBRE_GENERICO;

				public String getNOMBRE_GENERICO () {
					return this.NOMBRE_GENERICO;
				}

				public Boolean NOMBRE_GENERICOIsNullable(){
				    return true;
				}
				public Boolean NOMBRE_GENERICOIsKey(){
				    return false;
				}
				public Integer NOMBRE_GENERICOLength(){
				    return null;
				}
				public Integer NOMBRE_GENERICOPrecision(){
				    return null;
				}
				public String NOMBRE_GENERICODefault(){
				
					return null;
				
				}
				public String NOMBRE_GENERICOComment(){
				
				    return "";
				
				}
				public String NOMBRE_GENERICOPattern(){
				
					return "";
				
				}
				public String NOMBRE_GENERICOOriginalDbColumnName(){
				
					return "NOMBRE_GENERICO";
				
				}

				
			    public String CONCENTRACION;

				public String getCONCENTRACION () {
					return this.CONCENTRACION;
				}

				public Boolean CONCENTRACIONIsNullable(){
				    return true;
				}
				public Boolean CONCENTRACIONIsKey(){
				    return false;
				}
				public Integer CONCENTRACIONLength(){
				    return null;
				}
				public Integer CONCENTRACIONPrecision(){
				    return null;
				}
				public String CONCENTRACIONDefault(){
				
					return null;
				
				}
				public String CONCENTRACIONComment(){
				
				    return "";
				
				}
				public String CONCENTRACIONPattern(){
				
					return "";
				
				}
				public String CONCENTRACIONOriginalDbColumnName(){
				
					return "CONCENTRACION";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.TFORMASFARMACEUTICAS_ID == null) ? 0 : this.TFORMASFARMACEUTICAS_ID.hashCode());
					
						result = prime * result + ((this.NOMBRE_GENERICO == null) ? 0 : this.NOMBRE_GENERICO.hashCode());
					
						result = prime * result + ((this.CONCENTRACION == null) ? 0 : this.CONCENTRACION.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row26Struct other = (row26Struct) obj;
		
						if (this.TFORMASFARMACEUTICAS_ID == null) {
							if (other.TFORMASFARMACEUTICAS_ID != null)
								return false;
						
						} else if (!this.TFORMASFARMACEUTICAS_ID.equals(other.TFORMASFARMACEUTICAS_ID))
						
							return false;
					
						if (this.NOMBRE_GENERICO == null) {
							if (other.NOMBRE_GENERICO != null)
								return false;
						
						} else if (!this.NOMBRE_GENERICO.equals(other.NOMBRE_GENERICO))
						
							return false;
					
						if (this.CONCENTRACION == null) {
							if (other.CONCENTRACION != null)
								return false;
						
						} else if (!this.CONCENTRACION.equals(other.CONCENTRACION))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row26Struct other) {

		other.ID = this.ID;
	            other.GENERICOS_ID = this.GENERICOS_ID;
	            other.TVIADMIN_ID = this.TVIADMIN_ID;
	            other.TFORMASFARMACEUTICAS_ID = this.TFORMASFARMACEUTICAS_ID;
	            other.NOMBRE_GENERICO = this.NOMBRE_GENERICO;
	            other.CONCENTRACION = this.CONCENTRACION;
	            
	}

	public void copyKeysDataTo(row26Struct other) {

		other.TFORMASFARMACEUTICAS_ID = this.TFORMASFARMACEUTICAS_ID;
	            	other.NOMBRE_GENERICO = this.NOMBRE_GENERICO;
	            	other.CONCENTRACION = this.CONCENTRACION;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
						this.TFORMASFARMACEUTICAS_ID = (BigDecimal) dis.readObject();
					
					this.NOMBRE_GENERICO = readString(dis);
					
					this.CONCENTRACION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TFORMASFARMACEUTICAS_ID);
					
					// String
				
						writeString(this.NOMBRE_GENERICO,dos);
					
					// String
				
						writeString(this.CONCENTRACION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.ID = (BigDecimal) ois.readObject();
					
       			    	this.GENERICOS_ID = (BigDecimal) ois.readObject();
					
       			    	this.TVIADMIN_ID = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.ID = (BigDecimal) objectIn.readObject();
					
       			    	this.GENERICOS_ID = (BigDecimal) objectIn.readObject();
					
       			    	this.TVIADMIN_ID = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.ID);
					
       			    	oos.writeObject(this.GENERICOS_ID);
					
       			    	oos.writeObject(this.TVIADMIN_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ID);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.GENERICOS_ID);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.TVIADMIN_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",GENERICOS_ID="+String.valueOf(GENERICOS_ID));
		sb.append(",TVIADMIN_ID="+String.valueOf(TVIADMIN_ID));
		sb.append(",TFORMASFARMACEUTICAS_ID="+String.valueOf(TFORMASFARMACEUTICAS_ID));
		sb.append(",NOMBRE_GENERICO="+NOMBRE_GENERICO);
		sb.append(",CONCENTRACION="+CONCENTRACION);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row26Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.TFORMASFARMACEUTICAS_ID, other.TFORMASFARMACEUTICAS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.NOMBRE_GENERICO, other.NOMBRE_GENERICO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CONCENTRACION, other.CONCENTRACION);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row26Struct row26 = new row26Struct();




	
	/**
	 * [tHash_row26 begin ] start
	 */

	

	
		
		ok_Hash.put("tHash_row26", false);
		start_Hash.put("tHash_row26", System.currentTimeMillis());
		
	
	currentComponent="tHash_row26";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row26");
					}
				
		int tos_count_tHash_row26 = 0;
		

				java.util.Map<row26Struct, row26Struct> tHash_row26 = new java.util.LinkedHashMap<row26Struct, row26Struct>();
	            globalMap.put("tHash_row26", tHash_row26);
			
            

 



/**
 * [tHash_row26 begin ] stop
 */



	
	/**
	 * [tOracleInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_5", false);
		start_Hash.put("tOracleInput_5", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_5";
	
	
		int tos_count_tOracleInput_5 = 0;
		
	


	
		    int nb_line_tOracleInput_5 = 0;
		    java.sql.Connection conn_tOracleInput_5 = null;
				conn_tOracleInput_5 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_5 = false;
				boolean isConnectionWrapped_tOracleInput_5 = !(conn_tOracleInput_5 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_5.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_5 = null;
                if (isConnectionWrapped_tOracleInput_5) {
					unwrappedOraConn_tOracleInput_5 = conn_tOracleInput_5.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_5 != null) {
                        isTimeZoneNull_tOracleInput_5 = (unwrappedOraConn_tOracleInput_5.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_5 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_5).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_5) {
					java.sql.Statement stmtGetTZ_tOracleInput_5 = conn_tOracleInput_5.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_5 = stmtGetTZ_tOracleInput_5.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_5 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_5.next()) {
						sessionTimezone_tOracleInput_5 = rsGetTZ_tOracleInput_5.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_5 && unwrappedOraConn_tOracleInput_5 != null) {
                        unwrappedOraConn_tOracleInput_5.setSessionTimeZone(sessionTimezone_tOracleInput_5);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_5).setSessionTimeZone(sessionTimezone_tOracleInput_5);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_5 = conn_tOracleInput_5.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_5.setFetchSize(1000);


		    String dbquery_tOracleInput_5 = "SELECT mf.ID,\nmf.GENERICOS_ID,\nmg.TVIADMIN_ID,\nmf.TFORMASFARMACEUTICAS_ID, \nUPPER(TRIM(MED.MayusculasSinAcentos(mg."
+"DESCRIPCION))) AS NOMBRE_GENERICO,\nUPPER(TRIM(nvl(MED.MayusculasSinAcentos(REPLACE(mg.CONCENTRACION , ' ', '')),'X'))) "
+" AS CONCENTRACION\nFROM MED_FORMASFARMACEUTICAS mf \nINNER JOIN MED_GENERICOS mg ON mg.ID = mf.GENERICOS_ID \nWHERE mg.E"
+"STADO = 'Activo' AND \nmg.ESTREGISTRO_ID = 1 AND \nmg.CODIGO_UNICO IS NOT NULL AND\nmf.ESTADO = 'Activo' AND \nmf.ESTREG"
+"ISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_5_QUERY",dbquery_tOracleInput_5);

		    java.sql.ResultSet rs_tOracleInput_5 = null;

		    try {
		    	rs_tOracleInput_5 = stmt_tOracleInput_5.executeQuery(dbquery_tOracleInput_5);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_5 = rs_tOracleInput_5.getMetaData();
		    	int colQtyInRs_tOracleInput_5 = rsmd_tOracleInput_5.getColumnCount();

		    String tmpContent_tOracleInput_5 = null;
		    
		    
		    while (rs_tOracleInput_5.next()) {
		        nb_line_tOracleInput_5++;
		        
							if(colQtyInRs_tOracleInput_5 < 1) {
								row26.ID = null;
							} else {
		                          
					if(rs_tOracleInput_5.getObject(1) != null) {
						row26.ID = rs_tOracleInput_5.getBigDecimal(1);
					} else {
				
						row26.ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_5 < 2) {
								row26.GENERICOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_5.getObject(2) != null) {
						row26.GENERICOS_ID = rs_tOracleInput_5.getBigDecimal(2);
					} else {
				
						row26.GENERICOS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_5 < 3) {
								row26.TVIADMIN_ID = null;
							} else {
		                          
					if(rs_tOracleInput_5.getObject(3) != null) {
						row26.TVIADMIN_ID = rs_tOracleInput_5.getBigDecimal(3);
					} else {
				
						row26.TVIADMIN_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_5 < 4) {
								row26.TFORMASFARMACEUTICAS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_5.getObject(4) != null) {
						row26.TFORMASFARMACEUTICAS_ID = rs_tOracleInput_5.getBigDecimal(4);
					} else {
				
						row26.TFORMASFARMACEUTICAS_ID = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_5 < 5) {
								row26.NOMBRE_GENERICO = null;
							} else {
	                         		
        	row26.NOMBRE_GENERICO = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 6) {
								row26.CONCENTRACION = null;
							} else {
	                         		
        	row26.CONCENTRACION = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 6, false);
		                    }
					




 



/**
 * [tOracleInput_5 begin ] stop
 */
	
	/**
	 * [tOracleInput_5 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 


	tos_count_tOracleInput_5++;

/**
 * [tOracleInput_5 main ] stop
 */
	
	/**
	 * [tOracleInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 



/**
 * [tOracleInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tHash_row26 main ] start
	 */

	

	
	
	currentComponent="tHash_row26";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row26"
						
						);
					}
					

row26Struct row26_HashRow = new row26Struct();

					row26_HashRow.ID = row26.ID;
					row26_HashRow.GENERICOS_ID = row26.GENERICOS_ID;
					row26_HashRow.TVIADMIN_ID = row26.TVIADMIN_ID;
					row26_HashRow.TFORMASFARMACEUTICAS_ID = row26.TFORMASFARMACEUTICAS_ID;
					row26_HashRow.NOMBRE_GENERICO = row26.NOMBRE_GENERICO;
					row26_HashRow.CONCENTRACION = row26.CONCENTRACION;
tHash_row26.put(row26_HashRow, row26_HashRow);


 


	tos_count_tHash_row26++;

/**
 * [tHash_row26 main ] stop
 */
	
	/**
	 * [tHash_row26 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHash_row26";
	
	

 



/**
 * [tHash_row26 process_data_begin ] stop
 */
	
	/**
	 * [tHash_row26 process_data_end ] start
	 */

	

	
	
	currentComponent="tHash_row26";
	
	

 



/**
 * [tHash_row26 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 



/**
 * [tOracleInput_5 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_5 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

}
}finally{
	if (rs_tOracleInput_5 != null) {
		rs_tOracleInput_5.close();
	}
	if (stmt_tOracleInput_5 != null) {
		stmt_tOracleInput_5.close();
	}
}

globalMap.put("tOracleInput_5_NB_LINE",nb_line_tOracleInput_5);
 

ok_Hash.put("tOracleInput_5", true);
end_Hash.put("tOracleInput_5", System.currentTimeMillis());




/**
 * [tOracleInput_5 end ] stop
 */

	
	/**
	 * [tHash_row26 end ] start
	 */

	

	
	
	currentComponent="tHash_row26";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row26");
			  	}
			  	
 

ok_Hash.put("tHash_row26", true);
end_Hash.put("tHash_row26", System.currentTimeMillis());




/**
 * [tHash_row26 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_5 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 



/**
 * [tOracleInput_5 finally ] stop
 */

	
	/**
	 * [tHash_row26 finally ] start
	 */

	

	
	
	currentComponent="tHash_row26";
	
	

 



/**
 * [tHash_row26 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row18Struct implements routines.system.IPersistableComparableLookupRow<row18Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return null;
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 100;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return true;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return 25;
				}
				public Integer SIGLAPrecision(){
				    return 0;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				
			    public BigDecimal ESTREGISTRO_ID;

				public BigDecimal getESTREGISTRO_ID () {
					return this.ESTREGISTRO_ID;
				}

				public Boolean ESTREGISTRO_IDIsNullable(){
				    return false;
				}
				public Boolean ESTREGISTRO_IDIsKey(){
				    return false;
				}
				public Integer ESTREGISTRO_IDLength(){
				    return 0;
				}
				public Integer ESTREGISTRO_IDPrecision(){
				    return null;
				}
				public String ESTREGISTRO_IDDefault(){
				
					return null;
				
				}
				public String ESTREGISTRO_IDComment(){
				
				    return "";
				
				}
				public String ESTREGISTRO_IDPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ESTREGISTRO_IDOriginalDbColumnName(){
				
					return "ESTREGISTRO_ID";
				
				}

				
			    public BigDecimal CLASIFICACION;

				public BigDecimal getCLASIFICACION () {
					return this.CLASIFICACION;
				}

				public Boolean CLASIFICACIONIsNullable(){
				    return true;
				}
				public Boolean CLASIFICACIONIsKey(){
				    return false;
				}
				public Integer CLASIFICACIONLength(){
				    return 0;
				}
				public Integer CLASIFICACIONPrecision(){
				    return null;
				}
				public String CLASIFICACIONDefault(){
				
					return null;
				
				}
				public String CLASIFICACIONComment(){
				
				    return "";
				
				}
				public String CLASIFICACIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CLASIFICACIONOriginalDbColumnName(){
				
					return "CLASIFICACION";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SIGLA == null) ? 0 : this.SIGLA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row18Struct other = (row18Struct) obj;
		
						if (this.SIGLA == null) {
							if (other.SIGLA != null)
								return false;
						
						} else if (!this.SIGLA.equals(other.SIGLA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row18Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.SIGLA = this.SIGLA;
	            other.ESTREGISTRO_ID = this.ESTREGISTRO_ID;
	            other.CLASIFICACION = this.CLASIFICACION;
	            
	}

	public void copyKeysDataTo(row18Struct other) {

		other.SIGLA = this.SIGLA;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.SIGLA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SIGLA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.ID = (BigDecimal) ois.readObject();
					
						this.NOMBRE = readString(dis,ois);
					
       			    	this.ESTREGISTRO_ID = (BigDecimal) ois.readObject();
					
       			    	this.CLASIFICACION = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.ID = (BigDecimal) objectIn.readObject();
					
						this.NOMBRE = readString(dis,objectIn);
					
       			    	this.ESTREGISTRO_ID = (BigDecimal) objectIn.readObject();
					
       			    	this.CLASIFICACION = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.ID);
					
						writeString(this.NOMBRE, dos, oos);
					
       			    	oos.writeObject(this.ESTREGISTRO_ID);
					
       			    	oos.writeObject(this.CLASIFICACION);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ID);
					
						writeString(this.NOMBRE, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ESTREGISTRO_ID);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.CLASIFICACION);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",SIGLA="+SIGLA);
		sb.append(",ESTREGISTRO_ID="+String.valueOf(ESTREGISTRO_ID));
		sb.append(",CLASIFICACION="+String.valueOf(CLASIFICACION));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SIGLA, other.SIGLA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row18Struct row18 = new row18Struct();




	
	/**
	 * [tHash_row18 begin ] start
	 */

	

	
		
		ok_Hash.put("tHash_row18", false);
		start_Hash.put("tHash_row18", System.currentTimeMillis());
		
	
	currentComponent="tHash_row18";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row18");
					}
				
		int tos_count_tHash_row18 = 0;
		

				java.util.Map<row18Struct, row18Struct> tHash_row18 = new java.util.LinkedHashMap<row18Struct, row18Struct>();
	            globalMap.put("tHash_row18", tHash_row18);
			
            

 



/**
 * [tHash_row18 begin ] stop
 */



	
	/**
	 * [tOracleInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_2", false);
		start_Hash.put("tOracleInput_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_2";
	
	
		int tos_count_tOracleInput_2 = 0;
		
	


	
		    int nb_line_tOracleInput_2 = 0;
		    java.sql.Connection conn_tOracleInput_2 = null;
				conn_tOracleInput_2 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_2 = false;
				boolean isConnectionWrapped_tOracleInput_2 = !(conn_tOracleInput_2 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_2.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_2 = null;
                if (isConnectionWrapped_tOracleInput_2) {
					unwrappedOraConn_tOracleInput_2 = conn_tOracleInput_2.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_2 != null) {
                        isTimeZoneNull_tOracleInput_2 = (unwrappedOraConn_tOracleInput_2.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_2 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_2).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_2) {
					java.sql.Statement stmtGetTZ_tOracleInput_2 = conn_tOracleInput_2.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_2 = stmtGetTZ_tOracleInput_2.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_2 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_2.next()) {
						sessionTimezone_tOracleInput_2 = rsGetTZ_tOracleInput_2.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_2 && unwrappedOraConn_tOracleInput_2 != null) {
                        unwrappedOraConn_tOracleInput_2.setSessionTimeZone(sessionTimezone_tOracleInput_2);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_2).setSessionTimeZone(sessionTimezone_tOracleInput_2);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_2 = conn_tOracleInput_2.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_2.setFetchSize(1000);


		    String dbquery_tOracleInput_2 = "SELECT \n  ID, \n  UPPER(TRIM(MED.MayusculasSinAcentos(NOMBRE))) AS NOMBRE, \n  UPPER(TRIM(MED.MayusculasSinAcentos(SIG"
+"LA))) AS SIGLA\nFROM MED_UMEDIDA\nWHERE ESTREGISTRO_ID = 1 AND  CLASIFICACION = 1";
		    

		    globalMap.put("tOracleInput_2_QUERY",dbquery_tOracleInput_2);

		    java.sql.ResultSet rs_tOracleInput_2 = null;

		    try {
		    	rs_tOracleInput_2 = stmt_tOracleInput_2.executeQuery(dbquery_tOracleInput_2);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_2 = rs_tOracleInput_2.getMetaData();
		    	int colQtyInRs_tOracleInput_2 = rsmd_tOracleInput_2.getColumnCount();

		    String tmpContent_tOracleInput_2 = null;
		    
		    
		    while (rs_tOracleInput_2.next()) {
		        nb_line_tOracleInput_2++;
		        
							if(colQtyInRs_tOracleInput_2 < 1) {
								row18.ID = null;
							} else {
		                          
					if(rs_tOracleInput_2.getObject(1) != null) {
						row18.ID = rs_tOracleInput_2.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_2 < 2) {
								row18.NOMBRE = null;
							} else {
	                         		
        	row18.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_2 < 3) {
								row18.SIGLA = null;
							} else {
	                         		
        	row18.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_2 < 4) {
								row18.ESTREGISTRO_ID = null;
							} else {
		                          
					if(rs_tOracleInput_2.getObject(4) != null) {
						row18.ESTREGISTRO_ID = rs_tOracleInput_2.getBigDecimal(4);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_2 < 5) {
								row18.CLASIFICACION = null;
							} else {
		                          
					if(rs_tOracleInput_2.getObject(5) != null) {
						row18.CLASIFICACION = rs_tOracleInput_2.getBigDecimal(5);
					} else {
				
						row18.CLASIFICACION = null;
					}
		                    }
					




 



/**
 * [tOracleInput_2 begin ] stop
 */
	
	/**
	 * [tOracleInput_2 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 


	tos_count_tOracleInput_2++;

/**
 * [tOracleInput_2 main ] stop
 */
	
	/**
	 * [tOracleInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tHash_row18 main ] start
	 */

	

	
	
	currentComponent="tHash_row18";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row18"
						
						);
					}
					

row18Struct row18_HashRow = new row18Struct();

					row18_HashRow.ID = row18.ID;
					row18_HashRow.NOMBRE = row18.NOMBRE;
					row18_HashRow.SIGLA = row18.SIGLA;
					row18_HashRow.ESTREGISTRO_ID = row18.ESTREGISTRO_ID;
					row18_HashRow.CLASIFICACION = row18.CLASIFICACION;
tHash_row18.put(row18_HashRow, row18_HashRow);


 


	tos_count_tHash_row18++;

/**
 * [tHash_row18 main ] stop
 */
	
	/**
	 * [tHash_row18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHash_row18";
	
	

 



/**
 * [tHash_row18 process_data_begin ] stop
 */
	
	/**
	 * [tHash_row18 process_data_end ] start
	 */

	

	
	
	currentComponent="tHash_row18";
	
	

 



/**
 * [tHash_row18 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_2 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

}
}finally{
	if (rs_tOracleInput_2 != null) {
		rs_tOracleInput_2.close();
	}
	if (stmt_tOracleInput_2 != null) {
		stmt_tOracleInput_2.close();
	}
}

globalMap.put("tOracleInput_2_NB_LINE",nb_line_tOracleInput_2);
 

ok_Hash.put("tOracleInput_2", true);
end_Hash.put("tOracleInput_2", System.currentTimeMillis());




/**
 * [tOracleInput_2 end ] stop
 */

	
	/**
	 * [tHash_row18 end ] start
	 */

	

	
	
	currentComponent="tHash_row18";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row18");
			  	}
			  	
 

ok_Hash.put("tHash_row18", true);
end_Hash.put("tHash_row18", System.currentTimeMillis());




/**
 * [tHash_row18 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 finally ] stop
 */

	
	/**
	 * [tHash_row18 finally ] start
	 */

	

	
	
	currentComponent="tHash_row18";
	
	

 



/**
 * [tHash_row18 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row21Struct implements routines.system.IPersistableComparableLookupRow<row21Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NITNOMBRE;

				public String getNITNOMBRE () {
					return this.NITNOMBRE;
				}

				public Boolean NITNOMBREIsNullable(){
				    return true;
				}
				public Boolean NITNOMBREIsKey(){
				    return false;
				}
				public Integer NITNOMBRELength(){
				    return 4000;
				}
				public Integer NITNOMBREPrecision(){
				    return 0;
				}
				public String NITNOMBREDefault(){
				
					return null;
				
				}
				public String NITNOMBREComment(){
				
				    return "";
				
				}
				public String NITNOMBREPattern(){
				
					return "";
				
				}
				public String NITNOMBREOriginalDbColumnName(){
				
					return "NITNOMBRE";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return true;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 4000;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String NIT;

				public String getNIT () {
					return this.NIT;
				}

				public Boolean NITIsNullable(){
				    return true;
				}
				public Boolean NITIsKey(){
				    return false;
				}
				public Integer NITLength(){
				    return 100;
				}
				public Integer NITPrecision(){
				    return 0;
				}
				public String NITDefault(){
				
					return null;
				
				}
				public String NITComment(){
				
				    return "";
				
				}
				public String NITPattern(){
				
					return "";
				
				}
				public String NITOriginalDbColumnName(){
				
					return "NIT";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.NOMBRE == null) ? 0 : this.NOMBRE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row21Struct other = (row21Struct) obj;
		
						if (this.NOMBRE == null) {
							if (other.NOMBRE != null)
								return false;
						
						} else if (!this.NOMBRE.equals(other.NOMBRE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row21Struct other) {

		other.ID = this.ID;
	            other.NITNOMBRE = this.NITNOMBRE;
	            other.NOMBRE = this.NOMBRE;
	            other.NIT = this.NIT;
	            
	}

	public void copyKeysDataTo(row21Struct other) {

		other.NOMBRE = this.NOMBRE;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.ID = (BigDecimal) ois.readObject();
					
						this.NITNOMBRE = readString(dis,ois);
					
						this.NIT = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.ID = (BigDecimal) objectIn.readObject();
					
						this.NITNOMBRE = readString(dis,objectIn);
					
						this.NIT = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.ID);
					
						writeString(this.NITNOMBRE, dos, oos);
					
						writeString(this.NIT, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ID);
					
						writeString(this.NITNOMBRE, dos, objectOut);
					
						writeString(this.NIT, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NITNOMBRE="+NITNOMBRE);
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",NIT="+NIT);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row21Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.NOMBRE, other.NOMBRE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row21Struct row21 = new row21Struct();




	
	/**
	 * [tHash_row21 begin ] start
	 */

	

	
		
		ok_Hash.put("tHash_row21", false);
		start_Hash.put("tHash_row21", System.currentTimeMillis());
		
	
	currentComponent="tHash_row21";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row21");
					}
				
		int tos_count_tHash_row21 = 0;
		

				java.util.Map<row21Struct, row21Struct> tHash_row21 = new java.util.LinkedHashMap<row21Struct, row21Struct>();
	            globalMap.put("tHash_row21", tHash_row21);
			
            

 



/**
 * [tHash_row21 begin ] stop
 */



	
	/**
	 * [tOracleInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_8", false);
		start_Hash.put("tOracleInput_8", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_8";
	
	
		int tos_count_tOracleInput_8 = 0;
		
	


	
		    int nb_line_tOracleInput_8 = 0;
		    java.sql.Connection conn_tOracleInput_8 = null;
				conn_tOracleInput_8 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_8 = false;
				boolean isConnectionWrapped_tOracleInput_8 = !(conn_tOracleInput_8 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_8.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_8 = null;
                if (isConnectionWrapped_tOracleInput_8) {
					unwrappedOraConn_tOracleInput_8 = conn_tOracleInput_8.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_8 != null) {
                        isTimeZoneNull_tOracleInput_8 = (unwrappedOraConn_tOracleInput_8.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_8 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_8).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_8) {
					java.sql.Statement stmtGetTZ_tOracleInput_8 = conn_tOracleInput_8.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_8 = stmtGetTZ_tOracleInput_8.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_8 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_8.next()) {
						sessionTimezone_tOracleInput_8 = rsGetTZ_tOracleInput_8.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_8 && unwrappedOraConn_tOracleInput_8 != null) {
                        unwrappedOraConn_tOracleInput_8.setSessionTimeZone(sessionTimezone_tOracleInput_8);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_8).setSessionTimeZone(sessionTimezone_tOracleInput_8);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_8 = conn_tOracleInput_8.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_8.setFetchSize(1000);


		    String dbquery_tOracleInput_8 = "SELECT \n  ID, \n  CONCAT(UPPER(TRIM(MED.MayusculasSinAcentos(NOMBRE))),NIT ) AS NITNOMBRE,\n  UPPER(TRIM(MED.Mayuscula"
+"sSinAcentos(NOMBRE))) AS NOMBRE, \n  NIT  \nFROM GEN_PROVEEDORES\nWHERE ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_8_QUERY",dbquery_tOracleInput_8);

		    java.sql.ResultSet rs_tOracleInput_8 = null;

		    try {
		    	rs_tOracleInput_8 = stmt_tOracleInput_8.executeQuery(dbquery_tOracleInput_8);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_8 = rs_tOracleInput_8.getMetaData();
		    	int colQtyInRs_tOracleInput_8 = rsmd_tOracleInput_8.getColumnCount();

		    String tmpContent_tOracleInput_8 = null;
		    
		    
		    while (rs_tOracleInput_8.next()) {
		        nb_line_tOracleInput_8++;
		        
							if(colQtyInRs_tOracleInput_8 < 1) {
								row21.ID = null;
							} else {
		                          
					if(rs_tOracleInput_8.getObject(1) != null) {
						row21.ID = rs_tOracleInput_8.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_8 < 2) {
								row21.NITNOMBRE = null;
							} else {
	                         		
        	row21.NITNOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 3) {
								row21.NOMBRE = null;
							} else {
	                         		
        	row21.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 4) {
								row21.NIT = null;
							} else {
	                         		
        	row21.NIT = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 4, false);
		                    }
					




 



/**
 * [tOracleInput_8 begin ] stop
 */
	
	/**
	 * [tOracleInput_8 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 


	tos_count_tOracleInput_8++;

/**
 * [tOracleInput_8 main ] stop
 */
	
	/**
	 * [tOracleInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 



/**
 * [tOracleInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tHash_row21 main ] start
	 */

	

	
	
	currentComponent="tHash_row21";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row21"
						
						);
					}
					

row21Struct row21_HashRow = new row21Struct();

					row21_HashRow.ID = row21.ID;
					row21_HashRow.NITNOMBRE = row21.NITNOMBRE;
					row21_HashRow.NOMBRE = row21.NOMBRE;
					row21_HashRow.NIT = row21.NIT;
tHash_row21.put(row21_HashRow, row21_HashRow);


 


	tos_count_tHash_row21++;

/**
 * [tHash_row21 main ] stop
 */
	
	/**
	 * [tHash_row21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHash_row21";
	
	

 



/**
 * [tHash_row21 process_data_begin ] stop
 */
	
	/**
	 * [tHash_row21 process_data_end ] start
	 */

	

	
	
	currentComponent="tHash_row21";
	
	

 



/**
 * [tHash_row21 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 



/**
 * [tOracleInput_8 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_8 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

}
}finally{
	if (rs_tOracleInput_8 != null) {
		rs_tOracleInput_8.close();
	}
	if (stmt_tOracleInput_8 != null) {
		stmt_tOracleInput_8.close();
	}
}

globalMap.put("tOracleInput_8_NB_LINE",nb_line_tOracleInput_8);
 

ok_Hash.put("tOracleInput_8", true);
end_Hash.put("tOracleInput_8", System.currentTimeMillis());




/**
 * [tOracleInput_8 end ] stop
 */

	
	/**
	 * [tHash_row21 end ] start
	 */

	

	
	
	currentComponent="tHash_row21";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row21");
			  	}
			  	
 

ok_Hash.put("tHash_row21", true);
end_Hash.put("tHash_row21", System.currentTimeMillis());




/**
 * [tHash_row21 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_8 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 



/**
 * [tOracleInput_8 finally ] stop
 */

	
	/**
	 * [tHash_row21 finally ] start
	 */

	

	
	
	currentComponent="tHash_row21";
	
	

 



/**
 * [tHash_row21 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_8_SUBPROCESS_STATE", 1);
	}
	


public static class row23Struct implements routines.system.IPersistableComparableLookupRow<row23Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NITNOMBRE;

				public String getNITNOMBRE () {
					return this.NITNOMBRE;
				}

				public Boolean NITNOMBREIsNullable(){
				    return true;
				}
				public Boolean NITNOMBREIsKey(){
				    return false;
				}
				public Integer NITNOMBRELength(){
				    return 4000;
				}
				public Integer NITNOMBREPrecision(){
				    return 0;
				}
				public String NITNOMBREDefault(){
				
					return null;
				
				}
				public String NITNOMBREComment(){
				
				    return "";
				
				}
				public String NITNOMBREPattern(){
				
					return "";
				
				}
				public String NITNOMBREOriginalDbColumnName(){
				
					return "NITNOMBRE";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return true;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 4000;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String NIT;

				public String getNIT () {
					return this.NIT;
				}

				public Boolean NITIsNullable(){
				    return true;
				}
				public Boolean NITIsKey(){
				    return false;
				}
				public Integer NITLength(){
				    return 100;
				}
				public Integer NITPrecision(){
				    return 0;
				}
				public String NITDefault(){
				
					return null;
				
				}
				public String NITComment(){
				
				    return "";
				
				}
				public String NITPattern(){
				
					return "";
				
				}
				public String NITOriginalDbColumnName(){
				
					return "NIT";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.NOMBRE == null) ? 0 : this.NOMBRE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row23Struct other = (row23Struct) obj;
		
						if (this.NOMBRE == null) {
							if (other.NOMBRE != null)
								return false;
						
						} else if (!this.NOMBRE.equals(other.NOMBRE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row23Struct other) {

		other.ID = this.ID;
	            other.NITNOMBRE = this.NITNOMBRE;
	            other.NOMBRE = this.NOMBRE;
	            other.NIT = this.NIT;
	            
	}

	public void copyKeysDataTo(row23Struct other) {

		other.NOMBRE = this.NOMBRE;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.ID = (BigDecimal) ois.readObject();
					
						this.NITNOMBRE = readString(dis,ois);
					
						this.NIT = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.ID = (BigDecimal) objectIn.readObject();
					
						this.NITNOMBRE = readString(dis,objectIn);
					
						this.NIT = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.ID);
					
						writeString(this.NITNOMBRE, dos, oos);
					
						writeString(this.NIT, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ID);
					
						writeString(this.NITNOMBRE, dos, objectOut);
					
						writeString(this.NIT, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NITNOMBRE="+NITNOMBRE);
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",NIT="+NIT);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row23Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.NOMBRE, other.NOMBRE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row23Struct row23 = new row23Struct();




	
	/**
	 * [tHash_row23 begin ] start
	 */

	

	
		
		ok_Hash.put("tHash_row23", false);
		start_Hash.put("tHash_row23", System.currentTimeMillis());
		
	
	currentComponent="tHash_row23";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row23");
					}
				
		int tos_count_tHash_row23 = 0;
		

				java.util.Map<row23Struct, row23Struct> tHash_row23 = new java.util.LinkedHashMap<row23Struct, row23Struct>();
	            globalMap.put("tHash_row23", tHash_row23);
			
            

 



/**
 * [tHash_row23 begin ] stop
 */



	
	/**
	 * [tOracleInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_9", false);
		start_Hash.put("tOracleInput_9", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_9";
	
	
		int tos_count_tOracleInput_9 = 0;
		
	


	
		    int nb_line_tOracleInput_9 = 0;
		    java.sql.Connection conn_tOracleInput_9 = null;
				conn_tOracleInput_9 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_9 = false;
				boolean isConnectionWrapped_tOracleInput_9 = !(conn_tOracleInput_9 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_9.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_9 = null;
                if (isConnectionWrapped_tOracleInput_9) {
					unwrappedOraConn_tOracleInput_9 = conn_tOracleInput_9.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_9 != null) {
                        isTimeZoneNull_tOracleInput_9 = (unwrappedOraConn_tOracleInput_9.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_9 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_9).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_9) {
					java.sql.Statement stmtGetTZ_tOracleInput_9 = conn_tOracleInput_9.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_9 = stmtGetTZ_tOracleInput_9.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_9 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_9.next()) {
						sessionTimezone_tOracleInput_9 = rsGetTZ_tOracleInput_9.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_9 && unwrappedOraConn_tOracleInput_9 != null) {
                        unwrappedOraConn_tOracleInput_9.setSessionTimeZone(sessionTimezone_tOracleInput_9);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_9).setSessionTimeZone(sessionTimezone_tOracleInput_9);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_9 = conn_tOracleInput_9.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_9.setFetchSize(1000);


		    String dbquery_tOracleInput_9 = "SELECT \n  ID, \n  CONCAT(UPPER(TRIM(MED.MayusculasSinAcentos(NOMBRE))),NIT ) AS NITNOMBRE,\n  UPPER(TRIM(MED.Mayuscula"
+"sSinAcentos(NOMBRE))) AS NOMBRE, \n  NIT  \nFROM GEN_PROVEEDORES\nWHERE ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_9_QUERY",dbquery_tOracleInput_9);

		    java.sql.ResultSet rs_tOracleInput_9 = null;

		    try {
		    	rs_tOracleInput_9 = stmt_tOracleInput_9.executeQuery(dbquery_tOracleInput_9);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_9 = rs_tOracleInput_9.getMetaData();
		    	int colQtyInRs_tOracleInput_9 = rsmd_tOracleInput_9.getColumnCount();

		    String tmpContent_tOracleInput_9 = null;
		    
		    
		    while (rs_tOracleInput_9.next()) {
		        nb_line_tOracleInput_9++;
		        
							if(colQtyInRs_tOracleInput_9 < 1) {
								row23.ID = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(1) != null) {
						row23.ID = rs_tOracleInput_9.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_9 < 2) {
								row23.NITNOMBRE = null;
							} else {
	                         		
        	row23.NITNOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 3) {
								row23.NOMBRE = null;
							} else {
	                         		
        	row23.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 4) {
								row23.NIT = null;
							} else {
	                         		
        	row23.NIT = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 4, false);
		                    }
					




 



/**
 * [tOracleInput_9 begin ] stop
 */
	
	/**
	 * [tOracleInput_9 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 


	tos_count_tOracleInput_9++;

/**
 * [tOracleInput_9 main ] stop
 */
	
	/**
	 * [tOracleInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 



/**
 * [tOracleInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tHash_row23 main ] start
	 */

	

	
	
	currentComponent="tHash_row23";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row23"
						
						);
					}
					

row23Struct row23_HashRow = new row23Struct();

					row23_HashRow.ID = row23.ID;
					row23_HashRow.NITNOMBRE = row23.NITNOMBRE;
					row23_HashRow.NOMBRE = row23.NOMBRE;
					row23_HashRow.NIT = row23.NIT;
tHash_row23.put(row23_HashRow, row23_HashRow);


 


	tos_count_tHash_row23++;

/**
 * [tHash_row23 main ] stop
 */
	
	/**
	 * [tHash_row23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHash_row23";
	
	

 



/**
 * [tHash_row23 process_data_begin ] stop
 */
	
	/**
	 * [tHash_row23 process_data_end ] start
	 */

	

	
	
	currentComponent="tHash_row23";
	
	

 



/**
 * [tHash_row23 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 



/**
 * [tOracleInput_9 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_9 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

}
}finally{
	if (rs_tOracleInput_9 != null) {
		rs_tOracleInput_9.close();
	}
	if (stmt_tOracleInput_9 != null) {
		stmt_tOracleInput_9.close();
	}
}

globalMap.put("tOracleInput_9_NB_LINE",nb_line_tOracleInput_9);
 

ok_Hash.put("tOracleInput_9", true);
end_Hash.put("tOracleInput_9", System.currentTimeMillis());




/**
 * [tOracleInput_9 end ] stop
 */

	
	/**
	 * [tHash_row23 end ] start
	 */

	

	
	
	currentComponent="tHash_row23";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row23");
			  	}
			  	
 

ok_Hash.put("tHash_row23", true);
end_Hash.put("tHash_row23", System.currentTimeMillis());




/**
 * [tHash_row23 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_9 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 



/**
 * [tOracleInput_9 finally ] stop
 */

	
	/**
	 * [tHash_row23 finally ] start
	 */

	

	
	
	currentComponent="tHash_row23";
	
	

 



/**
 * [tHash_row23 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_9_SUBPROCESS_STATE", 1);
	}
	


public static class row32Struct implements routines.system.IPersistableComparableLookupRow<row32Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return true;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return null;
				}
				public Integer NOMBREPrecision(){
				    return null;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public String SIGLA;

				public String getSIGLA () {
					return this.SIGLA;
				}

				public Boolean SIGLAIsNullable(){
				    return true;
				}
				public Boolean SIGLAIsKey(){
				    return false;
				}
				public Integer SIGLALength(){
				    return null;
				}
				public Integer SIGLAPrecision(){
				    return null;
				}
				public String SIGLADefault(){
				
					return null;
				
				}
				public String SIGLAComment(){
				
				    return "";
				
				}
				public String SIGLAPattern(){
				
					return "";
				
				}
				public String SIGLAOriginalDbColumnName(){
				
					return "SIGLA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.NOMBRE == null) ? 0 : this.NOMBRE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row32Struct other = (row32Struct) obj;
		
						if (this.NOMBRE == null) {
							if (other.NOMBRE != null)
								return false;
						
						} else if (!this.NOMBRE.equals(other.NOMBRE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row32Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.SIGLA = this.SIGLA;
	            
	}

	public void copyKeysDataTo(row32Struct other) {

		other.NOMBRE = this.NOMBRE;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales.length == 0) {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_PRODUCTOS_COMERCIALES_CargaProductosComerciales) {

        	try {

        		int length = 0;
		
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.ID = (BigDecimal) ois.readObject();
					
						this.SIGLA = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.ID = (BigDecimal) objectIn.readObject();
					
						this.SIGLA = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.ID);
					
						writeString(this.SIGLA, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ID);
					
						writeString(this.SIGLA, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",SIGLA="+SIGLA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row32Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.NOMBRE, other.NOMBRE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row32Struct row32 = new row32Struct();




	
	/**
	 * [tHash_row32 begin ] start
	 */

	

	
		
		ok_Hash.put("tHash_row32", false);
		start_Hash.put("tHash_row32", System.currentTimeMillis());
		
	
	currentComponent="tHash_row32";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row32");
					}
				
		int tos_count_tHash_row32 = 0;
		

				java.util.Map<row32Struct, row32Struct> tHash_row32 = new java.util.LinkedHashMap<row32Struct, row32Struct>();
	            globalMap.put("tHash_row32", tHash_row32);
			
            

 



/**
 * [tHash_row32 begin ] stop
 */



	
	/**
	 * [tOracleInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_6", false);
		start_Hash.put("tOracleInput_6", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_6";
	
	
		int tos_count_tOracleInput_6 = 0;
		
	


	
		    int nb_line_tOracleInput_6 = 0;
		    java.sql.Connection conn_tOracleInput_6 = null;
				conn_tOracleInput_6 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_6 = false;
				boolean isConnectionWrapped_tOracleInput_6 = !(conn_tOracleInput_6 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_6.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_6 = null;
                if (isConnectionWrapped_tOracleInput_6) {
					unwrappedOraConn_tOracleInput_6 = conn_tOracleInput_6.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_6 != null) {
                        isTimeZoneNull_tOracleInput_6 = (unwrappedOraConn_tOracleInput_6.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_6 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_6).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_6) {
					java.sql.Statement stmtGetTZ_tOracleInput_6 = conn_tOracleInput_6.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_6 = stmtGetTZ_tOracleInput_6.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_6 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_6.next()) {
						sessionTimezone_tOracleInput_6 = rsGetTZ_tOracleInput_6.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_6 && unwrappedOraConn_tOracleInput_6 != null) {
                        unwrappedOraConn_tOracleInput_6.setSessionTimeZone(sessionTimezone_tOracleInput_6);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_6).setSessionTimeZone(sessionTimezone_tOracleInput_6);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_6 = conn_tOracleInput_6.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
																					java.sql.ResultSet.CONCUR_READ_ONLY);
			
                stmt_tOracleInput_6.setFetchSize(1000);


		    String dbquery_tOracleInput_6 = "SELECT \n  ID, \n  translate(UPPER(TRIM(NOMBRE)) , 'áéíóúÁÉÍÓÚ', 'aeiouAEIOU') AS NOMBRE, \n  translate(UPPER(TRIM(SIGL"
+"A)) , 'áéíóúÁÉÍÓÚ', 'aeiouAEIOU') AS SIGLA \nFROM MED_TCARACTERISTICAS\nWHERE translate(UPPER(TRIM(TIPO)) , 'áéíóúÁÉÍÓÚ'"
+", 'aeiouAEIOU') = 'CLASIFICACION'  AND ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_6_QUERY",dbquery_tOracleInput_6);

		    java.sql.ResultSet rs_tOracleInput_6 = null;

		    try {
		    	rs_tOracleInput_6 = stmt_tOracleInput_6.executeQuery(dbquery_tOracleInput_6);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_6 = rs_tOracleInput_6.getMetaData();
		    	int colQtyInRs_tOracleInput_6 = rsmd_tOracleInput_6.getColumnCount();

		    String tmpContent_tOracleInput_6 = null;
		    
		    
		    while (rs_tOracleInput_6.next()) {
		        nb_line_tOracleInput_6++;
		        
							if(colQtyInRs_tOracleInput_6 < 1) {
								row32.ID = null;
							} else {
		                          
					if(rs_tOracleInput_6.getObject(1) != null) {
						row32.ID = rs_tOracleInput_6.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_6 < 2) {
								row32.NOMBRE = null;
							} else {
	                         		
        	row32.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_6, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_6 < 3) {
								row32.SIGLA = null;
							} else {
	                         		
        	row32.SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_6, 3, false);
		                    }
					




 



/**
 * [tOracleInput_6 begin ] stop
 */
	
	/**
	 * [tOracleInput_6 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 


	tos_count_tOracleInput_6++;

/**
 * [tOracleInput_6 main ] stop
 */
	
	/**
	 * [tOracleInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 



/**
 * [tOracleInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tHash_row32 main ] start
	 */

	

	
	
	currentComponent="tHash_row32";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row32"
						
						);
					}
					

row32Struct row32_HashRow = new row32Struct();

					row32_HashRow.ID = row32.ID;
					row32_HashRow.NOMBRE = row32.NOMBRE;
					row32_HashRow.SIGLA = row32.SIGLA;
tHash_row32.put(row32_HashRow, row32_HashRow);


 


	tos_count_tHash_row32++;

/**
 * [tHash_row32 main ] stop
 */
	
	/**
	 * [tHash_row32 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHash_row32";
	
	

 



/**
 * [tHash_row32 process_data_begin ] stop
 */
	
	/**
	 * [tHash_row32 process_data_end ] start
	 */

	

	
	
	currentComponent="tHash_row32";
	
	

 



/**
 * [tHash_row32 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 



/**
 * [tOracleInput_6 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_6 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

}
}finally{
	if (rs_tOracleInput_6 != null) {
		rs_tOracleInput_6.close();
	}
	if (stmt_tOracleInput_6 != null) {
		stmt_tOracleInput_6.close();
	}
}

globalMap.put("tOracleInput_6_NB_LINE",nb_line_tOracleInput_6);
 

ok_Hash.put("tOracleInput_6", true);
end_Hash.put("tOracleInput_6", System.currentTimeMillis());




/**
 * [tOracleInput_6 end ] stop
 */

	
	/**
	 * [tHash_row32 end ] start
	 */

	

	
	
	currentComponent="tHash_row32";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row32");
			  	}
			  	
 

ok_Hash.put("tHash_row32", true);
end_Hash.put("tHash_row32", System.currentTimeMillis());




/**
 * [tHash_row32 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_6 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 



/**
 * [tOracleInput_6 finally ] stop
 */

	
	/**
	 * [tHash_row32 finally ] start
	 */

	

	
	
	currentComponent="tHash_row32";
	
	

 



/**
 * [tHash_row32 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_6_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };


    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final CargaProductosComerciales CargaProductosComercialesClass = new CargaProductosComerciales();

        int exitCode = CargaProductosComercialesClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = (String[][])globalBuffer.toArray(new String[globalBuffer.size()][]);

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        		hastBufferOutput = true;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = CargaProductosComerciales.class.getClassLoader().getResourceAsStream("med_cargue_productos_comerciales/cargaproductoscomerciales_0_2/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = CargaProductosComerciales.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }
            
            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("db_origen_AdditionalParams", "id_String");
                        if(context.getStringValue("db_origen_AdditionalParams") == null) {
                            context.db_origen_AdditionalParams = null;
                        } else {
                            context.db_origen_AdditionalParams=(String) context.getProperty("db_origen_AdditionalParams");
                        }
                        context.setContextType("db_origen_Login", "id_String");
                        if(context.getStringValue("db_origen_Login") == null) {
                            context.db_origen_Login = null;
                        } else {
                            context.db_origen_Login=(String) context.getProperty("db_origen_Login");
                        }
                        context.setContextType("db_origen_Password", "id_String");
                        if(context.getStringValue("db_origen_Password") == null) {
                            context.db_origen_Password = null;
                        } else {
                            context.db_origen_Password=(String) context.getProperty("db_origen_Password");
                        }
                        context.setContextType("db_origen_Port", "id_String");
                        if(context.getStringValue("db_origen_Port") == null) {
                            context.db_origen_Port = null;
                        } else {
                            context.db_origen_Port=(String) context.getProperty("db_origen_Port");
                        }
                        context.setContextType("db_origen_Schema", "id_String");
                        if(context.getStringValue("db_origen_Schema") == null) {
                            context.db_origen_Schema = null;
                        } else {
                            context.db_origen_Schema=(String) context.getProperty("db_origen_Schema");
                        }
                        context.setContextType("db_origen_Server", "id_String");
                        if(context.getStringValue("db_origen_Server") == null) {
                            context.db_origen_Server = null;
                        } else {
                            context.db_origen_Server=(String) context.getProperty("db_origen_Server");
                        }
                        context.setContextType("db_origen_ServiceName", "id_String");
                        if(context.getStringValue("db_origen_ServiceName") == null) {
                            context.db_origen_ServiceName = null;
                        } else {
                            context.db_origen_ServiceName=(String) context.getProperty("db_origen_ServiceName");
                        }
                        context.setContextType("ERROR", "id_String");
                        if(context.getStringValue("ERROR") == null) {
                            context.ERROR = null;
                        } else {
                            context.ERROR=(String) context.getProperty("ERROR");
                        }
                        context.setContextType("ESTADO", "id_String");
                        if(context.getStringValue("ESTADO") == null) {
                            context.ESTADO = null;
                        } else {
                            context.ESTADO=(String) context.getProperty("ESTADO");
                        }
                        context.setContextType("ESTADO_EXEC", "id_String");
                        if(context.getStringValue("ESTADO_EXEC") == null) {
                            context.ESTADO_EXEC = null;
                        } else {
                            context.ESTADO_EXEC=(String) context.getProperty("ESTADO_EXEC");
                        }
                        context.setContextType("FECHA_EJECUCION", "id_String");
                        if(context.getStringValue("FECHA_EJECUCION") == null) {
                            context.FECHA_EJECUCION = null;
                        } else {
                            context.FECHA_EJECUCION=(String) context.getProperty("FECHA_EJECUCION");
                        }
                        context.setContextType("HORA_FINAL", "id_String");
                        if(context.getStringValue("HORA_FINAL") == null) {
                            context.HORA_FINAL = null;
                        } else {
                            context.HORA_FINAL=(String) context.getProperty("HORA_FINAL");
                        }
                        context.setContextType("HORA_INICIO", "id_String");
                        if(context.getStringValue("HORA_INICIO") == null) {
                            context.HORA_INICIO = null;
                        } else {
                            context.HORA_INICIO=(String) context.getProperty("HORA_INICIO");
                        }
                        context.setContextType("LOGS_ERROR", "id_String");
                        if(context.getStringValue("LOGS_ERROR") == null) {
                            context.LOGS_ERROR = null;
                        } else {
                            context.LOGS_ERROR=(String) context.getProperty("LOGS_ERROR");
                        }
                        context.setContextType("LOGS_EXECUTION", "id_String");
                        if(context.getStringValue("LOGS_EXECUTION") == null) {
                            context.LOGS_EXECUTION = null;
                        } else {
                            context.LOGS_EXECUTION=(String) context.getProperty("LOGS_EXECUTION");
                        }
                        context.setContextType("ORIGEN", "id_String");
                        if(context.getStringValue("ORIGEN") == null) {
                            context.ORIGEN = null;
                        } else {
                            context.ORIGEN=(String) context.getProperty("ORIGEN");
                        }
                        context.setContextType("carga_id", "id_BigDecimal");
                        if(context.getStringValue("carga_id") == null) {
                            context.carga_id = null;
                        } else {
                            try{
                                context.carga_id=routines.system.ParserUtils.parseTo_BigDecimal (context.getProperty("carga_id"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "carga_id", e.getMessage()));
                                context.carga_id=null;
                            }
                        }
                        context.setContextType("Contenido", "id_Object");
                        if(context.getStringValue("Contenido") == null) {
                            context.Contenido = null;
                        } else {
                            context.Contenido=(Object) context.getProperty("Contenido");
                        }
                        context.setContextType("IsValid", "id_Boolean");
                        if(context.getStringValue("IsValid") == null) {
                            context.IsValid = null;
                        } else {
                            try{
                                context.IsValid=routines.system.ParserUtils.parseTo_Boolean (context.getProperty("IsValid"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "IsValid", e.getMessage()));
                                context.IsValid=null;
                            }
                        }
                        context.setContextType("nombre", "id_String");
                        if(context.getStringValue("nombre") == null) {
                            context.nombre = null;
                        } else {
                            context.nombre=(String) context.getProperty("nombre");
                        }
                        context.setContextType("result", "id_String");
                        if(context.getStringValue("result") == null) {
                            context.result = null;
                        } else {
                            context.result=(String) context.getProperty("result");
                        }
                        context.setContextType("Salida", "id_Object");
                        if(context.getStringValue("Salida") == null) {
                            context.Salida = null;
                        } else {
                            context.Salida=(Object) context.getProperty("Salida");
                        }
                        context.setContextType("TContenido", "id_String");
                        if(context.getStringValue("TContenido") == null) {
                            context.TContenido = null;
                        } else {
                            context.TContenido=(String) context.getProperty("TContenido");
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("db_origen_AdditionalParams")) {
                context.db_origen_AdditionalParams = (String) parentContextMap.get("db_origen_AdditionalParams");
            }if (parentContextMap.containsKey("db_origen_Login")) {
                context.db_origen_Login = (String) parentContextMap.get("db_origen_Login");
            }if (parentContextMap.containsKey("db_origen_Password")) {
                context.db_origen_Password = (String) parentContextMap.get("db_origen_Password");
            }if (parentContextMap.containsKey("db_origen_Port")) {
                context.db_origen_Port = (String) parentContextMap.get("db_origen_Port");
            }if (parentContextMap.containsKey("db_origen_Schema")) {
                context.db_origen_Schema = (String) parentContextMap.get("db_origen_Schema");
            }if (parentContextMap.containsKey("db_origen_Server")) {
                context.db_origen_Server = (String) parentContextMap.get("db_origen_Server");
            }if (parentContextMap.containsKey("db_origen_ServiceName")) {
                context.db_origen_ServiceName = (String) parentContextMap.get("db_origen_ServiceName");
            }if (parentContextMap.containsKey("ERROR")) {
                context.ERROR = (String) parentContextMap.get("ERROR");
            }if (parentContextMap.containsKey("ESTADO")) {
                context.ESTADO = (String) parentContextMap.get("ESTADO");
            }if (parentContextMap.containsKey("ESTADO_EXEC")) {
                context.ESTADO_EXEC = (String) parentContextMap.get("ESTADO_EXEC");
            }if (parentContextMap.containsKey("FECHA_EJECUCION")) {
                context.FECHA_EJECUCION = (String) parentContextMap.get("FECHA_EJECUCION");
            }if (parentContextMap.containsKey("HORA_FINAL")) {
                context.HORA_FINAL = (String) parentContextMap.get("HORA_FINAL");
            }if (parentContextMap.containsKey("HORA_INICIO")) {
                context.HORA_INICIO = (String) parentContextMap.get("HORA_INICIO");
            }if (parentContextMap.containsKey("LOGS_ERROR")) {
                context.LOGS_ERROR = (String) parentContextMap.get("LOGS_ERROR");
            }if (parentContextMap.containsKey("LOGS_EXECUTION")) {
                context.LOGS_EXECUTION = (String) parentContextMap.get("LOGS_EXECUTION");
            }if (parentContextMap.containsKey("ORIGEN")) {
                context.ORIGEN = (String) parentContextMap.get("ORIGEN");
            }if (parentContextMap.containsKey("carga_id")) {
                context.carga_id = (BigDecimal) parentContextMap.get("carga_id");
            }if (parentContextMap.containsKey("Contenido")) {
                context.Contenido = (Object) parentContextMap.get("Contenido");
            }if (parentContextMap.containsKey("IsValid")) {
                context.IsValid = (Boolean) parentContextMap.get("IsValid");
            }if (parentContextMap.containsKey("nombre")) {
                context.nombre = (String) parentContextMap.get("nombre");
            }if (parentContextMap.containsKey("result")) {
                context.result = (String) parentContextMap.get("result");
            }if (parentContextMap.containsKey("Salida")) {
                context.Salida = (Object) parentContextMap.get("Salida");
            }if (parentContextMap.containsKey("TContenido")) {
                context.TContenido = (String) parentContextMap.get("TContenido");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob





this.globalResumeTicket = false;//to run others jobs

try {
errorCode = null;tFileInputXML_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tFileInputXML_1) {
globalMap.put("tFileInputXML_1_SUBPROCESS_STATE", -1);

e_tFileInputXML_1.printStackTrace();

}
try {
errorCode = null;tOracleInput_3Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tOracleInput_3) {
globalMap.put("tOracleInput_3_SUBPROCESS_STATE", -1);

e_tOracleInput_3.printStackTrace();

}

this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : CargaProductosComerciales");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;


    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tOracleConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tOracleConnection_1", globalMap.get("conn_tOracleConnection_1"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--context_file")) {
        	String keyValue = arg.substring(15);
        	String filePath = new String(java.util.Base64.getDecoder().decode(keyValue));
        	java.nio.file.Path contextFile = java.nio.file.Paths.get(filePath);
            try (java.io.BufferedReader reader = java.nio.file.Files.newBufferedReader(contextFile)) {
                String line;
                while ((line = reader.readLine()) != null) {
                    int index = -1;
                    if ( (index = line.indexOf('=')) > -1) {
							if (line.startsWith("--context_param")) {
								if ("id_Password".equals(context_param.getContextType(line.substring(16, index)))) {
									context_param.put(line.substring(16, index), routines.system.PasswordEncryptUtil.decryptPassword(
											line.substring(index + 1)));
								} else {
									context_param.put(line.substring(16, index), line.substring(index + 1));
								}
							}else {//--context_type
								context_param.setContextType(line.substring(15, index), line.substring(index + 1));
							}
                    }
                }
            } catch (java.io.IOException e) {
            	System.err.println("Could not load the context file: " + filePath);
                e.printStackTrace();
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     3710932 characters generated by Talend Open Studio for ESB 
 *     on the October 28, 2024, 3:14:29 PM COT
 ************************************************************************************************/