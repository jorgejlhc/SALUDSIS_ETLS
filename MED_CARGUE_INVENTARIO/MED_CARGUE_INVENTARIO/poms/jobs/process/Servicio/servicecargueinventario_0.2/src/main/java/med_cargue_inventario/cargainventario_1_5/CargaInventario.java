// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for ESB
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package med_cargue_inventario.cargainventario_1_5;

import routines.Numeric;
import routines.ColumnName;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.Utils;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJava_3
	//import java.util.List;

	//the import part of tJava_4
	//import java.util.List;

	//the import part of tJavaRow_1
	//import java.util.List;

	//the import part of tJavaRow_5
	//import java.util.List;

	//the import part of tJavaRow_3
	//import java.util.List;

	//the import part of tJavaFlex_2
	//import java.util.List;

	//the import part of tJavaRow_4
	//import java.util.List;

	//the import part of tJavaRow_6
	//import java.util.List;

	//the import part of tJavaRow_9
	//import java.util.List;

	//the import part of tJavaRow_2
	//import java.util.List;

	//the import part of tJavaRow_7
	//import java.util.List;

	//the import part of tJavaFlex_1
	//import java.util.List;

	//the import part of tJava_2
	//import java.util.List;

	//the import part of tJava_1
	//import java.util.List;

	//the import part of tJava_5
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: CargaInventario Purpose: <br>
 * Description:  <br>
 * @author jorgejlhc@gmail.com
 * @version 8.8.8.20240722_1936-SNAPSHOT
 * @status 
 */
public class CargaInventario implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(db_origen_AdditionalParams != null){
				
					this.setProperty("db_origen_AdditionalParams", db_origen_AdditionalParams.toString());
				
			}
			
			if(db_origen_Login != null){
				
					this.setProperty("db_origen_Login", db_origen_Login.toString());
				
			}
			
			if(db_origen_Password != null){
				
					this.setProperty("db_origen_Password", db_origen_Password.toString());
				
			}
			
			if(db_origen_Port != null){
				
					this.setProperty("db_origen_Port", db_origen_Port.toString());
				
			}
			
			if(db_origen_Schema != null){
				
					this.setProperty("db_origen_Schema", db_origen_Schema.toString());
				
			}
			
			if(db_origen_Server != null){
				
					this.setProperty("db_origen_Server", db_origen_Server.toString());
				
			}
			
			if(db_origen_ServiceName != null){
				
					this.setProperty("db_origen_ServiceName", db_origen_ServiceName.toString());
				
			}
			
			if(ERROR != null){
				
					this.setProperty("ERROR", ERROR.toString());
				
			}
			
			if(ESTADO != null){
				
					this.setProperty("ESTADO", ESTADO.toString());
				
			}
			
			if(ESTADO_EXEC != null){
				
					this.setProperty("ESTADO_EXEC", ESTADO_EXEC.toString());
				
			}
			
			if(FECHA_EJECUCION != null){
				
					this.setProperty("FECHA_EJECUCION", FECHA_EJECUCION.toString());
				
			}
			
			if(HORA_FINAL != null){
				
					this.setProperty("HORA_FINAL", HORA_FINAL.toString());
				
			}
			
			if(HORA_INICIO != null){
				
					this.setProperty("HORA_INICIO", HORA_INICIO.toString());
				
			}
			
			if(LOGS_ERROR != null){
				
					this.setProperty("LOGS_ERROR", LOGS_ERROR.toString());
				
			}
			
			if(LOGS_EXECUTION != null){
				
					this.setProperty("LOGS_EXECUTION", LOGS_EXECUTION.toString());
				
			}
			
			if(ORIGEN != null){
				
					this.setProperty("ORIGEN", ORIGEN.toString());
				
			}
			
			if(bodega_id != null){
				
					this.setProperty("bodega_id", bodega_id.toString());
				
			}
			
			if(cantFilas != null){
				
					this.setProperty("cantFilas", cantFilas.toString());
				
			}
			
			if(carga_id != null){
				
					this.setProperty("carga_id", carga_id.toString());
				
			}
			
			if(Contenido != null){
				
					this.setProperty("Contenido", Contenido.toString());
				
			}
			
			if(contrato_id != null){
				
					this.setProperty("contrato_id", contrato_id.toString());
				
			}
			
			if(IsValid != null){
				
					this.setProperty("IsValid", IsValid.toString());
				
			}
			
			if(movimiento_id != null){
				
					this.setProperty("movimiento_id", movimiento_id.toString());
				
			}
			
			if(nombre != null){
				
					this.setProperty("nombre", nombre.toString());
				
			}
			
			if(result != null){
				
					this.setProperty("result", result.toString());
				
			}
			
			if(Salida != null){
				
					this.setProperty("Salida", Salida.toString());
				
			}
			
			if(TContenido != null){
				
					this.setProperty("TContenido", TContenido.toString());
				
			}
			
			if(tmovimiento_id != null){
				
					this.setProperty("tmovimiento_id", tmovimiento_id.toString());
				
			}
			
			if(tvencimiento != null){
				
					this.setProperty("tvencimiento", tvencimiento.toString());
				
			}
			
			if(usuario_id != null){
				
					this.setProperty("usuario_id", usuario_id.toString());
				
			}
			
			if(TipoProducto != null){
				
					this.setProperty("TipoProducto", TipoProducto.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String db_origen_AdditionalParams;
public String getDb_origen_AdditionalParams(){
	return this.db_origen_AdditionalParams;
}
public String db_origen_Login;
public String getDb_origen_Login(){
	return this.db_origen_Login;
}
public String db_origen_Password;
public String getDb_origen_Password(){
	return this.db_origen_Password;
}
public String db_origen_Port;
public String getDb_origen_Port(){
	return this.db_origen_Port;
}
public String db_origen_Schema;
public String getDb_origen_Schema(){
	return this.db_origen_Schema;
}
public String db_origen_Server;
public String getDb_origen_Server(){
	return this.db_origen_Server;
}
public String db_origen_ServiceName;
public String getDb_origen_ServiceName(){
	return this.db_origen_ServiceName;
}
public String ERROR;
public String getERROR(){
	return this.ERROR;
}
public String ESTADO;
public String getESTADO(){
	return this.ESTADO;
}
public String ESTADO_EXEC;
public String getESTADO_EXEC(){
	return this.ESTADO_EXEC;
}
public String FECHA_EJECUCION;
public String getFECHA_EJECUCION(){
	return this.FECHA_EJECUCION;
}
public String HORA_FINAL;
public String getHORA_FINAL(){
	return this.HORA_FINAL;
}
public String HORA_INICIO;
public String getHORA_INICIO(){
	return this.HORA_INICIO;
}
public String LOGS_ERROR;
public String getLOGS_ERROR(){
	return this.LOGS_ERROR;
}
public String LOGS_EXECUTION;
public String getLOGS_EXECUTION(){
	return this.LOGS_EXECUTION;
}
public String ORIGEN;
public String getORIGEN(){
	return this.ORIGEN;
}
public BigDecimal bodega_id;
public BigDecimal getBodega_id(){
	return this.bodega_id;
}
public Integer cantFilas;
public Integer getCantFilas(){
	return this.cantFilas;
}
public BigDecimal carga_id;
public BigDecimal getCarga_id(){
	return this.carga_id;
}
public Object Contenido;
public Object getContenido(){
	return this.Contenido;
}
public BigDecimal contrato_id;
public BigDecimal getContrato_id(){
	return this.contrato_id;
}
public Boolean IsValid;
public Boolean getIsValid(){
	return this.IsValid;
}
public BigDecimal movimiento_id;
public BigDecimal getMovimiento_id(){
	return this.movimiento_id;
}
public String nombre;
public String getNombre(){
	return this.nombre;
}
public String result;
public String getResult(){
	return this.result;
}
public Object Salida;
public Object getSalida(){
	return this.Salida;
}
public String TContenido;
public String getTContenido(){
	return this.TContenido;
}
public BigDecimal tmovimiento_id;
public BigDecimal getTmovimiento_id(){
	return this.tmovimiento_id;
}
public Integer tvencimiento;
public Integer getTvencimiento(){
	return this.tvencimiento;
}
public BigDecimal usuario_id;
public BigDecimal getUsuario_id(){
	return this.usuario_id;
}
public String TipoProducto;
public String getTipoProducto(){
	return this.TipoProducto;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "1.5";
	private final String jobName = "CargaInventario";
	private final String projectName = "MED_CARGUE_INVENTARIO";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
        private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();
	
		private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
		public  final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	LogCatcherUtils tLogCatcher_1 = new LogCatcherUtils();

private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				CargaInventario.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(CargaInventario.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
				tLogCatcher_1.addMessage("Java Exception", currentComponent, 6, e.getClass().getName() + ":" + e.getMessage(), 1);
				tLogCatcher_1Process(globalMap);
			}
			} catch (TalendException e) {
				// do nothing
			
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleClose_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleClose_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputXML_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputXML_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tOracleConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
						try {
							
								if(this.execStat){
									runStat.updateStatOnConnection("OnComponentError1", 0, "error");
								}
							
							
								errorCode = null;
								tJava_1Process(globalMap);
								if (!"failure".equals(status)) {
									status = "end";
								}
								

						} catch (Exception e) {
							e.printStackTrace();
						}
						
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaFlex_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_44_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_71_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_54_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUnite_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaFlex_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tBufferOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRunJob_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRunJob_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRunJob_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRunJob_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tBufferOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogCatcher_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRunJob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSortRow_1_SortOut_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tSortRow_1_SortIn_error(exception, errorComponent, globalMap);
						
						}
					
			public void tSortRow_1_SortIn_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleClose_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputXML_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "ERROR", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

				try {
					
						if(this.execStat){
							runStat.updateStatOnConnection("OnSubjobError1", 0, "error");
						}
					
					errorCode = null;
					tFixedFlowInput_1Process(globalMap);
					if (!"failure".equals(status)) {
						status = "end";
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
			public void tOracleInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRunJob_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRunJob_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tLogCatcher_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	









public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";
	
	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk11", 0, "ok");
				}
				tJava_3Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_3", false);
		start_Hash.put("tJava_3", System.currentTimeMillis());
		
	
	currentComponent="tJava_3";
	
	
		int tos_count_tJava_3 = 0;
		


context.HORA_FINAL = TalendDate.getDate("HH:mm:ss");

 



/**
 * [tJava_3 begin ] stop
 */
	
	/**
	 * [tJava_3 main ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 


	tos_count_tJava_3++;

/**
 * [tJava_3 main ] stop
 */
	
	/**
	 * [tJava_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_begin ] stop
 */
	
	/**
	 * [tJava_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_end ] stop
 */
	
	/**
	 * [tJava_3 end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 

ok_Hash.put("tJava_3", true);
end_Hash.put("tJava_3", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk12", 0, "ok");
				}
				tOracleClose_1Process(globalMap);
				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk13", 0, "ok");
				}
				tFixedFlowInput_3Process(globalMap);



/**
 * [tJava_3 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_3 finally ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_3_SUBPROCESS_STATE", 1);
	}
	


public void tOracleClose_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleClose_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tOracleClose_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleClose_1", false);
		start_Hash.put("tOracleClose_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleClose_1";
	
	
		int tos_count_tOracleClose_1 = 0;
		

 



/**
 * [tOracleClose_1 begin ] stop
 */
	
	/**
	 * [tOracleClose_1 main ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

	java.sql.Connection conn_tOracleClose_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
	
	if(conn_tOracleClose_1 != null && !conn_tOracleClose_1.isClosed())
	{
		
			conn_tOracleClose_1.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_tOracleConnection_1"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}

 


	tos_count_tOracleClose_1++;

/**
 * [tOracleClose_1 main ] stop
 */
	
	/**
	 * [tOracleClose_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleClose_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleClose_1 end ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 

ok_Hash.put("tOracleClose_1", true);
end_Hash.put("tOracleClose_1", System.currentTimeMillis());




/**
 * [tOracleClose_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleClose_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleClose_1_SUBPROCESS_STATE", 1);
	}
	


public static class row38Struct implements routines.system.IPersistableRow<row38Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public String FECHA_EJECUCION;

				public String getFECHA_EJECUCION () {
					return this.FECHA_EJECUCION;
				}

				public Boolean FECHA_EJECUCIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_EJECUCIONIsKey(){
				    return false;
				}
				public Integer FECHA_EJECUCIONLength(){
				    return null;
				}
				public Integer FECHA_EJECUCIONPrecision(){
				    return null;
				}
				public String FECHA_EJECUCIONDefault(){
				
					return null;
				
				}
				public String FECHA_EJECUCIONComment(){
				
				    return "";
				
				}
				public String FECHA_EJECUCIONPattern(){
				
					return "";
				
				}
				public String FECHA_EJECUCIONOriginalDbColumnName(){
				
					return "FECHA_EJECUCION";
				
				}

				
			    public String HORA_INICIO;

				public String getHORA_INICIO () {
					return this.HORA_INICIO;
				}

				public Boolean HORA_INICIOIsNullable(){
				    return true;
				}
				public Boolean HORA_INICIOIsKey(){
				    return false;
				}
				public Integer HORA_INICIOLength(){
				    return null;
				}
				public Integer HORA_INICIOPrecision(){
				    return null;
				}
				public String HORA_INICIODefault(){
				
					return null;
				
				}
				public String HORA_INICIOComment(){
				
				    return "";
				
				}
				public String HORA_INICIOPattern(){
				
					return "";
				
				}
				public String HORA_INICIOOriginalDbColumnName(){
				
					return "HORA_INICIO";
				
				}

				
			    public String HORA_FINAL;

				public String getHORA_FINAL () {
					return this.HORA_FINAL;
				}

				public Boolean HORA_FINALIsNullable(){
				    return true;
				}
				public Boolean HORA_FINALIsKey(){
				    return false;
				}
				public Integer HORA_FINALLength(){
				    return null;
				}
				public Integer HORA_FINALPrecision(){
				    return null;
				}
				public String HORA_FINALDefault(){
				
					return null;
				
				}
				public String HORA_FINALComment(){
				
				    return "";
				
				}
				public String HORA_FINALPattern(){
				
					return "";
				
				}
				public String HORA_FINALOriginalDbColumnName(){
				
					return "HORA_FINAL";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return null;
				}
				public Integer ESTADOPrecision(){
				    return null;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String JOBS;

				public String getJOBS () {
					return this.JOBS;
				}

				public Boolean JOBSIsNullable(){
				    return true;
				}
				public Boolean JOBSIsKey(){
				    return false;
				}
				public Integer JOBSLength(){
				    return null;
				}
				public Integer JOBSPrecision(){
				    return null;
				}
				public String JOBSDefault(){
				
					return null;
				
				}
				public String JOBSComment(){
				
				    return "";
				
				}
				public String JOBSPattern(){
				
					return "";
				
				}
				public String JOBSOriginalDbColumnName(){
				
					return "JOBS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.FECHA_EJECUCION = readString(dis);
					
					this.HORA_INICIO = readString(dis);
					
					this.HORA_FINAL = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.JOBS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.FECHA_EJECUCION = readString(dis);
					
					this.HORA_INICIO = readString(dis);
					
					this.HORA_FINAL = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.JOBS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FECHA_EJECUCION,dos);
					
					// String
				
						writeString(this.HORA_INICIO,dos);
					
					// String
				
						writeString(this.HORA_FINAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.JOBS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.FECHA_EJECUCION,dos);
					
					// String
				
						writeString(this.HORA_INICIO,dos);
					
					// String
				
						writeString(this.HORA_FINAL,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.JOBS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FECHA_EJECUCION="+FECHA_EJECUCION);
		sb.append(",HORA_INICIO="+HORA_INICIO);
		sb.append(",HORA_FINAL="+HORA_FINAL);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",JOBS="+JOBS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row38Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row38Struct row38 = new row38Struct();




	
	/**
	 * [tFileOutputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_1", false);
		start_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row38");
					}
				
		int tos_count_tFileOutputDelimited_1 = 0;
		

String fileName_tFileOutputDelimited_1 = "";
    fileName_tFileOutputDelimited_1 = (new java.io.File(context.LOGS_EXECUTION)).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_1 = null;
    String extension_tFileOutputDelimited_1 = null;
    String directory_tFileOutputDelimited_1 = null;
    if((fileName_tFileOutputDelimited_1.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") < fileName_tFileOutputDelimited_1.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        }
        directory_tFileOutputDelimited_1 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_1 = true;
    java.io.File filetFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
    globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
        if(filetFileOutputDelimited_1.exists()){
            isFileGenerated_tFileOutputDelimited_1 = false;
        }
            int nb_line_tFileOutputDelimited_1 = 0;
            int splitedFileNo_tFileOutputDelimited_1 = 0;
            int currentRow_tFileOutputDelimited_1 = 0;

            final String OUT_DELIM_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_1:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_1:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_1 != null && directory_tFileOutputDelimited_1.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_1 = new java.io.File(directory_tFileOutputDelimited_1);
                        if(!dir_tFileOutputDelimited_1.exists()) {
                            dir_tFileOutputDelimited_1.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_1 = null;

                        outtFileOutputDelimited_1 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_1, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_1", outtFileOutputDelimited_1);
                                    if(filetFileOutputDelimited_1.length()==0){
                                        outtFileOutputDelimited_1.write("FECHA_EJECUCION");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("HORA_INICIO");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("HORA_FINAL");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("ESTADO");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("JOBS");
                                        outtFileOutputDelimited_1.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

 



/**
 * [tFileOutputDelimited_1 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_3", false);
		start_Hash.put("tFixedFlowInput_3", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_3";
	
	
		int tos_count_tFixedFlowInput_3 = 0;
		

	    for (int i_tFixedFlowInput_3 = 0 ; i_tFixedFlowInput_3 < 1 ; i_tFixedFlowInput_3++) {
	                	            	
    	            		row38.FECHA_EJECUCION = context.FECHA_EJECUCION;
    	            	        	            	
    	            		row38.HORA_INICIO = context.HORA_INICIO;
    	            	        	            	
    	            		row38.HORA_FINAL = context.HORA_FINAL;
    	            	        	            	
    	            		row38.ESTADO = context.ESTADO_EXEC;
    	            	        	            	
    	            		row38.JOBS = "CargaInventario";
    	            	

 



/**
 * [tFixedFlowInput_3 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 


	tos_count_tFixedFlowInput_3++;

/**
 * [tFixedFlowInput_3 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row38"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_1 = new StringBuilder();
                            if(row38.FECHA_EJECUCION != null) {
                        sb_tFileOutputDelimited_1.append(
                            row38.FECHA_EJECUCION
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row38.HORA_INICIO != null) {
                        sb_tFileOutputDelimited_1.append(
                            row38.HORA_INICIO
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row38.HORA_FINAL != null) {
                        sb_tFileOutputDelimited_1.append(
                            row38.HORA_FINAL
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row38.ESTADO != null) {
                        sb_tFileOutputDelimited_1.append(
                            row38.ESTADO
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row38.JOBS != null) {
                        sb_tFileOutputDelimited_1.append(
                            row38.JOBS
                        );
                            }
                    sb_tFileOutputDelimited_1.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);


                    nb_line_tFileOutputDelimited_1++;
                    resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

                        outtFileOutputDelimited_1.write(sb_tFileOutputDelimited_1.toString());




 


	tos_count_tFileOutputDelimited_1++;

/**
 * [tFileOutputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

        }
        globalMap.put("tFixedFlowInput_3_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_3", true);
end_Hash.put("tFixedFlowInput_3", System.currentTimeMillis());




/**
 * [tFixedFlowInput_3 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	



		
			
					if(outtFileOutputDelimited_1!=null) {
						outtFileOutputDelimited_1.flush();
						outtFileOutputDelimited_1.close();
					}
				
				globalMap.put("tFileOutputDelimited_1_NB_LINE",nb_line_tFileOutputDelimited_1);
				globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_1", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row38");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_1", true);
end_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_3 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_1") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_1 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_1");
						if(outtFileOutputDelimited_1!=null) {
							outtFileOutputDelimited_1.flush();
							outtFileOutputDelimited_1.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_3_SUBPROCESS_STATE", 1);
	}
	


public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk14", 0, "ok");
				}
				tJava_4Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_4", false);
		start_Hash.put("tJava_4", System.currentTimeMillis());
		
	
	currentComponent="tJava_4";
	
	
		int tos_count_tJava_4 = 0;
		


context.FECHA_EJECUCION = TalendDate.getDate("DD/MM/YYYY");
context.HORA_INICIO = TalendDate.getDate("HH:mm:ss");



globalMap.put("archivo_salida",new java.io.ByteArrayOutputStream());
 



/**
 * [tJava_4 begin ] stop
 */
	
	/**
	 * [tJava_4 main ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 


	tos_count_tJava_4++;

/**
 * [tJava_4 main ] stop
 */
	
	/**
	 * [tJava_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_begin ] stop
 */
	
	/**
	 * [tJava_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_end ] stop
 */
	
	/**
	 * [tJava_4 end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 

ok_Hash.put("tJava_4", true);
end_Hash.put("tJava_4", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk15", 0, "ok");
				}
				tFileInputXML_1Process(globalMap);



/**
 * [tJava_4 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_4 finally ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_4_SUBPROCESS_STATE", 1);
	}
	


public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String Host;

				public String getHost () {
					return this.Host;
				}

				public Boolean HostIsNullable(){
				    return true;
				}
				public Boolean HostIsKey(){
				    return true;
				}
				public Integer HostLength(){
				    return 13;
				}
				public Integer HostPrecision(){
				    return 0;
				}
				public String HostDefault(){
				
					return null;
				
				}
				public String HostComment(){
				
				    return "";
				
				}
				public String HostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String HostOriginalDbColumnName(){
				
					return "Host";
				
				}

				
			    public String Port;

				public String getPort () {
					return this.Port;
				}

				public Boolean PortIsNullable(){
				    return true;
				}
				public Boolean PortIsKey(){
				    return true;
				}
				public Integer PortLength(){
				    return 4;
				}
				public Integer PortPrecision(){
				    return 0;
				}
				public String PortDefault(){
				
					return null;
				
				}
				public String PortComment(){
				
				    return "";
				
				}
				public String PortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PortOriginalDbColumnName(){
				
					return "Port";
				
				}

				
			    public String Sid;

				public String getSid () {
					return this.Sid;
				}

				public Boolean SidIsNullable(){
				    return true;
				}
				public Boolean SidIsKey(){
				    return true;
				}
				public Integer SidLength(){
				    return 4;
				}
				public Integer SidPrecision(){
				    return 0;
				}
				public String SidDefault(){
				
					return null;
				
				}
				public String SidComment(){
				
				    return "";
				
				}
				public String SidPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SidOriginalDbColumnName(){
				
					return "Sid";
				
				}

				
			    public String ServiceName;

				public String getServiceName () {
					return this.ServiceName;
				}

				public Boolean ServiceNameIsNullable(){
				    return true;
				}
				public Boolean ServiceNameIsKey(){
				    return false;
				}
				public Integer ServiceNameLength(){
				    return 16;
				}
				public Integer ServiceNamePrecision(){
				    return 0;
				}
				public String ServiceNameDefault(){
				
					return null;
				
				}
				public String ServiceNameComment(){
				
				    return "";
				
				}
				public String ServiceNamePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String ServiceNameOriginalDbColumnName(){
				
					return "ServiceName";
				
				}

				
			    public String Schema;

				public String getSchema () {
					return this.Schema;
				}

				public Boolean SchemaIsNullable(){
				    return true;
				}
				public Boolean SchemaIsKey(){
				    return false;
				}
				public Integer SchemaLength(){
				    return 8;
				}
				public Integer SchemaPrecision(){
				    return 0;
				}
				public String SchemaDefault(){
				
					return null;
				
				}
				public String SchemaComment(){
				
				    return "";
				
				}
				public String SchemaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SchemaOriginalDbColumnName(){
				
					return "Schema";
				
				}

				
			    public String User;

				public String getUser () {
					return this.User;
				}

				public Boolean UserIsNullable(){
				    return true;
				}
				public Boolean UserIsKey(){
				    return false;
				}
				public Integer UserLength(){
				    return 12;
				}
				public Integer UserPrecision(){
				    return 0;
				}
				public String UserDefault(){
				
					return null;
				
				}
				public String UserComment(){
				
				    return "";
				
				}
				public String UserPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UserOriginalDbColumnName(){
				
					return "User";
				
				}

				
			    public String Password;

				public String getPassword () {
					return this.Password;
				}

				public Boolean PasswordIsNullable(){
				    return true;
				}
				public Boolean PasswordIsKey(){
				    return false;
				}
				public Integer PasswordLength(){
				    return 12;
				}
				public Integer PasswordPrecision(){
				    return 0;
				}
				public String PasswordDefault(){
				
					return null;
				
				}
				public String PasswordComment(){
				
				    return "";
				
				}
				public String PasswordPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PasswordOriginalDbColumnName(){
				
					return "Password";
				
				}

				
			    public String PathStorage;

				public String getPathStorage () {
					return this.PathStorage;
				}

				public Boolean PathStorageIsNullable(){
				    return true;
				}
				public Boolean PathStorageIsKey(){
				    return false;
				}
				public Integer PathStorageLength(){
				    return 48;
				}
				public Integer PathStoragePrecision(){
				    return 0;
				}
				public String PathStorageDefault(){
				
					return null;
				
				}
				public String PathStorageComment(){
				
				    return "";
				
				}
				public String PathStoragePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PathStorageOriginalDbColumnName(){
				
					return "PathStorage";
				
				}

				
			    public String SMTPHost;

				public String getSMTPHost () {
					return this.SMTPHost;
				}

				public Boolean SMTPHostIsNullable(){
				    return true;
				}
				public Boolean SMTPHostIsKey(){
				    return false;
				}
				public Integer SMTPHostLength(){
				    return 14;
				}
				public Integer SMTPHostPrecision(){
				    return 0;
				}
				public String SMTPHostDefault(){
				
					return null;
				
				}
				public String SMTPHostComment(){
				
				    return "";
				
				}
				public String SMTPHostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SMTPHostOriginalDbColumnName(){
				
					return "SMTPHost";
				
				}

				
			    public String SMTPPort;

				public String getSMTPPort () {
					return this.SMTPPort;
				}

				public Boolean SMTPPortIsNullable(){
				    return true;
				}
				public Boolean SMTPPortIsKey(){
				    return false;
				}
				public Integer SMTPPortLength(){
				    return 3;
				}
				public Integer SMTPPortPrecision(){
				    return 0;
				}
				public String SMTPPortDefault(){
				
					return null;
				
				}
				public String SMTPPortComment(){
				
				    return "";
				
				}
				public String SMTPPortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SMTPPortOriginalDbColumnName(){
				
					return "SMTPPort";
				
				}

				
			    public String UsernameMail;

				public String getUsernameMail () {
					return this.UsernameMail;
				}

				public Boolean UsernameMailIsNullable(){
				    return true;
				}
				public Boolean UsernameMailIsKey(){
				    return false;
				}
				public Integer UsernameMailLength(){
				    return 34;
				}
				public Integer UsernameMailPrecision(){
				    return 0;
				}
				public String UsernameMailDefault(){
				
					return null;
				
				}
				public String UsernameMailComment(){
				
				    return "";
				
				}
				public String UsernameMailPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String UsernameMailOriginalDbColumnName(){
				
					return "UsernameMail";
				
				}

				
			    public String PasswordMail;

				public String getPasswordMail () {
					return this.PasswordMail;
				}

				public Boolean PasswordMailIsNullable(){
				    return true;
				}
				public Boolean PasswordMailIsKey(){
				    return false;
				}
				public Integer PasswordMailLength(){
				    return 13;
				}
				public Integer PasswordMailPrecision(){
				    return 0;
				}
				public String PasswordMailDefault(){
				
					return null;
				
				}
				public String PasswordMailComment(){
				
				    return "";
				
				}
				public String PasswordMailPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String PasswordMailOriginalDbColumnName(){
				
					return "PasswordMail";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.Host == null) ? 0 : this.Host.hashCode());
					
						result = prime * result + ((this.Port == null) ? 0 : this.Port.hashCode());
					
						result = prime * result + ((this.Sid == null) ? 0 : this.Sid.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row1Struct other = (row1Struct) obj;
		
						if (this.Host == null) {
							if (other.Host != null)
								return false;
						
						} else if (!this.Host.equals(other.Host))
						
							return false;
					
						if (this.Port == null) {
							if (other.Port != null)
								return false;
						
						} else if (!this.Port.equals(other.Port))
						
							return false;
					
						if (this.Sid == null) {
							if (other.Sid != null)
								return false;
						
						} else if (!this.Sid.equals(other.Sid))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row1Struct other) {

		other.Host = this.Host;
	            other.Port = this.Port;
	            other.Sid = this.Sid;
	            other.ServiceName = this.ServiceName;
	            other.Schema = this.Schema;
	            other.User = this.User;
	            other.Password = this.Password;
	            other.PathStorage = this.PathStorage;
	            other.SMTPHost = this.SMTPHost;
	            other.SMTPPort = this.SMTPPort;
	            other.UsernameMail = this.UsernameMail;
	            other.PasswordMail = this.PasswordMail;
	            
	}

	public void copyKeysDataTo(row1Struct other) {

		other.Host = this.Host;
	            	other.Port = this.Port;
	            	other.Sid = this.Sid;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
					this.PathStorage = readString(dis);
					
					this.SMTPHost = readString(dis);
					
					this.SMTPPort = readString(dis);
					
					this.UsernameMail = readString(dis);
					
					this.PasswordMail = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.Host = readString(dis);
					
					this.Port = readString(dis);
					
					this.Sid = readString(dis);
					
					this.ServiceName = readString(dis);
					
					this.Schema = readString(dis);
					
					this.User = readString(dis);
					
					this.Password = readString(dis);
					
					this.PathStorage = readString(dis);
					
					this.SMTPHost = readString(dis);
					
					this.SMTPPort = readString(dis);
					
					this.UsernameMail = readString(dis);
					
					this.PasswordMail = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
					// String
				
						writeString(this.PathStorage,dos);
					
					// String
				
						writeString(this.SMTPHost,dos);
					
					// String
				
						writeString(this.SMTPPort,dos);
					
					// String
				
						writeString(this.UsernameMail,dos);
					
					// String
				
						writeString(this.PasswordMail,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Host,dos);
					
					// String
				
						writeString(this.Port,dos);
					
					// String
				
						writeString(this.Sid,dos);
					
					// String
				
						writeString(this.ServiceName,dos);
					
					// String
				
						writeString(this.Schema,dos);
					
					// String
				
						writeString(this.User,dos);
					
					// String
				
						writeString(this.Password,dos);
					
					// String
				
						writeString(this.PathStorage,dos);
					
					// String
				
						writeString(this.SMTPHost,dos);
					
					// String
				
						writeString(this.SMTPPort,dos);
					
					// String
				
						writeString(this.UsernameMail,dos);
					
					// String
				
						writeString(this.PasswordMail,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Host="+Host);
		sb.append(",Port="+Port);
		sb.append(",Sid="+Sid);
		sb.append(",ServiceName="+ServiceName);
		sb.append(",Schema="+Schema);
		sb.append(",User="+User);
		sb.append(",Password="+Password);
		sb.append(",PathStorage="+PathStorage);
		sb.append(",SMTPHost="+SMTPHost);
		sb.append(",SMTPPort="+SMTPPort);
		sb.append(",UsernameMail="+UsernameMail);
		sb.append(",PasswordMail="+PasswordMail);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.Host, other.Host);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.Port, other.Port);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.Sid, other.Sid);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputXML_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputXML_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();




	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */



	
	/**
	 * [tFileInputXML_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputXML_1", false);
		start_Hash.put("tFileInputXML_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputXML_1";
	
	
		int tos_count_tFileInputXML_1 = 0;
		

	

int nb_line_tFileInputXML_1 = 0;

	String os_tFileInputXML_1 = System.getProperty("os.name").toLowerCase();
	boolean isWindows_tFileInputXML_1=false;
	if(os_tFileInputXML_1.indexOf("windows") > -1 || os_tFileInputXML_1.indexOf("nt") > -1){
		isWindows_tFileInputXML_1=true;
	}
class NameSpaceTool_tFileInputXML_1 {

    public java.util.HashMap<String, String> xmlNameSpaceMap = new java.util.HashMap<String, String>();
    
	private java.util.List<String> defualtNSPath = new java.util.ArrayList<String>();

    public void countNSMap(org.dom4j.Element el) {
        for (org.dom4j.Namespace ns : (java.util.List<org.dom4j.Namespace>) el.declaredNamespaces()) {
            if (ns.getPrefix().trim().length() == 0) {
                xmlNameSpaceMap.put("pre"+defualtNSPath.size(), ns.getURI());
                String path = "";
                org.dom4j.Element elTmp = el;
                while (elTmp != null) {
                	if (elTmp.getNamespacePrefix() != null && elTmp.getNamespacePrefix().length() > 0) {
                        path = "/" + elTmp.getNamespacePrefix() + ":" + elTmp.getName() + path;
                    } else {
                        path = "/" + elTmp.getName() + path;
                    }
                    elTmp = elTmp.getParent();
                }
                defualtNSPath.add(path);
            } else {
                xmlNameSpaceMap.put(ns.getPrefix(), ns.getURI());
            }

        }
        for (org.dom4j.Element e : (java.util.List<org.dom4j.Element>) el.elements()) {
            countNSMap(e);
        }
    }
    
    private final org.talend.xpath.XPathUtil util = new  org.talend.xpath.XPathUtil();
    
    {
    	util.setDefaultNSPath(defualtNSPath);
    }
    
	public String addDefaultNSPrefix(String path) {
		return util.addDefaultNSPrefix(path);
	}
	
	public String addDefaultNSPrefix(String relativeXpression, String basePath) {
		return util.addDefaultNSPrefix(relativeXpression,basePath);
	}
    
}

class XML_API_tFileInputXML_1{
	public boolean isDefNull(org.dom4j.Node node) throws javax.xml.transform.TransformerException {
        if (node != null && node instanceof org.dom4j.Element) {
        	org.dom4j.Attribute attri = ((org.dom4j.Element)node).attribute("nil");
        	if(attri != null && ("true").equals(attri.getText())){
            	return true;
            }
        }
        return false;
    }

    public boolean isMissing(org.dom4j.Node node) throws javax.xml.transform.TransformerException {
        return node == null ? true : false;
    }

    public boolean isEmpty(org.dom4j.Node node) throws javax.xml.transform.TransformerException {
        if (node != null) {
            return node.getStringValue().isEmpty();
        }
        return false;
    }
}


org.dom4j.io.SAXReader reader_tFileInputXML_1 = new org.dom4j.io.SAXReader();
Object filename_tFileInputXML_1 = null;
try {
	filename_tFileInputXML_1 = context.ORIGEN;
} catch(java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
	
	
	System.err.println(e.getMessage());
	
}
if(filename_tFileInputXML_1 != null && filename_tFileInputXML_1 instanceof String && filename_tFileInputXML_1.toString().startsWith("//")){
	if (!isWindows_tFileInputXML_1){
		filename_tFileInputXML_1 = filename_tFileInputXML_1.toString().replaceFirst("//","/");
	}
}

boolean isValidFile_tFileInputXML_1 = true;
org.dom4j.Document doc_tFileInputXML_1 = null;
java.io.Closeable toClose_tFileInputXML_1 = null;
try{
	if(filename_tFileInputXML_1 instanceof java.io.InputStream){
		java.io.InputStream inputStream_tFileInputXML_1 = (java.io.InputStream)filename_tFileInputXML_1;
		toClose_tFileInputXML_1 = inputStream_tFileInputXML_1;
		doc_tFileInputXML_1 = reader_tFileInputXML_1.read(inputStream_tFileInputXML_1);
	}else{
		java.io.Reader unicodeReader_tFileInputXML_1 = new UnicodeReader(new java.io.FileInputStream(String.valueOf(filename_tFileInputXML_1)),"UTF-8");
		toClose_tFileInputXML_1 = unicodeReader_tFileInputXML_1;
		org.xml.sax.InputSource in_tFileInputXML_1= new org.xml.sax.InputSource(unicodeReader_tFileInputXML_1);
		doc_tFileInputXML_1 = reader_tFileInputXML_1.read(in_tFileInputXML_1);
	}
}catch(java.lang.Exception e){
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
	
	System.err.println(e.getMessage());
	isValidFile_tFileInputXML_1 = false;
} finally {
	if(toClose_tFileInputXML_1!=null) {
		toClose_tFileInputXML_1.close();
	}
}
if(isValidFile_tFileInputXML_1){
NameSpaceTool_tFileInputXML_1 nsTool_tFileInputXML_1 = new NameSpaceTool_tFileInputXML_1();
nsTool_tFileInputXML_1.countNSMap(doc_tFileInputXML_1.getRootElement());
java.util.HashMap<String,String> xmlNameSpaceMap_tFileInputXML_1 = nsTool_tFileInputXML_1.xmlNameSpaceMap;  

org.dom4j.XPath x_tFileInputXML_1 = doc_tFileInputXML_1.createXPath(nsTool_tFileInputXML_1.addDefaultNSPrefix("/connectionStrings"));  
x_tFileInputXML_1.setNamespaceURIs(xmlNameSpaceMap_tFileInputXML_1); 

java.util.List<org.dom4j.Node> nodeList_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)x_tFileInputXML_1.selectNodes(doc_tFileInputXML_1);	
XML_API_tFileInputXML_1 xml_api_tFileInputXML_1 = new XML_API_tFileInputXML_1();
String str_tFileInputXML_1 = "";
org.dom4j.Node node_tFileInputXML_1 = null;

//init all mapping xpaths
java.util.Map<Integer,org.dom4j.XPath> xpaths_tFileInputXML_1=new java.util.HashMap<Integer,org.dom4j.XPath>();
	class XPathUtil_tFileInputXML_1{
	
			   public void initXPaths_0(java.util.Map<Integer,org.dom4j.XPath> xpaths,NameSpaceTool_tFileInputXML_1 nsTool,
			       java.util.HashMap<String,String> xmlNameSpaceMap){
			
	org.dom4j.XPath xpath_0 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Host","/connectionStrings"));
	xpath_0.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(0,xpath_0);
			
	org.dom4j.XPath xpath_1 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Port","/connectionStrings"));
	xpath_1.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(1,xpath_1);
			
	org.dom4j.XPath xpath_2 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Sid","/connectionStrings"));
	xpath_2.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(2,xpath_2);
			
	org.dom4j.XPath xpath_3 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("ServiceName","/connectionStrings"));
	xpath_3.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(3,xpath_3);
			
	org.dom4j.XPath xpath_4 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Schema","/connectionStrings"));
	xpath_4.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(4,xpath_4);
			
	org.dom4j.XPath xpath_5 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("User","/connectionStrings"));
	xpath_5.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(5,xpath_5);
			
	org.dom4j.XPath xpath_6 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Password","/connectionStrings"));
	xpath_6.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(6,xpath_6);
			
	org.dom4j.XPath xpath_7 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("PathStorage","/connectionStrings"));
	xpath_7.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(7,xpath_7);
			
	org.dom4j.XPath xpath_8 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("SMTPHost","/connectionStrings"));
	xpath_8.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(8,xpath_8);
			
	org.dom4j.XPath xpath_9 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("SMTPPort","/connectionStrings"));
	xpath_9.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(9,xpath_9);
			
	org.dom4j.XPath xpath_10 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("UsernameMail","/connectionStrings"));
	xpath_10.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(10,xpath_10);
			
	org.dom4j.XPath xpath_11 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("PasswordMail","/connectionStrings"));
	xpath_11.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(11,xpath_11);
			
	     }
	   
	      public void initXPaths(java.util.Map<Integer,org.dom4j.XPath> xpaths,NameSpaceTool_tFileInputXML_1 nsTool,
			    java.util.HashMap<String,String> xmlNameSpaceMap){
			    
			        initXPaths_0(xpaths,nsTool, xmlNameSpaceMap);
			    
		   }
	}
	XPathUtil_tFileInputXML_1 xPathUtil_tFileInputXML_1 = new XPathUtil_tFileInputXML_1();
	xPathUtil_tFileInputXML_1.initXPaths(xpaths_tFileInputXML_1, nsTool_tFileInputXML_1, xmlNameSpaceMap_tFileInputXML_1);
for (org.dom4j.Node temp_tFileInputXML_1: nodeList_tFileInputXML_1) {
	if (nb_line_tFileInputXML_1>=1) {
	
		break;
	}
		nb_line_tFileInputXML_1++;
		
	row1 = null;			
	boolean whetherReject_tFileInputXML_1 = false;
	row1 = new row1Struct();
	try{
    Object obj0_tFileInputXML_1 = xpaths_tFileInputXML_1.get(0).evaluate(temp_tFileInputXML_1);
    if(obj0_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj0_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj0_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj0_tFileInputXML_1 instanceof String || obj0_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj0_tFileInputXML_1);
    } else if(obj0_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj0_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.Host =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.Host ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.Host =null;
									}else{
		row1.Host = str_tFileInputXML_1;
	}
    Object obj1_tFileInputXML_1 = xpaths_tFileInputXML_1.get(1).evaluate(temp_tFileInputXML_1);
    if(obj1_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj1_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj1_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj1_tFileInputXML_1 instanceof String || obj1_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj1_tFileInputXML_1);
    } else if(obj1_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj1_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.Port =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.Port ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.Port =null;
									}else{
		row1.Port = str_tFileInputXML_1;
	}
    Object obj2_tFileInputXML_1 = xpaths_tFileInputXML_1.get(2).evaluate(temp_tFileInputXML_1);
    if(obj2_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj2_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj2_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj2_tFileInputXML_1 instanceof String || obj2_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj2_tFileInputXML_1);
    } else if(obj2_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj2_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.Sid =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.Sid ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.Sid =null;
									}else{
		row1.Sid = str_tFileInputXML_1;
	}
    Object obj3_tFileInputXML_1 = xpaths_tFileInputXML_1.get(3).evaluate(temp_tFileInputXML_1);
    if(obj3_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj3_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj3_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj3_tFileInputXML_1 instanceof String || obj3_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj3_tFileInputXML_1);
    } else if(obj3_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj3_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.ServiceName =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.ServiceName ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.ServiceName =null;
									}else{
		row1.ServiceName = str_tFileInputXML_1;
	}
    Object obj4_tFileInputXML_1 = xpaths_tFileInputXML_1.get(4).evaluate(temp_tFileInputXML_1);
    if(obj4_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj4_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj4_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj4_tFileInputXML_1 instanceof String || obj4_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj4_tFileInputXML_1);
    } else if(obj4_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj4_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.Schema =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.Schema ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.Schema =null;
									}else{
		row1.Schema = str_tFileInputXML_1;
	}
    Object obj5_tFileInputXML_1 = xpaths_tFileInputXML_1.get(5).evaluate(temp_tFileInputXML_1);
    if(obj5_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj5_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj5_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj5_tFileInputXML_1 instanceof String || obj5_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj5_tFileInputXML_1);
    } else if(obj5_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj5_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.User =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.User ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.User =null;
									}else{
		row1.User = str_tFileInputXML_1;
	}
    Object obj6_tFileInputXML_1 = xpaths_tFileInputXML_1.get(6).evaluate(temp_tFileInputXML_1);
    if(obj6_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj6_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj6_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj6_tFileInputXML_1 instanceof String || obj6_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj6_tFileInputXML_1);
    } else if(obj6_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj6_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.Password =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.Password ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.Password =null;
									}else{
		row1.Password = str_tFileInputXML_1;
	}
    Object obj7_tFileInputXML_1 = xpaths_tFileInputXML_1.get(7).evaluate(temp_tFileInputXML_1);
    if(obj7_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj7_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj7_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj7_tFileInputXML_1 instanceof String || obj7_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj7_tFileInputXML_1);
    } else if(obj7_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj7_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.PathStorage =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.PathStorage ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.PathStorage =null;
									}else{
		row1.PathStorage = str_tFileInputXML_1;
	}
    Object obj8_tFileInputXML_1 = xpaths_tFileInputXML_1.get(8).evaluate(temp_tFileInputXML_1);
    if(obj8_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj8_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj8_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj8_tFileInputXML_1 instanceof String || obj8_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj8_tFileInputXML_1);
    } else if(obj8_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj8_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.SMTPHost =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.SMTPHost ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.SMTPHost =null;
									}else{
		row1.SMTPHost = str_tFileInputXML_1;
	}
    Object obj9_tFileInputXML_1 = xpaths_tFileInputXML_1.get(9).evaluate(temp_tFileInputXML_1);
    if(obj9_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj9_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj9_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj9_tFileInputXML_1 instanceof String || obj9_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj9_tFileInputXML_1);
    } else if(obj9_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj9_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.SMTPPort =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.SMTPPort ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.SMTPPort =null;
									}else{
		row1.SMTPPort = str_tFileInputXML_1;
	}
    Object obj10_tFileInputXML_1 = xpaths_tFileInputXML_1.get(10).evaluate(temp_tFileInputXML_1);
    if(obj10_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj10_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj10_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj10_tFileInputXML_1 instanceof String || obj10_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj10_tFileInputXML_1);
    } else if(obj10_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj10_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.UsernameMail =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.UsernameMail ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.UsernameMail =null;
									}else{
		row1.UsernameMail = str_tFileInputXML_1;
	}
    Object obj11_tFileInputXML_1 = xpaths_tFileInputXML_1.get(11).evaluate(temp_tFileInputXML_1);
    if(obj11_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj11_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj11_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj11_tFileInputXML_1 instanceof String || obj11_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj11_tFileInputXML_1);
    } else if(obj11_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj11_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row1.PasswordMail =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row1.PasswordMail ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row1.PasswordMail =null;
									}else{
		row1.PasswordMail = str_tFileInputXML_1;
	} 
			
    } catch (java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
        whetherReject_tFileInputXML_1 = true;
                System.err.println(e.getMessage());
                row1 = null;
    }
			
			

 



/**
 * [tFileInputXML_1 begin ] stop
 */
	
	/**
	 * [tFileInputXML_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 


	tos_count_tFileInputXML_1++;

/**
 * [tFileInputXML_1 main ] stop
 */
	
	/**
	 * [tFileInputXML_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 process_data_begin ] stop
 */
// Start of branch "row1"
if(row1 != null) { 



	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					

    context.db_origen_Server = row1.Host;
context.db_origen_Port = row1.Port;
context.db_origen_ServiceName = row1.ServiceName;
context.db_origen_Login = row1.User;
context.db_origen_Password = row1.Password;
context.db_origen_Schema = row1.Schema;




    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */

} // End of branch "row1"




	
	/**
	 * [tFileInputXML_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputXML_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	


}
	}
	globalMap.put("tFileInputXML_1_NB_LINE",nb_line_tFileInputXML_1);

	

 

ok_Hash.put("tFileInputXML_1", true);
end_Hash.put("tFileInputXML_1", System.currentTimeMillis());




/**
 * [tFileInputXML_1 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tOracleConnection_1Process(globalMap);



/**
 * [tJavaRow_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputXML_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputXML_1_SUBPROCESS_STATE", 1);
	}
	


public void tOracleConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tOracleConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleConnection_1", false);
		start_Hash.put("tOracleConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleConnection_1";
	
	
		int tos_count_tOracleConnection_1 = 0;
		
	

	
        String url_tOracleConnection_1 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.db_origen_Server + ")(port=" + context.db_origen_Port + "))(connect_data=(service_name=" + context.db_origen_ServiceName + ")))";
    	globalMap.put("connectionType_" + "tOracleConnection_1", "ORACLE_SERVICE_NAME");
	String dbUser_tOracleConnection_1 = context.db_origen_Login;
	
	
		
	final String decryptedPassword_tOracleConnection_1 = context.db_origen_Password; 
		String dbPwd_tOracleConnection_1 = decryptedPassword_tOracleConnection_1;
	
	
	java.sql.Connection conn_tOracleConnection_1 = null;
	
		
			String driverClass_tOracleConnection_1 = "oracle.jdbc.OracleDriver";
			java.lang.Class jdbcclazz_tOracleConnection_1 = java.lang.Class.forName(driverClass_tOracleConnection_1);
			globalMap.put("driverClass_tOracleConnection_1", driverClass_tOracleConnection_1);
		
			java.util.Properties atnParamsPrope_tOracleConnection_1 = new java.util.Properties();
			    atnParamsPrope_tOracleConnection_1.put("user",dbUser_tOracleConnection_1);
			    atnParamsPrope_tOracleConnection_1.put("password",dbPwd_tOracleConnection_1);
			if(context.db_origen_AdditionalParams != null && !"\"\"".equals(context.db_origen_AdditionalParams) && !"".equals(context.db_origen_AdditionalParams)){
                atnParamsPrope_tOracleConnection_1.load(new java.io.ByteArrayInputStream(context.db_origen_AdditionalParams.replace("&", "\n").getBytes()));
            }
         
			conn_tOracleConnection_1 = java.sql.DriverManager.getConnection(url_tOracleConnection_1, atnParamsPrope_tOracleConnection_1);

		globalMap.put("conn_tOracleConnection_1", conn_tOracleConnection_1);
	if (null != conn_tOracleConnection_1) {
		
			conn_tOracleConnection_1.setAutoCommit(true);
	}
        globalMap.put("host_" + "tOracleConnection_1",context.db_origen_Server);
        globalMap.put("port_" + "tOracleConnection_1",context.db_origen_Port);
        globalMap.put("dbname_" + "tOracleConnection_1",context.db_origen_ServiceName);

	globalMap.put("dbschema_" + "tOracleConnection_1", context.db_origen_Schema);
	globalMap.put("username_" + "tOracleConnection_1",context.db_origen_Login);
	globalMap.put("password_" + "tOracleConnection_1",dbPwd_tOracleConnection_1);

 



/**
 * [tOracleConnection_1 begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 main ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 


	tos_count_tOracleConnection_1++;

/**
 * [tOracleConnection_1 main ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleConnection_1 end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 

ok_Hash.put("tOracleConnection_1", true);
end_Hash.put("tOracleConnection_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tOracleInput_2Process(globalMap);



/**
 * [tOracleConnection_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 1);
	}
	


public static class row24Struct implements routines.system.IPersistableRow<row24Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public String VALOR;

				public String getVALOR () {
					return this.VALOR;
				}

				public Boolean VALORIsNullable(){
				    return false;
				}
				public Boolean VALORIsKey(){
				    return false;
				}
				public Integer VALORLength(){
				    return 50;
				}
				public Integer VALORPrecision(){
				    return 0;
				}
				public String VALORDefault(){
				
					return null;
				
				}
				public String VALORComment(){
				
				    return "";
				
				}
				public String VALORPattern(){
				
					return "";
				
				}
				public String VALOROriginalDbColumnName(){
				
					return "VALOR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.VALOR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.VALOR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.VALOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.VALOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("VALOR="+VALOR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row24Struct row24 = new row24Struct();




	
	/**
	 * [tJavaRow_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_5", false);
		start_Hash.put("tJavaRow_5", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tJavaRow_5 = 0;
		

int nb_line_tJavaRow_5 = 0;

 



/**
 * [tJavaRow_5 begin ] stop
 */



	
	/**
	 * [tOracleInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_2", false);
		start_Hash.put("tOracleInput_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_2";
	
	
		int tos_count_tOracleInput_2 = 0;
		
	


	
		    int nb_line_tOracleInput_2 = 0;
		    java.sql.Connection conn_tOracleInput_2 = null;
				conn_tOracleInput_2 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_2 = false;
				boolean isConnectionWrapped_tOracleInput_2 = !(conn_tOracleInput_2 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_2.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_2 = null;
                if (isConnectionWrapped_tOracleInput_2) {
					unwrappedOraConn_tOracleInput_2 = conn_tOracleInput_2.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_2 != null) {
                        isTimeZoneNull_tOracleInput_2 = (unwrappedOraConn_tOracleInput_2.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_2 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_2).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_2) {
					java.sql.Statement stmtGetTZ_tOracleInput_2 = conn_tOracleInput_2.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_2 = stmtGetTZ_tOracleInput_2.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_2 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_2.next()) {
						sessionTimezone_tOracleInput_2 = rsGetTZ_tOracleInput_2.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_2 && unwrappedOraConn_tOracleInput_2 != null) {
                        unwrappedOraConn_tOracleInput_2.setSessionTimeZone(sessionTimezone_tOracleInput_2);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_2).setSessionTimeZone(sessionTimezone_tOracleInput_2);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_2 = conn_tOracleInput_2.createStatement();

		    String dbquery_tOracleInput_2 = "SELECT \n	VALOR\n FROM MED_CONFIGURACIONES\n WHERE SIGLA = 'AVM' \n AND ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_2_QUERY",dbquery_tOracleInput_2);

		    java.sql.ResultSet rs_tOracleInput_2 = null;

		    try {
		    	rs_tOracleInput_2 = stmt_tOracleInput_2.executeQuery(dbquery_tOracleInput_2);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_2 = rs_tOracleInput_2.getMetaData();
		    	int colQtyInRs_tOracleInput_2 = rsmd_tOracleInput_2.getColumnCount();

		    String tmpContent_tOracleInput_2 = null;
		    
		    
		    while (rs_tOracleInput_2.next()) {
		        nb_line_tOracleInput_2++;
		        
							if(colQtyInRs_tOracleInput_2 < 1) {
								row24.VALOR = null;
							} else {
	                         		
        	row24.VALOR = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 1, false);
		                    }
					




 



/**
 * [tOracleInput_2 begin ] stop
 */
	
	/**
	 * [tOracleInput_2 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 


	tos_count_tOracleInput_2++;

/**
 * [tOracleInput_2 main ] stop
 */
	
	/**
	 * [tOracleInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_5 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					

    //Code generate according to input schema and output schema

context.tvencimiento = Integer.parseInt(row24.VALOR);

//System.out.println(context.TVencimiento);

    nb_line_tJavaRow_5++;   

 


	tos_count_tJavaRow_5++;

/**
 * [tJavaRow_5 main ] stop
 */
	
	/**
	 * [tJavaRow_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_2 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

}
}finally{
	if (rs_tOracleInput_2 != null) {
		rs_tOracleInput_2.close();
	}
	if (stmt_tOracleInput_2 != null) {
		stmt_tOracleInput_2.close();
	}
}

globalMap.put("tOracleInput_2_NB_LINE",nb_line_tOracleInput_2);
 

ok_Hash.put("tOracleInput_2", true);
end_Hash.put("tOracleInput_2", System.currentTimeMillis());




/**
 * [tOracleInput_2 end ] stop
 */

	
	/**
	 * [tJavaRow_5 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

globalMap.put("tJavaRow_5_NB_LINE",nb_line_tJavaRow_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tJavaRow_5", true);
end_Hash.put("tJavaRow_5", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk3", 0, "ok");
				}
				tOracleInput_3Process(globalMap);



/**
 * [tJavaRow_5 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_5 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row29Struct implements routines.system.IPersistableRow<row29Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String REGISTRO_INVIMA;

				public String getREGISTRO_INVIMA () {
					return this.REGISTRO_INVIMA;
				}

				public Boolean REGISTRO_INVIMAIsNullable(){
				    return true;
				}
				public Boolean REGISTRO_INVIMAIsKey(){
				    return false;
				}
				public Integer REGISTRO_INVIMALength(){
				    return 255;
				}
				public Integer REGISTRO_INVIMAPrecision(){
				    return 0;
				}
				public String REGISTRO_INVIMADefault(){
				
					return null;
				
				}
				public String REGISTRO_INVIMAComment(){
				
				    return "";
				
				}
				public String REGISTRO_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String REGISTRO_INVIMAOriginalDbColumnName(){
				
					return "REGISTRO_INVIMA";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String CANTIDAD_ENVIADA;

				public String getCANTIDAD_ENVIADA () {
					return this.CANTIDAD_ENVIADA;
				}

				public Boolean CANTIDAD_ENVIADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_ENVIADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_ENVIADALength(){
				    return 255;
				}
				public Integer CANTIDAD_ENVIADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_ENVIADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_ENVIADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_ENVIADAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_ENVIADAOriginalDbColumnName(){
				
					return "CANTIDAD_ENVIADA";
				
				}

				
			    public String CANTIDAD_A_INGRESAR;

				public String getCANTIDAD_A_INGRESAR () {
					return this.CANTIDAD_A_INGRESAR;
				}

				public Boolean CANTIDAD_A_INGRESARIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_A_INGRESARIsKey(){
				    return false;
				}
				public Integer CANTIDAD_A_INGRESARLength(){
				    return 255;
				}
				public Integer CANTIDAD_A_INGRESARPrecision(){
				    return 0;
				}
				public String CANTIDAD_A_INGRESARDefault(){
				
					return null;
				
				}
				public String CANTIDAD_A_INGRESARComment(){
				
				    return "";
				
				}
				public String CANTIDAD_A_INGRESARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_A_INGRESAROriginalDbColumnName(){
				
					return "CANTIDAD_A_INGRESAR";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 255;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public String FECHA_VENCIMIENTO;

				public String getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public String LEYENDA_DE_RESTRICCION;

				public String getLEYENDA_DE_RESTRICCION () {
					return this.LEYENDA_DE_RESTRICCION;
				}

				public Boolean LEYENDA_DE_RESTRICCIONIsNullable(){
				    return true;
				}
				public Boolean LEYENDA_DE_RESTRICCIONIsKey(){
				    return false;
				}
				public Integer LEYENDA_DE_RESTRICCIONLength(){
				    return 255;
				}
				public Integer LEYENDA_DE_RESTRICCIONPrecision(){
				    return 0;
				}
				public String LEYENDA_DE_RESTRICCIONDefault(){
				
					return null;
				
				}
				public String LEYENDA_DE_RESTRICCIONComment(){
				
				    return "";
				
				}
				public String LEYENDA_DE_RESTRICCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LEYENDA_DE_RESTRICCIONOriginalDbColumnName(){
				
					return "LEYENDA_DE_RESTRICCION";
				
				}

				
			    public String DEFECTOS;

				public String getDEFECTOS () {
					return this.DEFECTOS;
				}

				public Boolean DEFECTOSIsNullable(){
				    return true;
				}
				public Boolean DEFECTOSIsKey(){
				    return false;
				}
				public Integer DEFECTOSLength(){
				    return 255;
				}
				public Integer DEFECTOSPrecision(){
				    return 0;
				}
				public String DEFECTOSDefault(){
				
					return null;
				
				}
				public String DEFECTOSComment(){
				
				    return "";
				
				}
				public String DEFECTOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DEFECTOSOriginalDbColumnName(){
				
					return "DEFECTOS";
				
				}

				
			    public String TEMPERATURA_DE_RECEPCION__C__;

				public String getTEMPERATURA_DE_RECEPCION__C__ () {
					return this.TEMPERATURA_DE_RECEPCION__C__;
				}

				public Boolean TEMPERATURA_DE_RECEPCION__C__IsNullable(){
				    return true;
				}
				public Boolean TEMPERATURA_DE_RECEPCION__C__IsKey(){
				    return false;
				}
				public Integer TEMPERATURA_DE_RECEPCION__C__Length(){
				    return 255;
				}
				public Integer TEMPERATURA_DE_RECEPCION__C__Precision(){
				    return 0;
				}
				public String TEMPERATURA_DE_RECEPCION__C__Default(){
				
					return null;
				
				}
				public String TEMPERATURA_DE_RECEPCION__C__Comment(){
				
				    return "";
				
				}
				public String TEMPERATURA_DE_RECEPCION__C__Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TEMPERATURA_DE_RECEPCION__C__OriginalDbColumnName(){
				
					return "TEMPERATURA_DE_RECEPCION__C__";
				
				}

				
			    public String NIVEL_DE_RIESGO;

				public String getNIVEL_DE_RIESGO () {
					return this.NIVEL_DE_RIESGO;
				}

				public Boolean NIVEL_DE_RIESGOIsNullable(){
				    return true;
				}
				public Boolean NIVEL_DE_RIESGOIsKey(){
				    return false;
				}
				public Integer NIVEL_DE_RIESGOLength(){
				    return 255;
				}
				public Integer NIVEL_DE_RIESGOPrecision(){
				    return 0;
				}
				public String NIVEL_DE_RIESGODefault(){
				
					return null;
				
				}
				public String NIVEL_DE_RIESGOComment(){
				
				    return "";
				
				}
				public String NIVEL_DE_RIESGOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIVEL_DE_RIESGOOriginalDbColumnName(){
				
					return "NIVEL_DE_RIESGO";
				
				}

				
			    public String TAMANO_DE_LA_MUESTRA;

				public String getTAMANO_DE_LA_MUESTRA () {
					return this.TAMANO_DE_LA_MUESTRA;
				}

				public Boolean TAMANO_DE_LA_MUESTRAIsNullable(){
				    return true;
				}
				public Boolean TAMANO_DE_LA_MUESTRAIsKey(){
				    return false;
				}
				public Integer TAMANO_DE_LA_MUESTRALength(){
				    return 255;
				}
				public Integer TAMANO_DE_LA_MUESTRAPrecision(){
				    return 0;
				}
				public String TAMANO_DE_LA_MUESTRADefault(){
				
					return null;
				
				}
				public String TAMANO_DE_LA_MUESTRAComment(){
				
				    return "";
				
				}
				public String TAMANO_DE_LA_MUESTRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TAMANO_DE_LA_MUESTRAOriginalDbColumnName(){
				
					return "TAMANO_DE_LA_MUESTRA";
				
				}

				
			    public String APROBADO;

				public String getAPROBADO () {
					return this.APROBADO;
				}

				public Boolean APROBADOIsNullable(){
				    return true;
				}
				public Boolean APROBADOIsKey(){
				    return false;
				}
				public Integer APROBADOLength(){
				    return 255;
				}
				public Integer APROBADOPrecision(){
				    return 0;
				}
				public String APROBADODefault(){
				
					return null;
				
				}
				public String APROBADOComment(){
				
				    return "";
				
				}
				public String APROBADOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String APROBADOOriginalDbColumnName(){
				
					return "APROBADO";
				
				}

				
			    public String NUMERO_DE_CONTRATO;

				public String getNUMERO_DE_CONTRATO () {
					return this.NUMERO_DE_CONTRATO;
				}

				public Boolean NUMERO_DE_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean NUMERO_DE_CONTRATOIsKey(){
				    return false;
				}
				public Integer NUMERO_DE_CONTRATOLength(){
				    return 255;
				}
				public Integer NUMERO_DE_CONTRATOPrecision(){
				    return 0;
				}
				public String NUMERO_DE_CONTRATODefault(){
				
					return null;
				
				}
				public String NUMERO_DE_CONTRATOComment(){
				
				    return "";
				
				}
				public String NUMERO_DE_CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NUMERO_DE_CONTRATOOriginalDbColumnName(){
				
					return "NUMERO_DE_CONTRATO";
				
				}

				
			    public Integer itemlVisualizacionColumna;

				public Integer getItemlVisualizacionColumna () {
					return this.itemlVisualizacionColumna;
				}

				public Boolean itemlVisualizacionColumnaIsNullable(){
				    return true;
				}
				public Boolean itemlVisualizacionColumnaIsKey(){
				    return false;
				}
				public Integer itemlVisualizacionColumnaLength(){
				    return null;
				}
				public Integer itemlVisualizacionColumnaPrecision(){
				    return null;
				}
				public String itemlVisualizacionColumnaDefault(){
				
					return null;
				
				}
				public String itemlVisualizacionColumnaComment(){
				
				    return "";
				
				}
				public String itemlVisualizacionColumnaPattern(){
				
					return "";
				
				}
				public String itemlVisualizacionColumnaOriginalDbColumnName(){
				
					return "itemlVisualizacionColumna";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.REGISTRO_INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_A_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA_DE_RECEPCION__C__ = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.TAMANO_DE_LA_MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.NUMERO_DE_CONTRATO = readString(dis);
					
						this.itemlVisualizacionColumna = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.REGISTRO_INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_A_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA_DE_RECEPCION__C__ = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.TAMANO_DE_LA_MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.NUMERO_DE_CONTRATO = readString(dis);
					
						this.itemlVisualizacionColumna = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.REGISTRO_INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_A_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA_DE_RECEPCION__C__,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.TAMANO_DE_LA_MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.NUMERO_DE_CONTRATO,dos);
					
					// Integer
				
						writeInteger(this.itemlVisualizacionColumna,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.REGISTRO_INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_A_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA_DE_RECEPCION__C__,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.TAMANO_DE_LA_MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.NUMERO_DE_CONTRATO,dos);
					
					// Integer
				
						writeInteger(this.itemlVisualizacionColumna,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CUM="+CUM);
		sb.append(",REGISTRO_INVIMA="+REGISTRO_INVIMA);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",CANTIDAD_ENVIADA="+CANTIDAD_ENVIADA);
		sb.append(",CANTIDAD_A_INGRESAR="+CANTIDAD_A_INGRESAR);
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+FECHA_VENCIMIENTO);
		sb.append(",LEYENDA_DE_RESTRICCION="+LEYENDA_DE_RESTRICCION);
		sb.append(",DEFECTOS="+DEFECTOS);
		sb.append(",TEMPERATURA_DE_RECEPCION__C__="+TEMPERATURA_DE_RECEPCION__C__);
		sb.append(",NIVEL_DE_RIESGO="+NIVEL_DE_RIESGO);
		sb.append(",TAMANO_DE_LA_MUESTRA="+TAMANO_DE_LA_MUESTRA);
		sb.append(",APROBADO="+APROBADO);
		sb.append(",NUMERO_DE_CONTRATO="+NUMERO_DE_CONTRATO);
		sb.append(",itemlVisualizacionColumna="+String.valueOf(itemlVisualizacionColumna));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row29Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String REGISTRO_INVIMA;

				public String getREGISTRO_INVIMA () {
					return this.REGISTRO_INVIMA;
				}

				public Boolean REGISTRO_INVIMAIsNullable(){
				    return true;
				}
				public Boolean REGISTRO_INVIMAIsKey(){
				    return false;
				}
				public Integer REGISTRO_INVIMALength(){
				    return 255;
				}
				public Integer REGISTRO_INVIMAPrecision(){
				    return 0;
				}
				public String REGISTRO_INVIMADefault(){
				
					return null;
				
				}
				public String REGISTRO_INVIMAComment(){
				
				    return "";
				
				}
				public String REGISTRO_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String REGISTRO_INVIMAOriginalDbColumnName(){
				
					return "REGISTRO_INVIMA";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String CANTIDAD_ENVIADA;

				public String getCANTIDAD_ENVIADA () {
					return this.CANTIDAD_ENVIADA;
				}

				public Boolean CANTIDAD_ENVIADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_ENVIADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_ENVIADALength(){
				    return 255;
				}
				public Integer CANTIDAD_ENVIADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_ENVIADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_ENVIADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_ENVIADAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_ENVIADAOriginalDbColumnName(){
				
					return "CANTIDAD_ENVIADA";
				
				}

				
			    public String CANTIDAD_A_INGRESAR;

				public String getCANTIDAD_A_INGRESAR () {
					return this.CANTIDAD_A_INGRESAR;
				}

				public Boolean CANTIDAD_A_INGRESARIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_A_INGRESARIsKey(){
				    return false;
				}
				public Integer CANTIDAD_A_INGRESARLength(){
				    return 255;
				}
				public Integer CANTIDAD_A_INGRESARPrecision(){
				    return 0;
				}
				public String CANTIDAD_A_INGRESARDefault(){
				
					return null;
				
				}
				public String CANTIDAD_A_INGRESARComment(){
				
				    return "";
				
				}
				public String CANTIDAD_A_INGRESARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_A_INGRESAROriginalDbColumnName(){
				
					return "CANTIDAD_A_INGRESAR";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 255;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public String FECHA_VENCIMIENTO;

				public String getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public String LEYENDA_DE_RESTRICCION;

				public String getLEYENDA_DE_RESTRICCION () {
					return this.LEYENDA_DE_RESTRICCION;
				}

				public Boolean LEYENDA_DE_RESTRICCIONIsNullable(){
				    return true;
				}
				public Boolean LEYENDA_DE_RESTRICCIONIsKey(){
				    return false;
				}
				public Integer LEYENDA_DE_RESTRICCIONLength(){
				    return 255;
				}
				public Integer LEYENDA_DE_RESTRICCIONPrecision(){
				    return 0;
				}
				public String LEYENDA_DE_RESTRICCIONDefault(){
				
					return null;
				
				}
				public String LEYENDA_DE_RESTRICCIONComment(){
				
				    return "";
				
				}
				public String LEYENDA_DE_RESTRICCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LEYENDA_DE_RESTRICCIONOriginalDbColumnName(){
				
					return "LEYENDA_DE_RESTRICCION";
				
				}

				
			    public String DEFECTOS;

				public String getDEFECTOS () {
					return this.DEFECTOS;
				}

				public Boolean DEFECTOSIsNullable(){
				    return true;
				}
				public Boolean DEFECTOSIsKey(){
				    return false;
				}
				public Integer DEFECTOSLength(){
				    return 255;
				}
				public Integer DEFECTOSPrecision(){
				    return 0;
				}
				public String DEFECTOSDefault(){
				
					return null;
				
				}
				public String DEFECTOSComment(){
				
				    return "";
				
				}
				public String DEFECTOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DEFECTOSOriginalDbColumnName(){
				
					return "DEFECTOS";
				
				}

				
			    public String TEMPERATURA_DE_RECEPCION__C__;

				public String getTEMPERATURA_DE_RECEPCION__C__ () {
					return this.TEMPERATURA_DE_RECEPCION__C__;
				}

				public Boolean TEMPERATURA_DE_RECEPCION__C__IsNullable(){
				    return true;
				}
				public Boolean TEMPERATURA_DE_RECEPCION__C__IsKey(){
				    return false;
				}
				public Integer TEMPERATURA_DE_RECEPCION__C__Length(){
				    return 255;
				}
				public Integer TEMPERATURA_DE_RECEPCION__C__Precision(){
				    return 0;
				}
				public String TEMPERATURA_DE_RECEPCION__C__Default(){
				
					return null;
				
				}
				public String TEMPERATURA_DE_RECEPCION__C__Comment(){
				
				    return "";
				
				}
				public String TEMPERATURA_DE_RECEPCION__C__Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TEMPERATURA_DE_RECEPCION__C__OriginalDbColumnName(){
				
					return "TEMPERATURA_DE_RECEPCION__C__";
				
				}

				
			    public String NIVEL_DE_RIESGO;

				public String getNIVEL_DE_RIESGO () {
					return this.NIVEL_DE_RIESGO;
				}

				public Boolean NIVEL_DE_RIESGOIsNullable(){
				    return true;
				}
				public Boolean NIVEL_DE_RIESGOIsKey(){
				    return false;
				}
				public Integer NIVEL_DE_RIESGOLength(){
				    return 255;
				}
				public Integer NIVEL_DE_RIESGOPrecision(){
				    return 0;
				}
				public String NIVEL_DE_RIESGODefault(){
				
					return null;
				
				}
				public String NIVEL_DE_RIESGOComment(){
				
				    return "";
				
				}
				public String NIVEL_DE_RIESGOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIVEL_DE_RIESGOOriginalDbColumnName(){
				
					return "NIVEL_DE_RIESGO";
				
				}

				
			    public String TAMANO_DE_LA_MUESTRA;

				public String getTAMANO_DE_LA_MUESTRA () {
					return this.TAMANO_DE_LA_MUESTRA;
				}

				public Boolean TAMANO_DE_LA_MUESTRAIsNullable(){
				    return true;
				}
				public Boolean TAMANO_DE_LA_MUESTRAIsKey(){
				    return false;
				}
				public Integer TAMANO_DE_LA_MUESTRALength(){
				    return 255;
				}
				public Integer TAMANO_DE_LA_MUESTRAPrecision(){
				    return 0;
				}
				public String TAMANO_DE_LA_MUESTRADefault(){
				
					return null;
				
				}
				public String TAMANO_DE_LA_MUESTRAComment(){
				
				    return "";
				
				}
				public String TAMANO_DE_LA_MUESTRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TAMANO_DE_LA_MUESTRAOriginalDbColumnName(){
				
					return "TAMANO_DE_LA_MUESTRA";
				
				}

				
			    public String APROBADO;

				public String getAPROBADO () {
					return this.APROBADO;
				}

				public Boolean APROBADOIsNullable(){
				    return true;
				}
				public Boolean APROBADOIsKey(){
				    return false;
				}
				public Integer APROBADOLength(){
				    return 255;
				}
				public Integer APROBADOPrecision(){
				    return 0;
				}
				public String APROBADODefault(){
				
					return null;
				
				}
				public String APROBADOComment(){
				
				    return "";
				
				}
				public String APROBADOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String APROBADOOriginalDbColumnName(){
				
					return "APROBADO";
				
				}

				
			    public String NUMERO_DE_CONTRATO;

				public String getNUMERO_DE_CONTRATO () {
					return this.NUMERO_DE_CONTRATO;
				}

				public Boolean NUMERO_DE_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean NUMERO_DE_CONTRATOIsKey(){
				    return false;
				}
				public Integer NUMERO_DE_CONTRATOLength(){
				    return 255;
				}
				public Integer NUMERO_DE_CONTRATOPrecision(){
				    return 0;
				}
				public String NUMERO_DE_CONTRATODefault(){
				
					return null;
				
				}
				public String NUMERO_DE_CONTRATOComment(){
				
				    return "";
				
				}
				public String NUMERO_DE_CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NUMERO_DE_CONTRATOOriginalDbColumnName(){
				
					return "NUMERO_DE_CONTRATO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.REGISTRO_INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_A_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA_DE_RECEPCION__C__ = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.TAMANO_DE_LA_MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.NUMERO_DE_CONTRATO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.REGISTRO_INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_A_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA_DE_RECEPCION__C__ = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.TAMANO_DE_LA_MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.NUMERO_DE_CONTRATO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.REGISTRO_INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_A_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA_DE_RECEPCION__C__,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.TAMANO_DE_LA_MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.NUMERO_DE_CONTRATO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.REGISTRO_INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_A_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA_DE_RECEPCION__C__,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.TAMANO_DE_LA_MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.NUMERO_DE_CONTRATO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CUM="+CUM);
		sb.append(",REGISTRO_INVIMA="+REGISTRO_INVIMA);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",CANTIDAD_ENVIADA="+CANTIDAD_ENVIADA);
		sb.append(",CANTIDAD_A_INGRESAR="+CANTIDAD_A_INGRESAR);
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+FECHA_VENCIMIENTO);
		sb.append(",LEYENDA_DE_RESTRICCION="+LEYENDA_DE_RESTRICCION);
		sb.append(",DEFECTOS="+DEFECTOS);
		sb.append(",TEMPERATURA_DE_RECEPCION__C__="+TEMPERATURA_DE_RECEPCION__C__);
		sb.append(",NIVEL_DE_RIESGO="+NIVEL_DE_RIESGO);
		sb.append(",TAMANO_DE_LA_MUESTRA="+TAMANO_DE_LA_MUESTRA);
		sb.append(",APROBADO="+APROBADO);
		sb.append(",NUMERO_DE_CONTRATO="+NUMERO_DE_CONTRATO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String REGISTRO_INVIMA;

				public String getREGISTRO_INVIMA () {
					return this.REGISTRO_INVIMA;
				}

				public Boolean REGISTRO_INVIMAIsNullable(){
				    return true;
				}
				public Boolean REGISTRO_INVIMAIsKey(){
				    return false;
				}
				public Integer REGISTRO_INVIMALength(){
				    return 255;
				}
				public Integer REGISTRO_INVIMAPrecision(){
				    return 0;
				}
				public String REGISTRO_INVIMADefault(){
				
					return null;
				
				}
				public String REGISTRO_INVIMAComment(){
				
				    return "";
				
				}
				public String REGISTRO_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String REGISTRO_INVIMAOriginalDbColumnName(){
				
					return "REGISTRO_INVIMA";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String CANTIDAD_ENVIADA;

				public String getCANTIDAD_ENVIADA () {
					return this.CANTIDAD_ENVIADA;
				}

				public Boolean CANTIDAD_ENVIADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_ENVIADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_ENVIADALength(){
				    return 255;
				}
				public Integer CANTIDAD_ENVIADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_ENVIADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_ENVIADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_ENVIADAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_ENVIADAOriginalDbColumnName(){
				
					return "CANTIDAD_ENVIADA";
				
				}

				
			    public String CANTIDAD_A_INGRESAR;

				public String getCANTIDAD_A_INGRESAR () {
					return this.CANTIDAD_A_INGRESAR;
				}

				public Boolean CANTIDAD_A_INGRESARIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_A_INGRESARIsKey(){
				    return false;
				}
				public Integer CANTIDAD_A_INGRESARLength(){
				    return 255;
				}
				public Integer CANTIDAD_A_INGRESARPrecision(){
				    return 0;
				}
				public String CANTIDAD_A_INGRESARDefault(){
				
					return null;
				
				}
				public String CANTIDAD_A_INGRESARComment(){
				
				    return "";
				
				}
				public String CANTIDAD_A_INGRESARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_A_INGRESAROriginalDbColumnName(){
				
					return "CANTIDAD_A_INGRESAR";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 255;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public String FECHA_VENCIMIENTO;

				public String getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public String LEYENDA_DE_RESTRICCION;

				public String getLEYENDA_DE_RESTRICCION () {
					return this.LEYENDA_DE_RESTRICCION;
				}

				public Boolean LEYENDA_DE_RESTRICCIONIsNullable(){
				    return true;
				}
				public Boolean LEYENDA_DE_RESTRICCIONIsKey(){
				    return false;
				}
				public Integer LEYENDA_DE_RESTRICCIONLength(){
				    return 255;
				}
				public Integer LEYENDA_DE_RESTRICCIONPrecision(){
				    return 0;
				}
				public String LEYENDA_DE_RESTRICCIONDefault(){
				
					return null;
				
				}
				public String LEYENDA_DE_RESTRICCIONComment(){
				
				    return "";
				
				}
				public String LEYENDA_DE_RESTRICCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LEYENDA_DE_RESTRICCIONOriginalDbColumnName(){
				
					return "LEYENDA_DE_RESTRICCION";
				
				}

				
			    public String DEFECTOS;

				public String getDEFECTOS () {
					return this.DEFECTOS;
				}

				public Boolean DEFECTOSIsNullable(){
				    return true;
				}
				public Boolean DEFECTOSIsKey(){
				    return false;
				}
				public Integer DEFECTOSLength(){
				    return 255;
				}
				public Integer DEFECTOSPrecision(){
				    return 0;
				}
				public String DEFECTOSDefault(){
				
					return null;
				
				}
				public String DEFECTOSComment(){
				
				    return "";
				
				}
				public String DEFECTOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DEFECTOSOriginalDbColumnName(){
				
					return "DEFECTOS";
				
				}

				
			    public String TEMPERATURA_DE_RECEPCION__C__;

				public String getTEMPERATURA_DE_RECEPCION__C__ () {
					return this.TEMPERATURA_DE_RECEPCION__C__;
				}

				public Boolean TEMPERATURA_DE_RECEPCION__C__IsNullable(){
				    return true;
				}
				public Boolean TEMPERATURA_DE_RECEPCION__C__IsKey(){
				    return false;
				}
				public Integer TEMPERATURA_DE_RECEPCION__C__Length(){
				    return 255;
				}
				public Integer TEMPERATURA_DE_RECEPCION__C__Precision(){
				    return 0;
				}
				public String TEMPERATURA_DE_RECEPCION__C__Default(){
				
					return null;
				
				}
				public String TEMPERATURA_DE_RECEPCION__C__Comment(){
				
				    return "";
				
				}
				public String TEMPERATURA_DE_RECEPCION__C__Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TEMPERATURA_DE_RECEPCION__C__OriginalDbColumnName(){
				
					return "TEMPERATURA_DE_RECEPCION__C__";
				
				}

				
			    public String NIVEL_DE_RIESGO;

				public String getNIVEL_DE_RIESGO () {
					return this.NIVEL_DE_RIESGO;
				}

				public Boolean NIVEL_DE_RIESGOIsNullable(){
				    return true;
				}
				public Boolean NIVEL_DE_RIESGOIsKey(){
				    return false;
				}
				public Integer NIVEL_DE_RIESGOLength(){
				    return 255;
				}
				public Integer NIVEL_DE_RIESGOPrecision(){
				    return 0;
				}
				public String NIVEL_DE_RIESGODefault(){
				
					return null;
				
				}
				public String NIVEL_DE_RIESGOComment(){
				
				    return "";
				
				}
				public String NIVEL_DE_RIESGOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIVEL_DE_RIESGOOriginalDbColumnName(){
				
					return "NIVEL_DE_RIESGO";
				
				}

				
			    public String TAMANO_DE_LA_MUESTRA;

				public String getTAMANO_DE_LA_MUESTRA () {
					return this.TAMANO_DE_LA_MUESTRA;
				}

				public Boolean TAMANO_DE_LA_MUESTRAIsNullable(){
				    return true;
				}
				public Boolean TAMANO_DE_LA_MUESTRAIsKey(){
				    return false;
				}
				public Integer TAMANO_DE_LA_MUESTRALength(){
				    return 255;
				}
				public Integer TAMANO_DE_LA_MUESTRAPrecision(){
				    return 0;
				}
				public String TAMANO_DE_LA_MUESTRADefault(){
				
					return null;
				
				}
				public String TAMANO_DE_LA_MUESTRAComment(){
				
				    return "";
				
				}
				public String TAMANO_DE_LA_MUESTRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TAMANO_DE_LA_MUESTRAOriginalDbColumnName(){
				
					return "TAMANO_DE_LA_MUESTRA";
				
				}

				
			    public String APROBADO;

				public String getAPROBADO () {
					return this.APROBADO;
				}

				public Boolean APROBADOIsNullable(){
				    return true;
				}
				public Boolean APROBADOIsKey(){
				    return false;
				}
				public Integer APROBADOLength(){
				    return 255;
				}
				public Integer APROBADOPrecision(){
				    return 0;
				}
				public String APROBADODefault(){
				
					return null;
				
				}
				public String APROBADOComment(){
				
				    return "";
				
				}
				public String APROBADOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String APROBADOOriginalDbColumnName(){
				
					return "APROBADO";
				
				}

				
			    public String NUMERO_DE_CONTRATO;

				public String getNUMERO_DE_CONTRATO () {
					return this.NUMERO_DE_CONTRATO;
				}

				public Boolean NUMERO_DE_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean NUMERO_DE_CONTRATOIsKey(){
				    return false;
				}
				public Integer NUMERO_DE_CONTRATOLength(){
				    return 255;
				}
				public Integer NUMERO_DE_CONTRATOPrecision(){
				    return 0;
				}
				public String NUMERO_DE_CONTRATODefault(){
				
					return null;
				
				}
				public String NUMERO_DE_CONTRATOComment(){
				
				    return "";
				
				}
				public String NUMERO_DE_CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NUMERO_DE_CONTRATOOriginalDbColumnName(){
				
					return "NUMERO_DE_CONTRATO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.REGISTRO_INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_A_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA_DE_RECEPCION__C__ = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.TAMANO_DE_LA_MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.NUMERO_DE_CONTRATO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.REGISTRO_INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_A_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA_DE_RECEPCION__C__ = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.TAMANO_DE_LA_MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.NUMERO_DE_CONTRATO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.REGISTRO_INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_A_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA_DE_RECEPCION__C__,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.TAMANO_DE_LA_MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.NUMERO_DE_CONTRATO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.REGISTRO_INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_A_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA_DE_RECEPCION__C__,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.TAMANO_DE_LA_MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.NUMERO_DE_CONTRATO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CUM="+CUM);
		sb.append(",REGISTRO_INVIMA="+REGISTRO_INVIMA);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",CANTIDAD_ENVIADA="+CANTIDAD_ENVIADA);
		sb.append(",CANTIDAD_A_INGRESAR="+CANTIDAD_A_INGRESAR);
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+FECHA_VENCIMIENTO);
		sb.append(",LEYENDA_DE_RESTRICCION="+LEYENDA_DE_RESTRICCION);
		sb.append(",DEFECTOS="+DEFECTOS);
		sb.append(",TEMPERATURA_DE_RECEPCION__C__="+TEMPERATURA_DE_RECEPCION__C__);
		sb.append(",NIVEL_DE_RIESGO="+NIVEL_DE_RIESGO);
		sb.append(",TAMANO_DE_LA_MUESTRA="+TAMANO_DE_LA_MUESTRA);
		sb.append(",APROBADO="+APROBADO);
		sb.append(",NUMERO_DE_CONTRATO="+NUMERO_DE_CONTRATO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public BigDecimal id;

				public BigDecimal getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public Object contenido;

				public Object getContenido () {
					return this.contenido;
				}

				public Boolean contenidoIsNullable(){
				    return true;
				}
				public Boolean contenidoIsKey(){
				    return false;
				}
				public Integer contenidoLength(){
				    return null;
				}
				public Integer contenidoPrecision(){
				    return null;
				}
				public String contenidoDefault(){
				
					return null;
				
				}
				public String contenidoComment(){
				
				    return "";
				
				}
				public String contenidoPattern(){
				
					return "";
				
				}
				public String contenidoOriginalDbColumnName(){
				
					return "contenido";
				
				}

				
			    public String tcontenido;

				public String getTcontenido () {
					return this.tcontenido;
				}

				public Boolean tcontenidoIsNullable(){
				    return true;
				}
				public Boolean tcontenidoIsKey(){
				    return false;
				}
				public Integer tcontenidoLength(){
				    return null;
				}
				public Integer tcontenidoPrecision(){
				    return null;
				}
				public String tcontenidoDefault(){
				
					return null;
				
				}
				public String tcontenidoComment(){
				
				    return "";
				
				}
				public String tcontenidoPattern(){
				
					return "";
				
				}
				public String tcontenidoOriginalDbColumnName(){
				
					return "tcontenido";
				
				}

				
			    public String nombre;

				public String getNombre () {
					return this.nombre;
				}

				public Boolean nombreIsNullable(){
				    return false;
				}
				public Boolean nombreIsKey(){
				    return false;
				}
				public Integer nombreLength(){
				    return null;
				}
				public Integer nombrePrecision(){
				    return null;
				}
				public String nombreDefault(){
				
					return null;
				
				}
				public String nombreComment(){
				
				    return "";
				
				}
				public String nombrePattern(){
				
					return "";
				
				}
				public String nombreOriginalDbColumnName(){
				
					return "nombre";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.id = (BigDecimal) dis.readObject();
					
						this.contenido = (Object) dis.readObject();
					
					this.tcontenido = readString(dis);
					
					this.nombre = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.id = (BigDecimal) dis.readObject();
					
						this.contenido = (Object) dis.readObject();
					
					this.tcontenido = readString(dis);
					
					this.nombre = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.id);
					
					// Object
				
       			    	dos.writeObject(this.contenido);
					
					// String
				
						writeString(this.tcontenido,dos);
					
					// String
				
						writeString(this.nombre,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.id);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.contenido);
					
					// String
				
						writeString(this.tcontenido,dos);
					
					// String
				
						writeString(this.nombre,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id="+String.valueOf(id));
		sb.append(",contenido="+String.valueOf(contenido));
		sb.append(",tcontenido="+tcontenido);
		sb.append(",nombre="+nombre);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out3Struct implements routines.system.IPersistableRow<out3Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public BigDecimal Id_;

				public BigDecimal getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.Id_ = (BigDecimal) dis.readObject();
					
					this.Estado_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.Id_ = (BigDecimal) dis.readObject();
					
					this.Estado_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.Id_);
					
					// String
				
						writeString(this.Estado_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Id_);
					
					// String
				
						writeString(this.Estado_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Id_="+String.valueOf(Id_));
		sb.append(",Estado_="+Estado_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out1Struct implements routines.system.IPersistableRow<out1Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public BigDecimal id;

				public BigDecimal getId () {
					return this.id;
				}

				public Boolean idIsNullable(){
				    return true;
				}
				public Boolean idIsKey(){
				    return false;
				}
				public Integer idLength(){
				    return null;
				}
				public Integer idPrecision(){
				    return null;
				}
				public String idDefault(){
				
					return null;
				
				}
				public String idComment(){
				
				    return "";
				
				}
				public String idPattern(){
				
					return "";
				
				}
				public String idOriginalDbColumnName(){
				
					return "id";
				
				}

				
			    public Object contenido;

				public Object getContenido () {
					return this.contenido;
				}

				public Boolean contenidoIsNullable(){
				    return true;
				}
				public Boolean contenidoIsKey(){
				    return false;
				}
				public Integer contenidoLength(){
				    return null;
				}
				public Integer contenidoPrecision(){
				    return null;
				}
				public String contenidoDefault(){
				
					return null;
				
				}
				public String contenidoComment(){
				
				    return "";
				
				}
				public String contenidoPattern(){
				
					return "";
				
				}
				public String contenidoOriginalDbColumnName(){
				
					return "contenido";
				
				}

				
			    public String tcontenido;

				public String getTcontenido () {
					return this.tcontenido;
				}

				public Boolean tcontenidoIsNullable(){
				    return true;
				}
				public Boolean tcontenidoIsKey(){
				    return false;
				}
				public Integer tcontenidoLength(){
				    return null;
				}
				public Integer tcontenidoPrecision(){
				    return null;
				}
				public String tcontenidoDefault(){
				
					return null;
				
				}
				public String tcontenidoComment(){
				
				    return "";
				
				}
				public String tcontenidoPattern(){
				
					return "";
				
				}
				public String tcontenidoOriginalDbColumnName(){
				
					return "tcontenido";
				
				}

				
			    public String nombre;

				public String getNombre () {
					return this.nombre;
				}

				public Boolean nombreIsNullable(){
				    return false;
				}
				public Boolean nombreIsKey(){
				    return false;
				}
				public Integer nombreLength(){
				    return null;
				}
				public Integer nombrePrecision(){
				    return null;
				}
				public String nombreDefault(){
				
					return null;
				
				}
				public String nombreComment(){
				
				    return "";
				
				}
				public String nombrePattern(){
				
					return "";
				
				}
				public String nombreOriginalDbColumnName(){
				
					return "nombre";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.id = (BigDecimal) dis.readObject();
					
						this.contenido = (Object) dis.readObject();
					
					this.tcontenido = readString(dis);
					
					this.nombre = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.id = (BigDecimal) dis.readObject();
					
						this.contenido = (Object) dis.readObject();
					
					this.tcontenido = readString(dis);
					
					this.nombre = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.id);
					
					// Object
				
       			    	dos.writeObject(this.contenido);
					
					// String
				
						writeString(this.tcontenido,dos);
					
					// String
				
						writeString(this.nombre,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.id);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.contenido);
					
					// String
				
						writeString(this.tcontenido,dos);
					
					// String
				
						writeString(this.nombre,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("id="+String.valueOf(id));
		sb.append(",contenido="+String.valueOf(contenido));
		sb.append(",tcontenido="+tcontenido);
		sb.append(",nombre="+nombre);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return null;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public Object CONTENIDO;

				public Object getCONTENIDO () {
					return this.CONTENIDO;
				}

				public Boolean CONTENIDOIsNullable(){
				    return false;
				}
				public Boolean CONTENIDOIsKey(){
				    return false;
				}
				public Integer CONTENIDOLength(){
				    return null;
				}
				public Integer CONTENIDOPrecision(){
				    return null;
				}
				public String CONTENIDODefault(){
				
					return "";
				
				}
				public String CONTENIDOComment(){
				
				    return "";
				
				}
				public String CONTENIDOPattern(){
				
					return "";
				
				}
				public String CONTENIDOOriginalDbColumnName(){
				
					return "CONTENIDO";
				
				}

				
			    public String TCONTENIDO;

				public String getTCONTENIDO () {
					return this.TCONTENIDO;
				}

				public Boolean TCONTENIDOIsNullable(){
				    return false;
				}
				public Boolean TCONTENIDOIsKey(){
				    return false;
				}
				public Integer TCONTENIDOLength(){
				    return null;
				}
				public Integer TCONTENIDOPrecision(){
				    return null;
				}
				public String TCONTENIDODefault(){
				
					return null;
				
				}
				public String TCONTENIDOComment(){
				
				    return "";
				
				}
				public String TCONTENIDOPattern(){
				
					return "";
				
				}
				public String TCONTENIDOOriginalDbColumnName(){
				
					return "TCONTENIDO";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return null;
				}
				public Integer NOMBREPrecision(){
				    return null;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TCONTENIDO = readString(dis);
					
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.ID = (BigDecimal) dis.readObject();
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TCONTENIDO = readString(dis);
					
					this.NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID);
					
					// Object
				
       			    	dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TCONTENIDO,dos);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TCONTENIDO,dos);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",CONTENIDO="+String.valueOf(CONTENIDO));
		sb.append(",TCONTENIDO="+TCONTENIDO);
		sb.append(",NOMBRE="+NOMBRE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row2Struct row2 = new row2Struct();
out3Struct out3 = new out3Struct();
out1Struct out1 = new out1Struct();
row3Struct row3 = new row3Struct();
row4Struct row4 = new row4Struct();
row5Struct row5 = new row5Struct();
row29Struct row29 = new row29Struct();





	
	/**
	 * [tOracleSP_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_1", false);
		start_Hash.put("tOracleSP_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out3");
					}
				
		int tos_count_tOracleSP_1 = 0;
		

	java.sql.Connection connection_tOracleSP_1 = null;
	connection_tOracleSP_1 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_1 = connection_tOracleSP_1.prepareCall("{call " + "MED.UpdEstadoCargaMasiva" + "(?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_1;
String tmpString_tOracleSP_1;

 



/**
 * [tOracleSP_1 begin ] stop
 */





	
	/**
	 * [tFlowToIterate_1 begin ] start
	 */

				
			int NB_ITERATE_tFileInputDelimited_1 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_1", false);
		start_Hash.put("tFlowToIterate_1", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tFlowToIterate_1 = 0;
		

int nb_line_tFlowToIterate_1 = 0;
int counter_tFlowToIterate_1 = 0;

 



/**
 * [tFlowToIterate_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_3", false);
		start_Hash.put("tJavaRow_3", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out1");
					}
				
		int tos_count_tJavaRow_3 = 0;
		

int nb_line_tJavaRow_3 = 0;

 



/**
 * [tJavaRow_3 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
out3Struct out3_tmp = new out3Struct();
out1Struct out1_tmp = new out1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tOracleInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_3", false);
		start_Hash.put("tOracleInput_3", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_3";
	
	
		int tos_count_tOracleInput_3 = 0;
		
	


	
		    int nb_line_tOracleInput_3 = 0;
		    java.sql.Connection conn_tOracleInput_3 = null;
				conn_tOracleInput_3 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_3 = false;
				boolean isConnectionWrapped_tOracleInput_3 = !(conn_tOracleInput_3 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_3.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_3 = null;
                if (isConnectionWrapped_tOracleInput_3) {
					unwrappedOraConn_tOracleInput_3 = conn_tOracleInput_3.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_3 != null) {
                        isTimeZoneNull_tOracleInput_3 = (unwrappedOraConn_tOracleInput_3.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_3 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_3).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_3) {
					java.sql.Statement stmtGetTZ_tOracleInput_3 = conn_tOracleInput_3.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_3 = stmtGetTZ_tOracleInput_3.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_3 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_3.next()) {
						sessionTimezone_tOracleInput_3 = rsGetTZ_tOracleInput_3.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_3 && unwrappedOraConn_tOracleInput_3 != null) {
                        unwrappedOraConn_tOracleInput_3.setSessionTimeZone(sessionTimezone_tOracleInput_3);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_3).setSessionTimeZone(sessionTimezone_tOracleInput_3);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_3 = conn_tOracleInput_3.createStatement();

		    String dbquery_tOracleInput_3 = "select \n	carga.id,\n	anex.contenido,\n	anex.tcontenido \nfrom med_cargasmasivas carga\ninner join med_anexos anex on a"
+"nex.id=carga.anexos_id\nwhere carga.ESTREGISTRO_ID=1 and carga.id=" + context.carga_id+"\nand estado = 'Inicial'";
		    

		    globalMap.put("tOracleInput_3_QUERY",dbquery_tOracleInput_3);

		    java.sql.ResultSet rs_tOracleInput_3 = null;

		    try {
		    	rs_tOracleInput_3 = stmt_tOracleInput_3.executeQuery(dbquery_tOracleInput_3);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_3 = rs_tOracleInput_3.getMetaData();
		    	int colQtyInRs_tOracleInput_3 = rsmd_tOracleInput_3.getColumnCount();

		    String tmpContent_tOracleInput_3 = null;
		    
		    
		    while (rs_tOracleInput_3.next()) {
		        nb_line_tOracleInput_3++;
		        
							if(colQtyInRs_tOracleInput_3 < 1) {
								row2.ID = null;
							} else {
		                          
					if(rs_tOracleInput_3.getObject(1) != null) {
						row2.ID = rs_tOracleInput_3.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_3 < 2) {
								row2.CONTENIDO = null;
							} else {
		                          
				Object tmpObj_2_tOracleInput_3 = rs_tOracleInput_3.getObject(2);
				if(tmpObj_2_tOracleInput_3 != null) {
					row2.CONTENIDO = tmpObj_2_tOracleInput_3;
				} else {
						throw new RuntimeException("Null value in non-Nullable column");
				}
		                    }
							if(colQtyInRs_tOracleInput_3 < 3) {
								row2.TCONTENIDO = null;
							} else {
	                         		
        	row2.TCONTENIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 4) {
								row2.NOMBRE = null;
							} else {
	                         		
        	row2.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 4, false);
		                    }
					




 



/**
 * [tOracleInput_3 begin ] stop
 */
	
	/**
	 * [tOracleInput_3 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 


	tos_count_tOracleInput_3++;

/**
 * [tOracleInput_3 main ] stop
 */
	
	/**
	 * [tOracleInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

out3 = null;
out1 = null;


// # Output table : 'out3'
out3_tmp.Id_ = context.carga_id ;
out3_tmp.Estado_ = "En proceso" ;
out3 = out3_tmp;

// # Output table : 'out1'
out1_tmp.id = row2.ID;
out1_tmp.contenido = row2.CONTENIDO;
out1_tmp.tcontenido = row2.TCONTENIDO;
out1_tmp.nombre = row2.NOMBRE ;
out1 = out1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "out3"
if(out3 != null) { 



	
	/**
	 * [tOracleSP_1 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out3"
						
						);
					}
					

			// code for the argument 1 (Id_) of type 'IN AUTOMAPPING'
    					if (out3.Id_ == null) {
    						statement_tOracleSP_1.setNull(1, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_1.setBigDecimal(1, out3.Id_);
    					}
    					
			// code for the argument 2 (Estado_) of type 'IN AUTOMAPPING'
    					if (out3.Estado_ == null) {
    						statement_tOracleSP_1.setNull(2, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_1.setString(2, out3.Estado_);
    					}
    					
		statement_tOracleSP_1.execute();
		

 


	tos_count_tOracleSP_1++;

/**
 * [tOracleSP_1 main ] stop
 */
	
	/**
	 * [tOracleSP_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleSP_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 process_data_end ] stop
 */

} // End of branch "out3"




// Start of branch "out1"
if(out1 != null) { 



	
	/**
	 * [tJavaRow_3 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out1"
						
						);
					}
					

    //context.Id = out1.id;
context.nombre  = out1.nombre;
context.TContenido =  out1.tcontenido;
context.Contenido =  ((java.sql.Blob)out1.contenido).getBinaryStream();



    nb_line_tJavaRow_3++;   

 


	tos_count_tJavaRow_3++;

/**
 * [tJavaRow_3 main ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_begin ] stop
 */

	
	/**
	 * [tFlowToIterate_1 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					


    	            
            globalMap.put("row3.id", row3.id);
    	            
            globalMap.put("row3.contenido", row3.contenido);
    	            
            globalMap.put("row3.tcontenido", row3.tcontenido);
    	            
            globalMap.put("row3.nombre", row3.nombre);
    	
 
	   nb_line_tFlowToIterate_1++;  
       counter_tFlowToIterate_1++;
       globalMap.put("tFlowToIterate_1_CURRENT_ITERATION", counter_tFlowToIterate_1);
 


	tos_count_tFlowToIterate_1++;

/**
 * [tFlowToIterate_1 main ] stop
 */
	
	/**
	 * [tFlowToIterate_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 process_data_begin ] stop
 */
	NB_ITERATE_tFileInputDelimited_1++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("row30", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk6", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row27", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row8", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tHashInput_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row17", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("outProductoContrato", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row11", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("If1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row31", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row9", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("next_7", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row28", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk7", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row10", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row12", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk9", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("next_1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row13", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("next_8", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("outConteoErroneo", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row19", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row18", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row29", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("If2", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row32", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentError1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("outContratoId", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("outSalidaErroneos", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row6", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("outVarProc", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row7", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row20", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row14", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row4", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnRowsEnd", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row8", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row44", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row11", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row15", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tHashInput_1", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate1", 1, "exec" + NB_ITERATE_tFileInputDelimited_1);
					//Thread.sleep(1000);
				}				
			




	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row29");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row29Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_CargaInventario_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row29Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tJavaFlex_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaFlex_2", false);
		start_Hash.put("tJavaFlex_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaFlex_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tJavaFlex_2 = 0;
		


int step = 0;
      


 



/**
 * [tJavaFlex_2 begin ] stop
 */



	
	/**
	 * [tFilterRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_1", false);
		start_Hash.put("tFilterRow_1", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tFilterRow_1 = 0;
		
    int nb_line_tFilterRow_1 = 0;
    int nb_line_ok_tFilterRow_1 = 0;
    int nb_line_reject_tFilterRow_1 = 0;

    class Operator_tFilterRow_1 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_1(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_1 begin ] stop
 */



	
	/**
	 * [tFileInputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputDelimited_1", false);
		start_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputDelimited_1";
	
	
		int tos_count_tFileInputDelimited_1 = 0;
		
	
	
	
 
	
	
	final routines.system.RowState rowstate_tFileInputDelimited_1 = new routines.system.RowState();
	
	
				int nb_line_tFileInputDelimited_1 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_1 = null;
				int limit_tFileInputDelimited_1 = -1;
				try{
					
						Object filename_tFileInputDelimited_1 = (java.io.InputStream)context.Contenido;
						if(filename_tFileInputDelimited_1 instanceof java.io.InputStream){
							
			int footer_value_tFileInputDelimited_1 = 0, random_value_tFileInputDelimited_1 = -1;
			if(footer_value_tFileInputDelimited_1 >0 || random_value_tFileInputDelimited_1 > 0){
				throw new java.lang.Exception("When the input source is a stream,footer and random shouldn't be bigger than 0.");				
			}
		
						}
						try {
							fid_tFileInputDelimited_1 = new org.talend.fileprocess.FileInputDelimited((java.io.InputStream)context.Contenido, "ISO-8859-15",";","\n",true,0,0,
									limit_tFileInputDelimited_1
								,-1, false);
						} catch(java.lang.Exception e) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",e.getMessage());
							
								
								System.err.println(e.getMessage());
							
						}
					
				    
					while (fid_tFileInputDelimited_1!=null && fid_tFileInputDelimited_1.nextRecord()) {
						rowstate_tFileInputDelimited_1.reset();
						
			    						row4 = null;			
												
									boolean whetherReject_tFileInputDelimited_1 = false;
									row4 = new row4Struct();
									try {
										
				int columnIndexWithD_tFileInputDelimited_1 = 0;
				
					columnIndexWithD_tFileInputDelimited_1 = 0;
					
							row4.TIPO_PRODUCTO = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 1;
					
							row4.CODIGO_BARRAS = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 2;
					
							row4.CUM = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 3;
					
							row4.REGISTRO_INVIMA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 4;
					
							row4.CODIGO_HOMIC = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 5;
					
							row4.CANTIDAD_ENVIADA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 6;
					
							row4.CANTIDAD_A_INGRESAR = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 7;
					
							row4.LOTE = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 8;
					
							row4.FECHA_VENCIMIENTO = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 9;
					
							row4.LEYENDA_DE_RESTRICCION = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 10;
					
							row4.DEFECTOS = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 11;
					
							row4.TEMPERATURA_DE_RECEPCION__C__ = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 12;
					
							row4.NIVEL_DE_RIESGO = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 13;
					
							row4.TAMANO_DE_LA_MUESTRA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 14;
					
							row4.APROBADO = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
					columnIndexWithD_tFileInputDelimited_1 = 15;
					
							row4.NUMERO_DE_CONTRATO = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						
				
				
										
										if(rowstate_tFileInputDelimited_1.getException()!=null) {
											throw rowstate_tFileInputDelimited_1.getException();
										}
										
										
							
			    					} catch (java.lang.Exception e) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",e.getMessage());
			        					whetherReject_tFileInputDelimited_1 = true;
			        					
			                					System.err.println(e.getMessage());
			                					row4 = null;
			                				
										
			    					}
								

 



/**
 * [tFileInputDelimited_1 begin ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 


	tos_count_tFileInputDelimited_1++;

/**
 * [tFileInputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 



/**
 * [tFileInputDelimited_1 process_data_begin ] stop
 */
// Start of branch "row4"
if(row4 != null) { 



	
	/**
	 * [tFilterRow_1 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					

          row5 = null;
    Operator_tFilterRow_1 ope_tFilterRow_1 = new Operator_tFilterRow_1("||");
            ope_tFilterRow_1.matches((row4.TIPO_PRODUCTO == null? false : row4.TIPO_PRODUCTO.compareTo("") != 0)
                           , "TIPO_PRODUCTO.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row4.CODIGO_BARRAS == null? false : row4.CODIGO_BARRAS.compareTo("") != 0)
                           , "CODIGO_BARRAS.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row4.CUM == null? false : row4.CUM.compareTo("") != 0)
                           , "CUM.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row4.REGISTRO_INVIMA == null? false : row4.REGISTRO_INVIMA.compareTo("") != 0)
                           , "REGISTRO_INVIMA.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row4.CODIGO_HOMIC == null? false : row4.CODIGO_HOMIC.compareTo("") != 0)
                           , "CODIGO_HOMIC.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row4.CANTIDAD_ENVIADA == null? false : row4.CANTIDAD_ENVIADA.compareTo("") != 0)
                           , "CANTIDAD_ENVIADA.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row4.CANTIDAD_A_INGRESAR == null? false : row4.CANTIDAD_A_INGRESAR.compareTo("") != 0)
                           , "CANTIDAD_A_INGRESAR.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row4.LOTE == null? false : row4.LOTE.compareTo("") != 0)
                           , "LOTE.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row4.FECHA_VENCIMIENTO == null? false : row4.FECHA_VENCIMIENTO.compareTo("") != 0)
                           , "FECHA_VENCIMIENTO.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row4.LEYENDA_DE_RESTRICCION == null? false : row4.LEYENDA_DE_RESTRICCION.compareTo("") != 0)
                           , "LEYENDA_DE_RESTRICCION.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row4.DEFECTOS == null? false : row4.DEFECTOS.compareTo("") != 0)
                           , "DEFECTOS.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row4.TEMPERATURA_DE_RECEPCION__C__ == null? false : row4.TEMPERATURA_DE_RECEPCION__C__.compareTo("") != 0)
                           , "TEMPERATURA_DE_RECEPCION__C__.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row4.NIVEL_DE_RIESGO == null? false : row4.NIVEL_DE_RIESGO.compareTo("") != 0)
                           , "NIVEL_DE_RIESGO.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row4.TAMANO_DE_LA_MUESTRA == null? false : row4.TAMANO_DE_LA_MUESTRA.compareTo("") != 0)
                           , "TAMANO_DE_LA_MUESTRA.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row4.APROBADO == null? false : row4.APROBADO.compareTo("") != 0)
                           , "APROBADO.compareTo(\"\") != 0 failed");
            ope_tFilterRow_1.matches((row4.NUMERO_DE_CONTRATO == null? false : row4.NUMERO_DE_CONTRATO.compareTo("") != 0)
                           , "NUMERO_DE_CONTRATO.compareTo(\"\") != 0 failed");
    
    if (ope_tFilterRow_1.getMatchFlag()) {
              if(row5 == null){ 
                row5 = new row5Struct();
              }
               row5.TIPO_PRODUCTO = row4.TIPO_PRODUCTO;
               row5.CODIGO_BARRAS = row4.CODIGO_BARRAS;
               row5.CUM = row4.CUM;
               row5.REGISTRO_INVIMA = row4.REGISTRO_INVIMA;
               row5.CODIGO_HOMIC = row4.CODIGO_HOMIC;
               row5.CANTIDAD_ENVIADA = row4.CANTIDAD_ENVIADA;
               row5.CANTIDAD_A_INGRESAR = row4.CANTIDAD_A_INGRESAR;
               row5.LOTE = row4.LOTE;
               row5.FECHA_VENCIMIENTO = row4.FECHA_VENCIMIENTO;
               row5.LEYENDA_DE_RESTRICCION = row4.LEYENDA_DE_RESTRICCION;
               row5.DEFECTOS = row4.DEFECTOS;
               row5.TEMPERATURA_DE_RECEPCION__C__ = row4.TEMPERATURA_DE_RECEPCION__C__;
               row5.NIVEL_DE_RIESGO = row4.NIVEL_DE_RIESGO;
               row5.TAMANO_DE_LA_MUESTRA = row4.TAMANO_DE_LA_MUESTRA;
               row5.APROBADO = row4.APROBADO;
               row5.NUMERO_DE_CONTRATO = row4.NUMERO_DE_CONTRATO;    
      nb_line_ok_tFilterRow_1++;
    } else {
      nb_line_reject_tFilterRow_1++;
    }

nb_line_tFilterRow_1++;

 


	tos_count_tFilterRow_1++;

/**
 * [tFilterRow_1 main ] stop
 */
	
	/**
	 * [tFilterRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 process_data_begin ] stop
 */
// Start of branch "row5"
if(row5 != null) { 



	
	/**
	 * [tJavaFlex_2 main ] start
	 */

	

	
	
	currentComponent="tJavaFlex_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					


	        				row29.TIPO_PRODUCTO = row5.TIPO_PRODUCTO;
	        				row29.CODIGO_BARRAS = row5.CODIGO_BARRAS;
	        				row29.CUM = row5.CUM;
	        				row29.REGISTRO_INVIMA = row5.REGISTRO_INVIMA;
	        				row29.CODIGO_HOMIC = row5.CODIGO_HOMIC;
	        				row29.CANTIDAD_ENVIADA = row5.CANTIDAD_ENVIADA;
	        				row29.CANTIDAD_A_INGRESAR = row5.CANTIDAD_A_INGRESAR;
	        				row29.LOTE = row5.LOTE;
	        				row29.FECHA_VENCIMIENTO = row5.FECHA_VENCIMIENTO;
	        				row29.LEYENDA_DE_RESTRICCION = row5.LEYENDA_DE_RESTRICCION;
	        				row29.DEFECTOS = row5.DEFECTOS;
	        				row29.TEMPERATURA_DE_RECEPCION__C__ = row5.TEMPERATURA_DE_RECEPCION__C__;
	        				row29.NIVEL_DE_RIESGO = row5.NIVEL_DE_RIESGO;
	        				row29.TAMANO_DE_LA_MUESTRA = row5.TAMANO_DE_LA_MUESTRA;
	        				row29.APROBADO = row5.APROBADO;
	        				row29.NUMERO_DE_CONTRATO = row5.NUMERO_DE_CONTRATO;

			  if(step == 0){
					context.IsValid = 
ColumnName.IsValidInventario(row5.TIPO_PRODUCTO,row5.CODIGO_BARRAS, row5.CUM , row5.REGISTRO_INVIMA, row5.CODIGO_HOMIC, row5.CANTIDAD_ENVIADA, row5.CANTIDAD_A_INGRESAR, row5.LOTE, row5.FECHA_VENCIMIENTO, row5.LEYENDA_DE_RESTRICCION, row5.DEFECTOS, row5.TEMPERATURA_DE_RECEPCION__C__, row5.NIVEL_DE_RIESGO, row5.TAMANO_DE_LA_MUESTRA, row5.APROBADO, row5.NUMERO_DE_CONTRATO)
					;
				}
				row29.itemlVisualizacionColumna = step;
				step ++;

 


	tos_count_tJavaFlex_2++;

/**
 * [tJavaFlex_2 main ] stop
 */
	
	/**
	 * [tJavaFlex_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaFlex_2";
	
	

 



/**
 * [tJavaFlex_2 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row29"
						
						);
					}
					



    
		row29Struct oneRow_tHashOutput_1 = new row29Struct();
				
					oneRow_tHashOutput_1.TIPO_PRODUCTO = row29.TIPO_PRODUCTO;
					oneRow_tHashOutput_1.CODIGO_BARRAS = row29.CODIGO_BARRAS;
					oneRow_tHashOutput_1.CUM = row29.CUM;
					oneRow_tHashOutput_1.REGISTRO_INVIMA = row29.REGISTRO_INVIMA;
					oneRow_tHashOutput_1.CODIGO_HOMIC = row29.CODIGO_HOMIC;
					oneRow_tHashOutput_1.CANTIDAD_ENVIADA = row29.CANTIDAD_ENVIADA;
					oneRow_tHashOutput_1.CANTIDAD_A_INGRESAR = row29.CANTIDAD_A_INGRESAR;
					oneRow_tHashOutput_1.LOTE = row29.LOTE;
					oneRow_tHashOutput_1.FECHA_VENCIMIENTO = row29.FECHA_VENCIMIENTO;
					oneRow_tHashOutput_1.LEYENDA_DE_RESTRICCION = row29.LEYENDA_DE_RESTRICCION;
					oneRow_tHashOutput_1.DEFECTOS = row29.DEFECTOS;
					oneRow_tHashOutput_1.TEMPERATURA_DE_RECEPCION__C__ = row29.TEMPERATURA_DE_RECEPCION__C__;
					oneRow_tHashOutput_1.NIVEL_DE_RIESGO = row29.NIVEL_DE_RIESGO;
					oneRow_tHashOutput_1.TAMANO_DE_LA_MUESTRA = row29.TAMANO_DE_LA_MUESTRA;
					oneRow_tHashOutput_1.APROBADO = row29.APROBADO;
					oneRow_tHashOutput_1.NUMERO_DE_CONTRATO = row29.NUMERO_DE_CONTRATO;
					oneRow_tHashOutput_1.itemlVisualizacionColumna = row29.itemlVisualizacionColumna;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaFlex_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaFlex_2";
	
	

 



/**
 * [tJavaFlex_2 process_data_end ] stop
 */

} // End of branch "row5"




	
	/**
	 * [tFilterRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 process_data_end ] stop
 */

} // End of branch "row4"




	
	/**
	 * [tFileInputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 



/**
 * [tFileInputDelimited_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	



            }
            }finally{
                if(!((Object)((java.io.InputStream)context.Contenido) instanceof java.io.InputStream)){
                	if(fid_tFileInputDelimited_1!=null){
                		fid_tFileInputDelimited_1.close();
                	}
                }
                if(fid_tFileInputDelimited_1!=null){
                	globalMap.put("tFileInputDelimited_1_NB_LINE", fid_tFileInputDelimited_1.getRowNumber());
					
                }
			}
			  

 

ok_Hash.put("tFileInputDelimited_1", true);
end_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());




/**
 * [tFileInputDelimited_1 end ] stop
 */

	
	/**
	 * [tFilterRow_1 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	
    globalMap.put("tFilterRow_1_NB_LINE", nb_line_tFilterRow_1);
    globalMap.put("tFilterRow_1_NB_LINE_OK", nb_line_ok_tFilterRow_1);
    globalMap.put("tFilterRow_1_NB_LINE_REJECT", nb_line_reject_tFilterRow_1);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tFilterRow_1", true);
end_Hash.put("tFilterRow_1", System.currentTimeMillis());




/**
 * [tFilterRow_1 end ] stop
 */

	
	/**
	 * [tJavaFlex_2 end ] start
	 */

	

	
	
	currentComponent="tJavaFlex_2";
	
	




				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tJavaFlex_2", true);
end_Hash.put("tJavaFlex_2", System.currentTimeMillis());




/**
 * [tJavaFlex_2 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row29");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());

   			if (context.IsValid == true) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If2", 0, "true");
					}
				tHashInput_1Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If2", 0, "false");
					}   	 
   				}
   			if (context.IsValid == false) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If1", 0, "true");
					}
				tJava_2Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If1", 0, "false");
					}   	 
   				}



/**
 * [tHashOutput_1 end ] stop
 */









						if(execStat){
							runStat.updateStatOnConnection("iterate1", 2, "exec" + NB_ITERATE_tFileInputDelimited_1);
						}				
					




	
	/**
	 * [tFlowToIterate_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_end ] stop
 */

} // End of branch "out1"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_3 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

}
}finally{
	if (rs_tOracleInput_3 != null) {
		rs_tOracleInput_3.close();
	}
	if (stmt_tOracleInput_3 != null) {
		stmt_tOracleInput_3.close();
	}
}

globalMap.put("tOracleInput_3_NB_LINE",nb_line_tOracleInput_3);
 

ok_Hash.put("tOracleInput_3", true);
end_Hash.put("tOracleInput_3", System.currentTimeMillis());




/**
 * [tOracleInput_3 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tOracleSP_1 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	


	statement_tOracleSP_1.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out3");
			  	}
			  	
 

ok_Hash.put("tOracleSP_1", true);
end_Hash.put("tOracleSP_1", System.currentTimeMillis());




/**
 * [tOracleSP_1 end ] stop
 */




	
	/**
	 * [tJavaRow_3 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

globalMap.put("tJavaRow_3_NB_LINE",nb_line_tJavaRow_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out1");
			  	}
			  	
 

ok_Hash.put("tJavaRow_3", true);
end_Hash.put("tJavaRow_3", System.currentTimeMillis());




/**
 * [tJavaRow_3 end ] stop
 */

	
	/**
	 * [tFlowToIterate_1 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

globalMap.put("tFlowToIterate_1_NB_LINE",nb_line_tFlowToIterate_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_1", true);
end_Hash.put("tFlowToIterate_1", System.currentTimeMillis());




/**
 * [tFlowToIterate_1 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk1", 0, "ok");
								} 
							
							tRunJob_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_3 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tOracleSP_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 finally ] stop
 */




	
	/**
	 * [tJavaRow_3 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 finally ] stop
 */

	
	/**
	 * [tFlowToIterate_1 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 finally ] stop
 */

	
	/**
	 * [tFileInputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 



/**
 * [tFileInputDelimited_1 finally ] stop
 */

	
	/**
	 * [tFilterRow_1 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 finally ] stop
 */

	
	/**
	 * [tJavaFlex_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaFlex_2";
	
	

 



/**
 * [tJavaFlex_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */





















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class outSalidaErroneosStruct implements routines.system.IPersistableRow<outSalidaErroneosStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 0;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 0;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String INVIMA;

				public String getINVIMA () {
					return this.INVIMA;
				}

				public Boolean INVIMAIsNullable(){
				    return true;
				}
				public Boolean INVIMAIsKey(){
				    return false;
				}
				public Integer INVIMALength(){
				    return 0;
				}
				public Integer INVIMAPrecision(){
				    return 0;
				}
				public String INVIMADefault(){
				
					return null;
				
				}
				public String INVIMAComment(){
				
				    return "";
				
				}
				public String INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String INVIMAOriginalDbColumnName(){
				
					return "INVIMA";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String CANTIDAD_ENVIADA;

				public String getCANTIDAD_ENVIADA () {
					return this.CANTIDAD_ENVIADA;
				}

				public Boolean CANTIDAD_ENVIADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_ENVIADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_ENVIADALength(){
				    return 0;
				}
				public Integer CANTIDAD_ENVIADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_ENVIADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_ENVIADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_ENVIADAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_ENVIADAOriginalDbColumnName(){
				
					return "CANTIDAD_ENVIADA";
				
				}

				
			    public String CANTIDAD_INGRESAR;

				public String getCANTIDAD_INGRESAR () {
					return this.CANTIDAD_INGRESAR;
				}

				public Boolean CANTIDAD_INGRESARIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_INGRESARIsKey(){
				    return false;
				}
				public Integer CANTIDAD_INGRESARLength(){
				    return 0;
				}
				public Integer CANTIDAD_INGRESARPrecision(){
				    return 0;
				}
				public String CANTIDAD_INGRESARDefault(){
				
					return null;
				
				}
				public String CANTIDAD_INGRESARComment(){
				
				    return "";
				
				}
				public String CANTIDAD_INGRESARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_INGRESAROriginalDbColumnName(){
				
					return "CANTIDAD_INGRESAR";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 0;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public String FECHA_VENCIMIENTO;

				public String getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 0;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public String LEYENDA_DE_RESTRICCION;

				public String getLEYENDA_DE_RESTRICCION () {
					return this.LEYENDA_DE_RESTRICCION;
				}

				public Boolean LEYENDA_DE_RESTRICCIONIsNullable(){
				    return true;
				}
				public Boolean LEYENDA_DE_RESTRICCIONIsKey(){
				    return false;
				}
				public Integer LEYENDA_DE_RESTRICCIONLength(){
				    return 0;
				}
				public Integer LEYENDA_DE_RESTRICCIONPrecision(){
				    return 0;
				}
				public String LEYENDA_DE_RESTRICCIONDefault(){
				
					return null;
				
				}
				public String LEYENDA_DE_RESTRICCIONComment(){
				
				    return "";
				
				}
				public String LEYENDA_DE_RESTRICCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LEYENDA_DE_RESTRICCIONOriginalDbColumnName(){
				
					return "LEYENDA_DE_RESTRICCION";
				
				}

				
			    public String DEFECTOS;

				public String getDEFECTOS () {
					return this.DEFECTOS;
				}

				public Boolean DEFECTOSIsNullable(){
				    return true;
				}
				public Boolean DEFECTOSIsKey(){
				    return false;
				}
				public Integer DEFECTOSLength(){
				    return 0;
				}
				public Integer DEFECTOSPrecision(){
				    return 0;
				}
				public String DEFECTOSDefault(){
				
					return null;
				
				}
				public String DEFECTOSComment(){
				
				    return "";
				
				}
				public String DEFECTOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DEFECTOSOriginalDbColumnName(){
				
					return "DEFECTOS";
				
				}

				
			    public String TEMPERATURA;

				public String getTEMPERATURA () {
					return this.TEMPERATURA;
				}

				public Boolean TEMPERATURAIsNullable(){
				    return true;
				}
				public Boolean TEMPERATURAIsKey(){
				    return false;
				}
				public Integer TEMPERATURALength(){
				    return 0;
				}
				public Integer TEMPERATURAPrecision(){
				    return 0;
				}
				public String TEMPERATURADefault(){
				
					return null;
				
				}
				public String TEMPERATURAComment(){
				
				    return "";
				
				}
				public String TEMPERATURAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TEMPERATURAOriginalDbColumnName(){
				
					return "TEMPERATURA";
				
				}

				
			    public String NIVEL_DE_RIESGO;

				public String getNIVEL_DE_RIESGO () {
					return this.NIVEL_DE_RIESGO;
				}

				public Boolean NIVEL_DE_RIESGOIsNullable(){
				    return true;
				}
				public Boolean NIVEL_DE_RIESGOIsKey(){
				    return false;
				}
				public Integer NIVEL_DE_RIESGOLength(){
				    return 0;
				}
				public Integer NIVEL_DE_RIESGOPrecision(){
				    return 0;
				}
				public String NIVEL_DE_RIESGODefault(){
				
					return null;
				
				}
				public String NIVEL_DE_RIESGOComment(){
				
				    return "";
				
				}
				public String NIVEL_DE_RIESGOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIVEL_DE_RIESGOOriginalDbColumnName(){
				
					return "NIVEL_DE_RIESGO";
				
				}

				
			    public String MUESTRA;

				public String getMUESTRA () {
					return this.MUESTRA;
				}

				public Boolean MUESTRAIsNullable(){
				    return true;
				}
				public Boolean MUESTRAIsKey(){
				    return false;
				}
				public Integer MUESTRALength(){
				    return 0;
				}
				public Integer MUESTRAPrecision(){
				    return 0;
				}
				public String MUESTRADefault(){
				
					return null;
				
				}
				public String MUESTRAComment(){
				
				    return "";
				
				}
				public String MUESTRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String MUESTRAOriginalDbColumnName(){
				
					return "MUESTRA";
				
				}

				
			    public String APROBADO;

				public String getAPROBADO () {
					return this.APROBADO;
				}

				public Boolean APROBADOIsNullable(){
				    return true;
				}
				public Boolean APROBADOIsKey(){
				    return false;
				}
				public Integer APROBADOLength(){
				    return 0;
				}
				public Integer APROBADOPrecision(){
				    return 0;
				}
				public String APROBADODefault(){
				
					return null;
				
				}
				public String APROBADOComment(){
				
				    return "";
				
				}
				public String APROBADOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String APROBADOOriginalDbColumnName(){
				
					return "APROBADO";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 0;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CUM="+CUM);
		sb.append(",INVIMA="+INVIMA);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",CANTIDAD_ENVIADA="+CANTIDAD_ENVIADA);
		sb.append(",CANTIDAD_INGRESAR="+CANTIDAD_INGRESAR);
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+FECHA_VENCIMIENTO);
		sb.append(",LEYENDA_DE_RESTRICCION="+LEYENDA_DE_RESTRICCION);
		sb.append(",DEFECTOS="+DEFECTOS);
		sb.append(",TEMPERATURA="+TEMPERATURA);
		sb.append(",NIVEL_DE_RIESGO="+NIVEL_DE_RIESGO);
		sb.append(",MUESTRA="+MUESTRA);
		sb.append(",APROBADO="+APROBADO);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(outSalidaErroneosStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row19Struct implements routines.system.IPersistableRow<row19Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 0;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 0;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String INVIMA;

				public String getINVIMA () {
					return this.INVIMA;
				}

				public Boolean INVIMAIsNullable(){
				    return true;
				}
				public Boolean INVIMAIsKey(){
				    return false;
				}
				public Integer INVIMALength(){
				    return 0;
				}
				public Integer INVIMAPrecision(){
				    return 0;
				}
				public String INVIMADefault(){
				
					return null;
				
				}
				public String INVIMAComment(){
				
				    return "";
				
				}
				public String INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String INVIMAOriginalDbColumnName(){
				
					return "INVIMA";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String CANTIDAD_ENVIADA;

				public String getCANTIDAD_ENVIADA () {
					return this.CANTIDAD_ENVIADA;
				}

				public Boolean CANTIDAD_ENVIADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_ENVIADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_ENVIADALength(){
				    return 0;
				}
				public Integer CANTIDAD_ENVIADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_ENVIADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_ENVIADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_ENVIADAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_ENVIADAOriginalDbColumnName(){
				
					return "CANTIDAD_ENVIADA";
				
				}

				
			    public String CANTIDAD_INGRESAR;

				public String getCANTIDAD_INGRESAR () {
					return this.CANTIDAD_INGRESAR;
				}

				public Boolean CANTIDAD_INGRESARIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_INGRESARIsKey(){
				    return false;
				}
				public Integer CANTIDAD_INGRESARLength(){
				    return 0;
				}
				public Integer CANTIDAD_INGRESARPrecision(){
				    return 0;
				}
				public String CANTIDAD_INGRESARDefault(){
				
					return null;
				
				}
				public String CANTIDAD_INGRESARComment(){
				
				    return "";
				
				}
				public String CANTIDAD_INGRESARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_INGRESAROriginalDbColumnName(){
				
					return "CANTIDAD_INGRESAR";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 0;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public String FECHA_VENCIMIENTO;

				public String getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 0;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public String LEYENDA_DE_RESTRICCION;

				public String getLEYENDA_DE_RESTRICCION () {
					return this.LEYENDA_DE_RESTRICCION;
				}

				public Boolean LEYENDA_DE_RESTRICCIONIsNullable(){
				    return true;
				}
				public Boolean LEYENDA_DE_RESTRICCIONIsKey(){
				    return false;
				}
				public Integer LEYENDA_DE_RESTRICCIONLength(){
				    return 0;
				}
				public Integer LEYENDA_DE_RESTRICCIONPrecision(){
				    return 0;
				}
				public String LEYENDA_DE_RESTRICCIONDefault(){
				
					return null;
				
				}
				public String LEYENDA_DE_RESTRICCIONComment(){
				
				    return "";
				
				}
				public String LEYENDA_DE_RESTRICCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LEYENDA_DE_RESTRICCIONOriginalDbColumnName(){
				
					return "LEYENDA_DE_RESTRICCION";
				
				}

				
			    public String DEFECTOS;

				public String getDEFECTOS () {
					return this.DEFECTOS;
				}

				public Boolean DEFECTOSIsNullable(){
				    return true;
				}
				public Boolean DEFECTOSIsKey(){
				    return false;
				}
				public Integer DEFECTOSLength(){
				    return 0;
				}
				public Integer DEFECTOSPrecision(){
				    return 0;
				}
				public String DEFECTOSDefault(){
				
					return null;
				
				}
				public String DEFECTOSComment(){
				
				    return "";
				
				}
				public String DEFECTOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DEFECTOSOriginalDbColumnName(){
				
					return "DEFECTOS";
				
				}

				
			    public String TEMPERATURA;

				public String getTEMPERATURA () {
					return this.TEMPERATURA;
				}

				public Boolean TEMPERATURAIsNullable(){
				    return true;
				}
				public Boolean TEMPERATURAIsKey(){
				    return false;
				}
				public Integer TEMPERATURALength(){
				    return 0;
				}
				public Integer TEMPERATURAPrecision(){
				    return 0;
				}
				public String TEMPERATURADefault(){
				
					return null;
				
				}
				public String TEMPERATURAComment(){
				
				    return "";
				
				}
				public String TEMPERATURAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TEMPERATURAOriginalDbColumnName(){
				
					return "TEMPERATURA";
				
				}

				
			    public String NIVEL_DE_RIESGO;

				public String getNIVEL_DE_RIESGO () {
					return this.NIVEL_DE_RIESGO;
				}

				public Boolean NIVEL_DE_RIESGOIsNullable(){
				    return true;
				}
				public Boolean NIVEL_DE_RIESGOIsKey(){
				    return false;
				}
				public Integer NIVEL_DE_RIESGOLength(){
				    return 0;
				}
				public Integer NIVEL_DE_RIESGOPrecision(){
				    return 0;
				}
				public String NIVEL_DE_RIESGODefault(){
				
					return null;
				
				}
				public String NIVEL_DE_RIESGOComment(){
				
				    return "";
				
				}
				public String NIVEL_DE_RIESGOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIVEL_DE_RIESGOOriginalDbColumnName(){
				
					return "NIVEL_DE_RIESGO";
				
				}

				
			    public String MUESTRA;

				public String getMUESTRA () {
					return this.MUESTRA;
				}

				public Boolean MUESTRAIsNullable(){
				    return true;
				}
				public Boolean MUESTRAIsKey(){
				    return false;
				}
				public Integer MUESTRALength(){
				    return 0;
				}
				public Integer MUESTRAPrecision(){
				    return 0;
				}
				public String MUESTRADefault(){
				
					return null;
				
				}
				public String MUESTRAComment(){
				
				    return "";
				
				}
				public String MUESTRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String MUESTRAOriginalDbColumnName(){
				
					return "MUESTRA";
				
				}

				
			    public String APROBADO;

				public String getAPROBADO () {
					return this.APROBADO;
				}

				public Boolean APROBADOIsNullable(){
				    return true;
				}
				public Boolean APROBADOIsKey(){
				    return false;
				}
				public Integer APROBADOLength(){
				    return 0;
				}
				public Integer APROBADOPrecision(){
				    return 0;
				}
				public String APROBADODefault(){
				
					return null;
				
				}
				public String APROBADOComment(){
				
				    return "";
				
				}
				public String APROBADOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String APROBADOOriginalDbColumnName(){
				
					return "APROBADO";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 0;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				
			    public Integer conteoErroneos;

				public Integer getConteoErroneos () {
					return this.conteoErroneos;
				}

				public Boolean conteoErroneosIsNullable(){
				    return true;
				}
				public Boolean conteoErroneosIsKey(){
				    return false;
				}
				public Integer conteoErroneosLength(){
				    return null;
				}
				public Integer conteoErroneosPrecision(){
				    return null;
				}
				public String conteoErroneosDefault(){
				
					return null;
				
				}
				public String conteoErroneosComment(){
				
				    return "";
				
				}
				public String conteoErroneosPattern(){
				
					return "";
				
				}
				public String conteoErroneosOriginalDbColumnName(){
				
					return "conteoErroneos";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.ERROR = readString(dis);
					
						this.conteoErroneos = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.ERROR = readString(dis);
					
						this.conteoErroneos = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
					// Integer
				
						writeInteger(this.conteoErroneos,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
					// Integer
				
						writeInteger(this.conteoErroneos,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("numeroFila="+String.valueOf(numeroFila));
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CUM="+CUM);
		sb.append(",INVIMA="+INVIMA);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",CANTIDAD_ENVIADA="+CANTIDAD_ENVIADA);
		sb.append(",CANTIDAD_INGRESAR="+CANTIDAD_INGRESAR);
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+FECHA_VENCIMIENTO);
		sb.append(",LEYENDA_DE_RESTRICCION="+LEYENDA_DE_RESTRICCION);
		sb.append(",DEFECTOS="+DEFECTOS);
		sb.append(",TEMPERATURA="+TEMPERATURA);
		sb.append(",NIVEL_DE_RIESGO="+NIVEL_DE_RIESGO);
		sb.append(",MUESTRA="+MUESTRA);
		sb.append(",APROBADO="+APROBADO);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",ERROR="+ERROR);
		sb.append(",conteoErroneos="+String.valueOf(conteoErroneos));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtSortRow_1 implements routines.system.IPersistableRow<OnRowsEndStructtSortRow_1> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 0;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 0;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String INVIMA;

				public String getINVIMA () {
					return this.INVIMA;
				}

				public Boolean INVIMAIsNullable(){
				    return true;
				}
				public Boolean INVIMAIsKey(){
				    return false;
				}
				public Integer INVIMALength(){
				    return 0;
				}
				public Integer INVIMAPrecision(){
				    return 0;
				}
				public String INVIMADefault(){
				
					return null;
				
				}
				public String INVIMAComment(){
				
				    return "";
				
				}
				public String INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String INVIMAOriginalDbColumnName(){
				
					return "INVIMA";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String CANTIDAD_ENVIADA;

				public String getCANTIDAD_ENVIADA () {
					return this.CANTIDAD_ENVIADA;
				}

				public Boolean CANTIDAD_ENVIADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_ENVIADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_ENVIADALength(){
				    return 0;
				}
				public Integer CANTIDAD_ENVIADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_ENVIADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_ENVIADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_ENVIADAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_ENVIADAOriginalDbColumnName(){
				
					return "CANTIDAD_ENVIADA";
				
				}

				
			    public String CANTIDAD_INGRESAR;

				public String getCANTIDAD_INGRESAR () {
					return this.CANTIDAD_INGRESAR;
				}

				public Boolean CANTIDAD_INGRESARIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_INGRESARIsKey(){
				    return false;
				}
				public Integer CANTIDAD_INGRESARLength(){
				    return 0;
				}
				public Integer CANTIDAD_INGRESARPrecision(){
				    return 0;
				}
				public String CANTIDAD_INGRESARDefault(){
				
					return null;
				
				}
				public String CANTIDAD_INGRESARComment(){
				
				    return "";
				
				}
				public String CANTIDAD_INGRESARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_INGRESAROriginalDbColumnName(){
				
					return "CANTIDAD_INGRESAR";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 0;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public String FECHA_VENCIMIENTO;

				public String getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 0;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public String LEYENDA_DE_RESTRICCION;

				public String getLEYENDA_DE_RESTRICCION () {
					return this.LEYENDA_DE_RESTRICCION;
				}

				public Boolean LEYENDA_DE_RESTRICCIONIsNullable(){
				    return true;
				}
				public Boolean LEYENDA_DE_RESTRICCIONIsKey(){
				    return false;
				}
				public Integer LEYENDA_DE_RESTRICCIONLength(){
				    return 0;
				}
				public Integer LEYENDA_DE_RESTRICCIONPrecision(){
				    return 0;
				}
				public String LEYENDA_DE_RESTRICCIONDefault(){
				
					return null;
				
				}
				public String LEYENDA_DE_RESTRICCIONComment(){
				
				    return "";
				
				}
				public String LEYENDA_DE_RESTRICCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LEYENDA_DE_RESTRICCIONOriginalDbColumnName(){
				
					return "LEYENDA_DE_RESTRICCION";
				
				}

				
			    public String DEFECTOS;

				public String getDEFECTOS () {
					return this.DEFECTOS;
				}

				public Boolean DEFECTOSIsNullable(){
				    return true;
				}
				public Boolean DEFECTOSIsKey(){
				    return false;
				}
				public Integer DEFECTOSLength(){
				    return 0;
				}
				public Integer DEFECTOSPrecision(){
				    return 0;
				}
				public String DEFECTOSDefault(){
				
					return null;
				
				}
				public String DEFECTOSComment(){
				
				    return "";
				
				}
				public String DEFECTOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DEFECTOSOriginalDbColumnName(){
				
					return "DEFECTOS";
				
				}

				
			    public String TEMPERATURA;

				public String getTEMPERATURA () {
					return this.TEMPERATURA;
				}

				public Boolean TEMPERATURAIsNullable(){
				    return true;
				}
				public Boolean TEMPERATURAIsKey(){
				    return false;
				}
				public Integer TEMPERATURALength(){
				    return 0;
				}
				public Integer TEMPERATURAPrecision(){
				    return 0;
				}
				public String TEMPERATURADefault(){
				
					return null;
				
				}
				public String TEMPERATURAComment(){
				
				    return "";
				
				}
				public String TEMPERATURAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TEMPERATURAOriginalDbColumnName(){
				
					return "TEMPERATURA";
				
				}

				
			    public String NIVEL_DE_RIESGO;

				public String getNIVEL_DE_RIESGO () {
					return this.NIVEL_DE_RIESGO;
				}

				public Boolean NIVEL_DE_RIESGOIsNullable(){
				    return true;
				}
				public Boolean NIVEL_DE_RIESGOIsKey(){
				    return false;
				}
				public Integer NIVEL_DE_RIESGOLength(){
				    return 0;
				}
				public Integer NIVEL_DE_RIESGOPrecision(){
				    return 0;
				}
				public String NIVEL_DE_RIESGODefault(){
				
					return null;
				
				}
				public String NIVEL_DE_RIESGOComment(){
				
				    return "";
				
				}
				public String NIVEL_DE_RIESGOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIVEL_DE_RIESGOOriginalDbColumnName(){
				
					return "NIVEL_DE_RIESGO";
				
				}

				
			    public String MUESTRA;

				public String getMUESTRA () {
					return this.MUESTRA;
				}

				public Boolean MUESTRAIsNullable(){
				    return true;
				}
				public Boolean MUESTRAIsKey(){
				    return false;
				}
				public Integer MUESTRALength(){
				    return 0;
				}
				public Integer MUESTRAPrecision(){
				    return 0;
				}
				public String MUESTRADefault(){
				
					return null;
				
				}
				public String MUESTRAComment(){
				
				    return "";
				
				}
				public String MUESTRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String MUESTRAOriginalDbColumnName(){
				
					return "MUESTRA";
				
				}

				
			    public String APROBADO;

				public String getAPROBADO () {
					return this.APROBADO;
				}

				public Boolean APROBADOIsNullable(){
				    return true;
				}
				public Boolean APROBADOIsKey(){
				    return false;
				}
				public Integer APROBADOLength(){
				    return 0;
				}
				public Integer APROBADOPrecision(){
				    return 0;
				}
				public String APROBADODefault(){
				
					return null;
				
				}
				public String APROBADOComment(){
				
				    return "";
				
				}
				public String APROBADOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String APROBADOOriginalDbColumnName(){
				
					return "APROBADO";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 0;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				
			    public Integer conteoErroneos;

				public Integer getConteoErroneos () {
					return this.conteoErroneos;
				}

				public Boolean conteoErroneosIsNullable(){
				    return true;
				}
				public Boolean conteoErroneosIsKey(){
				    return false;
				}
				public Integer conteoErroneosLength(){
				    return null;
				}
				public Integer conteoErroneosPrecision(){
				    return null;
				}
				public String conteoErroneosDefault(){
				
					return null;
				
				}
				public String conteoErroneosComment(){
				
				    return "";
				
				}
				public String conteoErroneosPattern(){
				
					return "";
				
				}
				public String conteoErroneosOriginalDbColumnName(){
				
					return "conteoErroneos";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.ERROR = readString(dis);
					
						this.conteoErroneos = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.ERROR = readString(dis);
					
						this.conteoErroneos = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
					// Integer
				
						writeInteger(this.conteoErroneos,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
					// Integer
				
						writeInteger(this.conteoErroneos,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("numeroFila="+String.valueOf(numeroFila));
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CUM="+CUM);
		sb.append(",INVIMA="+INVIMA);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",CANTIDAD_ENVIADA="+CANTIDAD_ENVIADA);
		sb.append(",CANTIDAD_INGRESAR="+CANTIDAD_INGRESAR);
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+FECHA_VENCIMIENTO);
		sb.append(",LEYENDA_DE_RESTRICCION="+LEYENDA_DE_RESTRICCION);
		sb.append(",DEFECTOS="+DEFECTOS);
		sb.append(",TEMPERATURA="+TEMPERATURA);
		sb.append(",NIVEL_DE_RIESGO="+NIVEL_DE_RIESGO);
		sb.append(",MUESTRA="+MUESTRA);
		sb.append(",APROBADO="+APROBADO);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",ERROR="+ERROR);
		sb.append(",conteoErroneos="+String.valueOf(conteoErroneos));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtSortRow_1 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row18Struct implements routines.system.IPersistableRow<row18Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 0;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 0;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String INVIMA;

				public String getINVIMA () {
					return this.INVIMA;
				}

				public Boolean INVIMAIsNullable(){
				    return true;
				}
				public Boolean INVIMAIsKey(){
				    return false;
				}
				public Integer INVIMALength(){
				    return 0;
				}
				public Integer INVIMAPrecision(){
				    return 0;
				}
				public String INVIMADefault(){
				
					return null;
				
				}
				public String INVIMAComment(){
				
				    return "";
				
				}
				public String INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String INVIMAOriginalDbColumnName(){
				
					return "INVIMA";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String CANTIDAD_ENVIADA;

				public String getCANTIDAD_ENVIADA () {
					return this.CANTIDAD_ENVIADA;
				}

				public Boolean CANTIDAD_ENVIADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_ENVIADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_ENVIADALength(){
				    return 0;
				}
				public Integer CANTIDAD_ENVIADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_ENVIADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_ENVIADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_ENVIADAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_ENVIADAOriginalDbColumnName(){
				
					return "CANTIDAD_ENVIADA";
				
				}

				
			    public String CANTIDAD_INGRESAR;

				public String getCANTIDAD_INGRESAR () {
					return this.CANTIDAD_INGRESAR;
				}

				public Boolean CANTIDAD_INGRESARIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_INGRESARIsKey(){
				    return false;
				}
				public Integer CANTIDAD_INGRESARLength(){
				    return 0;
				}
				public Integer CANTIDAD_INGRESARPrecision(){
				    return 0;
				}
				public String CANTIDAD_INGRESARDefault(){
				
					return null;
				
				}
				public String CANTIDAD_INGRESARComment(){
				
				    return "";
				
				}
				public String CANTIDAD_INGRESARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_INGRESAROriginalDbColumnName(){
				
					return "CANTIDAD_INGRESAR";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 0;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public String FECHA_VENCIMIENTO;

				public String getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 0;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public String LEYENDA_DE_RESTRICCION;

				public String getLEYENDA_DE_RESTRICCION () {
					return this.LEYENDA_DE_RESTRICCION;
				}

				public Boolean LEYENDA_DE_RESTRICCIONIsNullable(){
				    return true;
				}
				public Boolean LEYENDA_DE_RESTRICCIONIsKey(){
				    return false;
				}
				public Integer LEYENDA_DE_RESTRICCIONLength(){
				    return 0;
				}
				public Integer LEYENDA_DE_RESTRICCIONPrecision(){
				    return 0;
				}
				public String LEYENDA_DE_RESTRICCIONDefault(){
				
					return null;
				
				}
				public String LEYENDA_DE_RESTRICCIONComment(){
				
				    return "";
				
				}
				public String LEYENDA_DE_RESTRICCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LEYENDA_DE_RESTRICCIONOriginalDbColumnName(){
				
					return "LEYENDA_DE_RESTRICCION";
				
				}

				
			    public String DEFECTOS;

				public String getDEFECTOS () {
					return this.DEFECTOS;
				}

				public Boolean DEFECTOSIsNullable(){
				    return true;
				}
				public Boolean DEFECTOSIsKey(){
				    return false;
				}
				public Integer DEFECTOSLength(){
				    return 0;
				}
				public Integer DEFECTOSPrecision(){
				    return 0;
				}
				public String DEFECTOSDefault(){
				
					return null;
				
				}
				public String DEFECTOSComment(){
				
				    return "";
				
				}
				public String DEFECTOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DEFECTOSOriginalDbColumnName(){
				
					return "DEFECTOS";
				
				}

				
			    public String TEMPERATURA;

				public String getTEMPERATURA () {
					return this.TEMPERATURA;
				}

				public Boolean TEMPERATURAIsNullable(){
				    return true;
				}
				public Boolean TEMPERATURAIsKey(){
				    return false;
				}
				public Integer TEMPERATURALength(){
				    return 0;
				}
				public Integer TEMPERATURAPrecision(){
				    return 0;
				}
				public String TEMPERATURADefault(){
				
					return null;
				
				}
				public String TEMPERATURAComment(){
				
				    return "";
				
				}
				public String TEMPERATURAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TEMPERATURAOriginalDbColumnName(){
				
					return "TEMPERATURA";
				
				}

				
			    public String NIVEL_DE_RIESGO;

				public String getNIVEL_DE_RIESGO () {
					return this.NIVEL_DE_RIESGO;
				}

				public Boolean NIVEL_DE_RIESGOIsNullable(){
				    return true;
				}
				public Boolean NIVEL_DE_RIESGOIsKey(){
				    return false;
				}
				public Integer NIVEL_DE_RIESGOLength(){
				    return 0;
				}
				public Integer NIVEL_DE_RIESGOPrecision(){
				    return 0;
				}
				public String NIVEL_DE_RIESGODefault(){
				
					return null;
				
				}
				public String NIVEL_DE_RIESGOComment(){
				
				    return "";
				
				}
				public String NIVEL_DE_RIESGOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIVEL_DE_RIESGOOriginalDbColumnName(){
				
					return "NIVEL_DE_RIESGO";
				
				}

				
			    public String MUESTRA;

				public String getMUESTRA () {
					return this.MUESTRA;
				}

				public Boolean MUESTRAIsNullable(){
				    return true;
				}
				public Boolean MUESTRAIsKey(){
				    return false;
				}
				public Integer MUESTRALength(){
				    return 0;
				}
				public Integer MUESTRAPrecision(){
				    return 0;
				}
				public String MUESTRADefault(){
				
					return null;
				
				}
				public String MUESTRAComment(){
				
				    return "";
				
				}
				public String MUESTRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String MUESTRAOriginalDbColumnName(){
				
					return "MUESTRA";
				
				}

				
			    public String APROBADO;

				public String getAPROBADO () {
					return this.APROBADO;
				}

				public Boolean APROBADOIsNullable(){
				    return true;
				}
				public Boolean APROBADOIsKey(){
				    return false;
				}
				public Integer APROBADOLength(){
				    return 0;
				}
				public Integer APROBADOPrecision(){
				    return 0;
				}
				public String APROBADODefault(){
				
					return null;
				
				}
				public String APROBADOComment(){
				
				    return "";
				
				}
				public String APROBADOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String APROBADOOriginalDbColumnName(){
				
					return "APROBADO";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 0;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				
			    public Integer conteoErroneos;

				public Integer getConteoErroneos () {
					return this.conteoErroneos;
				}

				public Boolean conteoErroneosIsNullable(){
				    return true;
				}
				public Boolean conteoErroneosIsKey(){
				    return false;
				}
				public Integer conteoErroneosLength(){
				    return null;
				}
				public Integer conteoErroneosPrecision(){
				    return null;
				}
				public String conteoErroneosDefault(){
				
					return null;
				
				}
				public String conteoErroneosComment(){
				
				    return "";
				
				}
				public String conteoErroneosPattern(){
				
					return "";
				
				}
				public String conteoErroneosOriginalDbColumnName(){
				
					return "conteoErroneos";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.ERROR = readString(dis);
					
						this.conteoErroneos = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.ERROR = readString(dis);
					
						this.conteoErroneos = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
					// Integer
				
						writeInteger(this.conteoErroneos,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
					// Integer
				
						writeInteger(this.conteoErroneos,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("numeroFila="+String.valueOf(numeroFila));
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CUM="+CUM);
		sb.append(",INVIMA="+INVIMA);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",CANTIDAD_ENVIADA="+CANTIDAD_ENVIADA);
		sb.append(",CANTIDAD_INGRESAR="+CANTIDAD_INGRESAR);
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+FECHA_VENCIMIENTO);
		sb.append(",LEYENDA_DE_RESTRICCION="+LEYENDA_DE_RESTRICCION);
		sb.append(",DEFECTOS="+DEFECTOS);
		sb.append(",TEMPERATURA="+TEMPERATURA);
		sb.append(",NIVEL_DE_RIESGO="+NIVEL_DE_RIESGO);
		sb.append(",MUESTRA="+MUESTRA);
		sb.append(",APROBADO="+APROBADO);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",ERROR="+ERROR);
		sb.append(",conteoErroneos="+String.valueOf(conteoErroneos));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class outConteoErroneoStruct implements routines.system.IPersistableRow<outConteoErroneoStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 0;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 0;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String INVIMA;

				public String getINVIMA () {
					return this.INVIMA;
				}

				public Boolean INVIMAIsNullable(){
				    return true;
				}
				public Boolean INVIMAIsKey(){
				    return false;
				}
				public Integer INVIMALength(){
				    return 0;
				}
				public Integer INVIMAPrecision(){
				    return 0;
				}
				public String INVIMADefault(){
				
					return null;
				
				}
				public String INVIMAComment(){
				
				    return "";
				
				}
				public String INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String INVIMAOriginalDbColumnName(){
				
					return "INVIMA";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String CANTIDAD_ENVIADA;

				public String getCANTIDAD_ENVIADA () {
					return this.CANTIDAD_ENVIADA;
				}

				public Boolean CANTIDAD_ENVIADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_ENVIADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_ENVIADALength(){
				    return 0;
				}
				public Integer CANTIDAD_ENVIADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_ENVIADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_ENVIADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_ENVIADAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_ENVIADAOriginalDbColumnName(){
				
					return "CANTIDAD_ENVIADA";
				
				}

				
			    public String CANTIDAD_INGRESAR;

				public String getCANTIDAD_INGRESAR () {
					return this.CANTIDAD_INGRESAR;
				}

				public Boolean CANTIDAD_INGRESARIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_INGRESARIsKey(){
				    return false;
				}
				public Integer CANTIDAD_INGRESARLength(){
				    return 0;
				}
				public Integer CANTIDAD_INGRESARPrecision(){
				    return 0;
				}
				public String CANTIDAD_INGRESARDefault(){
				
					return null;
				
				}
				public String CANTIDAD_INGRESARComment(){
				
				    return "";
				
				}
				public String CANTIDAD_INGRESARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_INGRESAROriginalDbColumnName(){
				
					return "CANTIDAD_INGRESAR";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 0;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public String FECHA_VENCIMIENTO;

				public String getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 0;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public String LEYENDA_DE_RESTRICCION;

				public String getLEYENDA_DE_RESTRICCION () {
					return this.LEYENDA_DE_RESTRICCION;
				}

				public Boolean LEYENDA_DE_RESTRICCIONIsNullable(){
				    return true;
				}
				public Boolean LEYENDA_DE_RESTRICCIONIsKey(){
				    return false;
				}
				public Integer LEYENDA_DE_RESTRICCIONLength(){
				    return 0;
				}
				public Integer LEYENDA_DE_RESTRICCIONPrecision(){
				    return 0;
				}
				public String LEYENDA_DE_RESTRICCIONDefault(){
				
					return null;
				
				}
				public String LEYENDA_DE_RESTRICCIONComment(){
				
				    return "";
				
				}
				public String LEYENDA_DE_RESTRICCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LEYENDA_DE_RESTRICCIONOriginalDbColumnName(){
				
					return "LEYENDA_DE_RESTRICCION";
				
				}

				
			    public String DEFECTOS;

				public String getDEFECTOS () {
					return this.DEFECTOS;
				}

				public Boolean DEFECTOSIsNullable(){
				    return true;
				}
				public Boolean DEFECTOSIsKey(){
				    return false;
				}
				public Integer DEFECTOSLength(){
				    return 0;
				}
				public Integer DEFECTOSPrecision(){
				    return 0;
				}
				public String DEFECTOSDefault(){
				
					return null;
				
				}
				public String DEFECTOSComment(){
				
				    return "";
				
				}
				public String DEFECTOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DEFECTOSOriginalDbColumnName(){
				
					return "DEFECTOS";
				
				}

				
			    public String TEMPERATURA;

				public String getTEMPERATURA () {
					return this.TEMPERATURA;
				}

				public Boolean TEMPERATURAIsNullable(){
				    return true;
				}
				public Boolean TEMPERATURAIsKey(){
				    return false;
				}
				public Integer TEMPERATURALength(){
				    return 0;
				}
				public Integer TEMPERATURAPrecision(){
				    return 0;
				}
				public String TEMPERATURADefault(){
				
					return null;
				
				}
				public String TEMPERATURAComment(){
				
				    return "";
				
				}
				public String TEMPERATURAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TEMPERATURAOriginalDbColumnName(){
				
					return "TEMPERATURA";
				
				}

				
			    public String NIVEL_DE_RIESGO;

				public String getNIVEL_DE_RIESGO () {
					return this.NIVEL_DE_RIESGO;
				}

				public Boolean NIVEL_DE_RIESGOIsNullable(){
				    return true;
				}
				public Boolean NIVEL_DE_RIESGOIsKey(){
				    return false;
				}
				public Integer NIVEL_DE_RIESGOLength(){
				    return 0;
				}
				public Integer NIVEL_DE_RIESGOPrecision(){
				    return 0;
				}
				public String NIVEL_DE_RIESGODefault(){
				
					return null;
				
				}
				public String NIVEL_DE_RIESGOComment(){
				
				    return "";
				
				}
				public String NIVEL_DE_RIESGOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIVEL_DE_RIESGOOriginalDbColumnName(){
				
					return "NIVEL_DE_RIESGO";
				
				}

				
			    public String MUESTRA;

				public String getMUESTRA () {
					return this.MUESTRA;
				}

				public Boolean MUESTRAIsNullable(){
				    return true;
				}
				public Boolean MUESTRAIsKey(){
				    return false;
				}
				public Integer MUESTRALength(){
				    return 0;
				}
				public Integer MUESTRAPrecision(){
				    return 0;
				}
				public String MUESTRADefault(){
				
					return null;
				
				}
				public String MUESTRAComment(){
				
				    return "";
				
				}
				public String MUESTRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String MUESTRAOriginalDbColumnName(){
				
					return "MUESTRA";
				
				}

				
			    public String APROBADO;

				public String getAPROBADO () {
					return this.APROBADO;
				}

				public Boolean APROBADOIsNullable(){
				    return true;
				}
				public Boolean APROBADOIsKey(){
				    return false;
				}
				public Integer APROBADOLength(){
				    return 0;
				}
				public Integer APROBADOPrecision(){
				    return 0;
				}
				public String APROBADODefault(){
				
					return null;
				
				}
				public String APROBADOComment(){
				
				    return "";
				
				}
				public String APROBADOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String APROBADOOriginalDbColumnName(){
				
					return "APROBADO";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 0;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				
			    public Integer conteoErroneos;

				public Integer getConteoErroneos () {
					return this.conteoErroneos;
				}

				public Boolean conteoErroneosIsNullable(){
				    return true;
				}
				public Boolean conteoErroneosIsKey(){
				    return false;
				}
				public Integer conteoErroneosLength(){
				    return null;
				}
				public Integer conteoErroneosPrecision(){
				    return null;
				}
				public String conteoErroneosDefault(){
				
					return null;
				
				}
				public String conteoErroneosComment(){
				
				    return "";
				
				}
				public String conteoErroneosPattern(){
				
					return "";
				
				}
				public String conteoErroneosOriginalDbColumnName(){
				
					return "conteoErroneos";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.ERROR = readString(dis);
					
						this.conteoErroneos = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.ERROR = readString(dis);
					
						this.conteoErroneos = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
					// Integer
				
						writeInteger(this.conteoErroneos,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
					// Integer
				
						writeInteger(this.conteoErroneos,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("numeroFila="+String.valueOf(numeroFila));
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CUM="+CUM);
		sb.append(",INVIMA="+INVIMA);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",CANTIDAD_ENVIADA="+CANTIDAD_ENVIADA);
		sb.append(",CANTIDAD_INGRESAR="+CANTIDAD_INGRESAR);
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+FECHA_VENCIMIENTO);
		sb.append(",LEYENDA_DE_RESTRICCION="+LEYENDA_DE_RESTRICCION);
		sb.append(",DEFECTOS="+DEFECTOS);
		sb.append(",TEMPERATURA="+TEMPERATURA);
		sb.append(",NIVEL_DE_RIESGO="+NIVEL_DE_RIESGO);
		sb.append(",MUESTRA="+MUESTRA);
		sb.append(",APROBADO="+APROBADO);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",ERROR="+ERROR);
		sb.append(",conteoErroneos="+String.valueOf(conteoErroneos));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(outConteoErroneoStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 0;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 0;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String INVIMA;

				public String getINVIMA () {
					return this.INVIMA;
				}

				public Boolean INVIMAIsNullable(){
				    return true;
				}
				public Boolean INVIMAIsKey(){
				    return false;
				}
				public Integer INVIMALength(){
				    return 0;
				}
				public Integer INVIMAPrecision(){
				    return 0;
				}
				public String INVIMADefault(){
				
					return null;
				
				}
				public String INVIMAComment(){
				
				    return "";
				
				}
				public String INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String INVIMAOriginalDbColumnName(){
				
					return "INVIMA";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String CANTIDAD_ENVIADA;

				public String getCANTIDAD_ENVIADA () {
					return this.CANTIDAD_ENVIADA;
				}

				public Boolean CANTIDAD_ENVIADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_ENVIADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_ENVIADALength(){
				    return 0;
				}
				public Integer CANTIDAD_ENVIADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_ENVIADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_ENVIADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_ENVIADAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_ENVIADAOriginalDbColumnName(){
				
					return "CANTIDAD_ENVIADA";
				
				}

				
			    public String CANTIDAD_INGRESAR;

				public String getCANTIDAD_INGRESAR () {
					return this.CANTIDAD_INGRESAR;
				}

				public Boolean CANTIDAD_INGRESARIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_INGRESARIsKey(){
				    return false;
				}
				public Integer CANTIDAD_INGRESARLength(){
				    return 0;
				}
				public Integer CANTIDAD_INGRESARPrecision(){
				    return 0;
				}
				public String CANTIDAD_INGRESARDefault(){
				
					return null;
				
				}
				public String CANTIDAD_INGRESARComment(){
				
				    return "";
				
				}
				public String CANTIDAD_INGRESARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_INGRESAROriginalDbColumnName(){
				
					return "CANTIDAD_INGRESAR";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 0;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public String FECHA_VENCIMIENTO;

				public String getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 0;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public String LEYENDA_DE_RESTRICCION;

				public String getLEYENDA_DE_RESTRICCION () {
					return this.LEYENDA_DE_RESTRICCION;
				}

				public Boolean LEYENDA_DE_RESTRICCIONIsNullable(){
				    return true;
				}
				public Boolean LEYENDA_DE_RESTRICCIONIsKey(){
				    return false;
				}
				public Integer LEYENDA_DE_RESTRICCIONLength(){
				    return 0;
				}
				public Integer LEYENDA_DE_RESTRICCIONPrecision(){
				    return 0;
				}
				public String LEYENDA_DE_RESTRICCIONDefault(){
				
					return null;
				
				}
				public String LEYENDA_DE_RESTRICCIONComment(){
				
				    return "";
				
				}
				public String LEYENDA_DE_RESTRICCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LEYENDA_DE_RESTRICCIONOriginalDbColumnName(){
				
					return "LEYENDA_DE_RESTRICCION";
				
				}

				
			    public String DEFECTOS;

				public String getDEFECTOS () {
					return this.DEFECTOS;
				}

				public Boolean DEFECTOSIsNullable(){
				    return true;
				}
				public Boolean DEFECTOSIsKey(){
				    return false;
				}
				public Integer DEFECTOSLength(){
				    return 0;
				}
				public Integer DEFECTOSPrecision(){
				    return 0;
				}
				public String DEFECTOSDefault(){
				
					return null;
				
				}
				public String DEFECTOSComment(){
				
				    return "";
				
				}
				public String DEFECTOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DEFECTOSOriginalDbColumnName(){
				
					return "DEFECTOS";
				
				}

				
			    public String TEMPERATURA;

				public String getTEMPERATURA () {
					return this.TEMPERATURA;
				}

				public Boolean TEMPERATURAIsNullable(){
				    return true;
				}
				public Boolean TEMPERATURAIsKey(){
				    return false;
				}
				public Integer TEMPERATURALength(){
				    return 0;
				}
				public Integer TEMPERATURAPrecision(){
				    return 0;
				}
				public String TEMPERATURADefault(){
				
					return null;
				
				}
				public String TEMPERATURAComment(){
				
				    return "";
				
				}
				public String TEMPERATURAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TEMPERATURAOriginalDbColumnName(){
				
					return "TEMPERATURA";
				
				}

				
			    public String NIVEL_DE_RIESGO;

				public String getNIVEL_DE_RIESGO () {
					return this.NIVEL_DE_RIESGO;
				}

				public Boolean NIVEL_DE_RIESGOIsNullable(){
				    return true;
				}
				public Boolean NIVEL_DE_RIESGOIsKey(){
				    return false;
				}
				public Integer NIVEL_DE_RIESGOLength(){
				    return 0;
				}
				public Integer NIVEL_DE_RIESGOPrecision(){
				    return 0;
				}
				public String NIVEL_DE_RIESGODefault(){
				
					return null;
				
				}
				public String NIVEL_DE_RIESGOComment(){
				
				    return "";
				
				}
				public String NIVEL_DE_RIESGOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIVEL_DE_RIESGOOriginalDbColumnName(){
				
					return "NIVEL_DE_RIESGO";
				
				}

				
			    public String MUESTRA;

				public String getMUESTRA () {
					return this.MUESTRA;
				}

				public Boolean MUESTRAIsNullable(){
				    return true;
				}
				public Boolean MUESTRAIsKey(){
				    return false;
				}
				public Integer MUESTRALength(){
				    return 0;
				}
				public Integer MUESTRAPrecision(){
				    return 0;
				}
				public String MUESTRADefault(){
				
					return null;
				
				}
				public String MUESTRAComment(){
				
				    return "";
				
				}
				public String MUESTRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String MUESTRAOriginalDbColumnName(){
				
					return "MUESTRA";
				
				}

				
			    public String APROBADO;

				public String getAPROBADO () {
					return this.APROBADO;
				}

				public Boolean APROBADOIsNullable(){
				    return true;
				}
				public Boolean APROBADOIsKey(){
				    return false;
				}
				public Integer APROBADOLength(){
				    return 0;
				}
				public Integer APROBADOPrecision(){
				    return 0;
				}
				public String APROBADODefault(){
				
					return null;
				
				}
				public String APROBADOComment(){
				
				    return "";
				
				}
				public String APROBADOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String APROBADOOriginalDbColumnName(){
				
					return "APROBADO";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 0;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("numeroFila="+String.valueOf(numeroFila));
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CUM="+CUM);
		sb.append(",INVIMA="+INVIMA);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",CANTIDAD_ENVIADA="+CANTIDAD_ENVIADA);
		sb.append(",CANTIDAD_INGRESAR="+CANTIDAD_INGRESAR);
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+FECHA_VENCIMIENTO);
		sb.append(",LEYENDA_DE_RESTRICCION="+LEYENDA_DE_RESTRICCION);
		sb.append(",DEFECTOS="+DEFECTOS);
		sb.append(",TEMPERATURA="+TEMPERATURA);
		sb.append(",NIVEL_DE_RIESGO="+NIVEL_DE_RIESGO);
		sb.append(",MUESTRA="+MUESTRA);
		sb.append(",APROBADO="+APROBADO);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class next_7Struct implements routines.system.IPersistableRow<next_7Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 0;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 0;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String INVIMA;

				public String getINVIMA () {
					return this.INVIMA;
				}

				public Boolean INVIMAIsNullable(){
				    return true;
				}
				public Boolean INVIMAIsKey(){
				    return false;
				}
				public Integer INVIMALength(){
				    return 0;
				}
				public Integer INVIMAPrecision(){
				    return 0;
				}
				public String INVIMADefault(){
				
					return null;
				
				}
				public String INVIMAComment(){
				
				    return "";
				
				}
				public String INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String INVIMAOriginalDbColumnName(){
				
					return "INVIMA";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String CANTIDAD_ENVIADA;

				public String getCANTIDAD_ENVIADA () {
					return this.CANTIDAD_ENVIADA;
				}

				public Boolean CANTIDAD_ENVIADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_ENVIADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_ENVIADALength(){
				    return 0;
				}
				public Integer CANTIDAD_ENVIADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_ENVIADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_ENVIADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_ENVIADAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_ENVIADAOriginalDbColumnName(){
				
					return "CANTIDAD_ENVIADA";
				
				}

				
			    public String CANTIDAD_INGRESAR;

				public String getCANTIDAD_INGRESAR () {
					return this.CANTIDAD_INGRESAR;
				}

				public Boolean CANTIDAD_INGRESARIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_INGRESARIsKey(){
				    return false;
				}
				public Integer CANTIDAD_INGRESARLength(){
				    return 0;
				}
				public Integer CANTIDAD_INGRESARPrecision(){
				    return 0;
				}
				public String CANTIDAD_INGRESARDefault(){
				
					return null;
				
				}
				public String CANTIDAD_INGRESARComment(){
				
				    return "";
				
				}
				public String CANTIDAD_INGRESARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_INGRESAROriginalDbColumnName(){
				
					return "CANTIDAD_INGRESAR";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 0;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public String FECHA_VENCIMIENTO;

				public String getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 0;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public String LEYENDA_DE_RESTRICCION;

				public String getLEYENDA_DE_RESTRICCION () {
					return this.LEYENDA_DE_RESTRICCION;
				}

				public Boolean LEYENDA_DE_RESTRICCIONIsNullable(){
				    return true;
				}
				public Boolean LEYENDA_DE_RESTRICCIONIsKey(){
				    return false;
				}
				public Integer LEYENDA_DE_RESTRICCIONLength(){
				    return 0;
				}
				public Integer LEYENDA_DE_RESTRICCIONPrecision(){
				    return 0;
				}
				public String LEYENDA_DE_RESTRICCIONDefault(){
				
					return null;
				
				}
				public String LEYENDA_DE_RESTRICCIONComment(){
				
				    return "";
				
				}
				public String LEYENDA_DE_RESTRICCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LEYENDA_DE_RESTRICCIONOriginalDbColumnName(){
				
					return "LEYENDA_DE_RESTRICCION";
				
				}

				
			    public String DEFECTOS;

				public String getDEFECTOS () {
					return this.DEFECTOS;
				}

				public Boolean DEFECTOSIsNullable(){
				    return true;
				}
				public Boolean DEFECTOSIsKey(){
				    return false;
				}
				public Integer DEFECTOSLength(){
				    return 0;
				}
				public Integer DEFECTOSPrecision(){
				    return 0;
				}
				public String DEFECTOSDefault(){
				
					return null;
				
				}
				public String DEFECTOSComment(){
				
				    return "";
				
				}
				public String DEFECTOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DEFECTOSOriginalDbColumnName(){
				
					return "DEFECTOS";
				
				}

				
			    public String TEMPERATURA;

				public String getTEMPERATURA () {
					return this.TEMPERATURA;
				}

				public Boolean TEMPERATURAIsNullable(){
				    return true;
				}
				public Boolean TEMPERATURAIsKey(){
				    return false;
				}
				public Integer TEMPERATURALength(){
				    return 0;
				}
				public Integer TEMPERATURAPrecision(){
				    return 0;
				}
				public String TEMPERATURADefault(){
				
					return null;
				
				}
				public String TEMPERATURAComment(){
				
				    return "";
				
				}
				public String TEMPERATURAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TEMPERATURAOriginalDbColumnName(){
				
					return "TEMPERATURA";
				
				}

				
			    public String NIVEL_DE_RIESGO;

				public String getNIVEL_DE_RIESGO () {
					return this.NIVEL_DE_RIESGO;
				}

				public Boolean NIVEL_DE_RIESGOIsNullable(){
				    return true;
				}
				public Boolean NIVEL_DE_RIESGOIsKey(){
				    return false;
				}
				public Integer NIVEL_DE_RIESGOLength(){
				    return 0;
				}
				public Integer NIVEL_DE_RIESGOPrecision(){
				    return 0;
				}
				public String NIVEL_DE_RIESGODefault(){
				
					return null;
				
				}
				public String NIVEL_DE_RIESGOComment(){
				
				    return "";
				
				}
				public String NIVEL_DE_RIESGOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIVEL_DE_RIESGOOriginalDbColumnName(){
				
					return "NIVEL_DE_RIESGO";
				
				}

				
			    public String MUESTRA;

				public String getMUESTRA () {
					return this.MUESTRA;
				}

				public Boolean MUESTRAIsNullable(){
				    return true;
				}
				public Boolean MUESTRAIsKey(){
				    return false;
				}
				public Integer MUESTRALength(){
				    return 0;
				}
				public Integer MUESTRAPrecision(){
				    return 0;
				}
				public String MUESTRADefault(){
				
					return null;
				
				}
				public String MUESTRAComment(){
				
				    return "";
				
				}
				public String MUESTRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String MUESTRAOriginalDbColumnName(){
				
					return "MUESTRA";
				
				}

				
			    public String APROBADO;

				public String getAPROBADO () {
					return this.APROBADO;
				}

				public Boolean APROBADOIsNullable(){
				    return true;
				}
				public Boolean APROBADOIsKey(){
				    return false;
				}
				public Integer APROBADOLength(){
				    return 0;
				}
				public Integer APROBADOPrecision(){
				    return 0;
				}
				public String APROBADODefault(){
				
					return null;
				
				}
				public String APROBADOComment(){
				
				    return "";
				
				}
				public String APROBADOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String APROBADOOriginalDbColumnName(){
				
					return "APROBADO";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 0;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("numeroFila="+String.valueOf(numeroFila));
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CUM="+CUM);
		sb.append(",INVIMA="+INVIMA);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",CANTIDAD_ENVIADA="+CANTIDAD_ENVIADA);
		sb.append(",CANTIDAD_INGRESAR="+CANTIDAD_INGRESAR);
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+FECHA_VENCIMIENTO);
		sb.append(",LEYENDA_DE_RESTRICCION="+LEYENDA_DE_RESTRICCION);
		sb.append(",DEFECTOS="+DEFECTOS);
		sb.append(",TEMPERATURA="+TEMPERATURA);
		sb.append(",NIVEL_DE_RIESGO="+NIVEL_DE_RIESGO);
		sb.append(",MUESTRA="+MUESTRA);
		sb.append(",APROBADO="+APROBADO);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(next_7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row32Struct implements routines.system.IPersistableRow<row32Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public BigDecimal TMovimiento_Id_;

				public BigDecimal getTMovimiento_Id_ () {
					return this.TMovimiento_Id_;
				}

				public Boolean TMovimiento_Id_IsNullable(){
				    return true;
				}
				public Boolean TMovimiento_Id_IsKey(){
				    return false;
				}
				public Integer TMovimiento_Id_Length(){
				    return null;
				}
				public Integer TMovimiento_Id_Precision(){
				    return null;
				}
				public String TMovimiento_Id_Default(){
				
					return null;
				
				}
				public String TMovimiento_Id_Comment(){
				
				    return "";
				
				}
				public String TMovimiento_Id_Pattern(){
				
					return "";
				
				}
				public String TMovimiento_Id_OriginalDbColumnName(){
				
					return "TMovimiento_Id_";
				
				}

				
			    public BigDecimal Movimiento_Id_;

				public BigDecimal getMovimiento_Id_ () {
					return this.Movimiento_Id_;
				}

				public Boolean Movimiento_Id_IsNullable(){
				    return true;
				}
				public Boolean Movimiento_Id_IsKey(){
				    return false;
				}
				public Integer Movimiento_Id_Length(){
				    return null;
				}
				public Integer Movimiento_Id_Precision(){
				    return null;
				}
				public String Movimiento_Id_Default(){
				
					return null;
				
				}
				public String Movimiento_Id_Comment(){
				
				    return "";
				
				}
				public String Movimiento_Id_Pattern(){
				
					return "";
				
				}
				public String Movimiento_Id_OriginalDbColumnName(){
				
					return "Movimiento_Id_";
				
				}

				
			    public BigDecimal Bodega_Id_;

				public BigDecimal getBodega_Id_ () {
					return this.Bodega_Id_;
				}

				public Boolean Bodega_Id_IsNullable(){
				    return true;
				}
				public Boolean Bodega_Id_IsKey(){
				    return false;
				}
				public Integer Bodega_Id_Length(){
				    return null;
				}
				public Integer Bodega_Id_Precision(){
				    return null;
				}
				public String Bodega_Id_Default(){
				
					return null;
				
				}
				public String Bodega_Id_Comment(){
				
				    return "";
				
				}
				public String Bodega_Id_Pattern(){
				
					return "";
				
				}
				public String Bodega_Id_OriginalDbColumnName(){
				
					return "Bodega_Id_";
				
				}

				
			    public BigDecimal Usuario_Id_;

				public BigDecimal getUsuario_Id_ () {
					return this.Usuario_Id_;
				}

				public Boolean Usuario_Id_IsNullable(){
				    return true;
				}
				public Boolean Usuario_Id_IsKey(){
				    return false;
				}
				public Integer Usuario_Id_Length(){
				    return null;
				}
				public Integer Usuario_Id_Precision(){
				    return null;
				}
				public String Usuario_Id_Default(){
				
					return null;
				
				}
				public String Usuario_Id_Comment(){
				
				    return "";
				
				}
				public String Usuario_Id_Pattern(){
				
					return "";
				
				}
				public String Usuario_Id_OriginalDbColumnName(){
				
					return "Usuario_Id_";
				
				}

				
			    public BigDecimal Inventario_Id_;

				public BigDecimal getInventario_Id_ () {
					return this.Inventario_Id_;
				}

				public Boolean Inventario_Id_IsNullable(){
				    return true;
				}
				public Boolean Inventario_Id_IsKey(){
				    return false;
				}
				public Integer Inventario_Id_Length(){
				    return null;
				}
				public Integer Inventario_Id_Precision(){
				    return null;
				}
				public String Inventario_Id_Default(){
				
					return null;
				
				}
				public String Inventario_Id_Comment(){
				
				    return "";
				
				}
				public String Inventario_Id_Pattern(){
				
					return "";
				
				}
				public String Inventario_Id_OriginalDbColumnName(){
				
					return "Inventario_Id_";
				
				}

				
			    public BigDecimal PreCantidad_;

				public BigDecimal getPreCantidad_ () {
					return this.PreCantidad_;
				}

				public Boolean PreCantidad_IsNullable(){
				    return true;
				}
				public Boolean PreCantidad_IsKey(){
				    return false;
				}
				public Integer PreCantidad_Length(){
				    return null;
				}
				public Integer PreCantidad_Precision(){
				    return null;
				}
				public String PreCantidad_Default(){
				
					return null;
				
				}
				public String PreCantidad_Comment(){
				
				    return "";
				
				}
				public String PreCantidad_Pattern(){
				
					return "";
				
				}
				public String PreCantidad_OriginalDbColumnName(){
				
					return "PreCantidad_";
				
				}

				
			    public BigDecimal PostCantidad_;

				public BigDecimal getPostCantidad_ () {
					return this.PostCantidad_;
				}

				public Boolean PostCantidad_IsNullable(){
				    return true;
				}
				public Boolean PostCantidad_IsKey(){
				    return false;
				}
				public Integer PostCantidad_Length(){
				    return null;
				}
				public Integer PostCantidad_Precision(){
				    return null;
				}
				public String PostCantidad_Default(){
				
					return null;
				
				}
				public String PostCantidad_Comment(){
				
				    return "";
				
				}
				public String PostCantidad_Pattern(){
				
					return "";
				
				}
				public String PostCantidad_OriginalDbColumnName(){
				
					return "PostCantidad_";
				
				}

				
			    public BigDecimal Producto_Id_;

				public BigDecimal getProducto_Id_ () {
					return this.Producto_Id_;
				}

				public Boolean Producto_Id_IsNullable(){
				    return true;
				}
				public Boolean Producto_Id_IsKey(){
				    return false;
				}
				public Integer Producto_Id_Length(){
				    return null;
				}
				public Integer Producto_Id_Precision(){
				    return null;
				}
				public String Producto_Id_Default(){
				
					return null;
				
				}
				public String Producto_Id_Comment(){
				
				    return "";
				
				}
				public String Producto_Id_Pattern(){
				
					return "";
				
				}
				public String Producto_Id_OriginalDbColumnName(){
				
					return "Producto_Id_";
				
				}

				
			    public String out_Expediente;

				public String getOut_Expediente () {
					return this.out_Expediente;
				}

				public Boolean out_ExpedienteIsNullable(){
				    return true;
				}
				public Boolean out_ExpedienteIsKey(){
				    return false;
				}
				public Integer out_ExpedienteLength(){
				    return null;
				}
				public Integer out_ExpedientePrecision(){
				    return null;
				}
				public String out_ExpedienteDefault(){
				
					return null;
				
				}
				public String out_ExpedienteComment(){
				
				    return "";
				
				}
				public String out_ExpedientePattern(){
				
					return "";
				
				}
				public String out_ExpedienteOriginalDbColumnName(){
				
					return "out_Expediente";
				
				}

				
			    public String out_Consecutivo;

				public String getOut_Consecutivo () {
					return this.out_Consecutivo;
				}

				public Boolean out_ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean out_ConsecutivoIsKey(){
				    return false;
				}
				public Integer out_ConsecutivoLength(){
				    return null;
				}
				public Integer out_ConsecutivoPrecision(){
				    return null;
				}
				public String out_ConsecutivoDefault(){
				
					return null;
				
				}
				public String out_ConsecutivoComment(){
				
				    return "";
				
				}
				public String out_ConsecutivoPattern(){
				
					return "";
				
				}
				public String out_ConsecutivoOriginalDbColumnName(){
				
					return "out_Consecutivo";
				
				}

				
			    public Integer out_CantEnviada;

				public Integer getOut_CantEnviada () {
					return this.out_CantEnviada;
				}

				public Boolean out_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean out_CantEnviadaIsKey(){
				    return false;
				}
				public Integer out_CantEnviadaLength(){
				    return 0;
				}
				public Integer out_CantEnviadaPrecision(){
				    return 0;
				}
				public String out_CantEnviadaDefault(){
				
					return null;
				
				}
				public String out_CantEnviadaComment(){
				
				    return "";
				
				}
				public String out_CantEnviadaPattern(){
				
					return "";
				
				}
				public String out_CantEnviadaOriginalDbColumnName(){
				
					return "out_CantEnviada";
				
				}

				
			    public Integer CantEnviada;

				public Integer getCantEnviada () {
					return this.CantEnviada;
				}

				public Boolean CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean CantEnviadaIsKey(){
				    return false;
				}
				public Integer CantEnviadaLength(){
				    return null;
				}
				public Integer CantEnviadaPrecision(){
				    return null;
				}
				public String CantEnviadaDefault(){
				
					return null;
				
				}
				public String CantEnviadaComment(){
				
				    return "";
				
				}
				public String CantEnviadaPattern(){
				
					return "";
				
				}
				public String CantEnviadaOriginalDbColumnName(){
				
					return "CantEnviada";
				
				}

				
			    public Integer out_CantIngresar;

				public Integer getOut_CantIngresar () {
					return this.out_CantIngresar;
				}

				public Boolean out_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean out_CantIngresarIsKey(){
				    return false;
				}
				public Integer out_CantIngresarLength(){
				    return 0;
				}
				public Integer out_CantIngresarPrecision(){
				    return 0;
				}
				public String out_CantIngresarDefault(){
				
					return null;
				
				}
				public String out_CantIngresarComment(){
				
				    return "";
				
				}
				public String out_CantIngresarPattern(){
				
					return "";
				
				}
				public String out_CantIngresarOriginalDbColumnName(){
				
					return "out_CantIngresar";
				
				}

				
			    public Integer CantIngresar;

				public Integer getCantIngresar () {
					return this.CantIngresar;
				}

				public Boolean CantIngresarIsNullable(){
				    return true;
				}
				public Boolean CantIngresarIsKey(){
				    return false;
				}
				public Integer CantIngresarLength(){
				    return null;
				}
				public Integer CantIngresarPrecision(){
				    return null;
				}
				public String CantIngresarDefault(){
				
					return null;
				
				}
				public String CantIngresarComment(){
				
				    return "";
				
				}
				public String CantIngresarPattern(){
				
					return "";
				
				}
				public String CantIngresarOriginalDbColumnName(){
				
					return "CantIngresar";
				
				}

				
			    public Double out_Temperatura;

				public Double getOut_Temperatura () {
					return this.out_Temperatura;
				}

				public Boolean out_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean out_TemperaturaIsKey(){
				    return false;
				}
				public Integer out_TemperaturaLength(){
				    return null;
				}
				public Integer out_TemperaturaPrecision(){
				    return null;
				}
				public String out_TemperaturaDefault(){
				
					return null;
				
				}
				public String out_TemperaturaComment(){
				
				    return "";
				
				}
				public String out_TemperaturaPattern(){
				
					return "";
				
				}
				public String out_TemperaturaOriginalDbColumnName(){
				
					return "out_Temperatura";
				
				}

				
			    public Integer out_Riesgo;

				public Integer getOut_Riesgo () {
					return this.out_Riesgo;
				}

				public Boolean out_RiesgoIsNullable(){
				    return true;
				}
				public Boolean out_RiesgoIsKey(){
				    return false;
				}
				public Integer out_RiesgoLength(){
				    return null;
				}
				public Integer out_RiesgoPrecision(){
				    return null;
				}
				public String out_RiesgoDefault(){
				
					return null;
				
				}
				public String out_RiesgoComment(){
				
				    return "";
				
				}
				public String out_RiesgoPattern(){
				
					return "";
				
				}
				public String out_RiesgoOriginalDbColumnName(){
				
					return "out_Riesgo";
				
				}

				
			    public Integer out_Muestra;

				public Integer getOut_Muestra () {
					return this.out_Muestra;
				}

				public Boolean out_MuestraIsNullable(){
				    return true;
				}
				public Boolean out_MuestraIsKey(){
				    return false;
				}
				public Integer out_MuestraLength(){
				    return null;
				}
				public Integer out_MuestraPrecision(){
				    return null;
				}
				public String out_MuestraDefault(){
				
					return null;
				
				}
				public String out_MuestraComment(){
				
				    return "";
				
				}
				public String out_MuestraPattern(){
				
					return "";
				
				}
				public String out_MuestraOriginalDbColumnName(){
				
					return "out_Muestra";
				
				}

				
			    public String out_Aprobado;

				public String getOut_Aprobado () {
					return this.out_Aprobado;
				}

				public Boolean out_AprobadoIsNullable(){
				    return true;
				}
				public Boolean out_AprobadoIsKey(){
				    return false;
				}
				public Integer out_AprobadoLength(){
				    return null;
				}
				public Integer out_AprobadoPrecision(){
				    return null;
				}
				public String out_AprobadoDefault(){
				
					return null;
				
				}
				public String out_AprobadoComment(){
				
				    return "";
				
				}
				public String out_AprobadoPattern(){
				
					return "";
				
				}
				public String out_AprobadoOriginalDbColumnName(){
				
					return "out_Aprobado";
				
				}

				
			    public String out_Estado;

				public String getOut_Estado () {
					return this.out_Estado;
				}

				public Boolean out_EstadoIsNullable(){
				    return true;
				}
				public Boolean out_EstadoIsKey(){
				    return false;
				}
				public Integer out_EstadoLength(){
				    return 0;
				}
				public Integer out_EstadoPrecision(){
				    return 0;
				}
				public String out_EstadoDefault(){
				
					return null;
				
				}
				public String out_EstadoComment(){
				
				    return "";
				
				}
				public String out_EstadoPattern(){
				
					return "";
				
				}
				public String out_EstadoOriginalDbColumnName(){
				
					return "out_Estado";
				
				}

				
			    public String out_Message;

				public String getOut_Message () {
					return this.out_Message;
				}

				public Boolean out_MessageIsNullable(){
				    return true;
				}
				public Boolean out_MessageIsKey(){
				    return false;
				}
				public Integer out_MessageLength(){
				    return 0;
				}
				public Integer out_MessagePrecision(){
				    return 0;
				}
				public String out_MessageDefault(){
				
					return null;
				
				}
				public String out_MessageComment(){
				
				    return "";
				
				}
				public String out_MessagePattern(){
				
					return "";
				
				}
				public String out_MessageOriginalDbColumnName(){
				
					return "out_Message";
				
				}

				
			    public String in_CodBarras;

				public String getIn_CodBarras () {
					return this.in_CodBarras;
				}

				public Boolean in_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean in_CodBarrasIsKey(){
				    return false;
				}
				public Integer in_CodBarrasLength(){
				    return 0;
				}
				public Integer in_CodBarrasPrecision(){
				    return 0;
				}
				public String in_CodBarrasDefault(){
				
					return null;
				
				}
				public String in_CodBarrasComment(){
				
				    return "";
				
				}
				public String in_CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CodBarrasOriginalDbColumnName(){
				
					return "in_CodBarras";
				
				}

				
			    public String out_CodBarras;

				public String getOut_CodBarras () {
					return this.out_CodBarras;
				}

				public Boolean out_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean out_CodBarrasIsKey(){
				    return false;
				}
				public Integer out_CodBarrasLength(){
				    return null;
				}
				public Integer out_CodBarrasPrecision(){
				    return null;
				}
				public String out_CodBarrasDefault(){
				
					return null;
				
				}
				public String out_CodBarrasComment(){
				
				    return "";
				
				}
				public String out_CodBarrasPattern(){
				
					return "";
				
				}
				public String out_CodBarrasOriginalDbColumnName(){
				
					return "out_CodBarras";
				
				}

				
			    public String in_Cum;

				public String getIn_Cum () {
					return this.in_Cum;
				}

				public Boolean in_CumIsNullable(){
				    return true;
				}
				public Boolean in_CumIsKey(){
				    return false;
				}
				public Integer in_CumLength(){
				    return 0;
				}
				public Integer in_CumPrecision(){
				    return 0;
				}
				public String in_CumDefault(){
				
					return null;
				
				}
				public String in_CumComment(){
				
				    return "";
				
				}
				public String in_CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CumOriginalDbColumnName(){
				
					return "in_Cum";
				
				}

				
			    public String out_Cum;

				public String getOut_Cum () {
					return this.out_Cum;
				}

				public Boolean out_CumIsNullable(){
				    return true;
				}
				public Boolean out_CumIsKey(){
				    return false;
				}
				public Integer out_CumLength(){
				    return null;
				}
				public Integer out_CumPrecision(){
				    return null;
				}
				public String out_CumDefault(){
				
					return null;
				
				}
				public String out_CumComment(){
				
				    return "";
				
				}
				public String out_CumPattern(){
				
					return "";
				
				}
				public String out_CumOriginalDbColumnName(){
				
					return "out_Cum";
				
				}

				
			    public String in_Invima;

				public String getIn_Invima () {
					return this.in_Invima;
				}

				public Boolean in_InvimaIsNullable(){
				    return true;
				}
				public Boolean in_InvimaIsKey(){
				    return false;
				}
				public Integer in_InvimaLength(){
				    return 0;
				}
				public Integer in_InvimaPrecision(){
				    return 0;
				}
				public String in_InvimaDefault(){
				
					return null;
				
				}
				public String in_InvimaComment(){
				
				    return "";
				
				}
				public String in_InvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_InvimaOriginalDbColumnName(){
				
					return "in_Invima";
				
				}

				
			    public String Cantidad_;

				public String getCantidad_ () {
					return this.Cantidad_;
				}

				public Boolean Cantidad_IsNullable(){
				    return true;
				}
				public Boolean Cantidad_IsKey(){
				    return false;
				}
				public Integer Cantidad_Length(){
				    return 0;
				}
				public Integer Cantidad_Precision(){
				    return 0;
				}
				public String Cantidad_Default(){
				
					return null;
				
				}
				public String Cantidad_Comment(){
				
				    return "";
				
				}
				public String Cantidad_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Cantidad_OriginalDbColumnName(){
				
					return "Cantidad_";
				
				}

				
			    public String CantEsperada;

				public String getCantEsperada () {
					return this.CantEsperada;
				}

				public Boolean CantEsperadaIsNullable(){
				    return true;
				}
				public Boolean CantEsperadaIsKey(){
				    return false;
				}
				public Integer CantEsperadaLength(){
				    return 0;
				}
				public Integer CantEsperadaPrecision(){
				    return 0;
				}
				public String CantEsperadaDefault(){
				
					return null;
				
				}
				public String CantEsperadaComment(){
				
				    return "";
				
				}
				public String CantEsperadaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantEsperadaOriginalDbColumnName(){
				
					return "CantEsperada";
				
				}

				
			    public String Lote_;

				public String getLote_ () {
					return this.Lote_;
				}

				public Boolean Lote_IsNullable(){
				    return true;
				}
				public Boolean Lote_IsKey(){
				    return false;
				}
				public Integer Lote_Length(){
				    return 0;
				}
				public Integer Lote_Precision(){
				    return 0;
				}
				public String Lote_Default(){
				
					return null;
				
				}
				public String Lote_Comment(){
				
				    return "";
				
				}
				public String Lote_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Lote_OriginalDbColumnName(){
				
					return "Lote_";
				
				}

				
			    public String FVencimiento_;

				public String getFVencimiento_ () {
					return this.FVencimiento_;
				}

				public Boolean FVencimiento_IsNullable(){
				    return true;
				}
				public Boolean FVencimiento_IsKey(){
				    return false;
				}
				public Integer FVencimiento_Length(){
				    return 0;
				}
				public Integer FVencimiento_Precision(){
				    return 0;
				}
				public String FVencimiento_Default(){
				
					return null;
				
				}
				public String FVencimiento_Comment(){
				
				    return "";
				
				}
				public String FVencimiento_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVencimiento_OriginalDbColumnName(){
				
					return "FVencimiento_";
				
				}

				
			    public String Restriccion_;

				public String getRestriccion_ () {
					return this.Restriccion_;
				}

				public Boolean Restriccion_IsNullable(){
				    return true;
				}
				public Boolean Restriccion_IsKey(){
				    return false;
				}
				public Integer Restriccion_Length(){
				    return 0;
				}
				public Integer Restriccion_Precision(){
				    return 0;
				}
				public String Restriccion_Default(){
				
					return null;
				
				}
				public String Restriccion_Comment(){
				
				    return "";
				
				}
				public String Restriccion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Restriccion_OriginalDbColumnName(){
				
					return "Restriccion_";
				
				}

				
			    public String in_Defectos;

				public String getIn_Defectos () {
					return this.in_Defectos;
				}

				public Boolean in_DefectosIsNullable(){
				    return true;
				}
				public Boolean in_DefectosIsKey(){
				    return false;
				}
				public Integer in_DefectosLength(){
				    return 0;
				}
				public Integer in_DefectosPrecision(){
				    return 0;
				}
				public String in_DefectosDefault(){
				
					return null;
				
				}
				public String in_DefectosComment(){
				
				    return "";
				
				}
				public String in_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_DefectosOriginalDbColumnName(){
				
					return "in_Defectos";
				
				}

				
			    public String Defectos;

				public String getDefectos () {
					return this.Defectos;
				}

				public Boolean DefectosIsNullable(){
				    return true;
				}
				public Boolean DefectosIsKey(){
				    return false;
				}
				public Integer DefectosLength(){
				    return 0;
				}
				public Integer DefectosPrecision(){
				    return 0;
				}
				public String DefectosDefault(){
				
					return null;
				
				}
				public String DefectosComment(){
				
				    return "";
				
				}
				public String DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DefectosOriginalDbColumnName(){
				
					return "Defectos";
				
				}

				
			    public String Temperatura_;

				public String getTemperatura_ () {
					return this.Temperatura_;
				}

				public Boolean Temperatura_IsNullable(){
				    return true;
				}
				public Boolean Temperatura_IsKey(){
				    return false;
				}
				public Integer Temperatura_Length(){
				    return 0;
				}
				public Integer Temperatura_Precision(){
				    return 0;
				}
				public String Temperatura_Default(){
				
					return null;
				
				}
				public String Temperatura_Comment(){
				
				    return "";
				
				}
				public String Temperatura_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Temperatura_OriginalDbColumnName(){
				
					return "Temperatura_";
				
				}

				
			    public String Nivel_Riesgo_;

				public String getNivel_Riesgo_ () {
					return this.Nivel_Riesgo_;
				}

				public Boolean Nivel_Riesgo_IsNullable(){
				    return true;
				}
				public Boolean Nivel_Riesgo_IsKey(){
				    return false;
				}
				public Integer Nivel_Riesgo_Length(){
				    return 0;
				}
				public Integer Nivel_Riesgo_Precision(){
				    return 0;
				}
				public String Nivel_Riesgo_Default(){
				
					return null;
				
				}
				public String Nivel_Riesgo_Comment(){
				
				    return "";
				
				}
				public String Nivel_Riesgo_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Nivel_Riesgo_OriginalDbColumnName(){
				
					return "Nivel_Riesgo_";
				
				}

				
			    public String Tam_Muestra_;

				public String getTam_Muestra_ () {
					return this.Tam_Muestra_;
				}

				public Boolean Tam_Muestra_IsNullable(){
				    return true;
				}
				public Boolean Tam_Muestra_IsKey(){
				    return false;
				}
				public Integer Tam_Muestra_Length(){
				    return 0;
				}
				public Integer Tam_Muestra_Precision(){
				    return 0;
				}
				public String Tam_Muestra_Default(){
				
					return null;
				
				}
				public String Tam_Muestra_Comment(){
				
				    return "";
				
				}
				public String Tam_Muestra_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Tam_Muestra_OriginalDbColumnName(){
				
					return "Tam_Muestra_";
				
				}

				
			    public String Aprobado_;

				public String getAprobado_ () {
					return this.Aprobado_;
				}

				public Boolean Aprobado_IsNullable(){
				    return true;
				}
				public Boolean Aprobado_IsKey(){
				    return false;
				}
				public Integer Aprobado_Length(){
				    return 0;
				}
				public Integer Aprobado_Precision(){
				    return 0;
				}
				public String Aprobado_Default(){
				
					return null;
				
				}
				public String Aprobado_Comment(){
				
				    return "";
				
				}
				public String Aprobado_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Aprobado_OriginalDbColumnName(){
				
					return "Aprobado_";
				
				}

				
			    public String in_Contrato;

				public String getIn_Contrato () {
					return this.in_Contrato;
				}

				public Boolean in_ContratoIsNullable(){
				    return true;
				}
				public Boolean in_ContratoIsKey(){
				    return false;
				}
				public Integer in_ContratoLength(){
				    return 0;
				}
				public Integer in_ContratoPrecision(){
				    return 0;
				}
				public String in_ContratoDefault(){
				
					return null;
				
				}
				public String in_ContratoComment(){
				
				    return "";
				
				}
				public String in_ContratoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_ContratoOriginalDbColumnName(){
				
					return "in_Contrato";
				
				}

				
			    public BigDecimal Contrato_Id;

				public BigDecimal getContrato_Id () {
					return this.Contrato_Id;
				}

				public Boolean Contrato_IdIsNullable(){
				    return false;
				}
				public Boolean Contrato_IdIsKey(){
				    return false;
				}
				public Integer Contrato_IdLength(){
				    return 0;
				}
				public Integer Contrato_IdPrecision(){
				    return null;
				}
				public String Contrato_IdDefault(){
				
					return "";
				
				}
				public String Contrato_IdComment(){
				
				    return "";
				
				}
				public String Contrato_IdPattern(){
				
					return "";
				
				}
				public String Contrato_IdOriginalDbColumnName(){
				
					return "Contrato_Id";
				
				}

				
			    public BigDecimal DContrato_Id_;

				public BigDecimal getDContrato_Id_ () {
					return this.DContrato_Id_;
				}

				public Boolean DContrato_Id_IsNullable(){
				    return false;
				}
				public Boolean DContrato_Id_IsKey(){
				    return false;
				}
				public Integer DContrato_Id_Length(){
				    return 0;
				}
				public Integer DContrato_Id_Precision(){
				    return null;
				}
				public String DContrato_Id_Default(){
				
					return "";
				
				}
				public String DContrato_Id_Comment(){
				
				    return "";
				
				}
				public String DContrato_Id_Pattern(){
				
					return "";
				
				}
				public String DContrato_Id_OriginalDbColumnName(){
				
					return "DContrato_Id_";
				
				}

				
			    public BigDecimal HDContrato_Id;

				public BigDecimal getHDContrato_Id () {
					return this.HDContrato_Id;
				}

				public Boolean HDContrato_IdIsNullable(){
				    return false;
				}
				public Boolean HDContrato_IdIsKey(){
				    return false;
				}
				public Integer HDContrato_IdLength(){
				    return 0;
				}
				public Integer HDContrato_IdPrecision(){
				    return null;
				}
				public String HDContrato_IdDefault(){
				
					return "";
				
				}
				public String HDContrato_IdComment(){
				
				    return "";
				
				}
				public String HDContrato_IdPattern(){
				
					return "";
				
				}
				public String HDContrato_IdOriginalDbColumnName(){
				
					return "HDContrato_Id";
				
				}

				
			    public BigDecimal Precio;

				public BigDecimal getPrecio () {
					return this.Precio;
				}

				public Boolean PrecioIsNullable(){
				    return false;
				}
				public Boolean PrecioIsKey(){
				    return false;
				}
				public Integer PrecioLength(){
				    return 0;
				}
				public Integer PrecioPrecision(){
				    return null;
				}
				public String PrecioDefault(){
				
					return "";
				
				}
				public String PrecioComment(){
				
				    return "";
				
				}
				public String PrecioPattern(){
				
					return "";
				
				}
				public String PrecioOriginalDbColumnName(){
				
					return "Precio";
				
				}

				
			    public BigDecimal Iva;

				public BigDecimal getIva () {
					return this.Iva;
				}

				public Boolean IvaIsNullable(){
				    return false;
				}
				public Boolean IvaIsKey(){
				    return false;
				}
				public Integer IvaLength(){
				    return 0;
				}
				public Integer IvaPrecision(){
				    return null;
				}
				public String IvaDefault(){
				
					return "";
				
				}
				public String IvaComment(){
				
				    return "";
				
				}
				public String IvaPattern(){
				
					return "";
				
				}
				public String IvaOriginalDbColumnName(){
				
					return "Iva";
				
				}

				
			    public BigDecimal VUnitario;

				public BigDecimal getVUnitario () {
					return this.VUnitario;
				}

				public Boolean VUnitarioIsNullable(){
				    return true;
				}
				public Boolean VUnitarioIsKey(){
				    return false;
				}
				public Integer VUnitarioLength(){
				    return null;
				}
				public Integer VUnitarioPrecision(){
				    return null;
				}
				public String VUnitarioDefault(){
				
					return null;
				
				}
				public String VUnitarioComment(){
				
				    return "";
				
				}
				public String VUnitarioPattern(){
				
					return "";
				
				}
				public String VUnitarioOriginalDbColumnName(){
				
					return "VUnitario";
				
				}

				
			    public BigDecimal VUnitarioIva_;

				public BigDecimal getVUnitarioIva_ () {
					return this.VUnitarioIva_;
				}

				public Boolean VUnitarioIva_IsNullable(){
				    return true;
				}
				public Boolean VUnitarioIva_IsKey(){
				    return false;
				}
				public Integer VUnitarioIva_Length(){
				    return null;
				}
				public Integer VUnitarioIva_Precision(){
				    return null;
				}
				public String VUnitarioIva_Default(){
				
					return null;
				
				}
				public String VUnitarioIva_Comment(){
				
				    return "";
				
				}
				public String VUnitarioIva_Pattern(){
				
					return "";
				
				}
				public String VUnitarioIva_OriginalDbColumnName(){
				
					return "VUnitarioIva_";
				
				}

				
			    public BigDecimal SubTotal_;

				public BigDecimal getSubTotal_ () {
					return this.SubTotal_;
				}

				public Boolean SubTotal_IsNullable(){
				    return true;
				}
				public Boolean SubTotal_IsKey(){
				    return false;
				}
				public Integer SubTotal_Length(){
				    return null;
				}
				public Integer SubTotal_Precision(){
				    return null;
				}
				public String SubTotal_Default(){
				
					return null;
				
				}
				public String SubTotal_Comment(){
				
				    return "";
				
				}
				public String SubTotal_Pattern(){
				
					return "";
				
				}
				public String SubTotal_OriginalDbColumnName(){
				
					return "SubTotal_";
				
				}

				
			    public BigDecimal VTotalIva_;

				public BigDecimal getVTotalIva_ () {
					return this.VTotalIva_;
				}

				public Boolean VTotalIva_IsNullable(){
				    return true;
				}
				public Boolean VTotalIva_IsKey(){
				    return false;
				}
				public Integer VTotalIva_Length(){
				    return null;
				}
				public Integer VTotalIva_Precision(){
				    return null;
				}
				public String VTotalIva_Default(){
				
					return null;
				
				}
				public String VTotalIva_Comment(){
				
				    return "";
				
				}
				public String VTotalIva_Pattern(){
				
					return "";
				
				}
				public String VTotalIva_OriginalDbColumnName(){
				
					return "VTotalIva_";
				
				}

				
			    public BigDecimal Total_;

				public BigDecimal getTotal_ () {
					return this.Total_;
				}

				public Boolean Total_IsNullable(){
				    return true;
				}
				public Boolean Total_IsKey(){
				    return false;
				}
				public Integer Total_Length(){
				    return null;
				}
				public Integer Total_Precision(){
				    return null;
				}
				public String Total_Default(){
				
					return null;
				
				}
				public String Total_Comment(){
				
				    return "";
				
				}
				public String Total_Pattern(){
				
					return "";
				
				}
				public String Total_OriginalDbColumnName(){
				
					return "Total_";
				
				}

				
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public String errorMessage;

				public String getErrorMessage () {
					return this.errorMessage;
				}

				public Boolean errorMessageIsNullable(){
				    return true;
				}
				public Boolean errorMessageIsKey(){
				    return false;
				}
				public Integer errorMessageLength(){
				    return 255;
				}
				public Integer errorMessagePrecision(){
				    return 0;
				}
				public String errorMessageDefault(){
				
					return null;
				
				}
				public String errorMessageComment(){
				
				    return null;
				
				}
				public String errorMessagePattern(){
				
				    return null;
				
				}
				public String errorMessageOriginalDbColumnName(){
				
					return "errorMessage";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.TMovimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Movimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Bodega_Id_ = (BigDecimal) dis.readObject();
					
						this.Usuario_Id_ = (BigDecimal) dis.readObject();
					
						this.Inventario_Id_ = (BigDecimal) dis.readObject();
					
						this.PreCantidad_ = (BigDecimal) dis.readObject();
					
						this.PostCantidad_ = (BigDecimal) dis.readObject();
					
						this.Producto_Id_ = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
						this.CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.Cantidad_ = readString(dis);
					
					this.CantEsperada = readString(dis);
					
					this.Lote_ = readString(dis);
					
					this.FVencimiento_ = readString(dis);
					
					this.Restriccion_ = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.Defectos = readString(dis);
					
					this.Temperatura_ = readString(dis);
					
					this.Nivel_Riesgo_ = readString(dis);
					
					this.Tam_Muestra_ = readString(dis);
					
					this.Aprobado_ = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
						this.DContrato_Id_ = (BigDecimal) dis.readObject();
					
						this.HDContrato_Id = (BigDecimal) dis.readObject();
					
						this.Precio = (BigDecimal) dis.readObject();
					
						this.Iva = (BigDecimal) dis.readObject();
					
						this.VUnitario = (BigDecimal) dis.readObject();
					
						this.VUnitarioIva_ = (BigDecimal) dis.readObject();
					
						this.SubTotal_ = (BigDecimal) dis.readObject();
					
						this.VTotalIva_ = (BigDecimal) dis.readObject();
					
						this.Total_ = (BigDecimal) dis.readObject();
					
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.TMovimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Movimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Bodega_Id_ = (BigDecimal) dis.readObject();
					
						this.Usuario_Id_ = (BigDecimal) dis.readObject();
					
						this.Inventario_Id_ = (BigDecimal) dis.readObject();
					
						this.PreCantidad_ = (BigDecimal) dis.readObject();
					
						this.PostCantidad_ = (BigDecimal) dis.readObject();
					
						this.Producto_Id_ = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
						this.CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.Cantidad_ = readString(dis);
					
					this.CantEsperada = readString(dis);
					
					this.Lote_ = readString(dis);
					
					this.FVencimiento_ = readString(dis);
					
					this.Restriccion_ = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.Defectos = readString(dis);
					
					this.Temperatura_ = readString(dis);
					
					this.Nivel_Riesgo_ = readString(dis);
					
					this.Tam_Muestra_ = readString(dis);
					
					this.Aprobado_ = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
						this.DContrato_Id_ = (BigDecimal) dis.readObject();
					
						this.HDContrato_Id = (BigDecimal) dis.readObject();
					
						this.Precio = (BigDecimal) dis.readObject();
					
						this.Iva = (BigDecimal) dis.readObject();
					
						this.VUnitario = (BigDecimal) dis.readObject();
					
						this.VUnitarioIva_ = (BigDecimal) dis.readObject();
					
						this.SubTotal_ = (BigDecimal) dis.readObject();
					
						this.VTotalIva_ = (BigDecimal) dis.readObject();
					
						this.Total_ = (BigDecimal) dis.readObject();
					
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.TMovimiento_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Movimiento_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Bodega_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Usuario_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Inventario_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PreCantidad_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PostCantidad_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Producto_Id_);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Integer
				
						writeInteger(this.CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.Cantidad_,dos);
					
					// String
				
						writeString(this.CantEsperada,dos);
					
					// String
				
						writeString(this.Lote_,dos);
					
					// String
				
						writeString(this.FVencimiento_,dos);
					
					// String
				
						writeString(this.Restriccion_,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.Defectos,dos);
					
					// String
				
						writeString(this.Temperatura_,dos);
					
					// String
				
						writeString(this.Nivel_Riesgo_,dos);
					
					// String
				
						writeString(this.Tam_Muestra_,dos);
					
					// String
				
						writeString(this.Aprobado_,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Contrato_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DContrato_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.HDContrato_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Precio);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Iva);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VUnitario);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VUnitarioIva_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SubTotal_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VTotalIva_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Total_);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TMovimiento_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Movimiento_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Bodega_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Usuario_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Inventario_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PreCantidad_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PostCantidad_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Producto_Id_);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Integer
				
						writeInteger(this.CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.Cantidad_,dos);
					
					// String
				
						writeString(this.CantEsperada,dos);
					
					// String
				
						writeString(this.Lote_,dos);
					
					// String
				
						writeString(this.FVencimiento_,dos);
					
					// String
				
						writeString(this.Restriccion_,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.Defectos,dos);
					
					// String
				
						writeString(this.Temperatura_,dos);
					
					// String
				
						writeString(this.Nivel_Riesgo_,dos);
					
					// String
				
						writeString(this.Tam_Muestra_,dos);
					
					// String
				
						writeString(this.Aprobado_,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Contrato_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DContrato_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.HDContrato_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Precio);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Iva);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VUnitario);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VUnitarioIva_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SubTotal_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VTotalIva_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Total_);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TMovimiento_Id_="+String.valueOf(TMovimiento_Id_));
		sb.append(",Movimiento_Id_="+String.valueOf(Movimiento_Id_));
		sb.append(",Bodega_Id_="+String.valueOf(Bodega_Id_));
		sb.append(",Usuario_Id_="+String.valueOf(Usuario_Id_));
		sb.append(",Inventario_Id_="+String.valueOf(Inventario_Id_));
		sb.append(",PreCantidad_="+String.valueOf(PreCantidad_));
		sb.append(",PostCantidad_="+String.valueOf(PostCantidad_));
		sb.append(",Producto_Id_="+String.valueOf(Producto_Id_));
		sb.append(",out_Expediente="+out_Expediente);
		sb.append(",out_Consecutivo="+out_Consecutivo);
		sb.append(",out_CantEnviada="+String.valueOf(out_CantEnviada));
		sb.append(",CantEnviada="+String.valueOf(CantEnviada));
		sb.append(",out_CantIngresar="+String.valueOf(out_CantIngresar));
		sb.append(",CantIngresar="+String.valueOf(CantIngresar));
		sb.append(",out_Temperatura="+String.valueOf(out_Temperatura));
		sb.append(",out_Riesgo="+String.valueOf(out_Riesgo));
		sb.append(",out_Muestra="+String.valueOf(out_Muestra));
		sb.append(",out_Aprobado="+out_Aprobado);
		sb.append(",out_Estado="+out_Estado);
		sb.append(",out_Message="+out_Message);
		sb.append(",in_CodBarras="+in_CodBarras);
		sb.append(",out_CodBarras="+out_CodBarras);
		sb.append(",in_Cum="+in_Cum);
		sb.append(",out_Cum="+out_Cum);
		sb.append(",in_Invima="+in_Invima);
		sb.append(",Cantidad_="+Cantidad_);
		sb.append(",CantEsperada="+CantEsperada);
		sb.append(",Lote_="+Lote_);
		sb.append(",FVencimiento_="+FVencimiento_);
		sb.append(",Restriccion_="+Restriccion_);
		sb.append(",in_Defectos="+in_Defectos);
		sb.append(",Defectos="+Defectos);
		sb.append(",Temperatura_="+Temperatura_);
		sb.append(",Nivel_Riesgo_="+Nivel_Riesgo_);
		sb.append(",Tam_Muestra_="+Tam_Muestra_);
		sb.append(",Aprobado_="+Aprobado_);
		sb.append(",in_Contrato="+in_Contrato);
		sb.append(",Contrato_Id="+String.valueOf(Contrato_Id));
		sb.append(",DContrato_Id_="+String.valueOf(DContrato_Id_));
		sb.append(",HDContrato_Id="+String.valueOf(HDContrato_Id));
		sb.append(",Precio="+String.valueOf(Precio));
		sb.append(",Iva="+String.valueOf(Iva));
		sb.append(",VUnitario="+String.valueOf(VUnitario));
		sb.append(",VUnitarioIva_="+String.valueOf(VUnitarioIva_));
		sb.append(",SubTotal_="+String.valueOf(SubTotal_));
		sb.append(",VTotalIva_="+String.valueOf(VTotalIva_));
		sb.append(",Total_="+String.valueOf(Total_));
		sb.append(",numeroFila="+String.valueOf(numeroFila));
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",Estado_="+Estado_);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",errorMessage="+errorMessage);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row32Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row14Struct implements routines.system.IPersistableRow<row14Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public BigDecimal TMovimiento_Id_;

				public BigDecimal getTMovimiento_Id_ () {
					return this.TMovimiento_Id_;
				}

				public Boolean TMovimiento_Id_IsNullable(){
				    return true;
				}
				public Boolean TMovimiento_Id_IsKey(){
				    return false;
				}
				public Integer TMovimiento_Id_Length(){
				    return null;
				}
				public Integer TMovimiento_Id_Precision(){
				    return null;
				}
				public String TMovimiento_Id_Default(){
				
					return null;
				
				}
				public String TMovimiento_Id_Comment(){
				
				    return "";
				
				}
				public String TMovimiento_Id_Pattern(){
				
					return "";
				
				}
				public String TMovimiento_Id_OriginalDbColumnName(){
				
					return "TMovimiento_Id_";
				
				}

				
			    public BigDecimal Movimiento_Id_;

				public BigDecimal getMovimiento_Id_ () {
					return this.Movimiento_Id_;
				}

				public Boolean Movimiento_Id_IsNullable(){
				    return true;
				}
				public Boolean Movimiento_Id_IsKey(){
				    return false;
				}
				public Integer Movimiento_Id_Length(){
				    return null;
				}
				public Integer Movimiento_Id_Precision(){
				    return null;
				}
				public String Movimiento_Id_Default(){
				
					return null;
				
				}
				public String Movimiento_Id_Comment(){
				
				    return "";
				
				}
				public String Movimiento_Id_Pattern(){
				
					return "";
				
				}
				public String Movimiento_Id_OriginalDbColumnName(){
				
					return "Movimiento_Id_";
				
				}

				
			    public BigDecimal Bodega_Id_;

				public BigDecimal getBodega_Id_ () {
					return this.Bodega_Id_;
				}

				public Boolean Bodega_Id_IsNullable(){
				    return true;
				}
				public Boolean Bodega_Id_IsKey(){
				    return false;
				}
				public Integer Bodega_Id_Length(){
				    return null;
				}
				public Integer Bodega_Id_Precision(){
				    return null;
				}
				public String Bodega_Id_Default(){
				
					return null;
				
				}
				public String Bodega_Id_Comment(){
				
				    return "";
				
				}
				public String Bodega_Id_Pattern(){
				
					return "";
				
				}
				public String Bodega_Id_OriginalDbColumnName(){
				
					return "Bodega_Id_";
				
				}

				
			    public BigDecimal Usuario_Id_;

				public BigDecimal getUsuario_Id_ () {
					return this.Usuario_Id_;
				}

				public Boolean Usuario_Id_IsNullable(){
				    return true;
				}
				public Boolean Usuario_Id_IsKey(){
				    return false;
				}
				public Integer Usuario_Id_Length(){
				    return null;
				}
				public Integer Usuario_Id_Precision(){
				    return null;
				}
				public String Usuario_Id_Default(){
				
					return null;
				
				}
				public String Usuario_Id_Comment(){
				
				    return "";
				
				}
				public String Usuario_Id_Pattern(){
				
					return "";
				
				}
				public String Usuario_Id_OriginalDbColumnName(){
				
					return "Usuario_Id_";
				
				}

				
			    public BigDecimal Inventario_Id_;

				public BigDecimal getInventario_Id_ () {
					return this.Inventario_Id_;
				}

				public Boolean Inventario_Id_IsNullable(){
				    return true;
				}
				public Boolean Inventario_Id_IsKey(){
				    return false;
				}
				public Integer Inventario_Id_Length(){
				    return null;
				}
				public Integer Inventario_Id_Precision(){
				    return null;
				}
				public String Inventario_Id_Default(){
				
					return null;
				
				}
				public String Inventario_Id_Comment(){
				
				    return "";
				
				}
				public String Inventario_Id_Pattern(){
				
					return "";
				
				}
				public String Inventario_Id_OriginalDbColumnName(){
				
					return "Inventario_Id_";
				
				}

				
			    public BigDecimal PreCantidad_;

				public BigDecimal getPreCantidad_ () {
					return this.PreCantidad_;
				}

				public Boolean PreCantidad_IsNullable(){
				    return true;
				}
				public Boolean PreCantidad_IsKey(){
				    return false;
				}
				public Integer PreCantidad_Length(){
				    return null;
				}
				public Integer PreCantidad_Precision(){
				    return null;
				}
				public String PreCantidad_Default(){
				
					return null;
				
				}
				public String PreCantidad_Comment(){
				
				    return "";
				
				}
				public String PreCantidad_Pattern(){
				
					return "";
				
				}
				public String PreCantidad_OriginalDbColumnName(){
				
					return "PreCantidad_";
				
				}

				
			    public BigDecimal PostCantidad_;

				public BigDecimal getPostCantidad_ () {
					return this.PostCantidad_;
				}

				public Boolean PostCantidad_IsNullable(){
				    return true;
				}
				public Boolean PostCantidad_IsKey(){
				    return false;
				}
				public Integer PostCantidad_Length(){
				    return null;
				}
				public Integer PostCantidad_Precision(){
				    return null;
				}
				public String PostCantidad_Default(){
				
					return null;
				
				}
				public String PostCantidad_Comment(){
				
				    return "";
				
				}
				public String PostCantidad_Pattern(){
				
					return "";
				
				}
				public String PostCantidad_OriginalDbColumnName(){
				
					return "PostCantidad_";
				
				}

				
			    public BigDecimal Producto_Id_;

				public BigDecimal getProducto_Id_ () {
					return this.Producto_Id_;
				}

				public Boolean Producto_Id_IsNullable(){
				    return true;
				}
				public Boolean Producto_Id_IsKey(){
				    return false;
				}
				public Integer Producto_Id_Length(){
				    return null;
				}
				public Integer Producto_Id_Precision(){
				    return null;
				}
				public String Producto_Id_Default(){
				
					return null;
				
				}
				public String Producto_Id_Comment(){
				
				    return "";
				
				}
				public String Producto_Id_Pattern(){
				
					return "";
				
				}
				public String Producto_Id_OriginalDbColumnName(){
				
					return "Producto_Id_";
				
				}

				
			    public String out_Expediente;

				public String getOut_Expediente () {
					return this.out_Expediente;
				}

				public Boolean out_ExpedienteIsNullable(){
				    return true;
				}
				public Boolean out_ExpedienteIsKey(){
				    return false;
				}
				public Integer out_ExpedienteLength(){
				    return null;
				}
				public Integer out_ExpedientePrecision(){
				    return null;
				}
				public String out_ExpedienteDefault(){
				
					return null;
				
				}
				public String out_ExpedienteComment(){
				
				    return "";
				
				}
				public String out_ExpedientePattern(){
				
					return "";
				
				}
				public String out_ExpedienteOriginalDbColumnName(){
				
					return "out_Expediente";
				
				}

				
			    public String out_Consecutivo;

				public String getOut_Consecutivo () {
					return this.out_Consecutivo;
				}

				public Boolean out_ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean out_ConsecutivoIsKey(){
				    return false;
				}
				public Integer out_ConsecutivoLength(){
				    return null;
				}
				public Integer out_ConsecutivoPrecision(){
				    return null;
				}
				public String out_ConsecutivoDefault(){
				
					return null;
				
				}
				public String out_ConsecutivoComment(){
				
				    return "";
				
				}
				public String out_ConsecutivoPattern(){
				
					return "";
				
				}
				public String out_ConsecutivoOriginalDbColumnName(){
				
					return "out_Consecutivo";
				
				}

				
			    public Integer out_CantEnviada;

				public Integer getOut_CantEnviada () {
					return this.out_CantEnviada;
				}

				public Boolean out_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean out_CantEnviadaIsKey(){
				    return false;
				}
				public Integer out_CantEnviadaLength(){
				    return 0;
				}
				public Integer out_CantEnviadaPrecision(){
				    return 0;
				}
				public String out_CantEnviadaDefault(){
				
					return null;
				
				}
				public String out_CantEnviadaComment(){
				
				    return "";
				
				}
				public String out_CantEnviadaPattern(){
				
					return "";
				
				}
				public String out_CantEnviadaOriginalDbColumnName(){
				
					return "out_CantEnviada";
				
				}

				
			    public Integer CantEnviada;

				public Integer getCantEnviada () {
					return this.CantEnviada;
				}

				public Boolean CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean CantEnviadaIsKey(){
				    return false;
				}
				public Integer CantEnviadaLength(){
				    return null;
				}
				public Integer CantEnviadaPrecision(){
				    return null;
				}
				public String CantEnviadaDefault(){
				
					return null;
				
				}
				public String CantEnviadaComment(){
				
				    return "";
				
				}
				public String CantEnviadaPattern(){
				
					return "";
				
				}
				public String CantEnviadaOriginalDbColumnName(){
				
					return "CantEnviada";
				
				}

				
			    public Integer out_CantIngresar;

				public Integer getOut_CantIngresar () {
					return this.out_CantIngresar;
				}

				public Boolean out_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean out_CantIngresarIsKey(){
				    return false;
				}
				public Integer out_CantIngresarLength(){
				    return 0;
				}
				public Integer out_CantIngresarPrecision(){
				    return 0;
				}
				public String out_CantIngresarDefault(){
				
					return null;
				
				}
				public String out_CantIngresarComment(){
				
				    return "";
				
				}
				public String out_CantIngresarPattern(){
				
					return "";
				
				}
				public String out_CantIngresarOriginalDbColumnName(){
				
					return "out_CantIngresar";
				
				}

				
			    public Integer CantIngresar;

				public Integer getCantIngresar () {
					return this.CantIngresar;
				}

				public Boolean CantIngresarIsNullable(){
				    return true;
				}
				public Boolean CantIngresarIsKey(){
				    return false;
				}
				public Integer CantIngresarLength(){
				    return null;
				}
				public Integer CantIngresarPrecision(){
				    return null;
				}
				public String CantIngresarDefault(){
				
					return null;
				
				}
				public String CantIngresarComment(){
				
				    return "";
				
				}
				public String CantIngresarPattern(){
				
					return "";
				
				}
				public String CantIngresarOriginalDbColumnName(){
				
					return "CantIngresar";
				
				}

				
			    public Double out_Temperatura;

				public Double getOut_Temperatura () {
					return this.out_Temperatura;
				}

				public Boolean out_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean out_TemperaturaIsKey(){
				    return false;
				}
				public Integer out_TemperaturaLength(){
				    return null;
				}
				public Integer out_TemperaturaPrecision(){
				    return null;
				}
				public String out_TemperaturaDefault(){
				
					return null;
				
				}
				public String out_TemperaturaComment(){
				
				    return "";
				
				}
				public String out_TemperaturaPattern(){
				
					return "";
				
				}
				public String out_TemperaturaOriginalDbColumnName(){
				
					return "out_Temperatura";
				
				}

				
			    public Integer out_Riesgo;

				public Integer getOut_Riesgo () {
					return this.out_Riesgo;
				}

				public Boolean out_RiesgoIsNullable(){
				    return true;
				}
				public Boolean out_RiesgoIsKey(){
				    return false;
				}
				public Integer out_RiesgoLength(){
				    return null;
				}
				public Integer out_RiesgoPrecision(){
				    return null;
				}
				public String out_RiesgoDefault(){
				
					return null;
				
				}
				public String out_RiesgoComment(){
				
				    return "";
				
				}
				public String out_RiesgoPattern(){
				
					return "";
				
				}
				public String out_RiesgoOriginalDbColumnName(){
				
					return "out_Riesgo";
				
				}

				
			    public Integer out_Muestra;

				public Integer getOut_Muestra () {
					return this.out_Muestra;
				}

				public Boolean out_MuestraIsNullable(){
				    return true;
				}
				public Boolean out_MuestraIsKey(){
				    return false;
				}
				public Integer out_MuestraLength(){
				    return null;
				}
				public Integer out_MuestraPrecision(){
				    return null;
				}
				public String out_MuestraDefault(){
				
					return null;
				
				}
				public String out_MuestraComment(){
				
				    return "";
				
				}
				public String out_MuestraPattern(){
				
					return "";
				
				}
				public String out_MuestraOriginalDbColumnName(){
				
					return "out_Muestra";
				
				}

				
			    public String out_Aprobado;

				public String getOut_Aprobado () {
					return this.out_Aprobado;
				}

				public Boolean out_AprobadoIsNullable(){
				    return true;
				}
				public Boolean out_AprobadoIsKey(){
				    return false;
				}
				public Integer out_AprobadoLength(){
				    return null;
				}
				public Integer out_AprobadoPrecision(){
				    return null;
				}
				public String out_AprobadoDefault(){
				
					return null;
				
				}
				public String out_AprobadoComment(){
				
				    return "";
				
				}
				public String out_AprobadoPattern(){
				
					return "";
				
				}
				public String out_AprobadoOriginalDbColumnName(){
				
					return "out_Aprobado";
				
				}

				
			    public String out_Estado;

				public String getOut_Estado () {
					return this.out_Estado;
				}

				public Boolean out_EstadoIsNullable(){
				    return true;
				}
				public Boolean out_EstadoIsKey(){
				    return false;
				}
				public Integer out_EstadoLength(){
				    return 0;
				}
				public Integer out_EstadoPrecision(){
				    return 0;
				}
				public String out_EstadoDefault(){
				
					return null;
				
				}
				public String out_EstadoComment(){
				
				    return "";
				
				}
				public String out_EstadoPattern(){
				
					return "";
				
				}
				public String out_EstadoOriginalDbColumnName(){
				
					return "out_Estado";
				
				}

				
			    public String out_Message;

				public String getOut_Message () {
					return this.out_Message;
				}

				public Boolean out_MessageIsNullable(){
				    return true;
				}
				public Boolean out_MessageIsKey(){
				    return false;
				}
				public Integer out_MessageLength(){
				    return 0;
				}
				public Integer out_MessagePrecision(){
				    return 0;
				}
				public String out_MessageDefault(){
				
					return null;
				
				}
				public String out_MessageComment(){
				
				    return "";
				
				}
				public String out_MessagePattern(){
				
					return "";
				
				}
				public String out_MessageOriginalDbColumnName(){
				
					return "out_Message";
				
				}

				
			    public String in_CodBarras;

				public String getIn_CodBarras () {
					return this.in_CodBarras;
				}

				public Boolean in_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean in_CodBarrasIsKey(){
				    return false;
				}
				public Integer in_CodBarrasLength(){
				    return 0;
				}
				public Integer in_CodBarrasPrecision(){
				    return 0;
				}
				public String in_CodBarrasDefault(){
				
					return null;
				
				}
				public String in_CodBarrasComment(){
				
				    return "";
				
				}
				public String in_CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CodBarrasOriginalDbColumnName(){
				
					return "in_CodBarras";
				
				}

				
			    public String out_CodBarras;

				public String getOut_CodBarras () {
					return this.out_CodBarras;
				}

				public Boolean out_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean out_CodBarrasIsKey(){
				    return false;
				}
				public Integer out_CodBarrasLength(){
				    return null;
				}
				public Integer out_CodBarrasPrecision(){
				    return null;
				}
				public String out_CodBarrasDefault(){
				
					return null;
				
				}
				public String out_CodBarrasComment(){
				
				    return "";
				
				}
				public String out_CodBarrasPattern(){
				
					return "";
				
				}
				public String out_CodBarrasOriginalDbColumnName(){
				
					return "out_CodBarras";
				
				}

				
			    public String in_Cum;

				public String getIn_Cum () {
					return this.in_Cum;
				}

				public Boolean in_CumIsNullable(){
				    return true;
				}
				public Boolean in_CumIsKey(){
				    return false;
				}
				public Integer in_CumLength(){
				    return 0;
				}
				public Integer in_CumPrecision(){
				    return 0;
				}
				public String in_CumDefault(){
				
					return null;
				
				}
				public String in_CumComment(){
				
				    return "";
				
				}
				public String in_CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CumOriginalDbColumnName(){
				
					return "in_Cum";
				
				}

				
			    public String out_Cum;

				public String getOut_Cum () {
					return this.out_Cum;
				}

				public Boolean out_CumIsNullable(){
				    return true;
				}
				public Boolean out_CumIsKey(){
				    return false;
				}
				public Integer out_CumLength(){
				    return null;
				}
				public Integer out_CumPrecision(){
				    return null;
				}
				public String out_CumDefault(){
				
					return null;
				
				}
				public String out_CumComment(){
				
				    return "";
				
				}
				public String out_CumPattern(){
				
					return "";
				
				}
				public String out_CumOriginalDbColumnName(){
				
					return "out_Cum";
				
				}

				
			    public String in_Invima;

				public String getIn_Invima () {
					return this.in_Invima;
				}

				public Boolean in_InvimaIsNullable(){
				    return true;
				}
				public Boolean in_InvimaIsKey(){
				    return false;
				}
				public Integer in_InvimaLength(){
				    return 0;
				}
				public Integer in_InvimaPrecision(){
				    return 0;
				}
				public String in_InvimaDefault(){
				
					return null;
				
				}
				public String in_InvimaComment(){
				
				    return "";
				
				}
				public String in_InvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_InvimaOriginalDbColumnName(){
				
					return "in_Invima";
				
				}

				
			    public String Cantidad_;

				public String getCantidad_ () {
					return this.Cantidad_;
				}

				public Boolean Cantidad_IsNullable(){
				    return true;
				}
				public Boolean Cantidad_IsKey(){
				    return false;
				}
				public Integer Cantidad_Length(){
				    return 0;
				}
				public Integer Cantidad_Precision(){
				    return 0;
				}
				public String Cantidad_Default(){
				
					return null;
				
				}
				public String Cantidad_Comment(){
				
				    return "";
				
				}
				public String Cantidad_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Cantidad_OriginalDbColumnName(){
				
					return "Cantidad_";
				
				}

				
			    public String CantEsperada;

				public String getCantEsperada () {
					return this.CantEsperada;
				}

				public Boolean CantEsperadaIsNullable(){
				    return true;
				}
				public Boolean CantEsperadaIsKey(){
				    return false;
				}
				public Integer CantEsperadaLength(){
				    return 0;
				}
				public Integer CantEsperadaPrecision(){
				    return 0;
				}
				public String CantEsperadaDefault(){
				
					return null;
				
				}
				public String CantEsperadaComment(){
				
				    return "";
				
				}
				public String CantEsperadaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantEsperadaOriginalDbColumnName(){
				
					return "CantEsperada";
				
				}

				
			    public String Lote_;

				public String getLote_ () {
					return this.Lote_;
				}

				public Boolean Lote_IsNullable(){
				    return true;
				}
				public Boolean Lote_IsKey(){
				    return false;
				}
				public Integer Lote_Length(){
				    return 0;
				}
				public Integer Lote_Precision(){
				    return 0;
				}
				public String Lote_Default(){
				
					return null;
				
				}
				public String Lote_Comment(){
				
				    return "";
				
				}
				public String Lote_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Lote_OriginalDbColumnName(){
				
					return "Lote_";
				
				}

				
			    public String FVencimiento_;

				public String getFVencimiento_ () {
					return this.FVencimiento_;
				}

				public Boolean FVencimiento_IsNullable(){
				    return true;
				}
				public Boolean FVencimiento_IsKey(){
				    return false;
				}
				public Integer FVencimiento_Length(){
				    return 0;
				}
				public Integer FVencimiento_Precision(){
				    return 0;
				}
				public String FVencimiento_Default(){
				
					return null;
				
				}
				public String FVencimiento_Comment(){
				
				    return "";
				
				}
				public String FVencimiento_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVencimiento_OriginalDbColumnName(){
				
					return "FVencimiento_";
				
				}

				
			    public String Restriccion_;

				public String getRestriccion_ () {
					return this.Restriccion_;
				}

				public Boolean Restriccion_IsNullable(){
				    return true;
				}
				public Boolean Restriccion_IsKey(){
				    return false;
				}
				public Integer Restriccion_Length(){
				    return 0;
				}
				public Integer Restriccion_Precision(){
				    return 0;
				}
				public String Restriccion_Default(){
				
					return null;
				
				}
				public String Restriccion_Comment(){
				
				    return "";
				
				}
				public String Restriccion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Restriccion_OriginalDbColumnName(){
				
					return "Restriccion_";
				
				}

				
			    public String in_Defectos;

				public String getIn_Defectos () {
					return this.in_Defectos;
				}

				public Boolean in_DefectosIsNullable(){
				    return true;
				}
				public Boolean in_DefectosIsKey(){
				    return false;
				}
				public Integer in_DefectosLength(){
				    return 0;
				}
				public Integer in_DefectosPrecision(){
				    return 0;
				}
				public String in_DefectosDefault(){
				
					return null;
				
				}
				public String in_DefectosComment(){
				
				    return "";
				
				}
				public String in_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_DefectosOriginalDbColumnName(){
				
					return "in_Defectos";
				
				}

				
			    public String Defectos;

				public String getDefectos () {
					return this.Defectos;
				}

				public Boolean DefectosIsNullable(){
				    return true;
				}
				public Boolean DefectosIsKey(){
				    return false;
				}
				public Integer DefectosLength(){
				    return 0;
				}
				public Integer DefectosPrecision(){
				    return 0;
				}
				public String DefectosDefault(){
				
					return null;
				
				}
				public String DefectosComment(){
				
				    return "";
				
				}
				public String DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DefectosOriginalDbColumnName(){
				
					return "Defectos";
				
				}

				
			    public String Temperatura_;

				public String getTemperatura_ () {
					return this.Temperatura_;
				}

				public Boolean Temperatura_IsNullable(){
				    return true;
				}
				public Boolean Temperatura_IsKey(){
				    return false;
				}
				public Integer Temperatura_Length(){
				    return 0;
				}
				public Integer Temperatura_Precision(){
				    return 0;
				}
				public String Temperatura_Default(){
				
					return null;
				
				}
				public String Temperatura_Comment(){
				
				    return "";
				
				}
				public String Temperatura_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Temperatura_OriginalDbColumnName(){
				
					return "Temperatura_";
				
				}

				
			    public String Nivel_Riesgo_;

				public String getNivel_Riesgo_ () {
					return this.Nivel_Riesgo_;
				}

				public Boolean Nivel_Riesgo_IsNullable(){
				    return true;
				}
				public Boolean Nivel_Riesgo_IsKey(){
				    return false;
				}
				public Integer Nivel_Riesgo_Length(){
				    return 0;
				}
				public Integer Nivel_Riesgo_Precision(){
				    return 0;
				}
				public String Nivel_Riesgo_Default(){
				
					return null;
				
				}
				public String Nivel_Riesgo_Comment(){
				
				    return "";
				
				}
				public String Nivel_Riesgo_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Nivel_Riesgo_OriginalDbColumnName(){
				
					return "Nivel_Riesgo_";
				
				}

				
			    public String Tam_Muestra_;

				public String getTam_Muestra_ () {
					return this.Tam_Muestra_;
				}

				public Boolean Tam_Muestra_IsNullable(){
				    return true;
				}
				public Boolean Tam_Muestra_IsKey(){
				    return false;
				}
				public Integer Tam_Muestra_Length(){
				    return 0;
				}
				public Integer Tam_Muestra_Precision(){
				    return 0;
				}
				public String Tam_Muestra_Default(){
				
					return null;
				
				}
				public String Tam_Muestra_Comment(){
				
				    return "";
				
				}
				public String Tam_Muestra_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Tam_Muestra_OriginalDbColumnName(){
				
					return "Tam_Muestra_";
				
				}

				
			    public String Aprobado_;

				public String getAprobado_ () {
					return this.Aprobado_;
				}

				public Boolean Aprobado_IsNullable(){
				    return true;
				}
				public Boolean Aprobado_IsKey(){
				    return false;
				}
				public Integer Aprobado_Length(){
				    return 0;
				}
				public Integer Aprobado_Precision(){
				    return 0;
				}
				public String Aprobado_Default(){
				
					return null;
				
				}
				public String Aprobado_Comment(){
				
				    return "";
				
				}
				public String Aprobado_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Aprobado_OriginalDbColumnName(){
				
					return "Aprobado_";
				
				}

				
			    public String in_Contrato;

				public String getIn_Contrato () {
					return this.in_Contrato;
				}

				public Boolean in_ContratoIsNullable(){
				    return true;
				}
				public Boolean in_ContratoIsKey(){
				    return false;
				}
				public Integer in_ContratoLength(){
				    return 0;
				}
				public Integer in_ContratoPrecision(){
				    return 0;
				}
				public String in_ContratoDefault(){
				
					return null;
				
				}
				public String in_ContratoComment(){
				
				    return "";
				
				}
				public String in_ContratoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_ContratoOriginalDbColumnName(){
				
					return "in_Contrato";
				
				}

				
			    public BigDecimal Contrato_Id;

				public BigDecimal getContrato_Id () {
					return this.Contrato_Id;
				}

				public Boolean Contrato_IdIsNullable(){
				    return false;
				}
				public Boolean Contrato_IdIsKey(){
				    return false;
				}
				public Integer Contrato_IdLength(){
				    return 0;
				}
				public Integer Contrato_IdPrecision(){
				    return null;
				}
				public String Contrato_IdDefault(){
				
					return "";
				
				}
				public String Contrato_IdComment(){
				
				    return "";
				
				}
				public String Contrato_IdPattern(){
				
					return "";
				
				}
				public String Contrato_IdOriginalDbColumnName(){
				
					return "Contrato_Id";
				
				}

				
			    public BigDecimal DContrato_Id_;

				public BigDecimal getDContrato_Id_ () {
					return this.DContrato_Id_;
				}

				public Boolean DContrato_Id_IsNullable(){
				    return false;
				}
				public Boolean DContrato_Id_IsKey(){
				    return false;
				}
				public Integer DContrato_Id_Length(){
				    return 0;
				}
				public Integer DContrato_Id_Precision(){
				    return null;
				}
				public String DContrato_Id_Default(){
				
					return "";
				
				}
				public String DContrato_Id_Comment(){
				
				    return "";
				
				}
				public String DContrato_Id_Pattern(){
				
					return "";
				
				}
				public String DContrato_Id_OriginalDbColumnName(){
				
					return "DContrato_Id_";
				
				}

				
			    public BigDecimal HDContrato_Id;

				public BigDecimal getHDContrato_Id () {
					return this.HDContrato_Id;
				}

				public Boolean HDContrato_IdIsNullable(){
				    return false;
				}
				public Boolean HDContrato_IdIsKey(){
				    return false;
				}
				public Integer HDContrato_IdLength(){
				    return 0;
				}
				public Integer HDContrato_IdPrecision(){
				    return null;
				}
				public String HDContrato_IdDefault(){
				
					return "";
				
				}
				public String HDContrato_IdComment(){
				
				    return "";
				
				}
				public String HDContrato_IdPattern(){
				
					return "";
				
				}
				public String HDContrato_IdOriginalDbColumnName(){
				
					return "HDContrato_Id";
				
				}

				
			    public BigDecimal Precio;

				public BigDecimal getPrecio () {
					return this.Precio;
				}

				public Boolean PrecioIsNullable(){
				    return false;
				}
				public Boolean PrecioIsKey(){
				    return false;
				}
				public Integer PrecioLength(){
				    return 0;
				}
				public Integer PrecioPrecision(){
				    return null;
				}
				public String PrecioDefault(){
				
					return "";
				
				}
				public String PrecioComment(){
				
				    return "";
				
				}
				public String PrecioPattern(){
				
					return "";
				
				}
				public String PrecioOriginalDbColumnName(){
				
					return "Precio";
				
				}

				
			    public BigDecimal Iva;

				public BigDecimal getIva () {
					return this.Iva;
				}

				public Boolean IvaIsNullable(){
				    return false;
				}
				public Boolean IvaIsKey(){
				    return false;
				}
				public Integer IvaLength(){
				    return 0;
				}
				public Integer IvaPrecision(){
				    return null;
				}
				public String IvaDefault(){
				
					return "";
				
				}
				public String IvaComment(){
				
				    return "";
				
				}
				public String IvaPattern(){
				
					return "";
				
				}
				public String IvaOriginalDbColumnName(){
				
					return "Iva";
				
				}

				
			    public BigDecimal VUnitario;

				public BigDecimal getVUnitario () {
					return this.VUnitario;
				}

				public Boolean VUnitarioIsNullable(){
				    return true;
				}
				public Boolean VUnitarioIsKey(){
				    return false;
				}
				public Integer VUnitarioLength(){
				    return null;
				}
				public Integer VUnitarioPrecision(){
				    return null;
				}
				public String VUnitarioDefault(){
				
					return null;
				
				}
				public String VUnitarioComment(){
				
				    return "";
				
				}
				public String VUnitarioPattern(){
				
					return "";
				
				}
				public String VUnitarioOriginalDbColumnName(){
				
					return "VUnitario";
				
				}

				
			    public BigDecimal VUnitarioIva_;

				public BigDecimal getVUnitarioIva_ () {
					return this.VUnitarioIva_;
				}

				public Boolean VUnitarioIva_IsNullable(){
				    return true;
				}
				public Boolean VUnitarioIva_IsKey(){
				    return false;
				}
				public Integer VUnitarioIva_Length(){
				    return null;
				}
				public Integer VUnitarioIva_Precision(){
				    return null;
				}
				public String VUnitarioIva_Default(){
				
					return null;
				
				}
				public String VUnitarioIva_Comment(){
				
				    return "";
				
				}
				public String VUnitarioIva_Pattern(){
				
					return "";
				
				}
				public String VUnitarioIva_OriginalDbColumnName(){
				
					return "VUnitarioIva_";
				
				}

				
			    public BigDecimal SubTotal_;

				public BigDecimal getSubTotal_ () {
					return this.SubTotal_;
				}

				public Boolean SubTotal_IsNullable(){
				    return true;
				}
				public Boolean SubTotal_IsKey(){
				    return false;
				}
				public Integer SubTotal_Length(){
				    return null;
				}
				public Integer SubTotal_Precision(){
				    return null;
				}
				public String SubTotal_Default(){
				
					return null;
				
				}
				public String SubTotal_Comment(){
				
				    return "";
				
				}
				public String SubTotal_Pattern(){
				
					return "";
				
				}
				public String SubTotal_OriginalDbColumnName(){
				
					return "SubTotal_";
				
				}

				
			    public BigDecimal VTotalIva_;

				public BigDecimal getVTotalIva_ () {
					return this.VTotalIva_;
				}

				public Boolean VTotalIva_IsNullable(){
				    return true;
				}
				public Boolean VTotalIva_IsKey(){
				    return false;
				}
				public Integer VTotalIva_Length(){
				    return null;
				}
				public Integer VTotalIva_Precision(){
				    return null;
				}
				public String VTotalIva_Default(){
				
					return null;
				
				}
				public String VTotalIva_Comment(){
				
				    return "";
				
				}
				public String VTotalIva_Pattern(){
				
					return "";
				
				}
				public String VTotalIva_OriginalDbColumnName(){
				
					return "VTotalIva_";
				
				}

				
			    public BigDecimal Total_;

				public BigDecimal getTotal_ () {
					return this.Total_;
				}

				public Boolean Total_IsNullable(){
				    return true;
				}
				public Boolean Total_IsKey(){
				    return false;
				}
				public Integer Total_Length(){
				    return null;
				}
				public Integer Total_Precision(){
				    return null;
				}
				public String Total_Default(){
				
					return null;
				
				}
				public String Total_Comment(){
				
				    return "";
				
				}
				public String Total_Pattern(){
				
					return "";
				
				}
				public String Total_OriginalDbColumnName(){
				
					return "Total_";
				
				}

				
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public String errorMessage;

				public String getErrorMessage () {
					return this.errorMessage;
				}

				public Boolean errorMessageIsNullable(){
				    return true;
				}
				public Boolean errorMessageIsKey(){
				    return false;
				}
				public Integer errorMessageLength(){
				    return 255;
				}
				public Integer errorMessagePrecision(){
				    return 0;
				}
				public String errorMessageDefault(){
				
					return null;
				
				}
				public String errorMessageComment(){
				
				    return null;
				
				}
				public String errorMessagePattern(){
				
				    return null;
				
				}
				public String errorMessageOriginalDbColumnName(){
				
					return "errorMessage";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.TMovimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Movimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Bodega_Id_ = (BigDecimal) dis.readObject();
					
						this.Usuario_Id_ = (BigDecimal) dis.readObject();
					
						this.Inventario_Id_ = (BigDecimal) dis.readObject();
					
						this.PreCantidad_ = (BigDecimal) dis.readObject();
					
						this.PostCantidad_ = (BigDecimal) dis.readObject();
					
						this.Producto_Id_ = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
						this.CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.Cantidad_ = readString(dis);
					
					this.CantEsperada = readString(dis);
					
					this.Lote_ = readString(dis);
					
					this.FVencimiento_ = readString(dis);
					
					this.Restriccion_ = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.Defectos = readString(dis);
					
					this.Temperatura_ = readString(dis);
					
					this.Nivel_Riesgo_ = readString(dis);
					
					this.Tam_Muestra_ = readString(dis);
					
					this.Aprobado_ = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
						this.DContrato_Id_ = (BigDecimal) dis.readObject();
					
						this.HDContrato_Id = (BigDecimal) dis.readObject();
					
						this.Precio = (BigDecimal) dis.readObject();
					
						this.Iva = (BigDecimal) dis.readObject();
					
						this.VUnitario = (BigDecimal) dis.readObject();
					
						this.VUnitarioIva_ = (BigDecimal) dis.readObject();
					
						this.SubTotal_ = (BigDecimal) dis.readObject();
					
						this.VTotalIva_ = (BigDecimal) dis.readObject();
					
						this.Total_ = (BigDecimal) dis.readObject();
					
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.TMovimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Movimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Bodega_Id_ = (BigDecimal) dis.readObject();
					
						this.Usuario_Id_ = (BigDecimal) dis.readObject();
					
						this.Inventario_Id_ = (BigDecimal) dis.readObject();
					
						this.PreCantidad_ = (BigDecimal) dis.readObject();
					
						this.PostCantidad_ = (BigDecimal) dis.readObject();
					
						this.Producto_Id_ = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
						this.CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.Cantidad_ = readString(dis);
					
					this.CantEsperada = readString(dis);
					
					this.Lote_ = readString(dis);
					
					this.FVencimiento_ = readString(dis);
					
					this.Restriccion_ = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.Defectos = readString(dis);
					
					this.Temperatura_ = readString(dis);
					
					this.Nivel_Riesgo_ = readString(dis);
					
					this.Tam_Muestra_ = readString(dis);
					
					this.Aprobado_ = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
						this.DContrato_Id_ = (BigDecimal) dis.readObject();
					
						this.HDContrato_Id = (BigDecimal) dis.readObject();
					
						this.Precio = (BigDecimal) dis.readObject();
					
						this.Iva = (BigDecimal) dis.readObject();
					
						this.VUnitario = (BigDecimal) dis.readObject();
					
						this.VUnitarioIva_ = (BigDecimal) dis.readObject();
					
						this.SubTotal_ = (BigDecimal) dis.readObject();
					
						this.VTotalIva_ = (BigDecimal) dis.readObject();
					
						this.Total_ = (BigDecimal) dis.readObject();
					
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.TMovimiento_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Movimiento_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Bodega_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Usuario_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Inventario_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PreCantidad_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PostCantidad_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Producto_Id_);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Integer
				
						writeInteger(this.CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.Cantidad_,dos);
					
					// String
				
						writeString(this.CantEsperada,dos);
					
					// String
				
						writeString(this.Lote_,dos);
					
					// String
				
						writeString(this.FVencimiento_,dos);
					
					// String
				
						writeString(this.Restriccion_,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.Defectos,dos);
					
					// String
				
						writeString(this.Temperatura_,dos);
					
					// String
				
						writeString(this.Nivel_Riesgo_,dos);
					
					// String
				
						writeString(this.Tam_Muestra_,dos);
					
					// String
				
						writeString(this.Aprobado_,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Contrato_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DContrato_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.HDContrato_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Precio);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Iva);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VUnitario);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VUnitarioIva_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SubTotal_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VTotalIva_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Total_);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TMovimiento_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Movimiento_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Bodega_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Usuario_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Inventario_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PreCantidad_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PostCantidad_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Producto_Id_);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Integer
				
						writeInteger(this.CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.Cantidad_,dos);
					
					// String
				
						writeString(this.CantEsperada,dos);
					
					// String
				
						writeString(this.Lote_,dos);
					
					// String
				
						writeString(this.FVencimiento_,dos);
					
					// String
				
						writeString(this.Restriccion_,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.Defectos,dos);
					
					// String
				
						writeString(this.Temperatura_,dos);
					
					// String
				
						writeString(this.Nivel_Riesgo_,dos);
					
					// String
				
						writeString(this.Tam_Muestra_,dos);
					
					// String
				
						writeString(this.Aprobado_,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Contrato_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DContrato_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.HDContrato_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Precio);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Iva);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VUnitario);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VUnitarioIva_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SubTotal_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VTotalIva_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Total_);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TMovimiento_Id_="+String.valueOf(TMovimiento_Id_));
		sb.append(",Movimiento_Id_="+String.valueOf(Movimiento_Id_));
		sb.append(",Bodega_Id_="+String.valueOf(Bodega_Id_));
		sb.append(",Usuario_Id_="+String.valueOf(Usuario_Id_));
		sb.append(",Inventario_Id_="+String.valueOf(Inventario_Id_));
		sb.append(",PreCantidad_="+String.valueOf(PreCantidad_));
		sb.append(",PostCantidad_="+String.valueOf(PostCantidad_));
		sb.append(",Producto_Id_="+String.valueOf(Producto_Id_));
		sb.append(",out_Expediente="+out_Expediente);
		sb.append(",out_Consecutivo="+out_Consecutivo);
		sb.append(",out_CantEnviada="+String.valueOf(out_CantEnviada));
		sb.append(",CantEnviada="+String.valueOf(CantEnviada));
		sb.append(",out_CantIngresar="+String.valueOf(out_CantIngresar));
		sb.append(",CantIngresar="+String.valueOf(CantIngresar));
		sb.append(",out_Temperatura="+String.valueOf(out_Temperatura));
		sb.append(",out_Riesgo="+String.valueOf(out_Riesgo));
		sb.append(",out_Muestra="+String.valueOf(out_Muestra));
		sb.append(",out_Aprobado="+out_Aprobado);
		sb.append(",out_Estado="+out_Estado);
		sb.append(",out_Message="+out_Message);
		sb.append(",in_CodBarras="+in_CodBarras);
		sb.append(",out_CodBarras="+out_CodBarras);
		sb.append(",in_Cum="+in_Cum);
		sb.append(",out_Cum="+out_Cum);
		sb.append(",in_Invima="+in_Invima);
		sb.append(",Cantidad_="+Cantidad_);
		sb.append(",CantEsperada="+CantEsperada);
		sb.append(",Lote_="+Lote_);
		sb.append(",FVencimiento_="+FVencimiento_);
		sb.append(",Restriccion_="+Restriccion_);
		sb.append(",in_Defectos="+in_Defectos);
		sb.append(",Defectos="+Defectos);
		sb.append(",Temperatura_="+Temperatura_);
		sb.append(",Nivel_Riesgo_="+Nivel_Riesgo_);
		sb.append(",Tam_Muestra_="+Tam_Muestra_);
		sb.append(",Aprobado_="+Aprobado_);
		sb.append(",in_Contrato="+in_Contrato);
		sb.append(",Contrato_Id="+String.valueOf(Contrato_Id));
		sb.append(",DContrato_Id_="+String.valueOf(DContrato_Id_));
		sb.append(",HDContrato_Id="+String.valueOf(HDContrato_Id));
		sb.append(",Precio="+String.valueOf(Precio));
		sb.append(",Iva="+String.valueOf(Iva));
		sb.append(",VUnitario="+String.valueOf(VUnitario));
		sb.append(",VUnitarioIva_="+String.valueOf(VUnitarioIva_));
		sb.append(",SubTotal_="+String.valueOf(SubTotal_));
		sb.append(",VTotalIva_="+String.valueOf(VTotalIva_));
		sb.append(",Total_="+String.valueOf(Total_));
		sb.append(",numeroFila="+String.valueOf(numeroFila));
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",Estado_="+Estado_);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",errorMessage="+errorMessage);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row20Struct implements routines.system.IPersistableRow<row20Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public BigDecimal TMovimiento_Id_;

				public BigDecimal getTMovimiento_Id_ () {
					return this.TMovimiento_Id_;
				}

				public Boolean TMovimiento_Id_IsNullable(){
				    return true;
				}
				public Boolean TMovimiento_Id_IsKey(){
				    return false;
				}
				public Integer TMovimiento_Id_Length(){
				    return null;
				}
				public Integer TMovimiento_Id_Precision(){
				    return null;
				}
				public String TMovimiento_Id_Default(){
				
					return null;
				
				}
				public String TMovimiento_Id_Comment(){
				
				    return "";
				
				}
				public String TMovimiento_Id_Pattern(){
				
					return "";
				
				}
				public String TMovimiento_Id_OriginalDbColumnName(){
				
					return "TMovimiento_Id_";
				
				}

				
			    public BigDecimal Movimiento_Id_;

				public BigDecimal getMovimiento_Id_ () {
					return this.Movimiento_Id_;
				}

				public Boolean Movimiento_Id_IsNullable(){
				    return true;
				}
				public Boolean Movimiento_Id_IsKey(){
				    return false;
				}
				public Integer Movimiento_Id_Length(){
				    return null;
				}
				public Integer Movimiento_Id_Precision(){
				    return null;
				}
				public String Movimiento_Id_Default(){
				
					return null;
				
				}
				public String Movimiento_Id_Comment(){
				
				    return "";
				
				}
				public String Movimiento_Id_Pattern(){
				
					return "";
				
				}
				public String Movimiento_Id_OriginalDbColumnName(){
				
					return "Movimiento_Id_";
				
				}

				
			    public BigDecimal Bodega_Id_;

				public BigDecimal getBodega_Id_ () {
					return this.Bodega_Id_;
				}

				public Boolean Bodega_Id_IsNullable(){
				    return true;
				}
				public Boolean Bodega_Id_IsKey(){
				    return false;
				}
				public Integer Bodega_Id_Length(){
				    return null;
				}
				public Integer Bodega_Id_Precision(){
				    return null;
				}
				public String Bodega_Id_Default(){
				
					return null;
				
				}
				public String Bodega_Id_Comment(){
				
				    return "";
				
				}
				public String Bodega_Id_Pattern(){
				
					return "";
				
				}
				public String Bodega_Id_OriginalDbColumnName(){
				
					return "Bodega_Id_";
				
				}

				
			    public BigDecimal Usuario_Id_;

				public BigDecimal getUsuario_Id_ () {
					return this.Usuario_Id_;
				}

				public Boolean Usuario_Id_IsNullable(){
				    return true;
				}
				public Boolean Usuario_Id_IsKey(){
				    return false;
				}
				public Integer Usuario_Id_Length(){
				    return null;
				}
				public Integer Usuario_Id_Precision(){
				    return null;
				}
				public String Usuario_Id_Default(){
				
					return null;
				
				}
				public String Usuario_Id_Comment(){
				
				    return "";
				
				}
				public String Usuario_Id_Pattern(){
				
					return "";
				
				}
				public String Usuario_Id_OriginalDbColumnName(){
				
					return "Usuario_Id_";
				
				}

				
			    public BigDecimal Inventario_Id_;

				public BigDecimal getInventario_Id_ () {
					return this.Inventario_Id_;
				}

				public Boolean Inventario_Id_IsNullable(){
				    return true;
				}
				public Boolean Inventario_Id_IsKey(){
				    return false;
				}
				public Integer Inventario_Id_Length(){
				    return null;
				}
				public Integer Inventario_Id_Precision(){
				    return null;
				}
				public String Inventario_Id_Default(){
				
					return null;
				
				}
				public String Inventario_Id_Comment(){
				
				    return "";
				
				}
				public String Inventario_Id_Pattern(){
				
					return "";
				
				}
				public String Inventario_Id_OriginalDbColumnName(){
				
					return "Inventario_Id_";
				
				}

				
			    public BigDecimal PreCantidad_;

				public BigDecimal getPreCantidad_ () {
					return this.PreCantidad_;
				}

				public Boolean PreCantidad_IsNullable(){
				    return true;
				}
				public Boolean PreCantidad_IsKey(){
				    return false;
				}
				public Integer PreCantidad_Length(){
				    return null;
				}
				public Integer PreCantidad_Precision(){
				    return null;
				}
				public String PreCantidad_Default(){
				
					return null;
				
				}
				public String PreCantidad_Comment(){
				
				    return "";
				
				}
				public String PreCantidad_Pattern(){
				
					return "";
				
				}
				public String PreCantidad_OriginalDbColumnName(){
				
					return "PreCantidad_";
				
				}

				
			    public BigDecimal PostCantidad_;

				public BigDecimal getPostCantidad_ () {
					return this.PostCantidad_;
				}

				public Boolean PostCantidad_IsNullable(){
				    return true;
				}
				public Boolean PostCantidad_IsKey(){
				    return false;
				}
				public Integer PostCantidad_Length(){
				    return null;
				}
				public Integer PostCantidad_Precision(){
				    return null;
				}
				public String PostCantidad_Default(){
				
					return null;
				
				}
				public String PostCantidad_Comment(){
				
				    return "";
				
				}
				public String PostCantidad_Pattern(){
				
					return "";
				
				}
				public String PostCantidad_OriginalDbColumnName(){
				
					return "PostCantidad_";
				
				}

				
			    public BigDecimal Producto_Id_;

				public BigDecimal getProducto_Id_ () {
					return this.Producto_Id_;
				}

				public Boolean Producto_Id_IsNullable(){
				    return true;
				}
				public Boolean Producto_Id_IsKey(){
				    return false;
				}
				public Integer Producto_Id_Length(){
				    return null;
				}
				public Integer Producto_Id_Precision(){
				    return null;
				}
				public String Producto_Id_Default(){
				
					return null;
				
				}
				public String Producto_Id_Comment(){
				
				    return "";
				
				}
				public String Producto_Id_Pattern(){
				
					return "";
				
				}
				public String Producto_Id_OriginalDbColumnName(){
				
					return "Producto_Id_";
				
				}

				
			    public String out_Expediente;

				public String getOut_Expediente () {
					return this.out_Expediente;
				}

				public Boolean out_ExpedienteIsNullable(){
				    return true;
				}
				public Boolean out_ExpedienteIsKey(){
				    return false;
				}
				public Integer out_ExpedienteLength(){
				    return null;
				}
				public Integer out_ExpedientePrecision(){
				    return null;
				}
				public String out_ExpedienteDefault(){
				
					return null;
				
				}
				public String out_ExpedienteComment(){
				
				    return "";
				
				}
				public String out_ExpedientePattern(){
				
					return "";
				
				}
				public String out_ExpedienteOriginalDbColumnName(){
				
					return "out_Expediente";
				
				}

				
			    public String out_Consecutivo;

				public String getOut_Consecutivo () {
					return this.out_Consecutivo;
				}

				public Boolean out_ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean out_ConsecutivoIsKey(){
				    return false;
				}
				public Integer out_ConsecutivoLength(){
				    return null;
				}
				public Integer out_ConsecutivoPrecision(){
				    return null;
				}
				public String out_ConsecutivoDefault(){
				
					return null;
				
				}
				public String out_ConsecutivoComment(){
				
				    return "";
				
				}
				public String out_ConsecutivoPattern(){
				
					return "";
				
				}
				public String out_ConsecutivoOriginalDbColumnName(){
				
					return "out_Consecutivo";
				
				}

				
			    public Integer out_CantEnviada;

				public Integer getOut_CantEnviada () {
					return this.out_CantEnviada;
				}

				public Boolean out_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean out_CantEnviadaIsKey(){
				    return false;
				}
				public Integer out_CantEnviadaLength(){
				    return 0;
				}
				public Integer out_CantEnviadaPrecision(){
				    return 0;
				}
				public String out_CantEnviadaDefault(){
				
					return null;
				
				}
				public String out_CantEnviadaComment(){
				
				    return "";
				
				}
				public String out_CantEnviadaPattern(){
				
					return "";
				
				}
				public String out_CantEnviadaOriginalDbColumnName(){
				
					return "out_CantEnviada";
				
				}

				
			    public Integer CantEnviada;

				public Integer getCantEnviada () {
					return this.CantEnviada;
				}

				public Boolean CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean CantEnviadaIsKey(){
				    return false;
				}
				public Integer CantEnviadaLength(){
				    return null;
				}
				public Integer CantEnviadaPrecision(){
				    return null;
				}
				public String CantEnviadaDefault(){
				
					return null;
				
				}
				public String CantEnviadaComment(){
				
				    return "";
				
				}
				public String CantEnviadaPattern(){
				
					return "";
				
				}
				public String CantEnviadaOriginalDbColumnName(){
				
					return "CantEnviada";
				
				}

				
			    public Integer out_CantIngresar;

				public Integer getOut_CantIngresar () {
					return this.out_CantIngresar;
				}

				public Boolean out_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean out_CantIngresarIsKey(){
				    return false;
				}
				public Integer out_CantIngresarLength(){
				    return 0;
				}
				public Integer out_CantIngresarPrecision(){
				    return 0;
				}
				public String out_CantIngresarDefault(){
				
					return null;
				
				}
				public String out_CantIngresarComment(){
				
				    return "";
				
				}
				public String out_CantIngresarPattern(){
				
					return "";
				
				}
				public String out_CantIngresarOriginalDbColumnName(){
				
					return "out_CantIngresar";
				
				}

				
			    public Integer CantIngresar;

				public Integer getCantIngresar () {
					return this.CantIngresar;
				}

				public Boolean CantIngresarIsNullable(){
				    return true;
				}
				public Boolean CantIngresarIsKey(){
				    return false;
				}
				public Integer CantIngresarLength(){
				    return null;
				}
				public Integer CantIngresarPrecision(){
				    return null;
				}
				public String CantIngresarDefault(){
				
					return null;
				
				}
				public String CantIngresarComment(){
				
				    return "";
				
				}
				public String CantIngresarPattern(){
				
					return "";
				
				}
				public String CantIngresarOriginalDbColumnName(){
				
					return "CantIngresar";
				
				}

				
			    public Double out_Temperatura;

				public Double getOut_Temperatura () {
					return this.out_Temperatura;
				}

				public Boolean out_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean out_TemperaturaIsKey(){
				    return false;
				}
				public Integer out_TemperaturaLength(){
				    return null;
				}
				public Integer out_TemperaturaPrecision(){
				    return null;
				}
				public String out_TemperaturaDefault(){
				
					return null;
				
				}
				public String out_TemperaturaComment(){
				
				    return "";
				
				}
				public String out_TemperaturaPattern(){
				
					return "";
				
				}
				public String out_TemperaturaOriginalDbColumnName(){
				
					return "out_Temperatura";
				
				}

				
			    public Integer out_Riesgo;

				public Integer getOut_Riesgo () {
					return this.out_Riesgo;
				}

				public Boolean out_RiesgoIsNullable(){
				    return true;
				}
				public Boolean out_RiesgoIsKey(){
				    return false;
				}
				public Integer out_RiesgoLength(){
				    return null;
				}
				public Integer out_RiesgoPrecision(){
				    return null;
				}
				public String out_RiesgoDefault(){
				
					return null;
				
				}
				public String out_RiesgoComment(){
				
				    return "";
				
				}
				public String out_RiesgoPattern(){
				
					return "";
				
				}
				public String out_RiesgoOriginalDbColumnName(){
				
					return "out_Riesgo";
				
				}

				
			    public Integer out_Muestra;

				public Integer getOut_Muestra () {
					return this.out_Muestra;
				}

				public Boolean out_MuestraIsNullable(){
				    return true;
				}
				public Boolean out_MuestraIsKey(){
				    return false;
				}
				public Integer out_MuestraLength(){
				    return null;
				}
				public Integer out_MuestraPrecision(){
				    return null;
				}
				public String out_MuestraDefault(){
				
					return null;
				
				}
				public String out_MuestraComment(){
				
				    return "";
				
				}
				public String out_MuestraPattern(){
				
					return "";
				
				}
				public String out_MuestraOriginalDbColumnName(){
				
					return "out_Muestra";
				
				}

				
			    public String out_Aprobado;

				public String getOut_Aprobado () {
					return this.out_Aprobado;
				}

				public Boolean out_AprobadoIsNullable(){
				    return true;
				}
				public Boolean out_AprobadoIsKey(){
				    return false;
				}
				public Integer out_AprobadoLength(){
				    return null;
				}
				public Integer out_AprobadoPrecision(){
				    return null;
				}
				public String out_AprobadoDefault(){
				
					return null;
				
				}
				public String out_AprobadoComment(){
				
				    return "";
				
				}
				public String out_AprobadoPattern(){
				
					return "";
				
				}
				public String out_AprobadoOriginalDbColumnName(){
				
					return "out_Aprobado";
				
				}

				
			    public String out_Estado;

				public String getOut_Estado () {
					return this.out_Estado;
				}

				public Boolean out_EstadoIsNullable(){
				    return true;
				}
				public Boolean out_EstadoIsKey(){
				    return false;
				}
				public Integer out_EstadoLength(){
				    return 0;
				}
				public Integer out_EstadoPrecision(){
				    return 0;
				}
				public String out_EstadoDefault(){
				
					return null;
				
				}
				public String out_EstadoComment(){
				
				    return "";
				
				}
				public String out_EstadoPattern(){
				
					return "";
				
				}
				public String out_EstadoOriginalDbColumnName(){
				
					return "out_Estado";
				
				}

				
			    public String out_Message;

				public String getOut_Message () {
					return this.out_Message;
				}

				public Boolean out_MessageIsNullable(){
				    return true;
				}
				public Boolean out_MessageIsKey(){
				    return false;
				}
				public Integer out_MessageLength(){
				    return 0;
				}
				public Integer out_MessagePrecision(){
				    return 0;
				}
				public String out_MessageDefault(){
				
					return null;
				
				}
				public String out_MessageComment(){
				
				    return "";
				
				}
				public String out_MessagePattern(){
				
					return "";
				
				}
				public String out_MessageOriginalDbColumnName(){
				
					return "out_Message";
				
				}

				
			    public String in_CodBarras;

				public String getIn_CodBarras () {
					return this.in_CodBarras;
				}

				public Boolean in_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean in_CodBarrasIsKey(){
				    return false;
				}
				public Integer in_CodBarrasLength(){
				    return 0;
				}
				public Integer in_CodBarrasPrecision(){
				    return 0;
				}
				public String in_CodBarrasDefault(){
				
					return null;
				
				}
				public String in_CodBarrasComment(){
				
				    return "";
				
				}
				public String in_CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CodBarrasOriginalDbColumnName(){
				
					return "in_CodBarras";
				
				}

				
			    public String out_CodBarras;

				public String getOut_CodBarras () {
					return this.out_CodBarras;
				}

				public Boolean out_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean out_CodBarrasIsKey(){
				    return false;
				}
				public Integer out_CodBarrasLength(){
				    return null;
				}
				public Integer out_CodBarrasPrecision(){
				    return null;
				}
				public String out_CodBarrasDefault(){
				
					return null;
				
				}
				public String out_CodBarrasComment(){
				
				    return "";
				
				}
				public String out_CodBarrasPattern(){
				
					return "";
				
				}
				public String out_CodBarrasOriginalDbColumnName(){
				
					return "out_CodBarras";
				
				}

				
			    public String in_Cum;

				public String getIn_Cum () {
					return this.in_Cum;
				}

				public Boolean in_CumIsNullable(){
				    return true;
				}
				public Boolean in_CumIsKey(){
				    return false;
				}
				public Integer in_CumLength(){
				    return 0;
				}
				public Integer in_CumPrecision(){
				    return 0;
				}
				public String in_CumDefault(){
				
					return null;
				
				}
				public String in_CumComment(){
				
				    return "";
				
				}
				public String in_CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CumOriginalDbColumnName(){
				
					return "in_Cum";
				
				}

				
			    public String out_Cum;

				public String getOut_Cum () {
					return this.out_Cum;
				}

				public Boolean out_CumIsNullable(){
				    return true;
				}
				public Boolean out_CumIsKey(){
				    return false;
				}
				public Integer out_CumLength(){
				    return null;
				}
				public Integer out_CumPrecision(){
				    return null;
				}
				public String out_CumDefault(){
				
					return null;
				
				}
				public String out_CumComment(){
				
				    return "";
				
				}
				public String out_CumPattern(){
				
					return "";
				
				}
				public String out_CumOriginalDbColumnName(){
				
					return "out_Cum";
				
				}

				
			    public String in_Invima;

				public String getIn_Invima () {
					return this.in_Invima;
				}

				public Boolean in_InvimaIsNullable(){
				    return true;
				}
				public Boolean in_InvimaIsKey(){
				    return false;
				}
				public Integer in_InvimaLength(){
				    return 0;
				}
				public Integer in_InvimaPrecision(){
				    return 0;
				}
				public String in_InvimaDefault(){
				
					return null;
				
				}
				public String in_InvimaComment(){
				
				    return "";
				
				}
				public String in_InvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_InvimaOriginalDbColumnName(){
				
					return "in_Invima";
				
				}

				
			    public String Cantidad_;

				public String getCantidad_ () {
					return this.Cantidad_;
				}

				public Boolean Cantidad_IsNullable(){
				    return true;
				}
				public Boolean Cantidad_IsKey(){
				    return false;
				}
				public Integer Cantidad_Length(){
				    return 0;
				}
				public Integer Cantidad_Precision(){
				    return 0;
				}
				public String Cantidad_Default(){
				
					return null;
				
				}
				public String Cantidad_Comment(){
				
				    return "";
				
				}
				public String Cantidad_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Cantidad_OriginalDbColumnName(){
				
					return "Cantidad_";
				
				}

				
			    public String CantEsperada;

				public String getCantEsperada () {
					return this.CantEsperada;
				}

				public Boolean CantEsperadaIsNullable(){
				    return true;
				}
				public Boolean CantEsperadaIsKey(){
				    return false;
				}
				public Integer CantEsperadaLength(){
				    return 0;
				}
				public Integer CantEsperadaPrecision(){
				    return 0;
				}
				public String CantEsperadaDefault(){
				
					return null;
				
				}
				public String CantEsperadaComment(){
				
				    return "";
				
				}
				public String CantEsperadaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantEsperadaOriginalDbColumnName(){
				
					return "CantEsperada";
				
				}

				
			    public String Lote_;

				public String getLote_ () {
					return this.Lote_;
				}

				public Boolean Lote_IsNullable(){
				    return true;
				}
				public Boolean Lote_IsKey(){
				    return false;
				}
				public Integer Lote_Length(){
				    return 0;
				}
				public Integer Lote_Precision(){
				    return 0;
				}
				public String Lote_Default(){
				
					return null;
				
				}
				public String Lote_Comment(){
				
				    return "";
				
				}
				public String Lote_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Lote_OriginalDbColumnName(){
				
					return "Lote_";
				
				}

				
			    public String FVencimiento_;

				public String getFVencimiento_ () {
					return this.FVencimiento_;
				}

				public Boolean FVencimiento_IsNullable(){
				    return true;
				}
				public Boolean FVencimiento_IsKey(){
				    return false;
				}
				public Integer FVencimiento_Length(){
				    return 0;
				}
				public Integer FVencimiento_Precision(){
				    return 0;
				}
				public String FVencimiento_Default(){
				
					return null;
				
				}
				public String FVencimiento_Comment(){
				
				    return "";
				
				}
				public String FVencimiento_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVencimiento_OriginalDbColumnName(){
				
					return "FVencimiento_";
				
				}

				
			    public String Restriccion_;

				public String getRestriccion_ () {
					return this.Restriccion_;
				}

				public Boolean Restriccion_IsNullable(){
				    return true;
				}
				public Boolean Restriccion_IsKey(){
				    return false;
				}
				public Integer Restriccion_Length(){
				    return 0;
				}
				public Integer Restriccion_Precision(){
				    return 0;
				}
				public String Restriccion_Default(){
				
					return null;
				
				}
				public String Restriccion_Comment(){
				
				    return "";
				
				}
				public String Restriccion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Restriccion_OriginalDbColumnName(){
				
					return "Restriccion_";
				
				}

				
			    public String in_Defectos;

				public String getIn_Defectos () {
					return this.in_Defectos;
				}

				public Boolean in_DefectosIsNullable(){
				    return true;
				}
				public Boolean in_DefectosIsKey(){
				    return false;
				}
				public Integer in_DefectosLength(){
				    return 0;
				}
				public Integer in_DefectosPrecision(){
				    return 0;
				}
				public String in_DefectosDefault(){
				
					return null;
				
				}
				public String in_DefectosComment(){
				
				    return "";
				
				}
				public String in_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_DefectosOriginalDbColumnName(){
				
					return "in_Defectos";
				
				}

				
			    public String Defectos;

				public String getDefectos () {
					return this.Defectos;
				}

				public Boolean DefectosIsNullable(){
				    return true;
				}
				public Boolean DefectosIsKey(){
				    return false;
				}
				public Integer DefectosLength(){
				    return 0;
				}
				public Integer DefectosPrecision(){
				    return 0;
				}
				public String DefectosDefault(){
				
					return null;
				
				}
				public String DefectosComment(){
				
				    return "";
				
				}
				public String DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DefectosOriginalDbColumnName(){
				
					return "Defectos";
				
				}

				
			    public String Temperatura_;

				public String getTemperatura_ () {
					return this.Temperatura_;
				}

				public Boolean Temperatura_IsNullable(){
				    return true;
				}
				public Boolean Temperatura_IsKey(){
				    return false;
				}
				public Integer Temperatura_Length(){
				    return 0;
				}
				public Integer Temperatura_Precision(){
				    return 0;
				}
				public String Temperatura_Default(){
				
					return null;
				
				}
				public String Temperatura_Comment(){
				
				    return "";
				
				}
				public String Temperatura_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Temperatura_OriginalDbColumnName(){
				
					return "Temperatura_";
				
				}

				
			    public String Nivel_Riesgo_;

				public String getNivel_Riesgo_ () {
					return this.Nivel_Riesgo_;
				}

				public Boolean Nivel_Riesgo_IsNullable(){
				    return true;
				}
				public Boolean Nivel_Riesgo_IsKey(){
				    return false;
				}
				public Integer Nivel_Riesgo_Length(){
				    return 0;
				}
				public Integer Nivel_Riesgo_Precision(){
				    return 0;
				}
				public String Nivel_Riesgo_Default(){
				
					return null;
				
				}
				public String Nivel_Riesgo_Comment(){
				
				    return "";
				
				}
				public String Nivel_Riesgo_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Nivel_Riesgo_OriginalDbColumnName(){
				
					return "Nivel_Riesgo_";
				
				}

				
			    public String Tam_Muestra_;

				public String getTam_Muestra_ () {
					return this.Tam_Muestra_;
				}

				public Boolean Tam_Muestra_IsNullable(){
				    return true;
				}
				public Boolean Tam_Muestra_IsKey(){
				    return false;
				}
				public Integer Tam_Muestra_Length(){
				    return 0;
				}
				public Integer Tam_Muestra_Precision(){
				    return 0;
				}
				public String Tam_Muestra_Default(){
				
					return null;
				
				}
				public String Tam_Muestra_Comment(){
				
				    return "";
				
				}
				public String Tam_Muestra_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Tam_Muestra_OriginalDbColumnName(){
				
					return "Tam_Muestra_";
				
				}

				
			    public String Aprobado_;

				public String getAprobado_ () {
					return this.Aprobado_;
				}

				public Boolean Aprobado_IsNullable(){
				    return true;
				}
				public Boolean Aprobado_IsKey(){
				    return false;
				}
				public Integer Aprobado_Length(){
				    return 0;
				}
				public Integer Aprobado_Precision(){
				    return 0;
				}
				public String Aprobado_Default(){
				
					return null;
				
				}
				public String Aprobado_Comment(){
				
				    return "";
				
				}
				public String Aprobado_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Aprobado_OriginalDbColumnName(){
				
					return "Aprobado_";
				
				}

				
			    public String in_Contrato;

				public String getIn_Contrato () {
					return this.in_Contrato;
				}

				public Boolean in_ContratoIsNullable(){
				    return true;
				}
				public Boolean in_ContratoIsKey(){
				    return false;
				}
				public Integer in_ContratoLength(){
				    return 0;
				}
				public Integer in_ContratoPrecision(){
				    return 0;
				}
				public String in_ContratoDefault(){
				
					return null;
				
				}
				public String in_ContratoComment(){
				
				    return "";
				
				}
				public String in_ContratoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_ContratoOriginalDbColumnName(){
				
					return "in_Contrato";
				
				}

				
			    public BigDecimal Contrato_Id;

				public BigDecimal getContrato_Id () {
					return this.Contrato_Id;
				}

				public Boolean Contrato_IdIsNullable(){
				    return false;
				}
				public Boolean Contrato_IdIsKey(){
				    return false;
				}
				public Integer Contrato_IdLength(){
				    return 0;
				}
				public Integer Contrato_IdPrecision(){
				    return null;
				}
				public String Contrato_IdDefault(){
				
					return "";
				
				}
				public String Contrato_IdComment(){
				
				    return "";
				
				}
				public String Contrato_IdPattern(){
				
					return "";
				
				}
				public String Contrato_IdOriginalDbColumnName(){
				
					return "Contrato_Id";
				
				}

				
			    public BigDecimal DContrato_Id_;

				public BigDecimal getDContrato_Id_ () {
					return this.DContrato_Id_;
				}

				public Boolean DContrato_Id_IsNullable(){
				    return false;
				}
				public Boolean DContrato_Id_IsKey(){
				    return false;
				}
				public Integer DContrato_Id_Length(){
				    return 0;
				}
				public Integer DContrato_Id_Precision(){
				    return null;
				}
				public String DContrato_Id_Default(){
				
					return "";
				
				}
				public String DContrato_Id_Comment(){
				
				    return "";
				
				}
				public String DContrato_Id_Pattern(){
				
					return "";
				
				}
				public String DContrato_Id_OriginalDbColumnName(){
				
					return "DContrato_Id_";
				
				}

				
			    public BigDecimal HDContrato_Id;

				public BigDecimal getHDContrato_Id () {
					return this.HDContrato_Id;
				}

				public Boolean HDContrato_IdIsNullable(){
				    return false;
				}
				public Boolean HDContrato_IdIsKey(){
				    return false;
				}
				public Integer HDContrato_IdLength(){
				    return 0;
				}
				public Integer HDContrato_IdPrecision(){
				    return null;
				}
				public String HDContrato_IdDefault(){
				
					return "";
				
				}
				public String HDContrato_IdComment(){
				
				    return "";
				
				}
				public String HDContrato_IdPattern(){
				
					return "";
				
				}
				public String HDContrato_IdOriginalDbColumnName(){
				
					return "HDContrato_Id";
				
				}

				
			    public BigDecimal Precio;

				public BigDecimal getPrecio () {
					return this.Precio;
				}

				public Boolean PrecioIsNullable(){
				    return false;
				}
				public Boolean PrecioIsKey(){
				    return false;
				}
				public Integer PrecioLength(){
				    return 0;
				}
				public Integer PrecioPrecision(){
				    return null;
				}
				public String PrecioDefault(){
				
					return "";
				
				}
				public String PrecioComment(){
				
				    return "";
				
				}
				public String PrecioPattern(){
				
					return "";
				
				}
				public String PrecioOriginalDbColumnName(){
				
					return "Precio";
				
				}

				
			    public BigDecimal Iva;

				public BigDecimal getIva () {
					return this.Iva;
				}

				public Boolean IvaIsNullable(){
				    return false;
				}
				public Boolean IvaIsKey(){
				    return false;
				}
				public Integer IvaLength(){
				    return 0;
				}
				public Integer IvaPrecision(){
				    return null;
				}
				public String IvaDefault(){
				
					return "";
				
				}
				public String IvaComment(){
				
				    return "";
				
				}
				public String IvaPattern(){
				
					return "";
				
				}
				public String IvaOriginalDbColumnName(){
				
					return "Iva";
				
				}

				
			    public BigDecimal VUnitario;

				public BigDecimal getVUnitario () {
					return this.VUnitario;
				}

				public Boolean VUnitarioIsNullable(){
				    return true;
				}
				public Boolean VUnitarioIsKey(){
				    return false;
				}
				public Integer VUnitarioLength(){
				    return null;
				}
				public Integer VUnitarioPrecision(){
				    return null;
				}
				public String VUnitarioDefault(){
				
					return null;
				
				}
				public String VUnitarioComment(){
				
				    return "";
				
				}
				public String VUnitarioPattern(){
				
					return "";
				
				}
				public String VUnitarioOriginalDbColumnName(){
				
					return "VUnitario";
				
				}

				
			    public BigDecimal VUnitarioIva_;

				public BigDecimal getVUnitarioIva_ () {
					return this.VUnitarioIva_;
				}

				public Boolean VUnitarioIva_IsNullable(){
				    return true;
				}
				public Boolean VUnitarioIva_IsKey(){
				    return false;
				}
				public Integer VUnitarioIva_Length(){
				    return null;
				}
				public Integer VUnitarioIva_Precision(){
				    return null;
				}
				public String VUnitarioIva_Default(){
				
					return null;
				
				}
				public String VUnitarioIva_Comment(){
				
				    return "";
				
				}
				public String VUnitarioIva_Pattern(){
				
					return "";
				
				}
				public String VUnitarioIva_OriginalDbColumnName(){
				
					return "VUnitarioIva_";
				
				}

				
			    public BigDecimal SubTotal_;

				public BigDecimal getSubTotal_ () {
					return this.SubTotal_;
				}

				public Boolean SubTotal_IsNullable(){
				    return true;
				}
				public Boolean SubTotal_IsKey(){
				    return false;
				}
				public Integer SubTotal_Length(){
				    return null;
				}
				public Integer SubTotal_Precision(){
				    return null;
				}
				public String SubTotal_Default(){
				
					return null;
				
				}
				public String SubTotal_Comment(){
				
				    return "";
				
				}
				public String SubTotal_Pattern(){
				
					return "";
				
				}
				public String SubTotal_OriginalDbColumnName(){
				
					return "SubTotal_";
				
				}

				
			    public BigDecimal VTotalIva_;

				public BigDecimal getVTotalIva_ () {
					return this.VTotalIva_;
				}

				public Boolean VTotalIva_IsNullable(){
				    return true;
				}
				public Boolean VTotalIva_IsKey(){
				    return false;
				}
				public Integer VTotalIva_Length(){
				    return null;
				}
				public Integer VTotalIva_Precision(){
				    return null;
				}
				public String VTotalIva_Default(){
				
					return null;
				
				}
				public String VTotalIva_Comment(){
				
				    return "";
				
				}
				public String VTotalIva_Pattern(){
				
					return "";
				
				}
				public String VTotalIva_OriginalDbColumnName(){
				
					return "VTotalIva_";
				
				}

				
			    public BigDecimal Total_;

				public BigDecimal getTotal_ () {
					return this.Total_;
				}

				public Boolean Total_IsNullable(){
				    return true;
				}
				public Boolean Total_IsKey(){
				    return false;
				}
				public Integer Total_Length(){
				    return null;
				}
				public Integer Total_Precision(){
				    return null;
				}
				public String Total_Default(){
				
					return null;
				
				}
				public String Total_Comment(){
				
				    return "";
				
				}
				public String Total_Pattern(){
				
					return "";
				
				}
				public String Total_OriginalDbColumnName(){
				
					return "Total_";
				
				}

				
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public String errorMessage;

				public String getErrorMessage () {
					return this.errorMessage;
				}

				public Boolean errorMessageIsNullable(){
				    return true;
				}
				public Boolean errorMessageIsKey(){
				    return false;
				}
				public Integer errorMessageLength(){
				    return 255;
				}
				public Integer errorMessagePrecision(){
				    return 0;
				}
				public String errorMessageDefault(){
				
					return null;
				
				}
				public String errorMessageComment(){
				
				    return null;
				
				}
				public String errorMessagePattern(){
				
				    return null;
				
				}
				public String errorMessageOriginalDbColumnName(){
				
					return "errorMessage";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.TMovimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Movimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Bodega_Id_ = (BigDecimal) dis.readObject();
					
						this.Usuario_Id_ = (BigDecimal) dis.readObject();
					
						this.Inventario_Id_ = (BigDecimal) dis.readObject();
					
						this.PreCantidad_ = (BigDecimal) dis.readObject();
					
						this.PostCantidad_ = (BigDecimal) dis.readObject();
					
						this.Producto_Id_ = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
						this.CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.Cantidad_ = readString(dis);
					
					this.CantEsperada = readString(dis);
					
					this.Lote_ = readString(dis);
					
					this.FVencimiento_ = readString(dis);
					
					this.Restriccion_ = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.Defectos = readString(dis);
					
					this.Temperatura_ = readString(dis);
					
					this.Nivel_Riesgo_ = readString(dis);
					
					this.Tam_Muestra_ = readString(dis);
					
					this.Aprobado_ = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
						this.DContrato_Id_ = (BigDecimal) dis.readObject();
					
						this.HDContrato_Id = (BigDecimal) dis.readObject();
					
						this.Precio = (BigDecimal) dis.readObject();
					
						this.Iva = (BigDecimal) dis.readObject();
					
						this.VUnitario = (BigDecimal) dis.readObject();
					
						this.VUnitarioIva_ = (BigDecimal) dis.readObject();
					
						this.SubTotal_ = (BigDecimal) dis.readObject();
					
						this.VTotalIva_ = (BigDecimal) dis.readObject();
					
						this.Total_ = (BigDecimal) dis.readObject();
					
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.TMovimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Movimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Bodega_Id_ = (BigDecimal) dis.readObject();
					
						this.Usuario_Id_ = (BigDecimal) dis.readObject();
					
						this.Inventario_Id_ = (BigDecimal) dis.readObject();
					
						this.PreCantidad_ = (BigDecimal) dis.readObject();
					
						this.PostCantidad_ = (BigDecimal) dis.readObject();
					
						this.Producto_Id_ = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
						this.CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.Cantidad_ = readString(dis);
					
					this.CantEsperada = readString(dis);
					
					this.Lote_ = readString(dis);
					
					this.FVencimiento_ = readString(dis);
					
					this.Restriccion_ = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.Defectos = readString(dis);
					
					this.Temperatura_ = readString(dis);
					
					this.Nivel_Riesgo_ = readString(dis);
					
					this.Tam_Muestra_ = readString(dis);
					
					this.Aprobado_ = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
						this.DContrato_Id_ = (BigDecimal) dis.readObject();
					
						this.HDContrato_Id = (BigDecimal) dis.readObject();
					
						this.Precio = (BigDecimal) dis.readObject();
					
						this.Iva = (BigDecimal) dis.readObject();
					
						this.VUnitario = (BigDecimal) dis.readObject();
					
						this.VUnitarioIva_ = (BigDecimal) dis.readObject();
					
						this.SubTotal_ = (BigDecimal) dis.readObject();
					
						this.VTotalIva_ = (BigDecimal) dis.readObject();
					
						this.Total_ = (BigDecimal) dis.readObject();
					
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.TMovimiento_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Movimiento_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Bodega_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Usuario_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Inventario_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PreCantidad_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PostCantidad_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Producto_Id_);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Integer
				
						writeInteger(this.CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.Cantidad_,dos);
					
					// String
				
						writeString(this.CantEsperada,dos);
					
					// String
				
						writeString(this.Lote_,dos);
					
					// String
				
						writeString(this.FVencimiento_,dos);
					
					// String
				
						writeString(this.Restriccion_,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.Defectos,dos);
					
					// String
				
						writeString(this.Temperatura_,dos);
					
					// String
				
						writeString(this.Nivel_Riesgo_,dos);
					
					// String
				
						writeString(this.Tam_Muestra_,dos);
					
					// String
				
						writeString(this.Aprobado_,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Contrato_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DContrato_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.HDContrato_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Precio);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Iva);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VUnitario);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VUnitarioIva_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SubTotal_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VTotalIva_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Total_);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TMovimiento_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Movimiento_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Bodega_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Usuario_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Inventario_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PreCantidad_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PostCantidad_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Producto_Id_);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Integer
				
						writeInteger(this.CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.Cantidad_,dos);
					
					// String
				
						writeString(this.CantEsperada,dos);
					
					// String
				
						writeString(this.Lote_,dos);
					
					// String
				
						writeString(this.FVencimiento_,dos);
					
					// String
				
						writeString(this.Restriccion_,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.Defectos,dos);
					
					// String
				
						writeString(this.Temperatura_,dos);
					
					// String
				
						writeString(this.Nivel_Riesgo_,dos);
					
					// String
				
						writeString(this.Tam_Muestra_,dos);
					
					// String
				
						writeString(this.Aprobado_,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Contrato_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DContrato_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.HDContrato_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Precio);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Iva);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VUnitario);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VUnitarioIva_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SubTotal_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VTotalIva_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Total_);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TMovimiento_Id_="+String.valueOf(TMovimiento_Id_));
		sb.append(",Movimiento_Id_="+String.valueOf(Movimiento_Id_));
		sb.append(",Bodega_Id_="+String.valueOf(Bodega_Id_));
		sb.append(",Usuario_Id_="+String.valueOf(Usuario_Id_));
		sb.append(",Inventario_Id_="+String.valueOf(Inventario_Id_));
		sb.append(",PreCantidad_="+String.valueOf(PreCantidad_));
		sb.append(",PostCantidad_="+String.valueOf(PostCantidad_));
		sb.append(",Producto_Id_="+String.valueOf(Producto_Id_));
		sb.append(",out_Expediente="+out_Expediente);
		sb.append(",out_Consecutivo="+out_Consecutivo);
		sb.append(",out_CantEnviada="+String.valueOf(out_CantEnviada));
		sb.append(",CantEnviada="+String.valueOf(CantEnviada));
		sb.append(",out_CantIngresar="+String.valueOf(out_CantIngresar));
		sb.append(",CantIngresar="+String.valueOf(CantIngresar));
		sb.append(",out_Temperatura="+String.valueOf(out_Temperatura));
		sb.append(",out_Riesgo="+String.valueOf(out_Riesgo));
		sb.append(",out_Muestra="+String.valueOf(out_Muestra));
		sb.append(",out_Aprobado="+out_Aprobado);
		sb.append(",out_Estado="+out_Estado);
		sb.append(",out_Message="+out_Message);
		sb.append(",in_CodBarras="+in_CodBarras);
		sb.append(",out_CodBarras="+out_CodBarras);
		sb.append(",in_Cum="+in_Cum);
		sb.append(",out_Cum="+out_Cum);
		sb.append(",in_Invima="+in_Invima);
		sb.append(",Cantidad_="+Cantidad_);
		sb.append(",CantEsperada="+CantEsperada);
		sb.append(",Lote_="+Lote_);
		sb.append(",FVencimiento_="+FVencimiento_);
		sb.append(",Restriccion_="+Restriccion_);
		sb.append(",in_Defectos="+in_Defectos);
		sb.append(",Defectos="+Defectos);
		sb.append(",Temperatura_="+Temperatura_);
		sb.append(",Nivel_Riesgo_="+Nivel_Riesgo_);
		sb.append(",Tam_Muestra_="+Tam_Muestra_);
		sb.append(",Aprobado_="+Aprobado_);
		sb.append(",in_Contrato="+in_Contrato);
		sb.append(",Contrato_Id="+String.valueOf(Contrato_Id));
		sb.append(",DContrato_Id_="+String.valueOf(DContrato_Id_));
		sb.append(",HDContrato_Id="+String.valueOf(HDContrato_Id));
		sb.append(",Precio="+String.valueOf(Precio));
		sb.append(",Iva="+String.valueOf(Iva));
		sb.append(",VUnitario="+String.valueOf(VUnitario));
		sb.append(",VUnitarioIva_="+String.valueOf(VUnitarioIva_));
		sb.append(",SubTotal_="+String.valueOf(SubTotal_));
		sb.append(",VTotalIva_="+String.valueOf(VTotalIva_));
		sb.append(",Total_="+String.valueOf(Total_));
		sb.append(",numeroFila="+String.valueOf(numeroFila));
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",Estado_="+Estado_);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",errorMessage="+errorMessage);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row20Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class next_8Struct implements routines.system.IPersistableRow<next_8Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 0;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 0;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String INVIMA;

				public String getINVIMA () {
					return this.INVIMA;
				}

				public Boolean INVIMAIsNullable(){
				    return true;
				}
				public Boolean INVIMAIsKey(){
				    return false;
				}
				public Integer INVIMALength(){
				    return 0;
				}
				public Integer INVIMAPrecision(){
				    return 0;
				}
				public String INVIMADefault(){
				
					return null;
				
				}
				public String INVIMAComment(){
				
				    return "";
				
				}
				public String INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String INVIMAOriginalDbColumnName(){
				
					return "INVIMA";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String CANTIDAD_ENVIADA;

				public String getCANTIDAD_ENVIADA () {
					return this.CANTIDAD_ENVIADA;
				}

				public Boolean CANTIDAD_ENVIADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_ENVIADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_ENVIADALength(){
				    return 0;
				}
				public Integer CANTIDAD_ENVIADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_ENVIADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_ENVIADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_ENVIADAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_ENVIADAOriginalDbColumnName(){
				
					return "CANTIDAD_ENVIADA";
				
				}

				
			    public String CANTIDAD_INGRESAR;

				public String getCANTIDAD_INGRESAR () {
					return this.CANTIDAD_INGRESAR;
				}

				public Boolean CANTIDAD_INGRESARIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_INGRESARIsKey(){
				    return false;
				}
				public Integer CANTIDAD_INGRESARLength(){
				    return 0;
				}
				public Integer CANTIDAD_INGRESARPrecision(){
				    return 0;
				}
				public String CANTIDAD_INGRESARDefault(){
				
					return null;
				
				}
				public String CANTIDAD_INGRESARComment(){
				
				    return "";
				
				}
				public String CANTIDAD_INGRESARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_INGRESAROriginalDbColumnName(){
				
					return "CANTIDAD_INGRESAR";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 0;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public String FECHA_VENCIMIENTO;

				public String getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 0;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public String LEYENDA_DE_RESTRICCION;

				public String getLEYENDA_DE_RESTRICCION () {
					return this.LEYENDA_DE_RESTRICCION;
				}

				public Boolean LEYENDA_DE_RESTRICCIONIsNullable(){
				    return true;
				}
				public Boolean LEYENDA_DE_RESTRICCIONIsKey(){
				    return false;
				}
				public Integer LEYENDA_DE_RESTRICCIONLength(){
				    return 0;
				}
				public Integer LEYENDA_DE_RESTRICCIONPrecision(){
				    return 0;
				}
				public String LEYENDA_DE_RESTRICCIONDefault(){
				
					return null;
				
				}
				public String LEYENDA_DE_RESTRICCIONComment(){
				
				    return "";
				
				}
				public String LEYENDA_DE_RESTRICCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LEYENDA_DE_RESTRICCIONOriginalDbColumnName(){
				
					return "LEYENDA_DE_RESTRICCION";
				
				}

				
			    public String DEFECTOS;

				public String getDEFECTOS () {
					return this.DEFECTOS;
				}

				public Boolean DEFECTOSIsNullable(){
				    return true;
				}
				public Boolean DEFECTOSIsKey(){
				    return false;
				}
				public Integer DEFECTOSLength(){
				    return 0;
				}
				public Integer DEFECTOSPrecision(){
				    return 0;
				}
				public String DEFECTOSDefault(){
				
					return null;
				
				}
				public String DEFECTOSComment(){
				
				    return "";
				
				}
				public String DEFECTOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DEFECTOSOriginalDbColumnName(){
				
					return "DEFECTOS";
				
				}

				
			    public String TEMPERATURA;

				public String getTEMPERATURA () {
					return this.TEMPERATURA;
				}

				public Boolean TEMPERATURAIsNullable(){
				    return true;
				}
				public Boolean TEMPERATURAIsKey(){
				    return false;
				}
				public Integer TEMPERATURALength(){
				    return 0;
				}
				public Integer TEMPERATURAPrecision(){
				    return 0;
				}
				public String TEMPERATURADefault(){
				
					return null;
				
				}
				public String TEMPERATURAComment(){
				
				    return "";
				
				}
				public String TEMPERATURAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TEMPERATURAOriginalDbColumnName(){
				
					return "TEMPERATURA";
				
				}

				
			    public String NIVEL_DE_RIESGO;

				public String getNIVEL_DE_RIESGO () {
					return this.NIVEL_DE_RIESGO;
				}

				public Boolean NIVEL_DE_RIESGOIsNullable(){
				    return true;
				}
				public Boolean NIVEL_DE_RIESGOIsKey(){
				    return false;
				}
				public Integer NIVEL_DE_RIESGOLength(){
				    return 0;
				}
				public Integer NIVEL_DE_RIESGOPrecision(){
				    return 0;
				}
				public String NIVEL_DE_RIESGODefault(){
				
					return null;
				
				}
				public String NIVEL_DE_RIESGOComment(){
				
				    return "";
				
				}
				public String NIVEL_DE_RIESGOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIVEL_DE_RIESGOOriginalDbColumnName(){
				
					return "NIVEL_DE_RIESGO";
				
				}

				
			    public String MUESTRA;

				public String getMUESTRA () {
					return this.MUESTRA;
				}

				public Boolean MUESTRAIsNullable(){
				    return true;
				}
				public Boolean MUESTRAIsKey(){
				    return false;
				}
				public Integer MUESTRALength(){
				    return 0;
				}
				public Integer MUESTRAPrecision(){
				    return 0;
				}
				public String MUESTRADefault(){
				
					return null;
				
				}
				public String MUESTRAComment(){
				
				    return "";
				
				}
				public String MUESTRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String MUESTRAOriginalDbColumnName(){
				
					return "MUESTRA";
				
				}

				
			    public String APROBADO;

				public String getAPROBADO () {
					return this.APROBADO;
				}

				public Boolean APROBADOIsNullable(){
				    return true;
				}
				public Boolean APROBADOIsKey(){
				    return false;
				}
				public Integer APROBADOLength(){
				    return 0;
				}
				public Integer APROBADOPrecision(){
				    return 0;
				}
				public String APROBADODefault(){
				
					return null;
				
				}
				public String APROBADOComment(){
				
				    return "";
				
				}
				public String APROBADOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String APROBADOOriginalDbColumnName(){
				
					return "APROBADO";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 0;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("numeroFila="+String.valueOf(numeroFila));
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CUM="+CUM);
		sb.append(",INVIMA="+INVIMA);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",CANTIDAD_ENVIADA="+CANTIDAD_ENVIADA);
		sb.append(",CANTIDAD_INGRESAR="+CANTIDAD_INGRESAR);
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+FECHA_VENCIMIENTO);
		sb.append(",LEYENDA_DE_RESTRICCION="+LEYENDA_DE_RESTRICCION);
		sb.append(",DEFECTOS="+DEFECTOS);
		sb.append(",TEMPERATURA="+TEMPERATURA);
		sb.append(",NIVEL_DE_RIESGO="+NIVEL_DE_RIESGO);
		sb.append(",MUESTRA="+MUESTRA);
		sb.append(",APROBADO="+APROBADO);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(next_8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row15Struct implements routines.system.IPersistableRow<row15Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public BigDecimal TMovimiento_Id_;

				public BigDecimal getTMovimiento_Id_ () {
					return this.TMovimiento_Id_;
				}

				public Boolean TMovimiento_Id_IsNullable(){
				    return true;
				}
				public Boolean TMovimiento_Id_IsKey(){
				    return false;
				}
				public Integer TMovimiento_Id_Length(){
				    return null;
				}
				public Integer TMovimiento_Id_Precision(){
				    return null;
				}
				public String TMovimiento_Id_Default(){
				
					return null;
				
				}
				public String TMovimiento_Id_Comment(){
				
				    return "";
				
				}
				public String TMovimiento_Id_Pattern(){
				
					return "";
				
				}
				public String TMovimiento_Id_OriginalDbColumnName(){
				
					return "TMovimiento_Id_";
				
				}

				
			    public BigDecimal Movimiento_Id_;

				public BigDecimal getMovimiento_Id_ () {
					return this.Movimiento_Id_;
				}

				public Boolean Movimiento_Id_IsNullable(){
				    return true;
				}
				public Boolean Movimiento_Id_IsKey(){
				    return false;
				}
				public Integer Movimiento_Id_Length(){
				    return null;
				}
				public Integer Movimiento_Id_Precision(){
				    return null;
				}
				public String Movimiento_Id_Default(){
				
					return null;
				
				}
				public String Movimiento_Id_Comment(){
				
				    return "";
				
				}
				public String Movimiento_Id_Pattern(){
				
					return "";
				
				}
				public String Movimiento_Id_OriginalDbColumnName(){
				
					return "Movimiento_Id_";
				
				}

				
			    public BigDecimal Bodega_Id_;

				public BigDecimal getBodega_Id_ () {
					return this.Bodega_Id_;
				}

				public Boolean Bodega_Id_IsNullable(){
				    return true;
				}
				public Boolean Bodega_Id_IsKey(){
				    return false;
				}
				public Integer Bodega_Id_Length(){
				    return null;
				}
				public Integer Bodega_Id_Precision(){
				    return null;
				}
				public String Bodega_Id_Default(){
				
					return null;
				
				}
				public String Bodega_Id_Comment(){
				
				    return "";
				
				}
				public String Bodega_Id_Pattern(){
				
					return "";
				
				}
				public String Bodega_Id_OriginalDbColumnName(){
				
					return "Bodega_Id_";
				
				}

				
			    public BigDecimal Usuario_Id_;

				public BigDecimal getUsuario_Id_ () {
					return this.Usuario_Id_;
				}

				public Boolean Usuario_Id_IsNullable(){
				    return true;
				}
				public Boolean Usuario_Id_IsKey(){
				    return false;
				}
				public Integer Usuario_Id_Length(){
				    return null;
				}
				public Integer Usuario_Id_Precision(){
				    return null;
				}
				public String Usuario_Id_Default(){
				
					return null;
				
				}
				public String Usuario_Id_Comment(){
				
				    return "";
				
				}
				public String Usuario_Id_Pattern(){
				
					return "";
				
				}
				public String Usuario_Id_OriginalDbColumnName(){
				
					return "Usuario_Id_";
				
				}

				
			    public BigDecimal Inventario_Id_;

				public BigDecimal getInventario_Id_ () {
					return this.Inventario_Id_;
				}

				public Boolean Inventario_Id_IsNullable(){
				    return true;
				}
				public Boolean Inventario_Id_IsKey(){
				    return false;
				}
				public Integer Inventario_Id_Length(){
				    return null;
				}
				public Integer Inventario_Id_Precision(){
				    return null;
				}
				public String Inventario_Id_Default(){
				
					return null;
				
				}
				public String Inventario_Id_Comment(){
				
				    return "";
				
				}
				public String Inventario_Id_Pattern(){
				
					return "";
				
				}
				public String Inventario_Id_OriginalDbColumnName(){
				
					return "Inventario_Id_";
				
				}

				
			    public BigDecimal PreCantidad_;

				public BigDecimal getPreCantidad_ () {
					return this.PreCantidad_;
				}

				public Boolean PreCantidad_IsNullable(){
				    return true;
				}
				public Boolean PreCantidad_IsKey(){
				    return false;
				}
				public Integer PreCantidad_Length(){
				    return null;
				}
				public Integer PreCantidad_Precision(){
				    return null;
				}
				public String PreCantidad_Default(){
				
					return null;
				
				}
				public String PreCantidad_Comment(){
				
				    return "";
				
				}
				public String PreCantidad_Pattern(){
				
					return "";
				
				}
				public String PreCantidad_OriginalDbColumnName(){
				
					return "PreCantidad_";
				
				}

				
			    public BigDecimal PostCantidad_;

				public BigDecimal getPostCantidad_ () {
					return this.PostCantidad_;
				}

				public Boolean PostCantidad_IsNullable(){
				    return true;
				}
				public Boolean PostCantidad_IsKey(){
				    return false;
				}
				public Integer PostCantidad_Length(){
				    return null;
				}
				public Integer PostCantidad_Precision(){
				    return null;
				}
				public String PostCantidad_Default(){
				
					return null;
				
				}
				public String PostCantidad_Comment(){
				
				    return "";
				
				}
				public String PostCantidad_Pattern(){
				
					return "";
				
				}
				public String PostCantidad_OriginalDbColumnName(){
				
					return "PostCantidad_";
				
				}

				
			    public BigDecimal Producto_Id_;

				public BigDecimal getProducto_Id_ () {
					return this.Producto_Id_;
				}

				public Boolean Producto_Id_IsNullable(){
				    return true;
				}
				public Boolean Producto_Id_IsKey(){
				    return false;
				}
				public Integer Producto_Id_Length(){
				    return null;
				}
				public Integer Producto_Id_Precision(){
				    return null;
				}
				public String Producto_Id_Default(){
				
					return null;
				
				}
				public String Producto_Id_Comment(){
				
				    return "";
				
				}
				public String Producto_Id_Pattern(){
				
					return "";
				
				}
				public String Producto_Id_OriginalDbColumnName(){
				
					return "Producto_Id_";
				
				}

				
			    public String out_Expediente;

				public String getOut_Expediente () {
					return this.out_Expediente;
				}

				public Boolean out_ExpedienteIsNullable(){
				    return true;
				}
				public Boolean out_ExpedienteIsKey(){
				    return false;
				}
				public Integer out_ExpedienteLength(){
				    return null;
				}
				public Integer out_ExpedientePrecision(){
				    return null;
				}
				public String out_ExpedienteDefault(){
				
					return null;
				
				}
				public String out_ExpedienteComment(){
				
				    return "";
				
				}
				public String out_ExpedientePattern(){
				
					return "";
				
				}
				public String out_ExpedienteOriginalDbColumnName(){
				
					return "out_Expediente";
				
				}

				
			    public String out_Consecutivo;

				public String getOut_Consecutivo () {
					return this.out_Consecutivo;
				}

				public Boolean out_ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean out_ConsecutivoIsKey(){
				    return false;
				}
				public Integer out_ConsecutivoLength(){
				    return null;
				}
				public Integer out_ConsecutivoPrecision(){
				    return null;
				}
				public String out_ConsecutivoDefault(){
				
					return null;
				
				}
				public String out_ConsecutivoComment(){
				
				    return "";
				
				}
				public String out_ConsecutivoPattern(){
				
					return "";
				
				}
				public String out_ConsecutivoOriginalDbColumnName(){
				
					return "out_Consecutivo";
				
				}

				
			    public Integer out_CantEnviada;

				public Integer getOut_CantEnviada () {
					return this.out_CantEnviada;
				}

				public Boolean out_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean out_CantEnviadaIsKey(){
				    return false;
				}
				public Integer out_CantEnviadaLength(){
				    return 0;
				}
				public Integer out_CantEnviadaPrecision(){
				    return 0;
				}
				public String out_CantEnviadaDefault(){
				
					return null;
				
				}
				public String out_CantEnviadaComment(){
				
				    return "";
				
				}
				public String out_CantEnviadaPattern(){
				
					return "";
				
				}
				public String out_CantEnviadaOriginalDbColumnName(){
				
					return "out_CantEnviada";
				
				}

				
			    public Integer CantEnviada;

				public Integer getCantEnviada () {
					return this.CantEnviada;
				}

				public Boolean CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean CantEnviadaIsKey(){
				    return false;
				}
				public Integer CantEnviadaLength(){
				    return null;
				}
				public Integer CantEnviadaPrecision(){
				    return null;
				}
				public String CantEnviadaDefault(){
				
					return null;
				
				}
				public String CantEnviadaComment(){
				
				    return "";
				
				}
				public String CantEnviadaPattern(){
				
					return "";
				
				}
				public String CantEnviadaOriginalDbColumnName(){
				
					return "CantEnviada";
				
				}

				
			    public Integer out_CantIngresar;

				public Integer getOut_CantIngresar () {
					return this.out_CantIngresar;
				}

				public Boolean out_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean out_CantIngresarIsKey(){
				    return false;
				}
				public Integer out_CantIngresarLength(){
				    return 0;
				}
				public Integer out_CantIngresarPrecision(){
				    return 0;
				}
				public String out_CantIngresarDefault(){
				
					return null;
				
				}
				public String out_CantIngresarComment(){
				
				    return "";
				
				}
				public String out_CantIngresarPattern(){
				
					return "";
				
				}
				public String out_CantIngresarOriginalDbColumnName(){
				
					return "out_CantIngresar";
				
				}

				
			    public Integer CantIngresar;

				public Integer getCantIngresar () {
					return this.CantIngresar;
				}

				public Boolean CantIngresarIsNullable(){
				    return true;
				}
				public Boolean CantIngresarIsKey(){
				    return false;
				}
				public Integer CantIngresarLength(){
				    return null;
				}
				public Integer CantIngresarPrecision(){
				    return null;
				}
				public String CantIngresarDefault(){
				
					return null;
				
				}
				public String CantIngresarComment(){
				
				    return "";
				
				}
				public String CantIngresarPattern(){
				
					return "";
				
				}
				public String CantIngresarOriginalDbColumnName(){
				
					return "CantIngresar";
				
				}

				
			    public Double out_Temperatura;

				public Double getOut_Temperatura () {
					return this.out_Temperatura;
				}

				public Boolean out_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean out_TemperaturaIsKey(){
				    return false;
				}
				public Integer out_TemperaturaLength(){
				    return null;
				}
				public Integer out_TemperaturaPrecision(){
				    return null;
				}
				public String out_TemperaturaDefault(){
				
					return null;
				
				}
				public String out_TemperaturaComment(){
				
				    return "";
				
				}
				public String out_TemperaturaPattern(){
				
					return "";
				
				}
				public String out_TemperaturaOriginalDbColumnName(){
				
					return "out_Temperatura";
				
				}

				
			    public Integer out_Riesgo;

				public Integer getOut_Riesgo () {
					return this.out_Riesgo;
				}

				public Boolean out_RiesgoIsNullable(){
				    return true;
				}
				public Boolean out_RiesgoIsKey(){
				    return false;
				}
				public Integer out_RiesgoLength(){
				    return null;
				}
				public Integer out_RiesgoPrecision(){
				    return null;
				}
				public String out_RiesgoDefault(){
				
					return null;
				
				}
				public String out_RiesgoComment(){
				
				    return "";
				
				}
				public String out_RiesgoPattern(){
				
					return "";
				
				}
				public String out_RiesgoOriginalDbColumnName(){
				
					return "out_Riesgo";
				
				}

				
			    public Integer out_Muestra;

				public Integer getOut_Muestra () {
					return this.out_Muestra;
				}

				public Boolean out_MuestraIsNullable(){
				    return true;
				}
				public Boolean out_MuestraIsKey(){
				    return false;
				}
				public Integer out_MuestraLength(){
				    return null;
				}
				public Integer out_MuestraPrecision(){
				    return null;
				}
				public String out_MuestraDefault(){
				
					return null;
				
				}
				public String out_MuestraComment(){
				
				    return "";
				
				}
				public String out_MuestraPattern(){
				
					return "";
				
				}
				public String out_MuestraOriginalDbColumnName(){
				
					return "out_Muestra";
				
				}

				
			    public String out_Aprobado;

				public String getOut_Aprobado () {
					return this.out_Aprobado;
				}

				public Boolean out_AprobadoIsNullable(){
				    return true;
				}
				public Boolean out_AprobadoIsKey(){
				    return false;
				}
				public Integer out_AprobadoLength(){
				    return null;
				}
				public Integer out_AprobadoPrecision(){
				    return null;
				}
				public String out_AprobadoDefault(){
				
					return null;
				
				}
				public String out_AprobadoComment(){
				
				    return "";
				
				}
				public String out_AprobadoPattern(){
				
					return "";
				
				}
				public String out_AprobadoOriginalDbColumnName(){
				
					return "out_Aprobado";
				
				}

				
			    public String out_Estado;

				public String getOut_Estado () {
					return this.out_Estado;
				}

				public Boolean out_EstadoIsNullable(){
				    return true;
				}
				public Boolean out_EstadoIsKey(){
				    return false;
				}
				public Integer out_EstadoLength(){
				    return 0;
				}
				public Integer out_EstadoPrecision(){
				    return 0;
				}
				public String out_EstadoDefault(){
				
					return null;
				
				}
				public String out_EstadoComment(){
				
				    return "";
				
				}
				public String out_EstadoPattern(){
				
					return "";
				
				}
				public String out_EstadoOriginalDbColumnName(){
				
					return "out_Estado";
				
				}

				
			    public String out_Message;

				public String getOut_Message () {
					return this.out_Message;
				}

				public Boolean out_MessageIsNullable(){
				    return true;
				}
				public Boolean out_MessageIsKey(){
				    return false;
				}
				public Integer out_MessageLength(){
				    return 0;
				}
				public Integer out_MessagePrecision(){
				    return 0;
				}
				public String out_MessageDefault(){
				
					return null;
				
				}
				public String out_MessageComment(){
				
				    return "";
				
				}
				public String out_MessagePattern(){
				
					return "";
				
				}
				public String out_MessageOriginalDbColumnName(){
				
					return "out_Message";
				
				}

				
			    public String in_CodBarras;

				public String getIn_CodBarras () {
					return this.in_CodBarras;
				}

				public Boolean in_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean in_CodBarrasIsKey(){
				    return false;
				}
				public Integer in_CodBarrasLength(){
				    return 0;
				}
				public Integer in_CodBarrasPrecision(){
				    return 0;
				}
				public String in_CodBarrasDefault(){
				
					return null;
				
				}
				public String in_CodBarrasComment(){
				
				    return "";
				
				}
				public String in_CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CodBarrasOriginalDbColumnName(){
				
					return "in_CodBarras";
				
				}

				
			    public String out_CodBarras;

				public String getOut_CodBarras () {
					return this.out_CodBarras;
				}

				public Boolean out_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean out_CodBarrasIsKey(){
				    return false;
				}
				public Integer out_CodBarrasLength(){
				    return null;
				}
				public Integer out_CodBarrasPrecision(){
				    return null;
				}
				public String out_CodBarrasDefault(){
				
					return null;
				
				}
				public String out_CodBarrasComment(){
				
				    return "";
				
				}
				public String out_CodBarrasPattern(){
				
					return "";
				
				}
				public String out_CodBarrasOriginalDbColumnName(){
				
					return "out_CodBarras";
				
				}

				
			    public String in_Cum;

				public String getIn_Cum () {
					return this.in_Cum;
				}

				public Boolean in_CumIsNullable(){
				    return true;
				}
				public Boolean in_CumIsKey(){
				    return false;
				}
				public Integer in_CumLength(){
				    return 0;
				}
				public Integer in_CumPrecision(){
				    return 0;
				}
				public String in_CumDefault(){
				
					return null;
				
				}
				public String in_CumComment(){
				
				    return "";
				
				}
				public String in_CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CumOriginalDbColumnName(){
				
					return "in_Cum";
				
				}

				
			    public String out_Cum;

				public String getOut_Cum () {
					return this.out_Cum;
				}

				public Boolean out_CumIsNullable(){
				    return true;
				}
				public Boolean out_CumIsKey(){
				    return false;
				}
				public Integer out_CumLength(){
				    return null;
				}
				public Integer out_CumPrecision(){
				    return null;
				}
				public String out_CumDefault(){
				
					return null;
				
				}
				public String out_CumComment(){
				
				    return "";
				
				}
				public String out_CumPattern(){
				
					return "";
				
				}
				public String out_CumOriginalDbColumnName(){
				
					return "out_Cum";
				
				}

				
			    public String in_Invima;

				public String getIn_Invima () {
					return this.in_Invima;
				}

				public Boolean in_InvimaIsNullable(){
				    return true;
				}
				public Boolean in_InvimaIsKey(){
				    return false;
				}
				public Integer in_InvimaLength(){
				    return 0;
				}
				public Integer in_InvimaPrecision(){
				    return 0;
				}
				public String in_InvimaDefault(){
				
					return null;
				
				}
				public String in_InvimaComment(){
				
				    return "";
				
				}
				public String in_InvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_InvimaOriginalDbColumnName(){
				
					return "in_Invima";
				
				}

				
			    public String Cantidad_;

				public String getCantidad_ () {
					return this.Cantidad_;
				}

				public Boolean Cantidad_IsNullable(){
				    return true;
				}
				public Boolean Cantidad_IsKey(){
				    return false;
				}
				public Integer Cantidad_Length(){
				    return 0;
				}
				public Integer Cantidad_Precision(){
				    return 0;
				}
				public String Cantidad_Default(){
				
					return null;
				
				}
				public String Cantidad_Comment(){
				
				    return "";
				
				}
				public String Cantidad_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Cantidad_OriginalDbColumnName(){
				
					return "Cantidad_";
				
				}

				
			    public String CantEsperada;

				public String getCantEsperada () {
					return this.CantEsperada;
				}

				public Boolean CantEsperadaIsNullable(){
				    return true;
				}
				public Boolean CantEsperadaIsKey(){
				    return false;
				}
				public Integer CantEsperadaLength(){
				    return 0;
				}
				public Integer CantEsperadaPrecision(){
				    return 0;
				}
				public String CantEsperadaDefault(){
				
					return null;
				
				}
				public String CantEsperadaComment(){
				
				    return "";
				
				}
				public String CantEsperadaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantEsperadaOriginalDbColumnName(){
				
					return "CantEsperada";
				
				}

				
			    public String Lote_;

				public String getLote_ () {
					return this.Lote_;
				}

				public Boolean Lote_IsNullable(){
				    return true;
				}
				public Boolean Lote_IsKey(){
				    return false;
				}
				public Integer Lote_Length(){
				    return 0;
				}
				public Integer Lote_Precision(){
				    return 0;
				}
				public String Lote_Default(){
				
					return null;
				
				}
				public String Lote_Comment(){
				
				    return "";
				
				}
				public String Lote_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Lote_OriginalDbColumnName(){
				
					return "Lote_";
				
				}

				
			    public String FVencimiento_;

				public String getFVencimiento_ () {
					return this.FVencimiento_;
				}

				public Boolean FVencimiento_IsNullable(){
				    return true;
				}
				public Boolean FVencimiento_IsKey(){
				    return false;
				}
				public Integer FVencimiento_Length(){
				    return 0;
				}
				public Integer FVencimiento_Precision(){
				    return 0;
				}
				public String FVencimiento_Default(){
				
					return null;
				
				}
				public String FVencimiento_Comment(){
				
				    return "";
				
				}
				public String FVencimiento_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVencimiento_OriginalDbColumnName(){
				
					return "FVencimiento_";
				
				}

				
			    public String Restriccion_;

				public String getRestriccion_ () {
					return this.Restriccion_;
				}

				public Boolean Restriccion_IsNullable(){
				    return true;
				}
				public Boolean Restriccion_IsKey(){
				    return false;
				}
				public Integer Restriccion_Length(){
				    return 0;
				}
				public Integer Restriccion_Precision(){
				    return 0;
				}
				public String Restriccion_Default(){
				
					return null;
				
				}
				public String Restriccion_Comment(){
				
				    return "";
				
				}
				public String Restriccion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Restriccion_OriginalDbColumnName(){
				
					return "Restriccion_";
				
				}

				
			    public String in_Defectos;

				public String getIn_Defectos () {
					return this.in_Defectos;
				}

				public Boolean in_DefectosIsNullable(){
				    return true;
				}
				public Boolean in_DefectosIsKey(){
				    return false;
				}
				public Integer in_DefectosLength(){
				    return 0;
				}
				public Integer in_DefectosPrecision(){
				    return 0;
				}
				public String in_DefectosDefault(){
				
					return null;
				
				}
				public String in_DefectosComment(){
				
				    return "";
				
				}
				public String in_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_DefectosOriginalDbColumnName(){
				
					return "in_Defectos";
				
				}

				
			    public String Defectos;

				public String getDefectos () {
					return this.Defectos;
				}

				public Boolean DefectosIsNullable(){
				    return true;
				}
				public Boolean DefectosIsKey(){
				    return false;
				}
				public Integer DefectosLength(){
				    return 0;
				}
				public Integer DefectosPrecision(){
				    return 0;
				}
				public String DefectosDefault(){
				
					return null;
				
				}
				public String DefectosComment(){
				
				    return "";
				
				}
				public String DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DefectosOriginalDbColumnName(){
				
					return "Defectos";
				
				}

				
			    public String Temperatura_;

				public String getTemperatura_ () {
					return this.Temperatura_;
				}

				public Boolean Temperatura_IsNullable(){
				    return true;
				}
				public Boolean Temperatura_IsKey(){
				    return false;
				}
				public Integer Temperatura_Length(){
				    return 0;
				}
				public Integer Temperatura_Precision(){
				    return 0;
				}
				public String Temperatura_Default(){
				
					return null;
				
				}
				public String Temperatura_Comment(){
				
				    return "";
				
				}
				public String Temperatura_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Temperatura_OriginalDbColumnName(){
				
					return "Temperatura_";
				
				}

				
			    public String Nivel_Riesgo_;

				public String getNivel_Riesgo_ () {
					return this.Nivel_Riesgo_;
				}

				public Boolean Nivel_Riesgo_IsNullable(){
				    return true;
				}
				public Boolean Nivel_Riesgo_IsKey(){
				    return false;
				}
				public Integer Nivel_Riesgo_Length(){
				    return 0;
				}
				public Integer Nivel_Riesgo_Precision(){
				    return 0;
				}
				public String Nivel_Riesgo_Default(){
				
					return null;
				
				}
				public String Nivel_Riesgo_Comment(){
				
				    return "";
				
				}
				public String Nivel_Riesgo_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Nivel_Riesgo_OriginalDbColumnName(){
				
					return "Nivel_Riesgo_";
				
				}

				
			    public String Tam_Muestra_;

				public String getTam_Muestra_ () {
					return this.Tam_Muestra_;
				}

				public Boolean Tam_Muestra_IsNullable(){
				    return true;
				}
				public Boolean Tam_Muestra_IsKey(){
				    return false;
				}
				public Integer Tam_Muestra_Length(){
				    return 0;
				}
				public Integer Tam_Muestra_Precision(){
				    return 0;
				}
				public String Tam_Muestra_Default(){
				
					return null;
				
				}
				public String Tam_Muestra_Comment(){
				
				    return "";
				
				}
				public String Tam_Muestra_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Tam_Muestra_OriginalDbColumnName(){
				
					return "Tam_Muestra_";
				
				}

				
			    public String Aprobado_;

				public String getAprobado_ () {
					return this.Aprobado_;
				}

				public Boolean Aprobado_IsNullable(){
				    return true;
				}
				public Boolean Aprobado_IsKey(){
				    return false;
				}
				public Integer Aprobado_Length(){
				    return 0;
				}
				public Integer Aprobado_Precision(){
				    return 0;
				}
				public String Aprobado_Default(){
				
					return null;
				
				}
				public String Aprobado_Comment(){
				
				    return "";
				
				}
				public String Aprobado_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Aprobado_OriginalDbColumnName(){
				
					return "Aprobado_";
				
				}

				
			    public String in_Contrato;

				public String getIn_Contrato () {
					return this.in_Contrato;
				}

				public Boolean in_ContratoIsNullable(){
				    return true;
				}
				public Boolean in_ContratoIsKey(){
				    return false;
				}
				public Integer in_ContratoLength(){
				    return 0;
				}
				public Integer in_ContratoPrecision(){
				    return 0;
				}
				public String in_ContratoDefault(){
				
					return null;
				
				}
				public String in_ContratoComment(){
				
				    return "";
				
				}
				public String in_ContratoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_ContratoOriginalDbColumnName(){
				
					return "in_Contrato";
				
				}

				
			    public BigDecimal Contrato_Id;

				public BigDecimal getContrato_Id () {
					return this.Contrato_Id;
				}

				public Boolean Contrato_IdIsNullable(){
				    return false;
				}
				public Boolean Contrato_IdIsKey(){
				    return false;
				}
				public Integer Contrato_IdLength(){
				    return 0;
				}
				public Integer Contrato_IdPrecision(){
				    return null;
				}
				public String Contrato_IdDefault(){
				
					return "";
				
				}
				public String Contrato_IdComment(){
				
				    return "";
				
				}
				public String Contrato_IdPattern(){
				
					return "";
				
				}
				public String Contrato_IdOriginalDbColumnName(){
				
					return "Contrato_Id";
				
				}

				
			    public BigDecimal DContrato_Id_;

				public BigDecimal getDContrato_Id_ () {
					return this.DContrato_Id_;
				}

				public Boolean DContrato_Id_IsNullable(){
				    return false;
				}
				public Boolean DContrato_Id_IsKey(){
				    return false;
				}
				public Integer DContrato_Id_Length(){
				    return 0;
				}
				public Integer DContrato_Id_Precision(){
				    return null;
				}
				public String DContrato_Id_Default(){
				
					return "";
				
				}
				public String DContrato_Id_Comment(){
				
				    return "";
				
				}
				public String DContrato_Id_Pattern(){
				
					return "";
				
				}
				public String DContrato_Id_OriginalDbColumnName(){
				
					return "DContrato_Id_";
				
				}

				
			    public BigDecimal HDContrato_Id;

				public BigDecimal getHDContrato_Id () {
					return this.HDContrato_Id;
				}

				public Boolean HDContrato_IdIsNullable(){
				    return false;
				}
				public Boolean HDContrato_IdIsKey(){
				    return false;
				}
				public Integer HDContrato_IdLength(){
				    return 0;
				}
				public Integer HDContrato_IdPrecision(){
				    return null;
				}
				public String HDContrato_IdDefault(){
				
					return "";
				
				}
				public String HDContrato_IdComment(){
				
				    return "";
				
				}
				public String HDContrato_IdPattern(){
				
					return "";
				
				}
				public String HDContrato_IdOriginalDbColumnName(){
				
					return "HDContrato_Id";
				
				}

				
			    public BigDecimal Precio;

				public BigDecimal getPrecio () {
					return this.Precio;
				}

				public Boolean PrecioIsNullable(){
				    return false;
				}
				public Boolean PrecioIsKey(){
				    return false;
				}
				public Integer PrecioLength(){
				    return 0;
				}
				public Integer PrecioPrecision(){
				    return null;
				}
				public String PrecioDefault(){
				
					return "";
				
				}
				public String PrecioComment(){
				
				    return "";
				
				}
				public String PrecioPattern(){
				
					return "";
				
				}
				public String PrecioOriginalDbColumnName(){
				
					return "Precio";
				
				}

				
			    public BigDecimal Iva;

				public BigDecimal getIva () {
					return this.Iva;
				}

				public Boolean IvaIsNullable(){
				    return false;
				}
				public Boolean IvaIsKey(){
				    return false;
				}
				public Integer IvaLength(){
				    return 0;
				}
				public Integer IvaPrecision(){
				    return null;
				}
				public String IvaDefault(){
				
					return "";
				
				}
				public String IvaComment(){
				
				    return "";
				
				}
				public String IvaPattern(){
				
					return "";
				
				}
				public String IvaOriginalDbColumnName(){
				
					return "Iva";
				
				}

				
			    public BigDecimal VUnitario;

				public BigDecimal getVUnitario () {
					return this.VUnitario;
				}

				public Boolean VUnitarioIsNullable(){
				    return true;
				}
				public Boolean VUnitarioIsKey(){
				    return false;
				}
				public Integer VUnitarioLength(){
				    return null;
				}
				public Integer VUnitarioPrecision(){
				    return null;
				}
				public String VUnitarioDefault(){
				
					return null;
				
				}
				public String VUnitarioComment(){
				
				    return "";
				
				}
				public String VUnitarioPattern(){
				
					return "";
				
				}
				public String VUnitarioOriginalDbColumnName(){
				
					return "VUnitario";
				
				}

				
			    public BigDecimal VUnitarioIva_;

				public BigDecimal getVUnitarioIva_ () {
					return this.VUnitarioIva_;
				}

				public Boolean VUnitarioIva_IsNullable(){
				    return true;
				}
				public Boolean VUnitarioIva_IsKey(){
				    return false;
				}
				public Integer VUnitarioIva_Length(){
				    return null;
				}
				public Integer VUnitarioIva_Precision(){
				    return null;
				}
				public String VUnitarioIva_Default(){
				
					return null;
				
				}
				public String VUnitarioIva_Comment(){
				
				    return "";
				
				}
				public String VUnitarioIva_Pattern(){
				
					return "";
				
				}
				public String VUnitarioIva_OriginalDbColumnName(){
				
					return "VUnitarioIva_";
				
				}

				
			    public BigDecimal SubTotal_;

				public BigDecimal getSubTotal_ () {
					return this.SubTotal_;
				}

				public Boolean SubTotal_IsNullable(){
				    return true;
				}
				public Boolean SubTotal_IsKey(){
				    return false;
				}
				public Integer SubTotal_Length(){
				    return null;
				}
				public Integer SubTotal_Precision(){
				    return null;
				}
				public String SubTotal_Default(){
				
					return null;
				
				}
				public String SubTotal_Comment(){
				
				    return "";
				
				}
				public String SubTotal_Pattern(){
				
					return "";
				
				}
				public String SubTotal_OriginalDbColumnName(){
				
					return "SubTotal_";
				
				}

				
			    public BigDecimal VTotalIva_;

				public BigDecimal getVTotalIva_ () {
					return this.VTotalIva_;
				}

				public Boolean VTotalIva_IsNullable(){
				    return true;
				}
				public Boolean VTotalIva_IsKey(){
				    return false;
				}
				public Integer VTotalIva_Length(){
				    return null;
				}
				public Integer VTotalIva_Precision(){
				    return null;
				}
				public String VTotalIva_Default(){
				
					return null;
				
				}
				public String VTotalIva_Comment(){
				
				    return "";
				
				}
				public String VTotalIva_Pattern(){
				
					return "";
				
				}
				public String VTotalIva_OriginalDbColumnName(){
				
					return "VTotalIva_";
				
				}

				
			    public BigDecimal Total_;

				public BigDecimal getTotal_ () {
					return this.Total_;
				}

				public Boolean Total_IsNullable(){
				    return true;
				}
				public Boolean Total_IsKey(){
				    return false;
				}
				public Integer Total_Length(){
				    return null;
				}
				public Integer Total_Precision(){
				    return null;
				}
				public String Total_Default(){
				
					return null;
				
				}
				public String Total_Comment(){
				
				    return "";
				
				}
				public String Total_Pattern(){
				
					return "";
				
				}
				public String Total_OriginalDbColumnName(){
				
					return "Total_";
				
				}

				
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.TMovimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Movimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Bodega_Id_ = (BigDecimal) dis.readObject();
					
						this.Usuario_Id_ = (BigDecimal) dis.readObject();
					
						this.Inventario_Id_ = (BigDecimal) dis.readObject();
					
						this.PreCantidad_ = (BigDecimal) dis.readObject();
					
						this.PostCantidad_ = (BigDecimal) dis.readObject();
					
						this.Producto_Id_ = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
						this.CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.Cantidad_ = readString(dis);
					
					this.CantEsperada = readString(dis);
					
					this.Lote_ = readString(dis);
					
					this.FVencimiento_ = readString(dis);
					
					this.Restriccion_ = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.Defectos = readString(dis);
					
					this.Temperatura_ = readString(dis);
					
					this.Nivel_Riesgo_ = readString(dis);
					
					this.Tam_Muestra_ = readString(dis);
					
					this.Aprobado_ = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
						this.DContrato_Id_ = (BigDecimal) dis.readObject();
					
						this.HDContrato_Id = (BigDecimal) dis.readObject();
					
						this.Precio = (BigDecimal) dis.readObject();
					
						this.Iva = (BigDecimal) dis.readObject();
					
						this.VUnitario = (BigDecimal) dis.readObject();
					
						this.VUnitarioIva_ = (BigDecimal) dis.readObject();
					
						this.SubTotal_ = (BigDecimal) dis.readObject();
					
						this.VTotalIva_ = (BigDecimal) dis.readObject();
					
						this.Total_ = (BigDecimal) dis.readObject();
					
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.TMovimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Movimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Bodega_Id_ = (BigDecimal) dis.readObject();
					
						this.Usuario_Id_ = (BigDecimal) dis.readObject();
					
						this.Inventario_Id_ = (BigDecimal) dis.readObject();
					
						this.PreCantidad_ = (BigDecimal) dis.readObject();
					
						this.PostCantidad_ = (BigDecimal) dis.readObject();
					
						this.Producto_Id_ = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
						this.CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.Cantidad_ = readString(dis);
					
					this.CantEsperada = readString(dis);
					
					this.Lote_ = readString(dis);
					
					this.FVencimiento_ = readString(dis);
					
					this.Restriccion_ = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.Defectos = readString(dis);
					
					this.Temperatura_ = readString(dis);
					
					this.Nivel_Riesgo_ = readString(dis);
					
					this.Tam_Muestra_ = readString(dis);
					
					this.Aprobado_ = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
						this.DContrato_Id_ = (BigDecimal) dis.readObject();
					
						this.HDContrato_Id = (BigDecimal) dis.readObject();
					
						this.Precio = (BigDecimal) dis.readObject();
					
						this.Iva = (BigDecimal) dis.readObject();
					
						this.VUnitario = (BigDecimal) dis.readObject();
					
						this.VUnitarioIva_ = (BigDecimal) dis.readObject();
					
						this.SubTotal_ = (BigDecimal) dis.readObject();
					
						this.VTotalIva_ = (BigDecimal) dis.readObject();
					
						this.Total_ = (BigDecimal) dis.readObject();
					
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.TMovimiento_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Movimiento_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Bodega_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Usuario_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Inventario_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PreCantidad_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PostCantidad_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Producto_Id_);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Integer
				
						writeInteger(this.CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.Cantidad_,dos);
					
					// String
				
						writeString(this.CantEsperada,dos);
					
					// String
				
						writeString(this.Lote_,dos);
					
					// String
				
						writeString(this.FVencimiento_,dos);
					
					// String
				
						writeString(this.Restriccion_,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.Defectos,dos);
					
					// String
				
						writeString(this.Temperatura_,dos);
					
					// String
				
						writeString(this.Nivel_Riesgo_,dos);
					
					// String
				
						writeString(this.Tam_Muestra_,dos);
					
					// String
				
						writeString(this.Aprobado_,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Contrato_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DContrato_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.HDContrato_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Precio);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Iva);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VUnitario);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VUnitarioIva_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SubTotal_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VTotalIva_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Total_);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TMovimiento_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Movimiento_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Bodega_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Usuario_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Inventario_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PreCantidad_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PostCantidad_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Producto_Id_);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Integer
				
						writeInteger(this.CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.Cantidad_,dos);
					
					// String
				
						writeString(this.CantEsperada,dos);
					
					// String
				
						writeString(this.Lote_,dos);
					
					// String
				
						writeString(this.FVencimiento_,dos);
					
					// String
				
						writeString(this.Restriccion_,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.Defectos,dos);
					
					// String
				
						writeString(this.Temperatura_,dos);
					
					// String
				
						writeString(this.Nivel_Riesgo_,dos);
					
					// String
				
						writeString(this.Tam_Muestra_,dos);
					
					// String
				
						writeString(this.Aprobado_,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Contrato_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DContrato_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.HDContrato_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Precio);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Iva);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VUnitario);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VUnitarioIva_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SubTotal_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VTotalIva_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Total_);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TMovimiento_Id_="+String.valueOf(TMovimiento_Id_));
		sb.append(",Movimiento_Id_="+String.valueOf(Movimiento_Id_));
		sb.append(",Bodega_Id_="+String.valueOf(Bodega_Id_));
		sb.append(",Usuario_Id_="+String.valueOf(Usuario_Id_));
		sb.append(",Inventario_Id_="+String.valueOf(Inventario_Id_));
		sb.append(",PreCantidad_="+String.valueOf(PreCantidad_));
		sb.append(",PostCantidad_="+String.valueOf(PostCantidad_));
		sb.append(",Producto_Id_="+String.valueOf(Producto_Id_));
		sb.append(",out_Expediente="+out_Expediente);
		sb.append(",out_Consecutivo="+out_Consecutivo);
		sb.append(",out_CantEnviada="+String.valueOf(out_CantEnviada));
		sb.append(",CantEnviada="+String.valueOf(CantEnviada));
		sb.append(",out_CantIngresar="+String.valueOf(out_CantIngresar));
		sb.append(",CantIngresar="+String.valueOf(CantIngresar));
		sb.append(",out_Temperatura="+String.valueOf(out_Temperatura));
		sb.append(",out_Riesgo="+String.valueOf(out_Riesgo));
		sb.append(",out_Muestra="+String.valueOf(out_Muestra));
		sb.append(",out_Aprobado="+out_Aprobado);
		sb.append(",out_Estado="+out_Estado);
		sb.append(",out_Message="+out_Message);
		sb.append(",in_CodBarras="+in_CodBarras);
		sb.append(",out_CodBarras="+out_CodBarras);
		sb.append(",in_Cum="+in_Cum);
		sb.append(",out_Cum="+out_Cum);
		sb.append(",in_Invima="+in_Invima);
		sb.append(",Cantidad_="+Cantidad_);
		sb.append(",CantEsperada="+CantEsperada);
		sb.append(",Lote_="+Lote_);
		sb.append(",FVencimiento_="+FVencimiento_);
		sb.append(",Restriccion_="+Restriccion_);
		sb.append(",in_Defectos="+in_Defectos);
		sb.append(",Defectos="+Defectos);
		sb.append(",Temperatura_="+Temperatura_);
		sb.append(",Nivel_Riesgo_="+Nivel_Riesgo_);
		sb.append(",Tam_Muestra_="+Tam_Muestra_);
		sb.append(",Aprobado_="+Aprobado_);
		sb.append(",in_Contrato="+in_Contrato);
		sb.append(",Contrato_Id="+String.valueOf(Contrato_Id));
		sb.append(",DContrato_Id_="+String.valueOf(DContrato_Id_));
		sb.append(",HDContrato_Id="+String.valueOf(HDContrato_Id));
		sb.append(",Precio="+String.valueOf(Precio));
		sb.append(",Iva="+String.valueOf(Iva));
		sb.append(",VUnitario="+String.valueOf(VUnitario));
		sb.append(",VUnitarioIva_="+String.valueOf(VUnitarioIva_));
		sb.append(",SubTotal_="+String.valueOf(SubTotal_));
		sb.append(",VTotalIva_="+String.valueOf(VTotalIva_));
		sb.append(",Total_="+String.valueOf(Total_));
		sb.append(",numeroFila="+String.valueOf(numeroFila));
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",Estado_="+Estado_);
		sb.append(",Respuesta_="+Respuesta_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public BigDecimal TMovimiento_Id_;

				public BigDecimal getTMovimiento_Id_ () {
					return this.TMovimiento_Id_;
				}

				public Boolean TMovimiento_Id_IsNullable(){
				    return true;
				}
				public Boolean TMovimiento_Id_IsKey(){
				    return false;
				}
				public Integer TMovimiento_Id_Length(){
				    return null;
				}
				public Integer TMovimiento_Id_Precision(){
				    return null;
				}
				public String TMovimiento_Id_Default(){
				
					return null;
				
				}
				public String TMovimiento_Id_Comment(){
				
				    return "";
				
				}
				public String TMovimiento_Id_Pattern(){
				
					return "";
				
				}
				public String TMovimiento_Id_OriginalDbColumnName(){
				
					return "TMovimiento_Id_";
				
				}

				
			    public BigDecimal Movimiento_Id_;

				public BigDecimal getMovimiento_Id_ () {
					return this.Movimiento_Id_;
				}

				public Boolean Movimiento_Id_IsNullable(){
				    return true;
				}
				public Boolean Movimiento_Id_IsKey(){
				    return false;
				}
				public Integer Movimiento_Id_Length(){
				    return null;
				}
				public Integer Movimiento_Id_Precision(){
				    return null;
				}
				public String Movimiento_Id_Default(){
				
					return null;
				
				}
				public String Movimiento_Id_Comment(){
				
				    return "";
				
				}
				public String Movimiento_Id_Pattern(){
				
					return "";
				
				}
				public String Movimiento_Id_OriginalDbColumnName(){
				
					return "Movimiento_Id_";
				
				}

				
			    public BigDecimal Bodega_Id_;

				public BigDecimal getBodega_Id_ () {
					return this.Bodega_Id_;
				}

				public Boolean Bodega_Id_IsNullable(){
				    return true;
				}
				public Boolean Bodega_Id_IsKey(){
				    return false;
				}
				public Integer Bodega_Id_Length(){
				    return null;
				}
				public Integer Bodega_Id_Precision(){
				    return null;
				}
				public String Bodega_Id_Default(){
				
					return null;
				
				}
				public String Bodega_Id_Comment(){
				
				    return "";
				
				}
				public String Bodega_Id_Pattern(){
				
					return "";
				
				}
				public String Bodega_Id_OriginalDbColumnName(){
				
					return "Bodega_Id_";
				
				}

				
			    public BigDecimal Usuario_Id_;

				public BigDecimal getUsuario_Id_ () {
					return this.Usuario_Id_;
				}

				public Boolean Usuario_Id_IsNullable(){
				    return true;
				}
				public Boolean Usuario_Id_IsKey(){
				    return false;
				}
				public Integer Usuario_Id_Length(){
				    return null;
				}
				public Integer Usuario_Id_Precision(){
				    return null;
				}
				public String Usuario_Id_Default(){
				
					return null;
				
				}
				public String Usuario_Id_Comment(){
				
				    return "";
				
				}
				public String Usuario_Id_Pattern(){
				
					return "";
				
				}
				public String Usuario_Id_OriginalDbColumnName(){
				
					return "Usuario_Id_";
				
				}

				
			    public BigDecimal Inventario_Id_;

				public BigDecimal getInventario_Id_ () {
					return this.Inventario_Id_;
				}

				public Boolean Inventario_Id_IsNullable(){
				    return true;
				}
				public Boolean Inventario_Id_IsKey(){
				    return false;
				}
				public Integer Inventario_Id_Length(){
				    return null;
				}
				public Integer Inventario_Id_Precision(){
				    return null;
				}
				public String Inventario_Id_Default(){
				
					return null;
				
				}
				public String Inventario_Id_Comment(){
				
				    return "";
				
				}
				public String Inventario_Id_Pattern(){
				
					return "";
				
				}
				public String Inventario_Id_OriginalDbColumnName(){
				
					return "Inventario_Id_";
				
				}

				
			    public BigDecimal PreCantidad_;

				public BigDecimal getPreCantidad_ () {
					return this.PreCantidad_;
				}

				public Boolean PreCantidad_IsNullable(){
				    return true;
				}
				public Boolean PreCantidad_IsKey(){
				    return false;
				}
				public Integer PreCantidad_Length(){
				    return null;
				}
				public Integer PreCantidad_Precision(){
				    return null;
				}
				public String PreCantidad_Default(){
				
					return null;
				
				}
				public String PreCantidad_Comment(){
				
				    return "";
				
				}
				public String PreCantidad_Pattern(){
				
					return "";
				
				}
				public String PreCantidad_OriginalDbColumnName(){
				
					return "PreCantidad_";
				
				}

				
			    public BigDecimal PostCantidad_;

				public BigDecimal getPostCantidad_ () {
					return this.PostCantidad_;
				}

				public Boolean PostCantidad_IsNullable(){
				    return true;
				}
				public Boolean PostCantidad_IsKey(){
				    return false;
				}
				public Integer PostCantidad_Length(){
				    return null;
				}
				public Integer PostCantidad_Precision(){
				    return null;
				}
				public String PostCantidad_Default(){
				
					return null;
				
				}
				public String PostCantidad_Comment(){
				
				    return "";
				
				}
				public String PostCantidad_Pattern(){
				
					return "";
				
				}
				public String PostCantidad_OriginalDbColumnName(){
				
					return "PostCantidad_";
				
				}

				
			    public BigDecimal Producto_Id_;

				public BigDecimal getProducto_Id_ () {
					return this.Producto_Id_;
				}

				public Boolean Producto_Id_IsNullable(){
				    return true;
				}
				public Boolean Producto_Id_IsKey(){
				    return false;
				}
				public Integer Producto_Id_Length(){
				    return null;
				}
				public Integer Producto_Id_Precision(){
				    return null;
				}
				public String Producto_Id_Default(){
				
					return null;
				
				}
				public String Producto_Id_Comment(){
				
				    return "";
				
				}
				public String Producto_Id_Pattern(){
				
					return "";
				
				}
				public String Producto_Id_OriginalDbColumnName(){
				
					return "Producto_Id_";
				
				}

				
			    public String out_Expediente;

				public String getOut_Expediente () {
					return this.out_Expediente;
				}

				public Boolean out_ExpedienteIsNullable(){
				    return true;
				}
				public Boolean out_ExpedienteIsKey(){
				    return false;
				}
				public Integer out_ExpedienteLength(){
				    return null;
				}
				public Integer out_ExpedientePrecision(){
				    return null;
				}
				public String out_ExpedienteDefault(){
				
					return null;
				
				}
				public String out_ExpedienteComment(){
				
				    return "";
				
				}
				public String out_ExpedientePattern(){
				
					return "";
				
				}
				public String out_ExpedienteOriginalDbColumnName(){
				
					return "out_Expediente";
				
				}

				
			    public String out_Consecutivo;

				public String getOut_Consecutivo () {
					return this.out_Consecutivo;
				}

				public Boolean out_ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean out_ConsecutivoIsKey(){
				    return false;
				}
				public Integer out_ConsecutivoLength(){
				    return null;
				}
				public Integer out_ConsecutivoPrecision(){
				    return null;
				}
				public String out_ConsecutivoDefault(){
				
					return null;
				
				}
				public String out_ConsecutivoComment(){
				
				    return "";
				
				}
				public String out_ConsecutivoPattern(){
				
					return "";
				
				}
				public String out_ConsecutivoOriginalDbColumnName(){
				
					return "out_Consecutivo";
				
				}

				
			    public Integer out_CantEnviada;

				public Integer getOut_CantEnviada () {
					return this.out_CantEnviada;
				}

				public Boolean out_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean out_CantEnviadaIsKey(){
				    return false;
				}
				public Integer out_CantEnviadaLength(){
				    return 0;
				}
				public Integer out_CantEnviadaPrecision(){
				    return 0;
				}
				public String out_CantEnviadaDefault(){
				
					return null;
				
				}
				public String out_CantEnviadaComment(){
				
				    return "";
				
				}
				public String out_CantEnviadaPattern(){
				
					return "";
				
				}
				public String out_CantEnviadaOriginalDbColumnName(){
				
					return "out_CantEnviada";
				
				}

				
			    public Integer CantEnviada;

				public Integer getCantEnviada () {
					return this.CantEnviada;
				}

				public Boolean CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean CantEnviadaIsKey(){
				    return false;
				}
				public Integer CantEnviadaLength(){
				    return null;
				}
				public Integer CantEnviadaPrecision(){
				    return null;
				}
				public String CantEnviadaDefault(){
				
					return null;
				
				}
				public String CantEnviadaComment(){
				
				    return "";
				
				}
				public String CantEnviadaPattern(){
				
					return "";
				
				}
				public String CantEnviadaOriginalDbColumnName(){
				
					return "CantEnviada";
				
				}

				
			    public Integer out_CantIngresar;

				public Integer getOut_CantIngresar () {
					return this.out_CantIngresar;
				}

				public Boolean out_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean out_CantIngresarIsKey(){
				    return false;
				}
				public Integer out_CantIngresarLength(){
				    return 0;
				}
				public Integer out_CantIngresarPrecision(){
				    return 0;
				}
				public String out_CantIngresarDefault(){
				
					return null;
				
				}
				public String out_CantIngresarComment(){
				
				    return "";
				
				}
				public String out_CantIngresarPattern(){
				
					return "";
				
				}
				public String out_CantIngresarOriginalDbColumnName(){
				
					return "out_CantIngresar";
				
				}

				
			    public Integer CantIngresar;

				public Integer getCantIngresar () {
					return this.CantIngresar;
				}

				public Boolean CantIngresarIsNullable(){
				    return true;
				}
				public Boolean CantIngresarIsKey(){
				    return false;
				}
				public Integer CantIngresarLength(){
				    return null;
				}
				public Integer CantIngresarPrecision(){
				    return null;
				}
				public String CantIngresarDefault(){
				
					return null;
				
				}
				public String CantIngresarComment(){
				
				    return "";
				
				}
				public String CantIngresarPattern(){
				
					return "";
				
				}
				public String CantIngresarOriginalDbColumnName(){
				
					return "CantIngresar";
				
				}

				
			    public Double out_Temperatura;

				public Double getOut_Temperatura () {
					return this.out_Temperatura;
				}

				public Boolean out_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean out_TemperaturaIsKey(){
				    return false;
				}
				public Integer out_TemperaturaLength(){
				    return null;
				}
				public Integer out_TemperaturaPrecision(){
				    return null;
				}
				public String out_TemperaturaDefault(){
				
					return null;
				
				}
				public String out_TemperaturaComment(){
				
				    return "";
				
				}
				public String out_TemperaturaPattern(){
				
					return "";
				
				}
				public String out_TemperaturaOriginalDbColumnName(){
				
					return "out_Temperatura";
				
				}

				
			    public Integer out_Riesgo;

				public Integer getOut_Riesgo () {
					return this.out_Riesgo;
				}

				public Boolean out_RiesgoIsNullable(){
				    return true;
				}
				public Boolean out_RiesgoIsKey(){
				    return false;
				}
				public Integer out_RiesgoLength(){
				    return null;
				}
				public Integer out_RiesgoPrecision(){
				    return null;
				}
				public String out_RiesgoDefault(){
				
					return null;
				
				}
				public String out_RiesgoComment(){
				
				    return "";
				
				}
				public String out_RiesgoPattern(){
				
					return "";
				
				}
				public String out_RiesgoOriginalDbColumnName(){
				
					return "out_Riesgo";
				
				}

				
			    public Integer out_Muestra;

				public Integer getOut_Muestra () {
					return this.out_Muestra;
				}

				public Boolean out_MuestraIsNullable(){
				    return true;
				}
				public Boolean out_MuestraIsKey(){
				    return false;
				}
				public Integer out_MuestraLength(){
				    return null;
				}
				public Integer out_MuestraPrecision(){
				    return null;
				}
				public String out_MuestraDefault(){
				
					return null;
				
				}
				public String out_MuestraComment(){
				
				    return "";
				
				}
				public String out_MuestraPattern(){
				
					return "";
				
				}
				public String out_MuestraOriginalDbColumnName(){
				
					return "out_Muestra";
				
				}

				
			    public String out_Aprobado;

				public String getOut_Aprobado () {
					return this.out_Aprobado;
				}

				public Boolean out_AprobadoIsNullable(){
				    return true;
				}
				public Boolean out_AprobadoIsKey(){
				    return false;
				}
				public Integer out_AprobadoLength(){
				    return null;
				}
				public Integer out_AprobadoPrecision(){
				    return null;
				}
				public String out_AprobadoDefault(){
				
					return null;
				
				}
				public String out_AprobadoComment(){
				
				    return "";
				
				}
				public String out_AprobadoPattern(){
				
					return "";
				
				}
				public String out_AprobadoOriginalDbColumnName(){
				
					return "out_Aprobado";
				
				}

				
			    public String out_Estado;

				public String getOut_Estado () {
					return this.out_Estado;
				}

				public Boolean out_EstadoIsNullable(){
				    return true;
				}
				public Boolean out_EstadoIsKey(){
				    return false;
				}
				public Integer out_EstadoLength(){
				    return 0;
				}
				public Integer out_EstadoPrecision(){
				    return 0;
				}
				public String out_EstadoDefault(){
				
					return null;
				
				}
				public String out_EstadoComment(){
				
				    return "";
				
				}
				public String out_EstadoPattern(){
				
					return "";
				
				}
				public String out_EstadoOriginalDbColumnName(){
				
					return "out_Estado";
				
				}

				
			    public String out_Message;

				public String getOut_Message () {
					return this.out_Message;
				}

				public Boolean out_MessageIsNullable(){
				    return true;
				}
				public Boolean out_MessageIsKey(){
				    return false;
				}
				public Integer out_MessageLength(){
				    return 0;
				}
				public Integer out_MessagePrecision(){
				    return 0;
				}
				public String out_MessageDefault(){
				
					return null;
				
				}
				public String out_MessageComment(){
				
				    return "";
				
				}
				public String out_MessagePattern(){
				
					return "";
				
				}
				public String out_MessageOriginalDbColumnName(){
				
					return "out_Message";
				
				}

				
			    public String in_CodBarras;

				public String getIn_CodBarras () {
					return this.in_CodBarras;
				}

				public Boolean in_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean in_CodBarrasIsKey(){
				    return false;
				}
				public Integer in_CodBarrasLength(){
				    return 0;
				}
				public Integer in_CodBarrasPrecision(){
				    return 0;
				}
				public String in_CodBarrasDefault(){
				
					return null;
				
				}
				public String in_CodBarrasComment(){
				
				    return "";
				
				}
				public String in_CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CodBarrasOriginalDbColumnName(){
				
					return "in_CodBarras";
				
				}

				
			    public String out_CodBarras;

				public String getOut_CodBarras () {
					return this.out_CodBarras;
				}

				public Boolean out_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean out_CodBarrasIsKey(){
				    return false;
				}
				public Integer out_CodBarrasLength(){
				    return null;
				}
				public Integer out_CodBarrasPrecision(){
				    return null;
				}
				public String out_CodBarrasDefault(){
				
					return null;
				
				}
				public String out_CodBarrasComment(){
				
				    return "";
				
				}
				public String out_CodBarrasPattern(){
				
					return "";
				
				}
				public String out_CodBarrasOriginalDbColumnName(){
				
					return "out_CodBarras";
				
				}

				
			    public String in_Cum;

				public String getIn_Cum () {
					return this.in_Cum;
				}

				public Boolean in_CumIsNullable(){
				    return true;
				}
				public Boolean in_CumIsKey(){
				    return false;
				}
				public Integer in_CumLength(){
				    return 0;
				}
				public Integer in_CumPrecision(){
				    return 0;
				}
				public String in_CumDefault(){
				
					return null;
				
				}
				public String in_CumComment(){
				
				    return "";
				
				}
				public String in_CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CumOriginalDbColumnName(){
				
					return "in_Cum";
				
				}

				
			    public String out_Cum;

				public String getOut_Cum () {
					return this.out_Cum;
				}

				public Boolean out_CumIsNullable(){
				    return true;
				}
				public Boolean out_CumIsKey(){
				    return false;
				}
				public Integer out_CumLength(){
				    return null;
				}
				public Integer out_CumPrecision(){
				    return null;
				}
				public String out_CumDefault(){
				
					return null;
				
				}
				public String out_CumComment(){
				
				    return "";
				
				}
				public String out_CumPattern(){
				
					return "";
				
				}
				public String out_CumOriginalDbColumnName(){
				
					return "out_Cum";
				
				}

				
			    public String in_Invima;

				public String getIn_Invima () {
					return this.in_Invima;
				}

				public Boolean in_InvimaIsNullable(){
				    return true;
				}
				public Boolean in_InvimaIsKey(){
				    return false;
				}
				public Integer in_InvimaLength(){
				    return 0;
				}
				public Integer in_InvimaPrecision(){
				    return 0;
				}
				public String in_InvimaDefault(){
				
					return null;
				
				}
				public String in_InvimaComment(){
				
				    return "";
				
				}
				public String in_InvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_InvimaOriginalDbColumnName(){
				
					return "in_Invima";
				
				}

				
			    public String Cantidad_;

				public String getCantidad_ () {
					return this.Cantidad_;
				}

				public Boolean Cantidad_IsNullable(){
				    return true;
				}
				public Boolean Cantidad_IsKey(){
				    return false;
				}
				public Integer Cantidad_Length(){
				    return 0;
				}
				public Integer Cantidad_Precision(){
				    return 0;
				}
				public String Cantidad_Default(){
				
					return null;
				
				}
				public String Cantidad_Comment(){
				
				    return "";
				
				}
				public String Cantidad_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Cantidad_OriginalDbColumnName(){
				
					return "Cantidad_";
				
				}

				
			    public String CantEsperada;

				public String getCantEsperada () {
					return this.CantEsperada;
				}

				public Boolean CantEsperadaIsNullable(){
				    return true;
				}
				public Boolean CantEsperadaIsKey(){
				    return false;
				}
				public Integer CantEsperadaLength(){
				    return 0;
				}
				public Integer CantEsperadaPrecision(){
				    return 0;
				}
				public String CantEsperadaDefault(){
				
					return null;
				
				}
				public String CantEsperadaComment(){
				
				    return "";
				
				}
				public String CantEsperadaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantEsperadaOriginalDbColumnName(){
				
					return "CantEsperada";
				
				}

				
			    public String Lote_;

				public String getLote_ () {
					return this.Lote_;
				}

				public Boolean Lote_IsNullable(){
				    return true;
				}
				public Boolean Lote_IsKey(){
				    return false;
				}
				public Integer Lote_Length(){
				    return 0;
				}
				public Integer Lote_Precision(){
				    return 0;
				}
				public String Lote_Default(){
				
					return null;
				
				}
				public String Lote_Comment(){
				
				    return "";
				
				}
				public String Lote_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Lote_OriginalDbColumnName(){
				
					return "Lote_";
				
				}

				
			    public String FVencimiento_;

				public String getFVencimiento_ () {
					return this.FVencimiento_;
				}

				public Boolean FVencimiento_IsNullable(){
				    return true;
				}
				public Boolean FVencimiento_IsKey(){
				    return false;
				}
				public Integer FVencimiento_Length(){
				    return 0;
				}
				public Integer FVencimiento_Precision(){
				    return 0;
				}
				public String FVencimiento_Default(){
				
					return null;
				
				}
				public String FVencimiento_Comment(){
				
				    return "";
				
				}
				public String FVencimiento_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVencimiento_OriginalDbColumnName(){
				
					return "FVencimiento_";
				
				}

				
			    public String Restriccion_;

				public String getRestriccion_ () {
					return this.Restriccion_;
				}

				public Boolean Restriccion_IsNullable(){
				    return true;
				}
				public Boolean Restriccion_IsKey(){
				    return false;
				}
				public Integer Restriccion_Length(){
				    return 0;
				}
				public Integer Restriccion_Precision(){
				    return 0;
				}
				public String Restriccion_Default(){
				
					return null;
				
				}
				public String Restriccion_Comment(){
				
				    return "";
				
				}
				public String Restriccion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Restriccion_OriginalDbColumnName(){
				
					return "Restriccion_";
				
				}

				
			    public String in_Defectos;

				public String getIn_Defectos () {
					return this.in_Defectos;
				}

				public Boolean in_DefectosIsNullable(){
				    return true;
				}
				public Boolean in_DefectosIsKey(){
				    return false;
				}
				public Integer in_DefectosLength(){
				    return 0;
				}
				public Integer in_DefectosPrecision(){
				    return 0;
				}
				public String in_DefectosDefault(){
				
					return null;
				
				}
				public String in_DefectosComment(){
				
				    return "";
				
				}
				public String in_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_DefectosOriginalDbColumnName(){
				
					return "in_Defectos";
				
				}

				
			    public String Defectos;

				public String getDefectos () {
					return this.Defectos;
				}

				public Boolean DefectosIsNullable(){
				    return true;
				}
				public Boolean DefectosIsKey(){
				    return false;
				}
				public Integer DefectosLength(){
				    return 0;
				}
				public Integer DefectosPrecision(){
				    return 0;
				}
				public String DefectosDefault(){
				
					return null;
				
				}
				public String DefectosComment(){
				
				    return "";
				
				}
				public String DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DefectosOriginalDbColumnName(){
				
					return "Defectos";
				
				}

				
			    public String Temperatura_;

				public String getTemperatura_ () {
					return this.Temperatura_;
				}

				public Boolean Temperatura_IsNullable(){
				    return true;
				}
				public Boolean Temperatura_IsKey(){
				    return false;
				}
				public Integer Temperatura_Length(){
				    return 0;
				}
				public Integer Temperatura_Precision(){
				    return 0;
				}
				public String Temperatura_Default(){
				
					return null;
				
				}
				public String Temperatura_Comment(){
				
				    return "";
				
				}
				public String Temperatura_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Temperatura_OriginalDbColumnName(){
				
					return "Temperatura_";
				
				}

				
			    public String Nivel_Riesgo_;

				public String getNivel_Riesgo_ () {
					return this.Nivel_Riesgo_;
				}

				public Boolean Nivel_Riesgo_IsNullable(){
				    return true;
				}
				public Boolean Nivel_Riesgo_IsKey(){
				    return false;
				}
				public Integer Nivel_Riesgo_Length(){
				    return 0;
				}
				public Integer Nivel_Riesgo_Precision(){
				    return 0;
				}
				public String Nivel_Riesgo_Default(){
				
					return null;
				
				}
				public String Nivel_Riesgo_Comment(){
				
				    return "";
				
				}
				public String Nivel_Riesgo_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Nivel_Riesgo_OriginalDbColumnName(){
				
					return "Nivel_Riesgo_";
				
				}

				
			    public String Tam_Muestra_;

				public String getTam_Muestra_ () {
					return this.Tam_Muestra_;
				}

				public Boolean Tam_Muestra_IsNullable(){
				    return true;
				}
				public Boolean Tam_Muestra_IsKey(){
				    return false;
				}
				public Integer Tam_Muestra_Length(){
				    return 0;
				}
				public Integer Tam_Muestra_Precision(){
				    return 0;
				}
				public String Tam_Muestra_Default(){
				
					return null;
				
				}
				public String Tam_Muestra_Comment(){
				
				    return "";
				
				}
				public String Tam_Muestra_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Tam_Muestra_OriginalDbColumnName(){
				
					return "Tam_Muestra_";
				
				}

				
			    public String Aprobado_;

				public String getAprobado_ () {
					return this.Aprobado_;
				}

				public Boolean Aprobado_IsNullable(){
				    return true;
				}
				public Boolean Aprobado_IsKey(){
				    return false;
				}
				public Integer Aprobado_Length(){
				    return 0;
				}
				public Integer Aprobado_Precision(){
				    return 0;
				}
				public String Aprobado_Default(){
				
					return null;
				
				}
				public String Aprobado_Comment(){
				
				    return "";
				
				}
				public String Aprobado_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Aprobado_OriginalDbColumnName(){
				
					return "Aprobado_";
				
				}

				
			    public String in_Contrato;

				public String getIn_Contrato () {
					return this.in_Contrato;
				}

				public Boolean in_ContratoIsNullable(){
				    return true;
				}
				public Boolean in_ContratoIsKey(){
				    return false;
				}
				public Integer in_ContratoLength(){
				    return 0;
				}
				public Integer in_ContratoPrecision(){
				    return 0;
				}
				public String in_ContratoDefault(){
				
					return null;
				
				}
				public String in_ContratoComment(){
				
				    return "";
				
				}
				public String in_ContratoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_ContratoOriginalDbColumnName(){
				
					return "in_Contrato";
				
				}

				
			    public BigDecimal Contrato_Id;

				public BigDecimal getContrato_Id () {
					return this.Contrato_Id;
				}

				public Boolean Contrato_IdIsNullable(){
				    return false;
				}
				public Boolean Contrato_IdIsKey(){
				    return false;
				}
				public Integer Contrato_IdLength(){
				    return 0;
				}
				public Integer Contrato_IdPrecision(){
				    return null;
				}
				public String Contrato_IdDefault(){
				
					return "";
				
				}
				public String Contrato_IdComment(){
				
				    return "";
				
				}
				public String Contrato_IdPattern(){
				
					return "";
				
				}
				public String Contrato_IdOriginalDbColumnName(){
				
					return "Contrato_Id";
				
				}

				
			    public BigDecimal DContrato_Id_;

				public BigDecimal getDContrato_Id_ () {
					return this.DContrato_Id_;
				}

				public Boolean DContrato_Id_IsNullable(){
				    return false;
				}
				public Boolean DContrato_Id_IsKey(){
				    return false;
				}
				public Integer DContrato_Id_Length(){
				    return 0;
				}
				public Integer DContrato_Id_Precision(){
				    return null;
				}
				public String DContrato_Id_Default(){
				
					return "";
				
				}
				public String DContrato_Id_Comment(){
				
				    return "";
				
				}
				public String DContrato_Id_Pattern(){
				
					return "";
				
				}
				public String DContrato_Id_OriginalDbColumnName(){
				
					return "DContrato_Id_";
				
				}

				
			    public BigDecimal HDContrato_Id;

				public BigDecimal getHDContrato_Id () {
					return this.HDContrato_Id;
				}

				public Boolean HDContrato_IdIsNullable(){
				    return false;
				}
				public Boolean HDContrato_IdIsKey(){
				    return false;
				}
				public Integer HDContrato_IdLength(){
				    return 0;
				}
				public Integer HDContrato_IdPrecision(){
				    return null;
				}
				public String HDContrato_IdDefault(){
				
					return "";
				
				}
				public String HDContrato_IdComment(){
				
				    return "";
				
				}
				public String HDContrato_IdPattern(){
				
					return "";
				
				}
				public String HDContrato_IdOriginalDbColumnName(){
				
					return "HDContrato_Id";
				
				}

				
			    public BigDecimal Precio;

				public BigDecimal getPrecio () {
					return this.Precio;
				}

				public Boolean PrecioIsNullable(){
				    return false;
				}
				public Boolean PrecioIsKey(){
				    return false;
				}
				public Integer PrecioLength(){
				    return 0;
				}
				public Integer PrecioPrecision(){
				    return null;
				}
				public String PrecioDefault(){
				
					return "";
				
				}
				public String PrecioComment(){
				
				    return "";
				
				}
				public String PrecioPattern(){
				
					return "";
				
				}
				public String PrecioOriginalDbColumnName(){
				
					return "Precio";
				
				}

				
			    public BigDecimal Iva;

				public BigDecimal getIva () {
					return this.Iva;
				}

				public Boolean IvaIsNullable(){
				    return false;
				}
				public Boolean IvaIsKey(){
				    return false;
				}
				public Integer IvaLength(){
				    return 0;
				}
				public Integer IvaPrecision(){
				    return null;
				}
				public String IvaDefault(){
				
					return "";
				
				}
				public String IvaComment(){
				
				    return "";
				
				}
				public String IvaPattern(){
				
					return "";
				
				}
				public String IvaOriginalDbColumnName(){
				
					return "Iva";
				
				}

				
			    public BigDecimal VUnitario;

				public BigDecimal getVUnitario () {
					return this.VUnitario;
				}

				public Boolean VUnitarioIsNullable(){
				    return true;
				}
				public Boolean VUnitarioIsKey(){
				    return false;
				}
				public Integer VUnitarioLength(){
				    return null;
				}
				public Integer VUnitarioPrecision(){
				    return null;
				}
				public String VUnitarioDefault(){
				
					return null;
				
				}
				public String VUnitarioComment(){
				
				    return "";
				
				}
				public String VUnitarioPattern(){
				
					return "";
				
				}
				public String VUnitarioOriginalDbColumnName(){
				
					return "VUnitario";
				
				}

				
			    public BigDecimal VUnitarioIva_;

				public BigDecimal getVUnitarioIva_ () {
					return this.VUnitarioIva_;
				}

				public Boolean VUnitarioIva_IsNullable(){
				    return true;
				}
				public Boolean VUnitarioIva_IsKey(){
				    return false;
				}
				public Integer VUnitarioIva_Length(){
				    return null;
				}
				public Integer VUnitarioIva_Precision(){
				    return null;
				}
				public String VUnitarioIva_Default(){
				
					return null;
				
				}
				public String VUnitarioIva_Comment(){
				
				    return "";
				
				}
				public String VUnitarioIva_Pattern(){
				
					return "";
				
				}
				public String VUnitarioIva_OriginalDbColumnName(){
				
					return "VUnitarioIva_";
				
				}

				
			    public BigDecimal SubTotal_;

				public BigDecimal getSubTotal_ () {
					return this.SubTotal_;
				}

				public Boolean SubTotal_IsNullable(){
				    return true;
				}
				public Boolean SubTotal_IsKey(){
				    return false;
				}
				public Integer SubTotal_Length(){
				    return null;
				}
				public Integer SubTotal_Precision(){
				    return null;
				}
				public String SubTotal_Default(){
				
					return null;
				
				}
				public String SubTotal_Comment(){
				
				    return "";
				
				}
				public String SubTotal_Pattern(){
				
					return "";
				
				}
				public String SubTotal_OriginalDbColumnName(){
				
					return "SubTotal_";
				
				}

				
			    public BigDecimal VTotalIva_;

				public BigDecimal getVTotalIva_ () {
					return this.VTotalIva_;
				}

				public Boolean VTotalIva_IsNullable(){
				    return true;
				}
				public Boolean VTotalIva_IsKey(){
				    return false;
				}
				public Integer VTotalIva_Length(){
				    return null;
				}
				public Integer VTotalIva_Precision(){
				    return null;
				}
				public String VTotalIva_Default(){
				
					return null;
				
				}
				public String VTotalIva_Comment(){
				
				    return "";
				
				}
				public String VTotalIva_Pattern(){
				
					return "";
				
				}
				public String VTotalIva_OriginalDbColumnName(){
				
					return "VTotalIva_";
				
				}

				
			    public BigDecimal Total_;

				public BigDecimal getTotal_ () {
					return this.Total_;
				}

				public Boolean Total_IsNullable(){
				    return true;
				}
				public Boolean Total_IsKey(){
				    return false;
				}
				public Integer Total_Length(){
				    return null;
				}
				public Integer Total_Precision(){
				    return null;
				}
				public String Total_Default(){
				
					return null;
				
				}
				public String Total_Comment(){
				
				    return "";
				
				}
				public String Total_Pattern(){
				
					return "";
				
				}
				public String Total_OriginalDbColumnName(){
				
					return "Total_";
				
				}

				
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public String errorMessage;

				public String getErrorMessage () {
					return this.errorMessage;
				}

				public Boolean errorMessageIsNullable(){
				    return true;
				}
				public Boolean errorMessageIsKey(){
				    return false;
				}
				public Integer errorMessageLength(){
				    return 255;
				}
				public Integer errorMessagePrecision(){
				    return 0;
				}
				public String errorMessageDefault(){
				
					return null;
				
				}
				public String errorMessageComment(){
				
				    return null;
				
				}
				public String errorMessagePattern(){
				
				    return null;
				
				}
				public String errorMessageOriginalDbColumnName(){
				
					return "errorMessage";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.TMovimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Movimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Bodega_Id_ = (BigDecimal) dis.readObject();
					
						this.Usuario_Id_ = (BigDecimal) dis.readObject();
					
						this.Inventario_Id_ = (BigDecimal) dis.readObject();
					
						this.PreCantidad_ = (BigDecimal) dis.readObject();
					
						this.PostCantidad_ = (BigDecimal) dis.readObject();
					
						this.Producto_Id_ = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
						this.CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.Cantidad_ = readString(dis);
					
					this.CantEsperada = readString(dis);
					
					this.Lote_ = readString(dis);
					
					this.FVencimiento_ = readString(dis);
					
					this.Restriccion_ = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.Defectos = readString(dis);
					
					this.Temperatura_ = readString(dis);
					
					this.Nivel_Riesgo_ = readString(dis);
					
					this.Tam_Muestra_ = readString(dis);
					
					this.Aprobado_ = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
						this.DContrato_Id_ = (BigDecimal) dis.readObject();
					
						this.HDContrato_Id = (BigDecimal) dis.readObject();
					
						this.Precio = (BigDecimal) dis.readObject();
					
						this.Iva = (BigDecimal) dis.readObject();
					
						this.VUnitario = (BigDecimal) dis.readObject();
					
						this.VUnitarioIva_ = (BigDecimal) dis.readObject();
					
						this.SubTotal_ = (BigDecimal) dis.readObject();
					
						this.VTotalIva_ = (BigDecimal) dis.readObject();
					
						this.Total_ = (BigDecimal) dis.readObject();
					
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.TMovimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Movimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Bodega_Id_ = (BigDecimal) dis.readObject();
					
						this.Usuario_Id_ = (BigDecimal) dis.readObject();
					
						this.Inventario_Id_ = (BigDecimal) dis.readObject();
					
						this.PreCantidad_ = (BigDecimal) dis.readObject();
					
						this.PostCantidad_ = (BigDecimal) dis.readObject();
					
						this.Producto_Id_ = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
						this.CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.Cantidad_ = readString(dis);
					
					this.CantEsperada = readString(dis);
					
					this.Lote_ = readString(dis);
					
					this.FVencimiento_ = readString(dis);
					
					this.Restriccion_ = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.Defectos = readString(dis);
					
					this.Temperatura_ = readString(dis);
					
					this.Nivel_Riesgo_ = readString(dis);
					
					this.Tam_Muestra_ = readString(dis);
					
					this.Aprobado_ = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
						this.DContrato_Id_ = (BigDecimal) dis.readObject();
					
						this.HDContrato_Id = (BigDecimal) dis.readObject();
					
						this.Precio = (BigDecimal) dis.readObject();
					
						this.Iva = (BigDecimal) dis.readObject();
					
						this.VUnitario = (BigDecimal) dis.readObject();
					
						this.VUnitarioIva_ = (BigDecimal) dis.readObject();
					
						this.SubTotal_ = (BigDecimal) dis.readObject();
					
						this.VTotalIva_ = (BigDecimal) dis.readObject();
					
						this.Total_ = (BigDecimal) dis.readObject();
					
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.TMovimiento_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Movimiento_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Bodega_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Usuario_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Inventario_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PreCantidad_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PostCantidad_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Producto_Id_);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Integer
				
						writeInteger(this.CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.Cantidad_,dos);
					
					// String
				
						writeString(this.CantEsperada,dos);
					
					// String
				
						writeString(this.Lote_,dos);
					
					// String
				
						writeString(this.FVencimiento_,dos);
					
					// String
				
						writeString(this.Restriccion_,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.Defectos,dos);
					
					// String
				
						writeString(this.Temperatura_,dos);
					
					// String
				
						writeString(this.Nivel_Riesgo_,dos);
					
					// String
				
						writeString(this.Tam_Muestra_,dos);
					
					// String
				
						writeString(this.Aprobado_,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Contrato_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DContrato_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.HDContrato_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Precio);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Iva);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VUnitario);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VUnitarioIva_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SubTotal_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VTotalIva_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Total_);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TMovimiento_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Movimiento_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Bodega_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Usuario_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Inventario_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PreCantidad_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PostCantidad_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Producto_Id_);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Integer
				
						writeInteger(this.CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.Cantidad_,dos);
					
					// String
				
						writeString(this.CantEsperada,dos);
					
					// String
				
						writeString(this.Lote_,dos);
					
					// String
				
						writeString(this.FVencimiento_,dos);
					
					// String
				
						writeString(this.Restriccion_,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.Defectos,dos);
					
					// String
				
						writeString(this.Temperatura_,dos);
					
					// String
				
						writeString(this.Nivel_Riesgo_,dos);
					
					// String
				
						writeString(this.Tam_Muestra_,dos);
					
					// String
				
						writeString(this.Aprobado_,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Contrato_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DContrato_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.HDContrato_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Precio);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Iva);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VUnitario);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VUnitarioIva_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SubTotal_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VTotalIva_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Total_);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TMovimiento_Id_="+String.valueOf(TMovimiento_Id_));
		sb.append(",Movimiento_Id_="+String.valueOf(Movimiento_Id_));
		sb.append(",Bodega_Id_="+String.valueOf(Bodega_Id_));
		sb.append(",Usuario_Id_="+String.valueOf(Usuario_Id_));
		sb.append(",Inventario_Id_="+String.valueOf(Inventario_Id_));
		sb.append(",PreCantidad_="+String.valueOf(PreCantidad_));
		sb.append(",PostCantidad_="+String.valueOf(PostCantidad_));
		sb.append(",Producto_Id_="+String.valueOf(Producto_Id_));
		sb.append(",out_Expediente="+out_Expediente);
		sb.append(",out_Consecutivo="+out_Consecutivo);
		sb.append(",out_CantEnviada="+String.valueOf(out_CantEnviada));
		sb.append(",CantEnviada="+String.valueOf(CantEnviada));
		sb.append(",out_CantIngresar="+String.valueOf(out_CantIngresar));
		sb.append(",CantIngresar="+String.valueOf(CantIngresar));
		sb.append(",out_Temperatura="+String.valueOf(out_Temperatura));
		sb.append(",out_Riesgo="+String.valueOf(out_Riesgo));
		sb.append(",out_Muestra="+String.valueOf(out_Muestra));
		sb.append(",out_Aprobado="+out_Aprobado);
		sb.append(",out_Estado="+out_Estado);
		sb.append(",out_Message="+out_Message);
		sb.append(",in_CodBarras="+in_CodBarras);
		sb.append(",out_CodBarras="+out_CodBarras);
		sb.append(",in_Cum="+in_Cum);
		sb.append(",out_Cum="+out_Cum);
		sb.append(",in_Invima="+in_Invima);
		sb.append(",Cantidad_="+Cantidad_);
		sb.append(",CantEsperada="+CantEsperada);
		sb.append(",Lote_="+Lote_);
		sb.append(",FVencimiento_="+FVencimiento_);
		sb.append(",Restriccion_="+Restriccion_);
		sb.append(",in_Defectos="+in_Defectos);
		sb.append(",Defectos="+Defectos);
		sb.append(",Temperatura_="+Temperatura_);
		sb.append(",Nivel_Riesgo_="+Nivel_Riesgo_);
		sb.append(",Tam_Muestra_="+Tam_Muestra_);
		sb.append(",Aprobado_="+Aprobado_);
		sb.append(",in_Contrato="+in_Contrato);
		sb.append(",Contrato_Id="+String.valueOf(Contrato_Id));
		sb.append(",DContrato_Id_="+String.valueOf(DContrato_Id_));
		sb.append(",HDContrato_Id="+String.valueOf(HDContrato_Id));
		sb.append(",Precio="+String.valueOf(Precio));
		sb.append(",Iva="+String.valueOf(Iva));
		sb.append(",VUnitario="+String.valueOf(VUnitario));
		sb.append(",VUnitarioIva_="+String.valueOf(VUnitarioIva_));
		sb.append(",SubTotal_="+String.valueOf(SubTotal_));
		sb.append(",VTotalIva_="+String.valueOf(VTotalIva_));
		sb.append(",Total_="+String.valueOf(Total_));
		sb.append(",numeroFila="+String.valueOf(numeroFila));
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",Estado_="+Estado_);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",errorMessage="+errorMessage);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class outVarProcStruct implements routines.system.IPersistableRow<outVarProcStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public BigDecimal TMovimiento_Id_;

				public BigDecimal getTMovimiento_Id_ () {
					return this.TMovimiento_Id_;
				}

				public Boolean TMovimiento_Id_IsNullable(){
				    return true;
				}
				public Boolean TMovimiento_Id_IsKey(){
				    return false;
				}
				public Integer TMovimiento_Id_Length(){
				    return null;
				}
				public Integer TMovimiento_Id_Precision(){
				    return null;
				}
				public String TMovimiento_Id_Default(){
				
					return null;
				
				}
				public String TMovimiento_Id_Comment(){
				
				    return "";
				
				}
				public String TMovimiento_Id_Pattern(){
				
					return "";
				
				}
				public String TMovimiento_Id_OriginalDbColumnName(){
				
					return "TMovimiento_Id_";
				
				}

				
			    public BigDecimal Movimiento_Id_;

				public BigDecimal getMovimiento_Id_ () {
					return this.Movimiento_Id_;
				}

				public Boolean Movimiento_Id_IsNullable(){
				    return true;
				}
				public Boolean Movimiento_Id_IsKey(){
				    return false;
				}
				public Integer Movimiento_Id_Length(){
				    return null;
				}
				public Integer Movimiento_Id_Precision(){
				    return null;
				}
				public String Movimiento_Id_Default(){
				
					return null;
				
				}
				public String Movimiento_Id_Comment(){
				
				    return "";
				
				}
				public String Movimiento_Id_Pattern(){
				
					return "";
				
				}
				public String Movimiento_Id_OriginalDbColumnName(){
				
					return "Movimiento_Id_";
				
				}

				
			    public BigDecimal Bodega_Id_;

				public BigDecimal getBodega_Id_ () {
					return this.Bodega_Id_;
				}

				public Boolean Bodega_Id_IsNullable(){
				    return true;
				}
				public Boolean Bodega_Id_IsKey(){
				    return false;
				}
				public Integer Bodega_Id_Length(){
				    return null;
				}
				public Integer Bodega_Id_Precision(){
				    return null;
				}
				public String Bodega_Id_Default(){
				
					return null;
				
				}
				public String Bodega_Id_Comment(){
				
				    return "";
				
				}
				public String Bodega_Id_Pattern(){
				
					return "";
				
				}
				public String Bodega_Id_OriginalDbColumnName(){
				
					return "Bodega_Id_";
				
				}

				
			    public BigDecimal Usuario_Id_;

				public BigDecimal getUsuario_Id_ () {
					return this.Usuario_Id_;
				}

				public Boolean Usuario_Id_IsNullable(){
				    return true;
				}
				public Boolean Usuario_Id_IsKey(){
				    return false;
				}
				public Integer Usuario_Id_Length(){
				    return null;
				}
				public Integer Usuario_Id_Precision(){
				    return null;
				}
				public String Usuario_Id_Default(){
				
					return null;
				
				}
				public String Usuario_Id_Comment(){
				
				    return "";
				
				}
				public String Usuario_Id_Pattern(){
				
					return "";
				
				}
				public String Usuario_Id_OriginalDbColumnName(){
				
					return "Usuario_Id_";
				
				}

				
			    public BigDecimal Inventario_Id_;

				public BigDecimal getInventario_Id_ () {
					return this.Inventario_Id_;
				}

				public Boolean Inventario_Id_IsNullable(){
				    return true;
				}
				public Boolean Inventario_Id_IsKey(){
				    return false;
				}
				public Integer Inventario_Id_Length(){
				    return null;
				}
				public Integer Inventario_Id_Precision(){
				    return null;
				}
				public String Inventario_Id_Default(){
				
					return null;
				
				}
				public String Inventario_Id_Comment(){
				
				    return "";
				
				}
				public String Inventario_Id_Pattern(){
				
					return "";
				
				}
				public String Inventario_Id_OriginalDbColumnName(){
				
					return "Inventario_Id_";
				
				}

				
			    public BigDecimal PreCantidad_;

				public BigDecimal getPreCantidad_ () {
					return this.PreCantidad_;
				}

				public Boolean PreCantidad_IsNullable(){
				    return true;
				}
				public Boolean PreCantidad_IsKey(){
				    return false;
				}
				public Integer PreCantidad_Length(){
				    return null;
				}
				public Integer PreCantidad_Precision(){
				    return null;
				}
				public String PreCantidad_Default(){
				
					return null;
				
				}
				public String PreCantidad_Comment(){
				
				    return "";
				
				}
				public String PreCantidad_Pattern(){
				
					return "";
				
				}
				public String PreCantidad_OriginalDbColumnName(){
				
					return "PreCantidad_";
				
				}

				
			    public BigDecimal PostCantidad_;

				public BigDecimal getPostCantidad_ () {
					return this.PostCantidad_;
				}

				public Boolean PostCantidad_IsNullable(){
				    return true;
				}
				public Boolean PostCantidad_IsKey(){
				    return false;
				}
				public Integer PostCantidad_Length(){
				    return null;
				}
				public Integer PostCantidad_Precision(){
				    return null;
				}
				public String PostCantidad_Default(){
				
					return null;
				
				}
				public String PostCantidad_Comment(){
				
				    return "";
				
				}
				public String PostCantidad_Pattern(){
				
					return "";
				
				}
				public String PostCantidad_OriginalDbColumnName(){
				
					return "PostCantidad_";
				
				}

				
			    public BigDecimal Producto_Id_;

				public BigDecimal getProducto_Id_ () {
					return this.Producto_Id_;
				}

				public Boolean Producto_Id_IsNullable(){
				    return true;
				}
				public Boolean Producto_Id_IsKey(){
				    return false;
				}
				public Integer Producto_Id_Length(){
				    return null;
				}
				public Integer Producto_Id_Precision(){
				    return null;
				}
				public String Producto_Id_Default(){
				
					return null;
				
				}
				public String Producto_Id_Comment(){
				
				    return "";
				
				}
				public String Producto_Id_Pattern(){
				
					return "";
				
				}
				public String Producto_Id_OriginalDbColumnName(){
				
					return "Producto_Id_";
				
				}

				
			    public String out_Expediente;

				public String getOut_Expediente () {
					return this.out_Expediente;
				}

				public Boolean out_ExpedienteIsNullable(){
				    return true;
				}
				public Boolean out_ExpedienteIsKey(){
				    return false;
				}
				public Integer out_ExpedienteLength(){
				    return null;
				}
				public Integer out_ExpedientePrecision(){
				    return null;
				}
				public String out_ExpedienteDefault(){
				
					return null;
				
				}
				public String out_ExpedienteComment(){
				
				    return "";
				
				}
				public String out_ExpedientePattern(){
				
					return "";
				
				}
				public String out_ExpedienteOriginalDbColumnName(){
				
					return "out_Expediente";
				
				}

				
			    public String out_Consecutivo;

				public String getOut_Consecutivo () {
					return this.out_Consecutivo;
				}

				public Boolean out_ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean out_ConsecutivoIsKey(){
				    return false;
				}
				public Integer out_ConsecutivoLength(){
				    return null;
				}
				public Integer out_ConsecutivoPrecision(){
				    return null;
				}
				public String out_ConsecutivoDefault(){
				
					return null;
				
				}
				public String out_ConsecutivoComment(){
				
				    return "";
				
				}
				public String out_ConsecutivoPattern(){
				
					return "";
				
				}
				public String out_ConsecutivoOriginalDbColumnName(){
				
					return "out_Consecutivo";
				
				}

				
			    public Integer out_CantEnviada;

				public Integer getOut_CantEnviada () {
					return this.out_CantEnviada;
				}

				public Boolean out_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean out_CantEnviadaIsKey(){
				    return false;
				}
				public Integer out_CantEnviadaLength(){
				    return 0;
				}
				public Integer out_CantEnviadaPrecision(){
				    return 0;
				}
				public String out_CantEnviadaDefault(){
				
					return null;
				
				}
				public String out_CantEnviadaComment(){
				
				    return "";
				
				}
				public String out_CantEnviadaPattern(){
				
					return "";
				
				}
				public String out_CantEnviadaOriginalDbColumnName(){
				
					return "out_CantEnviada";
				
				}

				
			    public Integer CantEnviada;

				public Integer getCantEnviada () {
					return this.CantEnviada;
				}

				public Boolean CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean CantEnviadaIsKey(){
				    return false;
				}
				public Integer CantEnviadaLength(){
				    return null;
				}
				public Integer CantEnviadaPrecision(){
				    return null;
				}
				public String CantEnviadaDefault(){
				
					return null;
				
				}
				public String CantEnviadaComment(){
				
				    return "";
				
				}
				public String CantEnviadaPattern(){
				
					return "";
				
				}
				public String CantEnviadaOriginalDbColumnName(){
				
					return "CantEnviada";
				
				}

				
			    public Integer out_CantIngresar;

				public Integer getOut_CantIngresar () {
					return this.out_CantIngresar;
				}

				public Boolean out_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean out_CantIngresarIsKey(){
				    return false;
				}
				public Integer out_CantIngresarLength(){
				    return 0;
				}
				public Integer out_CantIngresarPrecision(){
				    return 0;
				}
				public String out_CantIngresarDefault(){
				
					return null;
				
				}
				public String out_CantIngresarComment(){
				
				    return "";
				
				}
				public String out_CantIngresarPattern(){
				
					return "";
				
				}
				public String out_CantIngresarOriginalDbColumnName(){
				
					return "out_CantIngresar";
				
				}

				
			    public Integer CantIngresar;

				public Integer getCantIngresar () {
					return this.CantIngresar;
				}

				public Boolean CantIngresarIsNullable(){
				    return true;
				}
				public Boolean CantIngresarIsKey(){
				    return false;
				}
				public Integer CantIngresarLength(){
				    return null;
				}
				public Integer CantIngresarPrecision(){
				    return null;
				}
				public String CantIngresarDefault(){
				
					return null;
				
				}
				public String CantIngresarComment(){
				
				    return "";
				
				}
				public String CantIngresarPattern(){
				
					return "";
				
				}
				public String CantIngresarOriginalDbColumnName(){
				
					return "CantIngresar";
				
				}

				
			    public Double out_Temperatura;

				public Double getOut_Temperatura () {
					return this.out_Temperatura;
				}

				public Boolean out_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean out_TemperaturaIsKey(){
				    return false;
				}
				public Integer out_TemperaturaLength(){
				    return null;
				}
				public Integer out_TemperaturaPrecision(){
				    return null;
				}
				public String out_TemperaturaDefault(){
				
					return null;
				
				}
				public String out_TemperaturaComment(){
				
				    return "";
				
				}
				public String out_TemperaturaPattern(){
				
					return "";
				
				}
				public String out_TemperaturaOriginalDbColumnName(){
				
					return "out_Temperatura";
				
				}

				
			    public Integer out_Riesgo;

				public Integer getOut_Riesgo () {
					return this.out_Riesgo;
				}

				public Boolean out_RiesgoIsNullable(){
				    return true;
				}
				public Boolean out_RiesgoIsKey(){
				    return false;
				}
				public Integer out_RiesgoLength(){
				    return null;
				}
				public Integer out_RiesgoPrecision(){
				    return null;
				}
				public String out_RiesgoDefault(){
				
					return null;
				
				}
				public String out_RiesgoComment(){
				
				    return "";
				
				}
				public String out_RiesgoPattern(){
				
					return "";
				
				}
				public String out_RiesgoOriginalDbColumnName(){
				
					return "out_Riesgo";
				
				}

				
			    public Integer out_Muestra;

				public Integer getOut_Muestra () {
					return this.out_Muestra;
				}

				public Boolean out_MuestraIsNullable(){
				    return true;
				}
				public Boolean out_MuestraIsKey(){
				    return false;
				}
				public Integer out_MuestraLength(){
				    return null;
				}
				public Integer out_MuestraPrecision(){
				    return null;
				}
				public String out_MuestraDefault(){
				
					return null;
				
				}
				public String out_MuestraComment(){
				
				    return "";
				
				}
				public String out_MuestraPattern(){
				
					return "";
				
				}
				public String out_MuestraOriginalDbColumnName(){
				
					return "out_Muestra";
				
				}

				
			    public String out_Aprobado;

				public String getOut_Aprobado () {
					return this.out_Aprobado;
				}

				public Boolean out_AprobadoIsNullable(){
				    return true;
				}
				public Boolean out_AprobadoIsKey(){
				    return false;
				}
				public Integer out_AprobadoLength(){
				    return null;
				}
				public Integer out_AprobadoPrecision(){
				    return null;
				}
				public String out_AprobadoDefault(){
				
					return null;
				
				}
				public String out_AprobadoComment(){
				
				    return "";
				
				}
				public String out_AprobadoPattern(){
				
					return "";
				
				}
				public String out_AprobadoOriginalDbColumnName(){
				
					return "out_Aprobado";
				
				}

				
			    public String out_Estado;

				public String getOut_Estado () {
					return this.out_Estado;
				}

				public Boolean out_EstadoIsNullable(){
				    return true;
				}
				public Boolean out_EstadoIsKey(){
				    return false;
				}
				public Integer out_EstadoLength(){
				    return 0;
				}
				public Integer out_EstadoPrecision(){
				    return 0;
				}
				public String out_EstadoDefault(){
				
					return null;
				
				}
				public String out_EstadoComment(){
				
				    return "";
				
				}
				public String out_EstadoPattern(){
				
					return "";
				
				}
				public String out_EstadoOriginalDbColumnName(){
				
					return "out_Estado";
				
				}

				
			    public String out_Message;

				public String getOut_Message () {
					return this.out_Message;
				}

				public Boolean out_MessageIsNullable(){
				    return true;
				}
				public Boolean out_MessageIsKey(){
				    return false;
				}
				public Integer out_MessageLength(){
				    return 0;
				}
				public Integer out_MessagePrecision(){
				    return 0;
				}
				public String out_MessageDefault(){
				
					return null;
				
				}
				public String out_MessageComment(){
				
				    return "";
				
				}
				public String out_MessagePattern(){
				
					return "";
				
				}
				public String out_MessageOriginalDbColumnName(){
				
					return "out_Message";
				
				}

				
			    public String in_CodBarras;

				public String getIn_CodBarras () {
					return this.in_CodBarras;
				}

				public Boolean in_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean in_CodBarrasIsKey(){
				    return false;
				}
				public Integer in_CodBarrasLength(){
				    return 0;
				}
				public Integer in_CodBarrasPrecision(){
				    return 0;
				}
				public String in_CodBarrasDefault(){
				
					return null;
				
				}
				public String in_CodBarrasComment(){
				
				    return "";
				
				}
				public String in_CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CodBarrasOriginalDbColumnName(){
				
					return "in_CodBarras";
				
				}

				
			    public String out_CodBarras;

				public String getOut_CodBarras () {
					return this.out_CodBarras;
				}

				public Boolean out_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean out_CodBarrasIsKey(){
				    return false;
				}
				public Integer out_CodBarrasLength(){
				    return null;
				}
				public Integer out_CodBarrasPrecision(){
				    return null;
				}
				public String out_CodBarrasDefault(){
				
					return null;
				
				}
				public String out_CodBarrasComment(){
				
				    return "";
				
				}
				public String out_CodBarrasPattern(){
				
					return "";
				
				}
				public String out_CodBarrasOriginalDbColumnName(){
				
					return "out_CodBarras";
				
				}

				
			    public String in_Cum;

				public String getIn_Cum () {
					return this.in_Cum;
				}

				public Boolean in_CumIsNullable(){
				    return true;
				}
				public Boolean in_CumIsKey(){
				    return false;
				}
				public Integer in_CumLength(){
				    return 0;
				}
				public Integer in_CumPrecision(){
				    return 0;
				}
				public String in_CumDefault(){
				
					return null;
				
				}
				public String in_CumComment(){
				
				    return "";
				
				}
				public String in_CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CumOriginalDbColumnName(){
				
					return "in_Cum";
				
				}

				
			    public String out_Cum;

				public String getOut_Cum () {
					return this.out_Cum;
				}

				public Boolean out_CumIsNullable(){
				    return true;
				}
				public Boolean out_CumIsKey(){
				    return false;
				}
				public Integer out_CumLength(){
				    return null;
				}
				public Integer out_CumPrecision(){
				    return null;
				}
				public String out_CumDefault(){
				
					return null;
				
				}
				public String out_CumComment(){
				
				    return "";
				
				}
				public String out_CumPattern(){
				
					return "";
				
				}
				public String out_CumOriginalDbColumnName(){
				
					return "out_Cum";
				
				}

				
			    public String in_Invima;

				public String getIn_Invima () {
					return this.in_Invima;
				}

				public Boolean in_InvimaIsNullable(){
				    return true;
				}
				public Boolean in_InvimaIsKey(){
				    return false;
				}
				public Integer in_InvimaLength(){
				    return 0;
				}
				public Integer in_InvimaPrecision(){
				    return 0;
				}
				public String in_InvimaDefault(){
				
					return null;
				
				}
				public String in_InvimaComment(){
				
				    return "";
				
				}
				public String in_InvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_InvimaOriginalDbColumnName(){
				
					return "in_Invima";
				
				}

				
			    public String Cantidad_;

				public String getCantidad_ () {
					return this.Cantidad_;
				}

				public Boolean Cantidad_IsNullable(){
				    return true;
				}
				public Boolean Cantidad_IsKey(){
				    return false;
				}
				public Integer Cantidad_Length(){
				    return 0;
				}
				public Integer Cantidad_Precision(){
				    return 0;
				}
				public String Cantidad_Default(){
				
					return null;
				
				}
				public String Cantidad_Comment(){
				
				    return "";
				
				}
				public String Cantidad_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Cantidad_OriginalDbColumnName(){
				
					return "Cantidad_";
				
				}

				
			    public String CantEsperada;

				public String getCantEsperada () {
					return this.CantEsperada;
				}

				public Boolean CantEsperadaIsNullable(){
				    return true;
				}
				public Boolean CantEsperadaIsKey(){
				    return false;
				}
				public Integer CantEsperadaLength(){
				    return 0;
				}
				public Integer CantEsperadaPrecision(){
				    return 0;
				}
				public String CantEsperadaDefault(){
				
					return null;
				
				}
				public String CantEsperadaComment(){
				
				    return "";
				
				}
				public String CantEsperadaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CantEsperadaOriginalDbColumnName(){
				
					return "CantEsperada";
				
				}

				
			    public String Lote_;

				public String getLote_ () {
					return this.Lote_;
				}

				public Boolean Lote_IsNullable(){
				    return true;
				}
				public Boolean Lote_IsKey(){
				    return false;
				}
				public Integer Lote_Length(){
				    return 0;
				}
				public Integer Lote_Precision(){
				    return 0;
				}
				public String Lote_Default(){
				
					return null;
				
				}
				public String Lote_Comment(){
				
				    return "";
				
				}
				public String Lote_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Lote_OriginalDbColumnName(){
				
					return "Lote_";
				
				}

				
			    public String FVencimiento_;

				public String getFVencimiento_ () {
					return this.FVencimiento_;
				}

				public Boolean FVencimiento_IsNullable(){
				    return true;
				}
				public Boolean FVencimiento_IsKey(){
				    return false;
				}
				public Integer FVencimiento_Length(){
				    return 0;
				}
				public Integer FVencimiento_Precision(){
				    return 0;
				}
				public String FVencimiento_Default(){
				
					return null;
				
				}
				public String FVencimiento_Comment(){
				
				    return "";
				
				}
				public String FVencimiento_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FVencimiento_OriginalDbColumnName(){
				
					return "FVencimiento_";
				
				}

				
			    public String Restriccion_;

				public String getRestriccion_ () {
					return this.Restriccion_;
				}

				public Boolean Restriccion_IsNullable(){
				    return true;
				}
				public Boolean Restriccion_IsKey(){
				    return false;
				}
				public Integer Restriccion_Length(){
				    return 0;
				}
				public Integer Restriccion_Precision(){
				    return 0;
				}
				public String Restriccion_Default(){
				
					return null;
				
				}
				public String Restriccion_Comment(){
				
				    return "";
				
				}
				public String Restriccion_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Restriccion_OriginalDbColumnName(){
				
					return "Restriccion_";
				
				}

				
			    public String in_Defectos;

				public String getIn_Defectos () {
					return this.in_Defectos;
				}

				public Boolean in_DefectosIsNullable(){
				    return true;
				}
				public Boolean in_DefectosIsKey(){
				    return false;
				}
				public Integer in_DefectosLength(){
				    return 0;
				}
				public Integer in_DefectosPrecision(){
				    return 0;
				}
				public String in_DefectosDefault(){
				
					return null;
				
				}
				public String in_DefectosComment(){
				
				    return "";
				
				}
				public String in_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_DefectosOriginalDbColumnName(){
				
					return "in_Defectos";
				
				}

				
			    public String Defectos;

				public String getDefectos () {
					return this.Defectos;
				}

				public Boolean DefectosIsNullable(){
				    return true;
				}
				public Boolean DefectosIsKey(){
				    return false;
				}
				public Integer DefectosLength(){
				    return 0;
				}
				public Integer DefectosPrecision(){
				    return 0;
				}
				public String DefectosDefault(){
				
					return null;
				
				}
				public String DefectosComment(){
				
				    return "";
				
				}
				public String DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DefectosOriginalDbColumnName(){
				
					return "Defectos";
				
				}

				
			    public String Temperatura_;

				public String getTemperatura_ () {
					return this.Temperatura_;
				}

				public Boolean Temperatura_IsNullable(){
				    return true;
				}
				public Boolean Temperatura_IsKey(){
				    return false;
				}
				public Integer Temperatura_Length(){
				    return 0;
				}
				public Integer Temperatura_Precision(){
				    return 0;
				}
				public String Temperatura_Default(){
				
					return null;
				
				}
				public String Temperatura_Comment(){
				
				    return "";
				
				}
				public String Temperatura_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Temperatura_OriginalDbColumnName(){
				
					return "Temperatura_";
				
				}

				
			    public String Nivel_Riesgo_;

				public String getNivel_Riesgo_ () {
					return this.Nivel_Riesgo_;
				}

				public Boolean Nivel_Riesgo_IsNullable(){
				    return true;
				}
				public Boolean Nivel_Riesgo_IsKey(){
				    return false;
				}
				public Integer Nivel_Riesgo_Length(){
				    return 0;
				}
				public Integer Nivel_Riesgo_Precision(){
				    return 0;
				}
				public String Nivel_Riesgo_Default(){
				
					return null;
				
				}
				public String Nivel_Riesgo_Comment(){
				
				    return "";
				
				}
				public String Nivel_Riesgo_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Nivel_Riesgo_OriginalDbColumnName(){
				
					return "Nivel_Riesgo_";
				
				}

				
			    public String Tam_Muestra_;

				public String getTam_Muestra_ () {
					return this.Tam_Muestra_;
				}

				public Boolean Tam_Muestra_IsNullable(){
				    return true;
				}
				public Boolean Tam_Muestra_IsKey(){
				    return false;
				}
				public Integer Tam_Muestra_Length(){
				    return 0;
				}
				public Integer Tam_Muestra_Precision(){
				    return 0;
				}
				public String Tam_Muestra_Default(){
				
					return null;
				
				}
				public String Tam_Muestra_Comment(){
				
				    return "";
				
				}
				public String Tam_Muestra_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Tam_Muestra_OriginalDbColumnName(){
				
					return "Tam_Muestra_";
				
				}

				
			    public String Aprobado_;

				public String getAprobado_ () {
					return this.Aprobado_;
				}

				public Boolean Aprobado_IsNullable(){
				    return true;
				}
				public Boolean Aprobado_IsKey(){
				    return false;
				}
				public Integer Aprobado_Length(){
				    return 0;
				}
				public Integer Aprobado_Precision(){
				    return 0;
				}
				public String Aprobado_Default(){
				
					return null;
				
				}
				public String Aprobado_Comment(){
				
				    return "";
				
				}
				public String Aprobado_Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String Aprobado_OriginalDbColumnName(){
				
					return "Aprobado_";
				
				}

				
			    public String in_Contrato;

				public String getIn_Contrato () {
					return this.in_Contrato;
				}

				public Boolean in_ContratoIsNullable(){
				    return true;
				}
				public Boolean in_ContratoIsKey(){
				    return false;
				}
				public Integer in_ContratoLength(){
				    return 0;
				}
				public Integer in_ContratoPrecision(){
				    return 0;
				}
				public String in_ContratoDefault(){
				
					return null;
				
				}
				public String in_ContratoComment(){
				
				    return "";
				
				}
				public String in_ContratoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_ContratoOriginalDbColumnName(){
				
					return "in_Contrato";
				
				}

				
			    public BigDecimal Contrato_Id;

				public BigDecimal getContrato_Id () {
					return this.Contrato_Id;
				}

				public Boolean Contrato_IdIsNullable(){
				    return false;
				}
				public Boolean Contrato_IdIsKey(){
				    return false;
				}
				public Integer Contrato_IdLength(){
				    return 0;
				}
				public Integer Contrato_IdPrecision(){
				    return null;
				}
				public String Contrato_IdDefault(){
				
					return "";
				
				}
				public String Contrato_IdComment(){
				
				    return "";
				
				}
				public String Contrato_IdPattern(){
				
					return "";
				
				}
				public String Contrato_IdOriginalDbColumnName(){
				
					return "Contrato_Id";
				
				}

				
			    public BigDecimal DContrato_Id_;

				public BigDecimal getDContrato_Id_ () {
					return this.DContrato_Id_;
				}

				public Boolean DContrato_Id_IsNullable(){
				    return false;
				}
				public Boolean DContrato_Id_IsKey(){
				    return false;
				}
				public Integer DContrato_Id_Length(){
				    return 0;
				}
				public Integer DContrato_Id_Precision(){
				    return null;
				}
				public String DContrato_Id_Default(){
				
					return "";
				
				}
				public String DContrato_Id_Comment(){
				
				    return "";
				
				}
				public String DContrato_Id_Pattern(){
				
					return "";
				
				}
				public String DContrato_Id_OriginalDbColumnName(){
				
					return "DContrato_Id_";
				
				}

				
			    public BigDecimal HDContrato_Id;

				public BigDecimal getHDContrato_Id () {
					return this.HDContrato_Id;
				}

				public Boolean HDContrato_IdIsNullable(){
				    return false;
				}
				public Boolean HDContrato_IdIsKey(){
				    return false;
				}
				public Integer HDContrato_IdLength(){
				    return 0;
				}
				public Integer HDContrato_IdPrecision(){
				    return null;
				}
				public String HDContrato_IdDefault(){
				
					return "";
				
				}
				public String HDContrato_IdComment(){
				
				    return "";
				
				}
				public String HDContrato_IdPattern(){
				
					return "";
				
				}
				public String HDContrato_IdOriginalDbColumnName(){
				
					return "HDContrato_Id";
				
				}

				
			    public BigDecimal Precio;

				public BigDecimal getPrecio () {
					return this.Precio;
				}

				public Boolean PrecioIsNullable(){
				    return false;
				}
				public Boolean PrecioIsKey(){
				    return false;
				}
				public Integer PrecioLength(){
				    return 0;
				}
				public Integer PrecioPrecision(){
				    return null;
				}
				public String PrecioDefault(){
				
					return "";
				
				}
				public String PrecioComment(){
				
				    return "";
				
				}
				public String PrecioPattern(){
				
					return "";
				
				}
				public String PrecioOriginalDbColumnName(){
				
					return "Precio";
				
				}

				
			    public BigDecimal Iva;

				public BigDecimal getIva () {
					return this.Iva;
				}

				public Boolean IvaIsNullable(){
				    return false;
				}
				public Boolean IvaIsKey(){
				    return false;
				}
				public Integer IvaLength(){
				    return 0;
				}
				public Integer IvaPrecision(){
				    return null;
				}
				public String IvaDefault(){
				
					return "";
				
				}
				public String IvaComment(){
				
				    return "";
				
				}
				public String IvaPattern(){
				
					return "";
				
				}
				public String IvaOriginalDbColumnName(){
				
					return "Iva";
				
				}

				
			    public BigDecimal VUnitario;

				public BigDecimal getVUnitario () {
					return this.VUnitario;
				}

				public Boolean VUnitarioIsNullable(){
				    return true;
				}
				public Boolean VUnitarioIsKey(){
				    return false;
				}
				public Integer VUnitarioLength(){
				    return null;
				}
				public Integer VUnitarioPrecision(){
				    return null;
				}
				public String VUnitarioDefault(){
				
					return null;
				
				}
				public String VUnitarioComment(){
				
				    return "";
				
				}
				public String VUnitarioPattern(){
				
					return "";
				
				}
				public String VUnitarioOriginalDbColumnName(){
				
					return "VUnitario";
				
				}

				
			    public BigDecimal VUnitarioIva_;

				public BigDecimal getVUnitarioIva_ () {
					return this.VUnitarioIva_;
				}

				public Boolean VUnitarioIva_IsNullable(){
				    return true;
				}
				public Boolean VUnitarioIva_IsKey(){
				    return false;
				}
				public Integer VUnitarioIva_Length(){
				    return null;
				}
				public Integer VUnitarioIva_Precision(){
				    return null;
				}
				public String VUnitarioIva_Default(){
				
					return null;
				
				}
				public String VUnitarioIva_Comment(){
				
				    return "";
				
				}
				public String VUnitarioIva_Pattern(){
				
					return "";
				
				}
				public String VUnitarioIva_OriginalDbColumnName(){
				
					return "VUnitarioIva_";
				
				}

				
			    public BigDecimal SubTotal_;

				public BigDecimal getSubTotal_ () {
					return this.SubTotal_;
				}

				public Boolean SubTotal_IsNullable(){
				    return true;
				}
				public Boolean SubTotal_IsKey(){
				    return false;
				}
				public Integer SubTotal_Length(){
				    return null;
				}
				public Integer SubTotal_Precision(){
				    return null;
				}
				public String SubTotal_Default(){
				
					return null;
				
				}
				public String SubTotal_Comment(){
				
				    return "";
				
				}
				public String SubTotal_Pattern(){
				
					return "";
				
				}
				public String SubTotal_OriginalDbColumnName(){
				
					return "SubTotal_";
				
				}

				
			    public BigDecimal VTotalIva_;

				public BigDecimal getVTotalIva_ () {
					return this.VTotalIva_;
				}

				public Boolean VTotalIva_IsNullable(){
				    return true;
				}
				public Boolean VTotalIva_IsKey(){
				    return false;
				}
				public Integer VTotalIva_Length(){
				    return null;
				}
				public Integer VTotalIva_Precision(){
				    return null;
				}
				public String VTotalIva_Default(){
				
					return null;
				
				}
				public String VTotalIva_Comment(){
				
				    return "";
				
				}
				public String VTotalIva_Pattern(){
				
					return "";
				
				}
				public String VTotalIva_OriginalDbColumnName(){
				
					return "VTotalIva_";
				
				}

				
			    public BigDecimal Total_;

				public BigDecimal getTotal_ () {
					return this.Total_;
				}

				public Boolean Total_IsNullable(){
				    return true;
				}
				public Boolean Total_IsKey(){
				    return false;
				}
				public Integer Total_Length(){
				    return null;
				}
				public Integer Total_Precision(){
				    return null;
				}
				public String Total_Default(){
				
					return null;
				
				}
				public String Total_Comment(){
				
				    return "";
				
				}
				public String Total_Pattern(){
				
					return "";
				
				}
				public String Total_OriginalDbColumnName(){
				
					return "Total_";
				
				}

				
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.TMovimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Movimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Bodega_Id_ = (BigDecimal) dis.readObject();
					
						this.Usuario_Id_ = (BigDecimal) dis.readObject();
					
						this.Inventario_Id_ = (BigDecimal) dis.readObject();
					
						this.PreCantidad_ = (BigDecimal) dis.readObject();
					
						this.PostCantidad_ = (BigDecimal) dis.readObject();
					
						this.Producto_Id_ = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
						this.CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.Cantidad_ = readString(dis);
					
					this.CantEsperada = readString(dis);
					
					this.Lote_ = readString(dis);
					
					this.FVencimiento_ = readString(dis);
					
					this.Restriccion_ = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.Defectos = readString(dis);
					
					this.Temperatura_ = readString(dis);
					
					this.Nivel_Riesgo_ = readString(dis);
					
					this.Tam_Muestra_ = readString(dis);
					
					this.Aprobado_ = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
						this.DContrato_Id_ = (BigDecimal) dis.readObject();
					
						this.HDContrato_Id = (BigDecimal) dis.readObject();
					
						this.Precio = (BigDecimal) dis.readObject();
					
						this.Iva = (BigDecimal) dis.readObject();
					
						this.VUnitario = (BigDecimal) dis.readObject();
					
						this.VUnitarioIva_ = (BigDecimal) dis.readObject();
					
						this.SubTotal_ = (BigDecimal) dis.readObject();
					
						this.VTotalIva_ = (BigDecimal) dis.readObject();
					
						this.Total_ = (BigDecimal) dis.readObject();
					
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.TMovimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Movimiento_Id_ = (BigDecimal) dis.readObject();
					
						this.Bodega_Id_ = (BigDecimal) dis.readObject();
					
						this.Usuario_Id_ = (BigDecimal) dis.readObject();
					
						this.Inventario_Id_ = (BigDecimal) dis.readObject();
					
						this.PreCantidad_ = (BigDecimal) dis.readObject();
					
						this.PostCantidad_ = (BigDecimal) dis.readObject();
					
						this.Producto_Id_ = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
						this.CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.Cantidad_ = readString(dis);
					
					this.CantEsperada = readString(dis);
					
					this.Lote_ = readString(dis);
					
					this.FVencimiento_ = readString(dis);
					
					this.Restriccion_ = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.Defectos = readString(dis);
					
					this.Temperatura_ = readString(dis);
					
					this.Nivel_Riesgo_ = readString(dis);
					
					this.Tam_Muestra_ = readString(dis);
					
					this.Aprobado_ = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
						this.DContrato_Id_ = (BigDecimal) dis.readObject();
					
						this.HDContrato_Id = (BigDecimal) dis.readObject();
					
						this.Precio = (BigDecimal) dis.readObject();
					
						this.Iva = (BigDecimal) dis.readObject();
					
						this.VUnitario = (BigDecimal) dis.readObject();
					
						this.VUnitarioIva_ = (BigDecimal) dis.readObject();
					
						this.SubTotal_ = (BigDecimal) dis.readObject();
					
						this.VTotalIva_ = (BigDecimal) dis.readObject();
					
						this.Total_ = (BigDecimal) dis.readObject();
					
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.TMovimiento_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Movimiento_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Bodega_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Usuario_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Inventario_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PreCantidad_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PostCantidad_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Producto_Id_);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Integer
				
						writeInteger(this.CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.Cantidad_,dos);
					
					// String
				
						writeString(this.CantEsperada,dos);
					
					// String
				
						writeString(this.Lote_,dos);
					
					// String
				
						writeString(this.FVencimiento_,dos);
					
					// String
				
						writeString(this.Restriccion_,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.Defectos,dos);
					
					// String
				
						writeString(this.Temperatura_,dos);
					
					// String
				
						writeString(this.Nivel_Riesgo_,dos);
					
					// String
				
						writeString(this.Tam_Muestra_,dos);
					
					// String
				
						writeString(this.Aprobado_,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Contrato_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DContrato_Id_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.HDContrato_Id);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Precio);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Iva);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VUnitario);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VUnitarioIva_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SubTotal_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VTotalIva_);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Total_);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TMovimiento_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Movimiento_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Bodega_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Usuario_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Inventario_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PreCantidad_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PostCantidad_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Producto_Id_);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Integer
				
						writeInteger(this.CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.Cantidad_,dos);
					
					// String
				
						writeString(this.CantEsperada,dos);
					
					// String
				
						writeString(this.Lote_,dos);
					
					// String
				
						writeString(this.FVencimiento_,dos);
					
					// String
				
						writeString(this.Restriccion_,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.Defectos,dos);
					
					// String
				
						writeString(this.Temperatura_,dos);
					
					// String
				
						writeString(this.Nivel_Riesgo_,dos);
					
					// String
				
						writeString(this.Tam_Muestra_,dos);
					
					// String
				
						writeString(this.Aprobado_,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Contrato_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DContrato_Id_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.HDContrato_Id);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Precio);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Iva);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VUnitario);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VUnitarioIva_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SubTotal_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VTotalIva_);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Total_);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TMovimiento_Id_="+String.valueOf(TMovimiento_Id_));
		sb.append(",Movimiento_Id_="+String.valueOf(Movimiento_Id_));
		sb.append(",Bodega_Id_="+String.valueOf(Bodega_Id_));
		sb.append(",Usuario_Id_="+String.valueOf(Usuario_Id_));
		sb.append(",Inventario_Id_="+String.valueOf(Inventario_Id_));
		sb.append(",PreCantidad_="+String.valueOf(PreCantidad_));
		sb.append(",PostCantidad_="+String.valueOf(PostCantidad_));
		sb.append(",Producto_Id_="+String.valueOf(Producto_Id_));
		sb.append(",out_Expediente="+out_Expediente);
		sb.append(",out_Consecutivo="+out_Consecutivo);
		sb.append(",out_CantEnviada="+String.valueOf(out_CantEnviada));
		sb.append(",CantEnviada="+String.valueOf(CantEnviada));
		sb.append(",out_CantIngresar="+String.valueOf(out_CantIngresar));
		sb.append(",CantIngresar="+String.valueOf(CantIngresar));
		sb.append(",out_Temperatura="+String.valueOf(out_Temperatura));
		sb.append(",out_Riesgo="+String.valueOf(out_Riesgo));
		sb.append(",out_Muestra="+String.valueOf(out_Muestra));
		sb.append(",out_Aprobado="+out_Aprobado);
		sb.append(",out_Estado="+out_Estado);
		sb.append(",out_Message="+out_Message);
		sb.append(",in_CodBarras="+in_CodBarras);
		sb.append(",out_CodBarras="+out_CodBarras);
		sb.append(",in_Cum="+in_Cum);
		sb.append(",out_Cum="+out_Cum);
		sb.append(",in_Invima="+in_Invima);
		sb.append(",Cantidad_="+Cantidad_);
		sb.append(",CantEsperada="+CantEsperada);
		sb.append(",Lote_="+Lote_);
		sb.append(",FVencimiento_="+FVencimiento_);
		sb.append(",Restriccion_="+Restriccion_);
		sb.append(",in_Defectos="+in_Defectos);
		sb.append(",Defectos="+Defectos);
		sb.append(",Temperatura_="+Temperatura_);
		sb.append(",Nivel_Riesgo_="+Nivel_Riesgo_);
		sb.append(",Tam_Muestra_="+Tam_Muestra_);
		sb.append(",Aprobado_="+Aprobado_);
		sb.append(",in_Contrato="+in_Contrato);
		sb.append(",Contrato_Id="+String.valueOf(Contrato_Id));
		sb.append(",DContrato_Id_="+String.valueOf(DContrato_Id_));
		sb.append(",HDContrato_Id="+String.valueOf(HDContrato_Id));
		sb.append(",Precio="+String.valueOf(Precio));
		sb.append(",Iva="+String.valueOf(Iva));
		sb.append(",VUnitario="+String.valueOf(VUnitario));
		sb.append(",VUnitarioIva_="+String.valueOf(VUnitarioIva_));
		sb.append(",SubTotal_="+String.valueOf(SubTotal_));
		sb.append(",VTotalIva_="+String.valueOf(VTotalIva_));
		sb.append(",Total_="+String.valueOf(Total_));
		sb.append(",numeroFila="+String.valueOf(numeroFila));
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",Estado_="+Estado_);
		sb.append(",Respuesta_="+Respuesta_);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(outVarProcStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public BigDecimal out_Producto_Id;

				public BigDecimal getOut_Producto_Id () {
					return this.out_Producto_Id;
				}

				public Boolean out_Producto_IdIsNullable(){
				    return true;
				}
				public Boolean out_Producto_IdIsKey(){
				    return false;
				}
				public Integer out_Producto_IdLength(){
				    return null;
				}
				public Integer out_Producto_IdPrecision(){
				    return null;
				}
				public String out_Producto_IdDefault(){
				
					return null;
				
				}
				public String out_Producto_IdComment(){
				
				    return "";
				
				}
				public String out_Producto_IdPattern(){
				
					return "";
				
				}
				public String out_Producto_IdOriginalDbColumnName(){
				
					return "out_Producto_Id";
				
				}

				
			    public String out_Expediente;

				public String getOut_Expediente () {
					return this.out_Expediente;
				}

				public Boolean out_ExpedienteIsNullable(){
				    return true;
				}
				public Boolean out_ExpedienteIsKey(){
				    return false;
				}
				public Integer out_ExpedienteLength(){
				    return null;
				}
				public Integer out_ExpedientePrecision(){
				    return null;
				}
				public String out_ExpedienteDefault(){
				
					return null;
				
				}
				public String out_ExpedienteComment(){
				
				    return "";
				
				}
				public String out_ExpedientePattern(){
				
					return "";
				
				}
				public String out_ExpedienteOriginalDbColumnName(){
				
					return "out_Expediente";
				
				}

				
			    public String out_Consecutivo;

				public String getOut_Consecutivo () {
					return this.out_Consecutivo;
				}

				public Boolean out_ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean out_ConsecutivoIsKey(){
				    return false;
				}
				public Integer out_ConsecutivoLength(){
				    return null;
				}
				public Integer out_ConsecutivoPrecision(){
				    return null;
				}
				public String out_ConsecutivoDefault(){
				
					return null;
				
				}
				public String out_ConsecutivoComment(){
				
				    return "";
				
				}
				public String out_ConsecutivoPattern(){
				
					return "";
				
				}
				public String out_ConsecutivoOriginalDbColumnName(){
				
					return "out_Consecutivo";
				
				}

				
			    public Integer out_CantEnviada;

				public Integer getOut_CantEnviada () {
					return this.out_CantEnviada;
				}

				public Boolean out_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean out_CantEnviadaIsKey(){
				    return false;
				}
				public Integer out_CantEnviadaLength(){
				    return 0;
				}
				public Integer out_CantEnviadaPrecision(){
				    return 0;
				}
				public String out_CantEnviadaDefault(){
				
					return null;
				
				}
				public String out_CantEnviadaComment(){
				
				    return "";
				
				}
				public String out_CantEnviadaPattern(){
				
					return "";
				
				}
				public String out_CantEnviadaOriginalDbColumnName(){
				
					return "out_CantEnviada";
				
				}

				
			    public Integer out_CantIngresar;

				public Integer getOut_CantIngresar () {
					return this.out_CantIngresar;
				}

				public Boolean out_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean out_CantIngresarIsKey(){
				    return false;
				}
				public Integer out_CantIngresarLength(){
				    return 0;
				}
				public Integer out_CantIngresarPrecision(){
				    return 0;
				}
				public String out_CantIngresarDefault(){
				
					return null;
				
				}
				public String out_CantIngresarComment(){
				
				    return "";
				
				}
				public String out_CantIngresarPattern(){
				
					return "";
				
				}
				public String out_CantIngresarOriginalDbColumnName(){
				
					return "out_CantIngresar";
				
				}

				
			    public Double out_Temperatura;

				public Double getOut_Temperatura () {
					return this.out_Temperatura;
				}

				public Boolean out_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean out_TemperaturaIsKey(){
				    return false;
				}
				public Integer out_TemperaturaLength(){
				    return null;
				}
				public Integer out_TemperaturaPrecision(){
				    return null;
				}
				public String out_TemperaturaDefault(){
				
					return null;
				
				}
				public String out_TemperaturaComment(){
				
				    return "";
				
				}
				public String out_TemperaturaPattern(){
				
					return "";
				
				}
				public String out_TemperaturaOriginalDbColumnName(){
				
					return "out_Temperatura";
				
				}

				
			    public Integer out_Riesgo;

				public Integer getOut_Riesgo () {
					return this.out_Riesgo;
				}

				public Boolean out_RiesgoIsNullable(){
				    return true;
				}
				public Boolean out_RiesgoIsKey(){
				    return false;
				}
				public Integer out_RiesgoLength(){
				    return null;
				}
				public Integer out_RiesgoPrecision(){
				    return null;
				}
				public String out_RiesgoDefault(){
				
					return null;
				
				}
				public String out_RiesgoComment(){
				
				    return "";
				
				}
				public String out_RiesgoPattern(){
				
					return "";
				
				}
				public String out_RiesgoOriginalDbColumnName(){
				
					return "out_Riesgo";
				
				}

				
			    public Integer out_Muestra;

				public Integer getOut_Muestra () {
					return this.out_Muestra;
				}

				public Boolean out_MuestraIsNullable(){
				    return true;
				}
				public Boolean out_MuestraIsKey(){
				    return false;
				}
				public Integer out_MuestraLength(){
				    return null;
				}
				public Integer out_MuestraPrecision(){
				    return null;
				}
				public String out_MuestraDefault(){
				
					return null;
				
				}
				public String out_MuestraComment(){
				
				    return "";
				
				}
				public String out_MuestraPattern(){
				
					return "";
				
				}
				public String out_MuestraOriginalDbColumnName(){
				
					return "out_Muestra";
				
				}

				
			    public String out_Aprobado;

				public String getOut_Aprobado () {
					return this.out_Aprobado;
				}

				public Boolean out_AprobadoIsNullable(){
				    return true;
				}
				public Boolean out_AprobadoIsKey(){
				    return false;
				}
				public Integer out_AprobadoLength(){
				    return null;
				}
				public Integer out_AprobadoPrecision(){
				    return null;
				}
				public String out_AprobadoDefault(){
				
					return null;
				
				}
				public String out_AprobadoComment(){
				
				    return "";
				
				}
				public String out_AprobadoPattern(){
				
					return "";
				
				}
				public String out_AprobadoOriginalDbColumnName(){
				
					return "out_Aprobado";
				
				}

				
			    public String out_Estado;

				public String getOut_Estado () {
					return this.out_Estado;
				}

				public Boolean out_EstadoIsNullable(){
				    return true;
				}
				public Boolean out_EstadoIsKey(){
				    return false;
				}
				public Integer out_EstadoLength(){
				    return 0;
				}
				public Integer out_EstadoPrecision(){
				    return 0;
				}
				public String out_EstadoDefault(){
				
					return null;
				
				}
				public String out_EstadoComment(){
				
				    return "";
				
				}
				public String out_EstadoPattern(){
				
					return "";
				
				}
				public String out_EstadoOriginalDbColumnName(){
				
					return "out_Estado";
				
				}

				
			    public String out_Message;

				public String getOut_Message () {
					return this.out_Message;
				}

				public Boolean out_MessageIsNullable(){
				    return true;
				}
				public Boolean out_MessageIsKey(){
				    return false;
				}
				public Integer out_MessageLength(){
				    return 0;
				}
				public Integer out_MessagePrecision(){
				    return 0;
				}
				public String out_MessageDefault(){
				
					return null;
				
				}
				public String out_MessageComment(){
				
				    return "";
				
				}
				public String out_MessagePattern(){
				
					return "";
				
				}
				public String out_MessageOriginalDbColumnName(){
				
					return "out_Message";
				
				}

				
			    public String in_CodBarras;

				public String getIn_CodBarras () {
					return this.in_CodBarras;
				}

				public Boolean in_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean in_CodBarrasIsKey(){
				    return false;
				}
				public Integer in_CodBarrasLength(){
				    return 0;
				}
				public Integer in_CodBarrasPrecision(){
				    return 0;
				}
				public String in_CodBarrasDefault(){
				
					return null;
				
				}
				public String in_CodBarrasComment(){
				
				    return "";
				
				}
				public String in_CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CodBarrasOriginalDbColumnName(){
				
					return "in_CodBarras";
				
				}

				
			    public String out_CodBarras;

				public String getOut_CodBarras () {
					return this.out_CodBarras;
				}

				public Boolean out_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean out_CodBarrasIsKey(){
				    return false;
				}
				public Integer out_CodBarrasLength(){
				    return null;
				}
				public Integer out_CodBarrasPrecision(){
				    return null;
				}
				public String out_CodBarrasDefault(){
				
					return null;
				
				}
				public String out_CodBarrasComment(){
				
				    return "";
				
				}
				public String out_CodBarrasPattern(){
				
					return "";
				
				}
				public String out_CodBarrasOriginalDbColumnName(){
				
					return "out_CodBarras";
				
				}

				
			    public String in_Cum;

				public String getIn_Cum () {
					return this.in_Cum;
				}

				public Boolean in_CumIsNullable(){
				    return true;
				}
				public Boolean in_CumIsKey(){
				    return false;
				}
				public Integer in_CumLength(){
				    return 0;
				}
				public Integer in_CumPrecision(){
				    return 0;
				}
				public String in_CumDefault(){
				
					return null;
				
				}
				public String in_CumComment(){
				
				    return "";
				
				}
				public String in_CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CumOriginalDbColumnName(){
				
					return "in_Cum";
				
				}

				
			    public String out_Cum;

				public String getOut_Cum () {
					return this.out_Cum;
				}

				public Boolean out_CumIsNullable(){
				    return true;
				}
				public Boolean out_CumIsKey(){
				    return false;
				}
				public Integer out_CumLength(){
				    return null;
				}
				public Integer out_CumPrecision(){
				    return null;
				}
				public String out_CumDefault(){
				
					return null;
				
				}
				public String out_CumComment(){
				
				    return "";
				
				}
				public String out_CumPattern(){
				
					return "";
				
				}
				public String out_CumOriginalDbColumnName(){
				
					return "out_Cum";
				
				}

				
			    public String in_Invima;

				public String getIn_Invima () {
					return this.in_Invima;
				}

				public Boolean in_InvimaIsNullable(){
				    return true;
				}
				public Boolean in_InvimaIsKey(){
				    return false;
				}
				public Integer in_InvimaLength(){
				    return 0;
				}
				public Integer in_InvimaPrecision(){
				    return 0;
				}
				public String in_InvimaDefault(){
				
					return null;
				
				}
				public String in_InvimaComment(){
				
				    return "";
				
				}
				public String in_InvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_InvimaOriginalDbColumnName(){
				
					return "in_Invima";
				
				}

				
			    public String in_CantEnviada;

				public String getIn_CantEnviada () {
					return this.in_CantEnviada;
				}

				public Boolean in_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean in_CantEnviadaIsKey(){
				    return false;
				}
				public Integer in_CantEnviadaLength(){
				    return 0;
				}
				public Integer in_CantEnviadaPrecision(){
				    return 0;
				}
				public String in_CantEnviadaDefault(){
				
					return null;
				
				}
				public String in_CantEnviadaComment(){
				
				    return "";
				
				}
				public String in_CantEnviadaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CantEnviadaOriginalDbColumnName(){
				
					return "in_CantEnviada";
				
				}

				
			    public String in_CantIngresar;

				public String getIn_CantIngresar () {
					return this.in_CantIngresar;
				}

				public Boolean in_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean in_CantIngresarIsKey(){
				    return false;
				}
				public Integer in_CantIngresarLength(){
				    return 0;
				}
				public Integer in_CantIngresarPrecision(){
				    return 0;
				}
				public String in_CantIngresarDefault(){
				
					return null;
				
				}
				public String in_CantIngresarComment(){
				
				    return "";
				
				}
				public String in_CantIngresarPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CantIngresarOriginalDbColumnName(){
				
					return "in_CantIngresar";
				
				}

				
			    public String in_Lote;

				public String getIn_Lote () {
					return this.in_Lote;
				}

				public Boolean in_LoteIsNullable(){
				    return true;
				}
				public Boolean in_LoteIsKey(){
				    return false;
				}
				public Integer in_LoteLength(){
				    return 0;
				}
				public Integer in_LotePrecision(){
				    return 0;
				}
				public String in_LoteDefault(){
				
					return null;
				
				}
				public String in_LoteComment(){
				
				    return "";
				
				}
				public String in_LotePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_LoteOriginalDbColumnName(){
				
					return "in_Lote";
				
				}

				
			    public String in_FVencimiento;

				public String getIn_FVencimiento () {
					return this.in_FVencimiento;
				}

				public Boolean in_FVencimientoIsNullable(){
				    return true;
				}
				public Boolean in_FVencimientoIsKey(){
				    return false;
				}
				public Integer in_FVencimientoLength(){
				    return 0;
				}
				public Integer in_FVencimientoPrecision(){
				    return 0;
				}
				public String in_FVencimientoDefault(){
				
					return null;
				
				}
				public String in_FVencimientoComment(){
				
				    return "";
				
				}
				public String in_FVencimientoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_FVencimientoOriginalDbColumnName(){
				
					return "in_FVencimiento";
				
				}

				
			    public String in_Leyenda;

				public String getIn_Leyenda () {
					return this.in_Leyenda;
				}

				public Boolean in_LeyendaIsNullable(){
				    return true;
				}
				public Boolean in_LeyendaIsKey(){
				    return false;
				}
				public Integer in_LeyendaLength(){
				    return 0;
				}
				public Integer in_LeyendaPrecision(){
				    return 0;
				}
				public String in_LeyendaDefault(){
				
					return null;
				
				}
				public String in_LeyendaComment(){
				
				    return "";
				
				}
				public String in_LeyendaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_LeyendaOriginalDbColumnName(){
				
					return "in_Leyenda";
				
				}

				
			    public String in_Defectos;

				public String getIn_Defectos () {
					return this.in_Defectos;
				}

				public Boolean in_DefectosIsNullable(){
				    return true;
				}
				public Boolean in_DefectosIsKey(){
				    return false;
				}
				public Integer in_DefectosLength(){
				    return 0;
				}
				public Integer in_DefectosPrecision(){
				    return 0;
				}
				public String in_DefectosDefault(){
				
					return null;
				
				}
				public String in_DefectosComment(){
				
				    return "";
				
				}
				public String in_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_DefectosOriginalDbColumnName(){
				
					return "in_Defectos";
				
				}

				
			    public String out_Defectos;

				public String getOut_Defectos () {
					return this.out_Defectos;
				}

				public Boolean out_DefectosIsNullable(){
				    return true;
				}
				public Boolean out_DefectosIsKey(){
				    return false;
				}
				public Integer out_DefectosLength(){
				    return 0;
				}
				public Integer out_DefectosPrecision(){
				    return 0;
				}
				public String out_DefectosDefault(){
				
					return null;
				
				}
				public String out_DefectosComment(){
				
				    return "";
				
				}
				public String out_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String out_DefectosOriginalDbColumnName(){
				
					return "out_Defectos";
				
				}

				
			    public String in_Temperatura;

				public String getIn_Temperatura () {
					return this.in_Temperatura;
				}

				public Boolean in_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean in_TemperaturaIsKey(){
				    return false;
				}
				public Integer in_TemperaturaLength(){
				    return 0;
				}
				public Integer in_TemperaturaPrecision(){
				    return 0;
				}
				public String in_TemperaturaDefault(){
				
					return null;
				
				}
				public String in_TemperaturaComment(){
				
				    return "";
				
				}
				public String in_TemperaturaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_TemperaturaOriginalDbColumnName(){
				
					return "in_Temperatura";
				
				}

				
			    public String in_Riesgo;

				public String getIn_Riesgo () {
					return this.in_Riesgo;
				}

				public Boolean in_RiesgoIsNullable(){
				    return true;
				}
				public Boolean in_RiesgoIsKey(){
				    return false;
				}
				public Integer in_RiesgoLength(){
				    return 0;
				}
				public Integer in_RiesgoPrecision(){
				    return 0;
				}
				public String in_RiesgoDefault(){
				
					return null;
				
				}
				public String in_RiesgoComment(){
				
				    return "";
				
				}
				public String in_RiesgoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_RiesgoOriginalDbColumnName(){
				
					return "in_Riesgo";
				
				}

				
			    public String in_Muestra;

				public String getIn_Muestra () {
					return this.in_Muestra;
				}

				public Boolean in_MuestraIsNullable(){
				    return true;
				}
				public Boolean in_MuestraIsKey(){
				    return false;
				}
				public Integer in_MuestraLength(){
				    return 0;
				}
				public Integer in_MuestraPrecision(){
				    return 0;
				}
				public String in_MuestraDefault(){
				
					return null;
				
				}
				public String in_MuestraComment(){
				
				    return "";
				
				}
				public String in_MuestraPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_MuestraOriginalDbColumnName(){
				
					return "in_Muestra";
				
				}

				
			    public String in_Aprobado;

				public String getIn_Aprobado () {
					return this.in_Aprobado;
				}

				public Boolean in_AprobadoIsNullable(){
				    return true;
				}
				public Boolean in_AprobadoIsKey(){
				    return false;
				}
				public Integer in_AprobadoLength(){
				    return 0;
				}
				public Integer in_AprobadoPrecision(){
				    return 0;
				}
				public String in_AprobadoDefault(){
				
					return null;
				
				}
				public String in_AprobadoComment(){
				
				    return "";
				
				}
				public String in_AprobadoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_AprobadoOriginalDbColumnName(){
				
					return "in_Aprobado";
				
				}

				
			    public String in_Contrato;

				public String getIn_Contrato () {
					return this.in_Contrato;
				}

				public Boolean in_ContratoIsNullable(){
				    return true;
				}
				public Boolean in_ContratoIsKey(){
				    return false;
				}
				public Integer in_ContratoLength(){
				    return 0;
				}
				public Integer in_ContratoPrecision(){
				    return 0;
				}
				public String in_ContratoDefault(){
				
					return null;
				
				}
				public String in_ContratoComment(){
				
				    return "";
				
				}
				public String in_ContratoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_ContratoOriginalDbColumnName(){
				
					return "in_Contrato";
				
				}

				
			    public BigDecimal Contrato_Id;

				public BigDecimal getContrato_Id () {
					return this.Contrato_Id;
				}

				public Boolean Contrato_IdIsNullable(){
				    return false;
				}
				public Boolean Contrato_IdIsKey(){
				    return false;
				}
				public Integer Contrato_IdLength(){
				    return 0;
				}
				public Integer Contrato_IdPrecision(){
				    return null;
				}
				public String Contrato_IdDefault(){
				
					return "";
				
				}
				public String Contrato_IdComment(){
				
				    return "";
				
				}
				public String Contrato_IdPattern(){
				
					return "";
				
				}
				public String Contrato_IdOriginalDbColumnName(){
				
					return "Contrato_Id";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public Integer Id_;

				public Integer getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				
			    public BigDecimal DCONTRATOS_ID;

				public BigDecimal getDCONTRATOS_ID () {
					return this.DCONTRATOS_ID;
				}

				public Boolean DCONTRATOS_IDIsNullable(){
				    return false;
				}
				public Boolean DCONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer DCONTRATOS_IDLength(){
				    return 0;
				}
				public Integer DCONTRATOS_IDPrecision(){
				    return null;
				}
				public String DCONTRATOS_IDDefault(){
				
					return "";
				
				}
				public String DCONTRATOS_IDComment(){
				
				    return "";
				
				}
				public String DCONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String DCONTRATOS_IDOriginalDbColumnName(){
				
					return "DCONTRATOS_ID";
				
				}

				
			    public BigDecimal HDCONTRATOS_ID;

				public BigDecimal getHDCONTRATOS_ID () {
					return this.HDCONTRATOS_ID;
				}

				public Boolean HDCONTRATOS_IDIsNullable(){
				    return false;
				}
				public Boolean HDCONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer HDCONTRATOS_IDLength(){
				    return 0;
				}
				public Integer HDCONTRATOS_IDPrecision(){
				    return null;
				}
				public String HDCONTRATOS_IDDefault(){
				
					return "";
				
				}
				public String HDCONTRATOS_IDComment(){
				
				    return "";
				
				}
				public String HDCONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String HDCONTRATOS_IDOriginalDbColumnName(){
				
					return "HDCONTRATOS_ID";
				
				}

				
			    public BigDecimal PRECIO;

				public BigDecimal getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return false;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 0;
				}
				public Integer PRECIOPrecision(){
				    return null;
				}
				public String PRECIODefault(){
				
					return "";
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public BigDecimal IVA;

				public BigDecimal getIVA () {
					return this.IVA;
				}

				public Boolean IVAIsNullable(){
				    return false;
				}
				public Boolean IVAIsKey(){
				    return false;
				}
				public Integer IVALength(){
				    return 0;
				}
				public Integer IVAPrecision(){
				    return null;
				}
				public String IVADefault(){
				
					return "";
				
				}
				public String IVAComment(){
				
				    return "";
				
				}
				public String IVAPattern(){
				
					return "";
				
				}
				public String IVAOriginalDbColumnName(){
				
					return "IVA";
				
				}

				
			    public BigDecimal VUNITARIO;

				public BigDecimal getVUNITARIO () {
					return this.VUNITARIO;
				}

				public Boolean VUNITARIOIsNullable(){
				    return true;
				}
				public Boolean VUNITARIOIsKey(){
				    return false;
				}
				public Integer VUNITARIOLength(){
				    return null;
				}
				public Integer VUNITARIOPrecision(){
				    return null;
				}
				public String VUNITARIODefault(){
				
					return null;
				
				}
				public String VUNITARIOComment(){
				
				    return "";
				
				}
				public String VUNITARIOPattern(){
				
					return "";
				
				}
				public String VUNITARIOOriginalDbColumnName(){
				
					return "VUNITARIO";
				
				}

				
			    public BigDecimal VUNITARIOIVA;

				public BigDecimal getVUNITARIOIVA () {
					return this.VUNITARIOIVA;
				}

				public Boolean VUNITARIOIVAIsNullable(){
				    return true;
				}
				public Boolean VUNITARIOIVAIsKey(){
				    return false;
				}
				public Integer VUNITARIOIVALength(){
				    return null;
				}
				public Integer VUNITARIOIVAPrecision(){
				    return null;
				}
				public String VUNITARIOIVADefault(){
				
					return null;
				
				}
				public String VUNITARIOIVAComment(){
				
				    return "";
				
				}
				public String VUNITARIOIVAPattern(){
				
					return "";
				
				}
				public String VUNITARIOIVAOriginalDbColumnName(){
				
					return "VUNITARIOIVA";
				
				}

				
			    public BigDecimal SUBTOTAL;

				public BigDecimal getSUBTOTAL () {
					return this.SUBTOTAL;
				}

				public Boolean SUBTOTALIsNullable(){
				    return true;
				}
				public Boolean SUBTOTALIsKey(){
				    return false;
				}
				public Integer SUBTOTALLength(){
				    return null;
				}
				public Integer SUBTOTALPrecision(){
				    return null;
				}
				public String SUBTOTALDefault(){
				
					return null;
				
				}
				public String SUBTOTALComment(){
				
				    return "";
				
				}
				public String SUBTOTALPattern(){
				
					return "";
				
				}
				public String SUBTOTALOriginalDbColumnName(){
				
					return "SUBTOTAL";
				
				}

				
			    public BigDecimal VTOTALIVA;

				public BigDecimal getVTOTALIVA () {
					return this.VTOTALIVA;
				}

				public Boolean VTOTALIVAIsNullable(){
				    return true;
				}
				public Boolean VTOTALIVAIsKey(){
				    return false;
				}
				public Integer VTOTALIVALength(){
				    return null;
				}
				public Integer VTOTALIVAPrecision(){
				    return null;
				}
				public String VTOTALIVADefault(){
				
					return null;
				
				}
				public String VTOTALIVAComment(){
				
				    return "";
				
				}
				public String VTOTALIVAPattern(){
				
					return "";
				
				}
				public String VTOTALIVAOriginalDbColumnName(){
				
					return "VTOTALIVA";
				
				}

				
			    public BigDecimal TOTAL;

				public BigDecimal getTOTAL () {
					return this.TOTAL;
				}

				public Boolean TOTALIsNullable(){
				    return true;
				}
				public Boolean TOTALIsKey(){
				    return false;
				}
				public Integer TOTALLength(){
				    return null;
				}
				public Integer TOTALPrecision(){
				    return null;
				}
				public String TOTALDefault(){
				
					return null;
				
				}
				public String TOTALComment(){
				
				    return "";
				
				}
				public String TOTALPattern(){
				
					return "";
				
				}
				public String TOTALOriginalDbColumnName(){
				
					return "TOTAL";
				
				}

				
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.out_Producto_Id = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.in_CantEnviada = readString(dis);
					
					this.in_CantIngresar = readString(dis);
					
					this.in_Lote = readString(dis);
					
					this.in_FVencimiento = readString(dis);
					
					this.in_Leyenda = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.out_Defectos = readString(dis);
					
					this.in_Temperatura = readString(dis);
					
					this.in_Riesgo = readString(dis);
					
					this.in_Muestra = readString(dis);
					
					this.in_Aprobado = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = readInteger(dis);
					
						this.DCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.PRECIO = (BigDecimal) dis.readObject();
					
						this.IVA = (BigDecimal) dis.readObject();
					
						this.VUNITARIO = (BigDecimal) dis.readObject();
					
						this.VUNITARIOIVA = (BigDecimal) dis.readObject();
					
						this.SUBTOTAL = (BigDecimal) dis.readObject();
					
						this.VTOTALIVA = (BigDecimal) dis.readObject();
					
						this.TOTAL = (BigDecimal) dis.readObject();
					
						this.numeroFila = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.out_Producto_Id = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.in_CantEnviada = readString(dis);
					
					this.in_CantIngresar = readString(dis);
					
					this.in_Lote = readString(dis);
					
					this.in_FVencimiento = readString(dis);
					
					this.in_Leyenda = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.out_Defectos = readString(dis);
					
					this.in_Temperatura = readString(dis);
					
					this.in_Riesgo = readString(dis);
					
					this.in_Muestra = readString(dis);
					
					this.in_Aprobado = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = readInteger(dis);
					
						this.DCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.PRECIO = (BigDecimal) dis.readObject();
					
						this.IVA = (BigDecimal) dis.readObject();
					
						this.VUNITARIO = (BigDecimal) dis.readObject();
					
						this.VUNITARIOIVA = (BigDecimal) dis.readObject();
					
						this.SUBTOTAL = (BigDecimal) dis.readObject();
					
						this.VTOTALIVA = (BigDecimal) dis.readObject();
					
						this.TOTAL = (BigDecimal) dis.readObject();
					
						this.numeroFila = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.out_Producto_Id);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.in_CantEnviada,dos);
					
					// String
				
						writeString(this.in_CantIngresar,dos);
					
					// String
				
						writeString(this.in_Lote,dos);
					
					// String
				
						writeString(this.in_FVencimiento,dos);
					
					// String
				
						writeString(this.in_Leyenda,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.out_Defectos,dos);
					
					// String
				
						writeString(this.in_Temperatura,dos);
					
					// String
				
						writeString(this.in_Riesgo,dos);
					
					// String
				
						writeString(this.in_Muestra,dos);
					
					// String
				
						writeString(this.in_Aprobado,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Contrato_Id);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// Integer
				
						writeInteger(this.Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DCONTRATOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.HDCONTRATOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IVA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VUNITARIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VUNITARIOIVA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBTOTAL);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VTOTALIVA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.out_Producto_Id);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.in_CantEnviada,dos);
					
					// String
				
						writeString(this.in_CantIngresar,dos);
					
					// String
				
						writeString(this.in_Lote,dos);
					
					// String
				
						writeString(this.in_FVencimiento,dos);
					
					// String
				
						writeString(this.in_Leyenda,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.out_Defectos,dos);
					
					// String
				
						writeString(this.in_Temperatura,dos);
					
					// String
				
						writeString(this.in_Riesgo,dos);
					
					// String
				
						writeString(this.in_Muestra,dos);
					
					// String
				
						writeString(this.in_Aprobado,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Contrato_Id);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// Integer
				
						writeInteger(this.Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DCONTRATOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.HDCONTRATOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IVA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VUNITARIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VUNITARIOIVA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBTOTAL);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VTOTALIVA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("out_Producto_Id="+String.valueOf(out_Producto_Id));
		sb.append(",out_Expediente="+out_Expediente);
		sb.append(",out_Consecutivo="+out_Consecutivo);
		sb.append(",out_CantEnviada="+String.valueOf(out_CantEnviada));
		sb.append(",out_CantIngresar="+String.valueOf(out_CantIngresar));
		sb.append(",out_Temperatura="+String.valueOf(out_Temperatura));
		sb.append(",out_Riesgo="+String.valueOf(out_Riesgo));
		sb.append(",out_Muestra="+String.valueOf(out_Muestra));
		sb.append(",out_Aprobado="+out_Aprobado);
		sb.append(",out_Estado="+out_Estado);
		sb.append(",out_Message="+out_Message);
		sb.append(",in_CodBarras="+in_CodBarras);
		sb.append(",out_CodBarras="+out_CodBarras);
		sb.append(",in_Cum="+in_Cum);
		sb.append(",out_Cum="+out_Cum);
		sb.append(",in_Invima="+in_Invima);
		sb.append(",in_CantEnviada="+in_CantEnviada);
		sb.append(",in_CantIngresar="+in_CantIngresar);
		sb.append(",in_Lote="+in_Lote);
		sb.append(",in_FVencimiento="+in_FVencimiento);
		sb.append(",in_Leyenda="+in_Leyenda);
		sb.append(",in_Defectos="+in_Defectos);
		sb.append(",out_Defectos="+out_Defectos);
		sb.append(",in_Temperatura="+in_Temperatura);
		sb.append(",in_Riesgo="+in_Riesgo);
		sb.append(",in_Muestra="+in_Muestra);
		sb.append(",in_Aprobado="+in_Aprobado);
		sb.append(",in_Contrato="+in_Contrato);
		sb.append(",Contrato_Id="+String.valueOf(Contrato_Id));
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",Estado_="+Estado_);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",Id_="+String.valueOf(Id_));
		sb.append(",DCONTRATOS_ID="+String.valueOf(DCONTRATOS_ID));
		sb.append(",HDCONTRATOS_ID="+String.valueOf(HDCONTRATOS_ID));
		sb.append(",PRECIO="+String.valueOf(PRECIO));
		sb.append(",IVA="+String.valueOf(IVA));
		sb.append(",VUNITARIO="+String.valueOf(VUNITARIO));
		sb.append(",VUNITARIOIVA="+String.valueOf(VUNITARIOIVA));
		sb.append(",SUBTOTAL="+String.valueOf(SUBTOTAL));
		sb.append(",VTOTALIVA="+String.valueOf(VTOTALIVA));
		sb.append(",TOTAL="+String.valueOf(TOTAL));
		sb.append(",numeroFila="+String.valueOf(numeroFila));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class outProductoContratoStruct implements routines.system.IPersistableRow<outProductoContratoStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public BigDecimal out_Producto_Id;

				public BigDecimal getOut_Producto_Id () {
					return this.out_Producto_Id;
				}

				public Boolean out_Producto_IdIsNullable(){
				    return true;
				}
				public Boolean out_Producto_IdIsKey(){
				    return false;
				}
				public Integer out_Producto_IdLength(){
				    return null;
				}
				public Integer out_Producto_IdPrecision(){
				    return null;
				}
				public String out_Producto_IdDefault(){
				
					return null;
				
				}
				public String out_Producto_IdComment(){
				
				    return "";
				
				}
				public String out_Producto_IdPattern(){
				
					return "";
				
				}
				public String out_Producto_IdOriginalDbColumnName(){
				
					return "out_Producto_Id";
				
				}

				
			    public String out_Expediente;

				public String getOut_Expediente () {
					return this.out_Expediente;
				}

				public Boolean out_ExpedienteIsNullable(){
				    return true;
				}
				public Boolean out_ExpedienteIsKey(){
				    return false;
				}
				public Integer out_ExpedienteLength(){
				    return null;
				}
				public Integer out_ExpedientePrecision(){
				    return null;
				}
				public String out_ExpedienteDefault(){
				
					return null;
				
				}
				public String out_ExpedienteComment(){
				
				    return "";
				
				}
				public String out_ExpedientePattern(){
				
					return "";
				
				}
				public String out_ExpedienteOriginalDbColumnName(){
				
					return "out_Expediente";
				
				}

				
			    public String out_Consecutivo;

				public String getOut_Consecutivo () {
					return this.out_Consecutivo;
				}

				public Boolean out_ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean out_ConsecutivoIsKey(){
				    return false;
				}
				public Integer out_ConsecutivoLength(){
				    return null;
				}
				public Integer out_ConsecutivoPrecision(){
				    return null;
				}
				public String out_ConsecutivoDefault(){
				
					return null;
				
				}
				public String out_ConsecutivoComment(){
				
				    return "";
				
				}
				public String out_ConsecutivoPattern(){
				
					return "";
				
				}
				public String out_ConsecutivoOriginalDbColumnName(){
				
					return "out_Consecutivo";
				
				}

				
			    public Integer out_CantEnviada;

				public Integer getOut_CantEnviada () {
					return this.out_CantEnviada;
				}

				public Boolean out_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean out_CantEnviadaIsKey(){
				    return false;
				}
				public Integer out_CantEnviadaLength(){
				    return 0;
				}
				public Integer out_CantEnviadaPrecision(){
				    return 0;
				}
				public String out_CantEnviadaDefault(){
				
					return null;
				
				}
				public String out_CantEnviadaComment(){
				
				    return "";
				
				}
				public String out_CantEnviadaPattern(){
				
					return "";
				
				}
				public String out_CantEnviadaOriginalDbColumnName(){
				
					return "out_CantEnviada";
				
				}

				
			    public Integer out_CantIngresar;

				public Integer getOut_CantIngresar () {
					return this.out_CantIngresar;
				}

				public Boolean out_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean out_CantIngresarIsKey(){
				    return false;
				}
				public Integer out_CantIngresarLength(){
				    return 0;
				}
				public Integer out_CantIngresarPrecision(){
				    return 0;
				}
				public String out_CantIngresarDefault(){
				
					return null;
				
				}
				public String out_CantIngresarComment(){
				
				    return "";
				
				}
				public String out_CantIngresarPattern(){
				
					return "";
				
				}
				public String out_CantIngresarOriginalDbColumnName(){
				
					return "out_CantIngresar";
				
				}

				
			    public Double out_Temperatura;

				public Double getOut_Temperatura () {
					return this.out_Temperatura;
				}

				public Boolean out_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean out_TemperaturaIsKey(){
				    return false;
				}
				public Integer out_TemperaturaLength(){
				    return null;
				}
				public Integer out_TemperaturaPrecision(){
				    return null;
				}
				public String out_TemperaturaDefault(){
				
					return null;
				
				}
				public String out_TemperaturaComment(){
				
				    return "";
				
				}
				public String out_TemperaturaPattern(){
				
					return "";
				
				}
				public String out_TemperaturaOriginalDbColumnName(){
				
					return "out_Temperatura";
				
				}

				
			    public Integer out_Riesgo;

				public Integer getOut_Riesgo () {
					return this.out_Riesgo;
				}

				public Boolean out_RiesgoIsNullable(){
				    return true;
				}
				public Boolean out_RiesgoIsKey(){
				    return false;
				}
				public Integer out_RiesgoLength(){
				    return null;
				}
				public Integer out_RiesgoPrecision(){
				    return null;
				}
				public String out_RiesgoDefault(){
				
					return null;
				
				}
				public String out_RiesgoComment(){
				
				    return "";
				
				}
				public String out_RiesgoPattern(){
				
					return "";
				
				}
				public String out_RiesgoOriginalDbColumnName(){
				
					return "out_Riesgo";
				
				}

				
			    public Integer out_Muestra;

				public Integer getOut_Muestra () {
					return this.out_Muestra;
				}

				public Boolean out_MuestraIsNullable(){
				    return true;
				}
				public Boolean out_MuestraIsKey(){
				    return false;
				}
				public Integer out_MuestraLength(){
				    return null;
				}
				public Integer out_MuestraPrecision(){
				    return null;
				}
				public String out_MuestraDefault(){
				
					return null;
				
				}
				public String out_MuestraComment(){
				
				    return "";
				
				}
				public String out_MuestraPattern(){
				
					return "";
				
				}
				public String out_MuestraOriginalDbColumnName(){
				
					return "out_Muestra";
				
				}

				
			    public String out_Aprobado;

				public String getOut_Aprobado () {
					return this.out_Aprobado;
				}

				public Boolean out_AprobadoIsNullable(){
				    return true;
				}
				public Boolean out_AprobadoIsKey(){
				    return false;
				}
				public Integer out_AprobadoLength(){
				    return null;
				}
				public Integer out_AprobadoPrecision(){
				    return null;
				}
				public String out_AprobadoDefault(){
				
					return null;
				
				}
				public String out_AprobadoComment(){
				
				    return "";
				
				}
				public String out_AprobadoPattern(){
				
					return "";
				
				}
				public String out_AprobadoOriginalDbColumnName(){
				
					return "out_Aprobado";
				
				}

				
			    public String out_Estado;

				public String getOut_Estado () {
					return this.out_Estado;
				}

				public Boolean out_EstadoIsNullable(){
				    return true;
				}
				public Boolean out_EstadoIsKey(){
				    return false;
				}
				public Integer out_EstadoLength(){
				    return 0;
				}
				public Integer out_EstadoPrecision(){
				    return 0;
				}
				public String out_EstadoDefault(){
				
					return null;
				
				}
				public String out_EstadoComment(){
				
				    return "";
				
				}
				public String out_EstadoPattern(){
				
					return "";
				
				}
				public String out_EstadoOriginalDbColumnName(){
				
					return "out_Estado";
				
				}

				
			    public String out_Message;

				public String getOut_Message () {
					return this.out_Message;
				}

				public Boolean out_MessageIsNullable(){
				    return true;
				}
				public Boolean out_MessageIsKey(){
				    return false;
				}
				public Integer out_MessageLength(){
				    return 0;
				}
				public Integer out_MessagePrecision(){
				    return 0;
				}
				public String out_MessageDefault(){
				
					return null;
				
				}
				public String out_MessageComment(){
				
				    return "";
				
				}
				public String out_MessagePattern(){
				
					return "";
				
				}
				public String out_MessageOriginalDbColumnName(){
				
					return "out_Message";
				
				}

				
			    public String in_CodBarras;

				public String getIn_CodBarras () {
					return this.in_CodBarras;
				}

				public Boolean in_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean in_CodBarrasIsKey(){
				    return false;
				}
				public Integer in_CodBarrasLength(){
				    return 0;
				}
				public Integer in_CodBarrasPrecision(){
				    return 0;
				}
				public String in_CodBarrasDefault(){
				
					return null;
				
				}
				public String in_CodBarrasComment(){
				
				    return "";
				
				}
				public String in_CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CodBarrasOriginalDbColumnName(){
				
					return "in_CodBarras";
				
				}

				
			    public String out_CodBarras;

				public String getOut_CodBarras () {
					return this.out_CodBarras;
				}

				public Boolean out_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean out_CodBarrasIsKey(){
				    return false;
				}
				public Integer out_CodBarrasLength(){
				    return null;
				}
				public Integer out_CodBarrasPrecision(){
				    return null;
				}
				public String out_CodBarrasDefault(){
				
					return null;
				
				}
				public String out_CodBarrasComment(){
				
				    return "";
				
				}
				public String out_CodBarrasPattern(){
				
					return "";
				
				}
				public String out_CodBarrasOriginalDbColumnName(){
				
					return "out_CodBarras";
				
				}

				
			    public String in_Cum;

				public String getIn_Cum () {
					return this.in_Cum;
				}

				public Boolean in_CumIsNullable(){
				    return true;
				}
				public Boolean in_CumIsKey(){
				    return false;
				}
				public Integer in_CumLength(){
				    return 0;
				}
				public Integer in_CumPrecision(){
				    return 0;
				}
				public String in_CumDefault(){
				
					return null;
				
				}
				public String in_CumComment(){
				
				    return "";
				
				}
				public String in_CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CumOriginalDbColumnName(){
				
					return "in_Cum";
				
				}

				
			    public String out_Cum;

				public String getOut_Cum () {
					return this.out_Cum;
				}

				public Boolean out_CumIsNullable(){
				    return true;
				}
				public Boolean out_CumIsKey(){
				    return false;
				}
				public Integer out_CumLength(){
				    return null;
				}
				public Integer out_CumPrecision(){
				    return null;
				}
				public String out_CumDefault(){
				
					return null;
				
				}
				public String out_CumComment(){
				
				    return "";
				
				}
				public String out_CumPattern(){
				
					return "";
				
				}
				public String out_CumOriginalDbColumnName(){
				
					return "out_Cum";
				
				}

				
			    public String in_Invima;

				public String getIn_Invima () {
					return this.in_Invima;
				}

				public Boolean in_InvimaIsNullable(){
				    return true;
				}
				public Boolean in_InvimaIsKey(){
				    return false;
				}
				public Integer in_InvimaLength(){
				    return 0;
				}
				public Integer in_InvimaPrecision(){
				    return 0;
				}
				public String in_InvimaDefault(){
				
					return null;
				
				}
				public String in_InvimaComment(){
				
				    return "";
				
				}
				public String in_InvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_InvimaOriginalDbColumnName(){
				
					return "in_Invima";
				
				}

				
			    public String in_CantEnviada;

				public String getIn_CantEnviada () {
					return this.in_CantEnviada;
				}

				public Boolean in_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean in_CantEnviadaIsKey(){
				    return false;
				}
				public Integer in_CantEnviadaLength(){
				    return 0;
				}
				public Integer in_CantEnviadaPrecision(){
				    return 0;
				}
				public String in_CantEnviadaDefault(){
				
					return null;
				
				}
				public String in_CantEnviadaComment(){
				
				    return "";
				
				}
				public String in_CantEnviadaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CantEnviadaOriginalDbColumnName(){
				
					return "in_CantEnviada";
				
				}

				
			    public String in_CantIngresar;

				public String getIn_CantIngresar () {
					return this.in_CantIngresar;
				}

				public Boolean in_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean in_CantIngresarIsKey(){
				    return false;
				}
				public Integer in_CantIngresarLength(){
				    return 0;
				}
				public Integer in_CantIngresarPrecision(){
				    return 0;
				}
				public String in_CantIngresarDefault(){
				
					return null;
				
				}
				public String in_CantIngresarComment(){
				
				    return "";
				
				}
				public String in_CantIngresarPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CantIngresarOriginalDbColumnName(){
				
					return "in_CantIngresar";
				
				}

				
			    public String in_Lote;

				public String getIn_Lote () {
					return this.in_Lote;
				}

				public Boolean in_LoteIsNullable(){
				    return true;
				}
				public Boolean in_LoteIsKey(){
				    return false;
				}
				public Integer in_LoteLength(){
				    return 0;
				}
				public Integer in_LotePrecision(){
				    return 0;
				}
				public String in_LoteDefault(){
				
					return null;
				
				}
				public String in_LoteComment(){
				
				    return "";
				
				}
				public String in_LotePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_LoteOriginalDbColumnName(){
				
					return "in_Lote";
				
				}

				
			    public String in_FVencimiento;

				public String getIn_FVencimiento () {
					return this.in_FVencimiento;
				}

				public Boolean in_FVencimientoIsNullable(){
				    return true;
				}
				public Boolean in_FVencimientoIsKey(){
				    return false;
				}
				public Integer in_FVencimientoLength(){
				    return 0;
				}
				public Integer in_FVencimientoPrecision(){
				    return 0;
				}
				public String in_FVencimientoDefault(){
				
					return null;
				
				}
				public String in_FVencimientoComment(){
				
				    return "";
				
				}
				public String in_FVencimientoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_FVencimientoOriginalDbColumnName(){
				
					return "in_FVencimiento";
				
				}

				
			    public String in_Leyenda;

				public String getIn_Leyenda () {
					return this.in_Leyenda;
				}

				public Boolean in_LeyendaIsNullable(){
				    return true;
				}
				public Boolean in_LeyendaIsKey(){
				    return false;
				}
				public Integer in_LeyendaLength(){
				    return 0;
				}
				public Integer in_LeyendaPrecision(){
				    return 0;
				}
				public String in_LeyendaDefault(){
				
					return null;
				
				}
				public String in_LeyendaComment(){
				
				    return "";
				
				}
				public String in_LeyendaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_LeyendaOriginalDbColumnName(){
				
					return "in_Leyenda";
				
				}

				
			    public String in_Defectos;

				public String getIn_Defectos () {
					return this.in_Defectos;
				}

				public Boolean in_DefectosIsNullable(){
				    return true;
				}
				public Boolean in_DefectosIsKey(){
				    return false;
				}
				public Integer in_DefectosLength(){
				    return 0;
				}
				public Integer in_DefectosPrecision(){
				    return 0;
				}
				public String in_DefectosDefault(){
				
					return null;
				
				}
				public String in_DefectosComment(){
				
				    return "";
				
				}
				public String in_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_DefectosOriginalDbColumnName(){
				
					return "in_Defectos";
				
				}

				
			    public String out_Defectos;

				public String getOut_Defectos () {
					return this.out_Defectos;
				}

				public Boolean out_DefectosIsNullable(){
				    return true;
				}
				public Boolean out_DefectosIsKey(){
				    return false;
				}
				public Integer out_DefectosLength(){
				    return 0;
				}
				public Integer out_DefectosPrecision(){
				    return 0;
				}
				public String out_DefectosDefault(){
				
					return null;
				
				}
				public String out_DefectosComment(){
				
				    return "";
				
				}
				public String out_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String out_DefectosOriginalDbColumnName(){
				
					return "out_Defectos";
				
				}

				
			    public String in_Temperatura;

				public String getIn_Temperatura () {
					return this.in_Temperatura;
				}

				public Boolean in_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean in_TemperaturaIsKey(){
				    return false;
				}
				public Integer in_TemperaturaLength(){
				    return 0;
				}
				public Integer in_TemperaturaPrecision(){
				    return 0;
				}
				public String in_TemperaturaDefault(){
				
					return null;
				
				}
				public String in_TemperaturaComment(){
				
				    return "";
				
				}
				public String in_TemperaturaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_TemperaturaOriginalDbColumnName(){
				
					return "in_Temperatura";
				
				}

				
			    public String in_Riesgo;

				public String getIn_Riesgo () {
					return this.in_Riesgo;
				}

				public Boolean in_RiesgoIsNullable(){
				    return true;
				}
				public Boolean in_RiesgoIsKey(){
				    return false;
				}
				public Integer in_RiesgoLength(){
				    return 0;
				}
				public Integer in_RiesgoPrecision(){
				    return 0;
				}
				public String in_RiesgoDefault(){
				
					return null;
				
				}
				public String in_RiesgoComment(){
				
				    return "";
				
				}
				public String in_RiesgoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_RiesgoOriginalDbColumnName(){
				
					return "in_Riesgo";
				
				}

				
			    public String in_Muestra;

				public String getIn_Muestra () {
					return this.in_Muestra;
				}

				public Boolean in_MuestraIsNullable(){
				    return true;
				}
				public Boolean in_MuestraIsKey(){
				    return false;
				}
				public Integer in_MuestraLength(){
				    return 0;
				}
				public Integer in_MuestraPrecision(){
				    return 0;
				}
				public String in_MuestraDefault(){
				
					return null;
				
				}
				public String in_MuestraComment(){
				
				    return "";
				
				}
				public String in_MuestraPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_MuestraOriginalDbColumnName(){
				
					return "in_Muestra";
				
				}

				
			    public String in_Aprobado;

				public String getIn_Aprobado () {
					return this.in_Aprobado;
				}

				public Boolean in_AprobadoIsNullable(){
				    return true;
				}
				public Boolean in_AprobadoIsKey(){
				    return false;
				}
				public Integer in_AprobadoLength(){
				    return 0;
				}
				public Integer in_AprobadoPrecision(){
				    return 0;
				}
				public String in_AprobadoDefault(){
				
					return null;
				
				}
				public String in_AprobadoComment(){
				
				    return "";
				
				}
				public String in_AprobadoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_AprobadoOriginalDbColumnName(){
				
					return "in_Aprobado";
				
				}

				
			    public String in_Contrato;

				public String getIn_Contrato () {
					return this.in_Contrato;
				}

				public Boolean in_ContratoIsNullable(){
				    return true;
				}
				public Boolean in_ContratoIsKey(){
				    return false;
				}
				public Integer in_ContratoLength(){
				    return 0;
				}
				public Integer in_ContratoPrecision(){
				    return 0;
				}
				public String in_ContratoDefault(){
				
					return null;
				
				}
				public String in_ContratoComment(){
				
				    return "";
				
				}
				public String in_ContratoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_ContratoOriginalDbColumnName(){
				
					return "in_Contrato";
				
				}

				
			    public BigDecimal Contrato_Id;

				public BigDecimal getContrato_Id () {
					return this.Contrato_Id;
				}

				public Boolean Contrato_IdIsNullable(){
				    return false;
				}
				public Boolean Contrato_IdIsKey(){
				    return false;
				}
				public Integer Contrato_IdLength(){
				    return 0;
				}
				public Integer Contrato_IdPrecision(){
				    return null;
				}
				public String Contrato_IdDefault(){
				
					return "";
				
				}
				public String Contrato_IdComment(){
				
				    return "";
				
				}
				public String Contrato_IdPattern(){
				
					return "";
				
				}
				public String Contrato_IdOriginalDbColumnName(){
				
					return "Contrato_Id";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public Integer Id_;

				public Integer getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				
			    public BigDecimal DCONTRATOS_ID;

				public BigDecimal getDCONTRATOS_ID () {
					return this.DCONTRATOS_ID;
				}

				public Boolean DCONTRATOS_IDIsNullable(){
				    return false;
				}
				public Boolean DCONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer DCONTRATOS_IDLength(){
				    return 0;
				}
				public Integer DCONTRATOS_IDPrecision(){
				    return null;
				}
				public String DCONTRATOS_IDDefault(){
				
					return "";
				
				}
				public String DCONTRATOS_IDComment(){
				
				    return "";
				
				}
				public String DCONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String DCONTRATOS_IDOriginalDbColumnName(){
				
					return "DCONTRATOS_ID";
				
				}

				
			    public BigDecimal HDCONTRATOS_ID;

				public BigDecimal getHDCONTRATOS_ID () {
					return this.HDCONTRATOS_ID;
				}

				public Boolean HDCONTRATOS_IDIsNullable(){
				    return false;
				}
				public Boolean HDCONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer HDCONTRATOS_IDLength(){
				    return 0;
				}
				public Integer HDCONTRATOS_IDPrecision(){
				    return null;
				}
				public String HDCONTRATOS_IDDefault(){
				
					return "";
				
				}
				public String HDCONTRATOS_IDComment(){
				
				    return "";
				
				}
				public String HDCONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String HDCONTRATOS_IDOriginalDbColumnName(){
				
					return "HDCONTRATOS_ID";
				
				}

				
			    public BigDecimal PRECIO;

				public BigDecimal getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return false;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 0;
				}
				public Integer PRECIOPrecision(){
				    return null;
				}
				public String PRECIODefault(){
				
					return "";
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				
			    public BigDecimal IVA;

				public BigDecimal getIVA () {
					return this.IVA;
				}

				public Boolean IVAIsNullable(){
				    return false;
				}
				public Boolean IVAIsKey(){
				    return false;
				}
				public Integer IVALength(){
				    return 0;
				}
				public Integer IVAPrecision(){
				    return null;
				}
				public String IVADefault(){
				
					return "";
				
				}
				public String IVAComment(){
				
				    return "";
				
				}
				public String IVAPattern(){
				
					return "";
				
				}
				public String IVAOriginalDbColumnName(){
				
					return "IVA";
				
				}

				
			    public BigDecimal VUNITARIO;

				public BigDecimal getVUNITARIO () {
					return this.VUNITARIO;
				}

				public Boolean VUNITARIOIsNullable(){
				    return true;
				}
				public Boolean VUNITARIOIsKey(){
				    return false;
				}
				public Integer VUNITARIOLength(){
				    return null;
				}
				public Integer VUNITARIOPrecision(){
				    return null;
				}
				public String VUNITARIODefault(){
				
					return null;
				
				}
				public String VUNITARIOComment(){
				
				    return "";
				
				}
				public String VUNITARIOPattern(){
				
					return "";
				
				}
				public String VUNITARIOOriginalDbColumnName(){
				
					return "VUNITARIO";
				
				}

				
			    public BigDecimal VUNITARIOIVA;

				public BigDecimal getVUNITARIOIVA () {
					return this.VUNITARIOIVA;
				}

				public Boolean VUNITARIOIVAIsNullable(){
				    return true;
				}
				public Boolean VUNITARIOIVAIsKey(){
				    return false;
				}
				public Integer VUNITARIOIVALength(){
				    return null;
				}
				public Integer VUNITARIOIVAPrecision(){
				    return null;
				}
				public String VUNITARIOIVADefault(){
				
					return null;
				
				}
				public String VUNITARIOIVAComment(){
				
				    return "";
				
				}
				public String VUNITARIOIVAPattern(){
				
					return "";
				
				}
				public String VUNITARIOIVAOriginalDbColumnName(){
				
					return "VUNITARIOIVA";
				
				}

				
			    public BigDecimal SUBTOTAL;

				public BigDecimal getSUBTOTAL () {
					return this.SUBTOTAL;
				}

				public Boolean SUBTOTALIsNullable(){
				    return true;
				}
				public Boolean SUBTOTALIsKey(){
				    return false;
				}
				public Integer SUBTOTALLength(){
				    return null;
				}
				public Integer SUBTOTALPrecision(){
				    return null;
				}
				public String SUBTOTALDefault(){
				
					return null;
				
				}
				public String SUBTOTALComment(){
				
				    return "";
				
				}
				public String SUBTOTALPattern(){
				
					return "";
				
				}
				public String SUBTOTALOriginalDbColumnName(){
				
					return "SUBTOTAL";
				
				}

				
			    public BigDecimal VTOTALIVA;

				public BigDecimal getVTOTALIVA () {
					return this.VTOTALIVA;
				}

				public Boolean VTOTALIVAIsNullable(){
				    return true;
				}
				public Boolean VTOTALIVAIsKey(){
				    return false;
				}
				public Integer VTOTALIVALength(){
				    return null;
				}
				public Integer VTOTALIVAPrecision(){
				    return null;
				}
				public String VTOTALIVADefault(){
				
					return null;
				
				}
				public String VTOTALIVAComment(){
				
				    return "";
				
				}
				public String VTOTALIVAPattern(){
				
					return "";
				
				}
				public String VTOTALIVAOriginalDbColumnName(){
				
					return "VTOTALIVA";
				
				}

				
			    public BigDecimal TOTAL;

				public BigDecimal getTOTAL () {
					return this.TOTAL;
				}

				public Boolean TOTALIsNullable(){
				    return true;
				}
				public Boolean TOTALIsKey(){
				    return false;
				}
				public Integer TOTALLength(){
				    return null;
				}
				public Integer TOTALPrecision(){
				    return null;
				}
				public String TOTALDefault(){
				
					return null;
				
				}
				public String TOTALComment(){
				
				    return "";
				
				}
				public String TOTALPattern(){
				
					return "";
				
				}
				public String TOTALOriginalDbColumnName(){
				
					return "TOTAL";
				
				}

				
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.out_Producto_Id = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.in_CantEnviada = readString(dis);
					
					this.in_CantIngresar = readString(dis);
					
					this.in_Lote = readString(dis);
					
					this.in_FVencimiento = readString(dis);
					
					this.in_Leyenda = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.out_Defectos = readString(dis);
					
					this.in_Temperatura = readString(dis);
					
					this.in_Riesgo = readString(dis);
					
					this.in_Muestra = readString(dis);
					
					this.in_Aprobado = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = readInteger(dis);
					
						this.DCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.PRECIO = (BigDecimal) dis.readObject();
					
						this.IVA = (BigDecimal) dis.readObject();
					
						this.VUNITARIO = (BigDecimal) dis.readObject();
					
						this.VUNITARIOIVA = (BigDecimal) dis.readObject();
					
						this.SUBTOTAL = (BigDecimal) dis.readObject();
					
						this.VTOTALIVA = (BigDecimal) dis.readObject();
					
						this.TOTAL = (BigDecimal) dis.readObject();
					
						this.numeroFila = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.out_Producto_Id = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.in_CantEnviada = readString(dis);
					
					this.in_CantIngresar = readString(dis);
					
					this.in_Lote = readString(dis);
					
					this.in_FVencimiento = readString(dis);
					
					this.in_Leyenda = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.out_Defectos = readString(dis);
					
					this.in_Temperatura = readString(dis);
					
					this.in_Riesgo = readString(dis);
					
					this.in_Muestra = readString(dis);
					
					this.in_Aprobado = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = readInteger(dis);
					
						this.DCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.HDCONTRATOS_ID = (BigDecimal) dis.readObject();
					
						this.PRECIO = (BigDecimal) dis.readObject();
					
						this.IVA = (BigDecimal) dis.readObject();
					
						this.VUNITARIO = (BigDecimal) dis.readObject();
					
						this.VUNITARIOIVA = (BigDecimal) dis.readObject();
					
						this.SUBTOTAL = (BigDecimal) dis.readObject();
					
						this.VTOTALIVA = (BigDecimal) dis.readObject();
					
						this.TOTAL = (BigDecimal) dis.readObject();
					
						this.numeroFila = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.out_Producto_Id);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.in_CantEnviada,dos);
					
					// String
				
						writeString(this.in_CantIngresar,dos);
					
					// String
				
						writeString(this.in_Lote,dos);
					
					// String
				
						writeString(this.in_FVencimiento,dos);
					
					// String
				
						writeString(this.in_Leyenda,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.out_Defectos,dos);
					
					// String
				
						writeString(this.in_Temperatura,dos);
					
					// String
				
						writeString(this.in_Riesgo,dos);
					
					// String
				
						writeString(this.in_Muestra,dos);
					
					// String
				
						writeString(this.in_Aprobado,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Contrato_Id);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// Integer
				
						writeInteger(this.Id_,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DCONTRATOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.HDCONTRATOS_ID);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.IVA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VUNITARIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VUNITARIOIVA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SUBTOTAL);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VTOTALIVA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.out_Producto_Id);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.in_CantEnviada,dos);
					
					// String
				
						writeString(this.in_CantIngresar,dos);
					
					// String
				
						writeString(this.in_Lote,dos);
					
					// String
				
						writeString(this.in_FVencimiento,dos);
					
					// String
				
						writeString(this.in_Leyenda,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.out_Defectos,dos);
					
					// String
				
						writeString(this.in_Temperatura,dos);
					
					// String
				
						writeString(this.in_Riesgo,dos);
					
					// String
				
						writeString(this.in_Muestra,dos);
					
					// String
				
						writeString(this.in_Aprobado,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Contrato_Id);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// Integer
				
						writeInteger(this.Id_,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DCONTRATOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.HDCONTRATOS_ID);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.IVA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VUNITARIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VUNITARIOIVA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SUBTOTAL);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VTOTALIVA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL);
					
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("out_Producto_Id="+String.valueOf(out_Producto_Id));
		sb.append(",out_Expediente="+out_Expediente);
		sb.append(",out_Consecutivo="+out_Consecutivo);
		sb.append(",out_CantEnviada="+String.valueOf(out_CantEnviada));
		sb.append(",out_CantIngresar="+String.valueOf(out_CantIngresar));
		sb.append(",out_Temperatura="+String.valueOf(out_Temperatura));
		sb.append(",out_Riesgo="+String.valueOf(out_Riesgo));
		sb.append(",out_Muestra="+String.valueOf(out_Muestra));
		sb.append(",out_Aprobado="+out_Aprobado);
		sb.append(",out_Estado="+out_Estado);
		sb.append(",out_Message="+out_Message);
		sb.append(",in_CodBarras="+in_CodBarras);
		sb.append(",out_CodBarras="+out_CodBarras);
		sb.append(",in_Cum="+in_Cum);
		sb.append(",out_Cum="+out_Cum);
		sb.append(",in_Invima="+in_Invima);
		sb.append(",in_CantEnviada="+in_CantEnviada);
		sb.append(",in_CantIngresar="+in_CantIngresar);
		sb.append(",in_Lote="+in_Lote);
		sb.append(",in_FVencimiento="+in_FVencimiento);
		sb.append(",in_Leyenda="+in_Leyenda);
		sb.append(",in_Defectos="+in_Defectos);
		sb.append(",out_Defectos="+out_Defectos);
		sb.append(",in_Temperatura="+in_Temperatura);
		sb.append(",in_Riesgo="+in_Riesgo);
		sb.append(",in_Muestra="+in_Muestra);
		sb.append(",in_Aprobado="+in_Aprobado);
		sb.append(",in_Contrato="+in_Contrato);
		sb.append(",Contrato_Id="+String.valueOf(Contrato_Id));
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",Estado_="+Estado_);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",Id_="+String.valueOf(Id_));
		sb.append(",DCONTRATOS_ID="+String.valueOf(DCONTRATOS_ID));
		sb.append(",HDCONTRATOS_ID="+String.valueOf(HDCONTRATOS_ID));
		sb.append(",PRECIO="+String.valueOf(PRECIO));
		sb.append(",IVA="+String.valueOf(IVA));
		sb.append(",VUNITARIO="+String.valueOf(VUNITARIO));
		sb.append(",VUNITARIOIVA="+String.valueOf(VUNITARIOIVA));
		sb.append(",SUBTOTAL="+String.valueOf(SUBTOTAL));
		sb.append(",VTOTALIVA="+String.valueOf(VTOTALIVA));
		sb.append(",TOTAL="+String.valueOf(TOTAL));
		sb.append(",numeroFila="+String.valueOf(numeroFila));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(outProductoContratoStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public BigDecimal out_Producto_Id;

				public BigDecimal getOut_Producto_Id () {
					return this.out_Producto_Id;
				}

				public Boolean out_Producto_IdIsNullable(){
				    return true;
				}
				public Boolean out_Producto_IdIsKey(){
				    return false;
				}
				public Integer out_Producto_IdLength(){
				    return null;
				}
				public Integer out_Producto_IdPrecision(){
				    return null;
				}
				public String out_Producto_IdDefault(){
				
					return null;
				
				}
				public String out_Producto_IdComment(){
				
				    return "";
				
				}
				public String out_Producto_IdPattern(){
				
					return "";
				
				}
				public String out_Producto_IdOriginalDbColumnName(){
				
					return "out_Producto_Id";
				
				}

				
			    public String out_Expediente;

				public String getOut_Expediente () {
					return this.out_Expediente;
				}

				public Boolean out_ExpedienteIsNullable(){
				    return true;
				}
				public Boolean out_ExpedienteIsKey(){
				    return false;
				}
				public Integer out_ExpedienteLength(){
				    return null;
				}
				public Integer out_ExpedientePrecision(){
				    return null;
				}
				public String out_ExpedienteDefault(){
				
					return null;
				
				}
				public String out_ExpedienteComment(){
				
				    return "";
				
				}
				public String out_ExpedientePattern(){
				
					return "";
				
				}
				public String out_ExpedienteOriginalDbColumnName(){
				
					return "out_Expediente";
				
				}

				
			    public String out_Consecutivo;

				public String getOut_Consecutivo () {
					return this.out_Consecutivo;
				}

				public Boolean out_ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean out_ConsecutivoIsKey(){
				    return false;
				}
				public Integer out_ConsecutivoLength(){
				    return null;
				}
				public Integer out_ConsecutivoPrecision(){
				    return null;
				}
				public String out_ConsecutivoDefault(){
				
					return null;
				
				}
				public String out_ConsecutivoComment(){
				
				    return "";
				
				}
				public String out_ConsecutivoPattern(){
				
					return "";
				
				}
				public String out_ConsecutivoOriginalDbColumnName(){
				
					return "out_Consecutivo";
				
				}

				
			    public Integer out_CantEnviada;

				public Integer getOut_CantEnviada () {
					return this.out_CantEnviada;
				}

				public Boolean out_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean out_CantEnviadaIsKey(){
				    return false;
				}
				public Integer out_CantEnviadaLength(){
				    return 0;
				}
				public Integer out_CantEnviadaPrecision(){
				    return 0;
				}
				public String out_CantEnviadaDefault(){
				
					return null;
				
				}
				public String out_CantEnviadaComment(){
				
				    return "";
				
				}
				public String out_CantEnviadaPattern(){
				
					return "";
				
				}
				public String out_CantEnviadaOriginalDbColumnName(){
				
					return "out_CantEnviada";
				
				}

				
			    public Integer out_CantIngresar;

				public Integer getOut_CantIngresar () {
					return this.out_CantIngresar;
				}

				public Boolean out_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean out_CantIngresarIsKey(){
				    return false;
				}
				public Integer out_CantIngresarLength(){
				    return 0;
				}
				public Integer out_CantIngresarPrecision(){
				    return 0;
				}
				public String out_CantIngresarDefault(){
				
					return null;
				
				}
				public String out_CantIngresarComment(){
				
				    return "";
				
				}
				public String out_CantIngresarPattern(){
				
					return "";
				
				}
				public String out_CantIngresarOriginalDbColumnName(){
				
					return "out_CantIngresar";
				
				}

				
			    public Double out_Temperatura;

				public Double getOut_Temperatura () {
					return this.out_Temperatura;
				}

				public Boolean out_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean out_TemperaturaIsKey(){
				    return false;
				}
				public Integer out_TemperaturaLength(){
				    return null;
				}
				public Integer out_TemperaturaPrecision(){
				    return null;
				}
				public String out_TemperaturaDefault(){
				
					return null;
				
				}
				public String out_TemperaturaComment(){
				
				    return "";
				
				}
				public String out_TemperaturaPattern(){
				
					return "";
				
				}
				public String out_TemperaturaOriginalDbColumnName(){
				
					return "out_Temperatura";
				
				}

				
			    public Integer out_Riesgo;

				public Integer getOut_Riesgo () {
					return this.out_Riesgo;
				}

				public Boolean out_RiesgoIsNullable(){
				    return true;
				}
				public Boolean out_RiesgoIsKey(){
				    return false;
				}
				public Integer out_RiesgoLength(){
				    return null;
				}
				public Integer out_RiesgoPrecision(){
				    return null;
				}
				public String out_RiesgoDefault(){
				
					return null;
				
				}
				public String out_RiesgoComment(){
				
				    return "";
				
				}
				public String out_RiesgoPattern(){
				
					return "";
				
				}
				public String out_RiesgoOriginalDbColumnName(){
				
					return "out_Riesgo";
				
				}

				
			    public Integer out_Muestra;

				public Integer getOut_Muestra () {
					return this.out_Muestra;
				}

				public Boolean out_MuestraIsNullable(){
				    return true;
				}
				public Boolean out_MuestraIsKey(){
				    return false;
				}
				public Integer out_MuestraLength(){
				    return null;
				}
				public Integer out_MuestraPrecision(){
				    return null;
				}
				public String out_MuestraDefault(){
				
					return null;
				
				}
				public String out_MuestraComment(){
				
				    return "";
				
				}
				public String out_MuestraPattern(){
				
					return "";
				
				}
				public String out_MuestraOriginalDbColumnName(){
				
					return "out_Muestra";
				
				}

				
			    public String out_Aprobado;

				public String getOut_Aprobado () {
					return this.out_Aprobado;
				}

				public Boolean out_AprobadoIsNullable(){
				    return true;
				}
				public Boolean out_AprobadoIsKey(){
				    return false;
				}
				public Integer out_AprobadoLength(){
				    return null;
				}
				public Integer out_AprobadoPrecision(){
				    return null;
				}
				public String out_AprobadoDefault(){
				
					return null;
				
				}
				public String out_AprobadoComment(){
				
				    return "";
				
				}
				public String out_AprobadoPattern(){
				
					return "";
				
				}
				public String out_AprobadoOriginalDbColumnName(){
				
					return "out_Aprobado";
				
				}

				
			    public String out_Estado;

				public String getOut_Estado () {
					return this.out_Estado;
				}

				public Boolean out_EstadoIsNullable(){
				    return true;
				}
				public Boolean out_EstadoIsKey(){
				    return false;
				}
				public Integer out_EstadoLength(){
				    return 0;
				}
				public Integer out_EstadoPrecision(){
				    return 0;
				}
				public String out_EstadoDefault(){
				
					return null;
				
				}
				public String out_EstadoComment(){
				
				    return "";
				
				}
				public String out_EstadoPattern(){
				
					return "";
				
				}
				public String out_EstadoOriginalDbColumnName(){
				
					return "out_Estado";
				
				}

				
			    public String out_Message;

				public String getOut_Message () {
					return this.out_Message;
				}

				public Boolean out_MessageIsNullable(){
				    return true;
				}
				public Boolean out_MessageIsKey(){
				    return false;
				}
				public Integer out_MessageLength(){
				    return 0;
				}
				public Integer out_MessagePrecision(){
				    return 0;
				}
				public String out_MessageDefault(){
				
					return null;
				
				}
				public String out_MessageComment(){
				
				    return "";
				
				}
				public String out_MessagePattern(){
				
					return "";
				
				}
				public String out_MessageOriginalDbColumnName(){
				
					return "out_Message";
				
				}

				
			    public String in_CodBarras;

				public String getIn_CodBarras () {
					return this.in_CodBarras;
				}

				public Boolean in_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean in_CodBarrasIsKey(){
				    return false;
				}
				public Integer in_CodBarrasLength(){
				    return 0;
				}
				public Integer in_CodBarrasPrecision(){
				    return 0;
				}
				public String in_CodBarrasDefault(){
				
					return null;
				
				}
				public String in_CodBarrasComment(){
				
				    return "";
				
				}
				public String in_CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CodBarrasOriginalDbColumnName(){
				
					return "in_CodBarras";
				
				}

				
			    public String out_CodBarras;

				public String getOut_CodBarras () {
					return this.out_CodBarras;
				}

				public Boolean out_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean out_CodBarrasIsKey(){
				    return false;
				}
				public Integer out_CodBarrasLength(){
				    return null;
				}
				public Integer out_CodBarrasPrecision(){
				    return null;
				}
				public String out_CodBarrasDefault(){
				
					return null;
				
				}
				public String out_CodBarrasComment(){
				
				    return "";
				
				}
				public String out_CodBarrasPattern(){
				
					return "";
				
				}
				public String out_CodBarrasOriginalDbColumnName(){
				
					return "out_CodBarras";
				
				}

				
			    public String in_Cum;

				public String getIn_Cum () {
					return this.in_Cum;
				}

				public Boolean in_CumIsNullable(){
				    return true;
				}
				public Boolean in_CumIsKey(){
				    return false;
				}
				public Integer in_CumLength(){
				    return 0;
				}
				public Integer in_CumPrecision(){
				    return 0;
				}
				public String in_CumDefault(){
				
					return null;
				
				}
				public String in_CumComment(){
				
				    return "";
				
				}
				public String in_CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CumOriginalDbColumnName(){
				
					return "in_Cum";
				
				}

				
			    public String out_Cum;

				public String getOut_Cum () {
					return this.out_Cum;
				}

				public Boolean out_CumIsNullable(){
				    return true;
				}
				public Boolean out_CumIsKey(){
				    return false;
				}
				public Integer out_CumLength(){
				    return null;
				}
				public Integer out_CumPrecision(){
				    return null;
				}
				public String out_CumDefault(){
				
					return null;
				
				}
				public String out_CumComment(){
				
				    return "";
				
				}
				public String out_CumPattern(){
				
					return "";
				
				}
				public String out_CumOriginalDbColumnName(){
				
					return "out_Cum";
				
				}

				
			    public String in_Invima;

				public String getIn_Invima () {
					return this.in_Invima;
				}

				public Boolean in_InvimaIsNullable(){
				    return true;
				}
				public Boolean in_InvimaIsKey(){
				    return false;
				}
				public Integer in_InvimaLength(){
				    return 0;
				}
				public Integer in_InvimaPrecision(){
				    return 0;
				}
				public String in_InvimaDefault(){
				
					return null;
				
				}
				public String in_InvimaComment(){
				
				    return "";
				
				}
				public String in_InvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_InvimaOriginalDbColumnName(){
				
					return "in_Invima";
				
				}

				
			    public String in_CantEnviada;

				public String getIn_CantEnviada () {
					return this.in_CantEnviada;
				}

				public Boolean in_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean in_CantEnviadaIsKey(){
				    return false;
				}
				public Integer in_CantEnviadaLength(){
				    return 0;
				}
				public Integer in_CantEnviadaPrecision(){
				    return 0;
				}
				public String in_CantEnviadaDefault(){
				
					return null;
				
				}
				public String in_CantEnviadaComment(){
				
				    return "";
				
				}
				public String in_CantEnviadaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CantEnviadaOriginalDbColumnName(){
				
					return "in_CantEnviada";
				
				}

				
			    public String in_CantIngresar;

				public String getIn_CantIngresar () {
					return this.in_CantIngresar;
				}

				public Boolean in_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean in_CantIngresarIsKey(){
				    return false;
				}
				public Integer in_CantIngresarLength(){
				    return 0;
				}
				public Integer in_CantIngresarPrecision(){
				    return 0;
				}
				public String in_CantIngresarDefault(){
				
					return null;
				
				}
				public String in_CantIngresarComment(){
				
				    return "";
				
				}
				public String in_CantIngresarPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CantIngresarOriginalDbColumnName(){
				
					return "in_CantIngresar";
				
				}

				
			    public String in_Lote;

				public String getIn_Lote () {
					return this.in_Lote;
				}

				public Boolean in_LoteIsNullable(){
				    return true;
				}
				public Boolean in_LoteIsKey(){
				    return false;
				}
				public Integer in_LoteLength(){
				    return 0;
				}
				public Integer in_LotePrecision(){
				    return 0;
				}
				public String in_LoteDefault(){
				
					return null;
				
				}
				public String in_LoteComment(){
				
				    return "";
				
				}
				public String in_LotePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_LoteOriginalDbColumnName(){
				
					return "in_Lote";
				
				}

				
			    public String in_FVencimiento;

				public String getIn_FVencimiento () {
					return this.in_FVencimiento;
				}

				public Boolean in_FVencimientoIsNullable(){
				    return true;
				}
				public Boolean in_FVencimientoIsKey(){
				    return false;
				}
				public Integer in_FVencimientoLength(){
				    return 0;
				}
				public Integer in_FVencimientoPrecision(){
				    return 0;
				}
				public String in_FVencimientoDefault(){
				
					return null;
				
				}
				public String in_FVencimientoComment(){
				
				    return "";
				
				}
				public String in_FVencimientoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_FVencimientoOriginalDbColumnName(){
				
					return "in_FVencimiento";
				
				}

				
			    public String out_FVencimiento;

				public String getOut_FVencimiento () {
					return this.out_FVencimiento;
				}

				public Boolean out_FVencimientoIsNullable(){
				    return true;
				}
				public Boolean out_FVencimientoIsKey(){
				    return false;
				}
				public Integer out_FVencimientoLength(){
				    return null;
				}
				public Integer out_FVencimientoPrecision(){
				    return null;
				}
				public String out_FVencimientoDefault(){
				
					return null;
				
				}
				public String out_FVencimientoComment(){
				
				    return "";
				
				}
				public String out_FVencimientoPattern(){
				
					return "";
				
				}
				public String out_FVencimientoOriginalDbColumnName(){
				
					return "out_FVencimiento";
				
				}

				
			    public String in_Leyenda;

				public String getIn_Leyenda () {
					return this.in_Leyenda;
				}

				public Boolean in_LeyendaIsNullable(){
				    return true;
				}
				public Boolean in_LeyendaIsKey(){
				    return false;
				}
				public Integer in_LeyendaLength(){
				    return 0;
				}
				public Integer in_LeyendaPrecision(){
				    return 0;
				}
				public String in_LeyendaDefault(){
				
					return null;
				
				}
				public String in_LeyendaComment(){
				
				    return "";
				
				}
				public String in_LeyendaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_LeyendaOriginalDbColumnName(){
				
					return "in_Leyenda";
				
				}

				
			    public String in_Defectos;

				public String getIn_Defectos () {
					return this.in_Defectos;
				}

				public Boolean in_DefectosIsNullable(){
				    return true;
				}
				public Boolean in_DefectosIsKey(){
				    return false;
				}
				public Integer in_DefectosLength(){
				    return 0;
				}
				public Integer in_DefectosPrecision(){
				    return 0;
				}
				public String in_DefectosDefault(){
				
					return null;
				
				}
				public String in_DefectosComment(){
				
				    return "";
				
				}
				public String in_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_DefectosOriginalDbColumnName(){
				
					return "in_Defectos";
				
				}

				
			    public String out_Defectos;

				public String getOut_Defectos () {
					return this.out_Defectos;
				}

				public Boolean out_DefectosIsNullable(){
				    return true;
				}
				public Boolean out_DefectosIsKey(){
				    return false;
				}
				public Integer out_DefectosLength(){
				    return 0;
				}
				public Integer out_DefectosPrecision(){
				    return 0;
				}
				public String out_DefectosDefault(){
				
					return null;
				
				}
				public String out_DefectosComment(){
				
				    return "";
				
				}
				public String out_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String out_DefectosOriginalDbColumnName(){
				
					return "out_Defectos";
				
				}

				
			    public String in_Temperatura;

				public String getIn_Temperatura () {
					return this.in_Temperatura;
				}

				public Boolean in_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean in_TemperaturaIsKey(){
				    return false;
				}
				public Integer in_TemperaturaLength(){
				    return 0;
				}
				public Integer in_TemperaturaPrecision(){
				    return 0;
				}
				public String in_TemperaturaDefault(){
				
					return null;
				
				}
				public String in_TemperaturaComment(){
				
				    return "";
				
				}
				public String in_TemperaturaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_TemperaturaOriginalDbColumnName(){
				
					return "in_Temperatura";
				
				}

				
			    public String in_Riesgo;

				public String getIn_Riesgo () {
					return this.in_Riesgo;
				}

				public Boolean in_RiesgoIsNullable(){
				    return true;
				}
				public Boolean in_RiesgoIsKey(){
				    return false;
				}
				public Integer in_RiesgoLength(){
				    return 0;
				}
				public Integer in_RiesgoPrecision(){
				    return 0;
				}
				public String in_RiesgoDefault(){
				
					return null;
				
				}
				public String in_RiesgoComment(){
				
				    return "";
				
				}
				public String in_RiesgoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_RiesgoOriginalDbColumnName(){
				
					return "in_Riesgo";
				
				}

				
			    public String in_Muestra;

				public String getIn_Muestra () {
					return this.in_Muestra;
				}

				public Boolean in_MuestraIsNullable(){
				    return true;
				}
				public Boolean in_MuestraIsKey(){
				    return false;
				}
				public Integer in_MuestraLength(){
				    return 0;
				}
				public Integer in_MuestraPrecision(){
				    return 0;
				}
				public String in_MuestraDefault(){
				
					return null;
				
				}
				public String in_MuestraComment(){
				
				    return "";
				
				}
				public String in_MuestraPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_MuestraOriginalDbColumnName(){
				
					return "in_Muestra";
				
				}

				
			    public String in_Aprobado;

				public String getIn_Aprobado () {
					return this.in_Aprobado;
				}

				public Boolean in_AprobadoIsNullable(){
				    return true;
				}
				public Boolean in_AprobadoIsKey(){
				    return false;
				}
				public Integer in_AprobadoLength(){
				    return 0;
				}
				public Integer in_AprobadoPrecision(){
				    return 0;
				}
				public String in_AprobadoDefault(){
				
					return null;
				
				}
				public String in_AprobadoComment(){
				
				    return "";
				
				}
				public String in_AprobadoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_AprobadoOriginalDbColumnName(){
				
					return "in_Aprobado";
				
				}

				
			    public String in_Contrato;

				public String getIn_Contrato () {
					return this.in_Contrato;
				}

				public Boolean in_ContratoIsNullable(){
				    return true;
				}
				public Boolean in_ContratoIsKey(){
				    return false;
				}
				public Integer in_ContratoLength(){
				    return 0;
				}
				public Integer in_ContratoPrecision(){
				    return 0;
				}
				public String in_ContratoDefault(){
				
					return null;
				
				}
				public String in_ContratoComment(){
				
				    return "";
				
				}
				public String in_ContratoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_ContratoOriginalDbColumnName(){
				
					return "in_Contrato";
				
				}

				
			    public BigDecimal Contrato_Id;

				public BigDecimal getContrato_Id () {
					return this.Contrato_Id;
				}

				public Boolean Contrato_IdIsNullable(){
				    return false;
				}
				public Boolean Contrato_IdIsKey(){
				    return false;
				}
				public Integer Contrato_IdLength(){
				    return 0;
				}
				public Integer Contrato_IdPrecision(){
				    return null;
				}
				public String Contrato_IdDefault(){
				
					return "";
				
				}
				public String Contrato_IdComment(){
				
				    return "";
				
				}
				public String Contrato_IdPattern(){
				
					return "";
				
				}
				public String Contrato_IdOriginalDbColumnName(){
				
					return "Contrato_Id";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public Integer Id_;

				public Integer getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.out_Producto_Id = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.in_CantEnviada = readString(dis);
					
					this.in_CantIngresar = readString(dis);
					
					this.in_Lote = readString(dis);
					
					this.in_FVencimiento = readString(dis);
					
					this.out_FVencimiento = readString(dis);
					
					this.in_Leyenda = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.out_Defectos = readString(dis);
					
					this.in_Temperatura = readString(dis);
					
					this.in_Riesgo = readString(dis);
					
					this.in_Muestra = readString(dis);
					
					this.in_Aprobado = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.out_Producto_Id = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.in_CantEnviada = readString(dis);
					
					this.in_CantIngresar = readString(dis);
					
					this.in_Lote = readString(dis);
					
					this.in_FVencimiento = readString(dis);
					
					this.out_FVencimiento = readString(dis);
					
					this.in_Leyenda = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.out_Defectos = readString(dis);
					
					this.in_Temperatura = readString(dis);
					
					this.in_Riesgo = readString(dis);
					
					this.in_Muestra = readString(dis);
					
					this.in_Aprobado = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.out_Producto_Id);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.in_CantEnviada,dos);
					
					// String
				
						writeString(this.in_CantIngresar,dos);
					
					// String
				
						writeString(this.in_Lote,dos);
					
					// String
				
						writeString(this.in_FVencimiento,dos);
					
					// String
				
						writeString(this.out_FVencimiento,dos);
					
					// String
				
						writeString(this.in_Leyenda,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.out_Defectos,dos);
					
					// String
				
						writeString(this.in_Temperatura,dos);
					
					// String
				
						writeString(this.in_Riesgo,dos);
					
					// String
				
						writeString(this.in_Muestra,dos);
					
					// String
				
						writeString(this.in_Aprobado,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Contrato_Id);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// Integer
				
						writeInteger(this.Id_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.out_Producto_Id);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.in_CantEnviada,dos);
					
					// String
				
						writeString(this.in_CantIngresar,dos);
					
					// String
				
						writeString(this.in_Lote,dos);
					
					// String
				
						writeString(this.in_FVencimiento,dos);
					
					// String
				
						writeString(this.out_FVencimiento,dos);
					
					// String
				
						writeString(this.in_Leyenda,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.out_Defectos,dos);
					
					// String
				
						writeString(this.in_Temperatura,dos);
					
					// String
				
						writeString(this.in_Riesgo,dos);
					
					// String
				
						writeString(this.in_Muestra,dos);
					
					// String
				
						writeString(this.in_Aprobado,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Contrato_Id);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// Integer
				
						writeInteger(this.Id_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("out_Producto_Id="+String.valueOf(out_Producto_Id));
		sb.append(",out_Expediente="+out_Expediente);
		sb.append(",out_Consecutivo="+out_Consecutivo);
		sb.append(",out_CantEnviada="+String.valueOf(out_CantEnviada));
		sb.append(",out_CantIngresar="+String.valueOf(out_CantIngresar));
		sb.append(",out_Temperatura="+String.valueOf(out_Temperatura));
		sb.append(",out_Riesgo="+String.valueOf(out_Riesgo));
		sb.append(",out_Muestra="+String.valueOf(out_Muestra));
		sb.append(",out_Aprobado="+out_Aprobado);
		sb.append(",out_Estado="+out_Estado);
		sb.append(",out_Message="+out_Message);
		sb.append(",in_CodBarras="+in_CodBarras);
		sb.append(",out_CodBarras="+out_CodBarras);
		sb.append(",in_Cum="+in_Cum);
		sb.append(",out_Cum="+out_Cum);
		sb.append(",in_Invima="+in_Invima);
		sb.append(",in_CantEnviada="+in_CantEnviada);
		sb.append(",in_CantIngresar="+in_CantIngresar);
		sb.append(",in_Lote="+in_Lote);
		sb.append(",in_FVencimiento="+in_FVencimiento);
		sb.append(",out_FVencimiento="+out_FVencimiento);
		sb.append(",in_Leyenda="+in_Leyenda);
		sb.append(",in_Defectos="+in_Defectos);
		sb.append(",out_Defectos="+out_Defectos);
		sb.append(",in_Temperatura="+in_Temperatura);
		sb.append(",in_Riesgo="+in_Riesgo);
		sb.append(",in_Muestra="+in_Muestra);
		sb.append(",in_Aprobado="+in_Aprobado);
		sb.append(",in_Contrato="+in_Contrato);
		sb.append(",Contrato_Id="+String.valueOf(Contrato_Id));
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",Estado_="+Estado_);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",Id_="+String.valueOf(Id_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public BigDecimal out_Producto_Id;

				public BigDecimal getOut_Producto_Id () {
					return this.out_Producto_Id;
				}

				public Boolean out_Producto_IdIsNullable(){
				    return true;
				}
				public Boolean out_Producto_IdIsKey(){
				    return false;
				}
				public Integer out_Producto_IdLength(){
				    return null;
				}
				public Integer out_Producto_IdPrecision(){
				    return null;
				}
				public String out_Producto_IdDefault(){
				
					return null;
				
				}
				public String out_Producto_IdComment(){
				
				    return "";
				
				}
				public String out_Producto_IdPattern(){
				
					return "";
				
				}
				public String out_Producto_IdOriginalDbColumnName(){
				
					return "out_Producto_Id";
				
				}

				
			    public String out_Expediente;

				public String getOut_Expediente () {
					return this.out_Expediente;
				}

				public Boolean out_ExpedienteIsNullable(){
				    return true;
				}
				public Boolean out_ExpedienteIsKey(){
				    return false;
				}
				public Integer out_ExpedienteLength(){
				    return null;
				}
				public Integer out_ExpedientePrecision(){
				    return null;
				}
				public String out_ExpedienteDefault(){
				
					return null;
				
				}
				public String out_ExpedienteComment(){
				
				    return "";
				
				}
				public String out_ExpedientePattern(){
				
					return "";
				
				}
				public String out_ExpedienteOriginalDbColumnName(){
				
					return "out_Expediente";
				
				}

				
			    public String out_Consecutivo;

				public String getOut_Consecutivo () {
					return this.out_Consecutivo;
				}

				public Boolean out_ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean out_ConsecutivoIsKey(){
				    return false;
				}
				public Integer out_ConsecutivoLength(){
				    return null;
				}
				public Integer out_ConsecutivoPrecision(){
				    return null;
				}
				public String out_ConsecutivoDefault(){
				
					return null;
				
				}
				public String out_ConsecutivoComment(){
				
				    return "";
				
				}
				public String out_ConsecutivoPattern(){
				
					return "";
				
				}
				public String out_ConsecutivoOriginalDbColumnName(){
				
					return "out_Consecutivo";
				
				}

				
			    public Integer out_CantEnviada;

				public Integer getOut_CantEnviada () {
					return this.out_CantEnviada;
				}

				public Boolean out_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean out_CantEnviadaIsKey(){
				    return false;
				}
				public Integer out_CantEnviadaLength(){
				    return 0;
				}
				public Integer out_CantEnviadaPrecision(){
				    return 0;
				}
				public String out_CantEnviadaDefault(){
				
					return null;
				
				}
				public String out_CantEnviadaComment(){
				
				    return "";
				
				}
				public String out_CantEnviadaPattern(){
				
					return "";
				
				}
				public String out_CantEnviadaOriginalDbColumnName(){
				
					return "out_CantEnviada";
				
				}

				
			    public Integer out_CantIngresar;

				public Integer getOut_CantIngresar () {
					return this.out_CantIngresar;
				}

				public Boolean out_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean out_CantIngresarIsKey(){
				    return false;
				}
				public Integer out_CantIngresarLength(){
				    return 0;
				}
				public Integer out_CantIngresarPrecision(){
				    return 0;
				}
				public String out_CantIngresarDefault(){
				
					return null;
				
				}
				public String out_CantIngresarComment(){
				
				    return "";
				
				}
				public String out_CantIngresarPattern(){
				
					return "";
				
				}
				public String out_CantIngresarOriginalDbColumnName(){
				
					return "out_CantIngresar";
				
				}

				
			    public Double out_Temperatura;

				public Double getOut_Temperatura () {
					return this.out_Temperatura;
				}

				public Boolean out_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean out_TemperaturaIsKey(){
				    return false;
				}
				public Integer out_TemperaturaLength(){
				    return null;
				}
				public Integer out_TemperaturaPrecision(){
				    return null;
				}
				public String out_TemperaturaDefault(){
				
					return null;
				
				}
				public String out_TemperaturaComment(){
				
				    return "";
				
				}
				public String out_TemperaturaPattern(){
				
					return "";
				
				}
				public String out_TemperaturaOriginalDbColumnName(){
				
					return "out_Temperatura";
				
				}

				
			    public Integer out_Riesgo;

				public Integer getOut_Riesgo () {
					return this.out_Riesgo;
				}

				public Boolean out_RiesgoIsNullable(){
				    return true;
				}
				public Boolean out_RiesgoIsKey(){
				    return false;
				}
				public Integer out_RiesgoLength(){
				    return null;
				}
				public Integer out_RiesgoPrecision(){
				    return null;
				}
				public String out_RiesgoDefault(){
				
					return null;
				
				}
				public String out_RiesgoComment(){
				
				    return "";
				
				}
				public String out_RiesgoPattern(){
				
					return "";
				
				}
				public String out_RiesgoOriginalDbColumnName(){
				
					return "out_Riesgo";
				
				}

				
			    public Integer out_Muestra;

				public Integer getOut_Muestra () {
					return this.out_Muestra;
				}

				public Boolean out_MuestraIsNullable(){
				    return true;
				}
				public Boolean out_MuestraIsKey(){
				    return false;
				}
				public Integer out_MuestraLength(){
				    return null;
				}
				public Integer out_MuestraPrecision(){
				    return null;
				}
				public String out_MuestraDefault(){
				
					return null;
				
				}
				public String out_MuestraComment(){
				
				    return "";
				
				}
				public String out_MuestraPattern(){
				
					return "";
				
				}
				public String out_MuestraOriginalDbColumnName(){
				
					return "out_Muestra";
				
				}

				
			    public String out_Aprobado;

				public String getOut_Aprobado () {
					return this.out_Aprobado;
				}

				public Boolean out_AprobadoIsNullable(){
				    return true;
				}
				public Boolean out_AprobadoIsKey(){
				    return false;
				}
				public Integer out_AprobadoLength(){
				    return null;
				}
				public Integer out_AprobadoPrecision(){
				    return null;
				}
				public String out_AprobadoDefault(){
				
					return null;
				
				}
				public String out_AprobadoComment(){
				
				    return "";
				
				}
				public String out_AprobadoPattern(){
				
					return "";
				
				}
				public String out_AprobadoOriginalDbColumnName(){
				
					return "out_Aprobado";
				
				}

				
			    public String out_Estado;

				public String getOut_Estado () {
					return this.out_Estado;
				}

				public Boolean out_EstadoIsNullable(){
				    return true;
				}
				public Boolean out_EstadoIsKey(){
				    return false;
				}
				public Integer out_EstadoLength(){
				    return 0;
				}
				public Integer out_EstadoPrecision(){
				    return 0;
				}
				public String out_EstadoDefault(){
				
					return null;
				
				}
				public String out_EstadoComment(){
				
				    return "";
				
				}
				public String out_EstadoPattern(){
				
					return "";
				
				}
				public String out_EstadoOriginalDbColumnName(){
				
					return "out_Estado";
				
				}

				
			    public String out_Message;

				public String getOut_Message () {
					return this.out_Message;
				}

				public Boolean out_MessageIsNullable(){
				    return true;
				}
				public Boolean out_MessageIsKey(){
				    return false;
				}
				public Integer out_MessageLength(){
				    return 0;
				}
				public Integer out_MessagePrecision(){
				    return 0;
				}
				public String out_MessageDefault(){
				
					return null;
				
				}
				public String out_MessageComment(){
				
				    return "";
				
				}
				public String out_MessagePattern(){
				
					return "";
				
				}
				public String out_MessageOriginalDbColumnName(){
				
					return "out_Message";
				
				}

				
			    public String in_CodBarras;

				public String getIn_CodBarras () {
					return this.in_CodBarras;
				}

				public Boolean in_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean in_CodBarrasIsKey(){
				    return false;
				}
				public Integer in_CodBarrasLength(){
				    return 0;
				}
				public Integer in_CodBarrasPrecision(){
				    return 0;
				}
				public String in_CodBarrasDefault(){
				
					return null;
				
				}
				public String in_CodBarrasComment(){
				
				    return "";
				
				}
				public String in_CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CodBarrasOriginalDbColumnName(){
				
					return "in_CodBarras";
				
				}

				
			    public String out_CodBarras;

				public String getOut_CodBarras () {
					return this.out_CodBarras;
				}

				public Boolean out_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean out_CodBarrasIsKey(){
				    return false;
				}
				public Integer out_CodBarrasLength(){
				    return null;
				}
				public Integer out_CodBarrasPrecision(){
				    return null;
				}
				public String out_CodBarrasDefault(){
				
					return null;
				
				}
				public String out_CodBarrasComment(){
				
				    return "";
				
				}
				public String out_CodBarrasPattern(){
				
					return "";
				
				}
				public String out_CodBarrasOriginalDbColumnName(){
				
					return "out_CodBarras";
				
				}

				
			    public String in_Cum;

				public String getIn_Cum () {
					return this.in_Cum;
				}

				public Boolean in_CumIsNullable(){
				    return true;
				}
				public Boolean in_CumIsKey(){
				    return false;
				}
				public Integer in_CumLength(){
				    return 0;
				}
				public Integer in_CumPrecision(){
				    return 0;
				}
				public String in_CumDefault(){
				
					return null;
				
				}
				public String in_CumComment(){
				
				    return "";
				
				}
				public String in_CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CumOriginalDbColumnName(){
				
					return "in_Cum";
				
				}

				
			    public String out_Cum;

				public String getOut_Cum () {
					return this.out_Cum;
				}

				public Boolean out_CumIsNullable(){
				    return true;
				}
				public Boolean out_CumIsKey(){
				    return false;
				}
				public Integer out_CumLength(){
				    return null;
				}
				public Integer out_CumPrecision(){
				    return null;
				}
				public String out_CumDefault(){
				
					return null;
				
				}
				public String out_CumComment(){
				
				    return "";
				
				}
				public String out_CumPattern(){
				
					return "";
				
				}
				public String out_CumOriginalDbColumnName(){
				
					return "out_Cum";
				
				}

				
			    public String in_Invima;

				public String getIn_Invima () {
					return this.in_Invima;
				}

				public Boolean in_InvimaIsNullable(){
				    return true;
				}
				public Boolean in_InvimaIsKey(){
				    return false;
				}
				public Integer in_InvimaLength(){
				    return 0;
				}
				public Integer in_InvimaPrecision(){
				    return 0;
				}
				public String in_InvimaDefault(){
				
					return null;
				
				}
				public String in_InvimaComment(){
				
				    return "";
				
				}
				public String in_InvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_InvimaOriginalDbColumnName(){
				
					return "in_Invima";
				
				}

				
			    public String in_CantEnviada;

				public String getIn_CantEnviada () {
					return this.in_CantEnviada;
				}

				public Boolean in_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean in_CantEnviadaIsKey(){
				    return false;
				}
				public Integer in_CantEnviadaLength(){
				    return 0;
				}
				public Integer in_CantEnviadaPrecision(){
				    return 0;
				}
				public String in_CantEnviadaDefault(){
				
					return null;
				
				}
				public String in_CantEnviadaComment(){
				
				    return "";
				
				}
				public String in_CantEnviadaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CantEnviadaOriginalDbColumnName(){
				
					return "in_CantEnviada";
				
				}

				
			    public String in_CantIngresar;

				public String getIn_CantIngresar () {
					return this.in_CantIngresar;
				}

				public Boolean in_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean in_CantIngresarIsKey(){
				    return false;
				}
				public Integer in_CantIngresarLength(){
				    return 0;
				}
				public Integer in_CantIngresarPrecision(){
				    return 0;
				}
				public String in_CantIngresarDefault(){
				
					return null;
				
				}
				public String in_CantIngresarComment(){
				
				    return "";
				
				}
				public String in_CantIngresarPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CantIngresarOriginalDbColumnName(){
				
					return "in_CantIngresar";
				
				}

				
			    public String in_Lote;

				public String getIn_Lote () {
					return this.in_Lote;
				}

				public Boolean in_LoteIsNullable(){
				    return true;
				}
				public Boolean in_LoteIsKey(){
				    return false;
				}
				public Integer in_LoteLength(){
				    return 0;
				}
				public Integer in_LotePrecision(){
				    return 0;
				}
				public String in_LoteDefault(){
				
					return null;
				
				}
				public String in_LoteComment(){
				
				    return "";
				
				}
				public String in_LotePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_LoteOriginalDbColumnName(){
				
					return "in_Lote";
				
				}

				
			    public String in_FVencimiento;

				public String getIn_FVencimiento () {
					return this.in_FVencimiento;
				}

				public Boolean in_FVencimientoIsNullable(){
				    return true;
				}
				public Boolean in_FVencimientoIsKey(){
				    return false;
				}
				public Integer in_FVencimientoLength(){
				    return 0;
				}
				public Integer in_FVencimientoPrecision(){
				    return 0;
				}
				public String in_FVencimientoDefault(){
				
					return null;
				
				}
				public String in_FVencimientoComment(){
				
				    return "";
				
				}
				public String in_FVencimientoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_FVencimientoOriginalDbColumnName(){
				
					return "in_FVencimiento";
				
				}

				
			    public String out_FVencimiento;

				public String getOut_FVencimiento () {
					return this.out_FVencimiento;
				}

				public Boolean out_FVencimientoIsNullable(){
				    return true;
				}
				public Boolean out_FVencimientoIsKey(){
				    return false;
				}
				public Integer out_FVencimientoLength(){
				    return null;
				}
				public Integer out_FVencimientoPrecision(){
				    return null;
				}
				public String out_FVencimientoDefault(){
				
					return null;
				
				}
				public String out_FVencimientoComment(){
				
				    return "";
				
				}
				public String out_FVencimientoPattern(){
				
					return "";
				
				}
				public String out_FVencimientoOriginalDbColumnName(){
				
					return "out_FVencimiento";
				
				}

				
			    public String in_Leyenda;

				public String getIn_Leyenda () {
					return this.in_Leyenda;
				}

				public Boolean in_LeyendaIsNullable(){
				    return true;
				}
				public Boolean in_LeyendaIsKey(){
				    return false;
				}
				public Integer in_LeyendaLength(){
				    return 0;
				}
				public Integer in_LeyendaPrecision(){
				    return 0;
				}
				public String in_LeyendaDefault(){
				
					return null;
				
				}
				public String in_LeyendaComment(){
				
				    return "";
				
				}
				public String in_LeyendaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_LeyendaOriginalDbColumnName(){
				
					return "in_Leyenda";
				
				}

				
			    public String in_Defectos;

				public String getIn_Defectos () {
					return this.in_Defectos;
				}

				public Boolean in_DefectosIsNullable(){
				    return true;
				}
				public Boolean in_DefectosIsKey(){
				    return false;
				}
				public Integer in_DefectosLength(){
				    return 0;
				}
				public Integer in_DefectosPrecision(){
				    return 0;
				}
				public String in_DefectosDefault(){
				
					return null;
				
				}
				public String in_DefectosComment(){
				
				    return "";
				
				}
				public String in_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_DefectosOriginalDbColumnName(){
				
					return "in_Defectos";
				
				}

				
			    public String out_Defectos;

				public String getOut_Defectos () {
					return this.out_Defectos;
				}

				public Boolean out_DefectosIsNullable(){
				    return true;
				}
				public Boolean out_DefectosIsKey(){
				    return false;
				}
				public Integer out_DefectosLength(){
				    return 0;
				}
				public Integer out_DefectosPrecision(){
				    return 0;
				}
				public String out_DefectosDefault(){
				
					return null;
				
				}
				public String out_DefectosComment(){
				
				    return "";
				
				}
				public String out_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String out_DefectosOriginalDbColumnName(){
				
					return "out_Defectos";
				
				}

				
			    public String in_Temperatura;

				public String getIn_Temperatura () {
					return this.in_Temperatura;
				}

				public Boolean in_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean in_TemperaturaIsKey(){
				    return false;
				}
				public Integer in_TemperaturaLength(){
				    return 0;
				}
				public Integer in_TemperaturaPrecision(){
				    return 0;
				}
				public String in_TemperaturaDefault(){
				
					return null;
				
				}
				public String in_TemperaturaComment(){
				
				    return "";
				
				}
				public String in_TemperaturaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_TemperaturaOriginalDbColumnName(){
				
					return "in_Temperatura";
				
				}

				
			    public String in_Riesgo;

				public String getIn_Riesgo () {
					return this.in_Riesgo;
				}

				public Boolean in_RiesgoIsNullable(){
				    return true;
				}
				public Boolean in_RiesgoIsKey(){
				    return false;
				}
				public Integer in_RiesgoLength(){
				    return 0;
				}
				public Integer in_RiesgoPrecision(){
				    return 0;
				}
				public String in_RiesgoDefault(){
				
					return null;
				
				}
				public String in_RiesgoComment(){
				
				    return "";
				
				}
				public String in_RiesgoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_RiesgoOriginalDbColumnName(){
				
					return "in_Riesgo";
				
				}

				
			    public String in_Muestra;

				public String getIn_Muestra () {
					return this.in_Muestra;
				}

				public Boolean in_MuestraIsNullable(){
				    return true;
				}
				public Boolean in_MuestraIsKey(){
				    return false;
				}
				public Integer in_MuestraLength(){
				    return 0;
				}
				public Integer in_MuestraPrecision(){
				    return 0;
				}
				public String in_MuestraDefault(){
				
					return null;
				
				}
				public String in_MuestraComment(){
				
				    return "";
				
				}
				public String in_MuestraPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_MuestraOriginalDbColumnName(){
				
					return "in_Muestra";
				
				}

				
			    public String in_Aprobado;

				public String getIn_Aprobado () {
					return this.in_Aprobado;
				}

				public Boolean in_AprobadoIsNullable(){
				    return true;
				}
				public Boolean in_AprobadoIsKey(){
				    return false;
				}
				public Integer in_AprobadoLength(){
				    return 0;
				}
				public Integer in_AprobadoPrecision(){
				    return 0;
				}
				public String in_AprobadoDefault(){
				
					return null;
				
				}
				public String in_AprobadoComment(){
				
				    return "";
				
				}
				public String in_AprobadoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_AprobadoOriginalDbColumnName(){
				
					return "in_Aprobado";
				
				}

				
			    public String in_Contrato;

				public String getIn_Contrato () {
					return this.in_Contrato;
				}

				public Boolean in_ContratoIsNullable(){
				    return true;
				}
				public Boolean in_ContratoIsKey(){
				    return false;
				}
				public Integer in_ContratoLength(){
				    return 0;
				}
				public Integer in_ContratoPrecision(){
				    return 0;
				}
				public String in_ContratoDefault(){
				
					return null;
				
				}
				public String in_ContratoComment(){
				
				    return "";
				
				}
				public String in_ContratoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_ContratoOriginalDbColumnName(){
				
					return "in_Contrato";
				
				}

				
			    public BigDecimal Contrato_Id;

				public BigDecimal getContrato_Id () {
					return this.Contrato_Id;
				}

				public Boolean Contrato_IdIsNullable(){
				    return false;
				}
				public Boolean Contrato_IdIsKey(){
				    return false;
				}
				public Integer Contrato_IdLength(){
				    return 0;
				}
				public Integer Contrato_IdPrecision(){
				    return null;
				}
				public String Contrato_IdDefault(){
				
					return "";
				
				}
				public String Contrato_IdComment(){
				
				    return "";
				
				}
				public String Contrato_IdPattern(){
				
					return "";
				
				}
				public String Contrato_IdOriginalDbColumnName(){
				
					return "Contrato_Id";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public Integer Id_;

				public Integer getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.out_Producto_Id = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.in_CantEnviada = readString(dis);
					
					this.in_CantIngresar = readString(dis);
					
					this.in_Lote = readString(dis);
					
					this.in_FVencimiento = readString(dis);
					
					this.out_FVencimiento = readString(dis);
					
					this.in_Leyenda = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.out_Defectos = readString(dis);
					
					this.in_Temperatura = readString(dis);
					
					this.in_Riesgo = readString(dis);
					
					this.in_Muestra = readString(dis);
					
					this.in_Aprobado = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.out_Producto_Id = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.in_CantEnviada = readString(dis);
					
					this.in_CantIngresar = readString(dis);
					
					this.in_Lote = readString(dis);
					
					this.in_FVencimiento = readString(dis);
					
					this.out_FVencimiento = readString(dis);
					
					this.in_Leyenda = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.out_Defectos = readString(dis);
					
					this.in_Temperatura = readString(dis);
					
					this.in_Riesgo = readString(dis);
					
					this.in_Muestra = readString(dis);
					
					this.in_Aprobado = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.out_Producto_Id);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.in_CantEnviada,dos);
					
					// String
				
						writeString(this.in_CantIngresar,dos);
					
					// String
				
						writeString(this.in_Lote,dos);
					
					// String
				
						writeString(this.in_FVencimiento,dos);
					
					// String
				
						writeString(this.out_FVencimiento,dos);
					
					// String
				
						writeString(this.in_Leyenda,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.out_Defectos,dos);
					
					// String
				
						writeString(this.in_Temperatura,dos);
					
					// String
				
						writeString(this.in_Riesgo,dos);
					
					// String
				
						writeString(this.in_Muestra,dos);
					
					// String
				
						writeString(this.in_Aprobado,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Contrato_Id);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// Integer
				
						writeInteger(this.Id_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.out_Producto_Id);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.in_CantEnviada,dos);
					
					// String
				
						writeString(this.in_CantIngresar,dos);
					
					// String
				
						writeString(this.in_Lote,dos);
					
					// String
				
						writeString(this.in_FVencimiento,dos);
					
					// String
				
						writeString(this.out_FVencimiento,dos);
					
					// String
				
						writeString(this.in_Leyenda,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.out_Defectos,dos);
					
					// String
				
						writeString(this.in_Temperatura,dos);
					
					// String
				
						writeString(this.in_Riesgo,dos);
					
					// String
				
						writeString(this.in_Muestra,dos);
					
					// String
				
						writeString(this.in_Aprobado,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Contrato_Id);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// Integer
				
						writeInteger(this.Id_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("out_Producto_Id="+String.valueOf(out_Producto_Id));
		sb.append(",out_Expediente="+out_Expediente);
		sb.append(",out_Consecutivo="+out_Consecutivo);
		sb.append(",out_CantEnviada="+String.valueOf(out_CantEnviada));
		sb.append(",out_CantIngresar="+String.valueOf(out_CantIngresar));
		sb.append(",out_Temperatura="+String.valueOf(out_Temperatura));
		sb.append(",out_Riesgo="+String.valueOf(out_Riesgo));
		sb.append(",out_Muestra="+String.valueOf(out_Muestra));
		sb.append(",out_Aprobado="+out_Aprobado);
		sb.append(",out_Estado="+out_Estado);
		sb.append(",out_Message="+out_Message);
		sb.append(",in_CodBarras="+in_CodBarras);
		sb.append(",out_CodBarras="+out_CodBarras);
		sb.append(",in_Cum="+in_Cum);
		sb.append(",out_Cum="+out_Cum);
		sb.append(",in_Invima="+in_Invima);
		sb.append(",in_CantEnviada="+in_CantEnviada);
		sb.append(",in_CantIngresar="+in_CantIngresar);
		sb.append(",in_Lote="+in_Lote);
		sb.append(",in_FVencimiento="+in_FVencimiento);
		sb.append(",out_FVencimiento="+out_FVencimiento);
		sb.append(",in_Leyenda="+in_Leyenda);
		sb.append(",in_Defectos="+in_Defectos);
		sb.append(",out_Defectos="+out_Defectos);
		sb.append(",in_Temperatura="+in_Temperatura);
		sb.append(",in_Riesgo="+in_Riesgo);
		sb.append(",in_Muestra="+in_Muestra);
		sb.append(",in_Aprobado="+in_Aprobado);
		sb.append(",in_Contrato="+in_Contrato);
		sb.append(",Contrato_Id="+String.valueOf(Contrato_Id));
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",Estado_="+Estado_);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",Id_="+String.valueOf(Id_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public BigDecimal out_Producto_Id;

				public BigDecimal getOut_Producto_Id () {
					return this.out_Producto_Id;
				}

				public Boolean out_Producto_IdIsNullable(){
				    return true;
				}
				public Boolean out_Producto_IdIsKey(){
				    return false;
				}
				public Integer out_Producto_IdLength(){
				    return null;
				}
				public Integer out_Producto_IdPrecision(){
				    return null;
				}
				public String out_Producto_IdDefault(){
				
					return null;
				
				}
				public String out_Producto_IdComment(){
				
				    return "";
				
				}
				public String out_Producto_IdPattern(){
				
					return "";
				
				}
				public String out_Producto_IdOriginalDbColumnName(){
				
					return "out_Producto_Id";
				
				}

				
			    public String out_Expediente;

				public String getOut_Expediente () {
					return this.out_Expediente;
				}

				public Boolean out_ExpedienteIsNullable(){
				    return true;
				}
				public Boolean out_ExpedienteIsKey(){
				    return false;
				}
				public Integer out_ExpedienteLength(){
				    return null;
				}
				public Integer out_ExpedientePrecision(){
				    return null;
				}
				public String out_ExpedienteDefault(){
				
					return null;
				
				}
				public String out_ExpedienteComment(){
				
				    return "";
				
				}
				public String out_ExpedientePattern(){
				
					return "";
				
				}
				public String out_ExpedienteOriginalDbColumnName(){
				
					return "out_Expediente";
				
				}

				
			    public String out_Consecutivo;

				public String getOut_Consecutivo () {
					return this.out_Consecutivo;
				}

				public Boolean out_ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean out_ConsecutivoIsKey(){
				    return false;
				}
				public Integer out_ConsecutivoLength(){
				    return null;
				}
				public Integer out_ConsecutivoPrecision(){
				    return null;
				}
				public String out_ConsecutivoDefault(){
				
					return null;
				
				}
				public String out_ConsecutivoComment(){
				
				    return "";
				
				}
				public String out_ConsecutivoPattern(){
				
					return "";
				
				}
				public String out_ConsecutivoOriginalDbColumnName(){
				
					return "out_Consecutivo";
				
				}

				
			    public Integer out_CantEnviada;

				public Integer getOut_CantEnviada () {
					return this.out_CantEnviada;
				}

				public Boolean out_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean out_CantEnviadaIsKey(){
				    return false;
				}
				public Integer out_CantEnviadaLength(){
				    return 0;
				}
				public Integer out_CantEnviadaPrecision(){
				    return 0;
				}
				public String out_CantEnviadaDefault(){
				
					return null;
				
				}
				public String out_CantEnviadaComment(){
				
				    return "";
				
				}
				public String out_CantEnviadaPattern(){
				
					return "";
				
				}
				public String out_CantEnviadaOriginalDbColumnName(){
				
					return "out_CantEnviada";
				
				}

				
			    public Integer out_CantIngresar;

				public Integer getOut_CantIngresar () {
					return this.out_CantIngresar;
				}

				public Boolean out_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean out_CantIngresarIsKey(){
				    return false;
				}
				public Integer out_CantIngresarLength(){
				    return 0;
				}
				public Integer out_CantIngresarPrecision(){
				    return 0;
				}
				public String out_CantIngresarDefault(){
				
					return null;
				
				}
				public String out_CantIngresarComment(){
				
				    return "";
				
				}
				public String out_CantIngresarPattern(){
				
					return "";
				
				}
				public String out_CantIngresarOriginalDbColumnName(){
				
					return "out_CantIngresar";
				
				}

				
			    public Double out_Temperatura;

				public Double getOut_Temperatura () {
					return this.out_Temperatura;
				}

				public Boolean out_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean out_TemperaturaIsKey(){
				    return false;
				}
				public Integer out_TemperaturaLength(){
				    return null;
				}
				public Integer out_TemperaturaPrecision(){
				    return null;
				}
				public String out_TemperaturaDefault(){
				
					return null;
				
				}
				public String out_TemperaturaComment(){
				
				    return "";
				
				}
				public String out_TemperaturaPattern(){
				
					return "";
				
				}
				public String out_TemperaturaOriginalDbColumnName(){
				
					return "out_Temperatura";
				
				}

				
			    public Integer out_Riesgo;

				public Integer getOut_Riesgo () {
					return this.out_Riesgo;
				}

				public Boolean out_RiesgoIsNullable(){
				    return true;
				}
				public Boolean out_RiesgoIsKey(){
				    return false;
				}
				public Integer out_RiesgoLength(){
				    return null;
				}
				public Integer out_RiesgoPrecision(){
				    return null;
				}
				public String out_RiesgoDefault(){
				
					return null;
				
				}
				public String out_RiesgoComment(){
				
				    return "";
				
				}
				public String out_RiesgoPattern(){
				
					return "";
				
				}
				public String out_RiesgoOriginalDbColumnName(){
				
					return "out_Riesgo";
				
				}

				
			    public Integer out_Muestra;

				public Integer getOut_Muestra () {
					return this.out_Muestra;
				}

				public Boolean out_MuestraIsNullable(){
				    return true;
				}
				public Boolean out_MuestraIsKey(){
				    return false;
				}
				public Integer out_MuestraLength(){
				    return null;
				}
				public Integer out_MuestraPrecision(){
				    return null;
				}
				public String out_MuestraDefault(){
				
					return null;
				
				}
				public String out_MuestraComment(){
				
				    return "";
				
				}
				public String out_MuestraPattern(){
				
					return "";
				
				}
				public String out_MuestraOriginalDbColumnName(){
				
					return "out_Muestra";
				
				}

				
			    public String out_Aprobado;

				public String getOut_Aprobado () {
					return this.out_Aprobado;
				}

				public Boolean out_AprobadoIsNullable(){
				    return true;
				}
				public Boolean out_AprobadoIsKey(){
				    return false;
				}
				public Integer out_AprobadoLength(){
				    return null;
				}
				public Integer out_AprobadoPrecision(){
				    return null;
				}
				public String out_AprobadoDefault(){
				
					return null;
				
				}
				public String out_AprobadoComment(){
				
				    return "";
				
				}
				public String out_AprobadoPattern(){
				
					return "";
				
				}
				public String out_AprobadoOriginalDbColumnName(){
				
					return "out_Aprobado";
				
				}

				
			    public String out_Estado;

				public String getOut_Estado () {
					return this.out_Estado;
				}

				public Boolean out_EstadoIsNullable(){
				    return true;
				}
				public Boolean out_EstadoIsKey(){
				    return false;
				}
				public Integer out_EstadoLength(){
				    return 0;
				}
				public Integer out_EstadoPrecision(){
				    return 0;
				}
				public String out_EstadoDefault(){
				
					return null;
				
				}
				public String out_EstadoComment(){
				
				    return "";
				
				}
				public String out_EstadoPattern(){
				
					return "";
				
				}
				public String out_EstadoOriginalDbColumnName(){
				
					return "out_Estado";
				
				}

				
			    public String out_Message;

				public String getOut_Message () {
					return this.out_Message;
				}

				public Boolean out_MessageIsNullable(){
				    return true;
				}
				public Boolean out_MessageIsKey(){
				    return false;
				}
				public Integer out_MessageLength(){
				    return 0;
				}
				public Integer out_MessagePrecision(){
				    return 0;
				}
				public String out_MessageDefault(){
				
					return null;
				
				}
				public String out_MessageComment(){
				
				    return "";
				
				}
				public String out_MessagePattern(){
				
					return "";
				
				}
				public String out_MessageOriginalDbColumnName(){
				
					return "out_Message";
				
				}

				
			    public String in_CodBarras;

				public String getIn_CodBarras () {
					return this.in_CodBarras;
				}

				public Boolean in_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean in_CodBarrasIsKey(){
				    return false;
				}
				public Integer in_CodBarrasLength(){
				    return 0;
				}
				public Integer in_CodBarrasPrecision(){
				    return 0;
				}
				public String in_CodBarrasDefault(){
				
					return null;
				
				}
				public String in_CodBarrasComment(){
				
				    return "";
				
				}
				public String in_CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CodBarrasOriginalDbColumnName(){
				
					return "in_CodBarras";
				
				}

				
			    public String out_CodBarras;

				public String getOut_CodBarras () {
					return this.out_CodBarras;
				}

				public Boolean out_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean out_CodBarrasIsKey(){
				    return false;
				}
				public Integer out_CodBarrasLength(){
				    return null;
				}
				public Integer out_CodBarrasPrecision(){
				    return null;
				}
				public String out_CodBarrasDefault(){
				
					return null;
				
				}
				public String out_CodBarrasComment(){
				
				    return "";
				
				}
				public String out_CodBarrasPattern(){
				
					return "";
				
				}
				public String out_CodBarrasOriginalDbColumnName(){
				
					return "out_CodBarras";
				
				}

				
			    public String in_Cum;

				public String getIn_Cum () {
					return this.in_Cum;
				}

				public Boolean in_CumIsNullable(){
				    return true;
				}
				public Boolean in_CumIsKey(){
				    return false;
				}
				public Integer in_CumLength(){
				    return 0;
				}
				public Integer in_CumPrecision(){
				    return 0;
				}
				public String in_CumDefault(){
				
					return null;
				
				}
				public String in_CumComment(){
				
				    return "";
				
				}
				public String in_CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CumOriginalDbColumnName(){
				
					return "in_Cum";
				
				}

				
			    public String out_Cum;

				public String getOut_Cum () {
					return this.out_Cum;
				}

				public Boolean out_CumIsNullable(){
				    return true;
				}
				public Boolean out_CumIsKey(){
				    return false;
				}
				public Integer out_CumLength(){
				    return null;
				}
				public Integer out_CumPrecision(){
				    return null;
				}
				public String out_CumDefault(){
				
					return null;
				
				}
				public String out_CumComment(){
				
				    return "";
				
				}
				public String out_CumPattern(){
				
					return "";
				
				}
				public String out_CumOriginalDbColumnName(){
				
					return "out_Cum";
				
				}

				
			    public String in_Invima;

				public String getIn_Invima () {
					return this.in_Invima;
				}

				public Boolean in_InvimaIsNullable(){
				    return true;
				}
				public Boolean in_InvimaIsKey(){
				    return false;
				}
				public Integer in_InvimaLength(){
				    return 0;
				}
				public Integer in_InvimaPrecision(){
				    return 0;
				}
				public String in_InvimaDefault(){
				
					return null;
				
				}
				public String in_InvimaComment(){
				
				    return "";
				
				}
				public String in_InvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_InvimaOriginalDbColumnName(){
				
					return "in_Invima";
				
				}

				
			    public String in_CantEnviada;

				public String getIn_CantEnviada () {
					return this.in_CantEnviada;
				}

				public Boolean in_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean in_CantEnviadaIsKey(){
				    return false;
				}
				public Integer in_CantEnviadaLength(){
				    return 0;
				}
				public Integer in_CantEnviadaPrecision(){
				    return 0;
				}
				public String in_CantEnviadaDefault(){
				
					return null;
				
				}
				public String in_CantEnviadaComment(){
				
				    return "";
				
				}
				public String in_CantEnviadaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CantEnviadaOriginalDbColumnName(){
				
					return "in_CantEnviada";
				
				}

				
			    public String in_CantIngresar;

				public String getIn_CantIngresar () {
					return this.in_CantIngresar;
				}

				public Boolean in_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean in_CantIngresarIsKey(){
				    return false;
				}
				public Integer in_CantIngresarLength(){
				    return 0;
				}
				public Integer in_CantIngresarPrecision(){
				    return 0;
				}
				public String in_CantIngresarDefault(){
				
					return null;
				
				}
				public String in_CantIngresarComment(){
				
				    return "";
				
				}
				public String in_CantIngresarPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CantIngresarOriginalDbColumnName(){
				
					return "in_CantIngresar";
				
				}

				
			    public String in_Lote;

				public String getIn_Lote () {
					return this.in_Lote;
				}

				public Boolean in_LoteIsNullable(){
				    return true;
				}
				public Boolean in_LoteIsKey(){
				    return false;
				}
				public Integer in_LoteLength(){
				    return 0;
				}
				public Integer in_LotePrecision(){
				    return 0;
				}
				public String in_LoteDefault(){
				
					return null;
				
				}
				public String in_LoteComment(){
				
				    return "";
				
				}
				public String in_LotePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_LoteOriginalDbColumnName(){
				
					return "in_Lote";
				
				}

				
			    public String in_FVencimiento;

				public String getIn_FVencimiento () {
					return this.in_FVencimiento;
				}

				public Boolean in_FVencimientoIsNullable(){
				    return true;
				}
				public Boolean in_FVencimientoIsKey(){
				    return false;
				}
				public Integer in_FVencimientoLength(){
				    return 0;
				}
				public Integer in_FVencimientoPrecision(){
				    return 0;
				}
				public String in_FVencimientoDefault(){
				
					return null;
				
				}
				public String in_FVencimientoComment(){
				
				    return "";
				
				}
				public String in_FVencimientoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_FVencimientoOriginalDbColumnName(){
				
					return "in_FVencimiento";
				
				}

				
			    public String out_FVencimiento;

				public String getOut_FVencimiento () {
					return this.out_FVencimiento;
				}

				public Boolean out_FVencimientoIsNullable(){
				    return true;
				}
				public Boolean out_FVencimientoIsKey(){
				    return false;
				}
				public Integer out_FVencimientoLength(){
				    return null;
				}
				public Integer out_FVencimientoPrecision(){
				    return null;
				}
				public String out_FVencimientoDefault(){
				
					return null;
				
				}
				public String out_FVencimientoComment(){
				
				    return "";
				
				}
				public String out_FVencimientoPattern(){
				
					return "";
				
				}
				public String out_FVencimientoOriginalDbColumnName(){
				
					return "out_FVencimiento";
				
				}

				
			    public String in_Leyenda;

				public String getIn_Leyenda () {
					return this.in_Leyenda;
				}

				public Boolean in_LeyendaIsNullable(){
				    return true;
				}
				public Boolean in_LeyendaIsKey(){
				    return false;
				}
				public Integer in_LeyendaLength(){
				    return 0;
				}
				public Integer in_LeyendaPrecision(){
				    return 0;
				}
				public String in_LeyendaDefault(){
				
					return null;
				
				}
				public String in_LeyendaComment(){
				
				    return "";
				
				}
				public String in_LeyendaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_LeyendaOriginalDbColumnName(){
				
					return "in_Leyenda";
				
				}

				
			    public String in_Defectos;

				public String getIn_Defectos () {
					return this.in_Defectos;
				}

				public Boolean in_DefectosIsNullable(){
				    return true;
				}
				public Boolean in_DefectosIsKey(){
				    return false;
				}
				public Integer in_DefectosLength(){
				    return 0;
				}
				public Integer in_DefectosPrecision(){
				    return 0;
				}
				public String in_DefectosDefault(){
				
					return null;
				
				}
				public String in_DefectosComment(){
				
				    return "";
				
				}
				public String in_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_DefectosOriginalDbColumnName(){
				
					return "in_Defectos";
				
				}

				
			    public String out_Defectos;

				public String getOut_Defectos () {
					return this.out_Defectos;
				}

				public Boolean out_DefectosIsNullable(){
				    return true;
				}
				public Boolean out_DefectosIsKey(){
				    return false;
				}
				public Integer out_DefectosLength(){
				    return 0;
				}
				public Integer out_DefectosPrecision(){
				    return 0;
				}
				public String out_DefectosDefault(){
				
					return null;
				
				}
				public String out_DefectosComment(){
				
				    return "";
				
				}
				public String out_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String out_DefectosOriginalDbColumnName(){
				
					return "out_Defectos";
				
				}

				
			    public String in_Temperatura;

				public String getIn_Temperatura () {
					return this.in_Temperatura;
				}

				public Boolean in_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean in_TemperaturaIsKey(){
				    return false;
				}
				public Integer in_TemperaturaLength(){
				    return 0;
				}
				public Integer in_TemperaturaPrecision(){
				    return 0;
				}
				public String in_TemperaturaDefault(){
				
					return null;
				
				}
				public String in_TemperaturaComment(){
				
				    return "";
				
				}
				public String in_TemperaturaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_TemperaturaOriginalDbColumnName(){
				
					return "in_Temperatura";
				
				}

				
			    public String in_Riesgo;

				public String getIn_Riesgo () {
					return this.in_Riesgo;
				}

				public Boolean in_RiesgoIsNullable(){
				    return true;
				}
				public Boolean in_RiesgoIsKey(){
				    return false;
				}
				public Integer in_RiesgoLength(){
				    return 0;
				}
				public Integer in_RiesgoPrecision(){
				    return 0;
				}
				public String in_RiesgoDefault(){
				
					return null;
				
				}
				public String in_RiesgoComment(){
				
				    return "";
				
				}
				public String in_RiesgoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_RiesgoOriginalDbColumnName(){
				
					return "in_Riesgo";
				
				}

				
			    public String in_Muestra;

				public String getIn_Muestra () {
					return this.in_Muestra;
				}

				public Boolean in_MuestraIsNullable(){
				    return true;
				}
				public Boolean in_MuestraIsKey(){
				    return false;
				}
				public Integer in_MuestraLength(){
				    return 0;
				}
				public Integer in_MuestraPrecision(){
				    return 0;
				}
				public String in_MuestraDefault(){
				
					return null;
				
				}
				public String in_MuestraComment(){
				
				    return "";
				
				}
				public String in_MuestraPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_MuestraOriginalDbColumnName(){
				
					return "in_Muestra";
				
				}

				
			    public String in_Aprobado;

				public String getIn_Aprobado () {
					return this.in_Aprobado;
				}

				public Boolean in_AprobadoIsNullable(){
				    return true;
				}
				public Boolean in_AprobadoIsKey(){
				    return false;
				}
				public Integer in_AprobadoLength(){
				    return 0;
				}
				public Integer in_AprobadoPrecision(){
				    return 0;
				}
				public String in_AprobadoDefault(){
				
					return null;
				
				}
				public String in_AprobadoComment(){
				
				    return "";
				
				}
				public String in_AprobadoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_AprobadoOriginalDbColumnName(){
				
					return "in_Aprobado";
				
				}

				
			    public String in_Contrato;

				public String getIn_Contrato () {
					return this.in_Contrato;
				}

				public Boolean in_ContratoIsNullable(){
				    return true;
				}
				public Boolean in_ContratoIsKey(){
				    return false;
				}
				public Integer in_ContratoLength(){
				    return 0;
				}
				public Integer in_ContratoPrecision(){
				    return 0;
				}
				public String in_ContratoDefault(){
				
					return null;
				
				}
				public String in_ContratoComment(){
				
				    return "";
				
				}
				public String in_ContratoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_ContratoOriginalDbColumnName(){
				
					return "in_Contrato";
				
				}

				
			    public BigDecimal Contrato_Id;

				public BigDecimal getContrato_Id () {
					return this.Contrato_Id;
				}

				public Boolean Contrato_IdIsNullable(){
				    return false;
				}
				public Boolean Contrato_IdIsKey(){
				    return false;
				}
				public Integer Contrato_IdLength(){
				    return 0;
				}
				public Integer Contrato_IdPrecision(){
				    return null;
				}
				public String Contrato_IdDefault(){
				
					return "";
				
				}
				public String Contrato_IdComment(){
				
				    return "";
				
				}
				public String Contrato_IdPattern(){
				
					return "";
				
				}
				public String Contrato_IdOriginalDbColumnName(){
				
					return "Contrato_Id";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public Integer Id_;

				public Integer getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.out_Producto_Id = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.in_CantEnviada = readString(dis);
					
					this.in_CantIngresar = readString(dis);
					
					this.in_Lote = readString(dis);
					
					this.in_FVencimiento = readString(dis);
					
					this.out_FVencimiento = readString(dis);
					
					this.in_Leyenda = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.out_Defectos = readString(dis);
					
					this.in_Temperatura = readString(dis);
					
					this.in_Riesgo = readString(dis);
					
					this.in_Muestra = readString(dis);
					
					this.in_Aprobado = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.out_Producto_Id = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.in_CantEnviada = readString(dis);
					
					this.in_CantIngresar = readString(dis);
					
					this.in_Lote = readString(dis);
					
					this.in_FVencimiento = readString(dis);
					
					this.out_FVencimiento = readString(dis);
					
					this.in_Leyenda = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.out_Defectos = readString(dis);
					
					this.in_Temperatura = readString(dis);
					
					this.in_Riesgo = readString(dis);
					
					this.in_Muestra = readString(dis);
					
					this.in_Aprobado = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.out_Producto_Id);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.in_CantEnviada,dos);
					
					// String
				
						writeString(this.in_CantIngresar,dos);
					
					// String
				
						writeString(this.in_Lote,dos);
					
					// String
				
						writeString(this.in_FVencimiento,dos);
					
					// String
				
						writeString(this.out_FVencimiento,dos);
					
					// String
				
						writeString(this.in_Leyenda,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.out_Defectos,dos);
					
					// String
				
						writeString(this.in_Temperatura,dos);
					
					// String
				
						writeString(this.in_Riesgo,dos);
					
					// String
				
						writeString(this.in_Muestra,dos);
					
					// String
				
						writeString(this.in_Aprobado,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Contrato_Id);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// Integer
				
						writeInteger(this.Id_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.out_Producto_Id);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.in_CantEnviada,dos);
					
					// String
				
						writeString(this.in_CantIngresar,dos);
					
					// String
				
						writeString(this.in_Lote,dos);
					
					// String
				
						writeString(this.in_FVencimiento,dos);
					
					// String
				
						writeString(this.out_FVencimiento,dos);
					
					// String
				
						writeString(this.in_Leyenda,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.out_Defectos,dos);
					
					// String
				
						writeString(this.in_Temperatura,dos);
					
					// String
				
						writeString(this.in_Riesgo,dos);
					
					// String
				
						writeString(this.in_Muestra,dos);
					
					// String
				
						writeString(this.in_Aprobado,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Contrato_Id);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// Integer
				
						writeInteger(this.Id_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("out_Producto_Id="+String.valueOf(out_Producto_Id));
		sb.append(",out_Expediente="+out_Expediente);
		sb.append(",out_Consecutivo="+out_Consecutivo);
		sb.append(",out_CantEnviada="+String.valueOf(out_CantEnviada));
		sb.append(",out_CantIngresar="+String.valueOf(out_CantIngresar));
		sb.append(",out_Temperatura="+String.valueOf(out_Temperatura));
		sb.append(",out_Riesgo="+String.valueOf(out_Riesgo));
		sb.append(",out_Muestra="+String.valueOf(out_Muestra));
		sb.append(",out_Aprobado="+out_Aprobado);
		sb.append(",out_Estado="+out_Estado);
		sb.append(",out_Message="+out_Message);
		sb.append(",in_CodBarras="+in_CodBarras);
		sb.append(",out_CodBarras="+out_CodBarras);
		sb.append(",in_Cum="+in_Cum);
		sb.append(",out_Cum="+out_Cum);
		sb.append(",in_Invima="+in_Invima);
		sb.append(",in_CantEnviada="+in_CantEnviada);
		sb.append(",in_CantIngresar="+in_CantIngresar);
		sb.append(",in_Lote="+in_Lote);
		sb.append(",in_FVencimiento="+in_FVencimiento);
		sb.append(",out_FVencimiento="+out_FVencimiento);
		sb.append(",in_Leyenda="+in_Leyenda);
		sb.append(",in_Defectos="+in_Defectos);
		sb.append(",out_Defectos="+out_Defectos);
		sb.append(",in_Temperatura="+in_Temperatura);
		sb.append(",in_Riesgo="+in_Riesgo);
		sb.append(",in_Muestra="+in_Muestra);
		sb.append(",in_Aprobado="+in_Aprobado);
		sb.append(",in_Contrato="+in_Contrato);
		sb.append(",Contrato_Id="+String.valueOf(Contrato_Id));
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",Estado_="+Estado_);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",Id_="+String.valueOf(Id_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class outContratoIdStruct implements routines.system.IPersistableRow<outContratoIdStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public BigDecimal out_Producto_Id;

				public BigDecimal getOut_Producto_Id () {
					return this.out_Producto_Id;
				}

				public Boolean out_Producto_IdIsNullable(){
				    return true;
				}
				public Boolean out_Producto_IdIsKey(){
				    return false;
				}
				public Integer out_Producto_IdLength(){
				    return null;
				}
				public Integer out_Producto_IdPrecision(){
				    return null;
				}
				public String out_Producto_IdDefault(){
				
					return null;
				
				}
				public String out_Producto_IdComment(){
				
				    return "";
				
				}
				public String out_Producto_IdPattern(){
				
					return "";
				
				}
				public String out_Producto_IdOriginalDbColumnName(){
				
					return "out_Producto_Id";
				
				}

				
			    public String out_Expediente;

				public String getOut_Expediente () {
					return this.out_Expediente;
				}

				public Boolean out_ExpedienteIsNullable(){
				    return true;
				}
				public Boolean out_ExpedienteIsKey(){
				    return false;
				}
				public Integer out_ExpedienteLength(){
				    return null;
				}
				public Integer out_ExpedientePrecision(){
				    return null;
				}
				public String out_ExpedienteDefault(){
				
					return null;
				
				}
				public String out_ExpedienteComment(){
				
				    return "";
				
				}
				public String out_ExpedientePattern(){
				
					return "";
				
				}
				public String out_ExpedienteOriginalDbColumnName(){
				
					return "out_Expediente";
				
				}

				
			    public String out_Consecutivo;

				public String getOut_Consecutivo () {
					return this.out_Consecutivo;
				}

				public Boolean out_ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean out_ConsecutivoIsKey(){
				    return false;
				}
				public Integer out_ConsecutivoLength(){
				    return null;
				}
				public Integer out_ConsecutivoPrecision(){
				    return null;
				}
				public String out_ConsecutivoDefault(){
				
					return null;
				
				}
				public String out_ConsecutivoComment(){
				
				    return "";
				
				}
				public String out_ConsecutivoPattern(){
				
					return "";
				
				}
				public String out_ConsecutivoOriginalDbColumnName(){
				
					return "out_Consecutivo";
				
				}

				
			    public Integer out_CantEnviada;

				public Integer getOut_CantEnviada () {
					return this.out_CantEnviada;
				}

				public Boolean out_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean out_CantEnviadaIsKey(){
				    return false;
				}
				public Integer out_CantEnviadaLength(){
				    return 0;
				}
				public Integer out_CantEnviadaPrecision(){
				    return 0;
				}
				public String out_CantEnviadaDefault(){
				
					return null;
				
				}
				public String out_CantEnviadaComment(){
				
				    return "";
				
				}
				public String out_CantEnviadaPattern(){
				
					return "";
				
				}
				public String out_CantEnviadaOriginalDbColumnName(){
				
					return "out_CantEnviada";
				
				}

				
			    public Integer out_CantIngresar;

				public Integer getOut_CantIngresar () {
					return this.out_CantIngresar;
				}

				public Boolean out_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean out_CantIngresarIsKey(){
				    return false;
				}
				public Integer out_CantIngresarLength(){
				    return 0;
				}
				public Integer out_CantIngresarPrecision(){
				    return 0;
				}
				public String out_CantIngresarDefault(){
				
					return null;
				
				}
				public String out_CantIngresarComment(){
				
				    return "";
				
				}
				public String out_CantIngresarPattern(){
				
					return "";
				
				}
				public String out_CantIngresarOriginalDbColumnName(){
				
					return "out_CantIngresar";
				
				}

				
			    public Double out_Temperatura;

				public Double getOut_Temperatura () {
					return this.out_Temperatura;
				}

				public Boolean out_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean out_TemperaturaIsKey(){
				    return false;
				}
				public Integer out_TemperaturaLength(){
				    return null;
				}
				public Integer out_TemperaturaPrecision(){
				    return null;
				}
				public String out_TemperaturaDefault(){
				
					return null;
				
				}
				public String out_TemperaturaComment(){
				
				    return "";
				
				}
				public String out_TemperaturaPattern(){
				
					return "";
				
				}
				public String out_TemperaturaOriginalDbColumnName(){
				
					return "out_Temperatura";
				
				}

				
			    public Integer out_Riesgo;

				public Integer getOut_Riesgo () {
					return this.out_Riesgo;
				}

				public Boolean out_RiesgoIsNullable(){
				    return true;
				}
				public Boolean out_RiesgoIsKey(){
				    return false;
				}
				public Integer out_RiesgoLength(){
				    return null;
				}
				public Integer out_RiesgoPrecision(){
				    return null;
				}
				public String out_RiesgoDefault(){
				
					return null;
				
				}
				public String out_RiesgoComment(){
				
				    return "";
				
				}
				public String out_RiesgoPattern(){
				
					return "";
				
				}
				public String out_RiesgoOriginalDbColumnName(){
				
					return "out_Riesgo";
				
				}

				
			    public Integer out_Muestra;

				public Integer getOut_Muestra () {
					return this.out_Muestra;
				}

				public Boolean out_MuestraIsNullable(){
				    return true;
				}
				public Boolean out_MuestraIsKey(){
				    return false;
				}
				public Integer out_MuestraLength(){
				    return null;
				}
				public Integer out_MuestraPrecision(){
				    return null;
				}
				public String out_MuestraDefault(){
				
					return null;
				
				}
				public String out_MuestraComment(){
				
				    return "";
				
				}
				public String out_MuestraPattern(){
				
					return "";
				
				}
				public String out_MuestraOriginalDbColumnName(){
				
					return "out_Muestra";
				
				}

				
			    public String out_Aprobado;

				public String getOut_Aprobado () {
					return this.out_Aprobado;
				}

				public Boolean out_AprobadoIsNullable(){
				    return true;
				}
				public Boolean out_AprobadoIsKey(){
				    return false;
				}
				public Integer out_AprobadoLength(){
				    return null;
				}
				public Integer out_AprobadoPrecision(){
				    return null;
				}
				public String out_AprobadoDefault(){
				
					return null;
				
				}
				public String out_AprobadoComment(){
				
				    return "";
				
				}
				public String out_AprobadoPattern(){
				
					return "";
				
				}
				public String out_AprobadoOriginalDbColumnName(){
				
					return "out_Aprobado";
				
				}

				
			    public String out_Estado;

				public String getOut_Estado () {
					return this.out_Estado;
				}

				public Boolean out_EstadoIsNullable(){
				    return true;
				}
				public Boolean out_EstadoIsKey(){
				    return false;
				}
				public Integer out_EstadoLength(){
				    return 0;
				}
				public Integer out_EstadoPrecision(){
				    return 0;
				}
				public String out_EstadoDefault(){
				
					return null;
				
				}
				public String out_EstadoComment(){
				
				    return "";
				
				}
				public String out_EstadoPattern(){
				
					return "";
				
				}
				public String out_EstadoOriginalDbColumnName(){
				
					return "out_Estado";
				
				}

				
			    public String out_Message;

				public String getOut_Message () {
					return this.out_Message;
				}

				public Boolean out_MessageIsNullable(){
				    return true;
				}
				public Boolean out_MessageIsKey(){
				    return false;
				}
				public Integer out_MessageLength(){
				    return 0;
				}
				public Integer out_MessagePrecision(){
				    return 0;
				}
				public String out_MessageDefault(){
				
					return null;
				
				}
				public String out_MessageComment(){
				
				    return "";
				
				}
				public String out_MessagePattern(){
				
					return "";
				
				}
				public String out_MessageOriginalDbColumnName(){
				
					return "out_Message";
				
				}

				
			    public String in_CodBarras;

				public String getIn_CodBarras () {
					return this.in_CodBarras;
				}

				public Boolean in_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean in_CodBarrasIsKey(){
				    return false;
				}
				public Integer in_CodBarrasLength(){
				    return 0;
				}
				public Integer in_CodBarrasPrecision(){
				    return 0;
				}
				public String in_CodBarrasDefault(){
				
					return null;
				
				}
				public String in_CodBarrasComment(){
				
				    return "";
				
				}
				public String in_CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CodBarrasOriginalDbColumnName(){
				
					return "in_CodBarras";
				
				}

				
			    public String out_CodBarras;

				public String getOut_CodBarras () {
					return this.out_CodBarras;
				}

				public Boolean out_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean out_CodBarrasIsKey(){
				    return false;
				}
				public Integer out_CodBarrasLength(){
				    return null;
				}
				public Integer out_CodBarrasPrecision(){
				    return null;
				}
				public String out_CodBarrasDefault(){
				
					return null;
				
				}
				public String out_CodBarrasComment(){
				
				    return "";
				
				}
				public String out_CodBarrasPattern(){
				
					return "";
				
				}
				public String out_CodBarrasOriginalDbColumnName(){
				
					return "out_CodBarras";
				
				}

				
			    public String in_Cum;

				public String getIn_Cum () {
					return this.in_Cum;
				}

				public Boolean in_CumIsNullable(){
				    return true;
				}
				public Boolean in_CumIsKey(){
				    return false;
				}
				public Integer in_CumLength(){
				    return 0;
				}
				public Integer in_CumPrecision(){
				    return 0;
				}
				public String in_CumDefault(){
				
					return null;
				
				}
				public String in_CumComment(){
				
				    return "";
				
				}
				public String in_CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CumOriginalDbColumnName(){
				
					return "in_Cum";
				
				}

				
			    public String out_Cum;

				public String getOut_Cum () {
					return this.out_Cum;
				}

				public Boolean out_CumIsNullable(){
				    return true;
				}
				public Boolean out_CumIsKey(){
				    return false;
				}
				public Integer out_CumLength(){
				    return null;
				}
				public Integer out_CumPrecision(){
				    return null;
				}
				public String out_CumDefault(){
				
					return null;
				
				}
				public String out_CumComment(){
				
				    return "";
				
				}
				public String out_CumPattern(){
				
					return "";
				
				}
				public String out_CumOriginalDbColumnName(){
				
					return "out_Cum";
				
				}

				
			    public String in_Invima;

				public String getIn_Invima () {
					return this.in_Invima;
				}

				public Boolean in_InvimaIsNullable(){
				    return true;
				}
				public Boolean in_InvimaIsKey(){
				    return false;
				}
				public Integer in_InvimaLength(){
				    return 0;
				}
				public Integer in_InvimaPrecision(){
				    return 0;
				}
				public String in_InvimaDefault(){
				
					return null;
				
				}
				public String in_InvimaComment(){
				
				    return "";
				
				}
				public String in_InvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_InvimaOriginalDbColumnName(){
				
					return "in_Invima";
				
				}

				
			    public String in_CantEnviada;

				public String getIn_CantEnviada () {
					return this.in_CantEnviada;
				}

				public Boolean in_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean in_CantEnviadaIsKey(){
				    return false;
				}
				public Integer in_CantEnviadaLength(){
				    return 0;
				}
				public Integer in_CantEnviadaPrecision(){
				    return 0;
				}
				public String in_CantEnviadaDefault(){
				
					return null;
				
				}
				public String in_CantEnviadaComment(){
				
				    return "";
				
				}
				public String in_CantEnviadaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CantEnviadaOriginalDbColumnName(){
				
					return "in_CantEnviada";
				
				}

				
			    public String in_CantIngresar;

				public String getIn_CantIngresar () {
					return this.in_CantIngresar;
				}

				public Boolean in_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean in_CantIngresarIsKey(){
				    return false;
				}
				public Integer in_CantIngresarLength(){
				    return 0;
				}
				public Integer in_CantIngresarPrecision(){
				    return 0;
				}
				public String in_CantIngresarDefault(){
				
					return null;
				
				}
				public String in_CantIngresarComment(){
				
				    return "";
				
				}
				public String in_CantIngresarPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CantIngresarOriginalDbColumnName(){
				
					return "in_CantIngresar";
				
				}

				
			    public String in_Lote;

				public String getIn_Lote () {
					return this.in_Lote;
				}

				public Boolean in_LoteIsNullable(){
				    return true;
				}
				public Boolean in_LoteIsKey(){
				    return false;
				}
				public Integer in_LoteLength(){
				    return 0;
				}
				public Integer in_LotePrecision(){
				    return 0;
				}
				public String in_LoteDefault(){
				
					return null;
				
				}
				public String in_LoteComment(){
				
				    return "";
				
				}
				public String in_LotePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_LoteOriginalDbColumnName(){
				
					return "in_Lote";
				
				}

				
			    public String in_FVencimiento;

				public String getIn_FVencimiento () {
					return this.in_FVencimiento;
				}

				public Boolean in_FVencimientoIsNullable(){
				    return true;
				}
				public Boolean in_FVencimientoIsKey(){
				    return false;
				}
				public Integer in_FVencimientoLength(){
				    return 0;
				}
				public Integer in_FVencimientoPrecision(){
				    return 0;
				}
				public String in_FVencimientoDefault(){
				
					return null;
				
				}
				public String in_FVencimientoComment(){
				
				    return "";
				
				}
				public String in_FVencimientoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_FVencimientoOriginalDbColumnName(){
				
					return "in_FVencimiento";
				
				}

				
			    public String out_FVencimiento;

				public String getOut_FVencimiento () {
					return this.out_FVencimiento;
				}

				public Boolean out_FVencimientoIsNullable(){
				    return true;
				}
				public Boolean out_FVencimientoIsKey(){
				    return false;
				}
				public Integer out_FVencimientoLength(){
				    return null;
				}
				public Integer out_FVencimientoPrecision(){
				    return null;
				}
				public String out_FVencimientoDefault(){
				
					return null;
				
				}
				public String out_FVencimientoComment(){
				
				    return "";
				
				}
				public String out_FVencimientoPattern(){
				
					return "";
				
				}
				public String out_FVencimientoOriginalDbColumnName(){
				
					return "out_FVencimiento";
				
				}

				
			    public String in_Leyenda;

				public String getIn_Leyenda () {
					return this.in_Leyenda;
				}

				public Boolean in_LeyendaIsNullable(){
				    return true;
				}
				public Boolean in_LeyendaIsKey(){
				    return false;
				}
				public Integer in_LeyendaLength(){
				    return 0;
				}
				public Integer in_LeyendaPrecision(){
				    return 0;
				}
				public String in_LeyendaDefault(){
				
					return null;
				
				}
				public String in_LeyendaComment(){
				
				    return "";
				
				}
				public String in_LeyendaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_LeyendaOriginalDbColumnName(){
				
					return "in_Leyenda";
				
				}

				
			    public String in_Defectos;

				public String getIn_Defectos () {
					return this.in_Defectos;
				}

				public Boolean in_DefectosIsNullable(){
				    return true;
				}
				public Boolean in_DefectosIsKey(){
				    return false;
				}
				public Integer in_DefectosLength(){
				    return 0;
				}
				public Integer in_DefectosPrecision(){
				    return 0;
				}
				public String in_DefectosDefault(){
				
					return null;
				
				}
				public String in_DefectosComment(){
				
				    return "";
				
				}
				public String in_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_DefectosOriginalDbColumnName(){
				
					return "in_Defectos";
				
				}

				
			    public String out_Defectos;

				public String getOut_Defectos () {
					return this.out_Defectos;
				}

				public Boolean out_DefectosIsNullable(){
				    return true;
				}
				public Boolean out_DefectosIsKey(){
				    return false;
				}
				public Integer out_DefectosLength(){
				    return 0;
				}
				public Integer out_DefectosPrecision(){
				    return 0;
				}
				public String out_DefectosDefault(){
				
					return null;
				
				}
				public String out_DefectosComment(){
				
				    return "";
				
				}
				public String out_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String out_DefectosOriginalDbColumnName(){
				
					return "out_Defectos";
				
				}

				
			    public String in_Temperatura;

				public String getIn_Temperatura () {
					return this.in_Temperatura;
				}

				public Boolean in_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean in_TemperaturaIsKey(){
				    return false;
				}
				public Integer in_TemperaturaLength(){
				    return 0;
				}
				public Integer in_TemperaturaPrecision(){
				    return 0;
				}
				public String in_TemperaturaDefault(){
				
					return null;
				
				}
				public String in_TemperaturaComment(){
				
				    return "";
				
				}
				public String in_TemperaturaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_TemperaturaOriginalDbColumnName(){
				
					return "in_Temperatura";
				
				}

				
			    public String in_Riesgo;

				public String getIn_Riesgo () {
					return this.in_Riesgo;
				}

				public Boolean in_RiesgoIsNullable(){
				    return true;
				}
				public Boolean in_RiesgoIsKey(){
				    return false;
				}
				public Integer in_RiesgoLength(){
				    return 0;
				}
				public Integer in_RiesgoPrecision(){
				    return 0;
				}
				public String in_RiesgoDefault(){
				
					return null;
				
				}
				public String in_RiesgoComment(){
				
				    return "";
				
				}
				public String in_RiesgoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_RiesgoOriginalDbColumnName(){
				
					return "in_Riesgo";
				
				}

				
			    public String in_Muestra;

				public String getIn_Muestra () {
					return this.in_Muestra;
				}

				public Boolean in_MuestraIsNullable(){
				    return true;
				}
				public Boolean in_MuestraIsKey(){
				    return false;
				}
				public Integer in_MuestraLength(){
				    return 0;
				}
				public Integer in_MuestraPrecision(){
				    return 0;
				}
				public String in_MuestraDefault(){
				
					return null;
				
				}
				public String in_MuestraComment(){
				
				    return "";
				
				}
				public String in_MuestraPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_MuestraOriginalDbColumnName(){
				
					return "in_Muestra";
				
				}

				
			    public String in_Aprobado;

				public String getIn_Aprobado () {
					return this.in_Aprobado;
				}

				public Boolean in_AprobadoIsNullable(){
				    return true;
				}
				public Boolean in_AprobadoIsKey(){
				    return false;
				}
				public Integer in_AprobadoLength(){
				    return 0;
				}
				public Integer in_AprobadoPrecision(){
				    return 0;
				}
				public String in_AprobadoDefault(){
				
					return null;
				
				}
				public String in_AprobadoComment(){
				
				    return "";
				
				}
				public String in_AprobadoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_AprobadoOriginalDbColumnName(){
				
					return "in_Aprobado";
				
				}

				
			    public String in_Contrato;

				public String getIn_Contrato () {
					return this.in_Contrato;
				}

				public Boolean in_ContratoIsNullable(){
				    return true;
				}
				public Boolean in_ContratoIsKey(){
				    return false;
				}
				public Integer in_ContratoLength(){
				    return 0;
				}
				public Integer in_ContratoPrecision(){
				    return 0;
				}
				public String in_ContratoDefault(){
				
					return null;
				
				}
				public String in_ContratoComment(){
				
				    return "";
				
				}
				public String in_ContratoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_ContratoOriginalDbColumnName(){
				
					return "in_Contrato";
				
				}

				
			    public BigDecimal Contrato_Id;

				public BigDecimal getContrato_Id () {
					return this.Contrato_Id;
				}

				public Boolean Contrato_IdIsNullable(){
				    return false;
				}
				public Boolean Contrato_IdIsKey(){
				    return false;
				}
				public Integer Contrato_IdLength(){
				    return 0;
				}
				public Integer Contrato_IdPrecision(){
				    return null;
				}
				public String Contrato_IdDefault(){
				
					return "";
				
				}
				public String Contrato_IdComment(){
				
				    return "";
				
				}
				public String Contrato_IdPattern(){
				
					return "";
				
				}
				public String Contrato_IdOriginalDbColumnName(){
				
					return "Contrato_Id";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String Estado_;

				public String getEstado_ () {
					return this.Estado_;
				}

				public Boolean Estado_IsNullable(){
				    return true;
				}
				public Boolean Estado_IsKey(){
				    return false;
				}
				public Integer Estado_Length(){
				    return null;
				}
				public Integer Estado_Precision(){
				    return null;
				}
				public String Estado_Default(){
				
					return null;
				
				}
				public String Estado_Comment(){
				
				    return "";
				
				}
				public String Estado_Pattern(){
				
					return "";
				
				}
				public String Estado_OriginalDbColumnName(){
				
					return "Estado_";
				
				}

				
			    public String Respuesta_;

				public String getRespuesta_ () {
					return this.Respuesta_;
				}

				public Boolean Respuesta_IsNullable(){
				    return true;
				}
				public Boolean Respuesta_IsKey(){
				    return false;
				}
				public Integer Respuesta_Length(){
				    return null;
				}
				public Integer Respuesta_Precision(){
				    return null;
				}
				public String Respuesta_Default(){
				
					return null;
				
				}
				public String Respuesta_Comment(){
				
				    return "";
				
				}
				public String Respuesta_Pattern(){
				
					return "";
				
				}
				public String Respuesta_OriginalDbColumnName(){
				
					return "Respuesta_";
				
				}

				
			    public Integer Id_;

				public Integer getId_ () {
					return this.Id_;
				}

				public Boolean Id_IsNullable(){
				    return true;
				}
				public Boolean Id_IsKey(){
				    return false;
				}
				public Integer Id_Length(){
				    return null;
				}
				public Integer Id_Precision(){
				    return null;
				}
				public String Id_Default(){
				
					return null;
				
				}
				public String Id_Comment(){
				
				    return "";
				
				}
				public String Id_Pattern(){
				
					return "";
				
				}
				public String Id_OriginalDbColumnName(){
				
					return "Id_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.out_Producto_Id = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.in_CantEnviada = readString(dis);
					
					this.in_CantIngresar = readString(dis);
					
					this.in_Lote = readString(dis);
					
					this.in_FVencimiento = readString(dis);
					
					this.out_FVencimiento = readString(dis);
					
					this.in_Leyenda = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.out_Defectos = readString(dis);
					
					this.in_Temperatura = readString(dis);
					
					this.in_Riesgo = readString(dis);
					
					this.in_Muestra = readString(dis);
					
					this.in_Aprobado = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.out_Producto_Id = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.in_CantEnviada = readString(dis);
					
					this.in_CantIngresar = readString(dis);
					
					this.in_Lote = readString(dis);
					
					this.in_FVencimiento = readString(dis);
					
					this.out_FVencimiento = readString(dis);
					
					this.in_Leyenda = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.out_Defectos = readString(dis);
					
					this.in_Temperatura = readString(dis);
					
					this.in_Riesgo = readString(dis);
					
					this.in_Muestra = readString(dis);
					
					this.in_Aprobado = readString(dis);
					
					this.in_Contrato = readString(dis);
					
						this.Contrato_Id = (BigDecimal) dis.readObject();
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.Estado_ = readString(dis);
					
					this.Respuesta_ = readString(dis);
					
						this.Id_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.out_Producto_Id);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.in_CantEnviada,dos);
					
					// String
				
						writeString(this.in_CantIngresar,dos);
					
					// String
				
						writeString(this.in_Lote,dos);
					
					// String
				
						writeString(this.in_FVencimiento,dos);
					
					// String
				
						writeString(this.out_FVencimiento,dos);
					
					// String
				
						writeString(this.in_Leyenda,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.out_Defectos,dos);
					
					// String
				
						writeString(this.in_Temperatura,dos);
					
					// String
				
						writeString(this.in_Riesgo,dos);
					
					// String
				
						writeString(this.in_Muestra,dos);
					
					// String
				
						writeString(this.in_Aprobado,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Contrato_Id);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// Integer
				
						writeInteger(this.Id_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.out_Producto_Id);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.in_CantEnviada,dos);
					
					// String
				
						writeString(this.in_CantIngresar,dos);
					
					// String
				
						writeString(this.in_Lote,dos);
					
					// String
				
						writeString(this.in_FVencimiento,dos);
					
					// String
				
						writeString(this.out_FVencimiento,dos);
					
					// String
				
						writeString(this.in_Leyenda,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.out_Defectos,dos);
					
					// String
				
						writeString(this.in_Temperatura,dos);
					
					// String
				
						writeString(this.in_Riesgo,dos);
					
					// String
				
						writeString(this.in_Muestra,dos);
					
					// String
				
						writeString(this.in_Aprobado,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Contrato_Id);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.Estado_,dos);
					
					// String
				
						writeString(this.Respuesta_,dos);
					
					// Integer
				
						writeInteger(this.Id_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("out_Producto_Id="+String.valueOf(out_Producto_Id));
		sb.append(",out_Expediente="+out_Expediente);
		sb.append(",out_Consecutivo="+out_Consecutivo);
		sb.append(",out_CantEnviada="+String.valueOf(out_CantEnviada));
		sb.append(",out_CantIngresar="+String.valueOf(out_CantIngresar));
		sb.append(",out_Temperatura="+String.valueOf(out_Temperatura));
		sb.append(",out_Riesgo="+String.valueOf(out_Riesgo));
		sb.append(",out_Muestra="+String.valueOf(out_Muestra));
		sb.append(",out_Aprobado="+out_Aprobado);
		sb.append(",out_Estado="+out_Estado);
		sb.append(",out_Message="+out_Message);
		sb.append(",in_CodBarras="+in_CodBarras);
		sb.append(",out_CodBarras="+out_CodBarras);
		sb.append(",in_Cum="+in_Cum);
		sb.append(",out_Cum="+out_Cum);
		sb.append(",in_Invima="+in_Invima);
		sb.append(",in_CantEnviada="+in_CantEnviada);
		sb.append(",in_CantIngresar="+in_CantIngresar);
		sb.append(",in_Lote="+in_Lote);
		sb.append(",in_FVencimiento="+in_FVencimiento);
		sb.append(",out_FVencimiento="+out_FVencimiento);
		sb.append(",in_Leyenda="+in_Leyenda);
		sb.append(",in_Defectos="+in_Defectos);
		sb.append(",out_Defectos="+out_Defectos);
		sb.append(",in_Temperatura="+in_Temperatura);
		sb.append(",in_Riesgo="+in_Riesgo);
		sb.append(",in_Muestra="+in_Muestra);
		sb.append(",in_Aprobado="+in_Aprobado);
		sb.append(",in_Contrato="+in_Contrato);
		sb.append(",Contrato_Id="+String.valueOf(Contrato_Id));
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",Estado_="+Estado_);
		sb.append(",Respuesta_="+Respuesta_);
		sb.append(",Id_="+String.valueOf(Id_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(outContratoIdStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public BigDecimal out_Producto_Id;

				public BigDecimal getOut_Producto_Id () {
					return this.out_Producto_Id;
				}

				public Boolean out_Producto_IdIsNullable(){
				    return true;
				}
				public Boolean out_Producto_IdIsKey(){
				    return false;
				}
				public Integer out_Producto_IdLength(){
				    return null;
				}
				public Integer out_Producto_IdPrecision(){
				    return null;
				}
				public String out_Producto_IdDefault(){
				
					return null;
				
				}
				public String out_Producto_IdComment(){
				
				    return "";
				
				}
				public String out_Producto_IdPattern(){
				
					return "";
				
				}
				public String out_Producto_IdOriginalDbColumnName(){
				
					return "out_Producto_Id";
				
				}

				
			    public String out_Expediente;

				public String getOut_Expediente () {
					return this.out_Expediente;
				}

				public Boolean out_ExpedienteIsNullable(){
				    return true;
				}
				public Boolean out_ExpedienteIsKey(){
				    return false;
				}
				public Integer out_ExpedienteLength(){
				    return null;
				}
				public Integer out_ExpedientePrecision(){
				    return null;
				}
				public String out_ExpedienteDefault(){
				
					return null;
				
				}
				public String out_ExpedienteComment(){
				
				    return "";
				
				}
				public String out_ExpedientePattern(){
				
					return "";
				
				}
				public String out_ExpedienteOriginalDbColumnName(){
				
					return "out_Expediente";
				
				}

				
			    public String out_Consecutivo;

				public String getOut_Consecutivo () {
					return this.out_Consecutivo;
				}

				public Boolean out_ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean out_ConsecutivoIsKey(){
				    return false;
				}
				public Integer out_ConsecutivoLength(){
				    return null;
				}
				public Integer out_ConsecutivoPrecision(){
				    return null;
				}
				public String out_ConsecutivoDefault(){
				
					return null;
				
				}
				public String out_ConsecutivoComment(){
				
				    return "";
				
				}
				public String out_ConsecutivoPattern(){
				
					return "";
				
				}
				public String out_ConsecutivoOriginalDbColumnName(){
				
					return "out_Consecutivo";
				
				}

				
			    public Integer out_CantEnviada;

				public Integer getOut_CantEnviada () {
					return this.out_CantEnviada;
				}

				public Boolean out_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean out_CantEnviadaIsKey(){
				    return false;
				}
				public Integer out_CantEnviadaLength(){
				    return 0;
				}
				public Integer out_CantEnviadaPrecision(){
				    return 0;
				}
				public String out_CantEnviadaDefault(){
				
					return null;
				
				}
				public String out_CantEnviadaComment(){
				
				    return "";
				
				}
				public String out_CantEnviadaPattern(){
				
					return "";
				
				}
				public String out_CantEnviadaOriginalDbColumnName(){
				
					return "out_CantEnviada";
				
				}

				
			    public Integer out_CantIngresar;

				public Integer getOut_CantIngresar () {
					return this.out_CantIngresar;
				}

				public Boolean out_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean out_CantIngresarIsKey(){
				    return false;
				}
				public Integer out_CantIngresarLength(){
				    return 0;
				}
				public Integer out_CantIngresarPrecision(){
				    return 0;
				}
				public String out_CantIngresarDefault(){
				
					return null;
				
				}
				public String out_CantIngresarComment(){
				
				    return "";
				
				}
				public String out_CantIngresarPattern(){
				
					return "";
				
				}
				public String out_CantIngresarOriginalDbColumnName(){
				
					return "out_CantIngresar";
				
				}

				
			    public Double out_Temperatura;

				public Double getOut_Temperatura () {
					return this.out_Temperatura;
				}

				public Boolean out_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean out_TemperaturaIsKey(){
				    return false;
				}
				public Integer out_TemperaturaLength(){
				    return null;
				}
				public Integer out_TemperaturaPrecision(){
				    return null;
				}
				public String out_TemperaturaDefault(){
				
					return null;
				
				}
				public String out_TemperaturaComment(){
				
				    return "";
				
				}
				public String out_TemperaturaPattern(){
				
					return "";
				
				}
				public String out_TemperaturaOriginalDbColumnName(){
				
					return "out_Temperatura";
				
				}

				
			    public Integer out_Riesgo;

				public Integer getOut_Riesgo () {
					return this.out_Riesgo;
				}

				public Boolean out_RiesgoIsNullable(){
				    return true;
				}
				public Boolean out_RiesgoIsKey(){
				    return false;
				}
				public Integer out_RiesgoLength(){
				    return null;
				}
				public Integer out_RiesgoPrecision(){
				    return null;
				}
				public String out_RiesgoDefault(){
				
					return null;
				
				}
				public String out_RiesgoComment(){
				
				    return "";
				
				}
				public String out_RiesgoPattern(){
				
					return "";
				
				}
				public String out_RiesgoOriginalDbColumnName(){
				
					return "out_Riesgo";
				
				}

				
			    public Integer out_Muestra;

				public Integer getOut_Muestra () {
					return this.out_Muestra;
				}

				public Boolean out_MuestraIsNullable(){
				    return true;
				}
				public Boolean out_MuestraIsKey(){
				    return false;
				}
				public Integer out_MuestraLength(){
				    return null;
				}
				public Integer out_MuestraPrecision(){
				    return null;
				}
				public String out_MuestraDefault(){
				
					return null;
				
				}
				public String out_MuestraComment(){
				
				    return "";
				
				}
				public String out_MuestraPattern(){
				
					return "";
				
				}
				public String out_MuestraOriginalDbColumnName(){
				
					return "out_Muestra";
				
				}

				
			    public String out_Aprobado;

				public String getOut_Aprobado () {
					return this.out_Aprobado;
				}

				public Boolean out_AprobadoIsNullable(){
				    return true;
				}
				public Boolean out_AprobadoIsKey(){
				    return false;
				}
				public Integer out_AprobadoLength(){
				    return null;
				}
				public Integer out_AprobadoPrecision(){
				    return null;
				}
				public String out_AprobadoDefault(){
				
					return null;
				
				}
				public String out_AprobadoComment(){
				
				    return "";
				
				}
				public String out_AprobadoPattern(){
				
					return "";
				
				}
				public String out_AprobadoOriginalDbColumnName(){
				
					return "out_Aprobado";
				
				}

				
			    public String out_Estado;

				public String getOut_Estado () {
					return this.out_Estado;
				}

				public Boolean out_EstadoIsNullable(){
				    return true;
				}
				public Boolean out_EstadoIsKey(){
				    return false;
				}
				public Integer out_EstadoLength(){
				    return 0;
				}
				public Integer out_EstadoPrecision(){
				    return 0;
				}
				public String out_EstadoDefault(){
				
					return null;
				
				}
				public String out_EstadoComment(){
				
				    return "";
				
				}
				public String out_EstadoPattern(){
				
					return "";
				
				}
				public String out_EstadoOriginalDbColumnName(){
				
					return "out_Estado";
				
				}

				
			    public String out_Message;

				public String getOut_Message () {
					return this.out_Message;
				}

				public Boolean out_MessageIsNullable(){
				    return true;
				}
				public Boolean out_MessageIsKey(){
				    return false;
				}
				public Integer out_MessageLength(){
				    return 0;
				}
				public Integer out_MessagePrecision(){
				    return 0;
				}
				public String out_MessageDefault(){
				
					return null;
				
				}
				public String out_MessageComment(){
				
				    return "";
				
				}
				public String out_MessagePattern(){
				
					return "";
				
				}
				public String out_MessageOriginalDbColumnName(){
				
					return "out_Message";
				
				}

				
			    public String in_CodBarras;

				public String getIn_CodBarras () {
					return this.in_CodBarras;
				}

				public Boolean in_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean in_CodBarrasIsKey(){
				    return false;
				}
				public Integer in_CodBarrasLength(){
				    return 0;
				}
				public Integer in_CodBarrasPrecision(){
				    return 0;
				}
				public String in_CodBarrasDefault(){
				
					return null;
				
				}
				public String in_CodBarrasComment(){
				
				    return "";
				
				}
				public String in_CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CodBarrasOriginalDbColumnName(){
				
					return "in_CodBarras";
				
				}

				
			    public String out_CodBarras;

				public String getOut_CodBarras () {
					return this.out_CodBarras;
				}

				public Boolean out_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean out_CodBarrasIsKey(){
				    return false;
				}
				public Integer out_CodBarrasLength(){
				    return null;
				}
				public Integer out_CodBarrasPrecision(){
				    return null;
				}
				public String out_CodBarrasDefault(){
				
					return null;
				
				}
				public String out_CodBarrasComment(){
				
				    return "";
				
				}
				public String out_CodBarrasPattern(){
				
					return "";
				
				}
				public String out_CodBarrasOriginalDbColumnName(){
				
					return "out_CodBarras";
				
				}

				
			    public String in_Cum;

				public String getIn_Cum () {
					return this.in_Cum;
				}

				public Boolean in_CumIsNullable(){
				    return true;
				}
				public Boolean in_CumIsKey(){
				    return false;
				}
				public Integer in_CumLength(){
				    return 0;
				}
				public Integer in_CumPrecision(){
				    return 0;
				}
				public String in_CumDefault(){
				
					return null;
				
				}
				public String in_CumComment(){
				
				    return "";
				
				}
				public String in_CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CumOriginalDbColumnName(){
				
					return "in_Cum";
				
				}

				
			    public String out_Cum;

				public String getOut_Cum () {
					return this.out_Cum;
				}

				public Boolean out_CumIsNullable(){
				    return true;
				}
				public Boolean out_CumIsKey(){
				    return false;
				}
				public Integer out_CumLength(){
				    return null;
				}
				public Integer out_CumPrecision(){
				    return null;
				}
				public String out_CumDefault(){
				
					return null;
				
				}
				public String out_CumComment(){
				
				    return "";
				
				}
				public String out_CumPattern(){
				
					return "";
				
				}
				public String out_CumOriginalDbColumnName(){
				
					return "out_Cum";
				
				}

				
			    public String in_Invima;

				public String getIn_Invima () {
					return this.in_Invima;
				}

				public Boolean in_InvimaIsNullable(){
				    return true;
				}
				public Boolean in_InvimaIsKey(){
				    return false;
				}
				public Integer in_InvimaLength(){
				    return 0;
				}
				public Integer in_InvimaPrecision(){
				    return 0;
				}
				public String in_InvimaDefault(){
				
					return null;
				
				}
				public String in_InvimaComment(){
				
				    return "";
				
				}
				public String in_InvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_InvimaOriginalDbColumnName(){
				
					return "in_Invima";
				
				}

				
			    public String in_CantEnviada;

				public String getIn_CantEnviada () {
					return this.in_CantEnviada;
				}

				public Boolean in_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean in_CantEnviadaIsKey(){
				    return false;
				}
				public Integer in_CantEnviadaLength(){
				    return 0;
				}
				public Integer in_CantEnviadaPrecision(){
				    return 0;
				}
				public String in_CantEnviadaDefault(){
				
					return null;
				
				}
				public String in_CantEnviadaComment(){
				
				    return "";
				
				}
				public String in_CantEnviadaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CantEnviadaOriginalDbColumnName(){
				
					return "in_CantEnviada";
				
				}

				
			    public String in_CantIngresar;

				public String getIn_CantIngresar () {
					return this.in_CantIngresar;
				}

				public Boolean in_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean in_CantIngresarIsKey(){
				    return false;
				}
				public Integer in_CantIngresarLength(){
				    return 0;
				}
				public Integer in_CantIngresarPrecision(){
				    return 0;
				}
				public String in_CantIngresarDefault(){
				
					return null;
				
				}
				public String in_CantIngresarComment(){
				
				    return "";
				
				}
				public String in_CantIngresarPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CantIngresarOriginalDbColumnName(){
				
					return "in_CantIngresar";
				
				}

				
			    public String in_Lote;

				public String getIn_Lote () {
					return this.in_Lote;
				}

				public Boolean in_LoteIsNullable(){
				    return true;
				}
				public Boolean in_LoteIsKey(){
				    return false;
				}
				public Integer in_LoteLength(){
				    return 0;
				}
				public Integer in_LotePrecision(){
				    return 0;
				}
				public String in_LoteDefault(){
				
					return null;
				
				}
				public String in_LoteComment(){
				
				    return "";
				
				}
				public String in_LotePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_LoteOriginalDbColumnName(){
				
					return "in_Lote";
				
				}

				
			    public String in_FVencimiento;

				public String getIn_FVencimiento () {
					return this.in_FVencimiento;
				}

				public Boolean in_FVencimientoIsNullable(){
				    return true;
				}
				public Boolean in_FVencimientoIsKey(){
				    return false;
				}
				public Integer in_FVencimientoLength(){
				    return 0;
				}
				public Integer in_FVencimientoPrecision(){
				    return 0;
				}
				public String in_FVencimientoDefault(){
				
					return null;
				
				}
				public String in_FVencimientoComment(){
				
				    return "";
				
				}
				public String in_FVencimientoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_FVencimientoOriginalDbColumnName(){
				
					return "in_FVencimiento";
				
				}

				
			    public String out_FVencimiento;

				public String getOut_FVencimiento () {
					return this.out_FVencimiento;
				}

				public Boolean out_FVencimientoIsNullable(){
				    return true;
				}
				public Boolean out_FVencimientoIsKey(){
				    return false;
				}
				public Integer out_FVencimientoLength(){
				    return null;
				}
				public Integer out_FVencimientoPrecision(){
				    return null;
				}
				public String out_FVencimientoDefault(){
				
					return null;
				
				}
				public String out_FVencimientoComment(){
				
				    return "";
				
				}
				public String out_FVencimientoPattern(){
				
					return "";
				
				}
				public String out_FVencimientoOriginalDbColumnName(){
				
					return "out_FVencimiento";
				
				}

				
			    public String in_Leyenda;

				public String getIn_Leyenda () {
					return this.in_Leyenda;
				}

				public Boolean in_LeyendaIsNullable(){
				    return true;
				}
				public Boolean in_LeyendaIsKey(){
				    return false;
				}
				public Integer in_LeyendaLength(){
				    return 0;
				}
				public Integer in_LeyendaPrecision(){
				    return 0;
				}
				public String in_LeyendaDefault(){
				
					return null;
				
				}
				public String in_LeyendaComment(){
				
				    return "";
				
				}
				public String in_LeyendaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_LeyendaOriginalDbColumnName(){
				
					return "in_Leyenda";
				
				}

				
			    public String in_Defectos;

				public String getIn_Defectos () {
					return this.in_Defectos;
				}

				public Boolean in_DefectosIsNullable(){
				    return true;
				}
				public Boolean in_DefectosIsKey(){
				    return false;
				}
				public Integer in_DefectosLength(){
				    return 0;
				}
				public Integer in_DefectosPrecision(){
				    return 0;
				}
				public String in_DefectosDefault(){
				
					return null;
				
				}
				public String in_DefectosComment(){
				
				    return "";
				
				}
				public String in_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_DefectosOriginalDbColumnName(){
				
					return "in_Defectos";
				
				}

				
			    public String out_Defectos;

				public String getOut_Defectos () {
					return this.out_Defectos;
				}

				public Boolean out_DefectosIsNullable(){
				    return true;
				}
				public Boolean out_DefectosIsKey(){
				    return false;
				}
				public Integer out_DefectosLength(){
				    return 0;
				}
				public Integer out_DefectosPrecision(){
				    return 0;
				}
				public String out_DefectosDefault(){
				
					return null;
				
				}
				public String out_DefectosComment(){
				
				    return "";
				
				}
				public String out_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String out_DefectosOriginalDbColumnName(){
				
					return "out_Defectos";
				
				}

				
			    public String in_Temperatura;

				public String getIn_Temperatura () {
					return this.in_Temperatura;
				}

				public Boolean in_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean in_TemperaturaIsKey(){
				    return false;
				}
				public Integer in_TemperaturaLength(){
				    return 0;
				}
				public Integer in_TemperaturaPrecision(){
				    return 0;
				}
				public String in_TemperaturaDefault(){
				
					return null;
				
				}
				public String in_TemperaturaComment(){
				
				    return "";
				
				}
				public String in_TemperaturaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_TemperaturaOriginalDbColumnName(){
				
					return "in_Temperatura";
				
				}

				
			    public String in_Riesgo;

				public String getIn_Riesgo () {
					return this.in_Riesgo;
				}

				public Boolean in_RiesgoIsNullable(){
				    return true;
				}
				public Boolean in_RiesgoIsKey(){
				    return false;
				}
				public Integer in_RiesgoLength(){
				    return 0;
				}
				public Integer in_RiesgoPrecision(){
				    return 0;
				}
				public String in_RiesgoDefault(){
				
					return null;
				
				}
				public String in_RiesgoComment(){
				
				    return "";
				
				}
				public String in_RiesgoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_RiesgoOriginalDbColumnName(){
				
					return "in_Riesgo";
				
				}

				
			    public String in_Muestra;

				public String getIn_Muestra () {
					return this.in_Muestra;
				}

				public Boolean in_MuestraIsNullable(){
				    return true;
				}
				public Boolean in_MuestraIsKey(){
				    return false;
				}
				public Integer in_MuestraLength(){
				    return 0;
				}
				public Integer in_MuestraPrecision(){
				    return 0;
				}
				public String in_MuestraDefault(){
				
					return null;
				
				}
				public String in_MuestraComment(){
				
				    return "";
				
				}
				public String in_MuestraPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_MuestraOriginalDbColumnName(){
				
					return "in_Muestra";
				
				}

				
			    public String in_Aprobado;

				public String getIn_Aprobado () {
					return this.in_Aprobado;
				}

				public Boolean in_AprobadoIsNullable(){
				    return true;
				}
				public Boolean in_AprobadoIsKey(){
				    return false;
				}
				public Integer in_AprobadoLength(){
				    return 0;
				}
				public Integer in_AprobadoPrecision(){
				    return 0;
				}
				public String in_AprobadoDefault(){
				
					return null;
				
				}
				public String in_AprobadoComment(){
				
				    return "";
				
				}
				public String in_AprobadoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_AprobadoOriginalDbColumnName(){
				
					return "in_Aprobado";
				
				}

				
			    public String in_Contrato;

				public String getIn_Contrato () {
					return this.in_Contrato;
				}

				public Boolean in_ContratoIsNullable(){
				    return true;
				}
				public Boolean in_ContratoIsKey(){
				    return false;
				}
				public Integer in_ContratoLength(){
				    return 0;
				}
				public Integer in_ContratoPrecision(){
				    return 0;
				}
				public String in_ContratoDefault(){
				
					return null;
				
				}
				public String in_ContratoComment(){
				
				    return "";
				
				}
				public String in_ContratoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_ContratoOriginalDbColumnName(){
				
					return "in_Contrato";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.out_Producto_Id = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.in_CantEnviada = readString(dis);
					
					this.in_CantIngresar = readString(dis);
					
					this.in_Lote = readString(dis);
					
					this.in_FVencimiento = readString(dis);
					
					this.out_FVencimiento = readString(dis);
					
					this.in_Leyenda = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.out_Defectos = readString(dis);
					
					this.in_Temperatura = readString(dis);
					
					this.in_Riesgo = readString(dis);
					
					this.in_Muestra = readString(dis);
					
					this.in_Aprobado = readString(dis);
					
					this.in_Contrato = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.out_Producto_Id = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.in_CantEnviada = readString(dis);
					
					this.in_CantIngresar = readString(dis);
					
					this.in_Lote = readString(dis);
					
					this.in_FVencimiento = readString(dis);
					
					this.out_FVencimiento = readString(dis);
					
					this.in_Leyenda = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.out_Defectos = readString(dis);
					
					this.in_Temperatura = readString(dis);
					
					this.in_Riesgo = readString(dis);
					
					this.in_Muestra = readString(dis);
					
					this.in_Aprobado = readString(dis);
					
					this.in_Contrato = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.out_Producto_Id);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.in_CantEnviada,dos);
					
					// String
				
						writeString(this.in_CantIngresar,dos);
					
					// String
				
						writeString(this.in_Lote,dos);
					
					// String
				
						writeString(this.in_FVencimiento,dos);
					
					// String
				
						writeString(this.out_FVencimiento,dos);
					
					// String
				
						writeString(this.in_Leyenda,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.out_Defectos,dos);
					
					// String
				
						writeString(this.in_Temperatura,dos);
					
					// String
				
						writeString(this.in_Riesgo,dos);
					
					// String
				
						writeString(this.in_Muestra,dos);
					
					// String
				
						writeString(this.in_Aprobado,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.out_Producto_Id);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.in_CantEnviada,dos);
					
					// String
				
						writeString(this.in_CantIngresar,dos);
					
					// String
				
						writeString(this.in_Lote,dos);
					
					// String
				
						writeString(this.in_FVencimiento,dos);
					
					// String
				
						writeString(this.out_FVencimiento,dos);
					
					// String
				
						writeString(this.in_Leyenda,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.out_Defectos,dos);
					
					// String
				
						writeString(this.in_Temperatura,dos);
					
					// String
				
						writeString(this.in_Riesgo,dos);
					
					// String
				
						writeString(this.in_Muestra,dos);
					
					// String
				
						writeString(this.in_Aprobado,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("out_Producto_Id="+String.valueOf(out_Producto_Id));
		sb.append(",out_Expediente="+out_Expediente);
		sb.append(",out_Consecutivo="+out_Consecutivo);
		sb.append(",out_CantEnviada="+String.valueOf(out_CantEnviada));
		sb.append(",out_CantIngresar="+String.valueOf(out_CantIngresar));
		sb.append(",out_Temperatura="+String.valueOf(out_Temperatura));
		sb.append(",out_Riesgo="+String.valueOf(out_Riesgo));
		sb.append(",out_Muestra="+String.valueOf(out_Muestra));
		sb.append(",out_Aprobado="+out_Aprobado);
		sb.append(",out_Estado="+out_Estado);
		sb.append(",out_Message="+out_Message);
		sb.append(",in_CodBarras="+in_CodBarras);
		sb.append(",out_CodBarras="+out_CodBarras);
		sb.append(",in_Cum="+in_Cum);
		sb.append(",out_Cum="+out_Cum);
		sb.append(",in_Invima="+in_Invima);
		sb.append(",in_CantEnviada="+in_CantEnviada);
		sb.append(",in_CantIngresar="+in_CantIngresar);
		sb.append(",in_Lote="+in_Lote);
		sb.append(",in_FVencimiento="+in_FVencimiento);
		sb.append(",out_FVencimiento="+out_FVencimiento);
		sb.append(",in_Leyenda="+in_Leyenda);
		sb.append(",in_Defectos="+in_Defectos);
		sb.append(",out_Defectos="+out_Defectos);
		sb.append(",in_Temperatura="+in_Temperatura);
		sb.append(",in_Riesgo="+in_Riesgo);
		sb.append(",in_Muestra="+in_Muestra);
		sb.append(",in_Aprobado="+in_Aprobado);
		sb.append(",in_Contrato="+in_Contrato);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class next_1Struct implements routines.system.IPersistableRow<next_1Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public BigDecimal out_Producto_Id;

				public BigDecimal getOut_Producto_Id () {
					return this.out_Producto_Id;
				}

				public Boolean out_Producto_IdIsNullable(){
				    return true;
				}
				public Boolean out_Producto_IdIsKey(){
				    return false;
				}
				public Integer out_Producto_IdLength(){
				    return null;
				}
				public Integer out_Producto_IdPrecision(){
				    return null;
				}
				public String out_Producto_IdDefault(){
				
					return null;
				
				}
				public String out_Producto_IdComment(){
				
				    return "";
				
				}
				public String out_Producto_IdPattern(){
				
					return "";
				
				}
				public String out_Producto_IdOriginalDbColumnName(){
				
					return "out_Producto_Id";
				
				}

				
			    public String out_Expediente;

				public String getOut_Expediente () {
					return this.out_Expediente;
				}

				public Boolean out_ExpedienteIsNullable(){
				    return true;
				}
				public Boolean out_ExpedienteIsKey(){
				    return false;
				}
				public Integer out_ExpedienteLength(){
				    return null;
				}
				public Integer out_ExpedientePrecision(){
				    return null;
				}
				public String out_ExpedienteDefault(){
				
					return null;
				
				}
				public String out_ExpedienteComment(){
				
				    return "";
				
				}
				public String out_ExpedientePattern(){
				
					return "";
				
				}
				public String out_ExpedienteOriginalDbColumnName(){
				
					return "out_Expediente";
				
				}

				
			    public String out_Consecutivo;

				public String getOut_Consecutivo () {
					return this.out_Consecutivo;
				}

				public Boolean out_ConsecutivoIsNullable(){
				    return true;
				}
				public Boolean out_ConsecutivoIsKey(){
				    return false;
				}
				public Integer out_ConsecutivoLength(){
				    return null;
				}
				public Integer out_ConsecutivoPrecision(){
				    return null;
				}
				public String out_ConsecutivoDefault(){
				
					return null;
				
				}
				public String out_ConsecutivoComment(){
				
				    return "";
				
				}
				public String out_ConsecutivoPattern(){
				
					return "";
				
				}
				public String out_ConsecutivoOriginalDbColumnName(){
				
					return "out_Consecutivo";
				
				}

				
			    public Integer out_CantEnviada;

				public Integer getOut_CantEnviada () {
					return this.out_CantEnviada;
				}

				public Boolean out_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean out_CantEnviadaIsKey(){
				    return false;
				}
				public Integer out_CantEnviadaLength(){
				    return 0;
				}
				public Integer out_CantEnviadaPrecision(){
				    return 0;
				}
				public String out_CantEnviadaDefault(){
				
					return null;
				
				}
				public String out_CantEnviadaComment(){
				
				    return "";
				
				}
				public String out_CantEnviadaPattern(){
				
					return "";
				
				}
				public String out_CantEnviadaOriginalDbColumnName(){
				
					return "out_CantEnviada";
				
				}

				
			    public Integer out_CantIngresar;

				public Integer getOut_CantIngresar () {
					return this.out_CantIngresar;
				}

				public Boolean out_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean out_CantIngresarIsKey(){
				    return false;
				}
				public Integer out_CantIngresarLength(){
				    return 0;
				}
				public Integer out_CantIngresarPrecision(){
				    return 0;
				}
				public String out_CantIngresarDefault(){
				
					return null;
				
				}
				public String out_CantIngresarComment(){
				
				    return "";
				
				}
				public String out_CantIngresarPattern(){
				
					return "";
				
				}
				public String out_CantIngresarOriginalDbColumnName(){
				
					return "out_CantIngresar";
				
				}

				
			    public Double out_Temperatura;

				public Double getOut_Temperatura () {
					return this.out_Temperatura;
				}

				public Boolean out_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean out_TemperaturaIsKey(){
				    return false;
				}
				public Integer out_TemperaturaLength(){
				    return null;
				}
				public Integer out_TemperaturaPrecision(){
				    return null;
				}
				public String out_TemperaturaDefault(){
				
					return null;
				
				}
				public String out_TemperaturaComment(){
				
				    return "";
				
				}
				public String out_TemperaturaPattern(){
				
					return "";
				
				}
				public String out_TemperaturaOriginalDbColumnName(){
				
					return "out_Temperatura";
				
				}

				
			    public Integer out_Riesgo;

				public Integer getOut_Riesgo () {
					return this.out_Riesgo;
				}

				public Boolean out_RiesgoIsNullable(){
				    return true;
				}
				public Boolean out_RiesgoIsKey(){
				    return false;
				}
				public Integer out_RiesgoLength(){
				    return null;
				}
				public Integer out_RiesgoPrecision(){
				    return null;
				}
				public String out_RiesgoDefault(){
				
					return null;
				
				}
				public String out_RiesgoComment(){
				
				    return "";
				
				}
				public String out_RiesgoPattern(){
				
					return "";
				
				}
				public String out_RiesgoOriginalDbColumnName(){
				
					return "out_Riesgo";
				
				}

				
			    public Integer out_Muestra;

				public Integer getOut_Muestra () {
					return this.out_Muestra;
				}

				public Boolean out_MuestraIsNullable(){
				    return true;
				}
				public Boolean out_MuestraIsKey(){
				    return false;
				}
				public Integer out_MuestraLength(){
				    return null;
				}
				public Integer out_MuestraPrecision(){
				    return null;
				}
				public String out_MuestraDefault(){
				
					return null;
				
				}
				public String out_MuestraComment(){
				
				    return "";
				
				}
				public String out_MuestraPattern(){
				
					return "";
				
				}
				public String out_MuestraOriginalDbColumnName(){
				
					return "out_Muestra";
				
				}

				
			    public String out_Aprobado;

				public String getOut_Aprobado () {
					return this.out_Aprobado;
				}

				public Boolean out_AprobadoIsNullable(){
				    return true;
				}
				public Boolean out_AprobadoIsKey(){
				    return false;
				}
				public Integer out_AprobadoLength(){
				    return null;
				}
				public Integer out_AprobadoPrecision(){
				    return null;
				}
				public String out_AprobadoDefault(){
				
					return null;
				
				}
				public String out_AprobadoComment(){
				
				    return "";
				
				}
				public String out_AprobadoPattern(){
				
					return "";
				
				}
				public String out_AprobadoOriginalDbColumnName(){
				
					return "out_Aprobado";
				
				}

				
			    public String out_Estado;

				public String getOut_Estado () {
					return this.out_Estado;
				}

				public Boolean out_EstadoIsNullable(){
				    return true;
				}
				public Boolean out_EstadoIsKey(){
				    return false;
				}
				public Integer out_EstadoLength(){
				    return 0;
				}
				public Integer out_EstadoPrecision(){
				    return 0;
				}
				public String out_EstadoDefault(){
				
					return null;
				
				}
				public String out_EstadoComment(){
				
				    return "";
				
				}
				public String out_EstadoPattern(){
				
					return "";
				
				}
				public String out_EstadoOriginalDbColumnName(){
				
					return "out_Estado";
				
				}

				
			    public String out_Message;

				public String getOut_Message () {
					return this.out_Message;
				}

				public Boolean out_MessageIsNullable(){
				    return true;
				}
				public Boolean out_MessageIsKey(){
				    return false;
				}
				public Integer out_MessageLength(){
				    return 0;
				}
				public Integer out_MessagePrecision(){
				    return 0;
				}
				public String out_MessageDefault(){
				
					return null;
				
				}
				public String out_MessageComment(){
				
				    return "";
				
				}
				public String out_MessagePattern(){
				
					return "";
				
				}
				public String out_MessageOriginalDbColumnName(){
				
					return "out_Message";
				
				}

				
			    public String in_CodBarras;

				public String getIn_CodBarras () {
					return this.in_CodBarras;
				}

				public Boolean in_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean in_CodBarrasIsKey(){
				    return false;
				}
				public Integer in_CodBarrasLength(){
				    return 0;
				}
				public Integer in_CodBarrasPrecision(){
				    return 0;
				}
				public String in_CodBarrasDefault(){
				
					return null;
				
				}
				public String in_CodBarrasComment(){
				
				    return "";
				
				}
				public String in_CodBarrasPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CodBarrasOriginalDbColumnName(){
				
					return "in_CodBarras";
				
				}

				
			    public String out_CodBarras;

				public String getOut_CodBarras () {
					return this.out_CodBarras;
				}

				public Boolean out_CodBarrasIsNullable(){
				    return true;
				}
				public Boolean out_CodBarrasIsKey(){
				    return false;
				}
				public Integer out_CodBarrasLength(){
				    return null;
				}
				public Integer out_CodBarrasPrecision(){
				    return null;
				}
				public String out_CodBarrasDefault(){
				
					return null;
				
				}
				public String out_CodBarrasComment(){
				
				    return "";
				
				}
				public String out_CodBarrasPattern(){
				
					return "";
				
				}
				public String out_CodBarrasOriginalDbColumnName(){
				
					return "out_CodBarras";
				
				}

				
			    public String in_Cum;

				public String getIn_Cum () {
					return this.in_Cum;
				}

				public Boolean in_CumIsNullable(){
				    return true;
				}
				public Boolean in_CumIsKey(){
				    return false;
				}
				public Integer in_CumLength(){
				    return 0;
				}
				public Integer in_CumPrecision(){
				    return 0;
				}
				public String in_CumDefault(){
				
					return null;
				
				}
				public String in_CumComment(){
				
				    return "";
				
				}
				public String in_CumPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CumOriginalDbColumnName(){
				
					return "in_Cum";
				
				}

				
			    public String out_Cum;

				public String getOut_Cum () {
					return this.out_Cum;
				}

				public Boolean out_CumIsNullable(){
				    return true;
				}
				public Boolean out_CumIsKey(){
				    return false;
				}
				public Integer out_CumLength(){
				    return null;
				}
				public Integer out_CumPrecision(){
				    return null;
				}
				public String out_CumDefault(){
				
					return null;
				
				}
				public String out_CumComment(){
				
				    return "";
				
				}
				public String out_CumPattern(){
				
					return "";
				
				}
				public String out_CumOriginalDbColumnName(){
				
					return "out_Cum";
				
				}

				
			    public String in_Invima;

				public String getIn_Invima () {
					return this.in_Invima;
				}

				public Boolean in_InvimaIsNullable(){
				    return true;
				}
				public Boolean in_InvimaIsKey(){
				    return false;
				}
				public Integer in_InvimaLength(){
				    return 0;
				}
				public Integer in_InvimaPrecision(){
				    return 0;
				}
				public String in_InvimaDefault(){
				
					return null;
				
				}
				public String in_InvimaComment(){
				
				    return "";
				
				}
				public String in_InvimaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_InvimaOriginalDbColumnName(){
				
					return "in_Invima";
				
				}

				
			    public String in_CantEnviada;

				public String getIn_CantEnviada () {
					return this.in_CantEnviada;
				}

				public Boolean in_CantEnviadaIsNullable(){
				    return true;
				}
				public Boolean in_CantEnviadaIsKey(){
				    return false;
				}
				public Integer in_CantEnviadaLength(){
				    return 0;
				}
				public Integer in_CantEnviadaPrecision(){
				    return 0;
				}
				public String in_CantEnviadaDefault(){
				
					return null;
				
				}
				public String in_CantEnviadaComment(){
				
				    return "";
				
				}
				public String in_CantEnviadaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CantEnviadaOriginalDbColumnName(){
				
					return "in_CantEnviada";
				
				}

				
			    public String in_CantIngresar;

				public String getIn_CantIngresar () {
					return this.in_CantIngresar;
				}

				public Boolean in_CantIngresarIsNullable(){
				    return true;
				}
				public Boolean in_CantIngresarIsKey(){
				    return false;
				}
				public Integer in_CantIngresarLength(){
				    return 0;
				}
				public Integer in_CantIngresarPrecision(){
				    return 0;
				}
				public String in_CantIngresarDefault(){
				
					return null;
				
				}
				public String in_CantIngresarComment(){
				
				    return "";
				
				}
				public String in_CantIngresarPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_CantIngresarOriginalDbColumnName(){
				
					return "in_CantIngresar";
				
				}

				
			    public String in_Lote;

				public String getIn_Lote () {
					return this.in_Lote;
				}

				public Boolean in_LoteIsNullable(){
				    return true;
				}
				public Boolean in_LoteIsKey(){
				    return false;
				}
				public Integer in_LoteLength(){
				    return 0;
				}
				public Integer in_LotePrecision(){
				    return 0;
				}
				public String in_LoteDefault(){
				
					return null;
				
				}
				public String in_LoteComment(){
				
				    return "";
				
				}
				public String in_LotePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_LoteOriginalDbColumnName(){
				
					return "in_Lote";
				
				}

				
			    public String in_FVencimiento;

				public String getIn_FVencimiento () {
					return this.in_FVencimiento;
				}

				public Boolean in_FVencimientoIsNullable(){
				    return true;
				}
				public Boolean in_FVencimientoIsKey(){
				    return false;
				}
				public Integer in_FVencimientoLength(){
				    return 0;
				}
				public Integer in_FVencimientoPrecision(){
				    return 0;
				}
				public String in_FVencimientoDefault(){
				
					return null;
				
				}
				public String in_FVencimientoComment(){
				
				    return "";
				
				}
				public String in_FVencimientoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_FVencimientoOriginalDbColumnName(){
				
					return "in_FVencimiento";
				
				}

				
			    public String out_FVencimiento;

				public String getOut_FVencimiento () {
					return this.out_FVencimiento;
				}

				public Boolean out_FVencimientoIsNullable(){
				    return true;
				}
				public Boolean out_FVencimientoIsKey(){
				    return false;
				}
				public Integer out_FVencimientoLength(){
				    return null;
				}
				public Integer out_FVencimientoPrecision(){
				    return null;
				}
				public String out_FVencimientoDefault(){
				
					return null;
				
				}
				public String out_FVencimientoComment(){
				
				    return "";
				
				}
				public String out_FVencimientoPattern(){
				
					return "";
				
				}
				public String out_FVencimientoOriginalDbColumnName(){
				
					return "out_FVencimiento";
				
				}

				
			    public String in_Leyenda;

				public String getIn_Leyenda () {
					return this.in_Leyenda;
				}

				public Boolean in_LeyendaIsNullable(){
				    return true;
				}
				public Boolean in_LeyendaIsKey(){
				    return false;
				}
				public Integer in_LeyendaLength(){
				    return 0;
				}
				public Integer in_LeyendaPrecision(){
				    return 0;
				}
				public String in_LeyendaDefault(){
				
					return null;
				
				}
				public String in_LeyendaComment(){
				
				    return "";
				
				}
				public String in_LeyendaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_LeyendaOriginalDbColumnName(){
				
					return "in_Leyenda";
				
				}

				
			    public String in_Defectos;

				public String getIn_Defectos () {
					return this.in_Defectos;
				}

				public Boolean in_DefectosIsNullable(){
				    return true;
				}
				public Boolean in_DefectosIsKey(){
				    return false;
				}
				public Integer in_DefectosLength(){
				    return 0;
				}
				public Integer in_DefectosPrecision(){
				    return 0;
				}
				public String in_DefectosDefault(){
				
					return null;
				
				}
				public String in_DefectosComment(){
				
				    return "";
				
				}
				public String in_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_DefectosOriginalDbColumnName(){
				
					return "in_Defectos";
				
				}

				
			    public String out_Defectos;

				public String getOut_Defectos () {
					return this.out_Defectos;
				}

				public Boolean out_DefectosIsNullable(){
				    return true;
				}
				public Boolean out_DefectosIsKey(){
				    return false;
				}
				public Integer out_DefectosLength(){
				    return 0;
				}
				public Integer out_DefectosPrecision(){
				    return 0;
				}
				public String out_DefectosDefault(){
				
					return null;
				
				}
				public String out_DefectosComment(){
				
				    return "";
				
				}
				public String out_DefectosPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String out_DefectosOriginalDbColumnName(){
				
					return "out_Defectos";
				
				}

				
			    public String in_Temperatura;

				public String getIn_Temperatura () {
					return this.in_Temperatura;
				}

				public Boolean in_TemperaturaIsNullable(){
				    return true;
				}
				public Boolean in_TemperaturaIsKey(){
				    return false;
				}
				public Integer in_TemperaturaLength(){
				    return 0;
				}
				public Integer in_TemperaturaPrecision(){
				    return 0;
				}
				public String in_TemperaturaDefault(){
				
					return null;
				
				}
				public String in_TemperaturaComment(){
				
				    return "";
				
				}
				public String in_TemperaturaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_TemperaturaOriginalDbColumnName(){
				
					return "in_Temperatura";
				
				}

				
			    public String in_Riesgo;

				public String getIn_Riesgo () {
					return this.in_Riesgo;
				}

				public Boolean in_RiesgoIsNullable(){
				    return true;
				}
				public Boolean in_RiesgoIsKey(){
				    return false;
				}
				public Integer in_RiesgoLength(){
				    return 0;
				}
				public Integer in_RiesgoPrecision(){
				    return 0;
				}
				public String in_RiesgoDefault(){
				
					return null;
				
				}
				public String in_RiesgoComment(){
				
				    return "";
				
				}
				public String in_RiesgoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_RiesgoOriginalDbColumnName(){
				
					return "in_Riesgo";
				
				}

				
			    public String in_Muestra;

				public String getIn_Muestra () {
					return this.in_Muestra;
				}

				public Boolean in_MuestraIsNullable(){
				    return true;
				}
				public Boolean in_MuestraIsKey(){
				    return false;
				}
				public Integer in_MuestraLength(){
				    return 0;
				}
				public Integer in_MuestraPrecision(){
				    return 0;
				}
				public String in_MuestraDefault(){
				
					return null;
				
				}
				public String in_MuestraComment(){
				
				    return "";
				
				}
				public String in_MuestraPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_MuestraOriginalDbColumnName(){
				
					return "in_Muestra";
				
				}

				
			    public String in_Aprobado;

				public String getIn_Aprobado () {
					return this.in_Aprobado;
				}

				public Boolean in_AprobadoIsNullable(){
				    return true;
				}
				public Boolean in_AprobadoIsKey(){
				    return false;
				}
				public Integer in_AprobadoLength(){
				    return 0;
				}
				public Integer in_AprobadoPrecision(){
				    return 0;
				}
				public String in_AprobadoDefault(){
				
					return null;
				
				}
				public String in_AprobadoComment(){
				
				    return "";
				
				}
				public String in_AprobadoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_AprobadoOriginalDbColumnName(){
				
					return "in_Aprobado";
				
				}

				
			    public String in_Contrato;

				public String getIn_Contrato () {
					return this.in_Contrato;
				}

				public Boolean in_ContratoIsNullable(){
				    return true;
				}
				public Boolean in_ContratoIsKey(){
				    return false;
				}
				public Integer in_ContratoLength(){
				    return 0;
				}
				public Integer in_ContratoPrecision(){
				    return 0;
				}
				public String in_ContratoDefault(){
				
					return null;
				
				}
				public String in_ContratoComment(){
				
				    return "";
				
				}
				public String in_ContratoPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String in_ContratoOriginalDbColumnName(){
				
					return "in_Contrato";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.out_Producto_Id = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.in_CantEnviada = readString(dis);
					
					this.in_CantIngresar = readString(dis);
					
					this.in_Lote = readString(dis);
					
					this.in_FVencimiento = readString(dis);
					
					this.out_FVencimiento = readString(dis);
					
					this.in_Leyenda = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.out_Defectos = readString(dis);
					
					this.in_Temperatura = readString(dis);
					
					this.in_Riesgo = readString(dis);
					
					this.in_Muestra = readString(dis);
					
					this.in_Aprobado = readString(dis);
					
					this.in_Contrato = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.out_Producto_Id = (BigDecimal) dis.readObject();
					
					this.out_Expediente = readString(dis);
					
					this.out_Consecutivo = readString(dis);
					
						this.out_CantEnviada = readInteger(dis);
					
						this.out_CantIngresar = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.out_Temperatura = null;
           				} else {
           			    	this.out_Temperatura = dis.readDouble();
           				}
					
						this.out_Riesgo = readInteger(dis);
					
						this.out_Muestra = readInteger(dis);
					
					this.out_Aprobado = readString(dis);
					
					this.out_Estado = readString(dis);
					
					this.out_Message = readString(dis);
					
					this.in_CodBarras = readString(dis);
					
					this.out_CodBarras = readString(dis);
					
					this.in_Cum = readString(dis);
					
					this.out_Cum = readString(dis);
					
					this.in_Invima = readString(dis);
					
					this.in_CantEnviada = readString(dis);
					
					this.in_CantIngresar = readString(dis);
					
					this.in_Lote = readString(dis);
					
					this.in_FVencimiento = readString(dis);
					
					this.out_FVencimiento = readString(dis);
					
					this.in_Leyenda = readString(dis);
					
					this.in_Defectos = readString(dis);
					
					this.out_Defectos = readString(dis);
					
					this.in_Temperatura = readString(dis);
					
					this.in_Riesgo = readString(dis);
					
					this.in_Muestra = readString(dis);
					
					this.in_Aprobado = readString(dis);
					
					this.in_Contrato = readString(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.out_Producto_Id);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.in_CantEnviada,dos);
					
					// String
				
						writeString(this.in_CantIngresar,dos);
					
					// String
				
						writeString(this.in_Lote,dos);
					
					// String
				
						writeString(this.in_FVencimiento,dos);
					
					// String
				
						writeString(this.out_FVencimiento,dos);
					
					// String
				
						writeString(this.in_Leyenda,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.out_Defectos,dos);
					
					// String
				
						writeString(this.in_Temperatura,dos);
					
					// String
				
						writeString(this.in_Riesgo,dos);
					
					// String
				
						writeString(this.in_Muestra,dos);
					
					// String
				
						writeString(this.in_Aprobado,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.out_Producto_Id);
					
					// String
				
						writeString(this.out_Expediente,dos);
					
					// String
				
						writeString(this.out_Consecutivo,dos);
					
					// Integer
				
						writeInteger(this.out_CantEnviada,dos);
					
					// Integer
				
						writeInteger(this.out_CantIngresar,dos);
					
					// Double
				
						if(this.out_Temperatura == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.out_Temperatura);
		            	}
					
					// Integer
				
						writeInteger(this.out_Riesgo,dos);
					
					// Integer
				
						writeInteger(this.out_Muestra,dos);
					
					// String
				
						writeString(this.out_Aprobado,dos);
					
					// String
				
						writeString(this.out_Estado,dos);
					
					// String
				
						writeString(this.out_Message,dos);
					
					// String
				
						writeString(this.in_CodBarras,dos);
					
					// String
				
						writeString(this.out_CodBarras,dos);
					
					// String
				
						writeString(this.in_Cum,dos);
					
					// String
				
						writeString(this.out_Cum,dos);
					
					// String
				
						writeString(this.in_Invima,dos);
					
					// String
				
						writeString(this.in_CantEnviada,dos);
					
					// String
				
						writeString(this.in_CantIngresar,dos);
					
					// String
				
						writeString(this.in_Lote,dos);
					
					// String
				
						writeString(this.in_FVencimiento,dos);
					
					// String
				
						writeString(this.out_FVencimiento,dos);
					
					// String
				
						writeString(this.in_Leyenda,dos);
					
					// String
				
						writeString(this.in_Defectos,dos);
					
					// String
				
						writeString(this.out_Defectos,dos);
					
					// String
				
						writeString(this.in_Temperatura,dos);
					
					// String
				
						writeString(this.in_Riesgo,dos);
					
					// String
				
						writeString(this.in_Muestra,dos);
					
					// String
				
						writeString(this.in_Aprobado,dos);
					
					// String
				
						writeString(this.in_Contrato,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("out_Producto_Id="+String.valueOf(out_Producto_Id));
		sb.append(",out_Expediente="+out_Expediente);
		sb.append(",out_Consecutivo="+out_Consecutivo);
		sb.append(",out_CantEnviada="+String.valueOf(out_CantEnviada));
		sb.append(",out_CantIngresar="+String.valueOf(out_CantIngresar));
		sb.append(",out_Temperatura="+String.valueOf(out_Temperatura));
		sb.append(",out_Riesgo="+String.valueOf(out_Riesgo));
		sb.append(",out_Muestra="+String.valueOf(out_Muestra));
		sb.append(",out_Aprobado="+out_Aprobado);
		sb.append(",out_Estado="+out_Estado);
		sb.append(",out_Message="+out_Message);
		sb.append(",in_CodBarras="+in_CodBarras);
		sb.append(",out_CodBarras="+out_CodBarras);
		sb.append(",in_Cum="+in_Cum);
		sb.append(",out_Cum="+out_Cum);
		sb.append(",in_Invima="+in_Invima);
		sb.append(",in_CantEnviada="+in_CantEnviada);
		sb.append(",in_CantIngresar="+in_CantIngresar);
		sb.append(",in_Lote="+in_Lote);
		sb.append(",in_FVencimiento="+in_FVencimiento);
		sb.append(",out_FVencimiento="+out_FVencimiento);
		sb.append(",in_Leyenda="+in_Leyenda);
		sb.append(",in_Defectos="+in_Defectos);
		sb.append(",out_Defectos="+out_Defectos);
		sb.append(",in_Temperatura="+in_Temperatura);
		sb.append(",in_Riesgo="+in_Riesgo);
		sb.append(",in_Muestra="+in_Muestra);
		sb.append(",in_Aprobado="+in_Aprobado);
		sb.append(",in_Contrato="+in_Contrato);
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(next_1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row31Struct implements routines.system.IPersistableRow<row31Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String REGISTRO_INVIMA;

				public String getREGISTRO_INVIMA () {
					return this.REGISTRO_INVIMA;
				}

				public Boolean REGISTRO_INVIMAIsNullable(){
				    return true;
				}
				public Boolean REGISTRO_INVIMAIsKey(){
				    return false;
				}
				public Integer REGISTRO_INVIMALength(){
				    return 255;
				}
				public Integer REGISTRO_INVIMAPrecision(){
				    return 0;
				}
				public String REGISTRO_INVIMADefault(){
				
					return null;
				
				}
				public String REGISTRO_INVIMAComment(){
				
				    return "";
				
				}
				public String REGISTRO_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String REGISTRO_INVIMAOriginalDbColumnName(){
				
					return "REGISTRO_INVIMA";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String CANTIDAD_ENVIADA;

				public String getCANTIDAD_ENVIADA () {
					return this.CANTIDAD_ENVIADA;
				}

				public Boolean CANTIDAD_ENVIADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_ENVIADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_ENVIADALength(){
				    return 255;
				}
				public Integer CANTIDAD_ENVIADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_ENVIADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_ENVIADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_ENVIADAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_ENVIADAOriginalDbColumnName(){
				
					return "CANTIDAD_ENVIADA";
				
				}

				
			    public String CANTIDAD_A_INGRESAR;

				public String getCANTIDAD_A_INGRESAR () {
					return this.CANTIDAD_A_INGRESAR;
				}

				public Boolean CANTIDAD_A_INGRESARIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_A_INGRESARIsKey(){
				    return false;
				}
				public Integer CANTIDAD_A_INGRESARLength(){
				    return 255;
				}
				public Integer CANTIDAD_A_INGRESARPrecision(){
				    return 0;
				}
				public String CANTIDAD_A_INGRESARDefault(){
				
					return null;
				
				}
				public String CANTIDAD_A_INGRESARComment(){
				
				    return "";
				
				}
				public String CANTIDAD_A_INGRESARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_A_INGRESAROriginalDbColumnName(){
				
					return "CANTIDAD_A_INGRESAR";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 255;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public String FECHA_VENCIMIENTO;

				public String getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public String LEYENDA_DE_RESTRICCION;

				public String getLEYENDA_DE_RESTRICCION () {
					return this.LEYENDA_DE_RESTRICCION;
				}

				public Boolean LEYENDA_DE_RESTRICCIONIsNullable(){
				    return true;
				}
				public Boolean LEYENDA_DE_RESTRICCIONIsKey(){
				    return false;
				}
				public Integer LEYENDA_DE_RESTRICCIONLength(){
				    return 255;
				}
				public Integer LEYENDA_DE_RESTRICCIONPrecision(){
				    return 0;
				}
				public String LEYENDA_DE_RESTRICCIONDefault(){
				
					return null;
				
				}
				public String LEYENDA_DE_RESTRICCIONComment(){
				
				    return "";
				
				}
				public String LEYENDA_DE_RESTRICCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LEYENDA_DE_RESTRICCIONOriginalDbColumnName(){
				
					return "LEYENDA_DE_RESTRICCION";
				
				}

				
			    public String DEFECTOS;

				public String getDEFECTOS () {
					return this.DEFECTOS;
				}

				public Boolean DEFECTOSIsNullable(){
				    return true;
				}
				public Boolean DEFECTOSIsKey(){
				    return false;
				}
				public Integer DEFECTOSLength(){
				    return 255;
				}
				public Integer DEFECTOSPrecision(){
				    return 0;
				}
				public String DEFECTOSDefault(){
				
					return null;
				
				}
				public String DEFECTOSComment(){
				
				    return "";
				
				}
				public String DEFECTOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DEFECTOSOriginalDbColumnName(){
				
					return "DEFECTOS";
				
				}

				
			    public String TEMPERATURA_DE_RECEPCION__C__;

				public String getTEMPERATURA_DE_RECEPCION__C__ () {
					return this.TEMPERATURA_DE_RECEPCION__C__;
				}

				public Boolean TEMPERATURA_DE_RECEPCION__C__IsNullable(){
				    return true;
				}
				public Boolean TEMPERATURA_DE_RECEPCION__C__IsKey(){
				    return false;
				}
				public Integer TEMPERATURA_DE_RECEPCION__C__Length(){
				    return 255;
				}
				public Integer TEMPERATURA_DE_RECEPCION__C__Precision(){
				    return 0;
				}
				public String TEMPERATURA_DE_RECEPCION__C__Default(){
				
					return null;
				
				}
				public String TEMPERATURA_DE_RECEPCION__C__Comment(){
				
				    return "";
				
				}
				public String TEMPERATURA_DE_RECEPCION__C__Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TEMPERATURA_DE_RECEPCION__C__OriginalDbColumnName(){
				
					return "TEMPERATURA_DE_RECEPCION__C__";
				
				}

				
			    public String NIVEL_DE_RIESGO;

				public String getNIVEL_DE_RIESGO () {
					return this.NIVEL_DE_RIESGO;
				}

				public Boolean NIVEL_DE_RIESGOIsNullable(){
				    return true;
				}
				public Boolean NIVEL_DE_RIESGOIsKey(){
				    return false;
				}
				public Integer NIVEL_DE_RIESGOLength(){
				    return 255;
				}
				public Integer NIVEL_DE_RIESGOPrecision(){
				    return 0;
				}
				public String NIVEL_DE_RIESGODefault(){
				
					return null;
				
				}
				public String NIVEL_DE_RIESGOComment(){
				
				    return "";
				
				}
				public String NIVEL_DE_RIESGOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIVEL_DE_RIESGOOriginalDbColumnName(){
				
					return "NIVEL_DE_RIESGO";
				
				}

				
			    public String TAMANO_DE_LA_MUESTRA;

				public String getTAMANO_DE_LA_MUESTRA () {
					return this.TAMANO_DE_LA_MUESTRA;
				}

				public Boolean TAMANO_DE_LA_MUESTRAIsNullable(){
				    return true;
				}
				public Boolean TAMANO_DE_LA_MUESTRAIsKey(){
				    return false;
				}
				public Integer TAMANO_DE_LA_MUESTRALength(){
				    return 255;
				}
				public Integer TAMANO_DE_LA_MUESTRAPrecision(){
				    return 0;
				}
				public String TAMANO_DE_LA_MUESTRADefault(){
				
					return null;
				
				}
				public String TAMANO_DE_LA_MUESTRAComment(){
				
				    return "";
				
				}
				public String TAMANO_DE_LA_MUESTRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TAMANO_DE_LA_MUESTRAOriginalDbColumnName(){
				
					return "TAMANO_DE_LA_MUESTRA";
				
				}

				
			    public String APROBADO;

				public String getAPROBADO () {
					return this.APROBADO;
				}

				public Boolean APROBADOIsNullable(){
				    return true;
				}
				public Boolean APROBADOIsKey(){
				    return false;
				}
				public Integer APROBADOLength(){
				    return 255;
				}
				public Integer APROBADOPrecision(){
				    return 0;
				}
				public String APROBADODefault(){
				
					return null;
				
				}
				public String APROBADOComment(){
				
				    return "";
				
				}
				public String APROBADOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String APROBADOOriginalDbColumnName(){
				
					return "APROBADO";
				
				}

				
			    public String NUMERO_DE_CONTRATO;

				public String getNUMERO_DE_CONTRATO () {
					return this.NUMERO_DE_CONTRATO;
				}

				public Boolean NUMERO_DE_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean NUMERO_DE_CONTRATOIsKey(){
				    return false;
				}
				public Integer NUMERO_DE_CONTRATOLength(){
				    return 255;
				}
				public Integer NUMERO_DE_CONTRATOPrecision(){
				    return 0;
				}
				public String NUMERO_DE_CONTRATODefault(){
				
					return null;
				
				}
				public String NUMERO_DE_CONTRATOComment(){
				
				    return "";
				
				}
				public String NUMERO_DE_CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NUMERO_DE_CONTRATOOriginalDbColumnName(){
				
					return "NUMERO_DE_CONTRATO";
				
				}

				
			    public Integer itemlVisualizacionColumna;

				public Integer getItemlVisualizacionColumna () {
					return this.itemlVisualizacionColumna;
				}

				public Boolean itemlVisualizacionColumnaIsNullable(){
				    return true;
				}
				public Boolean itemlVisualizacionColumnaIsKey(){
				    return false;
				}
				public Integer itemlVisualizacionColumnaLength(){
				    return null;
				}
				public Integer itemlVisualizacionColumnaPrecision(){
				    return null;
				}
				public String itemlVisualizacionColumnaDefault(){
				
					return null;
				
				}
				public String itemlVisualizacionColumnaComment(){
				
				    return "";
				
				}
				public String itemlVisualizacionColumnaPattern(){
				
					return "";
				
				}
				public String itemlVisualizacionColumnaOriginalDbColumnName(){
				
					return "itemlVisualizacionColumna";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.REGISTRO_INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_A_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA_DE_RECEPCION__C__ = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.TAMANO_DE_LA_MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.NUMERO_DE_CONTRATO = readString(dis);
					
						this.itemlVisualizacionColumna = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.REGISTRO_INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_A_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA_DE_RECEPCION__C__ = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.TAMANO_DE_LA_MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.NUMERO_DE_CONTRATO = readString(dis);
					
						this.itemlVisualizacionColumna = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.REGISTRO_INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_A_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA_DE_RECEPCION__C__,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.TAMANO_DE_LA_MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.NUMERO_DE_CONTRATO,dos);
					
					// Integer
				
						writeInteger(this.itemlVisualizacionColumna,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.REGISTRO_INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_A_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA_DE_RECEPCION__C__,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.TAMANO_DE_LA_MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.NUMERO_DE_CONTRATO,dos);
					
					// Integer
				
						writeInteger(this.itemlVisualizacionColumna,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CUM="+CUM);
		sb.append(",REGISTRO_INVIMA="+REGISTRO_INVIMA);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",CANTIDAD_ENVIADA="+CANTIDAD_ENVIADA);
		sb.append(",CANTIDAD_A_INGRESAR="+CANTIDAD_A_INGRESAR);
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+FECHA_VENCIMIENTO);
		sb.append(",LEYENDA_DE_RESTRICCION="+LEYENDA_DE_RESTRICCION);
		sb.append(",DEFECTOS="+DEFECTOS);
		sb.append(",TEMPERATURA_DE_RECEPCION__C__="+TEMPERATURA_DE_RECEPCION__C__);
		sb.append(",NIVEL_DE_RIESGO="+NIVEL_DE_RIESGO);
		sb.append(",TAMANO_DE_LA_MUESTRA="+TAMANO_DE_LA_MUESTRA);
		sb.append(",APROBADO="+APROBADO);
		sb.append(",NUMERO_DE_CONTRATO="+NUMERO_DE_CONTRATO);
		sb.append(",itemlVisualizacionColumna="+String.valueOf(itemlVisualizacionColumna));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row31Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row30Struct implements routines.system.IPersistableRow<row30Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String REGISTRO_INVIMA;

				public String getREGISTRO_INVIMA () {
					return this.REGISTRO_INVIMA;
				}

				public Boolean REGISTRO_INVIMAIsNullable(){
				    return true;
				}
				public Boolean REGISTRO_INVIMAIsKey(){
				    return false;
				}
				public Integer REGISTRO_INVIMALength(){
				    return 255;
				}
				public Integer REGISTRO_INVIMAPrecision(){
				    return 0;
				}
				public String REGISTRO_INVIMADefault(){
				
					return null;
				
				}
				public String REGISTRO_INVIMAComment(){
				
				    return "";
				
				}
				public String REGISTRO_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String REGISTRO_INVIMAOriginalDbColumnName(){
				
					return "REGISTRO_INVIMA";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String CANTIDAD_ENVIADA;

				public String getCANTIDAD_ENVIADA () {
					return this.CANTIDAD_ENVIADA;
				}

				public Boolean CANTIDAD_ENVIADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_ENVIADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_ENVIADALength(){
				    return 255;
				}
				public Integer CANTIDAD_ENVIADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_ENVIADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_ENVIADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_ENVIADAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_ENVIADAOriginalDbColumnName(){
				
					return "CANTIDAD_ENVIADA";
				
				}

				
			    public String CANTIDAD_A_INGRESAR;

				public String getCANTIDAD_A_INGRESAR () {
					return this.CANTIDAD_A_INGRESAR;
				}

				public Boolean CANTIDAD_A_INGRESARIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_A_INGRESARIsKey(){
				    return false;
				}
				public Integer CANTIDAD_A_INGRESARLength(){
				    return 255;
				}
				public Integer CANTIDAD_A_INGRESARPrecision(){
				    return 0;
				}
				public String CANTIDAD_A_INGRESARDefault(){
				
					return null;
				
				}
				public String CANTIDAD_A_INGRESARComment(){
				
				    return "";
				
				}
				public String CANTIDAD_A_INGRESARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_A_INGRESAROriginalDbColumnName(){
				
					return "CANTIDAD_A_INGRESAR";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 255;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public String FECHA_VENCIMIENTO;

				public String getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public String LEYENDA_DE_RESTRICCION;

				public String getLEYENDA_DE_RESTRICCION () {
					return this.LEYENDA_DE_RESTRICCION;
				}

				public Boolean LEYENDA_DE_RESTRICCIONIsNullable(){
				    return true;
				}
				public Boolean LEYENDA_DE_RESTRICCIONIsKey(){
				    return false;
				}
				public Integer LEYENDA_DE_RESTRICCIONLength(){
				    return 255;
				}
				public Integer LEYENDA_DE_RESTRICCIONPrecision(){
				    return 0;
				}
				public String LEYENDA_DE_RESTRICCIONDefault(){
				
					return null;
				
				}
				public String LEYENDA_DE_RESTRICCIONComment(){
				
				    return "";
				
				}
				public String LEYENDA_DE_RESTRICCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LEYENDA_DE_RESTRICCIONOriginalDbColumnName(){
				
					return "LEYENDA_DE_RESTRICCION";
				
				}

				
			    public String DEFECTOS;

				public String getDEFECTOS () {
					return this.DEFECTOS;
				}

				public Boolean DEFECTOSIsNullable(){
				    return true;
				}
				public Boolean DEFECTOSIsKey(){
				    return false;
				}
				public Integer DEFECTOSLength(){
				    return 255;
				}
				public Integer DEFECTOSPrecision(){
				    return 0;
				}
				public String DEFECTOSDefault(){
				
					return null;
				
				}
				public String DEFECTOSComment(){
				
				    return "";
				
				}
				public String DEFECTOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DEFECTOSOriginalDbColumnName(){
				
					return "DEFECTOS";
				
				}

				
			    public String TEMPERATURA_DE_RECEPCION__C__;

				public String getTEMPERATURA_DE_RECEPCION__C__ () {
					return this.TEMPERATURA_DE_RECEPCION__C__;
				}

				public Boolean TEMPERATURA_DE_RECEPCION__C__IsNullable(){
				    return true;
				}
				public Boolean TEMPERATURA_DE_RECEPCION__C__IsKey(){
				    return false;
				}
				public Integer TEMPERATURA_DE_RECEPCION__C__Length(){
				    return 255;
				}
				public Integer TEMPERATURA_DE_RECEPCION__C__Precision(){
				    return 0;
				}
				public String TEMPERATURA_DE_RECEPCION__C__Default(){
				
					return null;
				
				}
				public String TEMPERATURA_DE_RECEPCION__C__Comment(){
				
				    return "";
				
				}
				public String TEMPERATURA_DE_RECEPCION__C__Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TEMPERATURA_DE_RECEPCION__C__OriginalDbColumnName(){
				
					return "TEMPERATURA_DE_RECEPCION__C__";
				
				}

				
			    public String NIVEL_DE_RIESGO;

				public String getNIVEL_DE_RIESGO () {
					return this.NIVEL_DE_RIESGO;
				}

				public Boolean NIVEL_DE_RIESGOIsNullable(){
				    return true;
				}
				public Boolean NIVEL_DE_RIESGOIsKey(){
				    return false;
				}
				public Integer NIVEL_DE_RIESGOLength(){
				    return 255;
				}
				public Integer NIVEL_DE_RIESGOPrecision(){
				    return 0;
				}
				public String NIVEL_DE_RIESGODefault(){
				
					return null;
				
				}
				public String NIVEL_DE_RIESGOComment(){
				
				    return "";
				
				}
				public String NIVEL_DE_RIESGOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIVEL_DE_RIESGOOriginalDbColumnName(){
				
					return "NIVEL_DE_RIESGO";
				
				}

				
			    public String TAMANO_DE_LA_MUESTRA;

				public String getTAMANO_DE_LA_MUESTRA () {
					return this.TAMANO_DE_LA_MUESTRA;
				}

				public Boolean TAMANO_DE_LA_MUESTRAIsNullable(){
				    return true;
				}
				public Boolean TAMANO_DE_LA_MUESTRAIsKey(){
				    return false;
				}
				public Integer TAMANO_DE_LA_MUESTRALength(){
				    return 255;
				}
				public Integer TAMANO_DE_LA_MUESTRAPrecision(){
				    return 0;
				}
				public String TAMANO_DE_LA_MUESTRADefault(){
				
					return null;
				
				}
				public String TAMANO_DE_LA_MUESTRAComment(){
				
				    return "";
				
				}
				public String TAMANO_DE_LA_MUESTRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TAMANO_DE_LA_MUESTRAOriginalDbColumnName(){
				
					return "TAMANO_DE_LA_MUESTRA";
				
				}

				
			    public String APROBADO;

				public String getAPROBADO () {
					return this.APROBADO;
				}

				public Boolean APROBADOIsNullable(){
				    return true;
				}
				public Boolean APROBADOIsKey(){
				    return false;
				}
				public Integer APROBADOLength(){
				    return 255;
				}
				public Integer APROBADOPrecision(){
				    return 0;
				}
				public String APROBADODefault(){
				
					return null;
				
				}
				public String APROBADOComment(){
				
				    return "";
				
				}
				public String APROBADOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String APROBADOOriginalDbColumnName(){
				
					return "APROBADO";
				
				}

				
			    public String NUMERO_DE_CONTRATO;

				public String getNUMERO_DE_CONTRATO () {
					return this.NUMERO_DE_CONTRATO;
				}

				public Boolean NUMERO_DE_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean NUMERO_DE_CONTRATOIsKey(){
				    return false;
				}
				public Integer NUMERO_DE_CONTRATOLength(){
				    return 255;
				}
				public Integer NUMERO_DE_CONTRATOPrecision(){
				    return 0;
				}
				public String NUMERO_DE_CONTRATODefault(){
				
					return null;
				
				}
				public String NUMERO_DE_CONTRATOComment(){
				
				    return "";
				
				}
				public String NUMERO_DE_CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NUMERO_DE_CONTRATOOriginalDbColumnName(){
				
					return "NUMERO_DE_CONTRATO";
				
				}

				
			    public Integer itemlVisualizacionColumna;

				public Integer getItemlVisualizacionColumna () {
					return this.itemlVisualizacionColumna;
				}

				public Boolean itemlVisualizacionColumnaIsNullable(){
				    return true;
				}
				public Boolean itemlVisualizacionColumnaIsKey(){
				    return false;
				}
				public Integer itemlVisualizacionColumnaLength(){
				    return null;
				}
				public Integer itemlVisualizacionColumnaPrecision(){
				    return null;
				}
				public String itemlVisualizacionColumnaDefault(){
				
					return null;
				
				}
				public String itemlVisualizacionColumnaComment(){
				
				    return "";
				
				}
				public String itemlVisualizacionColumnaPattern(){
				
					return "";
				
				}
				public String itemlVisualizacionColumnaOriginalDbColumnName(){
				
					return "itemlVisualizacionColumna";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.REGISTRO_INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_A_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA_DE_RECEPCION__C__ = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.TAMANO_DE_LA_MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.NUMERO_DE_CONTRATO = readString(dis);
					
						this.itemlVisualizacionColumna = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.REGISTRO_INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_A_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA_DE_RECEPCION__C__ = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.TAMANO_DE_LA_MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.NUMERO_DE_CONTRATO = readString(dis);
					
						this.itemlVisualizacionColumna = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.REGISTRO_INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_A_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA_DE_RECEPCION__C__,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.TAMANO_DE_LA_MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.NUMERO_DE_CONTRATO,dos);
					
					// Integer
				
						writeInteger(this.itemlVisualizacionColumna,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.REGISTRO_INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_A_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA_DE_RECEPCION__C__,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.TAMANO_DE_LA_MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.NUMERO_DE_CONTRATO,dos);
					
					// Integer
				
						writeInteger(this.itemlVisualizacionColumna,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CUM="+CUM);
		sb.append(",REGISTRO_INVIMA="+REGISTRO_INVIMA);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",CANTIDAD_ENVIADA="+CANTIDAD_ENVIADA);
		sb.append(",CANTIDAD_A_INGRESAR="+CANTIDAD_A_INGRESAR);
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+FECHA_VENCIMIENTO);
		sb.append(",LEYENDA_DE_RESTRICCION="+LEYENDA_DE_RESTRICCION);
		sb.append(",DEFECTOS="+DEFECTOS);
		sb.append(",TEMPERATURA_DE_RECEPCION__C__="+TEMPERATURA_DE_RECEPCION__C__);
		sb.append(",NIVEL_DE_RIESGO="+NIVEL_DE_RIESGO);
		sb.append(",TAMANO_DE_LA_MUESTRA="+TAMANO_DE_LA_MUESTRA);
		sb.append(",APROBADO="+APROBADO);
		sb.append(",NUMERO_DE_CONTRATO="+NUMERO_DE_CONTRATO);
		sb.append(",itemlVisualizacionColumna="+String.valueOf(itemlVisualizacionColumna));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row30Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_1Struct implements routines.system.IPersistableRow<after_tHashInput_1Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 255;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 255;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String REGISTRO_INVIMA;

				public String getREGISTRO_INVIMA () {
					return this.REGISTRO_INVIMA;
				}

				public Boolean REGISTRO_INVIMAIsNullable(){
				    return true;
				}
				public Boolean REGISTRO_INVIMAIsKey(){
				    return false;
				}
				public Integer REGISTRO_INVIMALength(){
				    return 255;
				}
				public Integer REGISTRO_INVIMAPrecision(){
				    return 0;
				}
				public String REGISTRO_INVIMADefault(){
				
					return null;
				
				}
				public String REGISTRO_INVIMAComment(){
				
				    return "";
				
				}
				public String REGISTRO_INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String REGISTRO_INVIMAOriginalDbColumnName(){
				
					return "REGISTRO_INVIMA";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String CANTIDAD_ENVIADA;

				public String getCANTIDAD_ENVIADA () {
					return this.CANTIDAD_ENVIADA;
				}

				public Boolean CANTIDAD_ENVIADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_ENVIADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_ENVIADALength(){
				    return 255;
				}
				public Integer CANTIDAD_ENVIADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_ENVIADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_ENVIADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_ENVIADAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_ENVIADAOriginalDbColumnName(){
				
					return "CANTIDAD_ENVIADA";
				
				}

				
			    public String CANTIDAD_A_INGRESAR;

				public String getCANTIDAD_A_INGRESAR () {
					return this.CANTIDAD_A_INGRESAR;
				}

				public Boolean CANTIDAD_A_INGRESARIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_A_INGRESARIsKey(){
				    return false;
				}
				public Integer CANTIDAD_A_INGRESARLength(){
				    return 255;
				}
				public Integer CANTIDAD_A_INGRESARPrecision(){
				    return 0;
				}
				public String CANTIDAD_A_INGRESARDefault(){
				
					return null;
				
				}
				public String CANTIDAD_A_INGRESARComment(){
				
				    return "";
				
				}
				public String CANTIDAD_A_INGRESARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_A_INGRESAROriginalDbColumnName(){
				
					return "CANTIDAD_A_INGRESAR";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 255;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public String FECHA_VENCIMIENTO;

				public String getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 255;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public String LEYENDA_DE_RESTRICCION;

				public String getLEYENDA_DE_RESTRICCION () {
					return this.LEYENDA_DE_RESTRICCION;
				}

				public Boolean LEYENDA_DE_RESTRICCIONIsNullable(){
				    return true;
				}
				public Boolean LEYENDA_DE_RESTRICCIONIsKey(){
				    return false;
				}
				public Integer LEYENDA_DE_RESTRICCIONLength(){
				    return 255;
				}
				public Integer LEYENDA_DE_RESTRICCIONPrecision(){
				    return 0;
				}
				public String LEYENDA_DE_RESTRICCIONDefault(){
				
					return null;
				
				}
				public String LEYENDA_DE_RESTRICCIONComment(){
				
				    return "";
				
				}
				public String LEYENDA_DE_RESTRICCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LEYENDA_DE_RESTRICCIONOriginalDbColumnName(){
				
					return "LEYENDA_DE_RESTRICCION";
				
				}

				
			    public String DEFECTOS;

				public String getDEFECTOS () {
					return this.DEFECTOS;
				}

				public Boolean DEFECTOSIsNullable(){
				    return true;
				}
				public Boolean DEFECTOSIsKey(){
				    return false;
				}
				public Integer DEFECTOSLength(){
				    return 255;
				}
				public Integer DEFECTOSPrecision(){
				    return 0;
				}
				public String DEFECTOSDefault(){
				
					return null;
				
				}
				public String DEFECTOSComment(){
				
				    return "";
				
				}
				public String DEFECTOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DEFECTOSOriginalDbColumnName(){
				
					return "DEFECTOS";
				
				}

				
			    public String TEMPERATURA_DE_RECEPCION__C__;

				public String getTEMPERATURA_DE_RECEPCION__C__ () {
					return this.TEMPERATURA_DE_RECEPCION__C__;
				}

				public Boolean TEMPERATURA_DE_RECEPCION__C__IsNullable(){
				    return true;
				}
				public Boolean TEMPERATURA_DE_RECEPCION__C__IsKey(){
				    return false;
				}
				public Integer TEMPERATURA_DE_RECEPCION__C__Length(){
				    return 255;
				}
				public Integer TEMPERATURA_DE_RECEPCION__C__Precision(){
				    return 0;
				}
				public String TEMPERATURA_DE_RECEPCION__C__Default(){
				
					return null;
				
				}
				public String TEMPERATURA_DE_RECEPCION__C__Comment(){
				
				    return "";
				
				}
				public String TEMPERATURA_DE_RECEPCION__C__Pattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TEMPERATURA_DE_RECEPCION__C__OriginalDbColumnName(){
				
					return "TEMPERATURA_DE_RECEPCION__C__";
				
				}

				
			    public String NIVEL_DE_RIESGO;

				public String getNIVEL_DE_RIESGO () {
					return this.NIVEL_DE_RIESGO;
				}

				public Boolean NIVEL_DE_RIESGOIsNullable(){
				    return true;
				}
				public Boolean NIVEL_DE_RIESGOIsKey(){
				    return false;
				}
				public Integer NIVEL_DE_RIESGOLength(){
				    return 255;
				}
				public Integer NIVEL_DE_RIESGOPrecision(){
				    return 0;
				}
				public String NIVEL_DE_RIESGODefault(){
				
					return null;
				
				}
				public String NIVEL_DE_RIESGOComment(){
				
				    return "";
				
				}
				public String NIVEL_DE_RIESGOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIVEL_DE_RIESGOOriginalDbColumnName(){
				
					return "NIVEL_DE_RIESGO";
				
				}

				
			    public String TAMANO_DE_LA_MUESTRA;

				public String getTAMANO_DE_LA_MUESTRA () {
					return this.TAMANO_DE_LA_MUESTRA;
				}

				public Boolean TAMANO_DE_LA_MUESTRAIsNullable(){
				    return true;
				}
				public Boolean TAMANO_DE_LA_MUESTRAIsKey(){
				    return false;
				}
				public Integer TAMANO_DE_LA_MUESTRALength(){
				    return 255;
				}
				public Integer TAMANO_DE_LA_MUESTRAPrecision(){
				    return 0;
				}
				public String TAMANO_DE_LA_MUESTRADefault(){
				
					return null;
				
				}
				public String TAMANO_DE_LA_MUESTRAComment(){
				
				    return "";
				
				}
				public String TAMANO_DE_LA_MUESTRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TAMANO_DE_LA_MUESTRAOriginalDbColumnName(){
				
					return "TAMANO_DE_LA_MUESTRA";
				
				}

				
			    public String APROBADO;

				public String getAPROBADO () {
					return this.APROBADO;
				}

				public Boolean APROBADOIsNullable(){
				    return true;
				}
				public Boolean APROBADOIsKey(){
				    return false;
				}
				public Integer APROBADOLength(){
				    return 255;
				}
				public Integer APROBADOPrecision(){
				    return 0;
				}
				public String APROBADODefault(){
				
					return null;
				
				}
				public String APROBADOComment(){
				
				    return "";
				
				}
				public String APROBADOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String APROBADOOriginalDbColumnName(){
				
					return "APROBADO";
				
				}

				
			    public String NUMERO_DE_CONTRATO;

				public String getNUMERO_DE_CONTRATO () {
					return this.NUMERO_DE_CONTRATO;
				}

				public Boolean NUMERO_DE_CONTRATOIsNullable(){
				    return true;
				}
				public Boolean NUMERO_DE_CONTRATOIsKey(){
				    return false;
				}
				public Integer NUMERO_DE_CONTRATOLength(){
				    return 255;
				}
				public Integer NUMERO_DE_CONTRATOPrecision(){
				    return 0;
				}
				public String NUMERO_DE_CONTRATODefault(){
				
					return null;
				
				}
				public String NUMERO_DE_CONTRATOComment(){
				
				    return "";
				
				}
				public String NUMERO_DE_CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NUMERO_DE_CONTRATOOriginalDbColumnName(){
				
					return "NUMERO_DE_CONTRATO";
				
				}

				
			    public Integer itemlVisualizacionColumna;

				public Integer getItemlVisualizacionColumna () {
					return this.itemlVisualizacionColumna;
				}

				public Boolean itemlVisualizacionColumnaIsNullable(){
				    return true;
				}
				public Boolean itemlVisualizacionColumnaIsKey(){
				    return false;
				}
				public Integer itemlVisualizacionColumnaLength(){
				    return null;
				}
				public Integer itemlVisualizacionColumnaPrecision(){
				    return null;
				}
				public String itemlVisualizacionColumnaDefault(){
				
					return null;
				
				}
				public String itemlVisualizacionColumnaComment(){
				
				    return "";
				
				}
				public String itemlVisualizacionColumnaPattern(){
				
					return "";
				
				}
				public String itemlVisualizacionColumnaOriginalDbColumnName(){
				
					return "itemlVisualizacionColumna";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.REGISTRO_INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_A_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA_DE_RECEPCION__C__ = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.TAMANO_DE_LA_MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.NUMERO_DE_CONTRATO = readString(dis);
					
						this.itemlVisualizacionColumna = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.REGISTRO_INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_A_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA_DE_RECEPCION__C__ = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.TAMANO_DE_LA_MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.NUMERO_DE_CONTRATO = readString(dis);
					
						this.itemlVisualizacionColumna = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.REGISTRO_INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_A_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA_DE_RECEPCION__C__,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.TAMANO_DE_LA_MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.NUMERO_DE_CONTRATO,dos);
					
					// Integer
				
						writeInteger(this.itemlVisualizacionColumna,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.REGISTRO_INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_A_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA_DE_RECEPCION__C__,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.TAMANO_DE_LA_MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.NUMERO_DE_CONTRATO,dos);
					
					// Integer
				
						writeInteger(this.itemlVisualizacionColumna,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CUM="+CUM);
		sb.append(",REGISTRO_INVIMA="+REGISTRO_INVIMA);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",CANTIDAD_ENVIADA="+CANTIDAD_ENVIADA);
		sb.append(",CANTIDAD_A_INGRESAR="+CANTIDAD_A_INGRESAR);
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+FECHA_VENCIMIENTO);
		sb.append(",LEYENDA_DE_RESTRICCION="+LEYENDA_DE_RESTRICCION);
		sb.append(",DEFECTOS="+DEFECTOS);
		sb.append(",TEMPERATURA_DE_RECEPCION__C__="+TEMPERATURA_DE_RECEPCION__C__);
		sb.append(",NIVEL_DE_RIESGO="+NIVEL_DE_RIESGO);
		sb.append(",TAMANO_DE_LA_MUESTRA="+TAMANO_DE_LA_MUESTRA);
		sb.append(",APROBADO="+APROBADO);
		sb.append(",NUMERO_DE_CONTRATO="+NUMERO_DE_CONTRATO);
		sb.append(",itemlVisualizacionColumna="+String.valueOf(itemlVisualizacionColumna));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row16Struct implements routines.system.IPersistableRow<row16Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public Integer numeroFila;

				public Integer getNumeroFila () {
					return this.numeroFila;
				}

				public Boolean numeroFilaIsNullable(){
				    return true;
				}
				public Boolean numeroFilaIsKey(){
				    return false;
				}
				public Integer numeroFilaLength(){
				    return null;
				}
				public Integer numeroFilaPrecision(){
				    return null;
				}
				public String numeroFilaDefault(){
				
					return null;
				
				}
				public String numeroFilaComment(){
				
				    return "";
				
				}
				public String numeroFilaPattern(){
				
					return "";
				
				}
				public String numeroFilaOriginalDbColumnName(){
				
					return "numeroFila";
				
				}

				
			    public String TIPO_PRODUCTO;

				public String getTIPO_PRODUCTO () {
					return this.TIPO_PRODUCTO;
				}

				public Boolean TIPO_PRODUCTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_PRODUCTOIsKey(){
				    return false;
				}
				public Integer TIPO_PRODUCTOLength(){
				    return 255;
				}
				public Integer TIPO_PRODUCTOPrecision(){
				    return 0;
				}
				public String TIPO_PRODUCTODefault(){
				
					return null;
				
				}
				public String TIPO_PRODUCTOComment(){
				
				    return "";
				
				}
				public String TIPO_PRODUCTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TIPO_PRODUCTOOriginalDbColumnName(){
				
					return "TIPO_PRODUCTO";
				
				}

				
			    public String CODIGO_BARRAS;

				public String getCODIGO_BARRAS () {
					return this.CODIGO_BARRAS;
				}

				public Boolean CODIGO_BARRASIsNullable(){
				    return true;
				}
				public Boolean CODIGO_BARRASIsKey(){
				    return false;
				}
				public Integer CODIGO_BARRASLength(){
				    return 0;
				}
				public Integer CODIGO_BARRASPrecision(){
				    return 0;
				}
				public String CODIGO_BARRASDefault(){
				
					return null;
				
				}
				public String CODIGO_BARRASComment(){
				
				    return "";
				
				}
				public String CODIGO_BARRASPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_BARRASOriginalDbColumnName(){
				
					return "CODIGO_BARRAS";
				
				}

				
			    public String CUM;

				public String getCUM () {
					return this.CUM;
				}

				public Boolean CUMIsNullable(){
				    return true;
				}
				public Boolean CUMIsKey(){
				    return false;
				}
				public Integer CUMLength(){
				    return 0;
				}
				public Integer CUMPrecision(){
				    return 0;
				}
				public String CUMDefault(){
				
					return null;
				
				}
				public String CUMComment(){
				
				    return "";
				
				}
				public String CUMPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CUMOriginalDbColumnName(){
				
					return "CUM";
				
				}

				
			    public String INVIMA;

				public String getINVIMA () {
					return this.INVIMA;
				}

				public Boolean INVIMAIsNullable(){
				    return true;
				}
				public Boolean INVIMAIsKey(){
				    return false;
				}
				public Integer INVIMALength(){
				    return 0;
				}
				public Integer INVIMAPrecision(){
				    return 0;
				}
				public String INVIMADefault(){
				
					return null;
				
				}
				public String INVIMAComment(){
				
				    return "";
				
				}
				public String INVIMAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String INVIMAOriginalDbColumnName(){
				
					return "INVIMA";
				
				}

				
			    public String CODIGO_HOMIC;

				public String getCODIGO_HOMIC () {
					return this.CODIGO_HOMIC;
				}

				public Boolean CODIGO_HOMICIsNullable(){
				    return true;
				}
				public Boolean CODIGO_HOMICIsKey(){
				    return false;
				}
				public Integer CODIGO_HOMICLength(){
				    return 255;
				}
				public Integer CODIGO_HOMICPrecision(){
				    return 0;
				}
				public String CODIGO_HOMICDefault(){
				
					return null;
				
				}
				public String CODIGO_HOMICComment(){
				
				    return "";
				
				}
				public String CODIGO_HOMICPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CODIGO_HOMICOriginalDbColumnName(){
				
					return "CODIGO_HOMIC";
				
				}

				
			    public String CANTIDAD_ENVIADA;

				public String getCANTIDAD_ENVIADA () {
					return this.CANTIDAD_ENVIADA;
				}

				public Boolean CANTIDAD_ENVIADAIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_ENVIADAIsKey(){
				    return false;
				}
				public Integer CANTIDAD_ENVIADALength(){
				    return 0;
				}
				public Integer CANTIDAD_ENVIADAPrecision(){
				    return 0;
				}
				public String CANTIDAD_ENVIADADefault(){
				
					return null;
				
				}
				public String CANTIDAD_ENVIADAComment(){
				
				    return "";
				
				}
				public String CANTIDAD_ENVIADAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_ENVIADAOriginalDbColumnName(){
				
					return "CANTIDAD_ENVIADA";
				
				}

				
			    public String CANTIDAD_INGRESAR;

				public String getCANTIDAD_INGRESAR () {
					return this.CANTIDAD_INGRESAR;
				}

				public Boolean CANTIDAD_INGRESARIsNullable(){
				    return true;
				}
				public Boolean CANTIDAD_INGRESARIsKey(){
				    return false;
				}
				public Integer CANTIDAD_INGRESARLength(){
				    return 0;
				}
				public Integer CANTIDAD_INGRESARPrecision(){
				    return 0;
				}
				public String CANTIDAD_INGRESARDefault(){
				
					return null;
				
				}
				public String CANTIDAD_INGRESARComment(){
				
				    return "";
				
				}
				public String CANTIDAD_INGRESARPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CANTIDAD_INGRESAROriginalDbColumnName(){
				
					return "CANTIDAD_INGRESAR";
				
				}

				
			    public String LOTE;

				public String getLOTE () {
					return this.LOTE;
				}

				public Boolean LOTEIsNullable(){
				    return true;
				}
				public Boolean LOTEIsKey(){
				    return false;
				}
				public Integer LOTELength(){
				    return 0;
				}
				public Integer LOTEPrecision(){
				    return 0;
				}
				public String LOTEDefault(){
				
					return null;
				
				}
				public String LOTEComment(){
				
				    return "";
				
				}
				public String LOTEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LOTEOriginalDbColumnName(){
				
					return "LOTE";
				
				}

				
			    public String FECHA_VENCIMIENTO;

				public String getFECHA_VENCIMIENTO () {
					return this.FECHA_VENCIMIENTO;
				}

				public Boolean FECHA_VENCIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_VENCIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_VENCIMIENTOLength(){
				    return 0;
				}
				public Integer FECHA_VENCIMIENTOPrecision(){
				    return 0;
				}
				public String FECHA_VENCIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_VENCIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_VENCIMIENTOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHA_VENCIMIENTOOriginalDbColumnName(){
				
					return "FECHA_VENCIMIENTO";
				
				}

				
			    public String LEYENDA_DE_RESTRICCION;

				public String getLEYENDA_DE_RESTRICCION () {
					return this.LEYENDA_DE_RESTRICCION;
				}

				public Boolean LEYENDA_DE_RESTRICCIONIsNullable(){
				    return true;
				}
				public Boolean LEYENDA_DE_RESTRICCIONIsKey(){
				    return false;
				}
				public Integer LEYENDA_DE_RESTRICCIONLength(){
				    return 0;
				}
				public Integer LEYENDA_DE_RESTRICCIONPrecision(){
				    return 0;
				}
				public String LEYENDA_DE_RESTRICCIONDefault(){
				
					return null;
				
				}
				public String LEYENDA_DE_RESTRICCIONComment(){
				
				    return "";
				
				}
				public String LEYENDA_DE_RESTRICCIONPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String LEYENDA_DE_RESTRICCIONOriginalDbColumnName(){
				
					return "LEYENDA_DE_RESTRICCION";
				
				}

				
			    public String DEFECTOS;

				public String getDEFECTOS () {
					return this.DEFECTOS;
				}

				public Boolean DEFECTOSIsNullable(){
				    return true;
				}
				public Boolean DEFECTOSIsKey(){
				    return false;
				}
				public Integer DEFECTOSLength(){
				    return 0;
				}
				public Integer DEFECTOSPrecision(){
				    return 0;
				}
				public String DEFECTOSDefault(){
				
					return null;
				
				}
				public String DEFECTOSComment(){
				
				    return "";
				
				}
				public String DEFECTOSPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DEFECTOSOriginalDbColumnName(){
				
					return "DEFECTOS";
				
				}

				
			    public String TEMPERATURA;

				public String getTEMPERATURA () {
					return this.TEMPERATURA;
				}

				public Boolean TEMPERATURAIsNullable(){
				    return true;
				}
				public Boolean TEMPERATURAIsKey(){
				    return false;
				}
				public Integer TEMPERATURALength(){
				    return 0;
				}
				public Integer TEMPERATURAPrecision(){
				    return 0;
				}
				public String TEMPERATURADefault(){
				
					return null;
				
				}
				public String TEMPERATURAComment(){
				
				    return "";
				
				}
				public String TEMPERATURAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String TEMPERATURAOriginalDbColumnName(){
				
					return "TEMPERATURA";
				
				}

				
			    public String NIVEL_DE_RIESGO;

				public String getNIVEL_DE_RIESGO () {
					return this.NIVEL_DE_RIESGO;
				}

				public Boolean NIVEL_DE_RIESGOIsNullable(){
				    return true;
				}
				public Boolean NIVEL_DE_RIESGOIsKey(){
				    return false;
				}
				public Integer NIVEL_DE_RIESGOLength(){
				    return 0;
				}
				public Integer NIVEL_DE_RIESGOPrecision(){
				    return 0;
				}
				public String NIVEL_DE_RIESGODefault(){
				
					return null;
				
				}
				public String NIVEL_DE_RIESGOComment(){
				
				    return "";
				
				}
				public String NIVEL_DE_RIESGOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NIVEL_DE_RIESGOOriginalDbColumnName(){
				
					return "NIVEL_DE_RIESGO";
				
				}

				
			    public String MUESTRA;

				public String getMUESTRA () {
					return this.MUESTRA;
				}

				public Boolean MUESTRAIsNullable(){
				    return true;
				}
				public Boolean MUESTRAIsKey(){
				    return false;
				}
				public Integer MUESTRALength(){
				    return 0;
				}
				public Integer MUESTRAPrecision(){
				    return 0;
				}
				public String MUESTRADefault(){
				
					return null;
				
				}
				public String MUESTRAComment(){
				
				    return "";
				
				}
				public String MUESTRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String MUESTRAOriginalDbColumnName(){
				
					return "MUESTRA";
				
				}

				
			    public String APROBADO;

				public String getAPROBADO () {
					return this.APROBADO;
				}

				public Boolean APROBADOIsNullable(){
				    return true;
				}
				public Boolean APROBADOIsKey(){
				    return false;
				}
				public Integer APROBADOLength(){
				    return 0;
				}
				public Integer APROBADOPrecision(){
				    return 0;
				}
				public String APROBADODefault(){
				
					return null;
				
				}
				public String APROBADOComment(){
				
				    return "";
				
				}
				public String APROBADOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String APROBADOOriginalDbColumnName(){
				
					return "APROBADO";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 0;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.numeroFila = readInteger(dis);
					
					this.TIPO_PRODUCTO = readString(dis);
					
					this.CODIGO_BARRAS = readString(dis);
					
					this.CUM = readString(dis);
					
					this.INVIMA = readString(dis);
					
					this.CODIGO_HOMIC = readString(dis);
					
					this.CANTIDAD_ENVIADA = readString(dis);
					
					this.CANTIDAD_INGRESAR = readString(dis);
					
					this.LOTE = readString(dis);
					
					this.FECHA_VENCIMIENTO = readString(dis);
					
					this.LEYENDA_DE_RESTRICCION = readString(dis);
					
					this.DEFECTOS = readString(dis);
					
					this.TEMPERATURA = readString(dis);
					
					this.NIVEL_DE_RIESGO = readString(dis);
					
					this.MUESTRA = readString(dis);
					
					this.APROBADO = readString(dis);
					
					this.CONTRATO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.numeroFila,dos);
					
					// String
				
						writeString(this.TIPO_PRODUCTO,dos);
					
					// String
				
						writeString(this.CODIGO_BARRAS,dos);
					
					// String
				
						writeString(this.CUM,dos);
					
					// String
				
						writeString(this.INVIMA,dos);
					
					// String
				
						writeString(this.CODIGO_HOMIC,dos);
					
					// String
				
						writeString(this.CANTIDAD_ENVIADA,dos);
					
					// String
				
						writeString(this.CANTIDAD_INGRESAR,dos);
					
					// String
				
						writeString(this.LOTE,dos);
					
					// String
				
						writeString(this.FECHA_VENCIMIENTO,dos);
					
					// String
				
						writeString(this.LEYENDA_DE_RESTRICCION,dos);
					
					// String
				
						writeString(this.DEFECTOS,dos);
					
					// String
				
						writeString(this.TEMPERATURA,dos);
					
					// String
				
						writeString(this.NIVEL_DE_RIESGO,dos);
					
					// String
				
						writeString(this.MUESTRA,dos);
					
					// String
				
						writeString(this.APROBADO,dos);
					
					// String
				
						writeString(this.CONTRATO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("numeroFila="+String.valueOf(numeroFila));
		sb.append(",TIPO_PRODUCTO="+TIPO_PRODUCTO);
		sb.append(",CODIGO_BARRAS="+CODIGO_BARRAS);
		sb.append(",CUM="+CUM);
		sb.append(",INVIMA="+INVIMA);
		sb.append(",CODIGO_HOMIC="+CODIGO_HOMIC);
		sb.append(",CANTIDAD_ENVIADA="+CANTIDAD_ENVIADA);
		sb.append(",CANTIDAD_INGRESAR="+CANTIDAD_INGRESAR);
		sb.append(",LOTE="+LOTE);
		sb.append(",FECHA_VENCIMIENTO="+FECHA_VENCIMIENTO);
		sb.append(",LEYENDA_DE_RESTRICCION="+LEYENDA_DE_RESTRICCION);
		sb.append(",DEFECTOS="+DEFECTOS);
		sb.append(",TEMPERATURA="+TEMPERATURA);
		sb.append(",NIVEL_DE_RIESGO="+NIVEL_DE_RIESGO);
		sb.append(",MUESTRA="+MUESTRA);
		sb.append(",APROBADO="+APROBADO);
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tOracleInput_7Process(globalMap);
		tOracleInput_4Process(globalMap);

		row30Struct row30 = new row30Struct();
row31Struct row31 = new row31Struct();
next_1Struct next_1 = new next_1Struct();
row6Struct row6 = new row6Struct();
outContratoIdStruct outContratoId = new outContratoIdStruct();
row7Struct row7 = new row7Struct();
row9Struct row9 = new row9Struct();
row10Struct row10 = new row10Struct();
outProductoContratoStruct outProductoContrato = new outProductoContratoStruct();
row12Struct row12 = new row12Struct();
outVarProcStruct outVarProc = new outVarProcStruct();
row15Struct row15 = new row15Struct();
next_8Struct next_8 = new next_8Struct();
row13Struct row13 = new row13Struct();
row20Struct row20 = new row20Struct();
row14Struct row14 = new row14Struct();
row32Struct row32 = new row32Struct();
next_7Struct next_7 = new next_7Struct();

		row16Struct row16 = new row16Struct();

			row17Struct row17 = new row17Struct();
outConteoErroneoStruct outConteoErroneo = new outConteoErroneoStruct();
row18Struct row18 = new row18Struct();
row19Struct row19 = new row19Struct();
outSalidaErroneosStruct outSalidaErroneos = new outSalidaErroneosStruct();






	
	/**
	 * [tSortRow_1_SortOut begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_1_SortOut", false);
		start_Hash.put("tSortRow_1_SortOut", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row18");
					}
				
		int tos_count_tSortRow_1_SortOut = 0;
		


class Comparablerow18Struct extends row18Struct implements Comparable<Comparablerow18Struct> {
	
	public int compareTo(Comparablerow18Struct other) {

		if(this.numeroFila == null && other.numeroFila != null){
			return -1;
						
		}else if(this.numeroFila != null && other.numeroFila == null){
			return 1;
						
		}else if(this.numeroFila != null && other.numeroFila != null){
			if(!this.numeroFila.equals(other.numeroFila)){
				return this.numeroFila.compareTo(other.numeroFila);
			}
		}
		return 0;
	}
}

java.util.List<Comparablerow18Struct> list_tSortRow_1_SortOut = new java.util.ArrayList<Comparablerow18Struct>();


 



/**
 * [tSortRow_1_SortOut begin ] stop
 */



	
	/**
	 * [tJavaFlex_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaFlex_1", false);
		start_Hash.put("tJavaFlex_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaFlex_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"outConteoErroneo");
					}
				
		int tos_count_tJavaFlex_1 = 0;
		


int count = 1;   


 



/**
 * [tJavaFlex_1 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
outConteoErroneoStruct outConteoErroneo_tmp = new outConteoErroneoStruct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tUnite_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tUnite_1", false);
		start_Hash.put("tUnite_1", System.currentTimeMillis());
		
	
	currentComponent="tUnite_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16","next_7");
					}
				
		int tos_count_tUnite_1 = 0;
		

int nb_line_tUnite_1 = 0;

 



/**
 * [tUnite_1 begin ] stop
 */













	
	/**
	 * [tHashOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_2", false);
		start_Hash.put("tHashOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"next_8");
					}
				
		int tos_count_tHashOutput_2 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<next_8Struct> tHashFile_tHashOutput_2 = null;
		String hashKey_tHashOutput_2 = "tHashFile_CargaInventario_" + pid + "_tHashOutput_2";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_2)){
			    if(mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2) == null){
	      		    mf_tHashOutput_2.getResourceMap().put(hashKey_tHashOutput_2, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<next_8Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }else{
			    	tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }
			}
        int nb_line_tHashOutput_2 = 0;

 



/**
 * [tHashOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_12", false);
		start_Hash.put("tMap_12", System.currentTimeMillis());
		
	
	currentComponent="tMap_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tMap_12 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_12__Struct  {
}
Var__tMap_12__Struct Var__tMap_12 = new Var__tMap_12__Struct();
// ###############################

// ###############################
// # Outputs initialization
next_8Struct next_8_tmp = new next_8Struct();
// ###############################

        
        



        









 



/**
 * [tMap_12 begin ] stop
 */







	
	/**
	 * [tMap_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_13", false);
		start_Hash.put("tMap_13", System.currentTimeMillis());
		
	
	currentComponent="tMap_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row32");
					}
				
		int tos_count_tMap_13 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_13__Struct  {
}
Var__tMap_13__Struct Var__tMap_13 = new Var__tMap_13__Struct();
// ###############################

// ###############################
// # Outputs initialization
next_7Struct next_7_tmp = new next_7Struct();
// ###############################

        
        



        









 



/**
 * [tMap_13 begin ] stop
 */



	
	/**
	 * [tFilterRow_54 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_54", false);
		start_Hash.put("tFilterRow_54", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_54";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tFilterRow_54 = 0;
		
    int nb_line_tFilterRow_54 = 0;
    int nb_line_ok_tFilterRow_54 = 0;
    int nb_line_reject_tFilterRow_54 = 0;

    class Operator_tFilterRow_54 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_54(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_54 begin ] stop
 */



	
	/**
	 * [tJavaRow_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_7", false);
		start_Hash.put("tJavaRow_7", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row20");
					}
				
		int tos_count_tJavaRow_7 = 0;
		

int nb_line_tJavaRow_7 = 0;

 



/**
 * [tJavaRow_7 begin ] stop
 */



	
	/**
	 * [tOracleSP_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_4", false);
		start_Hash.put("tOracleSP_4", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tOracleSP_4 = 0;
		

	java.sql.Connection connection_tOracleSP_4 = null;
	connection_tOracleSP_4 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_4 = connection_tOracleSP_4.prepareCall("{call " + "MED.InsInventarioCM" + "(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_4;
String tmpString_tOracleSP_4;

 



/**
 * [tOracleSP_4 begin ] stop
 */



	
	/**
	 * [tFilterRow_71 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_71", false);
		start_Hash.put("tFilterRow_71", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_71";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"outVarProc");
					}
				
		int tos_count_tFilterRow_71 = 0;
		
    int nb_line_tFilterRow_71 = 0;
    int nb_line_ok_tFilterRow_71 = 0;
    int nb_line_reject_tFilterRow_71 = 0;

    class Operator_tFilterRow_71 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_71(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_71 begin ] stop
 */



	
	/**
	 * [tMap_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_11", false);
		start_Hash.put("tMap_11", System.currentTimeMillis());
		
	
	currentComponent="tMap_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tMap_11 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_11__Struct  {
}
Var__tMap_11__Struct Var__tMap_11 = new Var__tMap_11__Struct();
// ###############################

// ###############################
// # Outputs initialization
outVarProcStruct outVarProc_tmp = new outVarProcStruct();
// ###############################

        
        



        









 



/**
 * [tMap_11 begin ] stop
 */



	
	/**
	 * [tJavaRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_2", false);
		start_Hash.put("tJavaRow_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"outProductoContrato");
					}
				
		int tos_count_tJavaRow_2 = 0;
		

int nb_line_tJavaRow_2 = 0;

 



/**
 * [tJavaRow_2 begin ] stop
 */



	
	/**
	 * [tMap_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_9", false);
		start_Hash.put("tMap_9", System.currentTimeMillis());
		
	
	currentComponent="tMap_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tMap_9 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct> tHash_Lookup_row11 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct>) 
					globalMap.get( "tHash_Lookup_row11" ))
					;					
					
	

row11Struct row11HashKey = new row11Struct();
row11Struct row11Default = new row11Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_9__Struct  {
}
Var__tMap_9__Struct Var__tMap_9 = new Var__tMap_9__Struct();
// ###############################

// ###############################
// # Outputs initialization
outProductoContratoStruct outProductoContrato_tmp = new outProductoContratoStruct();
// ###############################

        
        



        









 



/**
 * [tMap_9 begin ] stop
 */



	
	/**
	 * [tJavaRow_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_9", false);
		start_Hash.put("tJavaRow_9", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tJavaRow_9 = 0;
		

int nb_line_tJavaRow_9 = 0;

 



/**
 * [tJavaRow_9 begin ] stop
 */



	
	/**
	 * [tOracleSP_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_3", false);
		start_Hash.put("tOracleSP_3", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tOracleSP_3 = 0;
		

	java.sql.Connection connection_tOracleSP_3 = null;
	connection_tOracleSP_3 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_3 = connection_tOracleSP_3.prepareCall("{call " + "GFA.GetProductoInventarioCM" + "(?,?,?,?,?,?,?,?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_3;
String tmpString_tOracleSP_3;

 



/**
 * [tOracleSP_3 begin ] stop
 */



	
	/**
	 * [tJavaRow_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_6", false);
		start_Hash.put("tJavaRow_6", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"outContratoId");
					}
				
		int tos_count_tJavaRow_6 = 0;
		

int nb_line_tJavaRow_6 = 0;

 



/**
 * [tJavaRow_6 begin ] stop
 */



	
	/**
	 * [tMap_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_8", false);
		start_Hash.put("tMap_8", System.currentTimeMillis());
		
	
	currentComponent="tMap_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tMap_8 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct> tHash_Lookup_row8 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct>) 
					globalMap.get( "tHash_Lookup_row8" ))
					;					
					
	

row8Struct row8HashKey = new row8Struct();
row8Struct row8Default = new row8Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_8__Struct  {
}
Var__tMap_8__Struct Var__tMap_8 = new Var__tMap_8__Struct();
// ###############################

// ###############################
// # Outputs initialization
outContratoIdStruct outContratoId_tmp = new outContratoIdStruct();
// ###############################

        
        



        









 



/**
 * [tMap_8 begin ] stop
 */



	
	/**
	 * [tJavaRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_4", false);
		start_Hash.put("tJavaRow_4", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"next_1");
					}
				
		int tos_count_tJavaRow_4 = 0;
		

int nb_line_tJavaRow_4 = 0;

 



/**
 * [tJavaRow_4 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row31");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
next_1Struct next_1_tmp = new next_1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tFilterRow_44 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_44", false);
		start_Hash.put("tFilterRow_44", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_44";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row30");
					}
				
		int tos_count_tFilterRow_44 = 0;
		
    int nb_line_tFilterRow_44 = 0;
    int nb_line_ok_tFilterRow_44 = 0;
    int nb_line_reject_tFilterRow_44 = 0;

    class Operator_tFilterRow_44 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_44(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_44 begin ] stop
 */



	
	/**
	 * [tHashInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_1", false);
		start_Hash.put("tHashInput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_1";
	
	
		int tos_count_tHashInput_1 = 0;
		


int nb_line_tHashInput_1 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row29Struct> tHashFile_tHashInput_1 = mf_tHashInput_1.getAdvancedMemoryHashFile("tHashFile_CargaInventario_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_1==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row29Struct> iterator_tHashInput_1 = tHashFile_tHashInput_1.iterator();
while (iterator_tHashInput_1.hasNext()) {
    row29Struct next_tHashInput_1 = iterator_tHashInput_1.next();

	row30.TIPO_PRODUCTO = next_tHashInput_1.TIPO_PRODUCTO;
	row30.CODIGO_BARRAS = next_tHashInput_1.CODIGO_BARRAS;
	row30.CUM = next_tHashInput_1.CUM;
	row30.REGISTRO_INVIMA = next_tHashInput_1.REGISTRO_INVIMA;
	row30.CODIGO_HOMIC = next_tHashInput_1.CODIGO_HOMIC;
	row30.CANTIDAD_ENVIADA = next_tHashInput_1.CANTIDAD_ENVIADA;
	row30.CANTIDAD_A_INGRESAR = next_tHashInput_1.CANTIDAD_A_INGRESAR;
	row30.LOTE = next_tHashInput_1.LOTE;
	row30.FECHA_VENCIMIENTO = next_tHashInput_1.FECHA_VENCIMIENTO;
	row30.LEYENDA_DE_RESTRICCION = next_tHashInput_1.LEYENDA_DE_RESTRICCION;
	row30.DEFECTOS = next_tHashInput_1.DEFECTOS;
	row30.TEMPERATURA_DE_RECEPCION__C__ = next_tHashInput_1.TEMPERATURA_DE_RECEPCION__C__;
	row30.NIVEL_DE_RIESGO = next_tHashInput_1.NIVEL_DE_RIESGO;
	row30.TAMANO_DE_LA_MUESTRA = next_tHashInput_1.TAMANO_DE_LA_MUESTRA;
	row30.APROBADO = next_tHashInput_1.APROBADO;
	row30.NUMERO_DE_CONTRATO = next_tHashInput_1.NUMERO_DE_CONTRATO;
	row30.itemlVisualizacionColumna = next_tHashInput_1.itemlVisualizacionColumna;

 



/**
 * [tHashInput_1 begin ] stop
 */
	
	/**
	 * [tHashInput_1 main ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 


	tos_count_tHashInput_1++;

/**
 * [tHashInput_1 main ] stop
 */
	
	/**
	 * [tHashInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_44 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_44";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row30"
						
						);
					}
					

          row31 = null;
    Operator_tFilterRow_44 ope_tFilterRow_44 = new Operator_tFilterRow_44("&&");
            ope_tFilterRow_44.matches((row30.itemlVisualizacionColumna == null? false : row30.itemlVisualizacionColumna.compareTo(ParserUtils.parseTo_Integer(String.valueOf(0))) != 0)
                           , "itemlVisualizacionColumna.compareTo(0) != 0 failed");
		 	
    
    if (ope_tFilterRow_44.getMatchFlag()) {
              if(row31 == null){ 
                row31 = new row31Struct();
              }
               row31.TIPO_PRODUCTO = row30.TIPO_PRODUCTO;
               row31.CODIGO_BARRAS = row30.CODIGO_BARRAS;
               row31.CUM = row30.CUM;
               row31.REGISTRO_INVIMA = row30.REGISTRO_INVIMA;
               row31.CODIGO_HOMIC = row30.CODIGO_HOMIC;
               row31.CANTIDAD_ENVIADA = row30.CANTIDAD_ENVIADA;
               row31.CANTIDAD_A_INGRESAR = row30.CANTIDAD_A_INGRESAR;
               row31.LOTE = row30.LOTE;
               row31.FECHA_VENCIMIENTO = row30.FECHA_VENCIMIENTO;
               row31.LEYENDA_DE_RESTRICCION = row30.LEYENDA_DE_RESTRICCION;
               row31.DEFECTOS = row30.DEFECTOS;
               row31.TEMPERATURA_DE_RECEPCION__C__ = row30.TEMPERATURA_DE_RECEPCION__C__;
               row31.NIVEL_DE_RIESGO = row30.NIVEL_DE_RIESGO;
               row31.TAMANO_DE_LA_MUESTRA = row30.TAMANO_DE_LA_MUESTRA;
               row31.APROBADO = row30.APROBADO;
               row31.NUMERO_DE_CONTRATO = row30.NUMERO_DE_CONTRATO;
               row31.itemlVisualizacionColumna = row30.itemlVisualizacionColumna;    
      nb_line_ok_tFilterRow_44++;
    } else {
      nb_line_reject_tFilterRow_44++;
    }

nb_line_tFilterRow_44++;

 


	tos_count_tFilterRow_44++;

/**
 * [tFilterRow_44 main ] stop
 */
	
	/**
	 * [tFilterRow_44 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_44";
	
	

 



/**
 * [tFilterRow_44 process_data_begin ] stop
 */
// Start of branch "row31"
if(row31 != null) { 



	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row31"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

next_1 = null;


// # Output table : 'next_1'
next_1_tmp.out_Producto_Id = null;
next_1_tmp.out_Expediente = null;
next_1_tmp.out_Consecutivo = null;
next_1_tmp.out_CantEnviada = null;
next_1_tmp.out_CantIngresar = null;
next_1_tmp.out_Temperatura = null;
next_1_tmp.out_Riesgo = null;
next_1_tmp.out_Muestra = null;
next_1_tmp.out_Aprobado = null;
next_1_tmp.out_Estado = null;
next_1_tmp.out_Message = null;
next_1_tmp.in_CodBarras = row31.CODIGO_BARRAS;
next_1_tmp.out_CodBarras = StringHandling.UPCASE(row31.CODIGO_BARRAS);
next_1_tmp.in_Cum = row31.CUM ;
next_1_tmp.out_Cum = row31.CUM ;
next_1_tmp.in_Invima = StringHandling.UPCASE(row31.REGISTRO_INVIMA) ;
next_1_tmp.in_CantEnviada = row31.CANTIDAD_ENVIADA ;
next_1_tmp.in_CantIngresar = row31.CANTIDAD_A_INGRESAR ;
next_1_tmp.in_Lote = StringHandling.UPCASE(row31.LOTE);
next_1_tmp.in_FVencimiento = row31.FECHA_VENCIMIENTO ;
next_1_tmp.out_FVencimiento = row31.FECHA_VENCIMIENTO ;
next_1_tmp.in_Leyenda = StringHandling.UPCASE(row31.LEYENDA_DE_RESTRICCION);
next_1_tmp.in_Defectos = Utils.mayusculasSinAcentos(row31.DEFECTOS);
next_1_tmp.out_Defectos = null;
next_1_tmp.in_Temperatura = row31.TEMPERATURA_DE_RECEPCION__C__;
next_1_tmp.in_Riesgo = row31.NIVEL_DE_RIESGO ;
next_1_tmp.in_Muestra = row31.TAMANO_DE_LA_MUESTRA ;
next_1_tmp.in_Aprobado = StringHandling.UPCASE(row31.APROBADO );
next_1_tmp.in_Contrato = row31.NUMERO_DE_CONTRATO ;
next_1_tmp.TIPO_PRODUCTO = row31.TIPO_PRODUCTO ;
next_1_tmp.CODIGO_HOMIC = row31.CODIGO_HOMIC ;
next_1 = next_1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "next_1"
if(next_1 != null) { 



	
	/**
	 * [tJavaRow_4 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"next_1"
						
						);
					}
					

    //Code generate according to input schema and output schema
row6.out_Producto_Id = next_1.out_Producto_Id;
row6.out_Expediente = next_1.out_Expediente;
row6.out_Consecutivo = next_1.out_Consecutivo;
row6.out_CantEnviada = next_1.out_CantEnviada;
row6.out_CantIngresar = next_1.out_CantIngresar;
row6.out_Temperatura = next_1.out_Temperatura;
row6.out_Riesgo = next_1.out_Riesgo;
row6.out_Muestra = next_1.out_Muestra;
row6.out_Aprobado = next_1.out_Aprobado;
row6.out_Estado = next_1.out_Estado;
row6.out_Message = next_1.out_Message;
row6.in_CodBarras = next_1.in_CodBarras;
row6.out_CodBarras = next_1.out_CodBarras;
row6.in_Cum = next_1.in_Cum;
row6.out_Cum = next_1.out_Cum;
row6.in_Invima = next_1.in_Invima;
row6.in_CantEnviada = next_1.in_CantEnviada;
row6.in_CantIngresar = next_1.in_CantIngresar;
row6.in_Lote = next_1.in_Lote;
row6.in_FVencimiento = next_1.in_FVencimiento;
row6.out_FVencimiento = next_1.out_FVencimiento;
row6.in_Leyenda = next_1.in_Leyenda;
row6.in_Defectos = next_1.in_Defectos;
row6.out_Defectos = next_1.out_Defectos;
row6.in_Temperatura = next_1.in_Temperatura;
row6.in_Riesgo = next_1.in_Riesgo;
row6.in_Muestra = next_1.in_Muestra;
row6.in_Aprobado = next_1.in_Aprobado;
row6.in_Contrato = next_1.in_Contrato;
row6.TIPO_PRODUCTO = next_1.TIPO_PRODUCTO;
row6.CODIGO_HOMIC = next_1.CODIGO_HOMIC;

boolean required = false;

if(Utils.empty(next_1.in_CodBarras) == true){ 
 	if(Utils.empty(next_1.in_Cum) == true) {
 		row6.in_CodBarras = "(*)"; 
 		required = true; 
   }
}
else {
 	if(Utils.validarCodigoBarras(next_1.in_CodBarras) == false){
 		row6.in_CodBarras += " | No valido";
  		row6.out_CodBarras = null;
  		row6.out_Estado = "Erróneo";
  		row6.out_Message = Utils.mensajesErrorInventario("Código de barras", "No válido", row6.out_Message);
  	}
}

//System.out.println(next_1.in_CodBarras);
//System.out.println(row6.in_CodBarras);


if(Utils.empty(next_1.in_Cum) == true ){ 
  	if(Utils.empty(next_1.out_CodBarras) == true){
  		row6.in_Cum = "(*)"; 
  		required = true; 
  		row6.out_Message = Utils.mensajesErrorInventario("CUM", "Es obligatorio", row6.out_Message);
  	}
}
else {
   
  	String [] CUM = Utils.validarCUM(next_1.in_Cum);
  	if( CUM == null){
		row6.in_Cum += " | No valido";
		row6.out_Cum = null;
		row6.out_Estado = "Erróneo";
		row6.out_Message = Utils.mensajesErrorInventario("CUM", "No válido", row6.out_Message);
	}
else { 
 		row6.in_Cum = CUM[0] + "-" + CUM[1];
 		row6.out_Expediente = "" + Utils.toInteger(CUM[0],false);
 		row6.out_Consecutivo = "" + Utils.toInteger(CUM[1],false);
  	}
}

//System.out.println(row6.out_Consecutivo);

//if(next_1.in_Invima == null)   { row6.in_Invima = "(*)"; required = true; }
if(Utils.empty(next_1.in_CantEnviada) == true) { row6.in_CantEnviada = "(*)"; required = true; }
else {
  	row6.out_CantEnviada = Utils.toInteger(next_1.in_CantEnviada, false);
  	if( row6.out_CantEnviada == null){
 		row6.in_CantEnviada += " | No válida";
  		row6.out_Estado = "Erróneo";
  		row6.out_Message = Utils.mensajesErrorInventario("Cantidad enviada", "No válido", row6.out_Message);
  	}
}

if(Utils.empty(next_1.in_CantIngresar) == true){ row6.in_CantIngresar = "(*)"; required = true; }
  else {
  	row6.out_CantIngresar = Utils.toInteger(next_1.in_CantIngresar, true);
  	if( row6.out_CantIngresar == null){
  		row6.in_CantIngresar += " | No válida";
  		row6.out_Estado = "Erróneo";
  		row6.out_Message = Utils.mensajesErrorInventario("Cantidad a ingresar", "No válido", row6.out_Message);
  	}
}

if( row6.out_CantIngresar == null && row6.out_CantEnviada == null && row6.out_CantIngresar > row6.out_CantEnviada ){
  	row6.in_CantIngresar += " | Maximo permitido " + row6.out_CantEnviada;
  	row6.out_CantIngresar = null;
  	row6.out_Estado = "Erróneo";
  	row6.out_Message = Utils.mensajesErrorInventario("Cantidad ingresada", " Excede el maximo permitido " + row6.out_CantEnviada, row6.out_Message);
}
// OK

if(Utils.empty(next_1.in_Lote) == true) 		  { 
  	row6.in_Lote = "(*)"; required = true; 
  	row6.out_Message = Utils.mensajesErrorInventario("Lote", "Es obligatorio", row6.out_Message);
}
if(Utils.empty(next_1.in_FVencimiento) == true){ 
  	row6.out_FVencimiento = "(*)"; required = true; 
  	row6.out_Message = Utils.mensajesErrorInventario("Fecha de vencimiento del lote", "Es obligatorio", row6.out_Message);
}
else {			
  	Date fvenc = Utils.obtenerFecha(next_1.in_FVencimiento) ;
  	String fechaString = Utils.obtenerFechaString( fvenc );
  	if (fechaString.equals("")==true){
  		row6.out_FVencimiento += " | No válida";
  		row6.out_Estado = "Erróneo";
  		row6.out_Message = Utils.mensajesErrorInventario("Fecha de vencimiento", "Formato nó valido", row6.out_Message);
  		//System.out.println(next_1.in_FVencimiento);
	}else{
		/*Date flimte = TalendDate.addDate(TalendDate.getCurrentDate(),context.tvencimiento,"DD");				
		if(flimte.compareTo(fvenc) == 1){
			row6.in_FVencimiento += " | Debe tener más de "+context.tvencimiento+" días para su vencimiento.";
			row6.out_Estado = "Erróneo";
			row6.out_Message = Utils.mensajesErrorInventario("Fecha de vencimiento", "Debe tener más de "+context.tvencimiento+" días para su 	vencimiento.", row6.out_Message);
	}*/
	row6.in_FVencimiento = fechaString;
	}				
}

if(Utils.empty(next_1.in_Leyenda) == true) { 
  	row6.in_Leyenda = "(*)"; required = true; 
  	row6.out_Message = Utils.mensajesErrorInventario("Leyenda", "Es obligatoria", row6.out_Message);
}
else{
  	if(next_1.in_Leyenda.equals("SI") == true) {
		row6.in_Leyenda = "Si";
  	}
  	else if( next_1.in_Leyenda.equals("NO") == true ){
  		row6.in_Leyenda = "No";
  	}
  	else {
	row6.in_Leyenda += " | Valor no permitido";
	row6.out_Estado = "Erróneo";
	row6.out_Message = Utils.mensajesErrorInventario("Leyenda", "Valor no permitido", row6.out_Message);
	}


}


if(Utils.empty(next_1.in_Defectos) == true) { 
	row6.in_Defectos = "(*)"; 
	row6.out_Message = Utils.mensajesErrorInventario("Defectos", "Es campo obligatorio", row6.out_Message);
	}
else {
	if(next_1.in_Defectos.equals("CRITICO") == true) { row6.out_Defectos = "Crítico"; }
	else if(next_1.in_Defectos.equals("MAYOR") == true) { row6.out_Defectos = "Mayor"; }
	else if(next_1.in_Defectos.equals("MENOR") == true) { row6.out_Defectos = "Menor"; }
	else  { 
		row6.in_Defectos += " | Valor no permitido"; 
		row6.out_Estado = "Erróneo";
		row6.out_Message = Utils.mensajesErrorInventario("Defectos", "Valor no permitido", row6.out_Message);
	} 

}

//-20 and 100
if(Utils.empty(next_1.in_Temperatura) == true) { 
	row6.in_Temperatura = "(*)"; required = true; 
	row6.out_Message = Utils.mensajesErrorInventario("Temperatura", "Es campo obligatorio", row6.out_Message);
}
else {
	// System.out.println("88" + Utils.toDouble(next_1.in_Temperatura,null));
	//System.out.println("99" + Utils.validarValor("2.5"));
	 row6.out_Temperatura = Utils.toDouble(next_1.in_Temperatura,null);
	//System.out.println("ou" + row6.out_Temperatura );
	//System.out.println("in:" + next_1.in_Temperatura);
	
	if (row6.out_Temperatura == null ){
		row6.in_Temperatura += " | Valor no permitido"; 
		row6.out_Estado = "Erróneo";
		row6.out_Message = Utils.mensajesErrorInventario("Temperatura", "Valor no permitido", row6.out_Message);
	}
	else if(row6.out_Temperatura < -20) { 
		row6.in_Temperatura += " | Valor Min -20 C°"; 
		row6.out_Message = Utils.mensajesErrorInventario("Temperatura", "Valor no permitido - Valor min -20 C°", row6.out_Message);
		row6.out_Estado = "Erróneo";
	}
	else if( row6.out_Temperatura > 100 ){
		row6.in_Temperatura += " | Valor Max 100 C°"; 
		row6.out_Message = Utils.mensajesErrorInventario("Temperatura", "Valor no permitido - Valor MAX 100 C°", row6.out_Message);
		row6.out_Estado = "Erróneo";
	}	
}

if( next_1.in_Riesgo == null)  { 
	row6.in_Riesgo = "(*)"; required = true; 
	row6.out_Message = Utils.mensajesErrorInventario("Riesgo", "Es campo obligatorio", row6.out_Message);
}
else { 
	row6.out_Riesgo = Utils.toInteger(next_1.in_Riesgo, false); 
	if( row6.out_Riesgo == null || row6.out_Riesgo > 3){
		row6.in_Riesgo += " | Valor no permitido";
		row6.out_Estado = "Erróneo";
		row6.out_Message = Utils.mensajesErrorInventario("Riesgo", "Valor no permitido", row6.out_Message);
	}		
}

if(Utils.empty(next_1.in_Muestra) == true) { 
	row6.in_Muestra = "(*)"; required = true; 
}
else {
	row6.out_Muestra = Utils.toInteger(next_1.in_Muestra, false); 
	if(	row6.out_Muestra == null ) {
		row6.in_Muestra += " | Valor no permitido";
		row6.out_Estado = "Erróneo";
		row6.out_Message = Utils.mensajesErrorInventario("Muestra", "Valor no permitido", row6.out_Message);
	}
	else if( row6.out_CantEnviada != null && row6.out_Muestra > row6.out_CantEnviada ){
		row6.in_Muestra += " | Maximo permitido " + row6.out_CantEnviada;
		row6.out_Muestra = null;
		row6.out_Estado = "Erróneo";
		row6.out_Message = Utils.mensajesErrorInventario("Muestra", "Maximo permitido " + row6.out_CantEnviada, row6.out_Message);
	}
	
}

if( Utils.empty(next_1.in_Aprobado) == true){ 
	row6.in_Aprobado = "(*)"; required = true; 
	row6.out_Message = Utils.mensajesErrorInventario("Aprobado", "Campo obligatorio", row6.out_Message);
}
else {
	if(next_1.in_Aprobado.equals("SI") == true){
		row6.in_Aprobado = "Si";
	}
	else if(next_1.in_Aprobado.equals("NO") == true ){
		row6.in_Aprobado = "No";
	}
	else {
		row6.in_Aprobado += " | Valor no permitido";
		row6.out_Estado = "Erróneo";
		row6.out_Message = Utils.mensajesErrorInventario("Aprobado", "Valor no permitido", row6.out_Message);
	}	
}

if( Utils.empty(next_1.in_Contrato) == true){ 
	row6.in_Contrato = "(*)"; required = true; 
	row6.out_Message = Utils.mensajesErrorInventario("Contrato", "Campo obligatorio", row6.out_Message);
	}



if(required == true ){
	row6.out_Estado = "Erróneo";
	//row6.out_Message= "Faltan campos obligatorios (*); \n";
}


    nb_line_tJavaRow_4++;   

 


	tos_count_tJavaRow_4++;

/**
 * [tJavaRow_4 main ] stop
 */
	
	/**
	 * [tJavaRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_8 main ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_8 = false;
		
						row8Struct row8 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_8 = false;
		boolean mainRowRejected_tMap_8 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row8" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow8 = false;
       		  	    	
       		  	    	
 							row8Struct row8ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_8) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_8 = false;
								
                        		    		    row8HashKey.CONTRATO = row6.in_Contrato ;
                        		    		

								
		                        	row8HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row8.lookup( row8HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row8 != null && tHash_Lookup_row8.getCount(row8HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row8' and it contains more one result from keys :  row8.CONTRATO = '" + row8HashKey.CONTRATO + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row8Struct fromLookup_row8 = null;
							row8 = row8Default;
										 
							
								 
							
							
								if (tHash_Lookup_row8 !=null && tHash_Lookup_row8.hasNext()) { // G 099
								
							
								
								fromLookup_row8 = tHash_Lookup_row8.next();

							
							
								} // G 099
							
							

							if(fromLookup_row8 != null) {
								row8 = fromLookup_row8;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_8__Struct Var = Var__tMap_8;// ###############################
        // ###############################
        // # Output tables

outContratoId = null;


// # Output table : 'outContratoId'
outContratoId_tmp.out_Producto_Id = row6.out_Producto_Id ;
outContratoId_tmp.out_Expediente = row6.out_Expediente ;
outContratoId_tmp.out_Consecutivo = row6.out_Consecutivo ;
outContratoId_tmp.out_CantEnviada = row6.out_CantEnviada ;
outContratoId_tmp.out_CantIngresar = row6.out_CantIngresar ;
outContratoId_tmp.out_Temperatura = row6.out_Temperatura ;
outContratoId_tmp.out_Riesgo = row6.out_Riesgo ;
outContratoId_tmp.out_Muestra = row6.out_Muestra ;
outContratoId_tmp.out_Aprobado = row6.out_Aprobado ;
outContratoId_tmp.out_Estado = row6.out_Estado ;
outContratoId_tmp.out_Message = row6.out_Message ;
outContratoId_tmp.in_CodBarras = row6.in_CodBarras ;
outContratoId_tmp.out_CodBarras = row6.out_CodBarras ;
outContratoId_tmp.in_Cum = row6.in_Cum ;
outContratoId_tmp.out_Cum = row6.out_Cum ;
outContratoId_tmp.in_Invima = row6.in_Invima ;
outContratoId_tmp.in_CantEnviada = row6.in_CantEnviada ;
outContratoId_tmp.in_CantIngresar = row6.in_CantIngresar ;
outContratoId_tmp.in_Lote = row6.in_Lote ;
outContratoId_tmp.in_FVencimiento = row6.in_FVencimiento ;
outContratoId_tmp.out_FVencimiento = row6.out_FVencimiento ;
outContratoId_tmp.in_Leyenda = row6.in_Leyenda ;
outContratoId_tmp.in_Defectos = row6.in_Defectos ;
outContratoId_tmp.out_Defectos = row6.out_Defectos ;
outContratoId_tmp.in_Temperatura = row6.in_Temperatura ;
outContratoId_tmp.in_Riesgo = row6.in_Riesgo ;
outContratoId_tmp.in_Muestra = row6.in_Muestra ;
outContratoId_tmp.in_Aprobado = row6.in_Aprobado ;
outContratoId_tmp.in_Contrato = row6.in_Contrato ;
outContratoId_tmp.Contrato_Id = row8.ID ;
outContratoId_tmp.TIPO_PRODUCTO = row6.TIPO_PRODUCTO ;
outContratoId_tmp.CODIGO_HOMIC = row6.CODIGO_HOMIC ;
outContratoId_tmp.Estado_ = null;
outContratoId_tmp.Respuesta_ = null;
outContratoId_tmp.Id_ = null;
outContratoId = outContratoId_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_8 = false;










 


	tos_count_tMap_8++;

/**
 * [tMap_8 main ] stop
 */
	
	/**
	 * [tMap_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_begin ] stop
 */
// Start of branch "outContratoId"
if(outContratoId != null) { 



	
	/**
	 * [tJavaRow_6 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"outContratoId"
						
						);
					}
					

    //Code generate according to input schema and output schema
row7.out_Producto_Id = outContratoId.out_Producto_Id;
row7.out_Expediente = outContratoId.out_Expediente;
row7.out_Consecutivo = outContratoId.out_Consecutivo;
row7.out_CantEnviada = outContratoId.out_CantEnviada;
row7.out_CantIngresar = outContratoId.out_CantIngresar;
row7.out_Temperatura = outContratoId.out_Temperatura;
row7.out_Riesgo = outContratoId.out_Riesgo;
row7.out_Muestra = outContratoId.out_Muestra;
row7.out_Aprobado = outContratoId.out_Aprobado;
row7.out_Estado = outContratoId.out_Estado;
row7.out_Message = outContratoId.out_Message;
row7.in_CodBarras = outContratoId.in_CodBarras;
row7.out_CodBarras = outContratoId.out_CodBarras;
row7.in_Cum = outContratoId.in_Cum;
row7.out_Cum = outContratoId.out_Cum;
row7.in_Invima = outContratoId.in_Invima;
row7.in_CantEnviada = outContratoId.in_CantEnviada;
row7.in_CantIngresar = outContratoId.in_CantIngresar;
row7.in_Lote = outContratoId.in_Lote;
row7.in_FVencimiento = outContratoId.in_FVencimiento;
row7.out_FVencimiento = outContratoId.out_FVencimiento;
row7.in_Leyenda = outContratoId.in_Leyenda;
row7.in_Defectos = outContratoId.in_Defectos;
row7.out_Defectos = outContratoId.out_Defectos;
row7.in_Temperatura = outContratoId.in_Temperatura;
row7.in_Riesgo = outContratoId.in_Riesgo;
row7.in_Muestra = outContratoId.in_Muestra;
row7.in_Aprobado = outContratoId.in_Aprobado;
row7.in_Contrato = outContratoId.in_Contrato;
row7.Contrato_Id = outContratoId.Contrato_Id;
row7.TIPO_PRODUCTO = outContratoId.TIPO_PRODUCTO;
row7.CODIGO_HOMIC = outContratoId.CODIGO_HOMIC;
row7.Estado_ = outContratoId.Estado_;
row7.Respuesta_ = outContratoId.Respuesta_;
row7.Id_ = outContratoId.Id_;

if(row7.in_Contrato.contains("(*)") == false && outContratoId.Contrato_Id == null){
	row7.in_Contrato += " | No registrado";	
	row7.out_Estado = "Erróneo";
	row7.out_Message = Utils.mensajesErrorInventario("Contrato", "No registrado", row7.out_Message);
}
else if( outContratoId.Contrato_Id != null){
	
	if(outContratoId.Contrato_Id.compareTo(context.contrato_id) != 0){
		row7.out_Estado = "Erróneo";
		row7.in_Contrato += " | Diferente al seleccionado";
		row7.out_Message = Utils.mensajesErrorInventario("Contrato", "Diferente al seleccionado", row7.out_Message);
	}
}

context.TipoProducto = row7.TIPO_PRODUCTO;
row7.TIPO_PRODUCTO = "xxx";
    nb_line_tJavaRow_6++;   

 


	tos_count_tJavaRow_6++;

/**
 * [tJavaRow_6 main ] stop
 */
	
	/**
	 * [tJavaRow_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_begin ] stop
 */

	
	/**
	 * [tOracleSP_3 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					

			// code for the argument 1 (TIPO_PRODUCTO) of type 'IN AUTOMAPPING'
    					if (row7.TIPO_PRODUCTO == null) {
    						statement_tOracleSP_3.setNull(1, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_3.setString(1, row7.TIPO_PRODUCTO);
    					}
    					
			// code for the argument 2 (out_CodBarras) of type 'IN AUTOMAPPING'
    					if (row7.out_CodBarras == null) {
    						statement_tOracleSP_3.setNull(2, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_3.setString(2, row7.out_CodBarras);
    					}
    					
			// code for the argument 3 (in_Invima) of type 'IN AUTOMAPPING'
    					if (row7.in_Invima == null) {
    						statement_tOracleSP_3.setNull(3, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_3.setString(3, row7.in_Invima);
    					}
    					
			// code for the argument 4 (out_Expediente) of type 'IN AUTOMAPPING'
    					if (row7.out_Expediente == null) {
    						statement_tOracleSP_3.setNull(4, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_3.setString(4, row7.out_Expediente);
    					}
    					
			// code for the argument 5 (out_Consecutivo) of type 'IN AUTOMAPPING'
    					if (row7.out_Consecutivo == null) {
    						statement_tOracleSP_3.setNull(5, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_3.setString(5, row7.out_Consecutivo);
    					}
    					
			// code for the argument 6 (CODIGO_HOMIC) of type 'IN AUTOMAPPING'
    					if (row7.CODIGO_HOMIC == null) {
    						statement_tOracleSP_3.setNull(6, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_3.setString(6, row7.CODIGO_HOMIC);
    					}
    					
			// code for the argument 7 (Estado_) of type 'OUT AUTOMAPPING'
					statement_tOracleSP_3.registerOutParameter(7, java.sql.Types.VARCHAR);
			// code for the argument 8 (Respuesta_) of type 'OUT AUTOMAPPING'
					statement_tOracleSP_3.registerOutParameter(8, java.sql.Types.VARCHAR);
			// code for the argument 9 (Id_) of type 'OUT AUTOMAPPING'
					statement_tOracleSP_3.registerOutParameter(9, java.sql.Types.INTEGER);
		statement_tOracleSP_3.execute();
		
										row9.out_Producto_Id = row7.out_Producto_Id;
										
								row9.out_Expediente = row7.out_Expediente;
								
								row9.out_Consecutivo = row7.out_Consecutivo;
								
										row9.out_CantEnviada = row7.out_CantEnviada;
										
										row9.out_CantIngresar = row7.out_CantIngresar;
										
										row9.out_Temperatura = row7.out_Temperatura;
										
										row9.out_Riesgo = row7.out_Riesgo;
										
										row9.out_Muestra = row7.out_Muestra;
										
										row9.out_Aprobado = row7.out_Aprobado;
										
										row9.out_Estado = row7.out_Estado;
										
										row9.out_Message = row7.out_Message;
										
										row9.in_CodBarras = row7.in_CodBarras;
										
								row9.out_CodBarras = row7.out_CodBarras;
								
										row9.in_Cum = row7.in_Cum;
										
										row9.out_Cum = row7.out_Cum;
										
								row9.in_Invima = row7.in_Invima;
								
										row9.in_CantEnviada = row7.in_CantEnviada;
										
										row9.in_CantIngresar = row7.in_CantIngresar;
										
										row9.in_Lote = row7.in_Lote;
										
										row9.in_FVencimiento = row7.in_FVencimiento;
										
										row9.out_FVencimiento = row7.out_FVencimiento;
										
										row9.in_Leyenda = row7.in_Leyenda;
										
										row9.in_Defectos = row7.in_Defectos;
										
										row9.out_Defectos = row7.out_Defectos;
										
										row9.in_Temperatura = row7.in_Temperatura;
										
										row9.in_Riesgo = row7.in_Riesgo;
										
										row9.in_Muestra = row7.in_Muestra;
										
										row9.in_Aprobado = row7.in_Aprobado;
										
										row9.in_Contrato = row7.in_Contrato;
										
										row9.Contrato_Id = row7.Contrato_Id;
										
								row9.TIPO_PRODUCTO = row7.TIPO_PRODUCTO;
								
								row9.CODIGO_HOMIC = row7.CODIGO_HOMIC;
								
									row9.Estado_ = statement_tOracleSP_3.getString(7);
									
									if (statement_tOracleSP_3.wasNull()) {
										row9.Estado_ = null;
									}
									
									row9.Respuesta_ = statement_tOracleSP_3.getString(8);
									
									if (statement_tOracleSP_3.wasNull()) {
										row9.Respuesta_ = null;
									}
									
									row9.Id_ = statement_tOracleSP_3.getInt(9);
									
									if (statement_tOracleSP_3.wasNull()) {
										row9.Id_ = null;
									}
									

 


	tos_count_tOracleSP_3++;

/**
 * [tOracleSP_3 main ] stop
 */
	
	/**
	 * [tOracleSP_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	

 



/**
 * [tOracleSP_3 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_9 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					

    //Code generate according to input schema and output schema
  row10.out_Producto_Id = row9.out_Producto_Id;
  row10.out_Expediente = row9.out_Expediente;
  row10.out_Consecutivo = row9.out_Consecutivo;
  row10.out_CantEnviada = row9.out_CantEnviada;
  row10.out_CantIngresar = row9.out_CantIngresar;
  row10.out_Temperatura = row9.out_Temperatura;
  row10.out_Riesgo = row9.out_Riesgo;
  row10.out_Muestra = row9.out_Muestra;
  row10.out_Aprobado = row9.out_Aprobado;
  row10.out_Estado = row9.out_Estado;
  row10.out_Message = row9.out_Message;
  row10.in_CodBarras = row9.in_CodBarras;
  row10.out_CodBarras = row9.out_CodBarras;
  row10.in_Cum = row9.in_Cum;
  row10.out_Cum = row9.out_Cum;
  row10.in_Invima = row9.in_Invima;
  row10.in_CantEnviada = row9.in_CantEnviada;
  row10.in_CantIngresar = row9.in_CantIngresar;
  row10.in_Lote = row9.in_Lote;
  row10.in_FVencimiento = row9.in_FVencimiento;
  row10.out_FVencimiento = row9.out_FVencimiento;
  row10.in_Leyenda = row9.in_Leyenda;
  row10.in_Defectos = row9.in_Defectos;
  row10.out_Defectos = row9.out_Defectos;
  row10.in_Temperatura = row9.in_Temperatura;
  row10.in_Riesgo = row9.in_Riesgo;
  row10.in_Muestra = row9.in_Muestra;
  row10.in_Aprobado = row9.in_Aprobado;
  row10.in_Contrato = row9.in_Contrato;
  row10.Contrato_Id = row9.Contrato_Id;
  row10.TIPO_PRODUCTO = row9.TIPO_PRODUCTO;
  row10.CODIGO_HOMIC = row9.CODIGO_HOMIC;
  row10.Estado_ = row9.Estado_;
  row10.Respuesta_ = row9.Respuesta_;
  row10.Id_ = row9.Id_;

  if ( row10.Id_  != null && row10.Id_ != 0) {
  	row10.out_Producto_Id =  Utils.toBigDecimal(row10.Id_) ;
  }else{
  	// En caso de no haber encontrado el producto comercial
  	row10.out_Estado = "Erróneo";
  	row10.out_Message = Utils.mensajesErrorInventario("Producto", row10.Respuesta_, row10.out_Message);
  	if(row10.TIPO_PRODUCTO == "M"){
  		row10.in_Cum += " | " + row10.Respuesta_;
  		
  	}else{
  		if(row9.out_CodBarras != null  ){
  row10.in_CodBarras += " | " + row10.Respuesta_;
  		}
  	}
  }


row10.TIPO_PRODUCTO = context.TipoProducto;
    nb_line_tJavaRow_9++;   

 


	tos_count_tJavaRow_9++;

/**
 * [tJavaRow_9 main ] stop
 */
	
	/**
	 * [tJavaRow_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_begin ] stop
 */

	
	/**
	 * [tMap_9 main ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;
		
						row11Struct row11 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_9 = false;
		boolean mainRowRejected_tMap_9 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row11" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow11 = false;
       		  	    	
       		  	    	
 							row11Struct row11ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_9) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_9 = false;
								
                        		    		    row11HashKey.PRODUCTOS_ID = row10.out_Producto_Id ;
                        		    		

								
		                        	row11HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row11.lookup( row11HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row11 != null && tHash_Lookup_row11.getCount(row11HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row11' and it contains more one result from keys :  row11.PRODUCTOS_ID = '" + row11HashKey.PRODUCTOS_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row11Struct fromLookup_row11 = null;
							row11 = row11Default;
										 
							
								 
							
							
								if (tHash_Lookup_row11 !=null && tHash_Lookup_row11.hasNext()) { // G 099
								
							
								
								fromLookup_row11 = tHash_Lookup_row11.next();

							
							
								} // G 099
							
							

							if(fromLookup_row11 != null) {
								row11 = fromLookup_row11;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_9__Struct Var = Var__tMap_9;// ###############################
        // ###############################
        // # Output tables

outProductoContrato = null;


// # Output table : 'outProductoContrato'
outProductoContrato_tmp.out_Producto_Id = row10.out_Producto_Id ;
outProductoContrato_tmp.out_Expediente = row10.out_Expediente ;
outProductoContrato_tmp.out_Consecutivo = row10.out_Consecutivo ;
outProductoContrato_tmp.out_CantEnviada = row10.out_CantEnviada ;
outProductoContrato_tmp.out_CantIngresar = row10.out_CantIngresar ;
outProductoContrato_tmp.out_Temperatura = row10.out_Temperatura ;
outProductoContrato_tmp.out_Riesgo = row10.out_Riesgo ;
outProductoContrato_tmp.out_Muestra = row10.out_Muestra ;
outProductoContrato_tmp.out_Aprobado = row10.out_Aprobado ;
outProductoContrato_tmp.out_Estado = row10.out_Estado ;
outProductoContrato_tmp.out_Message = row10.out_Message ;
outProductoContrato_tmp.in_CodBarras = row10.in_CodBarras ;
outProductoContrato_tmp.out_CodBarras = row10.out_CodBarras ;
outProductoContrato_tmp.in_Cum = row10.in_Cum ;
outProductoContrato_tmp.out_Cum = row10.out_Cum ;
outProductoContrato_tmp.in_Invima = row10.in_Invima ;
outProductoContrato_tmp.in_CantEnviada = row10.in_CantEnviada ;
outProductoContrato_tmp.in_CantIngresar = row10.in_CantIngresar ;
outProductoContrato_tmp.in_Lote = row10.in_Lote ;
outProductoContrato_tmp.in_FVencimiento = row10.in_FVencimiento ;
outProductoContrato_tmp.in_Leyenda = row10.in_Leyenda ;
outProductoContrato_tmp.in_Defectos = row10.in_Defectos ;
outProductoContrato_tmp.out_Defectos = row10.out_Defectos ;
outProductoContrato_tmp.in_Temperatura = row10.in_Temperatura ;
outProductoContrato_tmp.in_Riesgo = row10.in_Riesgo ;
outProductoContrato_tmp.in_Muestra = row10.in_Muestra ;
outProductoContrato_tmp.in_Aprobado = row10.in_Aprobado ;
outProductoContrato_tmp.in_Contrato = row10.in_Contrato ;
outProductoContrato_tmp.Contrato_Id = row10.Contrato_Id ;
outProductoContrato_tmp.TIPO_PRODUCTO = row10.TIPO_PRODUCTO ;
outProductoContrato_tmp.CODIGO_HOMIC = row10.CODIGO_HOMIC ;
outProductoContrato_tmp.Estado_ = row10.Estado_ ;
outProductoContrato_tmp.Respuesta_ = row10.Respuesta_ ;
outProductoContrato_tmp.Id_ = row10.Id_ ;
outProductoContrato_tmp.DCONTRATOS_ID = row11.DCONTRATOS_ID ;
outProductoContrato_tmp.HDCONTRATOS_ID = row11.HDCONTRATOS_ID ;
outProductoContrato_tmp.PRECIO = row11.PRECIO ;
outProductoContrato_tmp.IVA = row11.IVA ;
outProductoContrato_tmp.VUNITARIO = null;
outProductoContrato_tmp.VUNITARIOIVA = null;
outProductoContrato_tmp.SUBTOTAL = null;
outProductoContrato_tmp.VTOTALIVA = null;
outProductoContrato_tmp.TOTAL = null;
outProductoContrato_tmp.numeroFila = null;
outProductoContrato = outProductoContrato_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_9 = false;










 


	tos_count_tMap_9++;

/**
 * [tMap_9 main ] stop
 */
	
	/**
	 * [tMap_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_begin ] stop
 */
// Start of branch "outProductoContrato"
if(outProductoContrato != null) { 



	
	/**
	 * [tJavaRow_2 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"outProductoContrato"
						
						);
					}
					

    //Code generate according to input schema and output schema
row12.out_Producto_Id = outProductoContrato.out_Producto_Id;
row12.out_Expediente = outProductoContrato.out_Expediente;
row12.out_Consecutivo = outProductoContrato.out_Consecutivo;
row12.out_CantEnviada = outProductoContrato.out_CantEnviada;
row12.out_CantIngresar = outProductoContrato.out_CantIngresar;
row12.out_Temperatura = outProductoContrato.out_Temperatura;
row12.out_Riesgo = outProductoContrato.out_Riesgo;
row12.out_Muestra = outProductoContrato.out_Muestra;
row12.out_Aprobado = outProductoContrato.out_Aprobado;
row12.out_Estado = outProductoContrato.out_Estado;
row12.out_Message = outProductoContrato.out_Message;
row12.in_CodBarras = outProductoContrato.in_CodBarras;
row12.out_CodBarras = outProductoContrato.out_CodBarras;
row12.in_Cum = outProductoContrato.in_Cum;
row12.out_Cum = outProductoContrato.out_Cum;
row12.in_Invima = outProductoContrato.in_Invima;
row12.in_CantEnviada = outProductoContrato.in_CantEnviada;
row12.in_CantIngresar = outProductoContrato.in_CantIngresar;
row12.in_Lote = outProductoContrato.in_Lote;
row12.in_FVencimiento = outProductoContrato.in_FVencimiento;
row12.in_Leyenda = outProductoContrato.in_Leyenda;
row12.in_Defectos = outProductoContrato.in_Defectos;
row12.out_Defectos = outProductoContrato.out_Defectos;
row12.in_Temperatura = outProductoContrato.in_Temperatura;
row12.in_Riesgo = outProductoContrato.in_Riesgo;
row12.in_Muestra = outProductoContrato.in_Muestra;
row12.in_Aprobado = outProductoContrato.in_Aprobado;
row12.in_Contrato = outProductoContrato.in_Contrato;
row12.Contrato_Id = outProductoContrato.Contrato_Id;
row12.TIPO_PRODUCTO = outProductoContrato.TIPO_PRODUCTO;
row12.CODIGO_HOMIC = outProductoContrato.CODIGO_HOMIC;
row12.Estado_ = outProductoContrato.Estado_;
row12.Respuesta_ = outProductoContrato.Respuesta_;
row12.Id_ = outProductoContrato.Id_;
row12.DCONTRATOS_ID = outProductoContrato.DCONTRATOS_ID;
row12.HDCONTRATOS_ID = outProductoContrato.HDCONTRATOS_ID;
row12.PRECIO = outProductoContrato.PRECIO;
row12.IVA = outProductoContrato.IVA;
row12.VUNITARIO = outProductoContrato.VUNITARIO;
row12.VUNITARIOIVA = outProductoContrato.VUNITARIOIVA;
row12.SUBTOTAL = outProductoContrato.SUBTOTAL;
row12.VTOTALIVA = outProductoContrato.VTOTALIVA;
row12.TOTAL = outProductoContrato.TOTAL;
row12.numeroFila = outProductoContrato.numeroFila;


if(outProductoContrato.out_Producto_Id != null && outProductoContrato.DCONTRATOS_ID == null){
	//row12.out_Message = "Producto sin precio en contrato";
	row12.out_Message = Utils.mensajesErrorInventario("Producto", "Sin precio en contrato", row12.out_Message);
	row12.out_Estado = "Erróneo";
}
else if( outProductoContrato.DCONTRATOS_ID != null ){
	
	outProductoContrato.IVA  = outProductoContrato.IVA.divide(BigDecimal.valueOf(100));
	outProductoContrato.IVA  = outProductoContrato.IVA.setScale(2, BigDecimal.ROUND_HALF_UP);
	
	
	row12.VUNITARIO = outProductoContrato.PRECIO.setScale(2, BigDecimal.ROUND_HALF_UP);
	row12.VUNITARIOIVA = row12.VUNITARIO.multiply(outProductoContrato.IVA);
	row12.VUNITARIOIVA = row12.VUNITARIOIVA.setScale(2, BigDecimal.ROUND_HALF_UP);	
	
	row12.SUBTOTAL = outProductoContrato.PRECIO.multiply(BigDecimal.valueOf(outProductoContrato.out_CantIngresar));
	row12.SUBTOTAL = row12.SUBTOTAL.setScale(2, BigDecimal.ROUND_HALF_UP);
		
	row12.VTOTALIVA = row12.VUNITARIOIVA.multiply(BigDecimal.valueOf(outProductoContrato.out_CantIngresar));
	row12.TOTAL = row12.SUBTOTAL.add(row12.VTOTALIVA);
	
}

/*if (row12.Estado_ == null){
	row12.Estado_ = "OK";
}*/

// Cuenta el número de filas
context.cantFilas+=1;
row12.numeroFila = context.cantFilas;

    nb_line_tJavaRow_2++;   

 


	tos_count_tJavaRow_2++;

/**
 * [tJavaRow_2 main ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_11 main ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_11 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_11 = false;
		boolean mainRowRejected_tMap_11 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_11__Struct Var = Var__tMap_11;// ###############################
        // ###############################
        // # Output tables

outVarProc = null;


// # Output table : 'outVarProc'
outVarProc_tmp.TMovimiento_Id_ = context.tmovimiento_id;
outVarProc_tmp.Movimiento_Id_ = context.movimiento_id;
outVarProc_tmp.Bodega_Id_ = context.bodega_id;
outVarProc_tmp.Usuario_Id_ = context.usuario_id;
outVarProc_tmp.Inventario_Id_ = null;
outVarProc_tmp.PreCantidad_ = null;
outVarProc_tmp.PostCantidad_ = null;
outVarProc_tmp.Producto_Id_ = row12.out_Producto_Id ;
outVarProc_tmp.out_Expediente = row12.out_Expediente ;
outVarProc_tmp.out_Consecutivo = row12.out_Consecutivo ;
outVarProc_tmp.out_CantEnviada = row12.out_CantEnviada ;
outVarProc_tmp.CantEnviada = row12.out_CantEnviada ;
outVarProc_tmp.out_CantIngresar = row12.out_CantIngresar ;
outVarProc_tmp.CantIngresar = row12.out_CantIngresar ;
outVarProc_tmp.out_Temperatura = row12.out_Temperatura ;
outVarProc_tmp.out_Riesgo = row12.out_Riesgo ;
outVarProc_tmp.out_Muestra = row12.out_Muestra ;
outVarProc_tmp.out_Aprobado = row12.out_Aprobado ;
outVarProc_tmp.out_Estado = row12.out_Estado ;
outVarProc_tmp.out_Message = row12.out_Message ;
outVarProc_tmp.in_CodBarras = row12.in_CodBarras ;
outVarProc_tmp.out_CodBarras = row12.out_CodBarras ;
outVarProc_tmp.in_Cum = row12.in_Cum ;
outVarProc_tmp.out_Cum = row12.out_Cum ;
outVarProc_tmp.in_Invima = row12.in_Invima ;
outVarProc_tmp.Cantidad_ = row12.in_CantEnviada ;
outVarProc_tmp.CantEsperada = row12.in_CantIngresar ;
outVarProc_tmp.Lote_ = row12.in_Lote ;
outVarProc_tmp.FVencimiento_ = row12.in_FVencimiento ;
outVarProc_tmp.Restriccion_ = row12.in_Leyenda ;
outVarProc_tmp.in_Defectos = row12.in_Defectos ;
outVarProc_tmp.Defectos = row12.out_Defectos;
outVarProc_tmp.Temperatura_ = row12.in_Temperatura ;
outVarProc_tmp.Nivel_Riesgo_ = row12.in_Riesgo ;
outVarProc_tmp.Tam_Muestra_ = row12.in_Muestra ;
outVarProc_tmp.Aprobado_ = row12.in_Aprobado ;
outVarProc_tmp.in_Contrato = row12.in_Contrato ;
outVarProc_tmp.Contrato_Id = row12.Contrato_Id ;
outVarProc_tmp.DContrato_Id_ = row12.DCONTRATOS_ID ;
outVarProc_tmp.HDContrato_Id = row12.HDCONTRATOS_ID ;
outVarProc_tmp.Precio = row12.PRECIO ;
outVarProc_tmp.Iva = row12.IVA ;
outVarProc_tmp.VUnitario = row12.VUNITARIO ;
outVarProc_tmp.VUnitarioIva_ = row12.VUNITARIOIVA ;
outVarProc_tmp.SubTotal_ = row12.SUBTOTAL ;
outVarProc_tmp.VTotalIva_ = row12.VTOTALIVA ;
outVarProc_tmp.Total_ = row12.TOTAL ;
outVarProc_tmp.numeroFila = row12.numeroFila ;
outVarProc_tmp.TIPO_PRODUCTO = row12.TIPO_PRODUCTO ;
outVarProc_tmp.CODIGO_HOMIC = row12.CODIGO_HOMIC ;
outVarProc_tmp.Estado_ = row12.Estado_ ;
outVarProc_tmp.Respuesta_ = row12.Respuesta_ ;
outVarProc = outVarProc_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_11 = false;










 


	tos_count_tMap_11++;

/**
 * [tMap_11 main ] stop
 */
	
	/**
	 * [tMap_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_begin ] stop
 */
// Start of branch "outVarProc"
if(outVarProc != null) { 



	
	/**
	 * [tFilterRow_71 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_71";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"outVarProc"
						
						);
					}
					

          row13 = null;
          row15 = null;
    Operator_tFilterRow_71 ope_tFilterRow_71 = new Operator_tFilterRow_71("||");
            ope_tFilterRow_71.matches((outVarProc.out_Estado == null? false : outVarProc.out_Estado.compareTo("Erróneo") == 0)
                           , "out_Estado.compareTo(\"Erróneo\") == 0 failed");
    
    if (ope_tFilterRow_71.getMatchFlag()) {
              if(row15 == null){ 
                row15 = new row15Struct();
              }
               row15.TMovimiento_Id_ = outVarProc.TMovimiento_Id_;
               row15.Movimiento_Id_ = outVarProc.Movimiento_Id_;
               row15.Bodega_Id_ = outVarProc.Bodega_Id_;
               row15.Usuario_Id_ = outVarProc.Usuario_Id_;
               row15.Inventario_Id_ = outVarProc.Inventario_Id_;
               row15.PreCantidad_ = outVarProc.PreCantidad_;
               row15.PostCantidad_ = outVarProc.PostCantidad_;
               row15.Producto_Id_ = outVarProc.Producto_Id_;
               row15.out_Expediente = outVarProc.out_Expediente;
               row15.out_Consecutivo = outVarProc.out_Consecutivo;
               row15.out_CantEnviada = outVarProc.out_CantEnviada;
               row15.CantEnviada = outVarProc.CantEnviada;
               row15.out_CantIngresar = outVarProc.out_CantIngresar;
               row15.CantIngresar = outVarProc.CantIngresar;
               row15.out_Temperatura = outVarProc.out_Temperatura;
               row15.out_Riesgo = outVarProc.out_Riesgo;
               row15.out_Muestra = outVarProc.out_Muestra;
               row15.out_Aprobado = outVarProc.out_Aprobado;
               row15.out_Estado = outVarProc.out_Estado;
               row15.out_Message = outVarProc.out_Message;
               row15.in_CodBarras = outVarProc.in_CodBarras;
               row15.out_CodBarras = outVarProc.out_CodBarras;
               row15.in_Cum = outVarProc.in_Cum;
               row15.out_Cum = outVarProc.out_Cum;
               row15.in_Invima = outVarProc.in_Invima;
               row15.Cantidad_ = outVarProc.Cantidad_;
               row15.CantEsperada = outVarProc.CantEsperada;
               row15.Lote_ = outVarProc.Lote_;
               row15.FVencimiento_ = outVarProc.FVencimiento_;
               row15.Restriccion_ = outVarProc.Restriccion_;
               row15.in_Defectos = outVarProc.in_Defectos;
               row15.Defectos = outVarProc.Defectos;
               row15.Temperatura_ = outVarProc.Temperatura_;
               row15.Nivel_Riesgo_ = outVarProc.Nivel_Riesgo_;
               row15.Tam_Muestra_ = outVarProc.Tam_Muestra_;
               row15.Aprobado_ = outVarProc.Aprobado_;
               row15.in_Contrato = outVarProc.in_Contrato;
               row15.Contrato_Id = outVarProc.Contrato_Id;
               row15.DContrato_Id_ = outVarProc.DContrato_Id_;
               row15.HDContrato_Id = outVarProc.HDContrato_Id;
               row15.Precio = outVarProc.Precio;
               row15.Iva = outVarProc.Iva;
               row15.VUnitario = outVarProc.VUnitario;
               row15.VUnitarioIva_ = outVarProc.VUnitarioIva_;
               row15.SubTotal_ = outVarProc.SubTotal_;
               row15.VTotalIva_ = outVarProc.VTotalIva_;
               row15.Total_ = outVarProc.Total_;
               row15.numeroFila = outVarProc.numeroFila;
               row15.TIPO_PRODUCTO = outVarProc.TIPO_PRODUCTO;
               row15.CODIGO_HOMIC = outVarProc.CODIGO_HOMIC;
               row15.Estado_ = outVarProc.Estado_;
               row15.Respuesta_ = outVarProc.Respuesta_;    
      nb_line_ok_tFilterRow_71++;
    } else {
            if (row13 == null){
              row13 = new row13Struct();
            }
                row13.TMovimiento_Id_ = outVarProc.TMovimiento_Id_;
                row13.Movimiento_Id_ = outVarProc.Movimiento_Id_;
                row13.Bodega_Id_ = outVarProc.Bodega_Id_;
                row13.Usuario_Id_ = outVarProc.Usuario_Id_;
                row13.Inventario_Id_ = outVarProc.Inventario_Id_;
                row13.PreCantidad_ = outVarProc.PreCantidad_;
                row13.PostCantidad_ = outVarProc.PostCantidad_;
                row13.Producto_Id_ = outVarProc.Producto_Id_;
                row13.out_Expediente = outVarProc.out_Expediente;
                row13.out_Consecutivo = outVarProc.out_Consecutivo;
                row13.out_CantEnviada = outVarProc.out_CantEnviada;
                row13.CantEnviada = outVarProc.CantEnviada;
                row13.out_CantIngresar = outVarProc.out_CantIngresar;
                row13.CantIngresar = outVarProc.CantIngresar;
                row13.out_Temperatura = outVarProc.out_Temperatura;
                row13.out_Riesgo = outVarProc.out_Riesgo;
                row13.out_Muestra = outVarProc.out_Muestra;
                row13.out_Aprobado = outVarProc.out_Aprobado;
                row13.out_Estado = outVarProc.out_Estado;
                row13.out_Message = outVarProc.out_Message;
                row13.in_CodBarras = outVarProc.in_CodBarras;
                row13.out_CodBarras = outVarProc.out_CodBarras;
                row13.in_Cum = outVarProc.in_Cum;
                row13.out_Cum = outVarProc.out_Cum;
                row13.in_Invima = outVarProc.in_Invima;
                row13.Cantidad_ = outVarProc.Cantidad_;
                row13.CantEsperada = outVarProc.CantEsperada;
                row13.Lote_ = outVarProc.Lote_;
                row13.FVencimiento_ = outVarProc.FVencimiento_;
                row13.Restriccion_ = outVarProc.Restriccion_;
                row13.in_Defectos = outVarProc.in_Defectos;
                row13.Defectos = outVarProc.Defectos;
                row13.Temperatura_ = outVarProc.Temperatura_;
                row13.Nivel_Riesgo_ = outVarProc.Nivel_Riesgo_;
                row13.Tam_Muestra_ = outVarProc.Tam_Muestra_;
                row13.Aprobado_ = outVarProc.Aprobado_;
                row13.in_Contrato = outVarProc.in_Contrato;
                row13.Contrato_Id = outVarProc.Contrato_Id;
                row13.DContrato_Id_ = outVarProc.DContrato_Id_;
                row13.HDContrato_Id = outVarProc.HDContrato_Id;
                row13.Precio = outVarProc.Precio;
                row13.Iva = outVarProc.Iva;
                row13.VUnitario = outVarProc.VUnitario;
                row13.VUnitarioIva_ = outVarProc.VUnitarioIva_;
                row13.SubTotal_ = outVarProc.SubTotal_;
                row13.VTotalIva_ = outVarProc.VTotalIva_;
                row13.Total_ = outVarProc.Total_;
                row13.numeroFila = outVarProc.numeroFila;
                row13.TIPO_PRODUCTO = outVarProc.TIPO_PRODUCTO;
                row13.CODIGO_HOMIC = outVarProc.CODIGO_HOMIC;
                row13.Estado_ = outVarProc.Estado_;
                row13.Respuesta_ = outVarProc.Respuesta_;
	            row13.errorMessage = ope_tFilterRow_71.getErrorMsg();
      nb_line_reject_tFilterRow_71++;
    }

nb_line_tFilterRow_71++;

 


	tos_count_tFilterRow_71++;

/**
 * [tFilterRow_71 main ] stop
 */
	
	/**
	 * [tFilterRow_71 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_71";
	
	

 



/**
 * [tFilterRow_71 process_data_begin ] stop
 */
// Start of branch "row15"
if(row15 != null) { 



	
	/**
	 * [tMap_12 main ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row15"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_12 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_12 = false;
		boolean mainRowRejected_tMap_12 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_12__Struct Var = Var__tMap_12;// ###############################
        // ###############################
        // # Output tables

next_8 = null;


// # Output table : 'next_8'
next_8_tmp.numeroFila = row15.numeroFila ;
next_8_tmp.TIPO_PRODUCTO = row15.TIPO_PRODUCTO ;
next_8_tmp.CODIGO_BARRAS = row15.in_CodBarras ;
next_8_tmp.CUM = row15.in_Cum ;
next_8_tmp.INVIMA = row15.in_Invima ;
next_8_tmp.CODIGO_HOMIC = row15.CODIGO_HOMIC ;
next_8_tmp.CANTIDAD_ENVIADA = row15.Cantidad_;
next_8_tmp.CANTIDAD_INGRESAR = row15.CantEsperada;
next_8_tmp.LOTE = row15.Lote_ ;
next_8_tmp.FECHA_VENCIMIENTO = row15.FVencimiento_ ;
next_8_tmp.LEYENDA_DE_RESTRICCION = row15.Restriccion_ ;
next_8_tmp.DEFECTOS = row15.in_Defectos ;
next_8_tmp.TEMPERATURA = row15.Temperatura_ ;
next_8_tmp.NIVEL_DE_RIESGO = row15.Nivel_Riesgo_ ;
next_8_tmp.MUESTRA = row15.Tam_Muestra_ ;
next_8_tmp.APROBADO = row15.Aprobado_ ;
next_8_tmp.CONTRATO = row15.in_Contrato ;
next_8_tmp.ERROR = row15.out_Message ;
next_8 = next_8_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_12 = false;










 


	tos_count_tMap_12++;

/**
 * [tMap_12 main ] stop
 */
	
	/**
	 * [tMap_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 process_data_begin ] stop
 */
// Start of branch "next_8"
if(next_8 != null) { 



	
	/**
	 * [tHashOutput_2 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"next_8"
						
						);
					}
					



    
		next_8Struct oneRow_tHashOutput_2 = new next_8Struct();
				
					oneRow_tHashOutput_2.numeroFila = next_8.numeroFila;
					oneRow_tHashOutput_2.TIPO_PRODUCTO = next_8.TIPO_PRODUCTO;
					oneRow_tHashOutput_2.CODIGO_BARRAS = next_8.CODIGO_BARRAS;
					oneRow_tHashOutput_2.CUM = next_8.CUM;
					oneRow_tHashOutput_2.INVIMA = next_8.INVIMA;
					oneRow_tHashOutput_2.CODIGO_HOMIC = next_8.CODIGO_HOMIC;
					oneRow_tHashOutput_2.CANTIDAD_ENVIADA = next_8.CANTIDAD_ENVIADA;
					oneRow_tHashOutput_2.CANTIDAD_INGRESAR = next_8.CANTIDAD_INGRESAR;
					oneRow_tHashOutput_2.LOTE = next_8.LOTE;
					oneRow_tHashOutput_2.FECHA_VENCIMIENTO = next_8.FECHA_VENCIMIENTO;
					oneRow_tHashOutput_2.LEYENDA_DE_RESTRICCION = next_8.LEYENDA_DE_RESTRICCION;
					oneRow_tHashOutput_2.DEFECTOS = next_8.DEFECTOS;
					oneRow_tHashOutput_2.TEMPERATURA = next_8.TEMPERATURA;
					oneRow_tHashOutput_2.NIVEL_DE_RIESGO = next_8.NIVEL_DE_RIESGO;
					oneRow_tHashOutput_2.MUESTRA = next_8.MUESTRA;
					oneRow_tHashOutput_2.APROBADO = next_8.APROBADO;
					oneRow_tHashOutput_2.CONTRATO = next_8.CONTRATO;
					oneRow_tHashOutput_2.ERROR = next_8.ERROR;
		
        tHashFile_tHashOutput_2.put(oneRow_tHashOutput_2);
        nb_line_tHashOutput_2 ++;

 


	tos_count_tHashOutput_2++;

/**
 * [tHashOutput_2 main ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_end ] stop
 */

} // End of branch "next_8"




	
	/**
	 * [tMap_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 process_data_end ] stop
 */

} // End of branch "row15"




// Start of branch "row13"
if(row13 != null) { 



	
	/**
	 * [tOracleSP_4 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					

			// code for the argument 1 (Bodega_Id_) of type 'IN NUMERIC'
    					if (row13.Bodega_Id_ == null) {
    						statement_tOracleSP_4.setNull(1, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_4.setBigDecimal(1, row13.Bodega_Id_);
    					}
    					
			// code for the argument 2 (Contrato_Id) of type 'IN NUMERIC'
                        statement_tOracleSP_4.setBigDecimal(2, row13.Contrato_Id);
			// code for the argument 3 (Usuario_Id_) of type 'IN NUMERIC'
    					if (row13.Usuario_Id_ == null) {
    						statement_tOracleSP_4.setNull(3, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_4.setBigDecimal(3, row13.Usuario_Id_);
    					}
    					
			// code for the argument 4 (DContrato_Id_) of type 'IN NUMERIC'
                        statement_tOracleSP_4.setBigDecimal(4, row13.DContrato_Id_);
			// code for the argument 5 (Producto_Id_) of type 'IN NUMERIC'
    					if (row13.Producto_Id_ == null) {
    						statement_tOracleSP_4.setNull(5, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_4.setBigDecimal(5, row13.Producto_Id_);
    					}
    					
			// code for the argument 6 (Lote_) of type 'IN AUTOMAPPING'
    					if (row13.Lote_ == null) {
    						statement_tOracleSP_4.setNull(6, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(6, row13.Lote_);
    					}
    					
			// code for the argument 7 (FVencimiento_) of type 'IN AUTOMAPPING'
    					if (row13.FVencimiento_ == null) {
    						statement_tOracleSP_4.setNull(7, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(7, row13.FVencimiento_);
    					}
    					
			// code for the argument 8 (CantEnviada) of type 'IN NUMERIC'
    					if (row13.CantEnviada == null) {
    						statement_tOracleSP_4.setNull(8, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_4.setInt(8, row13.CantEnviada);
    					}
    					
			// code for the argument 9 (CantIngresar) of type 'IN NUMERIC'
    					if (row13.CantIngresar == null) {
    						statement_tOracleSP_4.setNull(9, java.sql.Types.INTEGER);
    					} else {
    					
                        statement_tOracleSP_4.setInt(9, row13.CantIngresar);
    					}
    					
			// code for the argument 10 (HDContrato_Id) of type 'IN NUMERIC'
                        statement_tOracleSP_4.setBigDecimal(10, row13.HDContrato_Id);
			// code for the argument 11 (Restriccion_) of type 'IN AUTOMAPPING'
    					if (row13.Restriccion_ == null) {
    						statement_tOracleSP_4.setNull(11, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(11, row13.Restriccion_);
    					}
    					
			// code for the argument 12 (Defectos) of type 'IN AUTOMAPPING'
    					if (row13.Defectos == null) {
    						statement_tOracleSP_4.setNull(12, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(12, row13.Defectos);
    					}
    					
			// code for the argument 13 (Temperatura_) of type 'IN AUTOMAPPING'
    					if (row13.Temperatura_ == null) {
    						statement_tOracleSP_4.setNull(13, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(13, row13.Temperatura_);
    					}
    					
			// code for the argument 14 (Nivel_Riesgo_) of type 'IN NUMERIC'
    					if (row13.Nivel_Riesgo_ == null) {
    						statement_tOracleSP_4.setNull(14, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(14, row13.Nivel_Riesgo_);
    					}
    					
			// code for the argument 15 (Aprobado_) of type 'IN AUTOMAPPING'
    					if (row13.Aprobado_ == null) {
    						statement_tOracleSP_4.setNull(15, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(15, row13.Aprobado_);
    					}
    					
			// code for the argument 16 (Tam_Muestra_) of type 'IN NUMERIC'
    					if (row13.Tam_Muestra_ == null) {
    						statement_tOracleSP_4.setNull(16, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_4.setString(16, row13.Tam_Muestra_);
    					}
    					
			// code for the argument 17 (VUnitario) of type 'IN NUMERIC'
    					if (row13.VUnitario == null) {
    						statement_tOracleSP_4.setNull(17, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_4.setBigDecimal(17, row13.VUnitario);
    					}
    					
			// code for the argument 18 (VUnitarioIva_) of type 'IN NUMERIC'
    					if (row13.VUnitarioIva_ == null) {
    						statement_tOracleSP_4.setNull(18, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_4.setBigDecimal(18, row13.VUnitarioIva_);
    					}
    					
			// code for the argument 19 (SubTotal_) of type 'IN NUMERIC'
    					if (row13.SubTotal_ == null) {
    						statement_tOracleSP_4.setNull(19, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_4.setBigDecimal(19, row13.SubTotal_);
    					}
    					
			// code for the argument 20 (VTotalIva_) of type 'IN NUMERIC'
    					if (row13.VTotalIva_ == null) {
    						statement_tOracleSP_4.setNull(20, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_4.setBigDecimal(20, row13.VTotalIva_);
    					}
    					
			// code for the argument 21 (Total_) of type 'IN NUMERIC'
    					if (row13.Total_ == null) {
    						statement_tOracleSP_4.setNull(21, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_4.setBigDecimal(21, row13.Total_);
    					}
    					
			// code for the argument 22 (Inventario_Id_) of type 'OUT NUMERIC'
					statement_tOracleSP_4.registerOutParameter(22, java.sql.Types.NUMERIC);
			// code for the argument 23 (PreCantidad_) of type 'OUT NUMERIC'
					statement_tOracleSP_4.registerOutParameter(23, java.sql.Types.NUMERIC);
			// code for the argument 24 (PostCantidad_) of type 'OUT NUMERIC'
					statement_tOracleSP_4.registerOutParameter(24, java.sql.Types.NUMERIC);
			// code for the argument 25 (TMovimiento_Id_) of type 'INOUT NUMERIC'
    					if (row13.TMovimiento_Id_ == null) {
    						statement_tOracleSP_4.setNull(25, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_4.setBigDecimal(25, row13.TMovimiento_Id_);
    					}
    					
					statement_tOracleSP_4.registerOutParameter(25, java.sql.Types.NUMERIC);
			// code for the argument 26 (Movimiento_Id_) of type 'INOUT NUMERIC'
    					if (row13.Movimiento_Id_ == null) {
    						statement_tOracleSP_4.setNull(26, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_4.setBigDecimal(26, row13.Movimiento_Id_);
    					}
    					
					statement_tOracleSP_4.registerOutParameter(26, java.sql.Types.NUMERIC);
			// code for the argument 27 (Estado_) of type 'OUT AUTOMAPPING'
					statement_tOracleSP_4.registerOutParameter(27, java.sql.Types.VARCHAR);
			// code for the argument 28 (Respuesta_) of type 'OUT AUTOMAPPING'
					statement_tOracleSP_4.registerOutParameter(28, java.sql.Types.VARCHAR);
		statement_tOracleSP_4.execute();
		
									row20.TMovimiento_Id_ = statement_tOracleSP_4.getBigDecimal(25);
									
									if (statement_tOracleSP_4.wasNull()) {
										row20.TMovimiento_Id_ = null;
									}
									
									row20.Movimiento_Id_ = statement_tOracleSP_4.getBigDecimal(26);
									
									if (statement_tOracleSP_4.wasNull()) {
										row20.Movimiento_Id_ = null;
									}
									
								row20.Bodega_Id_ = row13.Bodega_Id_;
								
								row20.Usuario_Id_ = row13.Usuario_Id_;
								
									row20.Inventario_Id_ = statement_tOracleSP_4.getBigDecimal(22);
									
									if (statement_tOracleSP_4.wasNull()) {
										row20.Inventario_Id_ = null;
									}
									
									row20.PreCantidad_ = statement_tOracleSP_4.getBigDecimal(23);
									
									if (statement_tOracleSP_4.wasNull()) {
										row20.PreCantidad_ = null;
									}
									
									row20.PostCantidad_ = statement_tOracleSP_4.getBigDecimal(24);
									
									if (statement_tOracleSP_4.wasNull()) {
										row20.PostCantidad_ = null;
									}
									
								row20.Producto_Id_ = row13.Producto_Id_;
								
										row20.out_Expediente = row13.out_Expediente;
										
										row20.out_Consecutivo = row13.out_Consecutivo;
										
										row20.out_CantEnviada = row13.out_CantEnviada;
										
								row20.CantEnviada = row13.CantEnviada;
								
										row20.out_CantIngresar = row13.out_CantIngresar;
										
								row20.CantIngresar = row13.CantIngresar;
								
										row20.out_Temperatura = row13.out_Temperatura;
										
										row20.out_Riesgo = row13.out_Riesgo;
										
										row20.out_Muestra = row13.out_Muestra;
										
										row20.out_Aprobado = row13.out_Aprobado;
										
										row20.out_Estado = row13.out_Estado;
										
										row20.out_Message = row13.out_Message;
										
										row20.in_CodBarras = row13.in_CodBarras;
										
										row20.out_CodBarras = row13.out_CodBarras;
										
										row20.in_Cum = row13.in_Cum;
										
										row20.out_Cum = row13.out_Cum;
										
										row20.in_Invima = row13.in_Invima;
										
										row20.Cantidad_ = row13.Cantidad_;
										
										row20.CantEsperada = row13.CantEsperada;
										
								row20.Lote_ = row13.Lote_;
								
								row20.FVencimiento_ = row13.FVencimiento_;
								
								row20.Restriccion_ = row13.Restriccion_;
								
										row20.in_Defectos = row13.in_Defectos;
										
								row20.Defectos = row13.Defectos;
								
								row20.Temperatura_ = row13.Temperatura_;
								
								row20.Nivel_Riesgo_ = row13.Nivel_Riesgo_;
								
								row20.Tam_Muestra_ = row13.Tam_Muestra_;
								
								row20.Aprobado_ = row13.Aprobado_;
								
										row20.in_Contrato = row13.in_Contrato;
										
								row20.Contrato_Id = row13.Contrato_Id;
								
								row20.DContrato_Id_ = row13.DContrato_Id_;
								
								row20.HDContrato_Id = row13.HDContrato_Id;
								
										row20.Precio = row13.Precio;
										
										row20.Iva = row13.Iva;
										
								row20.VUnitario = row13.VUnitario;
								
								row20.VUnitarioIva_ = row13.VUnitarioIva_;
								
								row20.SubTotal_ = row13.SubTotal_;
								
								row20.VTotalIva_ = row13.VTotalIva_;
								
								row20.Total_ = row13.Total_;
								
										row20.numeroFila = row13.numeroFila;
										
										row20.TIPO_PRODUCTO = row13.TIPO_PRODUCTO;
										
										row20.CODIGO_HOMIC = row13.CODIGO_HOMIC;
										
									row20.Estado_ = statement_tOracleSP_4.getString(27);
									
									if (statement_tOracleSP_4.wasNull()) {
										row20.Estado_ = null;
									}
									
									row20.Respuesta_ = statement_tOracleSP_4.getString(28);
									
									if (statement_tOracleSP_4.wasNull()) {
										row20.Respuesta_ = null;
									}
									
										row20.errorMessage = row13.errorMessage;
										

 


	tos_count_tOracleSP_4++;

/**
 * [tOracleSP_4 main ] stop
 */
	
	/**
	 * [tOracleSP_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	

 



/**
 * [tOracleSP_4 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_7 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row20"
						
						);
					}
					

    //Code generate according to input schema and output schema
row14.TMovimiento_Id_ = row20.TMovimiento_Id_;
row14.Movimiento_Id_ = row20.Movimiento_Id_;
row14.Bodega_Id_ = row20.Bodega_Id_;
row14.Usuario_Id_ = row20.Usuario_Id_;
row14.Inventario_Id_ = row20.Inventario_Id_;
row14.PreCantidad_ = row20.PreCantidad_;
row14.PostCantidad_ = row20.PostCantidad_;
row14.Producto_Id_ = row20.Producto_Id_;
row14.out_Expediente = row20.out_Expediente;
row14.out_Consecutivo = row20.out_Consecutivo;
row14.out_CantEnviada = row20.out_CantEnviada;
row14.CantEnviada = row20.CantEnviada;
row14.out_CantIngresar = row20.out_CantIngresar;
row14.CantIngresar = row20.CantIngresar;
row14.out_Temperatura = row20.out_Temperatura;
row14.out_Riesgo = row20.out_Riesgo;
row14.out_Muestra = row20.out_Muestra;
row14.out_Aprobado = row20.out_Aprobado;
row14.out_Estado = row20.out_Estado;
row14.out_Message = row20.out_Message;
row14.in_CodBarras = row20.in_CodBarras;
row14.out_CodBarras = row20.out_CodBarras;
row14.in_Cum = row20.in_Cum;
row14.out_Cum = row20.out_Cum;
row14.in_Invima = row20.in_Invima;
row14.Cantidad_ = row20.Cantidad_;
row14.CantEsperada = row20.CantEsperada;
row14.Lote_ = row20.Lote_;
row14.FVencimiento_ = row20.FVencimiento_;
row14.Restriccion_ = row20.Restriccion_;
row14.in_Defectos = row20.in_Defectos;
row14.Defectos = row20.Defectos;
row14.Temperatura_ = row20.Temperatura_;
row14.Nivel_Riesgo_ = row20.Nivel_Riesgo_;
row14.Tam_Muestra_ = row20.Tam_Muestra_;
row14.Aprobado_ = row20.Aprobado_;
row14.in_Contrato = row20.in_Contrato;
row14.Contrato_Id = row20.Contrato_Id;
row14.DContrato_Id_ = row20.DContrato_Id_;
row14.HDContrato_Id = row20.HDContrato_Id;
row14.Precio = row20.Precio;
row14.Iva = row20.Iva;
row14.VUnitario = row20.VUnitario;
row14.VUnitarioIva_ = row20.VUnitarioIva_;
row14.SubTotal_ = row20.SubTotal_;
row14.VTotalIva_ = row20.VTotalIva_;
row14.Total_ = row20.Total_;
row14.numeroFila = row20.numeroFila;
row14.TIPO_PRODUCTO = row20.TIPO_PRODUCTO;
row14.CODIGO_HOMIC = row20.CODIGO_HOMIC;
row14.Estado_ = row20.Estado_;
row14.Respuesta_ = row20.Respuesta_;
row14.errorMessage = row20.errorMessage;


if(context.movimiento_id != null){

	context.tmovimiento_id = row14.TMovimiento_Id_;
	context.movimiento_id = row14.Movimiento_Id_;
}

    nb_line_tJavaRow_7++;   

 


	tos_count_tJavaRow_7++;

/**
 * [tJavaRow_7 main ] stop
 */
	
	/**
	 * [tJavaRow_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_54 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_54";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					

          row32 = null;
    Operator_tFilterRow_54 ope_tFilterRow_54 = new Operator_tFilterRow_54("&&");
            ope_tFilterRow_54.matches((row14.Estado_ == null? false : row14.Estado_.compareTo("ErróneoPL") == 0)
                           , "Estado_.compareTo(\"ErróneoPL\") == 0 failed");
    
    if (ope_tFilterRow_54.getMatchFlag()) {
              if(row32 == null){ 
                row32 = new row32Struct();
              }
               row32.TMovimiento_Id_ = row14.TMovimiento_Id_;
               row32.Movimiento_Id_ = row14.Movimiento_Id_;
               row32.Bodega_Id_ = row14.Bodega_Id_;
               row32.Usuario_Id_ = row14.Usuario_Id_;
               row32.Inventario_Id_ = row14.Inventario_Id_;
               row32.PreCantidad_ = row14.PreCantidad_;
               row32.PostCantidad_ = row14.PostCantidad_;
               row32.Producto_Id_ = row14.Producto_Id_;
               row32.out_Expediente = row14.out_Expediente;
               row32.out_Consecutivo = row14.out_Consecutivo;
               row32.out_CantEnviada = row14.out_CantEnviada;
               row32.CantEnviada = row14.CantEnviada;
               row32.out_CantIngresar = row14.out_CantIngresar;
               row32.CantIngresar = row14.CantIngresar;
               row32.out_Temperatura = row14.out_Temperatura;
               row32.out_Riesgo = row14.out_Riesgo;
               row32.out_Muestra = row14.out_Muestra;
               row32.out_Aprobado = row14.out_Aprobado;
               row32.out_Estado = row14.out_Estado;
               row32.out_Message = row14.out_Message;
               row32.in_CodBarras = row14.in_CodBarras;
               row32.out_CodBarras = row14.out_CodBarras;
               row32.in_Cum = row14.in_Cum;
               row32.out_Cum = row14.out_Cum;
               row32.in_Invima = row14.in_Invima;
               row32.Cantidad_ = row14.Cantidad_;
               row32.CantEsperada = row14.CantEsperada;
               row32.Lote_ = row14.Lote_;
               row32.FVencimiento_ = row14.FVencimiento_;
               row32.Restriccion_ = row14.Restriccion_;
               row32.in_Defectos = row14.in_Defectos;
               row32.Defectos = row14.Defectos;
               row32.Temperatura_ = row14.Temperatura_;
               row32.Nivel_Riesgo_ = row14.Nivel_Riesgo_;
               row32.Tam_Muestra_ = row14.Tam_Muestra_;
               row32.Aprobado_ = row14.Aprobado_;
               row32.in_Contrato = row14.in_Contrato;
               row32.Contrato_Id = row14.Contrato_Id;
               row32.DContrato_Id_ = row14.DContrato_Id_;
               row32.HDContrato_Id = row14.HDContrato_Id;
               row32.Precio = row14.Precio;
               row32.Iva = row14.Iva;
               row32.VUnitario = row14.VUnitario;
               row32.VUnitarioIva_ = row14.VUnitarioIva_;
               row32.SubTotal_ = row14.SubTotal_;
               row32.VTotalIva_ = row14.VTotalIva_;
               row32.Total_ = row14.Total_;
               row32.numeroFila = row14.numeroFila;
               row32.TIPO_PRODUCTO = row14.TIPO_PRODUCTO;
               row32.CODIGO_HOMIC = row14.CODIGO_HOMIC;
               row32.Estado_ = row14.Estado_;
               row32.Respuesta_ = row14.Respuesta_;
               row32.errorMessage = row14.errorMessage;    
      nb_line_ok_tFilterRow_54++;
    } else {
      nb_line_reject_tFilterRow_54++;
    }

nb_line_tFilterRow_54++;

 


	tos_count_tFilterRow_54++;

/**
 * [tFilterRow_54 main ] stop
 */
	
	/**
	 * [tFilterRow_54 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_54";
	
	

 



/**
 * [tFilterRow_54 process_data_begin ] stop
 */
// Start of branch "row32"
if(row32 != null) { 



	
	/**
	 * [tMap_13 main ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row32"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_13 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_13 = false;
		boolean mainRowRejected_tMap_13 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_13__Struct Var = Var__tMap_13;// ###############################
        // ###############################
        // # Output tables

next_7 = null;


// # Output table : 'next_7'
next_7_tmp.numeroFila = row32.numeroFila ;
next_7_tmp.TIPO_PRODUCTO = row32.TIPO_PRODUCTO ;
next_7_tmp.CODIGO_BARRAS = row32.in_CodBarras ;
next_7_tmp.CUM = row32.in_Cum ;
next_7_tmp.INVIMA = row32.in_Invima ;
next_7_tmp.CODIGO_HOMIC = row32.CODIGO_HOMIC ;
next_7_tmp.CANTIDAD_ENVIADA = row32.Cantidad_;
next_7_tmp.CANTIDAD_INGRESAR = row32.CantEsperada;
next_7_tmp.LOTE = row32.Lote_ ;
next_7_tmp.FECHA_VENCIMIENTO = row32.FVencimiento_ ;
next_7_tmp.LEYENDA_DE_RESTRICCION = row32.Restriccion_ ;
next_7_tmp.DEFECTOS = row32.in_Defectos ;
next_7_tmp.TEMPERATURA = row32.Temperatura_ ;
next_7_tmp.NIVEL_DE_RIESGO = row32.Nivel_Riesgo_ ;
next_7_tmp.MUESTRA = row32.Tam_Muestra_ ;
next_7_tmp.APROBADO = row32.Aprobado_ ;
next_7_tmp.CONTRATO = row32.in_Contrato ;
next_7_tmp.ERROR = row32.Respuesta_ ;
next_7 = next_7_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_13 = false;










 


	tos_count_tMap_13++;

/**
 * [tMap_13 main ] stop
 */
	
	/**
	 * [tMap_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 process_data_begin ] stop
 */
// Start of branch "next_7"
if(next_7 != null) { 



	
	/**
	 * [tUnite_1 main ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"next_7"
									
							);
						}
						
//////////
 

// for output
			row17 = new row17Struct();
								
			row17.numeroFila = next_7.numeroFila;								
			row17.TIPO_PRODUCTO = next_7.TIPO_PRODUCTO;								
			row17.CODIGO_BARRAS = next_7.CODIGO_BARRAS;								
			row17.CUM = next_7.CUM;								
			row17.INVIMA = next_7.INVIMA;								
			row17.CODIGO_HOMIC = next_7.CODIGO_HOMIC;								
			row17.CANTIDAD_ENVIADA = next_7.CANTIDAD_ENVIADA;								
			row17.CANTIDAD_INGRESAR = next_7.CANTIDAD_INGRESAR;								
			row17.LOTE = next_7.LOTE;								
			row17.FECHA_VENCIMIENTO = next_7.FECHA_VENCIMIENTO;								
			row17.LEYENDA_DE_RESTRICCION = next_7.LEYENDA_DE_RESTRICCION;								
			row17.DEFECTOS = next_7.DEFECTOS;								
			row17.TEMPERATURA = next_7.TEMPERATURA;								
			row17.NIVEL_DE_RIESGO = next_7.NIVEL_DE_RIESGO;								
			row17.MUESTRA = next_7.MUESTRA;								
			row17.APROBADO = next_7.APROBADO;								
			row17.CONTRATO = next_7.CONTRATO;								
			row17.ERROR = next_7.ERROR;			

			nb_line_tUnite_1++;

//////////
 


	tos_count_tUnite_1++;

/**
 * [tUnite_1 main ] stop
 */
	
	/**
	 * [tUnite_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

outConteoErroneo = null;


// # Output table : 'outConteoErroneo'
outConteoErroneo_tmp.numeroFila = row17.numeroFila ;
outConteoErroneo_tmp.TIPO_PRODUCTO = row17.TIPO_PRODUCTO ;
outConteoErroneo_tmp.CODIGO_BARRAS = row17.CODIGO_BARRAS ;
outConteoErroneo_tmp.CUM = row17.CUM ;
outConteoErroneo_tmp.INVIMA = row17.INVIMA ;
outConteoErroneo_tmp.CODIGO_HOMIC = row17.CODIGO_HOMIC ;
outConteoErroneo_tmp.CANTIDAD_ENVIADA = row17.CANTIDAD_ENVIADA ;
outConteoErroneo_tmp.CANTIDAD_INGRESAR = row17.CANTIDAD_INGRESAR ;
outConteoErroneo_tmp.LOTE = row17.LOTE ;
outConteoErroneo_tmp.FECHA_VENCIMIENTO = row17.FECHA_VENCIMIENTO ;
outConteoErroneo_tmp.LEYENDA_DE_RESTRICCION = row17.LEYENDA_DE_RESTRICCION ;
outConteoErroneo_tmp.DEFECTOS = row17.DEFECTOS ;
outConteoErroneo_tmp.TEMPERATURA = row17.TEMPERATURA ;
outConteoErroneo_tmp.NIVEL_DE_RIESGO = row17.NIVEL_DE_RIESGO ;
outConteoErroneo_tmp.MUESTRA = row17.MUESTRA ;
outConteoErroneo_tmp.APROBADO = row17.APROBADO ;
outConteoErroneo_tmp.CONTRATO = row17.CONTRATO ;
outConteoErroneo_tmp.ERROR = row17.ERROR ;
outConteoErroneo_tmp.conteoErroneos = null;
outConteoErroneo = outConteoErroneo_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "outConteoErroneo"
if(outConteoErroneo != null) { 



	
	/**
	 * [tJavaFlex_1 main ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"outConteoErroneo"
						
						);
					}
					


	        				row18.numeroFila = outConteoErroneo.numeroFila;
	        				row18.TIPO_PRODUCTO = outConteoErroneo.TIPO_PRODUCTO;
	        				row18.CODIGO_BARRAS = outConteoErroneo.CODIGO_BARRAS;
	        				row18.CUM = outConteoErroneo.CUM;
	        				row18.INVIMA = outConteoErroneo.INVIMA;
	        				row18.CODIGO_HOMIC = outConteoErroneo.CODIGO_HOMIC;
	        				row18.CANTIDAD_ENVIADA = outConteoErroneo.CANTIDAD_ENVIADA;
	        				row18.CANTIDAD_INGRESAR = outConteoErroneo.CANTIDAD_INGRESAR;
	        				row18.LOTE = outConteoErroneo.LOTE;
	        				row18.FECHA_VENCIMIENTO = outConteoErroneo.FECHA_VENCIMIENTO;
	        				row18.LEYENDA_DE_RESTRICCION = outConteoErroneo.LEYENDA_DE_RESTRICCION;
	        				row18.DEFECTOS = outConteoErroneo.DEFECTOS;
	        				row18.TEMPERATURA = outConteoErroneo.TEMPERATURA;
	        				row18.NIVEL_DE_RIESGO = outConteoErroneo.NIVEL_DE_RIESGO;
	        				row18.MUESTRA = outConteoErroneo.MUESTRA;
	        				row18.APROBADO = outConteoErroneo.APROBADO;
	        				row18.CONTRATO = outConteoErroneo.CONTRATO;
	        				row18.ERROR = outConteoErroneo.ERROR;
	        				row18.conteoErroneos = outConteoErroneo.conteoErroneos;

// here is the main part of the component,
// a piece of code executed in the row
// loop
outConteoErroneo.conteoErroneos = count;
count +=1; 

 


	tos_count_tJavaFlex_1++;

/**
 * [tJavaFlex_1 main ] stop
 */
	
	/**
	 * [tJavaFlex_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";
	
	

 



/**
 * [tJavaFlex_1 process_data_begin ] stop
 */

	
	/**
	 * [tSortRow_1_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row18"
						
						);
					}
					



	Comparablerow18Struct arrayRowtSortRow_1_SortOut = new Comparablerow18Struct();

	arrayRowtSortRow_1_SortOut.numeroFila = row18.numeroFila;
	arrayRowtSortRow_1_SortOut.TIPO_PRODUCTO = row18.TIPO_PRODUCTO;
	arrayRowtSortRow_1_SortOut.CODIGO_BARRAS = row18.CODIGO_BARRAS;
	arrayRowtSortRow_1_SortOut.CUM = row18.CUM;
	arrayRowtSortRow_1_SortOut.INVIMA = row18.INVIMA;
	arrayRowtSortRow_1_SortOut.CODIGO_HOMIC = row18.CODIGO_HOMIC;
	arrayRowtSortRow_1_SortOut.CANTIDAD_ENVIADA = row18.CANTIDAD_ENVIADA;
	arrayRowtSortRow_1_SortOut.CANTIDAD_INGRESAR = row18.CANTIDAD_INGRESAR;
	arrayRowtSortRow_1_SortOut.LOTE = row18.LOTE;
	arrayRowtSortRow_1_SortOut.FECHA_VENCIMIENTO = row18.FECHA_VENCIMIENTO;
	arrayRowtSortRow_1_SortOut.LEYENDA_DE_RESTRICCION = row18.LEYENDA_DE_RESTRICCION;
	arrayRowtSortRow_1_SortOut.DEFECTOS = row18.DEFECTOS;
	arrayRowtSortRow_1_SortOut.TEMPERATURA = row18.TEMPERATURA;
	arrayRowtSortRow_1_SortOut.NIVEL_DE_RIESGO = row18.NIVEL_DE_RIESGO;
	arrayRowtSortRow_1_SortOut.MUESTRA = row18.MUESTRA;
	arrayRowtSortRow_1_SortOut.APROBADO = row18.APROBADO;
	arrayRowtSortRow_1_SortOut.CONTRATO = row18.CONTRATO;
	arrayRowtSortRow_1_SortOut.ERROR = row18.ERROR;
	arrayRowtSortRow_1_SortOut.conteoErroneos = row18.conteoErroneos;	
	list_tSortRow_1_SortOut.add(arrayRowtSortRow_1_SortOut);

 


	tos_count_tSortRow_1_SortOut++;

/**
 * [tSortRow_1_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_1_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_1_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut process_data_end ] stop
 */



	
	/**
	 * [tJavaFlex_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";
	
	

 



/**
 * [tJavaFlex_1 process_data_end ] stop
 */

} // End of branch "outConteoErroneo"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tUnite_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 process_data_end ] stop
 */

} // End of branch "next_7"




	
	/**
	 * [tMap_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 process_data_end ] stop
 */

} // End of branch "row32"




	
	/**
	 * [tFilterRow_54 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_54";
	
	

 



/**
 * [tFilterRow_54 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 process_data_end ] stop
 */



	
	/**
	 * [tOracleSP_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	

 



/**
 * [tOracleSP_4 process_data_end ] stop
 */

} // End of branch "row13"




	
	/**
	 * [tFilterRow_71 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_71";
	
	

 



/**
 * [tFilterRow_71 process_data_end ] stop
 */

} // End of branch "outVarProc"




	
	/**
	 * [tMap_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_end ] stop
 */

} // End of branch "outProductoContrato"




	
	/**
	 * [tMap_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_end ] stop
 */



	
	/**
	 * [tOracleSP_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	

 



/**
 * [tOracleSP_3 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_end ] stop
 */

} // End of branch "outContratoId"




	
	/**
	 * [tMap_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_end ] stop
 */

} // End of branch "next_1"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */

} // End of branch "row31"




	
	/**
	 * [tFilterRow_44 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_44";
	
	

 



/**
 * [tFilterRow_44 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_1 end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	
    

		
			nb_line_tHashInput_1++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargaInventario_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_1_NB_LINE", nb_line_tHashInput_1);       

 

ok_Hash.put("tHashInput_1", true);
end_Hash.put("tHashInput_1", System.currentTimeMillis());




/**
 * [tHashInput_1 end ] stop
 */

	
	/**
	 * [tFilterRow_44 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_44";
	
	
    globalMap.put("tFilterRow_44_NB_LINE", nb_line_tFilterRow_44);
    globalMap.put("tFilterRow_44_NB_LINE_OK", nb_line_ok_tFilterRow_44);
    globalMap.put("tFilterRow_44_NB_LINE_REJECT", nb_line_reject_tFilterRow_44);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row30");
			  	}
			  	
 

ok_Hash.put("tFilterRow_44", true);
end_Hash.put("tFilterRow_44", System.currentTimeMillis());




/**
 * [tFilterRow_44 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row31");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tJavaRow_4 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

globalMap.put("tJavaRow_4_NB_LINE",nb_line_tJavaRow_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"next_1");
			  	}
			  	
 

ok_Hash.put("tJavaRow_4", true);
end_Hash.put("tJavaRow_4", System.currentTimeMillis());




/**
 * [tJavaRow_4 end ] stop
 */

	
	/**
	 * [tMap_8 end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row8 != null) {
						tHash_Lookup_row8.endGet();
					}
					globalMap.remove( "tHash_Lookup_row8" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tMap_8", true);
end_Hash.put("tMap_8", System.currentTimeMillis());




/**
 * [tMap_8 end ] stop
 */

	
	/**
	 * [tJavaRow_6 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

globalMap.put("tJavaRow_6_NB_LINE",nb_line_tJavaRow_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"outContratoId");
			  	}
			  	
 

ok_Hash.put("tJavaRow_6", true);
end_Hash.put("tJavaRow_6", System.currentTimeMillis());




/**
 * [tJavaRow_6 end ] stop
 */

	
	/**
	 * [tOracleSP_3 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	


	statement_tOracleSP_3.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tOracleSP_3", true);
end_Hash.put("tOracleSP_3", System.currentTimeMillis());




/**
 * [tOracleSP_3 end ] stop
 */

	
	/**
	 * [tJavaRow_9 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

globalMap.put("tJavaRow_9_NB_LINE",nb_line_tJavaRow_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tJavaRow_9", true);
end_Hash.put("tJavaRow_9", System.currentTimeMillis());




/**
 * [tJavaRow_9 end ] stop
 */

	
	/**
	 * [tMap_9 end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row11 != null) {
						tHash_Lookup_row11.endGet();
					}
					globalMap.remove( "tHash_Lookup_row11" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tMap_9", true);
end_Hash.put("tMap_9", System.currentTimeMillis());




/**
 * [tMap_9 end ] stop
 */

	
	/**
	 * [tJavaRow_2 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

globalMap.put("tJavaRow_2_NB_LINE",nb_line_tJavaRow_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"outProductoContrato");
			  	}
			  	
 

ok_Hash.put("tJavaRow_2", true);
end_Hash.put("tJavaRow_2", System.currentTimeMillis());




/**
 * [tJavaRow_2 end ] stop
 */

	
	/**
	 * [tMap_11 end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tMap_11", true);
end_Hash.put("tMap_11", System.currentTimeMillis());




/**
 * [tMap_11 end ] stop
 */

	
	/**
	 * [tFilterRow_71 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_71";
	
	
    globalMap.put("tFilterRow_71_NB_LINE", nb_line_tFilterRow_71);
    globalMap.put("tFilterRow_71_NB_LINE_OK", nb_line_ok_tFilterRow_71);
    globalMap.put("tFilterRow_71_NB_LINE_REJECT", nb_line_reject_tFilterRow_71);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"outVarProc");
			  	}
			  	
 

ok_Hash.put("tFilterRow_71", true);
end_Hash.put("tFilterRow_71", System.currentTimeMillis());




/**
 * [tFilterRow_71 end ] stop
 */

	
	/**
	 * [tMap_12 end ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tMap_12", true);
end_Hash.put("tMap_12", System.currentTimeMillis());




/**
 * [tMap_12 end ] stop
 */

	
	/**
	 * [tHashOutput_2 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
globalMap.put("tHashOutput_2_NB_LINE", nb_line_tHashOutput_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"next_8");
			  	}
			  	
 

ok_Hash.put("tHashOutput_2", true);
end_Hash.put("tHashOutput_2", System.currentTimeMillis());




/**
 * [tHashOutput_2 end ] stop
 */







	
	/**
	 * [tOracleSP_4 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	


	statement_tOracleSP_4.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tOracleSP_4", true);
end_Hash.put("tOracleSP_4", System.currentTimeMillis());




/**
 * [tOracleSP_4 end ] stop
 */

	
	/**
	 * [tJavaRow_7 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

globalMap.put("tJavaRow_7_NB_LINE",nb_line_tJavaRow_7);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row20");
			  	}
			  	
 

ok_Hash.put("tJavaRow_7", true);
end_Hash.put("tJavaRow_7", System.currentTimeMillis());




/**
 * [tJavaRow_7 end ] stop
 */

	
	/**
	 * [tFilterRow_54 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_54";
	
	
    globalMap.put("tFilterRow_54_NB_LINE", nb_line_tFilterRow_54);
    globalMap.put("tFilterRow_54_NB_LINE_OK", nb_line_ok_tFilterRow_54);
    globalMap.put("tFilterRow_54_NB_LINE_REJECT", nb_line_reject_tFilterRow_54);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tFilterRow_54", true);
end_Hash.put("tFilterRow_54", System.currentTimeMillis());




/**
 * [tFilterRow_54 end ] stop
 */

	
	/**
	 * [tMap_13 end ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row32");
			  	}
			  	
 

ok_Hash.put("tMap_13", true);
end_Hash.put("tMap_13", System.currentTimeMillis());




/**
 * [tMap_13 end ] stop
 */













































	
	/**
	 * [tHashInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_2", false);
		start_Hash.put("tHashInput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_2";
	
	
		int tos_count_tHashInput_2 = 0;
		


int nb_line_tHashInput_2 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<next_8Struct> tHashFile_tHashInput_2 = mf_tHashInput_2.getAdvancedMemoryHashFile("tHashFile_CargaInventario_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_2==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<next_8Struct> iterator_tHashInput_2 = tHashFile_tHashInput_2.iterator();
while (iterator_tHashInput_2.hasNext()) {
    next_8Struct next_tHashInput_2 = iterator_tHashInput_2.next();

	row16.numeroFila = next_tHashInput_2.numeroFila;
	row16.TIPO_PRODUCTO = next_tHashInput_2.TIPO_PRODUCTO;
	row16.CODIGO_BARRAS = next_tHashInput_2.CODIGO_BARRAS;
	row16.CUM = next_tHashInput_2.CUM;
	row16.INVIMA = next_tHashInput_2.INVIMA;
	row16.CODIGO_HOMIC = next_tHashInput_2.CODIGO_HOMIC;
	row16.CANTIDAD_ENVIADA = next_tHashInput_2.CANTIDAD_ENVIADA;
	row16.CANTIDAD_INGRESAR = next_tHashInput_2.CANTIDAD_INGRESAR;
	row16.LOTE = next_tHashInput_2.LOTE;
	row16.FECHA_VENCIMIENTO = next_tHashInput_2.FECHA_VENCIMIENTO;
	row16.LEYENDA_DE_RESTRICCION = next_tHashInput_2.LEYENDA_DE_RESTRICCION;
	row16.DEFECTOS = next_tHashInput_2.DEFECTOS;
	row16.TEMPERATURA = next_tHashInput_2.TEMPERATURA;
	row16.NIVEL_DE_RIESGO = next_tHashInput_2.NIVEL_DE_RIESGO;
	row16.MUESTRA = next_tHashInput_2.MUESTRA;
	row16.APROBADO = next_tHashInput_2.APROBADO;
	row16.CONTRATO = next_tHashInput_2.CONTRATO;
	row16.ERROR = next_tHashInput_2.ERROR;

 



/**
 * [tHashInput_2 begin ] stop
 */
	
	/**
	 * [tHashInput_2 main ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 


	tos_count_tHashInput_2++;

/**
 * [tHashInput_2 main ] stop
 */
	
	/**
	 * [tHashInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tUnite_1 main ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"row16"
									
							);
						}
						
//////////
 

// for output
			row17 = new row17Struct();
								
			row17.numeroFila = row16.numeroFila;								
			row17.TIPO_PRODUCTO = row16.TIPO_PRODUCTO;								
			row17.CODIGO_BARRAS = row16.CODIGO_BARRAS;								
			row17.CUM = row16.CUM;								
			row17.INVIMA = row16.INVIMA;								
			row17.CODIGO_HOMIC = row16.CODIGO_HOMIC;								
			row17.CANTIDAD_ENVIADA = row16.CANTIDAD_ENVIADA;								
			row17.CANTIDAD_INGRESAR = row16.CANTIDAD_INGRESAR;								
			row17.LOTE = row16.LOTE;								
			row17.FECHA_VENCIMIENTO = row16.FECHA_VENCIMIENTO;								
			row17.LEYENDA_DE_RESTRICCION = row16.LEYENDA_DE_RESTRICCION;								
			row17.DEFECTOS = row16.DEFECTOS;								
			row17.TEMPERATURA = row16.TEMPERATURA;								
			row17.NIVEL_DE_RIESGO = row16.NIVEL_DE_RIESGO;								
			row17.MUESTRA = row16.MUESTRA;								
			row17.APROBADO = row16.APROBADO;								
			row17.CONTRATO = row16.CONTRATO;								
			row17.ERROR = row16.ERROR;			

			nb_line_tUnite_1++;

//////////
 


	tos_count_tUnite_1++;

/**
 * [tUnite_1 main ] stop
 */
	
	/**
	 * [tUnite_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

outConteoErroneo = null;


// # Output table : 'outConteoErroneo'
outConteoErroneo_tmp.numeroFila = row17.numeroFila ;
outConteoErroneo_tmp.TIPO_PRODUCTO = row17.TIPO_PRODUCTO ;
outConteoErroneo_tmp.CODIGO_BARRAS = row17.CODIGO_BARRAS ;
outConteoErroneo_tmp.CUM = row17.CUM ;
outConteoErroneo_tmp.INVIMA = row17.INVIMA ;
outConteoErroneo_tmp.CODIGO_HOMIC = row17.CODIGO_HOMIC ;
outConteoErroneo_tmp.CANTIDAD_ENVIADA = row17.CANTIDAD_ENVIADA ;
outConteoErroneo_tmp.CANTIDAD_INGRESAR = row17.CANTIDAD_INGRESAR ;
outConteoErroneo_tmp.LOTE = row17.LOTE ;
outConteoErroneo_tmp.FECHA_VENCIMIENTO = row17.FECHA_VENCIMIENTO ;
outConteoErroneo_tmp.LEYENDA_DE_RESTRICCION = row17.LEYENDA_DE_RESTRICCION ;
outConteoErroneo_tmp.DEFECTOS = row17.DEFECTOS ;
outConteoErroneo_tmp.TEMPERATURA = row17.TEMPERATURA ;
outConteoErroneo_tmp.NIVEL_DE_RIESGO = row17.NIVEL_DE_RIESGO ;
outConteoErroneo_tmp.MUESTRA = row17.MUESTRA ;
outConteoErroneo_tmp.APROBADO = row17.APROBADO ;
outConteoErroneo_tmp.CONTRATO = row17.CONTRATO ;
outConteoErroneo_tmp.ERROR = row17.ERROR ;
outConteoErroneo_tmp.conteoErroneos = null;
outConteoErroneo = outConteoErroneo_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "outConteoErroneo"
if(outConteoErroneo != null) { 



	
	/**
	 * [tJavaFlex_1 main ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"outConteoErroneo"
						
						);
					}
					


	        				row18.numeroFila = outConteoErroneo.numeroFila;
	        				row18.TIPO_PRODUCTO = outConteoErroneo.TIPO_PRODUCTO;
	        				row18.CODIGO_BARRAS = outConteoErroneo.CODIGO_BARRAS;
	        				row18.CUM = outConteoErroneo.CUM;
	        				row18.INVIMA = outConteoErroneo.INVIMA;
	        				row18.CODIGO_HOMIC = outConteoErroneo.CODIGO_HOMIC;
	        				row18.CANTIDAD_ENVIADA = outConteoErroneo.CANTIDAD_ENVIADA;
	        				row18.CANTIDAD_INGRESAR = outConteoErroneo.CANTIDAD_INGRESAR;
	        				row18.LOTE = outConteoErroneo.LOTE;
	        				row18.FECHA_VENCIMIENTO = outConteoErroneo.FECHA_VENCIMIENTO;
	        				row18.LEYENDA_DE_RESTRICCION = outConteoErroneo.LEYENDA_DE_RESTRICCION;
	        				row18.DEFECTOS = outConteoErroneo.DEFECTOS;
	        				row18.TEMPERATURA = outConteoErroneo.TEMPERATURA;
	        				row18.NIVEL_DE_RIESGO = outConteoErroneo.NIVEL_DE_RIESGO;
	        				row18.MUESTRA = outConteoErroneo.MUESTRA;
	        				row18.APROBADO = outConteoErroneo.APROBADO;
	        				row18.CONTRATO = outConteoErroneo.CONTRATO;
	        				row18.ERROR = outConteoErroneo.ERROR;
	        				row18.conteoErroneos = outConteoErroneo.conteoErroneos;

// here is the main part of the component,
// a piece of code executed in the row
// loop
outConteoErroneo.conteoErroneos = count;
count +=1; 

 


	tos_count_tJavaFlex_1++;

/**
 * [tJavaFlex_1 main ] stop
 */
	
	/**
	 * [tJavaFlex_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";
	
	

 



/**
 * [tJavaFlex_1 process_data_begin ] stop
 */

	
	/**
	 * [tSortRow_1_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row18"
						
						);
					}
					



	Comparablerow18Struct arrayRowtSortRow_1_SortOut = new Comparablerow18Struct();

	arrayRowtSortRow_1_SortOut.numeroFila = row18.numeroFila;
	arrayRowtSortRow_1_SortOut.TIPO_PRODUCTO = row18.TIPO_PRODUCTO;
	arrayRowtSortRow_1_SortOut.CODIGO_BARRAS = row18.CODIGO_BARRAS;
	arrayRowtSortRow_1_SortOut.CUM = row18.CUM;
	arrayRowtSortRow_1_SortOut.INVIMA = row18.INVIMA;
	arrayRowtSortRow_1_SortOut.CODIGO_HOMIC = row18.CODIGO_HOMIC;
	arrayRowtSortRow_1_SortOut.CANTIDAD_ENVIADA = row18.CANTIDAD_ENVIADA;
	arrayRowtSortRow_1_SortOut.CANTIDAD_INGRESAR = row18.CANTIDAD_INGRESAR;
	arrayRowtSortRow_1_SortOut.LOTE = row18.LOTE;
	arrayRowtSortRow_1_SortOut.FECHA_VENCIMIENTO = row18.FECHA_VENCIMIENTO;
	arrayRowtSortRow_1_SortOut.LEYENDA_DE_RESTRICCION = row18.LEYENDA_DE_RESTRICCION;
	arrayRowtSortRow_1_SortOut.DEFECTOS = row18.DEFECTOS;
	arrayRowtSortRow_1_SortOut.TEMPERATURA = row18.TEMPERATURA;
	arrayRowtSortRow_1_SortOut.NIVEL_DE_RIESGO = row18.NIVEL_DE_RIESGO;
	arrayRowtSortRow_1_SortOut.MUESTRA = row18.MUESTRA;
	arrayRowtSortRow_1_SortOut.APROBADO = row18.APROBADO;
	arrayRowtSortRow_1_SortOut.CONTRATO = row18.CONTRATO;
	arrayRowtSortRow_1_SortOut.ERROR = row18.ERROR;
	arrayRowtSortRow_1_SortOut.conteoErroneos = row18.conteoErroneos;	
	list_tSortRow_1_SortOut.add(arrayRowtSortRow_1_SortOut);

 


	tos_count_tSortRow_1_SortOut++;

/**
 * [tSortRow_1_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_1_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_1_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut process_data_end ] stop
 */



	
	/**
	 * [tJavaFlex_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";
	
	

 



/**
 * [tJavaFlex_1 process_data_end ] stop
 */

} // End of branch "outConteoErroneo"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tUnite_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_2 end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	
    

		
			nb_line_tHashInput_2++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_CargaInventario_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_2_NB_LINE", nb_line_tHashInput_2);       

 

ok_Hash.put("tHashInput_2", true);
end_Hash.put("tHashInput_2", System.currentTimeMillis());




/**
 * [tHashInput_2 end ] stop
 */
	
	/**
	 * [tUnite_1 end ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

globalMap.put("tUnite_1_NB_LINE", nb_line_tUnite_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16","next_7");
			  	}
			  	
 

ok_Hash.put("tUnite_1", true);
end_Hash.put("tUnite_1", System.currentTimeMillis());




/**
 * [tUnite_1 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tJavaFlex_1 end ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";
	
	


if(count > 1 ){
	context.result = "1";
}

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"outConteoErroneo");
			  	}
			  	
 

ok_Hash.put("tJavaFlex_1", true);
end_Hash.put("tJavaFlex_1", System.currentTimeMillis());




/**
 * [tJavaFlex_1 end ] stop
 */

	
	/**
	 * [tSortRow_1_SortOut end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

row18Struct[] array_tSortRow_1_SortOut = list_tSortRow_1_SortOut.toArray(new Comparablerow18Struct[0]);

java.util.Arrays.sort(array_tSortRow_1_SortOut);

globalMap.put("tSortRow_1",array_tSortRow_1_SortOut);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row18");
			  	}
			  	
 

ok_Hash.put("tSortRow_1_SortOut", true);
end_Hash.put("tSortRow_1_SortOut", System.currentTimeMillis());




/**
 * [tSortRow_1_SortOut end ] stop
 */



	
	/**
	 * [tFileOutputExcel_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_1", false);
		start_Hash.put("tFileOutputExcel_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"outSalidaErroneos");
					}
				
		int tos_count_tFileOutputExcel_1 = 0;
		


		
		int columnIndex_tFileOutputExcel_1 = 0;
		boolean headerIsInserted_tFileOutputExcel_1 = false;
		
		
		int nb_line_tFileOutputExcel_1 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_1 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_1.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_1.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_1.setSheet("Inventario");
		xlsxTool_tFileOutputExcel_1.setAppend(false,false, false);
		xlsxTool_tFileOutputExcel_1.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_1.setXY(false,0,0,false);
		
		xlsxTool_tFileOutputExcel_1.prepareStream();
		
		xlsxTool_tFileOutputExcel_1.setFont("");
		
		if (xlsxTool_tFileOutputExcel_1.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_1.addRow();
		
		xlsxTool_tFileOutputExcel_1.addCellValue("TIPO_PRODUCTO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CODIGO_BARRAS");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CUM");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("INVIMA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CODIGO_HOMIC");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CANTIDAD_ENVIADA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CANTIDAD_INGRESAR");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("LOTE");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("FECHA_VENCIMIENTO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("LEYENDA_DE_RESTRICCION");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("DEFECTOS");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("TEMPERATURA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("NIVEL_DE_RIESGO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("MUESTRA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("APROBADO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CONTRATO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("ERROR");
		
		nb_line_tFileOutputExcel_1++;
		headerIsInserted_tFileOutputExcel_1 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_1 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row19");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
outSalidaErroneosStruct outSalidaErroneos_tmp = new outSalidaErroneosStruct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tSortRow_1_SortIn begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_1_SortIn", false);
		start_Hash.put("tSortRow_1_SortIn", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	
		int tos_count_tSortRow_1_SortIn = 0;
		


row18Struct[] array_tSortRow_1_SortIn = (row18Struct[]) globalMap.remove("tSortRow_1");

int nb_line_tSortRow_1_SortIn = 0;

row18Struct current_tSortRow_1_SortIn = null;

for(int i_tSortRow_1_SortIn = 0; i_tSortRow_1_SortIn < array_tSortRow_1_SortIn.length; i_tSortRow_1_SortIn++){
	current_tSortRow_1_SortIn = array_tSortRow_1_SortIn[i_tSortRow_1_SortIn];
	row19.numeroFila = current_tSortRow_1_SortIn.numeroFila;
	row19.TIPO_PRODUCTO = current_tSortRow_1_SortIn.TIPO_PRODUCTO;
	row19.CODIGO_BARRAS = current_tSortRow_1_SortIn.CODIGO_BARRAS;
	row19.CUM = current_tSortRow_1_SortIn.CUM;
	row19.INVIMA = current_tSortRow_1_SortIn.INVIMA;
	row19.CODIGO_HOMIC = current_tSortRow_1_SortIn.CODIGO_HOMIC;
	row19.CANTIDAD_ENVIADA = current_tSortRow_1_SortIn.CANTIDAD_ENVIADA;
	row19.CANTIDAD_INGRESAR = current_tSortRow_1_SortIn.CANTIDAD_INGRESAR;
	row19.LOTE = current_tSortRow_1_SortIn.LOTE;
	row19.FECHA_VENCIMIENTO = current_tSortRow_1_SortIn.FECHA_VENCIMIENTO;
	row19.LEYENDA_DE_RESTRICCION = current_tSortRow_1_SortIn.LEYENDA_DE_RESTRICCION;
	row19.DEFECTOS = current_tSortRow_1_SortIn.DEFECTOS;
	row19.TEMPERATURA = current_tSortRow_1_SortIn.TEMPERATURA;
	row19.NIVEL_DE_RIESGO = current_tSortRow_1_SortIn.NIVEL_DE_RIESGO;
	row19.MUESTRA = current_tSortRow_1_SortIn.MUESTRA;
	row19.APROBADO = current_tSortRow_1_SortIn.APROBADO;
	row19.CONTRATO = current_tSortRow_1_SortIn.CONTRATO;
	row19.ERROR = current_tSortRow_1_SortIn.ERROR;
	row19.conteoErroneos = current_tSortRow_1_SortIn.conteoErroneos;
	// increase number of line sorted
	nb_line_tSortRow_1_SortIn++;

 



/**
 * [tSortRow_1_SortIn begin ] stop
 */
	
	/**
	 * [tSortRow_1_SortIn main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 


	tos_count_tSortRow_1_SortIn++;

/**
 * [tSortRow_1_SortIn main ] stop
 */
	
	/**
	 * [tSortRow_1_SortIn process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 



/**
 * [tSortRow_1_SortIn process_data_begin ] stop
 */

	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row19"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_4 = false;
		boolean mainRowRejected_tMap_4 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

outSalidaErroneos = null;


// # Output table : 'outSalidaErroneos'
outSalidaErroneos_tmp.TIPO_PRODUCTO = row19.TIPO_PRODUCTO ;
outSalidaErroneos_tmp.CODIGO_BARRAS = row19.CODIGO_BARRAS ;
outSalidaErroneos_tmp.CUM = row19.CUM ;
outSalidaErroneos_tmp.INVIMA = row19.INVIMA ;
outSalidaErroneos_tmp.CODIGO_HOMIC = row19.CODIGO_HOMIC ;
outSalidaErroneos_tmp.CANTIDAD_ENVIADA = row19.CANTIDAD_ENVIADA ;
outSalidaErroneos_tmp.CANTIDAD_INGRESAR = row19.CANTIDAD_INGRESAR ;
outSalidaErroneos_tmp.LOTE = row19.LOTE ;
outSalidaErroneos_tmp.FECHA_VENCIMIENTO = row19.FECHA_VENCIMIENTO ;
outSalidaErroneos_tmp.LEYENDA_DE_RESTRICCION = row19.LEYENDA_DE_RESTRICCION ;
outSalidaErroneos_tmp.DEFECTOS = row19.DEFECTOS ;
outSalidaErroneos_tmp.TEMPERATURA = row19.TEMPERATURA ;
outSalidaErroneos_tmp.NIVEL_DE_RIESGO = row19.NIVEL_DE_RIESGO ;
outSalidaErroneos_tmp.MUESTRA = row19.MUESTRA ;
outSalidaErroneos_tmp.APROBADO = row19.APROBADO ;
outSalidaErroneos_tmp.CONTRATO = row19.CONTRATO ;
outSalidaErroneos_tmp.ERROR = row19.ERROR ;
outSalidaErroneos = outSalidaErroneos_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "outSalidaErroneos"
if(outSalidaErroneos != null) { 



	
	/**
	 * [tFileOutputExcel_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"outSalidaErroneos"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_1.addRow();
									   				
	    				if(outSalidaErroneos.TIPO_PRODUCTO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(outSalidaErroneos.TIPO_PRODUCTO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(outSalidaErroneos.CODIGO_BARRAS != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(outSalidaErroneos.CODIGO_BARRAS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(outSalidaErroneos.CUM != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(outSalidaErroneos.CUM));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(outSalidaErroneos.INVIMA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(outSalidaErroneos.INVIMA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(outSalidaErroneos.CODIGO_HOMIC != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(outSalidaErroneos.CODIGO_HOMIC));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(outSalidaErroneos.CANTIDAD_ENVIADA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(outSalidaErroneos.CANTIDAD_ENVIADA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(outSalidaErroneos.CANTIDAD_INGRESAR != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(outSalidaErroneos.CANTIDAD_INGRESAR));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(outSalidaErroneos.LOTE != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(outSalidaErroneos.LOTE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(outSalidaErroneos.FECHA_VENCIMIENTO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(outSalidaErroneos.FECHA_VENCIMIENTO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(outSalidaErroneos.LEYENDA_DE_RESTRICCION != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(outSalidaErroneos.LEYENDA_DE_RESTRICCION));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(outSalidaErroneos.DEFECTOS != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(outSalidaErroneos.DEFECTOS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(outSalidaErroneos.TEMPERATURA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(outSalidaErroneos.TEMPERATURA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(outSalidaErroneos.NIVEL_DE_RIESGO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(outSalidaErroneos.NIVEL_DE_RIESGO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(outSalidaErroneos.MUESTRA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(outSalidaErroneos.MUESTRA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(outSalidaErroneos.APROBADO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(outSalidaErroneos.APROBADO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(outSalidaErroneos.CONTRATO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(outSalidaErroneos.CONTRATO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(outSalidaErroneos.ERROR != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(outSalidaErroneos.ERROR));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_1++;
				
 


	tos_count_tFileOutputExcel_1++;

/**
 * [tFileOutputExcel_1 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 process_data_end ] stop
 */

} // End of branch "outSalidaErroneos"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_end ] stop
 */



	
	/**
	 * [tSortRow_1_SortIn process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 



/**
 * [tSortRow_1_SortIn process_data_end ] stop
 */
	
	/**
	 * [tSortRow_1_SortIn end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	


}

globalMap.put("tSortRow_1_SortIn_NB_LINE",nb_line_tSortRow_1_SortIn);

 

ok_Hash.put("tSortRow_1_SortIn", true);
end_Hash.put("tSortRow_1_SortIn", System.currentTimeMillis());




/**
 * [tSortRow_1_SortIn end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row19");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

	
	
	
			xlsxTool_tFileOutputExcel_1.writeExcel((java.io.OutputStream)globalMap.get("archivo_salida"));
	
		if(headerIsInserted_tFileOutputExcel_1 && nb_line_tFileOutputExcel_1 > 0){
			nb_line_tFileOutputExcel_1 = nb_line_tFileOutputExcel_1 -1;
		}
		globalMap.put("tFileOutputExcel_1_NB_LINE",nb_line_tFileOutputExcel_1);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"outSalidaErroneos");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_1", true);
end_Hash.put("tFileOutputExcel_1", System.currentTimeMillis());




/**
 * [tFileOutputExcel_1 end ] stop
 */


















				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tSortRow_1_SortIn"
							globalMap.remove("tSortRow_1");
						
					     			//free memory for "tMap_9"
					     			globalMap.remove("tHash_Lookup_row11"); 
				     			
					     			//free memory for "tMap_8"
					     			globalMap.remove("tHash_Lookup_row8"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 finally ] stop
 */

	
	/**
	 * [tFilterRow_44 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_44";
	
	

 



/**
 * [tFilterRow_44 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_4 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 finally ] stop
 */

	
	/**
	 * [tMap_8 finally ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 finally ] stop
 */

	
	/**
	 * [tJavaRow_6 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 finally ] stop
 */

	
	/**
	 * [tOracleSP_3 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_3";
	
	

 



/**
 * [tOracleSP_3 finally ] stop
 */

	
	/**
	 * [tJavaRow_9 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 finally ] stop
 */

	
	/**
	 * [tMap_9 finally ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 finally ] stop
 */

	
	/**
	 * [tJavaRow_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 finally ] stop
 */

	
	/**
	 * [tMap_11 finally ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 finally ] stop
 */

	
	/**
	 * [tFilterRow_71 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_71";
	
	

 



/**
 * [tFilterRow_71 finally ] stop
 */

	
	/**
	 * [tMap_12 finally ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 finally ] stop
 */

	
	/**
	 * [tHashOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 finally ] stop
 */







	
	/**
	 * [tOracleSP_4 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_4";
	
	

 



/**
 * [tOracleSP_4 finally ] stop
 */

	
	/**
	 * [tJavaRow_7 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 finally ] stop
 */

	
	/**
	 * [tFilterRow_54 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_54";
	
	

 



/**
 * [tFilterRow_54 finally ] stop
 */

	
	/**
	 * [tMap_13 finally ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 finally ] stop
 */













































	
	/**
	 * [tHashInput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 finally ] stop
 */
	
	/**
	 * [tUnite_1 finally ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tJavaFlex_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";
	
	

 



/**
 * [tJavaFlex_1 finally ] stop
 */

	
	/**
	 * [tSortRow_1_SortOut finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut finally ] stop
 */

	
	/**
	 * [tSortRow_1_SortIn finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 



/**
 * [tSortRow_1_SortIn finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 finally ] stop
 */


















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row28Struct implements routines.system.IPersistableRow<row28Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}

				public Boolean EstadoIsNullable(){
				    return true;
				}
				public Boolean EstadoIsKey(){
				    return false;
				}
				public Integer EstadoLength(){
				    return 0;
				}
				public Integer EstadoPrecision(){
				    return 0;
				}
				public String EstadoDefault(){
				
					return null;
				
				}
				public String EstadoComment(){
				
				    return "";
				
				}
				public String EstadoPattern(){
				
					return "";
				
				}
				public String EstadoOriginalDbColumnName(){
				
					return "Estado";
				
				}

				
			    public String Respuesta;

				public String getRespuesta () {
					return this.Respuesta;
				}

				public Boolean RespuestaIsNullable(){
				    return true;
				}
				public Boolean RespuestaIsKey(){
				    return false;
				}
				public Integer RespuestaLength(){
				    return 0;
				}
				public Integer RespuestaPrecision(){
				    return 0;
				}
				public String RespuestaDefault(){
				
					return null;
				
				}
				public String RespuestaComment(){
				
				    return "";
				
				}
				public String RespuestaPattern(){
				
					return "";
				
				}
				public String RespuestaOriginalDbColumnName(){
				
					return "Respuesta";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.Estado = readString(dis);
					
					this.Respuesta = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.Estado = readString(dis);
					
					this.Respuesta = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Respuesta,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Respuesta,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Estado="+Estado);
		sb.append(",Respuesta="+Respuesta);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row28Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tJava_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row28Struct row28 = new row28Struct();




	
	/**
	 * [tFileOutputExcel_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_5", false);
		start_Hash.put("tFileOutputExcel_5", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row28");
					}
				
		int tos_count_tFileOutputExcel_5 = 0;
		


		
		int columnIndex_tFileOutputExcel_5 = 0;
		boolean headerIsInserted_tFileOutputExcel_5 = false;
		
		
		int nb_line_tFileOutputExcel_5 = 0;


		jxl.write.WritableWorkbook writeableWorkbook_tFileOutputExcel_5 = null;
		jxl.write.WritableSheet writableSheet_tFileOutputExcel_5 = null;

		jxl.WorkbookSettings workbookSettings_tFileOutputExcel_5 = new jxl.WorkbookSettings();
        workbookSettings_tFileOutputExcel_5.setEncoding("ISO-8859-15");
		writeableWorkbook_tFileOutputExcel_5 = new jxl.write.biff.WritableWorkbookImpl(
            		new java.io.BufferedOutputStream((java.io.OutputStream)globalMap.get("archivo_salida")),
            		false, workbookSettings_tFileOutputExcel_5);

        writableSheet_tFileOutputExcel_5 = writeableWorkbook_tFileOutputExcel_5.getSheet("Resultado");
        if(writableSheet_tFileOutputExcel_5 == null){
        	writableSheet_tFileOutputExcel_5 = writeableWorkbook_tFileOutputExcel_5.createSheet("Resultado", writeableWorkbook_tFileOutputExcel_5.getNumberOfSheets());
		}


        //modif start
        int startRowNum_tFileOutputExcel_5 = writableSheet_tFileOutputExcel_5.getRows();
		//modif end

		int[] fitWidth_tFileOutputExcel_5 = new int[2];
		for(int i_tFileOutputExcel_5=0;i_tFileOutputExcel_5<2;i_tFileOutputExcel_5++){
		    int fitCellViewSize_tFileOutputExcel_5=writableSheet_tFileOutputExcel_5.getColumnView(i_tFileOutputExcel_5).getSize();
			fitWidth_tFileOutputExcel_5[i_tFileOutputExcel_5]=fitCellViewSize_tFileOutputExcel_5/256;
			if(fitCellViewSize_tFileOutputExcel_5%256!=0){
				fitWidth_tFileOutputExcel_5[i_tFileOutputExcel_5]+=1;
			}
		}



		if (startRowNum_tFileOutputExcel_5 == 0){
	//modif end
		//modif start
			writableSheet_tFileOutputExcel_5.addCell(new jxl.write.Label(0, nb_line_tFileOutputExcel_5, "Estado"
			));
		//modif end
		fitWidth_tFileOutputExcel_5[0]=fitWidth_tFileOutputExcel_5[0]>6?fitWidth_tFileOutputExcel_5[0]:6;
		//modif start
			writableSheet_tFileOutputExcel_5.addCell(new jxl.write.Label(1, nb_line_tFileOutputExcel_5, "Respuesta"
			));
		//modif end
		fitWidth_tFileOutputExcel_5[1]=fitWidth_tFileOutputExcel_5[1]>9?fitWidth_tFileOutputExcel_5[1]:9;
		nb_line_tFileOutputExcel_5 ++;
		headerIsInserted_tFileOutputExcel_5 = true;
	}


 



/**
 * [tFileOutputExcel_5 begin ] stop
 */



	
	/**
	 * [tJava_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_2", false);
		start_Hash.put("tJava_2", System.currentTimeMillis());
		
	
	currentComponent="tJava_2";
	
	
		int tos_count_tJava_2 = 0;
		


row28.Estado = "No finalizado.";
row28.Respuesta = "Una o mas columnas del archivo '"+context.nombre+"' no coinciden con la plantilla";
context.result = "2";
 



/**
 * [tJava_2 begin ] stop
 */
	
	/**
	 * [tJava_2 main ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 


	tos_count_tJava_2++;

/**
 * [tJava_2 main ] stop
 */
	
	/**
	 * [tJava_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputExcel_5 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row28"
						
						);
					}
					

								   				
	    				if(row28.Estado != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_5 = 0;
					

					
						jxl.write.WritableCell cell_0_tFileOutputExcel_5 = new jxl.write.Label(columnIndex_tFileOutputExcel_5, startRowNum_tFileOutputExcel_5 + nb_line_tFileOutputExcel_5,
					
//modif end
								row28.Estado
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_5.addCell(cell_0_tFileOutputExcel_5);
							int currentWith_0_tFileOutputExcel_5 = cell_0_tFileOutputExcel_5.getContents().trim().length();
							fitWidth_tFileOutputExcel_5[0]=fitWidth_tFileOutputExcel_5[0]>currentWith_0_tFileOutputExcel_5?fitWidth_tFileOutputExcel_5[0]:currentWith_0_tFileOutputExcel_5+2;
	    				} 
					
								   				
	    				if(row28.Respuesta != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_5 = 1;
					

					
						jxl.write.WritableCell cell_1_tFileOutputExcel_5 = new jxl.write.Label(columnIndex_tFileOutputExcel_5, startRowNum_tFileOutputExcel_5 + nb_line_tFileOutputExcel_5,
					
//modif end
								row28.Respuesta
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_5.addCell(cell_1_tFileOutputExcel_5);
							int currentWith_1_tFileOutputExcel_5 = cell_1_tFileOutputExcel_5.getContents().trim().length();
							fitWidth_tFileOutputExcel_5[1]=fitWidth_tFileOutputExcel_5[1]>currentWith_1_tFileOutputExcel_5?fitWidth_tFileOutputExcel_5[1]:currentWith_1_tFileOutputExcel_5+2;
	    				} 
					
    			nb_line_tFileOutputExcel_5++;
				
 


	tos_count_tFileOutputExcel_5++;

/**
 * [tFileOutputExcel_5 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	

 



/**
 * [tFileOutputExcel_5 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	

 



/**
 * [tFileOutputExcel_5 process_data_end ] stop
 */



	
	/**
	 * [tJava_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_end ] stop
 */
	
	/**
	 * [tJava_2 end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 

ok_Hash.put("tJava_2", true);
end_Hash.put("tJava_2", System.currentTimeMillis());




/**
 * [tJava_2 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_5 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	

							columnIndex_tFileOutputExcel_5 = 0;
						
	//modif start
		
			writableSheet_tFileOutputExcel_5.setColumnView(columnIndex_tFileOutputExcel_5, fitWidth_tFileOutputExcel_5[0]);
		
	//modif end
	
							columnIndex_tFileOutputExcel_5 = 1;
						
	//modif start
		
			writableSheet_tFileOutputExcel_5.setColumnView(columnIndex_tFileOutputExcel_5, fitWidth_tFileOutputExcel_5[1]);
		
	//modif end
	
		writeableWorkbook_tFileOutputExcel_5.write();
		writeableWorkbook_tFileOutputExcel_5.close();
		if(headerIsInserted_tFileOutputExcel_5 && nb_line_tFileOutputExcel_5 > 0){
			nb_line_tFileOutputExcel_5 = nb_line_tFileOutputExcel_5 -1;
		}
		globalMap.put("tFileOutputExcel_5_NB_LINE",nb_line_tFileOutputExcel_5);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row28");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_5", true);
end_Hash.put("tFileOutputExcel_5", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk7", 0, "ok");
				}
				tFixedFlowInput_1Process(globalMap);



/**
 * [tFileOutputExcel_5 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_2 finally ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_5 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	

 



/**
 * [tFileOutputExcel_5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_2_SUBPROCESS_STATE", 1);
	}
	


public static class row44Struct implements routines.system.IPersistableRow<row44Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public String Result;

				public String getResult () {
					return this.Result;
				}

				public Boolean ResultIsNullable(){
				    return true;
				}
				public Boolean ResultIsKey(){
				    return false;
				}
				public Integer ResultLength(){
				    return null;
				}
				public Integer ResultPrecision(){
				    return null;
				}
				public String ResultDefault(){
				
					return null;
				
				}
				public String ResultComment(){
				
				    return "";
				
				}
				public String ResultPattern(){
				
					return "";
				
				}
				public String ResultOriginalDbColumnName(){
				
					return "Result";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.Result = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.Result = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Result,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Result,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Result="+Result);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row44Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row44Struct row44 = new row44Struct();




	
	/**
	 * [tBufferOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tBufferOutput_1", false);
		start_Hash.put("tBufferOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tBufferOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row44");
					}
				
		int tos_count_tBufferOutput_1 = 0;
		

 



/**
 * [tBufferOutput_1 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_1", false);
		start_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_1";
	
	
		int tos_count_tFixedFlowInput_1 = 0;
		

	    for (int i_tFixedFlowInput_1 = 0 ; i_tFixedFlowInput_1 < 1 ; i_tFixedFlowInput_1++) {
	                	            	
    	            		row44.Result = "2";
    	            	

 



/**
 * [tFixedFlowInput_1 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 


	tos_count_tFixedFlowInput_1++;

/**
 * [tFixedFlowInput_1 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tBufferOutput_1 main ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row44"
						
						);
					}
					



String[] row_tBufferOutput_1=new String[]{"",};		
	    if(row44.Result != null){
	        
	            row_tBufferOutput_1[0] = row44.Result;
	                        			    
	    }else{
	    	row_tBufferOutput_1[0] = null;
	    }
	globalBuffer.add(row_tBufferOutput_1);	
	
 


	tos_count_tBufferOutput_1++;

/**
 * [tBufferOutput_1 main ] stop
 */
	
	/**
	 * [tBufferOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	

 



/**
 * [tBufferOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tBufferOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	

 



/**
 * [tBufferOutput_1 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

        }
        globalMap.put("tFixedFlowInput_1_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_1", true);
end_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());




/**
 * [tFixedFlowInput_1 end ] stop
 */

	
	/**
	 * [tBufferOutput_1 end ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row44");
			  	}
			  	
 

ok_Hash.put("tBufferOutput_1", true);
end_Hash.put("tBufferOutput_1", System.currentTimeMillis());




/**
 * [tBufferOutput_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_1 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 finally ] stop
 */

	
	/**
	 * [tBufferOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tBufferOutput_1";
	
	

 



/**
 * [tBufferOutput_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row27Struct implements routines.system.IPersistableRow<row27Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}

				public Boolean EstadoIsNullable(){
				    return true;
				}
				public Boolean EstadoIsKey(){
				    return false;
				}
				public Integer EstadoLength(){
				    return 0;
				}
				public Integer EstadoPrecision(){
				    return 0;
				}
				public String EstadoDefault(){
				
					return null;
				
				}
				public String EstadoComment(){
				
				    return "";
				
				}
				public String EstadoPattern(){
				
					return "";
				
				}
				public String EstadoOriginalDbColumnName(){
				
					return "Estado";
				
				}

				
			    public String Respuesta;

				public String getRespuesta () {
					return this.Respuesta;
				}

				public Boolean RespuestaIsNullable(){
				    return true;
				}
				public Boolean RespuestaIsKey(){
				    return false;
				}
				public Integer RespuestaLength(){
				    return 0;
				}
				public Integer RespuestaPrecision(){
				    return 0;
				}
				public String RespuestaDefault(){
				
					return null;
				
				}
				public String RespuestaComment(){
				
				    return "";
				
				}
				public String RespuestaPattern(){
				
					return "";
				
				}
				public String RespuestaOriginalDbColumnName(){
				
					return "Respuesta";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.Estado = readString(dis);
					
					this.Respuesta = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.Estado = readString(dis);
					
					this.Respuesta = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Respuesta,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Respuesta,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Estado="+Estado);
		sb.append(",Respuesta="+Respuesta);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row27Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row27Struct row27 = new row27Struct();




	
	/**
	 * [tFileOutputExcel_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_4", false);
		start_Hash.put("tFileOutputExcel_4", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row27");
					}
				
		int tos_count_tFileOutputExcel_4 = 0;
		


		
		int columnIndex_tFileOutputExcel_4 = 0;
		boolean headerIsInserted_tFileOutputExcel_4 = false;
		
		
		int nb_line_tFileOutputExcel_4 = 0;


		jxl.write.WritableWorkbook writeableWorkbook_tFileOutputExcel_4 = null;
		jxl.write.WritableSheet writableSheet_tFileOutputExcel_4 = null;

		jxl.WorkbookSettings workbookSettings_tFileOutputExcel_4 = new jxl.WorkbookSettings();
        workbookSettings_tFileOutputExcel_4.setEncoding("ISO-8859-15");
		writeableWorkbook_tFileOutputExcel_4 = new jxl.write.biff.WritableWorkbookImpl(
            		new java.io.BufferedOutputStream((java.io.OutputStream)globalMap.get("archivo_salida")),
            		false, workbookSettings_tFileOutputExcel_4);

        writableSheet_tFileOutputExcel_4 = writeableWorkbook_tFileOutputExcel_4.getSheet("Resultado");
        if(writableSheet_tFileOutputExcel_4 == null){
        	writableSheet_tFileOutputExcel_4 = writeableWorkbook_tFileOutputExcel_4.createSheet("Resultado", writeableWorkbook_tFileOutputExcel_4.getNumberOfSheets());
		}


        //modif start
        int startRowNum_tFileOutputExcel_4 = writableSheet_tFileOutputExcel_4.getRows();
		//modif end

		int[] fitWidth_tFileOutputExcel_4 = new int[2];
		for(int i_tFileOutputExcel_4=0;i_tFileOutputExcel_4<2;i_tFileOutputExcel_4++){
		    int fitCellViewSize_tFileOutputExcel_4=writableSheet_tFileOutputExcel_4.getColumnView(i_tFileOutputExcel_4).getSize();
			fitWidth_tFileOutputExcel_4[i_tFileOutputExcel_4]=fitCellViewSize_tFileOutputExcel_4/256;
			if(fitCellViewSize_tFileOutputExcel_4%256!=0){
				fitWidth_tFileOutputExcel_4[i_tFileOutputExcel_4]+=1;
			}
		}



		if (startRowNum_tFileOutputExcel_4 == 0){
	//modif end
		//modif start
			writableSheet_tFileOutputExcel_4.addCell(new jxl.write.Label(0, nb_line_tFileOutputExcel_4, "Estado"
			));
		//modif end
		fitWidth_tFileOutputExcel_4[0]=fitWidth_tFileOutputExcel_4[0]>6?fitWidth_tFileOutputExcel_4[0]:6;
		//modif start
			writableSheet_tFileOutputExcel_4.addCell(new jxl.write.Label(1, nb_line_tFileOutputExcel_4, "Respuesta"
			));
		//modif end
		fitWidth_tFileOutputExcel_4[1]=fitWidth_tFileOutputExcel_4[1]>9?fitWidth_tFileOutputExcel_4[1]:9;
		nb_line_tFileOutputExcel_4 ++;
		headerIsInserted_tFileOutputExcel_4 = true;
	}


 



/**
 * [tFileOutputExcel_4 begin ] stop
 */



	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
		int tos_count_tJava_1 = 0;
		


row27.Estado = "No finalizado.";
row27.Respuesta = "No se puede abrir el archivo '"+context.nombre+"' porque el formato o la extensión de este no son válidos. \r\nNOTA: Utilizar formatos de archivo Separados por coma CSV o TXT";
context.result = "2";
 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputExcel_4 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row27"
						
						);
					}
					

								   				
	    				if(row27.Estado != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_4 = 0;
					

					
						jxl.write.WritableCell cell_0_tFileOutputExcel_4 = new jxl.write.Label(columnIndex_tFileOutputExcel_4, startRowNum_tFileOutputExcel_4 + nb_line_tFileOutputExcel_4,
					
//modif end
								row27.Estado
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_4.addCell(cell_0_tFileOutputExcel_4);
							int currentWith_0_tFileOutputExcel_4 = cell_0_tFileOutputExcel_4.getContents().trim().length();
							fitWidth_tFileOutputExcel_4[0]=fitWidth_tFileOutputExcel_4[0]>currentWith_0_tFileOutputExcel_4?fitWidth_tFileOutputExcel_4[0]:currentWith_0_tFileOutputExcel_4+2;
	    				} 
					
								   				
	    				if(row27.Respuesta != null) {
    				
					
//modif start
					
						columnIndex_tFileOutputExcel_4 = 1;
					

					
						jxl.write.WritableCell cell_1_tFileOutputExcel_4 = new jxl.write.Label(columnIndex_tFileOutputExcel_4, startRowNum_tFileOutputExcel_4 + nb_line_tFileOutputExcel_4,
					
//modif end
								row27.Respuesta
							);
//modif start					
							//If we keep the cell format from the existing cell in sheet
							
							
//modif ends							
							writableSheet_tFileOutputExcel_4.addCell(cell_1_tFileOutputExcel_4);
							int currentWith_1_tFileOutputExcel_4 = cell_1_tFileOutputExcel_4.getContents().trim().length();
							fitWidth_tFileOutputExcel_4[1]=fitWidth_tFileOutputExcel_4[1]>currentWith_1_tFileOutputExcel_4?fitWidth_tFileOutputExcel_4[1]:currentWith_1_tFileOutputExcel_4+2;
	    				} 
					
    			nb_line_tFileOutputExcel_4++;
				
 


	tos_count_tFileOutputExcel_4++;

/**
 * [tFileOutputExcel_4 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_4";
	
	

 



/**
 * [tFileOutputExcel_4 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_4";
	
	

 



/**
 * [tFileOutputExcel_4 process_data_end ] stop
 */



	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());




/**
 * [tJava_1 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_4 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_4";
	
	

							columnIndex_tFileOutputExcel_4 = 0;
						
	//modif start
		
			writableSheet_tFileOutputExcel_4.setColumnView(columnIndex_tFileOutputExcel_4, fitWidth_tFileOutputExcel_4[0]);
		
	//modif end
	
							columnIndex_tFileOutputExcel_4 = 1;
						
	//modif start
		
			writableSheet_tFileOutputExcel_4.setColumnView(columnIndex_tFileOutputExcel_4, fitWidth_tFileOutputExcel_4[1]);
		
	//modif end
	
		writeableWorkbook_tFileOutputExcel_4.write();
		writeableWorkbook_tFileOutputExcel_4.close();
		if(headerIsInserted_tFileOutputExcel_4 && nb_line_tFileOutputExcel_4 > 0){
			nb_line_tFileOutputExcel_4 = nb_line_tFileOutputExcel_4 -1;
		}
		globalMap.put("tFileOutputExcel_4_NB_LINE",nb_line_tFileOutputExcel_4);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row27");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_4", true);
end_Hash.put("tFileOutputExcel_4", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk6", 0, "ok");
				}
				tRunJob_3Process(globalMap);



/**
 * [tFileOutputExcel_4 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_4 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_4";
	
	

 



/**
 * [tFileOutputExcel_4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public void tRunJob_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRunJob_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tRunJob_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tRunJob_3", false);
		start_Hash.put("tRunJob_3", System.currentTimeMillis());
		
	
	currentComponent="tRunJob_3";
	
	
		int tos_count_tRunJob_3 = 0;
		


 



/**
 * [tRunJob_3 begin ] stop
 */
	
	/**
	 * [tRunJob_3 main ] start
	 */

	

	
	
	currentComponent="tRunJob_3";
	
	
	java.util.List<String> paraList_tRunJob_3 = new java.util.ArrayList<String>();
	
	        				paraList_tRunJob_3.add("--father_pid="+pid);
	      			
	        				paraList_tRunJob_3.add("--root_pid="+rootPid);
	      			
	        				paraList_tRunJob_3.add("--father_node=tRunJob_3");
	      			
	        				paraList_tRunJob_3.add("--context=Default");
	      			
		if(enableLogStash){
			paraList_tRunJob_3.add("--audit.enabled="+enableLogStash);
		}
		
	//for feature:10589
	
		paraList_tRunJob_3.add("--stat_port=" + portStats);
	

	if(resuming_logs_dir_path != null){
		paraList_tRunJob_3.add("--resuming_logs_dir_path=" + resuming_logs_dir_path);
	}
	String childResumePath_tRunJob_3 = ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path);
	String tRunJobName_tRunJob_3 = ResumeUtil.getRighttRunJob(resuming_checkpoint_path);
	if("tRunJob_3".equals(tRunJobName_tRunJob_3) && childResumePath_tRunJob_3 != null){
		paraList_tRunJob_3.add("--resuming_checkpoint_path=" + ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path));
	}
	paraList_tRunJob_3.add("--parent_part_launcher=JOB:" + jobName + "/NODE:tRunJob_3");
	
	java.util.Map<String, Object> parentContextMap_tRunJob_3 = new java.util.HashMap<String, Object>();

	

	Object obj_tRunJob_3 = null;

	
		obj_tRunJob_3 = context.carga_id;
		if(obj_tRunJob_3!=null) {
			if (obj_tRunJob_3.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_3.add("--context_param carga_id=" + ((java.util.Date) obj_tRunJob_3).getTime());
			} else {
				
					paraList_tRunJob_3.add("--context_param carga_id=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_3));
					
				
			}
		} else {
			paraList_tRunJob_3.add("--context_param carga_id=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_3.put("carga_id", obj_tRunJob_3);
	
		obj_tRunJob_3 = globalMap.get("archivo_salida");
		if(obj_tRunJob_3!=null) {
			if (obj_tRunJob_3.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_3.add("--context_param Salida=" + ((java.util.Date) obj_tRunJob_3).getTime());
			} else {
				
					paraList_tRunJob_3.add("--context_param Salida=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_3));
					
				
			}
		} else {
			paraList_tRunJob_3.add("--context_param Salida=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_3.put("Salida", obj_tRunJob_3);
	
		obj_tRunJob_3 = "xls";
		if(obj_tRunJob_3!=null) {
			if (obj_tRunJob_3.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_3.add("--context_param Extension=" + ((java.util.Date) obj_tRunJob_3).getTime());
			} else {
				
					paraList_tRunJob_3.add("--context_param Extension=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_3));
					
				
			}
		} else {
			paraList_tRunJob_3.add("--context_param Extension=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_3.put("Extension", obj_tRunJob_3);
	
	
		med_cargue_inventario.savelog_0_2.SaveLog childJob_tRunJob_3 = new med_cargue_inventario.savelog_0_2.SaveLog();
	    // pass DataSources
	    java.util.Map<String, routines.system.TalendDataSource> talendDataSources_tRunJob_3 = (java.util.Map<String, routines.system.TalendDataSource>) globalMap
	            .get(KEY_DB_DATASOURCES);
	    if (null != talendDataSources_tRunJob_3) {
	        java.util.Map<String, javax.sql.DataSource> dataSources_tRunJob_3 = new java.util.HashMap<String, javax.sql.DataSource>();
	        for (java.util.Map.Entry<String, routines.system.TalendDataSource> talendDataSourceEntry_tRunJob_3 : talendDataSources_tRunJob_3
			        .entrySet()) {
	            dataSources_tRunJob_3.put(talendDataSourceEntry_tRunJob_3.getKey(),
	                    talendDataSourceEntry_tRunJob_3.getValue().getRawDataSource());
	        }
	        childJob_tRunJob_3.setDataSources(dataSources_tRunJob_3);
	    }
		  
			childJob_tRunJob_3.parentContextMap = parentContextMap_tRunJob_3;
		  
		
		String[][] childReturn_tRunJob_3 = childJob_tRunJob_3.runJob((String[]) paraList_tRunJob_3.toArray(new String[paraList_tRunJob_3.size()]));
		
            if(childJob_tRunJob_3.getErrorCode() == null){
                globalMap.put("tRunJob_3_CHILD_RETURN_CODE", childJob_tRunJob_3.getStatus() != null && ("failure").equals(childJob_tRunJob_3.getStatus()) ? 1 : 0);
            }else{
                globalMap.put("tRunJob_3_CHILD_RETURN_CODE", childJob_tRunJob_3.getErrorCode());
            }
            if (childJob_tRunJob_3.getExceptionStackTrace() != null) {
                globalMap.put("tRunJob_3_CHILD_EXCEPTION_STACKTRACE", childJob_tRunJob_3.getExceptionStackTrace());
            }
                    errorCode = childJob_tRunJob_3.getErrorCode();
                if (childJob_tRunJob_3.getErrorCode() != null || ("failure").equals(childJob_tRunJob_3.getStatus())) {
                    java.lang.Exception ce_tRunJob_3 = childJob_tRunJob_3.getException();
                    throw new RuntimeException("Child job running failed.\n" + ((ce_tRunJob_3!=null) ? (ce_tRunJob_3.getClass().getName() + ": " + ce_tRunJob_3.getMessage()) : ""));
                }

 


	tos_count_tRunJob_3++;

/**
 * [tRunJob_3 main ] stop
 */
	
	/**
	 * [tRunJob_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRunJob_3";
	
	

 



/**
 * [tRunJob_3 process_data_begin ] stop
 */
	
	/**
	 * [tRunJob_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tRunJob_3";
	
	

 



/**
 * [tRunJob_3 process_data_end ] stop
 */
	
	/**
	 * [tRunJob_3 end ] start
	 */

	

	
	
	currentComponent="tRunJob_3";
	
	

 

ok_Hash.put("tRunJob_3", true);
end_Hash.put("tRunJob_3", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk9", 0, "ok");
				}
				tFixedFlowInput_1Process(globalMap);



/**
 * [tRunJob_3 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRunJob_3 finally ] start
	 */

	

	
	
	currentComponent="tRunJob_3";
	
	
	
 



/**
 * [tRunJob_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRunJob_3_SUBPROCESS_STATE", 1);
	}
	


public void tRunJob_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRunJob_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tRunJob_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tRunJob_2", false);
		start_Hash.put("tRunJob_2", System.currentTimeMillis());
		
	
	currentComponent="tRunJob_2";
	
	
		int tos_count_tRunJob_2 = 0;
		


 



/**
 * [tRunJob_2 begin ] stop
 */
	
	/**
	 * [tRunJob_2 main ] start
	 */

	

	
	
	currentComponent="tRunJob_2";
	
	
	java.util.List<String> paraList_tRunJob_2 = new java.util.ArrayList<String>();
	
	        				paraList_tRunJob_2.add("--father_pid="+pid);
	      			
	        				paraList_tRunJob_2.add("--root_pid="+rootPid);
	      			
	        				paraList_tRunJob_2.add("--father_node=tRunJob_2");
	      			
	        				paraList_tRunJob_2.add("--context=Default");
	      			
		if(enableLogStash){
			paraList_tRunJob_2.add("--audit.enabled="+enableLogStash);
		}
		
	//for feature:10589
	
		paraList_tRunJob_2.add("--stat_port=" + portStats);
	

	if(resuming_logs_dir_path != null){
		paraList_tRunJob_2.add("--resuming_logs_dir_path=" + resuming_logs_dir_path);
	}
	String childResumePath_tRunJob_2 = ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path);
	String tRunJobName_tRunJob_2 = ResumeUtil.getRighttRunJob(resuming_checkpoint_path);
	if("tRunJob_2".equals(tRunJobName_tRunJob_2) && childResumePath_tRunJob_2 != null){
		paraList_tRunJob_2.add("--resuming_checkpoint_path=" + ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path));
	}
	paraList_tRunJob_2.add("--parent_part_launcher=JOB:" + jobName + "/NODE:tRunJob_2");
	
	java.util.Map<String, Object> parentContextMap_tRunJob_2 = new java.util.HashMap<String, Object>();

	

	Object obj_tRunJob_2 = null;

	
		obj_tRunJob_2 = context.carga_id;
		if(obj_tRunJob_2!=null) {
			if (obj_tRunJob_2.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_2.add("--context_param carga_id=" + ((java.util.Date) obj_tRunJob_2).getTime());
			} else {
				
					paraList_tRunJob_2.add("--context_param carga_id=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_2));
					
				
			}
		} else {
			paraList_tRunJob_2.add("--context_param carga_id=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_2.put("carga_id", obj_tRunJob_2);
	
		obj_tRunJob_2 = globalMap.get("archivo_salida");
		if(obj_tRunJob_2!=null) {
			if (obj_tRunJob_2.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_2.add("--context_param Salida=" + ((java.util.Date) obj_tRunJob_2).getTime());
			} else {
				
					paraList_tRunJob_2.add("--context_param Salida=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_2));
					
				
			}
		} else {
			paraList_tRunJob_2.add("--context_param Salida=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_2.put("Salida", obj_tRunJob_2);
	
		obj_tRunJob_2 = "xls";
		if(obj_tRunJob_2!=null) {
			if (obj_tRunJob_2.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_2.add("--context_param Extension=" + ((java.util.Date) obj_tRunJob_2).getTime());
			} else {
				
					paraList_tRunJob_2.add("--context_param Extension=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_2));
					
				
			}
		} else {
			paraList_tRunJob_2.add("--context_param Extension=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_2.put("Extension", obj_tRunJob_2);
	
	
		med_cargue_inventario.savelog_0_2.SaveLog childJob_tRunJob_2 = new med_cargue_inventario.savelog_0_2.SaveLog();
	    // pass DataSources
	    java.util.Map<String, routines.system.TalendDataSource> talendDataSources_tRunJob_2 = (java.util.Map<String, routines.system.TalendDataSource>) globalMap
	            .get(KEY_DB_DATASOURCES);
	    if (null != talendDataSources_tRunJob_2) {
	        java.util.Map<String, javax.sql.DataSource> dataSources_tRunJob_2 = new java.util.HashMap<String, javax.sql.DataSource>();
	        for (java.util.Map.Entry<String, routines.system.TalendDataSource> talendDataSourceEntry_tRunJob_2 : talendDataSources_tRunJob_2
			        .entrySet()) {
	            dataSources_tRunJob_2.put(talendDataSourceEntry_tRunJob_2.getKey(),
	                    talendDataSourceEntry_tRunJob_2.getValue().getRawDataSource());
	        }
	        childJob_tRunJob_2.setDataSources(dataSources_tRunJob_2);
	    }
		  
			childJob_tRunJob_2.parentContextMap = parentContextMap_tRunJob_2;
		  
		
		String[][] childReturn_tRunJob_2 = childJob_tRunJob_2.runJob((String[]) paraList_tRunJob_2.toArray(new String[paraList_tRunJob_2.size()]));
		
            if(childJob_tRunJob_2.getErrorCode() == null){
                globalMap.put("tRunJob_2_CHILD_RETURN_CODE", childJob_tRunJob_2.getStatus() != null && ("failure").equals(childJob_tRunJob_2.getStatus()) ? 1 : 0);
            }else{
                globalMap.put("tRunJob_2_CHILD_RETURN_CODE", childJob_tRunJob_2.getErrorCode());
            }
            if (childJob_tRunJob_2.getExceptionStackTrace() != null) {
                globalMap.put("tRunJob_2_CHILD_EXCEPTION_STACKTRACE", childJob_tRunJob_2.getExceptionStackTrace());
            }
                    errorCode = childJob_tRunJob_2.getErrorCode();
                if (childJob_tRunJob_2.getErrorCode() != null || ("failure").equals(childJob_tRunJob_2.getStatus())) {
                    java.lang.Exception ce_tRunJob_2 = childJob_tRunJob_2.getException();
                    throw new RuntimeException("Child job running failed.\n" + ((ce_tRunJob_2!=null) ? (ce_tRunJob_2.getClass().getName() + ": " + ce_tRunJob_2.getMessage()) : ""));
                }

 


	tos_count_tRunJob_2++;

/**
 * [tRunJob_2 main ] stop
 */
	
	/**
	 * [tRunJob_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRunJob_2";
	
	

 



/**
 * [tRunJob_2 process_data_begin ] stop
 */
	
	/**
	 * [tRunJob_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tRunJob_2";
	
	

 



/**
 * [tRunJob_2 process_data_end ] stop
 */
	
	/**
	 * [tRunJob_2 end ] start
	 */

	

	
	
	currentComponent="tRunJob_2";
	
	

 

ok_Hash.put("tRunJob_2", true);
end_Hash.put("tRunJob_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk4", 0, "ok");
				}
				tFixedFlowInput_2Process(globalMap);



/**
 * [tRunJob_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRunJob_2 finally ] start
	 */

	

	
	
	currentComponent="tRunJob_2";
	
	
	
 



/**
 * [tRunJob_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRunJob_2_SUBPROCESS_STATE", 1);
	}
	


public static class row41Struct implements routines.system.IPersistableRow<row41Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public Object Result;

				public Object getResult () {
					return this.Result;
				}

				public Boolean ResultIsNullable(){
				    return true;
				}
				public Boolean ResultIsKey(){
				    return false;
				}
				public Integer ResultLength(){
				    return null;
				}
				public Integer ResultPrecision(){
				    return null;
				}
				public String ResultDefault(){
				
					return null;
				
				}
				public String ResultComment(){
				
				    return "";
				
				}
				public String ResultPattern(){
				
					return "";
				
				}
				public String ResultOriginalDbColumnName(){
				
					return "Result";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.Result = (Object) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.Result = (Object) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Object
				
       			    	dos.writeObject(this.Result);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.Result);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Result="+String.valueOf(Result));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row41Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row41Struct row41 = new row41Struct();




	
	/**
	 * [tBufferOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tBufferOutput_2", false);
		start_Hash.put("tBufferOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tBufferOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row41");
					}
				
		int tos_count_tBufferOutput_2 = 0;
		

 



/**
 * [tBufferOutput_2 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_2", false);
		start_Hash.put("tFixedFlowInput_2", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_2";
	
	
		int tos_count_tFixedFlowInput_2 = 0;
		

	    for (int i_tFixedFlowInput_2 = 0 ; i_tFixedFlowInput_2 < 1 ; i_tFixedFlowInput_2++) {
	                	            	
    	            		row41.Result = context.result;
    	            	

 



/**
 * [tFixedFlowInput_2 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 


	tos_count_tFixedFlowInput_2++;

/**
 * [tFixedFlowInput_2 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tBufferOutput_2 main ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row41"
						
						);
					}
					



String[] row_tBufferOutput_2=new String[]{"",};		
	    if(row41.Result != null){
	        
	            row_tBufferOutput_2[0] = String.valueOf(row41.Result);
	                        			    
	    }else{
	    	row_tBufferOutput_2[0] = null;
	    }
	globalBuffer.add(row_tBufferOutput_2);	
	
 


	tos_count_tBufferOutput_2++;

/**
 * [tBufferOutput_2 main ] stop
 */
	
	/**
	 * [tBufferOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	

 



/**
 * [tBufferOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tBufferOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	

 



/**
 * [tBufferOutput_2 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

        }
        globalMap.put("tFixedFlowInput_2_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_2", true);
end_Hash.put("tFixedFlowInput_2", System.currentTimeMillis());




/**
 * [tFixedFlowInput_2 end ] stop
 */

	
	/**
	 * [tBufferOutput_2 end ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row41");
			  	}
			  	
 

ok_Hash.put("tBufferOutput_2", true);
end_Hash.put("tBufferOutput_2", System.currentTimeMillis());




/**
 * [tBufferOutput_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_2 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 finally ] stop
 */

	
	/**
	 * [tBufferOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tBufferOutput_2";
	
	

 



/**
 * [tBufferOutput_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row8Struct implements routines.system.IPersistableComparableLookupRow<row8Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal ID;

				public BigDecimal getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return null;
				}
				public String IDDefault(){
				
					return "";
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public BigDecimal INTDISPENSACION;

				public BigDecimal getINTDISPENSACION () {
					return this.INTDISPENSACION;
				}

				public Boolean INTDISPENSACIONIsNullable(){
				    return false;
				}
				public Boolean INTDISPENSACIONIsKey(){
				    return false;
				}
				public Integer INTDISPENSACIONLength(){
				    return 0;
				}
				public Integer INTDISPENSACIONPrecision(){
				    return null;
				}
				public String INTDISPENSACIONDefault(){
				
					return "";
				
				}
				public String INTDISPENSACIONComment(){
				
				    return "";
				
				}
				public String INTDISPENSACIONPattern(){
				
					return "";
				
				}
				public String INTDISPENSACIONOriginalDbColumnName(){
				
					return "INTDISPENSACION";
				
				}

				
			    public BigDecimal INTSUMINISTRO;

				public BigDecimal getINTSUMINISTRO () {
					return this.INTSUMINISTRO;
				}

				public Boolean INTSUMINISTROIsNullable(){
				    return false;
				}
				public Boolean INTSUMINISTROIsKey(){
				    return false;
				}
				public Integer INTSUMINISTROLength(){
				    return 0;
				}
				public Integer INTSUMINISTROPrecision(){
				    return null;
				}
				public String INTSUMINISTRODefault(){
				
					return "";
				
				}
				public String INTSUMINISTROComment(){
				
				    return "";
				
				}
				public String INTSUMINISTROPattern(){
				
					return "";
				
				}
				public String INTSUMINISTROOriginalDbColumnName(){
				
					return "INTSUMINISTRO";
				
				}

				
			    public String CONTRATO;

				public String getCONTRATO () {
					return this.CONTRATO;
				}

				public Boolean CONTRATOIsNullable(){
				    return true;
				}
				public Boolean CONTRATOIsKey(){
				    return false;
				}
				public Integer CONTRATOLength(){
				    return 4000;
				}
				public Integer CONTRATOPrecision(){
				    return 0;
				}
				public String CONTRATODefault(){
				
					return null;
				
				}
				public String CONTRATOComment(){
				
				    return "";
				
				}
				public String CONTRATOPattern(){
				
					return "";
				
				}
				public String CONTRATOOriginalDbColumnName(){
				
					return "CONTRATO";
				
				}

				
			    public BigDecimal INTIVA;

				public BigDecimal getINTIVA () {
					return this.INTIVA;
				}

				public Boolean INTIVAIsNullable(){
				    return false;
				}
				public Boolean INTIVAIsKey(){
				    return false;
				}
				public Integer INTIVALength(){
				    return 0;
				}
				public Integer INTIVAPrecision(){
				    return null;
				}
				public String INTIVADefault(){
				
					return "";
				
				}
				public String INTIVAComment(){
				
				    return "";
				
				}
				public String INTIVAPattern(){
				
					return "";
				
				}
				public String INTIVAOriginalDbColumnName(){
				
					return "INTIVA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CONTRATO == null) ? 0 : this.CONTRATO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row8Struct other = (row8Struct) obj;
		
						if (this.CONTRATO == null) {
							if (other.CONTRATO != null)
								return false;
						
						} else if (!this.CONTRATO.equals(other.CONTRATO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row8Struct other) {

		other.ID = this.ID;
	            other.INTDISPENSACION = this.INTDISPENSACION;
	            other.INTSUMINISTRO = this.INTSUMINISTRO;
	            other.CONTRATO = this.CONTRATO;
	            other.INTIVA = this.INTIVA;
	            
	}

	public void copyKeysDataTo(row8Struct other) {

		other.CONTRATO = this.CONTRATO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.CONTRATO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.CONTRATO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CONTRATO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CONTRATO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.ID = (BigDecimal) ois.readObject();
					
       			    	this.INTDISPENSACION = (BigDecimal) ois.readObject();
					
       			    	this.INTSUMINISTRO = (BigDecimal) ois.readObject();
					
       			    	this.INTIVA = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.ID = (BigDecimal) objectIn.readObject();
					
       			    	this.INTDISPENSACION = (BigDecimal) objectIn.readObject();
					
       			    	this.INTSUMINISTRO = (BigDecimal) objectIn.readObject();
					
       			    	this.INTIVA = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.ID);
					
       			    	oos.writeObject(this.INTDISPENSACION);
					
       			    	oos.writeObject(this.INTSUMINISTRO);
					
       			    	oos.writeObject(this.INTIVA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ID);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.INTDISPENSACION);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.INTSUMINISTRO);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.INTIVA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",INTDISPENSACION="+String.valueOf(INTDISPENSACION));
		sb.append(",INTSUMINISTRO="+String.valueOf(INTSUMINISTRO));
		sb.append(",CONTRATO="+CONTRATO);
		sb.append(",INTIVA="+String.valueOf(INTIVA));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CONTRATO, other.CONTRATO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row8Struct row8 = new row8Struct();




	
	/**
	 * [tAdvancedHash_row8 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row8", false);
		start_Hash.put("tAdvancedHash_row8", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tAdvancedHash_row8 = 0;
		

			   		// connection name:row8
			   		// source node:tOracleInput_7 - inputs:(after_tHashInput_1) outputs:(row8,row8) | target node:tAdvancedHash_row8 - inputs:(row8) outputs:()
			   		// linked node: tMap_8 - inputs:(row6,row8) outputs:(outContratoId)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row8 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct> tHash_Lookup_row8 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row8Struct>getLookup(matchingModeEnum_row8);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row8", tHash_Lookup_row8);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row8 begin ] stop
 */



	
	/**
	 * [tOracleInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_7", false);
		start_Hash.put("tOracleInput_7", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_7";
	
	
		int tos_count_tOracleInput_7 = 0;
		
	


	
		    int nb_line_tOracleInput_7 = 0;
		    java.sql.Connection conn_tOracleInput_7 = null;
				conn_tOracleInput_7 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_7 = false;
				boolean isConnectionWrapped_tOracleInput_7 = !(conn_tOracleInput_7 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_7.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_7 = null;
                if (isConnectionWrapped_tOracleInput_7) {
					unwrappedOraConn_tOracleInput_7 = conn_tOracleInput_7.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_7 != null) {
                        isTimeZoneNull_tOracleInput_7 = (unwrappedOraConn_tOracleInput_7.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_7 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_7).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_7) {
					java.sql.Statement stmtGetTZ_tOracleInput_7 = conn_tOracleInput_7.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_7 = stmtGetTZ_tOracleInput_7.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_7 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_7.next()) {
						sessionTimezone_tOracleInput_7 = rsGetTZ_tOracleInput_7.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_7 && unwrappedOraConn_tOracleInput_7 != null) {
                        unwrappedOraConn_tOracleInput_7.setSessionTimeZone(sessionTimezone_tOracleInput_7);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_7).setSessionTimeZone(sessionTimezone_tOracleInput_7);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_7 = conn_tOracleInput_7.createStatement();

		    String dbquery_tOracleInput_7 = "SELECT \n  ID, \n  INTDISPENSACION, \n  INTSUMINISTRO, \n  UPPER(TRIM(MED.MayusculasSinAcentos(CONTRATO))) AS contrato,"
+" \n  INTIVA\nFROM MED_CONTRATOS\nWHERE ESTREGISTRO_ID = 1 AND ESTADO = 'Activo' ";
		    

		    globalMap.put("tOracleInput_7_QUERY",dbquery_tOracleInput_7);

		    java.sql.ResultSet rs_tOracleInput_7 = null;

		    try {
		    	rs_tOracleInput_7 = stmt_tOracleInput_7.executeQuery(dbquery_tOracleInput_7);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_7 = rs_tOracleInput_7.getMetaData();
		    	int colQtyInRs_tOracleInput_7 = rsmd_tOracleInput_7.getColumnCount();

		    String tmpContent_tOracleInput_7 = null;
		    
		    
		    while (rs_tOracleInput_7.next()) {
		        nb_line_tOracleInput_7++;
		        
							if(colQtyInRs_tOracleInput_7 < 1) {
								row8.ID = null;
							} else {
		                          
					if(rs_tOracleInput_7.getObject(1) != null) {
						row8.ID = rs_tOracleInput_7.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_7 < 2) {
								row8.INTDISPENSACION = null;
							} else {
		                          
					if(rs_tOracleInput_7.getObject(2) != null) {
						row8.INTDISPENSACION = rs_tOracleInput_7.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_7 < 3) {
								row8.INTSUMINISTRO = null;
							} else {
		                          
					if(rs_tOracleInput_7.getObject(3) != null) {
						row8.INTSUMINISTRO = rs_tOracleInput_7.getBigDecimal(3);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_7 < 4) {
								row8.CONTRATO = null;
							} else {
	                         		
        	row8.CONTRATO = routines.system.JDBCUtil.getString(rs_tOracleInput_7, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_7 < 5) {
								row8.INTIVA = null;
							} else {
		                          
					if(rs_tOracleInput_7.getObject(5) != null) {
						row8.INTIVA = rs_tOracleInput_7.getBigDecimal(5);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_7 begin ] stop
 */
	
	/**
	 * [tOracleInput_7 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 


	tos_count_tOracleInput_7++;

/**
 * [tOracleInput_7 main ] stop
 */
	
	/**
	 * [tOracleInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row8 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					


			   
			   

					row8Struct row8_HashRow = new row8Struct();
		   	   	   
				
				row8_HashRow.ID = row8.ID;
				
				row8_HashRow.INTDISPENSACION = row8.INTDISPENSACION;
				
				row8_HashRow.INTSUMINISTRO = row8.INTSUMINISTRO;
				
				row8_HashRow.CONTRATO = row8.CONTRATO;
				
				row8_HashRow.INTIVA = row8.INTIVA;
				
			tHash_Lookup_row8.put(row8_HashRow);
			
            




 


	tos_count_tAdvancedHash_row8++;

/**
 * [tAdvancedHash_row8 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

 



/**
 * [tAdvancedHash_row8 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row8 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

 



/**
 * [tAdvancedHash_row8 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_7 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

}
}finally{
	if (rs_tOracleInput_7 != null) {
		rs_tOracleInput_7.close();
	}
	if (stmt_tOracleInput_7 != null) {
		stmt_tOracleInput_7.close();
	}
}

globalMap.put("tOracleInput_7_NB_LINE",nb_line_tOracleInput_7);
 

ok_Hash.put("tOracleInput_7", true);
end_Hash.put("tOracleInput_7", System.currentTimeMillis());




/**
 * [tOracleInput_7 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row8 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

tHash_Lookup_row8.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row8", true);
end_Hash.put("tAdvancedHash_row8", System.currentTimeMillis());




/**
 * [tAdvancedHash_row8 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_7 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row8 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

 



/**
 * [tAdvancedHash_row8 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row11Struct implements routines.system.IPersistableComparableLookupRow<row11Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal DCONTRATOS_ID;

				public BigDecimal getDCONTRATOS_ID () {
					return this.DCONTRATOS_ID;
				}

				public Boolean DCONTRATOS_IDIsNullable(){
				    return false;
				}
				public Boolean DCONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer DCONTRATOS_IDLength(){
				    return 0;
				}
				public Integer DCONTRATOS_IDPrecision(){
				    return null;
				}
				public String DCONTRATOS_IDDefault(){
				
					return "";
				
				}
				public String DCONTRATOS_IDComment(){
				
				    return "";
				
				}
				public String DCONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String DCONTRATOS_IDOriginalDbColumnName(){
				
					return "DCONTRATOS_ID";
				
				}

				
			    public BigDecimal HDCONTRATOS_ID;

				public BigDecimal getHDCONTRATOS_ID () {
					return this.HDCONTRATOS_ID;
				}

				public Boolean HDCONTRATOS_IDIsNullable(){
				    return false;
				}
				public Boolean HDCONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer HDCONTRATOS_IDLength(){
				    return 0;
				}
				public Integer HDCONTRATOS_IDPrecision(){
				    return null;
				}
				public String HDCONTRATOS_IDDefault(){
				
					return "";
				
				}
				public String HDCONTRATOS_IDComment(){
				
				    return "";
				
				}
				public String HDCONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String HDCONTRATOS_IDOriginalDbColumnName(){
				
					return "HDCONTRATOS_ID";
				
				}

				
			    public BigDecimal PRODUCTOS_ID;

				public BigDecimal getPRODUCTOS_ID () {
					return this.PRODUCTOS_ID;
				}

				public Boolean PRODUCTOS_IDIsNullable(){
				    return false;
				}
				public Boolean PRODUCTOS_IDIsKey(){
				    return false;
				}
				public Integer PRODUCTOS_IDLength(){
				    return 0;
				}
				public Integer PRODUCTOS_IDPrecision(){
				    return null;
				}
				public String PRODUCTOS_IDDefault(){
				
					return "";
				
				}
				public String PRODUCTOS_IDComment(){
				
				    return "";
				
				}
				public String PRODUCTOS_IDPattern(){
				
					return "";
				
				}
				public String PRODUCTOS_IDOriginalDbColumnName(){
				
					return "PRODUCTOS_ID";
				
				}

				
			    public BigDecimal IVA;

				public BigDecimal getIVA () {
					return this.IVA;
				}

				public Boolean IVAIsNullable(){
				    return false;
				}
				public Boolean IVAIsKey(){
				    return false;
				}
				public Integer IVALength(){
				    return 0;
				}
				public Integer IVAPrecision(){
				    return null;
				}
				public String IVADefault(){
				
					return "";
				
				}
				public String IVAComment(){
				
				    return "";
				
				}
				public String IVAPattern(){
				
					return "";
				
				}
				public String IVAOriginalDbColumnName(){
				
					return "IVA";
				
				}

				
			    public BigDecimal CONTRATOS_ID;

				public BigDecimal getCONTRATOS_ID () {
					return this.CONTRATOS_ID;
				}

				public Boolean CONTRATOS_IDIsNullable(){
				    return false;
				}
				public Boolean CONTRATOS_IDIsKey(){
				    return false;
				}
				public Integer CONTRATOS_IDLength(){
				    return 0;
				}
				public Integer CONTRATOS_IDPrecision(){
				    return null;
				}
				public String CONTRATOS_IDDefault(){
				
					return "";
				
				}
				public String CONTRATOS_IDComment(){
				
				    return "";
				
				}
				public String CONTRATOS_IDPattern(){
				
					return "";
				
				}
				public String CONTRATOS_IDOriginalDbColumnName(){
				
					return "CONTRATOS_ID";
				
				}

				
			    public BigDecimal PRECIO;

				public BigDecimal getPRECIO () {
					return this.PRECIO;
				}

				public Boolean PRECIOIsNullable(){
				    return false;
				}
				public Boolean PRECIOIsKey(){
				    return false;
				}
				public Integer PRECIOLength(){
				    return 0;
				}
				public Integer PRECIOPrecision(){
				    return null;
				}
				public String PRECIODefault(){
				
					return "";
				
				}
				public String PRECIOComment(){
				
				    return "";
				
				}
				public String PRECIOPattern(){
				
					return "";
				
				}
				public String PRECIOOriginalDbColumnName(){
				
					return "PRECIO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.PRODUCTOS_ID == null) ? 0 : this.PRODUCTOS_ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row11Struct other = (row11Struct) obj;
		
						if (this.PRODUCTOS_ID == null) {
							if (other.PRODUCTOS_ID != null)
								return false;
						
						} else if (!this.PRODUCTOS_ID.equals(other.PRODUCTOS_ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row11Struct other) {

		other.DCONTRATOS_ID = this.DCONTRATOS_ID;
	            other.HDCONTRATOS_ID = this.HDCONTRATOS_ID;
	            other.PRODUCTOS_ID = this.PRODUCTOS_ID;
	            other.IVA = this.IVA;
	            other.CONTRATOS_ID = this.CONTRATOS_ID;
	            other.PRECIO = this.PRECIO;
	            
	}

	public void copyKeysDataTo(row11Struct other) {

		other.PRODUCTOS_ID = this.PRODUCTOS_ID;
	            	
	}




    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
						this.PRODUCTOS_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PRODUCTOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRODUCTOS_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.DCONTRATOS_ID = (BigDecimal) ois.readObject();
					
       			    	this.HDCONTRATOS_ID = (BigDecimal) ois.readObject();
					
       			    	this.IVA = (BigDecimal) ois.readObject();
					
       			    	this.CONTRATOS_ID = (BigDecimal) ois.readObject();
					
       			    	this.PRECIO = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.DCONTRATOS_ID = (BigDecimal) objectIn.readObject();
					
       			    	this.HDCONTRATOS_ID = (BigDecimal) objectIn.readObject();
					
       			    	this.IVA = (BigDecimal) objectIn.readObject();
					
       			    	this.CONTRATOS_ID = (BigDecimal) objectIn.readObject();
					
       			    	this.PRECIO = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.DCONTRATOS_ID);
					
       			    	oos.writeObject(this.HDCONTRATOS_ID);
					
       			    	oos.writeObject(this.IVA);
					
       			    	oos.writeObject(this.CONTRATOS_ID);
					
       			    	oos.writeObject(this.PRECIO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.DCONTRATOS_ID);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.HDCONTRATOS_ID);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.IVA);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.CONTRATOS_ID);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.PRECIO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("DCONTRATOS_ID="+String.valueOf(DCONTRATOS_ID));
		sb.append(",HDCONTRATOS_ID="+String.valueOf(HDCONTRATOS_ID));
		sb.append(",PRODUCTOS_ID="+String.valueOf(PRODUCTOS_ID));
		sb.append(",IVA="+String.valueOf(IVA));
		sb.append(",CONTRATOS_ID="+String.valueOf(CONTRATOS_ID));
		sb.append(",PRECIO="+String.valueOf(PRECIO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.PRODUCTOS_ID, other.PRODUCTOS_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row11Struct row11 = new row11Struct();




	
	/**
	 * [tAdvancedHash_row11 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row11", false);
		start_Hash.put("tAdvancedHash_row11", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tAdvancedHash_row11 = 0;
		

			   		// connection name:row11
			   		// source node:tOracleInput_4 - inputs:(after_tHashInput_1) outputs:(row11,row11) | target node:tAdvancedHash_row11 - inputs:(row11) outputs:()
			   		// linked node: tMap_9 - inputs:(row10,row11) outputs:(outProductoContrato)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row11 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct> tHash_Lookup_row11 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row11Struct>getLookup(matchingModeEnum_row11);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row11", tHash_Lookup_row11);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row11 begin ] stop
 */



	
	/**
	 * [tOracleInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_4", false);
		start_Hash.put("tOracleInput_4", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_4";
	
	
		int tos_count_tOracleInput_4 = 0;
		
	


	
		    int nb_line_tOracleInput_4 = 0;
		    java.sql.Connection conn_tOracleInput_4 = null;
				conn_tOracleInput_4 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_4 = false;
				boolean isConnectionWrapped_tOracleInput_4 = !(conn_tOracleInput_4 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_4.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_4 = null;
                if (isConnectionWrapped_tOracleInput_4) {
					unwrappedOraConn_tOracleInput_4 = conn_tOracleInput_4.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_4 != null) {
                        isTimeZoneNull_tOracleInput_4 = (unwrappedOraConn_tOracleInput_4.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_4 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_4).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_4) {
					java.sql.Statement stmtGetTZ_tOracleInput_4 = conn_tOracleInput_4.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_4 = stmtGetTZ_tOracleInput_4.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_4 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_4.next()) {
						sessionTimezone_tOracleInput_4 = rsGetTZ_tOracleInput_4.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_4 && unwrappedOraConn_tOracleInput_4 != null) {
                        unwrappedOraConn_tOracleInput_4.setSessionTimeZone(sessionTimezone_tOracleInput_4);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_4).setSessionTimeZone(sessionTimezone_tOracleInput_4);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_4 = conn_tOracleInput_4.createStatement();

		    String dbquery_tOracleInput_4 = "SELECT \n  DC.ID AS DCONTRATOS_ID,\n  HD.ID AS HDCONTRATOS_ID,\n  DC.PRODUCTOS_ID,\n  HD.IVA,\n  DC.CONTRATOS_ID,\n  HD"
+".PRECIO\nFROM MED_DCONTRATOS DC \nLEFT JOIN MED_HDCONTRATOS HD ON HD.DCONTRATOS_ID = DC.ID\nWHERE DC.ESTREGISTRO_ID = 1 "
+"AND HD.ESTREGISTRO_ID = 1 AND HD.ESTADO = 'Activo' AND   DC.CONTRATOS_ID = " + context.contrato_id;
		    

		    globalMap.put("tOracleInput_4_QUERY",dbquery_tOracleInput_4);

		    java.sql.ResultSet rs_tOracleInput_4 = null;

		    try {
		    	rs_tOracleInput_4 = stmt_tOracleInput_4.executeQuery(dbquery_tOracleInput_4);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_4 = rs_tOracleInput_4.getMetaData();
		    	int colQtyInRs_tOracleInput_4 = rsmd_tOracleInput_4.getColumnCount();

		    String tmpContent_tOracleInput_4 = null;
		    
		    
		    while (rs_tOracleInput_4.next()) {
		        nb_line_tOracleInput_4++;
		        
							if(colQtyInRs_tOracleInput_4 < 1) {
								row11.DCONTRATOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_4.getObject(1) != null) {
						row11.DCONTRATOS_ID = rs_tOracleInput_4.getBigDecimal(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_4 < 2) {
								row11.HDCONTRATOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_4.getObject(2) != null) {
						row11.HDCONTRATOS_ID = rs_tOracleInput_4.getBigDecimal(2);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_4 < 3) {
								row11.PRODUCTOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_4.getObject(3) != null) {
						row11.PRODUCTOS_ID = rs_tOracleInput_4.getBigDecimal(3);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_4 < 4) {
								row11.IVA = null;
							} else {
		                          
					if(rs_tOracleInput_4.getObject(4) != null) {
						row11.IVA = rs_tOracleInput_4.getBigDecimal(4);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_4 < 5) {
								row11.CONTRATOS_ID = null;
							} else {
		                          
					if(rs_tOracleInput_4.getObject(5) != null) {
						row11.CONTRATOS_ID = rs_tOracleInput_4.getBigDecimal(5);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_4 < 6) {
								row11.PRECIO = null;
							} else {
		                          
					if(rs_tOracleInput_4.getObject(6) != null) {
						row11.PRECIO = rs_tOracleInput_4.getBigDecimal(6);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
					




 



/**
 * [tOracleInput_4 begin ] stop
 */
	
	/**
	 * [tOracleInput_4 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 


	tos_count_tOracleInput_4++;

/**
 * [tOracleInput_4 main ] stop
 */
	
	/**
	 * [tOracleInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row11 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					


			   
			   

					row11Struct row11_HashRow = new row11Struct();
		   	   	   
				
				row11_HashRow.DCONTRATOS_ID = row11.DCONTRATOS_ID;
				
				row11_HashRow.HDCONTRATOS_ID = row11.HDCONTRATOS_ID;
				
				row11_HashRow.PRODUCTOS_ID = row11.PRODUCTOS_ID;
				
				row11_HashRow.IVA = row11.IVA;
				
				row11_HashRow.CONTRATOS_ID = row11.CONTRATOS_ID;
				
				row11_HashRow.PRECIO = row11.PRECIO;
				
			tHash_Lookup_row11.put(row11_HashRow);
			
            




 


	tos_count_tAdvancedHash_row11++;

/**
 * [tAdvancedHash_row11 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

 



/**
 * [tAdvancedHash_row11 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row11 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

 



/**
 * [tAdvancedHash_row11 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_4 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

}
}finally{
	if (rs_tOracleInput_4 != null) {
		rs_tOracleInput_4.close();
	}
	if (stmt_tOracleInput_4 != null) {
		stmt_tOracleInput_4.close();
	}
}

globalMap.put("tOracleInput_4_NB_LINE",nb_line_tOracleInput_4);
 

ok_Hash.put("tOracleInput_4", true);
end_Hash.put("tOracleInput_4", System.currentTimeMillis());




/**
 * [tOracleInput_4 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row11 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

tHash_Lookup_row11.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row11", true);
end_Hash.put("tAdvancedHash_row11", System.currentTimeMillis());




/**
 * [tAdvancedHash_row11 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_4 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row11 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

 



/**
 * [tAdvancedHash_row11 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row21Struct implements routines.system.IPersistableRow<row21Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row21Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class mailStruct implements routines.system.IPersistableRow<mailStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return null;
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return null;
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return null;
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return null;
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(mailStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class salidaStruct implements routines.system.IPersistableRow<salidaStruct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return null;
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return null;
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return null;
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return null;
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(salidaStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row45Struct implements routines.system.IPersistableRow<row45Struct> {
    final static byte[] commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];
    static byte[] commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return null;
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return null;
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return null;
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return null;
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return null;
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return null;
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return null;
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return null;
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return null;
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length) {
				if(length < 1024 && commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario.length == 0) {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[1024];
				} else {
   					commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length);
			strReturn = new String(commonByteArray_MED_CARGUE_INVENTARIO_CargaInventario, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_MED_CARGUE_INVENTARIO_CargaInventario) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row45Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tLogCatcher_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row45Struct row45 = new row45Struct();
salidaStruct salida = new salidaStruct();
salidaStruct mail = salida;
row21Struct row21 = new row21Struct();







	
	/**
	 * [tJava_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_5", false);
		start_Hash.put("tJava_5", System.currentTimeMillis());
		
	
	currentComponent="tJava_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row21");
					}
				
		int tos_count_tJava_5 = 0;
		


context.FECHA_EJECUCION = TalendDate.getDate("DD/MM/YYYY");
context.ESTADO_EXEC = "Interrumpido";


 



/**
 * [tJava_5 begin ] stop
 */



	
	/**
	 * [tRunJob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRunJob_1", false);
		start_Hash.put("tRunJob_1", System.currentTimeMillis());
		
	
	currentComponent="tRunJob_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"mail");
					}
				
		int tos_count_tRunJob_1 = 0;
		
class DealChildJobLibrary_tRunJob_1 {

	public String replaceJarPathsFromCrcMap(String originalClassPathLine) throws java.lang.Exception {
		String classPathLine = "";
		String crcMapPath = new java.io.File("../crcMap").getCanonicalPath();
		if (isNeedAddLibsPath( crcMapPath)) {
			java.util.Map<String, String> crcMap = null;
			java.io.ObjectInputStream ois = new java.io.ObjectInputStream(new java.io.FileInputStream(crcMapPath)) {
				@Override
				public Class<?> resolveClass(java.io.ObjectStreamClass desc) throws java.io.IOException, ClassNotFoundException {
					if(!"java.util.HashMap".equals(desc.getName())) {
						throw new java.io.InvalidClassException("Unauthorized deserialization attempt : " + desc.getName());
					}
					return super.resolveClass(desc);
				}
			};
			crcMap = (java.util.Map<String, String>) ois.readObject();
			ois.close();
			classPathLine = addLibsPath(originalClassPathLine, crcMap);
		} else {
			classPathLine = originalClassPathLine;
		}
		return classPathLine;
	}
	
	private boolean isNeedAddLibsPath(String crcMapPath) {
		if (!(new java.io.File(crcMapPath).exists())) {// when not use cache
			return false;
		}
		return true;
	}
	
	
	private String addLibsPath(String line, java.util.Map<String, String> crcMap) {
		for (java.util.Map.Entry<String, String> entry : crcMap.entrySet()) {
			line = adaptLibPaths(line, entry);
		}
		return line;
	}
	
	private String adaptLibPaths(String line, java.util.Map.Entry<String, String> entry) {
		String jarName = entry.getValue();
		String crc = entry.getKey();
		String libStringFinder = "../lib/" + jarName;
		if (line.contains(libStringFinder)) {
			line = line.replace(libStringFinder, "../../../cache/lib/" + crc + "/" + jarName);
		} else if (line.contains(":$ROOT_PATH/" + jarName + ":")) {
			line = line.replace(":$ROOT_PATH/" + jarName + ":", ":$ROOT_PATH/../../../cache/lib/" + crc + "/" + jarName + ":");
		} else if (line.contains(";" + jarName + ";")) {
			line = line.replace(";" + jarName + ";", ";../../../cache/lib/" + crc + "/" + jarName + ";");
		}
		return line;
	}
	
}
	DealChildJobLibrary_tRunJob_1 dealChildJobLibrary_tRunJob_1 = new DealChildJobLibrary_tRunJob_1();

	class JVMArgumentHelper_tRunJob_1 {
		
		
		
		private void addClasspath(java.util.List<String> target_argument_list, String job_origin_classpath) {
			
			String extra_classpath = null;
			String path_separator = System.getProperty("path.separator");
			if (path_separator != null && path_separator.length() > 1) {
				throw new RuntimeException("path separator should be single character");
			}
			
			if(extra_classpath!=null && !extra_classpath.isEmpty()) {
				if(extra_classpath.endsWith(path_separator)) {
					target_argument_list.add(extra_classpath+job_origin_classpath);
				} else if(extra_classpath.contains(path_separator)) {
					target_argument_list.add(concatStr(extra_classpath, path_separator, job_origin_classpath));
				} else if(extra_classpath.endsWith(":")) {
					target_argument_list.add(extra_classpath.replace(":", path_separator)+job_origin_classpath);
				} else if(extra_classpath.endsWith(";")) {
					target_argument_list.add(extra_classpath.replace(";", path_separator)+job_origin_classpath);
				} else if(extra_classpath.contains(":")) {
					target_argument_list.add(concatStr(extra_classpath.replace(":", path_separator), path_separator, job_origin_classpath));
				} else if(extra_classpath.contains(";")) {
					target_argument_list.add(concatStr(extra_classpath.replace(";", path_separator), path_separator, job_origin_classpath));
				} else {
					target_argument_list.add(concatStr(extra_classpath, path_separator, job_origin_classpath));
				}
				return;
			}
			
			target_argument_list.add(job_origin_classpath);
		}
		
		private String concatStr(String s1, String s2, String s3) {
			java.lang.StringBuilder strB = new java.lang.StringBuilder();
			strB.append(s1).append(s2).append(s3);
			return strB.toString();
		}
		
		public void addArgumentsTo(java.util.List<String> target_argument_list, String argument_from_child) {
			addArgumentsTo(target_argument_list, argument_from_child, false);
		}
		
		public void addArgumentsTo(java.util.List<String> target_argument_list, String argument_from_child, boolean isCP) {
			if(isCP) {
				addClasspath(target_argument_list, argument_from_child);
				return;
			}
		
			
			
			
			target_argument_list.add(argument_from_child);
			
		}
		
		
	}
	
	JVMArgumentHelper_tRunJob_1 jvm_argument_helper_tRunJob_1 = new JVMArgumentHelper_tRunJob_1();
	
	String audit_jar_path_tRunJob_1 = System.getProperty("classpath.extended");
	

 



/**
 * [tRunJob_1 begin ] stop
 */



	
	/**
	 * [tFileOutputDelimited_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_2", false);
		start_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"salida");
					}
				
		int tos_count_tFileOutputDelimited_2 = 0;
		

String fileName_tFileOutputDelimited_2 = "";
    fileName_tFileOutputDelimited_2 = (new java.io.File(context.LOGS_ERROR)).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_2 = null;
    String extension_tFileOutputDelimited_2 = null;
    String directory_tFileOutputDelimited_2 = null;
    if((fileName_tFileOutputDelimited_2.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") < fileName_tFileOutputDelimited_2.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        }
        directory_tFileOutputDelimited_2 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_2 = true;
    java.io.File filetFileOutputDelimited_2 = new java.io.File(fileName_tFileOutputDelimited_2);
    globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
        if(filetFileOutputDelimited_2.exists()){
            isFileGenerated_tFileOutputDelimited_2 = false;
        }
            int nb_line_tFileOutputDelimited_2 = 0;
            int splitedFileNo_tFileOutputDelimited_2 = 0;
            int currentRow_tFileOutputDelimited_2 = 0;

            final String OUT_DELIM_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_2:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_2:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_2 != null && directory_tFileOutputDelimited_2.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_2 = new java.io.File(directory_tFileOutputDelimited_2);
                        if(!dir_tFileOutputDelimited_2.exists()) {
                            dir_tFileOutputDelimited_2.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_2 = null;

                        outtFileOutputDelimited_2 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_2, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_2", outtFileOutputDelimited_2);
                                    if(filetFileOutputDelimited_2.length()==0){
                                        outtFileOutputDelimited_2.write("moment");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("pid");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("root_pid");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("father_pid");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("project");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("job");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("context");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("priority");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("type");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("origin");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("message");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("code");
                                        outtFileOutputDelimited_2.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

 



/**
 * [tFileOutputDelimited_2 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row45");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
	String var1;
	String var2;
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
salidaStruct salida_tmp = new salidaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */



	
	/**
	 * [tLogCatcher_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogCatcher_1", false);
		start_Hash.put("tLogCatcher_1", System.currentTimeMillis());
		
	
	currentComponent="tLogCatcher_1";
	
	
		int tos_count_tLogCatcher_1 = 0;
		

try {
	for (LogCatcherUtils.LogCatcherMessage lcm : tLogCatcher_1.getMessages()) {
		row45.type = lcm.getType();
		row45.origin = (lcm.getOrigin()==null || lcm.getOrigin().length()<1 ? null : lcm.getOrigin());
		row45.priority = lcm.getPriority();
		row45.message = lcm.getMessage();
		row45.code = lcm.getCode();
		
		row45.moment = java.util.Calendar.getInstance().getTime();
	
    	row45.pid = pid;
		row45.root_pid = rootPid;
		row45.father_pid = fatherPid;
	
    	row45.project = projectName;
    	row45.job = jobName;
    	row45.context = contextStr;
    		
 



/**
 * [tLogCatcher_1 begin ] stop
 */
	
	/**
	 * [tLogCatcher_1 main ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 


	tos_count_tLogCatcher_1++;

/**
 * [tLogCatcher_1 main ] stop
 */
	
	/**
	 * [tLogCatcher_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row45"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_5 = false;
		boolean mainRowRejected_tMap_5 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;
Var.var1 = context.FECHA_EJECUCION = TalendDate.getDate("DD/MM/YYYY"); ;
Var.var2 = context.ESTADO_EXEC = "Interrumpido";;// ###############################
        // ###############################
        // # Output tables

salida = null;


// # Output table : 'salida'
salida_tmp.moment = row45.moment;
salida_tmp.pid = row45.pid;
salida_tmp.root_pid = row45.root_pid;
salida_tmp.father_pid = row45.father_pid;
salida_tmp.project = row45.project;
salida_tmp.job = row45.job;
salida_tmp.context = row45.context;
salida_tmp.priority = row45.priority;
salida_tmp.type = row45.type;
salida_tmp.origin = row45.origin;
salida_tmp.message = row45.message;
salida_tmp.code = row45.code;
salida = salida_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "salida"
if(salida != null) { 



	
	/**
	 * [tFileOutputDelimited_2 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"salida"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_2 = new StringBuilder();
                            if(salida.moment != null) {
                        sb_tFileOutputDelimited_2.append(
                            FormatterUtils.format_Date(salida.moment, "yyyy-MM-dd HH:mm:ss")
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.pid != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.pid
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.root_pid != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.root_pid
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.father_pid != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.father_pid
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.project != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.project
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.job != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.job
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.context != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.context
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.priority != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.priority
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.type != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.type
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.origin != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.origin
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.message != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.message
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(salida.code != null) {
                        sb_tFileOutputDelimited_2.append(
                            salida.code
                        );
                            }
                    sb_tFileOutputDelimited_2.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);


                    nb_line_tFileOutputDelimited_2++;
                    resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

                        outtFileOutputDelimited_2.write(sb_tFileOutputDelimited_2.toString());




 
     mail = salida;


	tos_count_tFileOutputDelimited_2++;

/**
 * [tFileOutputDelimited_2 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_begin ] stop
 */

	
	/**
	 * [tRunJob_1 main ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"mail"
						
						);
					}
					
	java.util.List<String> paraList_tRunJob_1 = new java.util.ArrayList<String>();
	
			
			String osName_tRunJob_1 = System.getProperty("os.name");
			if (osName_tRunJob_1 != null && osName_tRunJob_1.toLowerCase(java.util.Locale.US).startsWith("win")){
				
						paraList_tRunJob_1.add("java");
						String m2 = System.getProperty("talend.component.manager.m2.repository");
						if (m2 != null){
							paraList_tRunJob_1.add("-Dtalend.component.manager.m2.repository=" + m2);
						}
						
						if (Boolean.getBoolean("propagateLoggingConfiguration")) {
							String log4j1_config_tRunJob_1 = System.getProperty("log4j.configuration");
							if (log4j1_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configuration=" + log4j1_config_tRunJob_1);
							}
							String log4j2_config_tRunJob_1 = System.getProperty("log4j.configurationFile");
							if (log4j2_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configurationFile=" + log4j2_config_tRunJob_1);
							}
							if (log4j1_config_tRunJob_1 != null || log4j2_config_tRunJob_1 != null) {
								paraList_tRunJob_1.add("-DpropagateLoggingConfiguration=true");
							}
						}
						
						if(enableLogStash){
							System.getProperties().stringPropertyNames().stream()
								.filter(it -> it.startsWith("audit."))
								.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
						}
							
						System.getProperties().stringPropertyNames().stream()
							.filter(it -> it.startsWith("runtime.lineage.") || "classpath.extended".equals(it))
							.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
					
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Dtalend.component.manager.m2.repository=../lib");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xms256M");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xmx1024M");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-cp");
		      				
              					String classpath_tRunJob_1_5 = ".;../lib/routines.jar;../lib/log4j-slf4j-impl-2.17.1.jar;../lib/log4j-api-2.17.1.jar;../lib/log4j-core-2.17.1.jar;../lib/activation-1.1.jar;../lib/jakarta.mail-1.6.7.jar;../lib/xpathutil-1.0.0.jar;../lib/slf4j-api-1.7.34.jar;../lib/crypto-utils-7.1.16.jar;../lib/jboss-marshalling-2.0.12.Final.jar;../lib/dom4j-2.1.3.jar;../lib/jaxen-1.1.6.jar;mail_1_5.jar;";
              					
              					if(audit_jar_path_tRunJob_1!=null && !audit_jar_path_tRunJob_1.isEmpty()) {
		      						classpath_tRunJob_1_5 += audit_jar_path_tRunJob_1;
		      					}
		      					
	        					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, dealChildJobLibrary_tRunJob_1.replaceJarPathsFromCrcMap(classpath_tRunJob_1_5), true);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "med_cargue_inventario.mail_1_5.Mail");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_pid="+pid);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--root_pid="+rootPid);
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_node=tRunJob_1");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--context=Default");
		      				
		      					jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "%*");
		      				
			} else {
	      		
						paraList_tRunJob_1.add("java");
						String m2 = System.getProperty("talend.component.manager.m2.repository");
						if (m2 != null){
							paraList_tRunJob_1.add("-Dtalend.component.manager.m2.repository=" + m2);
						}
						
						if (Boolean.getBoolean("propagateLoggingConfiguration")) {
							String log4j1_config_tRunJob_1 = System.getProperty("log4j.configuration");
							if (log4j1_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configuration=" + log4j1_config_tRunJob_1);
							}
							String log4j2_config_tRunJob_1 = System.getProperty("log4j.configurationFile");
							if (log4j2_config_tRunJob_1 != null){
								paraList_tRunJob_1.add("-Dlog4j.configurationFile=" + log4j2_config_tRunJob_1);
							}
							if (log4j1_config_tRunJob_1 != null || log4j2_config_tRunJob_1 != null) {
								paraList_tRunJob_1.add("-DpropagateLoggingConfiguration=true");
							}
						}
						
						if(enableLogStash){
							System.getProperties().stringPropertyNames().stream()
								.filter(it -> it.startsWith("audit."))
								.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
						}
							
						System.getProperties().stringPropertyNames().stream()
							.filter(it -> it.startsWith("runtime.lineage.") || "classpath.extended".equals(it))
							.forEach(key -> paraList_tRunJob_1.add("-D" + key + "=" + System.getProperty(key)));
					
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Dtalend.component.manager.m2.repository=../lib");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xms256M");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-Xmx1024M");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "-cp");
		      				
		      					String classpath_tRunJob_1_5 = ".:$ROOT_PATH:$ROOT_PATH/../lib/routines.jar:$ROOT_PATH/../lib/log4j-slf4j-impl-2.17.1.jar:$ROOT_PATH/../lib/log4j-api-2.17.1.jar:$ROOT_PATH/../lib/log4j-core-2.17.1.jar:$ROOT_PATH/../lib/activation-1.1.jar:$ROOT_PATH/../lib/jakarta.mail-1.6.7.jar:$ROOT_PATH/../lib/xpathutil-1.0.0.jar:$ROOT_PATH/../lib/slf4j-api-1.7.34.jar:$ROOT_PATH/../lib/crypto-utils-7.1.16.jar:$ROOT_PATH/../lib/jboss-marshalling-2.0.12.Final.jar:$ROOT_PATH/../lib/dom4j-2.1.3.jar:$ROOT_PATH/../lib/jaxen-1.1.6.jar:$ROOT_PATH/mail_1_5.jar:";
		      					
		      					if(audit_jar_path_tRunJob_1!=null && !audit_jar_path_tRunJob_1.isEmpty()) {
		      						classpath_tRunJob_1_5 += audit_jar_path_tRunJob_1;
		      					}
		      					
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, dealChildJobLibrary_tRunJob_1.replaceJarPathsFromCrcMap(classpath_tRunJob_1_5).replace("$ROOT_PATH",System.getProperty("user.dir")), true);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "med_cargue_inventario.mail_1_5.Mail");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_pid="+pid);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--root_pid="+rootPid);
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--father_node=tRunJob_1");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "--context=Default");
		      				
								jvm_argument_helper_tRunJob_1.addArgumentsTo(paraList_tRunJob_1, "$@");
		      				
			}

			
			
	  	
		if(enableLogStash){
			paraList_tRunJob_1.add("--audit.enabled="+enableLogStash);
		}
		
	//for feature:10589
	
		paraList_tRunJob_1.add("--stat_port=" + null);
	

	if(resuming_logs_dir_path != null){
		paraList_tRunJob_1.add("--resuming_logs_dir_path=" + resuming_logs_dir_path);
	}
	String childResumePath_tRunJob_1 = ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path);
	String tRunJobName_tRunJob_1 = ResumeUtil.getRighttRunJob(resuming_checkpoint_path);
	if("tRunJob_1".equals(tRunJobName_tRunJob_1) && childResumePath_tRunJob_1 != null){
		paraList_tRunJob_1.add("--resuming_checkpoint_path=" + ResumeUtil.getChildJobCheckPointPath(resuming_checkpoint_path));
	}
	paraList_tRunJob_1.add("--parent_part_launcher=JOB:" + jobName + "/NODE:tRunJob_1");
	
	java.util.Map<String, Object> parentContextMap_tRunJob_1 = new java.util.HashMap<String, Object>();

	

	Object obj_tRunJob_1 = null;

	
		obj_tRunJob_1 = mail.moment;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param moment=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param moment=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param moment=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("moment", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.project;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param project=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param project=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param project=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("project", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.job;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param job=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param job=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param job=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("job", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.context;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param context=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param context=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param context=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("context", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.origin;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param origin=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param origin=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param origin=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("origin", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.message;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param message=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param message=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param message=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("message", obj_tRunJob_1);
	
		obj_tRunJob_1 = mail.pid;
		if(obj_tRunJob_1!=null) {
			if (obj_tRunJob_1.getClass().getName().equals("java.util.Date")) {
				paraList_tRunJob_1.add("--context_param pid=" + ((java.util.Date) obj_tRunJob_1).getTime());
			} else {
				
					paraList_tRunJob_1.add("--context_param pid=" + RuntimeUtils.tRunJobConvertContext(obj_tRunJob_1));
					
				
			}
		} else {
			paraList_tRunJob_1.add("--context_param pid=" + NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY);
		}
		
		parentContextMap_tRunJob_1.put("pid", obj_tRunJob_1);
	
	
				class ConsoleHelper_tRunJob_1 {
					private Thread getNormalThread(Process process) {
						return new Thread() {
							public void run() {
								try {
									java.io.BufferedReader reader = new java.io.BufferedReader(
											new java.io.InputStreamReader(
													process.getInputStream()));
									String line = "";
									try {
										while ((line = reader.readLine()) != null) {
											System.out.println(line);
										}
									} finally {
										reader.close();
									}
								} catch (java.io.IOException ioe) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",ioe.getMessage());
						            
									ioe.printStackTrace();
								}
							}
						};
					}

					private Thread getErrorThread(Process process, StringBuffer sb) {
						return new Thread() {
							public void run() {
								try {
									java.io.BufferedReader reader = new java.io.BufferedReader(
											new java.io.InputStreamReader(
													process.getErrorStream()));
									String line = "";
									try {
										while ((line = reader.readLine()) != null) {
											sb.append(line)
													.append("\n");
										}
									} finally {
										reader.close();
									}
								} catch (java.io.IOException ioe) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",ioe.getMessage());
						            
									ioe.printStackTrace();
								}
							}
						};
					}
				}
				ConsoleHelper_tRunJob_1 consoleHelper_tRunJob_1 = new ConsoleHelper_tRunJob_1();

		Runtime runtime_tRunJob_1 = Runtime.getRuntime();
		Process ps_tRunJob_1 = null;
		
		//0 indicates normal termination
        int result_tRunJob_1;
        StringBuffer errorMsg_tRunJob_1 = new StringBuffer();
        try {
            ps_tRunJob_1 = runtime_tRunJob_1.exec((String[])paraList_tRunJob_1.toArray(new String[paraList_tRunJob_1.size()]));

            Thread normal_tRunJob_1 = consoleHelper_tRunJob_1.getNormalThread(ps_tRunJob_1);
            normal_tRunJob_1.start();

            Thread error_tRunJob_1 = consoleHelper_tRunJob_1.getErrorThread(ps_tRunJob_1, errorMsg_tRunJob_1);
            error_tRunJob_1.start();

            result_tRunJob_1 = ps_tRunJob_1.waitFor();
            normal_tRunJob_1.join();
            error_tRunJob_1.join();
        } catch (ThreadDeath tde) {
globalMap.put("tRunJob_1_ERROR_MESSAGE",tde.getMessage());
            ps_tRunJob_1.destroy();
            throw tde;
        }

		globalMap.put("tRunJob_1_CHILD_RETURN_CODE",result_tRunJob_1);
		if(result_tRunJob_1 != 0){
   			globalMap.put("tRunJob_1_CHILD_EXCEPTION_STACKTRACE",errorMsg_tRunJob_1.toString());
			  
	    		throw new RuntimeException("Child job returns " + result_tRunJob_1 + ". It doesn't terminate normally.\n" + errorMsg_tRunJob_1.toString());
			
  		}

		

 


	tos_count_tRunJob_1++;

/**
 * [tRunJob_1 main ] stop
 */
	
	/**
	 * [tRunJob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

 



/**
 * [tRunJob_1 process_data_begin ] stop
 */

	
	/**
	 * [tJava_5 main ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row21"
						
						);
					}
					

 


	tos_count_tJava_5++;

/**
 * [tJava_5 main ] stop
 */
	
	/**
	 * [tJava_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_begin ] stop
 */
	
	/**
	 * [tJava_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_end ] stop
 */



	
	/**
	 * [tRunJob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

 



/**
 * [tRunJob_1 process_data_end ] stop
 */



	
	/**
	 * [tFileOutputDelimited_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_end ] stop
 */

} // End of branch "salida"




	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_end ] stop
 */



	
	/**
	 * [tLogCatcher_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_end ] stop
 */
	
	/**
	 * [tLogCatcher_1 end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	
	}
} catch (Exception e_tLogCatcher_1) {
globalMap.put("tLogCatcher_1_ERROR_MESSAGE",e_tLogCatcher_1.getMessage());
	logIgnoredError(String.format("tLogCatcher_1 - tLogCatcher failed to process log message(s) due to internal error: %s", e_tLogCatcher_1), e_tLogCatcher_1);
}

 

ok_Hash.put("tLogCatcher_1", true);
end_Hash.put("tLogCatcher_1", System.currentTimeMillis());




/**
 * [tLogCatcher_1 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row45");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	



		
			
					if(outtFileOutputDelimited_2!=null) {
						outtFileOutputDelimited_2.flush();
						outtFileOutputDelimited_2.close();
					}
				
				globalMap.put("tFileOutputDelimited_2_NB_LINE",nb_line_tFileOutputDelimited_2);
				globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_2", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"salida");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_2", true);
end_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_2 end ] stop
 */

	
	/**
	 * [tRunJob_1 end ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"mail");
			  	}
			  	
 

ok_Hash.put("tRunJob_1", true);
end_Hash.put("tRunJob_1", System.currentTimeMillis());




/**
 * [tRunJob_1 end ] stop
 */

	
	/**
	 * [tJava_5 end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row21");
			  	}
			  	
 

ok_Hash.put("tJava_5", true);
end_Hash.put("tJava_5", System.currentTimeMillis());




/**
 * [tJava_5 end ] stop
 */












				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tLogCatcher_1 finally ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_2") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_2 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_2");
						if(outtFileOutputDelimited_2!=null) {
							outtFileOutputDelimited_2.flush();
							outtFileOutputDelimited_2.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_2 finally ] stop
 */

	
	/**
	 * [tRunJob_1 finally ] start
	 */

	

	
	
	currentComponent="tRunJob_1";
	
	
	
 



/**
 * [tRunJob_1 finally ] stop
 */

	
	/**
	 * [tJava_5 finally ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };


    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final CargaInventario CargaInventarioClass = new CargaInventario();

        int exitCode = CargaInventarioClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = (String[][])globalBuffer.toArray(new String[globalBuffer.size()][]);

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        		hastBufferOutput = true;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = CargaInventario.class.getClassLoader().getResourceAsStream("med_cargue_inventario/cargainventario_1_5/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = CargaInventario.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }
            
            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("db_origen_AdditionalParams", "id_String");
                        if(context.getStringValue("db_origen_AdditionalParams") == null) {
                            context.db_origen_AdditionalParams = null;
                        } else {
                            context.db_origen_AdditionalParams=(String) context.getProperty("db_origen_AdditionalParams");
                        }
                        context.setContextType("db_origen_Login", "id_String");
                        if(context.getStringValue("db_origen_Login") == null) {
                            context.db_origen_Login = null;
                        } else {
                            context.db_origen_Login=(String) context.getProperty("db_origen_Login");
                        }
                        context.setContextType("db_origen_Password", "id_String");
                        if(context.getStringValue("db_origen_Password") == null) {
                            context.db_origen_Password = null;
                        } else {
                            context.db_origen_Password=(String) context.getProperty("db_origen_Password");
                        }
                        context.setContextType("db_origen_Port", "id_String");
                        if(context.getStringValue("db_origen_Port") == null) {
                            context.db_origen_Port = null;
                        } else {
                            context.db_origen_Port=(String) context.getProperty("db_origen_Port");
                        }
                        context.setContextType("db_origen_Schema", "id_String");
                        if(context.getStringValue("db_origen_Schema") == null) {
                            context.db_origen_Schema = null;
                        } else {
                            context.db_origen_Schema=(String) context.getProperty("db_origen_Schema");
                        }
                        context.setContextType("db_origen_Server", "id_String");
                        if(context.getStringValue("db_origen_Server") == null) {
                            context.db_origen_Server = null;
                        } else {
                            context.db_origen_Server=(String) context.getProperty("db_origen_Server");
                        }
                        context.setContextType("db_origen_ServiceName", "id_String");
                        if(context.getStringValue("db_origen_ServiceName") == null) {
                            context.db_origen_ServiceName = null;
                        } else {
                            context.db_origen_ServiceName=(String) context.getProperty("db_origen_ServiceName");
                        }
                        context.setContextType("ERROR", "id_String");
                        if(context.getStringValue("ERROR") == null) {
                            context.ERROR = null;
                        } else {
                            context.ERROR=(String) context.getProperty("ERROR");
                        }
                        context.setContextType("ESTADO", "id_String");
                        if(context.getStringValue("ESTADO") == null) {
                            context.ESTADO = null;
                        } else {
                            context.ESTADO=(String) context.getProperty("ESTADO");
                        }
                        context.setContextType("ESTADO_EXEC", "id_String");
                        if(context.getStringValue("ESTADO_EXEC") == null) {
                            context.ESTADO_EXEC = null;
                        } else {
                            context.ESTADO_EXEC=(String) context.getProperty("ESTADO_EXEC");
                        }
                        context.setContextType("FECHA_EJECUCION", "id_String");
                        if(context.getStringValue("FECHA_EJECUCION") == null) {
                            context.FECHA_EJECUCION = null;
                        } else {
                            context.FECHA_EJECUCION=(String) context.getProperty("FECHA_EJECUCION");
                        }
                        context.setContextType("HORA_FINAL", "id_String");
                        if(context.getStringValue("HORA_FINAL") == null) {
                            context.HORA_FINAL = null;
                        } else {
                            context.HORA_FINAL=(String) context.getProperty("HORA_FINAL");
                        }
                        context.setContextType("HORA_INICIO", "id_String");
                        if(context.getStringValue("HORA_INICIO") == null) {
                            context.HORA_INICIO = null;
                        } else {
                            context.HORA_INICIO=(String) context.getProperty("HORA_INICIO");
                        }
                        context.setContextType("LOGS_ERROR", "id_String");
                        if(context.getStringValue("LOGS_ERROR") == null) {
                            context.LOGS_ERROR = null;
                        } else {
                            context.LOGS_ERROR=(String) context.getProperty("LOGS_ERROR");
                        }
                        context.setContextType("LOGS_EXECUTION", "id_String");
                        if(context.getStringValue("LOGS_EXECUTION") == null) {
                            context.LOGS_EXECUTION = null;
                        } else {
                            context.LOGS_EXECUTION=(String) context.getProperty("LOGS_EXECUTION");
                        }
                        context.setContextType("ORIGEN", "id_String");
                        if(context.getStringValue("ORIGEN") == null) {
                            context.ORIGEN = null;
                        } else {
                            context.ORIGEN=(String) context.getProperty("ORIGEN");
                        }
                        context.setContextType("bodega_id", "id_BigDecimal");
                        if(context.getStringValue("bodega_id") == null) {
                            context.bodega_id = null;
                        } else {
                            try{
                                context.bodega_id=routines.system.ParserUtils.parseTo_BigDecimal (context.getProperty("bodega_id"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "bodega_id", e.getMessage()));
                                context.bodega_id=null;
                            }
                        }
                        context.setContextType("cantFilas", "id_Integer");
                        if(context.getStringValue("cantFilas") == null) {
                            context.cantFilas = null;
                        } else {
                            try{
                                context.cantFilas=routines.system.ParserUtils.parseTo_Integer (context.getProperty("cantFilas"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "cantFilas", e.getMessage()));
                                context.cantFilas=null;
                            }
                        }
                        context.setContextType("carga_id", "id_BigDecimal");
                        if(context.getStringValue("carga_id") == null) {
                            context.carga_id = null;
                        } else {
                            try{
                                context.carga_id=routines.system.ParserUtils.parseTo_BigDecimal (context.getProperty("carga_id"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "carga_id", e.getMessage()));
                                context.carga_id=null;
                            }
                        }
                        context.setContextType("Contenido", "id_Object");
                        if(context.getStringValue("Contenido") == null) {
                            context.Contenido = null;
                        } else {
                            context.Contenido=(Object) context.getProperty("Contenido");
                        }
                        context.setContextType("contrato_id", "id_BigDecimal");
                        if(context.getStringValue("contrato_id") == null) {
                            context.contrato_id = null;
                        } else {
                            try{
                                context.contrato_id=routines.system.ParserUtils.parseTo_BigDecimal (context.getProperty("contrato_id"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "contrato_id", e.getMessage()));
                                context.contrato_id=null;
                            }
                        }
                        context.setContextType("IsValid", "id_Boolean");
                        if(context.getStringValue("IsValid") == null) {
                            context.IsValid = null;
                        } else {
                            try{
                                context.IsValid=routines.system.ParserUtils.parseTo_Boolean (context.getProperty("IsValid"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "IsValid", e.getMessage()));
                                context.IsValid=null;
                            }
                        }
                        context.setContextType("movimiento_id", "id_BigDecimal");
                        if(context.getStringValue("movimiento_id") == null) {
                            context.movimiento_id = null;
                        } else {
                            try{
                                context.movimiento_id=routines.system.ParserUtils.parseTo_BigDecimal (context.getProperty("movimiento_id"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "movimiento_id", e.getMessage()));
                                context.movimiento_id=null;
                            }
                        }
                        context.setContextType("nombre", "id_String");
                        if(context.getStringValue("nombre") == null) {
                            context.nombre = null;
                        } else {
                            context.nombre=(String) context.getProperty("nombre");
                        }
                        context.setContextType("result", "id_String");
                        if(context.getStringValue("result") == null) {
                            context.result = null;
                        } else {
                            context.result=(String) context.getProperty("result");
                        }
                        context.setContextType("Salida", "id_Object");
                        if(context.getStringValue("Salida") == null) {
                            context.Salida = null;
                        } else {
                            context.Salida=(Object) context.getProperty("Salida");
                        }
                        context.setContextType("TContenido", "id_String");
                        if(context.getStringValue("TContenido") == null) {
                            context.TContenido = null;
                        } else {
                            context.TContenido=(String) context.getProperty("TContenido");
                        }
                        context.setContextType("tmovimiento_id", "id_BigDecimal");
                        if(context.getStringValue("tmovimiento_id") == null) {
                            context.tmovimiento_id = null;
                        } else {
                            try{
                                context.tmovimiento_id=routines.system.ParserUtils.parseTo_BigDecimal (context.getProperty("tmovimiento_id"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tmovimiento_id", e.getMessage()));
                                context.tmovimiento_id=null;
                            }
                        }
                        context.setContextType("tvencimiento", "id_Integer");
                        if(context.getStringValue("tvencimiento") == null) {
                            context.tvencimiento = null;
                        } else {
                            try{
                                context.tvencimiento=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tvencimiento"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tvencimiento", e.getMessage()));
                                context.tvencimiento=null;
                            }
                        }
                        context.setContextType("usuario_id", "id_BigDecimal");
                        if(context.getStringValue("usuario_id") == null) {
                            context.usuario_id = null;
                        } else {
                            try{
                                context.usuario_id=routines.system.ParserUtils.parseTo_BigDecimal (context.getProperty("usuario_id"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "usuario_id", e.getMessage()));
                                context.usuario_id=null;
                            }
                        }
                        context.setContextType("TipoProducto", "id_String");
                        if(context.getStringValue("TipoProducto") == null) {
                            context.TipoProducto = null;
                        } else {
                            context.TipoProducto=(String) context.getProperty("TipoProducto");
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("db_origen_AdditionalParams")) {
                context.db_origen_AdditionalParams = (String) parentContextMap.get("db_origen_AdditionalParams");
            }if (parentContextMap.containsKey("db_origen_Login")) {
                context.db_origen_Login = (String) parentContextMap.get("db_origen_Login");
            }if (parentContextMap.containsKey("db_origen_Password")) {
                context.db_origen_Password = (String) parentContextMap.get("db_origen_Password");
            }if (parentContextMap.containsKey("db_origen_Port")) {
                context.db_origen_Port = (String) parentContextMap.get("db_origen_Port");
            }if (parentContextMap.containsKey("db_origen_Schema")) {
                context.db_origen_Schema = (String) parentContextMap.get("db_origen_Schema");
            }if (parentContextMap.containsKey("db_origen_Server")) {
                context.db_origen_Server = (String) parentContextMap.get("db_origen_Server");
            }if (parentContextMap.containsKey("db_origen_ServiceName")) {
                context.db_origen_ServiceName = (String) parentContextMap.get("db_origen_ServiceName");
            }if (parentContextMap.containsKey("ERROR")) {
                context.ERROR = (String) parentContextMap.get("ERROR");
            }if (parentContextMap.containsKey("ESTADO")) {
                context.ESTADO = (String) parentContextMap.get("ESTADO");
            }if (parentContextMap.containsKey("ESTADO_EXEC")) {
                context.ESTADO_EXEC = (String) parentContextMap.get("ESTADO_EXEC");
            }if (parentContextMap.containsKey("FECHA_EJECUCION")) {
                context.FECHA_EJECUCION = (String) parentContextMap.get("FECHA_EJECUCION");
            }if (parentContextMap.containsKey("HORA_FINAL")) {
                context.HORA_FINAL = (String) parentContextMap.get("HORA_FINAL");
            }if (parentContextMap.containsKey("HORA_INICIO")) {
                context.HORA_INICIO = (String) parentContextMap.get("HORA_INICIO");
            }if (parentContextMap.containsKey("LOGS_ERROR")) {
                context.LOGS_ERROR = (String) parentContextMap.get("LOGS_ERROR");
            }if (parentContextMap.containsKey("LOGS_EXECUTION")) {
                context.LOGS_EXECUTION = (String) parentContextMap.get("LOGS_EXECUTION");
            }if (parentContextMap.containsKey("ORIGEN")) {
                context.ORIGEN = (String) parentContextMap.get("ORIGEN");
            }if (parentContextMap.containsKey("bodega_id")) {
                context.bodega_id = (BigDecimal) parentContextMap.get("bodega_id");
            }if (parentContextMap.containsKey("cantFilas")) {
                context.cantFilas = (Integer) parentContextMap.get("cantFilas");
            }if (parentContextMap.containsKey("carga_id")) {
                context.carga_id = (BigDecimal) parentContextMap.get("carga_id");
            }if (parentContextMap.containsKey("Contenido")) {
                context.Contenido = (Object) parentContextMap.get("Contenido");
            }if (parentContextMap.containsKey("contrato_id")) {
                context.contrato_id = (BigDecimal) parentContextMap.get("contrato_id");
            }if (parentContextMap.containsKey("IsValid")) {
                context.IsValid = (Boolean) parentContextMap.get("IsValid");
            }if (parentContextMap.containsKey("movimiento_id")) {
                context.movimiento_id = (BigDecimal) parentContextMap.get("movimiento_id");
            }if (parentContextMap.containsKey("nombre")) {
                context.nombre = (String) parentContextMap.get("nombre");
            }if (parentContextMap.containsKey("result")) {
                context.result = (String) parentContextMap.get("result");
            }if (parentContextMap.containsKey("Salida")) {
                context.Salida = (Object) parentContextMap.get("Salida");
            }if (parentContextMap.containsKey("TContenido")) {
                context.TContenido = (String) parentContextMap.get("TContenido");
            }if (parentContextMap.containsKey("tmovimiento_id")) {
                context.tmovimiento_id = (BigDecimal) parentContextMap.get("tmovimiento_id");
            }if (parentContextMap.containsKey("tvencimiento")) {
                context.tvencimiento = (Integer) parentContextMap.get("tvencimiento");
            }if (parentContextMap.containsKey("usuario_id")) {
                context.usuario_id = (BigDecimal) parentContextMap.get("usuario_id");
            }if (parentContextMap.containsKey("TipoProducto")) {
                context.TipoProducto = (String) parentContextMap.get("TipoProducto");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs


this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : CargaInventario");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;


    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tOracleConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tOracleConnection_1", globalMap.get("conn_tOracleConnection_1"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--context_file")) {
        	String keyValue = arg.substring(15);
        	String filePath = new String(java.util.Base64.getDecoder().decode(keyValue));
        	java.nio.file.Path contextFile = java.nio.file.Paths.get(filePath);
            try (java.io.BufferedReader reader = java.nio.file.Files.newBufferedReader(contextFile)) {
                String line;
                while ((line = reader.readLine()) != null) {
                    int index = -1;
                    if ( (index = line.indexOf('=')) > -1) {
							if (line.startsWith("--context_param")) {
								if ("id_Password".equals(context_param.getContextType(line.substring(16, index)))) {
									context_param.put(line.substring(16, index), routines.system.PasswordEncryptUtil.decryptPassword(
											line.substring(index + 1)));
								} else {
									context_param.put(line.substring(16, index), line.substring(index + 1));
								}
							}else {//--context_type
								context_param.setContextType(line.substring(15, index), line.substring(index + 1));
							}
                    }
                }
            } catch (java.io.IOException e) {
            	System.err.println("Could not load the context file: " + filePath);
                e.printStackTrace();
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     1753736 characters generated by Talend Open Studio for ESB 
 *     on the October 28, 2024, 3:00:37 PM COT
 ************************************************************************************************/