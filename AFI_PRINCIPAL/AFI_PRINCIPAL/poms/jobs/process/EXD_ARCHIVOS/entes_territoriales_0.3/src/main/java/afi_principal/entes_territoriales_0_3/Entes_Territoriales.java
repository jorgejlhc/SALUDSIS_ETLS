// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for ESB
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package afi_principal.entes_territoriales_0_3;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.Utils;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.GenerarUuid;
import routines.Mathematical;
import routines.ExtraerBlob;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJava_1
	//import java.util.List;

	//the import part of tJava_2
	//import java.util.List;

	//the import part of tJava_6
	//import java.util.List;

	//the import part of tJava_7
	//import java.util.List;

	//the import part of tJava_3
	//import java.util.List;

	//the import part of tJava_4
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: Entes_Territoriales Purpose: Cruce archivo entes territoriales<br>
 * Description:  <br>
 * @author jorgejlhc@gmail.com
 * @version 8.8.8.20240722_1936-SNAPSHOT
 * @status DEV
 */
public class Entes_Territoriales implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(tipoArchivoMinSaludEtapa3MultiafiliacionGenerado != null){
				
					this.setProperty("tipoArchivoMinSaludEtapa3MultiafiliacionGenerado", tipoArchivoMinSaludEtapa3MultiafiliacionGenerado.toString());
				
			}
			
			if(tipoArchivoMinSaludEtapa2NuevosRegistros != null){
				
					this.setProperty("tipoArchivoMinSaludEtapa2NuevosRegistros", tipoArchivoMinSaludEtapa2NuevosRegistros.toString());
				
			}
			
			if(tipoArchivoEntesTerritoriales != null){
				
					this.setProperty("tipoArchivoEntesTerritoriales", tipoArchivoEntesTerritoriales.toString());
				
			}
			
			if(tipoArchivoMinSaludEtapa2Novedades != null){
				
					this.setProperty("tipoArchivoMinSaludEtapa2Novedades", tipoArchivoMinSaludEtapa2Novedades.toString());
				
			}
			
			if(tipoArchivoMinSaludEtapa2NovedadesGenerado != null){
				
					this.setProperty("tipoArchivoMinSaludEtapa2NovedadesGenerado", tipoArchivoMinSaludEtapa2NovedadesGenerado.toString());
				
			}
			
			if(tipoArchivoMinSaludEtapa2NuevosRegistrosGenerado != null){
				
					this.setProperty("tipoArchivoMinSaludEtapa2NuevosRegistrosGenerado", tipoArchivoMinSaludEtapa2NuevosRegistrosGenerado.toString());
				
			}
			
			if(tipoArchivoMinSaludEtapa3Multiafiliacion != null){
				
					this.setProperty("tipoArchivoMinSaludEtapa3Multiafiliacion", tipoArchivoMinSaludEtapa3Multiafiliacion.toString());
				
			}
			
			if(tipoArchivoFedevidaGenerado != null){
				
					this.setProperty("tipoArchivoFedevidaGenerado", tipoArchivoFedevidaGenerado.toString());
				
			}
			
			if(tipoArchivoEntesGenerado != null){
				
					this.setProperty("tipoArchivoEntesGenerado", tipoArchivoEntesGenerado.toString());
				
			}
			
			if(tipoArchivoFedevida != null){
				
					this.setProperty("tipoArchivoFedevida", tipoArchivoFedevida.toString());
				
			}
			
			if(tipoJobProceso != null){
				
					this.setProperty("tipoJobProceso", tipoJobProceso.toString());
				
			}
			
			if(idProceso != null){
				
					this.setProperty("idProceso", idProceso.toString());
				
			}
			
			if(tipoProceso != null){
				
					this.setProperty("tipoProceso", tipoProceso.toString());
				
			}
			
			if(descripcionProceso != null){
				
					this.setProperty("descripcionProceso", descripcionProceso.toString());
				
			}
			
			if(fileSystem_Path != null){
				
					this.setProperty("fileSystem_Path", fileSystem_Path.toString());
				
			}
			
			if(fileSystem_Area != null){
				
					this.setProperty("fileSystem_Area", fileSystem_Area.toString());
				
			}
			
			if(infoNombreArchivo != null){
				
					this.setProperty("infoNombreArchivo", infoNombreArchivo.toString());
				
			}
			
			if(infoUsuarioIdArchivo != null){
				
					this.setProperty("infoUsuarioIdArchivo", infoUsuarioIdArchivo.toString());
				
			}
			
			if(infoIdArchivo != null){
				
					this.setProperty("infoIdArchivo", infoIdArchivo.toString());
				
			}
			
			if(infoTipoArchivo != null){
				
					this.setProperty("infoTipoArchivo", infoTipoArchivo.toString());
				
			}
			
			if(auxAumentoRegistros != null){
				
					this.setProperty("auxAumentoRegistros", auxAumentoRegistros.toString());
				
			}
			
			if(archivoConfiguracion != null){
				
					this.setProperty("archivoConfiguracion", archivoConfiguracion.toString());
				
			}
			
			if(outCodigo != null){
				
					this.setProperty("outCodigo", outCodigo.toString());
				
			}
			
			if(auxPosicionRegistros != null){
				
					this.setProperty("auxPosicionRegistros", auxPosicionRegistros.toString());
				
			}
			
			if(archivoSalida != null){
				
					this.setProperty("archivoSalida", archivoSalida.toString());
				
			}
			
			if(infoConteoRegistros != null){
				
					this.setProperty("infoConteoRegistros", infoConteoRegistros.toString());
				
			}
			
			if(DOCUMENTO != null){
				
					this.setProperty("DOCUMENTO", DOCUMENTO.toString());
				
			}
			
			if(TIPO_DOCUMENTO != null){
				
					this.setProperty("TIPO_DOCUMENTO", TIPO_DOCUMENTO.toString());
				
			}
			
			if(mail_PasswordMail != null){
				
					this.setProperty("mail_PasswordMail", mail_PasswordMail.toString());
				
			}
			
			if(mail_SMTPPort != null){
				
					this.setProperty("mail_SMTPPort", mail_SMTPPort.toString());
				
			}
			
			if(mail_UsernameMail != null){
				
					this.setProperty("mail_UsernameMail", mail_UsernameMail.toString());
				
			}
			
			if(mail_SMTPHost != null){
				
					this.setProperty("mail_SMTPHost", mail_SMTPHost.toString());
				
			}
			
			if(ID_ARCHIVOS != null){
				
					this.setProperty("ID_ARCHIVOS", ID_ARCHIVOS.toString());
				
			}
			
			if(estArchivoActivo != null){
				
					this.setProperty("estArchivoActivo", estArchivoActivo.toString());
				
			}
			
			if(estArchivoCancelado != null){
				
					this.setProperty("estArchivoCancelado", estArchivoCancelado.toString());
				
			}
			
			if(estArchivoEnProceso != null){
				
					this.setProperty("estArchivoEnProceso", estArchivoEnProceso.toString());
				
			}
			
			if(estArchivoErrorArchivo != null){
				
					this.setProperty("estArchivoErrorArchivo", estArchivoErrorArchivo.toString());
				
			}
			
			if(estArchivoErrorProcesamiento != null){
				
					this.setProperty("estArchivoErrorProcesamiento", estArchivoErrorProcesamiento.toString());
				
			}
			
			if(estArchivoInactivo != null){
				
					this.setProperty("estArchivoInactivo", estArchivoInactivo.toString());
				
			}
			
			if(estArchivoPausado != null){
				
					this.setProperty("estArchivoPausado", estArchivoPausado.toString());
				
			}
			
			if(estArchivoProcesado != null){
				
					this.setProperty("estArchivoProcesado", estArchivoProcesado.toString());
				
			}
			
			if(estRegistroActivo != null){
				
					this.setProperty("estRegistroActivo", estRegistroActivo.toString());
				
			}
			
			if(estRegistroInactivo != null){
				
					this.setProperty("estRegistroInactivo", estRegistroInactivo.toString());
				
			}
			
			if(infoTipoArchivoRespuesta != null){
				
					this.setProperty("infoTipoArchivoRespuesta", infoTipoArchivoRespuesta.toString());
				
			}
			
			if(oracle_AdditionalParams != null){
				
					this.setProperty("oracle_AdditionalParams", oracle_AdditionalParams.toString());
				
			}
			
			if(oracle_Host != null){
				
					this.setProperty("oracle_Host", oracle_Host.toString());
				
			}
			
			if(oracle_Password != null){
				
					this.setProperty("oracle_Password", oracle_Password.toString());
				
			}
			
			if(oracle_Port != null){
				
					this.setProperty("oracle_Port", oracle_Port.toString());
				
			}
			
			if(oracle_Schema != null){
				
					this.setProperty("oracle_Schema", oracle_Schema.toString());
				
			}
			
			if(oracle_ServiceName != null){
				
					this.setProperty("oracle_ServiceName", oracle_ServiceName.toString());
				
			}
			
			if(oracle_Sid != null){
				
					this.setProperty("oracle_Sid", oracle_Sid.toString());
				
			}
			
			if(oracle_User != null){
				
					this.setProperty("oracle_User", oracle_User.toString());
				
			}
			
			if(tipoArchivoCompendioSalud != null){
				
					this.setProperty("tipoArchivoCompendioSalud", tipoArchivoCompendioSalud.toString());
				
			}
			
			if(tipoArchivoCompendioSaludGenerado != null){
				
					this.setProperty("tipoArchivoCompendioSaludGenerado", tipoArchivoCompendioSaludGenerado.toString());
				
			}
			
			if(tipoArchivoCruceErrores != null){
				
					this.setProperty("tipoArchivoCruceErrores", tipoArchivoCruceErrores.toString());
				
			}
			
			if(tipoJobCompendioSalud != null){
				
					this.setProperty("tipoJobCompendioSalud", tipoJobCompendioSalud.toString());
				
			}
			
			if(tipoJobEntesTerritoriales != null){
				
					this.setProperty("tipoJobEntesTerritoriales", tipoJobEntesTerritoriales.toString());
				
			}
			
			if(tipoJobFedevida != null){
				
					this.setProperty("tipoJobFedevida", tipoJobFedevida.toString());
				
			}
			
			if(tipoJobMinsaludEtapa2Novedades != null){
				
					this.setProperty("tipoJobMinsaludEtapa2Novedades", tipoJobMinsaludEtapa2Novedades.toString());
				
			}
			
			if(tipoJobMinsaludEtapa2NuevosRegistros != null){
				
					this.setProperty("tipoJobMinsaludEtapa2NuevosRegistros", tipoJobMinsaludEtapa2NuevosRegistros.toString());
				
			}
			
			if(tipoJobMinsaludEtapa3Multiafiliacion != null){
				
					this.setProperty("tipoJobMinsaludEtapa3Multiafiliacion", tipoJobMinsaludEtapa3Multiafiliacion.toString());
				
			}
			
			if(auxAfiliadosCriterio != null){
				
					this.setProperty("auxAfiliadosCriterio", auxAfiliadosCriterio.toString());
				
			}
			
			if(auxAfiliadosCriterioAct != null){
				
					this.setProperty("auxAfiliadosCriterioAct", auxAfiliadosCriterioAct.toString());
				
			}
			
			if(auxAfiliadosCriterioInact != null){
				
					this.setProperty("auxAfiliadosCriterioInact", auxAfiliadosCriterioInact.toString());
				
			}
			
			if(auxCriterioActual != null){
				
					this.setProperty("auxCriterioActual", auxCriterioActual.toString());
				
			}
			
			if(auxPrimerLoop != null){
				
					this.setProperty("auxPrimerLoop", auxPrimerLoop.toString());
				
			}
			
			if(auxRango != null){
				
					this.setProperty("auxRango", auxRango.toString());
				
			}
			
			if(suma != null){
				
					this.setProperty("suma", suma.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public Integer tipoArchivoMinSaludEtapa3MultiafiliacionGenerado;
public Integer getTipoArchivoMinSaludEtapa3MultiafiliacionGenerado(){
	return this.tipoArchivoMinSaludEtapa3MultiafiliacionGenerado;
}
public Integer tipoArchivoMinSaludEtapa2NuevosRegistros;
public Integer getTipoArchivoMinSaludEtapa2NuevosRegistros(){
	return this.tipoArchivoMinSaludEtapa2NuevosRegistros;
}
public Integer tipoArchivoEntesTerritoriales;
public Integer getTipoArchivoEntesTerritoriales(){
	return this.tipoArchivoEntesTerritoriales;
}
public Integer tipoArchivoMinSaludEtapa2Novedades;
public Integer getTipoArchivoMinSaludEtapa2Novedades(){
	return this.tipoArchivoMinSaludEtapa2Novedades;
}
public Integer tipoArchivoMinSaludEtapa2NovedadesGenerado;
public Integer getTipoArchivoMinSaludEtapa2NovedadesGenerado(){
	return this.tipoArchivoMinSaludEtapa2NovedadesGenerado;
}
public Integer tipoArchivoMinSaludEtapa2NuevosRegistrosGenerado;
public Integer getTipoArchivoMinSaludEtapa2NuevosRegistrosGenerado(){
	return this.tipoArchivoMinSaludEtapa2NuevosRegistrosGenerado;
}
public Integer tipoArchivoMinSaludEtapa3Multiafiliacion;
public Integer getTipoArchivoMinSaludEtapa3Multiafiliacion(){
	return this.tipoArchivoMinSaludEtapa3Multiafiliacion;
}
public Integer tipoArchivoFedevidaGenerado;
public Integer getTipoArchivoFedevidaGenerado(){
	return this.tipoArchivoFedevidaGenerado;
}
public Integer tipoArchivoEntesGenerado;
public Integer getTipoArchivoEntesGenerado(){
	return this.tipoArchivoEntesGenerado;
}
public Integer tipoArchivoFedevida;
public Integer getTipoArchivoFedevida(){
	return this.tipoArchivoFedevida;
}
public Integer tipoJobProceso;
public Integer getTipoJobProceso(){
	return this.tipoJobProceso;
}
public Integer idProceso;
public Integer getIdProceso(){
	return this.idProceso;
}
public Integer tipoProceso;
public Integer getTipoProceso(){
	return this.tipoProceso;
}
public String descripcionProceso;
public String getDescripcionProceso(){
	return this.descripcionProceso;
}
public String fileSystem_Path;
public String getFileSystem_Path(){
	return this.fileSystem_Path;
}
public String fileSystem_Area;
public String getFileSystem_Area(){
	return this.fileSystem_Area;
}
public String infoNombreArchivo;
public String getInfoNombreArchivo(){
	return this.infoNombreArchivo;
}
public Integer infoUsuarioIdArchivo;
public Integer getInfoUsuarioIdArchivo(){
	return this.infoUsuarioIdArchivo;
}
public Integer infoIdArchivo;
public Integer getInfoIdArchivo(){
	return this.infoIdArchivo;
}
public Integer infoTipoArchivo;
public Integer getInfoTipoArchivo(){
	return this.infoTipoArchivo;
}
public Integer auxAumentoRegistros;
public Integer getAuxAumentoRegistros(){
	return this.auxAumentoRegistros;
}
public String archivoConfiguracion;
public String getArchivoConfiguracion(){
	return this.archivoConfiguracion;
}
public Boolean outCodigo;
public Boolean getOutCodigo(){
	return this.outCodigo;
}
public Integer auxPosicionRegistros;
public Integer getAuxPosicionRegistros(){
	return this.auxPosicionRegistros;
}
public String archivoSalida;
public String getArchivoSalida(){
	return this.archivoSalida;
}
public Integer infoConteoRegistros;
public Integer getInfoConteoRegistros(){
	return this.infoConteoRegistros;
}
public String DOCUMENTO;
public String getDOCUMENTO(){
	return this.DOCUMENTO;
}
public Integer TIPO_DOCUMENTO;
public Integer getTIPO_DOCUMENTO(){
	return this.TIPO_DOCUMENTO;
}
public String mail_PasswordMail;
public String getMail_PasswordMail(){
	return this.mail_PasswordMail;
}
public String mail_SMTPPort;
public String getMail_SMTPPort(){
	return this.mail_SMTPPort;
}
public String mail_UsernameMail;
public String getMail_UsernameMail(){
	return this.mail_UsernameMail;
}
public String mail_SMTPHost;
public String getMail_SMTPHost(){
	return this.mail_SMTPHost;
}
public BigDecimal ID_ARCHIVOS;
public BigDecimal getID_ARCHIVOS(){
	return this.ID_ARCHIVOS;
}
public Integer estArchivoActivo;
public Integer getEstArchivoActivo(){
	return this.estArchivoActivo;
}
public Integer estArchivoCancelado;
public Integer getEstArchivoCancelado(){
	return this.estArchivoCancelado;
}
public Integer estArchivoEnProceso;
public Integer getEstArchivoEnProceso(){
	return this.estArchivoEnProceso;
}
public Integer estArchivoErrorArchivo;
public Integer getEstArchivoErrorArchivo(){
	return this.estArchivoErrorArchivo;
}
public Integer estArchivoErrorProcesamiento;
public Integer getEstArchivoErrorProcesamiento(){
	return this.estArchivoErrorProcesamiento;
}
public Integer estArchivoInactivo;
public Integer getEstArchivoInactivo(){
	return this.estArchivoInactivo;
}
public Integer estArchivoPausado;
public Integer getEstArchivoPausado(){
	return this.estArchivoPausado;
}
public Integer estArchivoProcesado;
public Integer getEstArchivoProcesado(){
	return this.estArchivoProcesado;
}
public Integer estRegistroActivo;
public Integer getEstRegistroActivo(){
	return this.estRegistroActivo;
}
public Integer estRegistroInactivo;
public Integer getEstRegistroInactivo(){
	return this.estRegistroInactivo;
}
public Integer infoTipoArchivoRespuesta;
public Integer getInfoTipoArchivoRespuesta(){
	return this.infoTipoArchivoRespuesta;
}
public String oracle_AdditionalParams;
public String getOracle_AdditionalParams(){
	return this.oracle_AdditionalParams;
}
public String oracle_Host;
public String getOracle_Host(){
	return this.oracle_Host;
}
public String oracle_Password;
public String getOracle_Password(){
	return this.oracle_Password;
}
public String oracle_Port;
public String getOracle_Port(){
	return this.oracle_Port;
}
public String oracle_Schema;
public String getOracle_Schema(){
	return this.oracle_Schema;
}
public String oracle_ServiceName;
public String getOracle_ServiceName(){
	return this.oracle_ServiceName;
}
public String oracle_Sid;
public String getOracle_Sid(){
	return this.oracle_Sid;
}
public String oracle_User;
public String getOracle_User(){
	return this.oracle_User;
}
public Integer tipoArchivoCompendioSalud;
public Integer getTipoArchivoCompendioSalud(){
	return this.tipoArchivoCompendioSalud;
}
public Integer tipoArchivoCompendioSaludGenerado;
public Integer getTipoArchivoCompendioSaludGenerado(){
	return this.tipoArchivoCompendioSaludGenerado;
}
public Integer tipoArchivoCruceErrores;
public Integer getTipoArchivoCruceErrores(){
	return this.tipoArchivoCruceErrores;
}
public Integer tipoJobCompendioSalud;
public Integer getTipoJobCompendioSalud(){
	return this.tipoJobCompendioSalud;
}
public Integer tipoJobEntesTerritoriales;
public Integer getTipoJobEntesTerritoriales(){
	return this.tipoJobEntesTerritoriales;
}
public Integer tipoJobFedevida;
public Integer getTipoJobFedevida(){
	return this.tipoJobFedevida;
}
public Integer tipoJobMinsaludEtapa2Novedades;
public Integer getTipoJobMinsaludEtapa2Novedades(){
	return this.tipoJobMinsaludEtapa2Novedades;
}
public Integer tipoJobMinsaludEtapa2NuevosRegistros;
public Integer getTipoJobMinsaludEtapa2NuevosRegistros(){
	return this.tipoJobMinsaludEtapa2NuevosRegistros;
}
public Integer tipoJobMinsaludEtapa3Multiafiliacion;
public Integer getTipoJobMinsaludEtapa3Multiafiliacion(){
	return this.tipoJobMinsaludEtapa3Multiafiliacion;
}
public String auxAfiliadosCriterio;
public String getAuxAfiliadosCriterio(){
	return this.auxAfiliadosCriterio;
}
public String auxAfiliadosCriterioAct;
public String getAuxAfiliadosCriterioAct(){
	return this.auxAfiliadosCriterioAct;
}
public String auxAfiliadosCriterioInact;
public String getAuxAfiliadosCriterioInact(){
	return this.auxAfiliadosCriterioInact;
}
public Integer auxCriterioActual;
public Integer getAuxCriterioActual(){
	return this.auxCriterioActual;
}
public Boolean auxPrimerLoop;
public Boolean getAuxPrimerLoop(){
	return this.auxPrimerLoop;
}
public String auxRango;
public String getAuxRango(){
	return this.auxRango;
}
public Integer suma;
public Integer getSuma(){
	return this.suma;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.3";
	private final String jobName = "Entes_Territoriales";
	private final String projectName = "AFI_PRINCIPAL";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
        private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();
	
		private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
		public  final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}


private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				Entes_Territoriales.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(Entes_Territoriales.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
			}
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
						try {
							
								if(this.execStat){
									runStat.updateStatOnConnection("OnComponentError1", 0, "error");
								}
							
							
								errorCode = null;
								tDie_1Process(globalMap);
								if (!"failure".equals(status)) {
									status = "end";
								}
								

						} catch (Exception e) {
							e.printStackTrace();
						}
						
					tOracleConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDie_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleClose_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleClose_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileExist_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileExist_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputDelimited_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFileInputDelimited_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tJava_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_16_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_16_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tOracleInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDie_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleClose_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileExist_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_7_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputDelimited_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_11_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_12_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_13_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_14_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_8_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_7_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_9_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_15_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_16_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_17_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_18_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	









public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tOracleConnection_1Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tOracleConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tOracleConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleConnection_1", false);
		start_Hash.put("tOracleConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleConnection_1";
	
	
		int tos_count_tOracleConnection_1 = 0;
		
	

	
        String url_tOracleConnection_1 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.oracle_Host + ")(port=" + context.oracle_Port + "))(connect_data=(service_name=" + context.oracle_ServiceName + ")))";
    	globalMap.put("connectionType_" + "tOracleConnection_1", "ORACLE_SERVICE_NAME");
	String dbUser_tOracleConnection_1 = context.oracle_User;
	
	
		
	final String decryptedPassword_tOracleConnection_1 = context.oracle_Password; 
		String dbPwd_tOracleConnection_1 = decryptedPassword_tOracleConnection_1;
	
	
	java.sql.Connection conn_tOracleConnection_1 = null;
	
		
			String driverClass_tOracleConnection_1 = "oracle.jdbc.OracleDriver";
			java.lang.Class jdbcclazz_tOracleConnection_1 = java.lang.Class.forName(driverClass_tOracleConnection_1);
			globalMap.put("driverClass_tOracleConnection_1", driverClass_tOracleConnection_1);
		
			java.util.Properties atnParamsPrope_tOracleConnection_1 = new java.util.Properties();
			    atnParamsPrope_tOracleConnection_1.put("user",dbUser_tOracleConnection_1);
			    atnParamsPrope_tOracleConnection_1.put("password",dbPwd_tOracleConnection_1);
			if(context.oracle_AdditionalParams != null && !"\"\"".equals(context.oracle_AdditionalParams) && !"".equals(context.oracle_AdditionalParams)){
                atnParamsPrope_tOracleConnection_1.load(new java.io.ByteArrayInputStream(context.oracle_AdditionalParams.replace("&", "\n").getBytes()));
            }
         
			conn_tOracleConnection_1 = java.sql.DriverManager.getConnection(url_tOracleConnection_1, atnParamsPrope_tOracleConnection_1);

		globalMap.put("conn_tOracleConnection_1", conn_tOracleConnection_1);
	if (null != conn_tOracleConnection_1) {
		
			conn_tOracleConnection_1.setAutoCommit(false);
	}
        globalMap.put("host_" + "tOracleConnection_1",context.oracle_Host);
        globalMap.put("port_" + "tOracleConnection_1",context.oracle_Port);
        globalMap.put("dbname_" + "tOracleConnection_1",context.oracle_ServiceName);

	globalMap.put("dbschema_" + "tOracleConnection_1", context.oracle_Schema);
	globalMap.put("username_" + "tOracleConnection_1",context.oracle_User);
	globalMap.put("password_" + "tOracleConnection_1",dbPwd_tOracleConnection_1);

 



/**
 * [tOracleConnection_1 begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 main ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 


	tos_count_tOracleConnection_1++;

/**
 * [tOracleConnection_1 main ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleConnection_1 end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 

ok_Hash.put("tOracleConnection_1", true);
end_Hash.put("tOracleConnection_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tJava_1Process(globalMap);



/**
 * [tOracleConnection_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 1);
	}
	


public void tDie_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDie_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDie_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_1", false);
		start_Hash.put("tDie_1", System.currentTimeMillis());
		
	
	currentComponent="tDie_1";
	
	
		int tos_count_tDie_1 = 0;
		

 



/**
 * [tDie_1 begin ] stop
 */
	
	/**
	 * [tDie_1 main ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

	try {
	globalMap.put("tDie_1_DIE_PRIORITY", 5);
	System.err.println("Error en conexión");
	
	globalMap.put("tDie_1_DIE_MESSAGE", "Error en conexión");
	globalMap.put("tDie_1_DIE_MESSAGES", "Error en conexión");
	
	} catch (Exception | Error e_tDie_1) {
	    globalMap.put("tDie_1_ERROR_MESSAGE",e_tDie_1.getMessage());
		logIgnoredError(String.format("tDie_1 - tDie failed to log message due to internal error: %s", e_tDie_1), e_tDie_1);
	}
	
	currentComponent = "tDie_1";
	status = "failure";
        errorCode = new Integer(1);
        globalMap.put("tDie_1_DIE_CODE", errorCode);        

    
	if(true){	
		TDieException e_tDie_1 = new TDieException();

		

		throw e_tDie_1;
	}

 


	tos_count_tDie_1++;

/**
 * [tDie_1 main ] stop
 */
	
	/**
	 * [tDie_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 process_data_begin ] stop
 */
	
	/**
	 * [tDie_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 process_data_end ] stop
 */
	
	/**
	 * [tDie_1 end ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 

ok_Hash.put("tDie_1", true);
end_Hash.put("tDie_1", System.currentTimeMillis());




/**
 * [tDie_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDie_1 finally ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDie_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
		int tos_count_tJava_1 = 0;
		


//****************************************************************************************//
System.out.println("*** PREJOB FINALIZADO ENTES TERRITORIALES **********************************************");
//****************************************************************************************//

//****************************************************************************************//
//*** PRUEBAS ESTO HAY QUE ELIMINARLO ****************************************************//
//****************************************************************************************//
//context.fileSystem_Path="C:\\Storage";
//context.fileSystem_Area="AFI";
///dos columnas 
//context.infoIdArchivo=5794;
//context.infoNombreArchivo="6fdfdd80-cadc-45e7-b477-48ed847f150f.CSV";
//seis columnas

//context.infoIdArchivo=14328; 
//context.infoNombreArchivo="5e829289-beee-4b5e-8167-1ba7e2f89aa8.CSV";
//context.idProceso=82423;
//context.infoUsuarioIdArchivo=64;
//****************************************************************************************//

//****************************************************************************************//
//*** INICIALIZACIÓN VARIABLES DEL JOB ***************************************************//
//****************************************************************************************//
//context.auxPosicionRegistros=0;
//context.infoConteoRegistros=1;
context.archivoSalida=GenerarUuid.createUUID();

//****************************************************************************************//
System.out.println("USUARIO ARCHIVO: "+context.infoUsuarioIdArchivo);
System.out.println("NOMBRE ARCHIVO: "+context.infoNombreArchivo);
System.out.println("ID PROCESO: "+context.idProceso);
System.out.println("ID ARCHIVO: "+context.infoIdArchivo);
//****************************************************************************************//

///context.ID_ARCHIVOS =  new BigDecimal(context.infoIdArchivo);
 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());




/**
 * [tJava_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";
	
	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk4", 0, "ok");
				}
				tOracleClose_1Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	


public void tOracleClose_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleClose_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tOracleClose_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleClose_1", false);
		start_Hash.put("tOracleClose_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleClose_1";
	
	
		int tos_count_tOracleClose_1 = 0;
		

 



/**
 * [tOracleClose_1 begin ] stop
 */
	
	/**
	 * [tOracleClose_1 main ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

	java.sql.Connection conn_tOracleClose_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
	
	if(conn_tOracleClose_1 != null && !conn_tOracleClose_1.isClosed())
	{
		
			conn_tOracleClose_1.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_tOracleConnection_1"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}

 


	tos_count_tOracleClose_1++;

/**
 * [tOracleClose_1 main ] stop
 */
	
	/**
	 * [tOracleClose_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleClose_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleClose_1 end ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 

ok_Hash.put("tOracleClose_1", true);
end_Hash.put("tOracleClose_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk5", 0, "ok");
				}
				tJava_2Process(globalMap);



/**
 * [tOracleClose_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleClose_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleClose_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJava_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_2", false);
		start_Hash.put("tJava_2", System.currentTimeMillis());
		
	
	currentComponent="tJava_2";
	
	
		int tos_count_tJava_2 = 0;
		


//***********************************************
System.out.println("*******************POSTJOB FINALIZADO ENTES TERRITORIALES*******************");
 



/**
 * [tJava_2 begin ] stop
 */
	
	/**
	 * [tJava_2 main ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 


	tos_count_tJava_2++;

/**
 * [tJava_2 main ] stop
 */
	
	/**
	 * [tJava_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_begin ] stop
 */
	
	/**
	 * [tJava_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_end ] stop
 */
	
	/**
	 * [tJava_2 end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 

ok_Hash.put("tJava_2", true);
end_Hash.put("tJava_2", System.currentTimeMillis());




/**
 * [tJava_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_2 finally ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_2_SUBPROCESS_STATE", 1);
	}
	


public void tFileExist_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileExist_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tFileExist_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileExist_1", false);
		start_Hash.put("tFileExist_1", System.currentTimeMillis());
		
	
	currentComponent="tFileExist_1";
	
	
		int tos_count_tFileExist_1 = 0;
		

 



/**
 * [tFileExist_1 begin ] stop
 */
	
	/**
	 * [tFileExist_1 main ] start
	 */

	

	
	
	currentComponent="tFileExist_1";
	
	



java.io.File file_tFileExist_1 = new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.infoNombreArchivo);
if (!file_tFileExist_1.exists()) {
    globalMap.put("tFileExist_1_EXISTS",false);
}else{
	globalMap.put("tFileExist_1_EXISTS",true);
}

globalMap.put("tFileExist_1_FILENAME",context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.infoNombreArchivo);


 


	tos_count_tFileExist_1++;

/**
 * [tFileExist_1 main ] stop
 */
	
	/**
	 * [tFileExist_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileExist_1";
	
	

 



/**
 * [tFileExist_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileExist_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileExist_1";
	
	

 



/**
 * [tFileExist_1 process_data_end ] stop
 */
	
	/**
	 * [tFileExist_1 end ] start
	 */

	

	
	
	currentComponent="tFileExist_1";
	
	

 

ok_Hash.put("tFileExist_1", true);
end_Hash.put("tFileExist_1", System.currentTimeMillis());

   			if (!((Boolean)globalMap.get("tFileExist_1_EXISTS"))) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If4", 0, "true");
					}
				tJava_6Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If4", 0, "false");
					}   	 
   				}
   			if (((Boolean)globalMap.get("tFileExist_1_EXISTS"))) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If5", 0, "true");
					}
				tJava_7Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If5", 0, "false");
					}   	 
   				}
   			if (((Boolean)globalMap.get("tFileExist_1_EXISTS"))) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If7", 0, "true");
					}
				tFixedFlowInput_3Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If7", 0, "false");
					}   	 
   				}



/**
 * [tFileExist_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileExist_1 finally ] start
	 */

	

	
	
	currentComponent="tFileExist_1";
	
	

 



/**
 * [tFileExist_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileExist_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJava_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_6", false);
		start_Hash.put("tJava_6", System.currentTimeMillis());
		
	
	currentComponent="tJava_6";
	
	
		int tos_count_tJava_6 = 0;
		


System.out.println(TalendDate.getCurrentDate()+" : "+context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.infoNombreArchivo+" - Archivo no existe o error en permisos");

 



/**
 * [tJava_6 begin ] stop
 */
	
	/**
	 * [tJava_6 main ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 


	tos_count_tJava_6++;

/**
 * [tJava_6 main ] stop
 */
	
	/**
	 * [tJava_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 



/**
 * [tJava_6 process_data_begin ] stop
 */
	
	/**
	 * [tJava_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 



/**
 * [tJava_6 process_data_end ] stop
 */
	
	/**
	 * [tJava_6 end ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 

ok_Hash.put("tJava_6", true);
end_Hash.put("tJava_6", System.currentTimeMillis());




/**
 * [tJava_6 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_6 finally ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 



/**
 * [tJava_6 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_6_SUBPROCESS_STATE", 1);
	}
	


public void tJava_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJava_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_7", false);
		start_Hash.put("tJava_7", System.currentTimeMillis());
		
	
	currentComponent="tJava_7";
	
	
		int tos_count_tJava_7 = 0;
		


System.out.println(TalendDate.getCurrentDate()+" : "+context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.infoNombreArchivo+" - Archivo encontrado");

 



/**
 * [tJava_7 begin ] stop
 */
	
	/**
	 * [tJava_7 main ] start
	 */

	

	
	
	currentComponent="tJava_7";
	
	

 


	tos_count_tJava_7++;

/**
 * [tJava_7 main ] stop
 */
	
	/**
	 * [tJava_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_7";
	
	

 



/**
 * [tJava_7 process_data_begin ] stop
 */
	
	/**
	 * [tJava_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_7";
	
	

 



/**
 * [tJava_7 process_data_end ] stop
 */
	
	/**
	 * [tJava_7 end ] start
	 */

	

	
	
	currentComponent="tJava_7";
	
	

 

ok_Hash.put("tJava_7", true);
end_Hash.put("tJava_7", System.currentTimeMillis());




/**
 * [tJava_7 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_7 finally ] start
	 */

	

	
	
	currentComponent="tJava_7";
	
	

 



/**
 * [tJava_7 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_7_SUBPROCESS_STATE", 1);
	}
	


public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public String tipo_archivos_;

				public String getTipo_archivos_ () {
					return this.tipo_archivos_;
				}

				public Boolean tipo_archivos_IsNullable(){
				    return true;
				}
				public Boolean tipo_archivos_IsKey(){
				    return false;
				}
				public Integer tipo_archivos_Length(){
				    return null;
				}
				public Integer tipo_archivos_Precision(){
				    return null;
				}
				public String tipo_archivos_Default(){
				
					return null;
				
				}
				public String tipo_archivos_Comment(){
				
				    return "";
				
				}
				public String tipo_archivos_Pattern(){
				
					return "";
				
				}
				public String tipo_archivos_OriginalDbColumnName(){
				
					return "tipo_archivos_";
				
				}

				
			    public Object Sproc;

				public Object getSproc () {
					return this.Sproc;
				}

				public Boolean SprocIsNullable(){
				    return true;
				}
				public Boolean SprocIsKey(){
				    return false;
				}
				public Integer SprocLength(){
				    return null;
				}
				public Integer SprocPrecision(){
				    return null;
				}
				public String SprocDefault(){
				
					return null;
				
				}
				public String SprocComment(){
				
				    return "";
				
				}
				public String SprocPattern(){
				
					return "";
				
				}
				public String SprocOriginalDbColumnName(){
				
					return "Sproc";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.tipo_archivos_ = readString(dis);
					
						this.Sproc = (Object) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.tipo_archivos_ = readString(dis);
					
						this.Sproc = (Object) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.tipo_archivos_,dos);
					
					// Object
				
       			    	dos.writeObject(this.Sproc);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.tipo_archivos_,dos);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.Sproc);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("tipo_archivos_="+tipo_archivos_);
		sb.append(",Sproc="+String.valueOf(Sproc));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row8Struct row8 = new row8Struct();




	
	/**
	 * [tOracleSP_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_1", false);
		start_Hash.put("tOracleSP_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tOracleSP_1 = 0;
		

	java.sql.Connection connection_tOracleSP_1 = null;
	connection_tOracleSP_1 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_1 = connection_tOracleSP_1.prepareCall("{call " + "REP.Trunc_AFI_CARCHIVOS" + "(?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_1;
String tmpString_tOracleSP_1;

 



/**
 * [tOracleSP_1 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_3", false);
		start_Hash.put("tFixedFlowInput_3", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_3";
	
	
		int tos_count_tFixedFlowInput_3 = 0;
		

	    for (int i_tFixedFlowInput_3 = 0 ; i_tFixedFlowInput_3 < 1 ; i_tFixedFlowInput_3++) {
	                	            	
    	            		row8.tipo_archivos_ = context.tipoArchivoEntesTerritoriales+" , "+context.tipoArchivoFedevida;
    	            	        	            	
    	            		row8.Sproc = null;        	            	
    	            	

 



/**
 * [tFixedFlowInput_3 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 


	tos_count_tFixedFlowInput_3++;

/**
 * [tFixedFlowInput_3 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tOracleSP_1 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					

			// code for the argument 1 (tipo_archivos_) of type 'IN AUTOMAPPING'
    					if (row8.tipo_archivos_ == null) {
    						statement_tOracleSP_1.setNull(1, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_1.setString(1, row8.tipo_archivos_);
    					}
    					
			// code for the argument 2 (Sproc) of type 'OUT CLOB'
					statement_tOracleSP_1.registerOutParameter(2, java.sql.Types.CLOB);
		statement_tOracleSP_1.execute();
		

 


	tos_count_tOracleSP_1++;

/**
 * [tOracleSP_1 main ] stop
 */
	
	/**
	 * [tOracleSP_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleSP_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

        }
        globalMap.put("tFixedFlowInput_3_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_3", true);
end_Hash.put("tFixedFlowInput_3", System.currentTimeMillis());




/**
 * [tFixedFlowInput_3 end ] stop
 */

	
	/**
	 * [tOracleSP_1 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	


	statement_tOracleSP_1.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tOracleSP_1", true);
end_Hash.put("tOracleSP_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk10", 0, "ok");
				}
				tFileInputDelimited_2Process(globalMap);



/**
 * [tOracleSP_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_3 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 finally ] stop
 */

	
	/**
	 * [tOracleSP_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_1";
	
	

 



/**
 * [tOracleSP_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class InsStruct implements routines.system.IPersistableRow<InsStruct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public Integer ARCHIVOS_ID;

				public Integer getARCHIVOS_ID () {
					return this.ARCHIVOS_ID;
				}

				public Boolean ARCHIVOS_IDIsNullable(){
				    return true;
				}
				public Boolean ARCHIVOS_IDIsKey(){
				    return false;
				}
				public Integer ARCHIVOS_IDLength(){
				    return 22;
				}
				public Integer ARCHIVOS_IDPrecision(){
				    return 0;
				}
				public String ARCHIVOS_IDDefault(){
				
					return null;
				
				}
				public String ARCHIVOS_IDComment(){
				
				    return "";
				
				}
				public String ARCHIVOS_IDPattern(){
				
					return "";
				
				}
				public String ARCHIVOS_IDOriginalDbColumnName(){
				
					return "ARCHIVOS_ID";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 20;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String TDOCUMENTOS;

				public String getTDOCUMENTOS () {
					return this.TDOCUMENTOS;
				}

				public Boolean TDOCUMENTOSIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOSIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOSLength(){
				    return 20;
				}
				public Integer TDOCUMENTOSPrecision(){
				    return 0;
				}
				public String TDOCUMENTOSDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOSComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOSPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOSOriginalDbColumnName(){
				
					return "TDOCUMENTOS";
				
				}

				
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return 250;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return 0;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return 250;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return 0;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return 250;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return 0;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return 250;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return 0;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
						this.ARCHIVOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.TDOCUMENTOS = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
						this.ARCHIVOS_ID = readInteger(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.TDOCUMENTOS = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.ARCHIVOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.TDOCUMENTOS,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.ARCHIVOS_ID,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.TDOCUMENTOS,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ARCHIVOS_ID="+String.valueOf(ARCHIVOS_ID));
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",TDOCUMENTOS="+TDOCUMENTOS);
		sb.append(",PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(InsStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out1Struct implements routines.system.IPersistableRow<out1Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public String TDOCUMENTOS;

				public String getTDOCUMENTOS () {
					return this.TDOCUMENTOS;
				}

				public Boolean TDOCUMENTOSIsNullable(){
				    return false;
				}
				public Boolean TDOCUMENTOSIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOSLength(){
				    return 2;
				}
				public Integer TDOCUMENTOSPrecision(){
				    return 0;
				}
				public String TDOCUMENTOSDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOSComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOSPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOSOriginalDbColumnName(){
				
					return "TDOCUMENTOS";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 0;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public Integer ARCHIVOS_ID;

				public Integer getARCHIVOS_ID () {
					return this.ARCHIVOS_ID;
				}

				public Boolean ARCHIVOS_IDIsNullable(){
				    return true;
				}
				public Boolean ARCHIVOS_IDIsKey(){
				    return false;
				}
				public Integer ARCHIVOS_IDLength(){
				    return null;
				}
				public Integer ARCHIVOS_IDPrecision(){
				    return null;
				}
				public String ARCHIVOS_IDDefault(){
				
					return null;
				
				}
				public String ARCHIVOS_IDComment(){
				
				    return "";
				
				}
				public String ARCHIVOS_IDPattern(){
				
					return "";
				
				}
				public String ARCHIVOS_IDOriginalDbColumnName(){
				
					return "ARCHIVOS_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TDOCUMENTOS = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.ARCHIVOS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TDOCUMENTOS = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
						this.ARCHIVOS_ID = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TDOCUMENTOS,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.ARCHIVOS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TDOCUMENTOS,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// Integer
				
						writeInteger(this.ARCHIVOS_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS="+TDOCUMENTOS);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",ARCHIVOS_ID="+String.valueOf(ARCHIVOS_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return 2;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return 0;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return false;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return 0;
				}
				public Integer DOCUMENTOPrecision(){
				    return 0;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return 0;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return 0;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return 0;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return 0;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return 0;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return 0;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return 0;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return 0;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputDelimited_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputDelimited_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();
InsStruct Ins = new InsStruct();
out1Struct out1 = new out1Struct();





	
	/**
	 * [tOracleOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_2", false);
		start_Hash.put("tOracleOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Ins");
					}
				
		int tos_count_tOracleOutput_2 = 0;
		






    
    int nb_line_tOracleOutput_2 = 0;
    int nb_line_update_tOracleOutput_2 = 0;
    int nb_line_inserted_tOracleOutput_2 = 0;
    int nb_line_deleted_tOracleOutput_2 = 0;
    int nb_line_rejected_tOracleOutput_2 = 0;

    int tmp_batchUpdateCount_tOracleOutput_2 = 0;

    int deletedCount_tOracleOutput_2=0;
    int updatedCount_tOracleOutput_2=0;
    int insertedCount_tOracleOutput_2=0;
    int rowsToCommitCount_tOracleOutput_2=0;
    int rejectedCount_tOracleOutput_2=0;

    boolean whetherReject_tOracleOutput_2 = false;

    java.sql.Connection conn_tOracleOutput_2 = null;

    //optional table
    String dbschema_tOracleOutput_2 = null;
    String tableName_tOracleOutput_2 = null;
        dbschema_tOracleOutput_2 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_2 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_2=0;

        if(dbschema_tOracleOutput_2 == null || dbschema_tOracleOutput_2.trim().length() == 0) {
            tableName_tOracleOutput_2 = ("AFI_CARCHIVOS");
        } else {
            tableName_tOracleOutput_2 = dbschema_tOracleOutput_2 + "." + ("AFI_CARCHIVOS");
        }
                String insert_tOracleOutput_2 = "INSERT INTO " + tableName_tOracleOutput_2 + " (ARCHIVOS_ID,DOCUMENTO,TDOCUMENTOS,PRIMER_NOMBRE,SEGUNDO_NOMBRE,PRIMER_APELLIDO,SEGUNDO_APELLIDO) VALUES (?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_2 = conn_tOracleOutput_2.prepareStatement(insert_tOracleOutput_2);
                        resourceMap.put("pstmt_tOracleOutput_2", pstmt_tOracleOutput_2);





 



/**
 * [tOracleOutput_2 begin ] stop
 */




	
	/**
	 * [tOracleOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_3", false);
		start_Hash.put("tOracleOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out1");
					}
				
		int tos_count_tOracleOutput_3 = 0;
		






    
    int nb_line_tOracleOutput_3 = 0;
    int nb_line_update_tOracleOutput_3 = 0;
    int nb_line_inserted_tOracleOutput_3 = 0;
    int nb_line_deleted_tOracleOutput_3 = 0;
    int nb_line_rejected_tOracleOutput_3 = 0;

    int tmp_batchUpdateCount_tOracleOutput_3 = 0;

    int deletedCount_tOracleOutput_3=0;
    int updatedCount_tOracleOutput_3=0;
    int insertedCount_tOracleOutput_3=0;
    int rowsToCommitCount_tOracleOutput_3=0;
    int rejectedCount_tOracleOutput_3=0;

    boolean whetherReject_tOracleOutput_3 = false;

    java.sql.Connection conn_tOracleOutput_3 = null;

    //optional table
    String dbschema_tOracleOutput_3 = null;
    String tableName_tOracleOutput_3 = null;
        dbschema_tOracleOutput_3 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_3 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_3=0;

        if(dbschema_tOracleOutput_3 == null || dbschema_tOracleOutput_3.trim().length() == 0) {
            tableName_tOracleOutput_3 = ("AFI_CARCHIVOS");
        } else {
            tableName_tOracleOutput_3 = dbschema_tOracleOutput_3 + "." + ("AFI_CARCHIVOS");
        }
                String insert_tOracleOutput_3 = "INSERT INTO " + tableName_tOracleOutput_3 + " (TDOCUMENTOS,DOCUMENTO,ARCHIVOS_ID) VALUES (?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_3 = conn_tOracleOutput_3.prepareStatement(insert_tOracleOutput_3);
                        resourceMap.put("pstmt_tOracleOutput_3", pstmt_tOracleOutput_3);





 



/**
 * [tOracleOutput_3 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
InsStruct Ins_tmp = new InsStruct();
out1Struct out1_tmp = new out1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tFileInputDelimited_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputDelimited_2", false);
		start_Hash.put("tFileInputDelimited_2", System.currentTimeMillis());
		
	
	currentComponent="tFileInputDelimited_2";
	
	
		int tos_count_tFileInputDelimited_2 = 0;
		
	
	
	
 
	
	
	final routines.system.RowState rowstate_tFileInputDelimited_2 = new routines.system.RowState();
	
	
				int nb_line_tFileInputDelimited_2 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_2 = null;
				int limit_tFileInputDelimited_2 = -1;
				try{
					
						Object filename_tFileInputDelimited_2 = context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.infoNombreArchivo;
						if(filename_tFileInputDelimited_2 instanceof java.io.InputStream){
							
			int footer_value_tFileInputDelimited_2 = 0, random_value_tFileInputDelimited_2 = -1;
			if(footer_value_tFileInputDelimited_2 >0 || random_value_tFileInputDelimited_2 > 0){
				throw new java.lang.Exception("When the input source is a stream,footer and random shouldn't be bigger than 0.");				
			}
		
						}
						try {
							fid_tFileInputDelimited_2 = new org.talend.fileprocess.FileInputDelimited(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.infoNombreArchivo, "ISO-8859-15",";","\n",false,0,0,
									limit_tFileInputDelimited_2
								,-1, false);
						} catch(java.lang.Exception e) {
globalMap.put("tFileInputDelimited_2_ERROR_MESSAGE",e.getMessage());
							
								
								System.err.println(e.getMessage());
							
						}
					
				    
					while (fid_tFileInputDelimited_2!=null && fid_tFileInputDelimited_2.nextRecord()) {
						rowstate_tFileInputDelimited_2.reset();
						
			    						row1 = null;			
												
									boolean whetherReject_tFileInputDelimited_2 = false;
									row1 = new row1Struct();
									try {
										
				int columnIndexWithD_tFileInputDelimited_2 = 0;
				
					columnIndexWithD_tFileInputDelimited_2 = 0;
					
							row1.TIPO_DOCUMENTO = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 1;
					
							row1.DOCUMENTO = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 2;
					
							row1.PRIMER_APELLIDO = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 3;
					
							row1.SEGUNDO_APELLIDO = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 4;
					
							row1.PRIMER_NOMBRE = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
					columnIndexWithD_tFileInputDelimited_2 = 5;
					
							row1.SEGUNDO_NOMBRE = fid_tFileInputDelimited_2.get(columnIndexWithD_tFileInputDelimited_2);
						
				
				
										
										if(rowstate_tFileInputDelimited_2.getException()!=null) {
											throw rowstate_tFileInputDelimited_2.getException();
										}
										
										
							
			    					} catch (java.lang.Exception e) {
globalMap.put("tFileInputDelimited_2_ERROR_MESSAGE",e.getMessage());
			        					whetherReject_tFileInputDelimited_2 = true;
			        					
			                					System.err.println(e.getMessage());
			                					row1 = null;
			                				
										
			    					}
								

 



/**
 * [tFileInputDelimited_2 begin ] stop
 */
	
	/**
	 * [tFileInputDelimited_2 main ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_2";
	
	

 


	tos_count_tFileInputDelimited_2++;

/**
 * [tFileInputDelimited_2 main ] stop
 */
	
	/**
	 * [tFileInputDelimited_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_2";
	
	

 



/**
 * [tFileInputDelimited_2 process_data_begin ] stop
 */
// Start of branch "row1"
if(row1 != null) { 



	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

Ins = null;
out1 = null;


// # Output table : 'Ins'
// # Filter conditions 
if( 

/*Valida que el primer apellido, primer nombre, documento y tipo de documento no esten vacios o nulos*/
Utils.empty(row1.PRIMER_APELLIDO) == false && Utils.empty(row1.PRIMER_NOMBRE) == false && Utils.empty(row1.DOCUMENTO) == false && Utils.empty(row1.TIPO_DOCUMENTO) == false

 ) {
Ins_tmp.ARCHIVOS_ID = context.infoIdArchivo ;
Ins_tmp.DOCUMENTO = row1.DOCUMENTO ;
Ins_tmp.TDOCUMENTOS = row1.TIPO_DOCUMENTO ;
Ins_tmp.PRIMER_NOMBRE = row1.PRIMER_NOMBRE ;
Ins_tmp.SEGUNDO_NOMBRE = row1.SEGUNDO_NOMBRE ;
Ins_tmp.PRIMER_APELLIDO = row1.PRIMER_APELLIDO ;
Ins_tmp.SEGUNDO_APELLIDO = row1.SEGUNDO_APELLIDO ;
Ins = Ins_tmp;
} // closing filter/reject

// # Output table : 'out1'
// # Filter conditions 
if( 

/*Valida que el primer apellido, segundo apellido, primer nombre,segundo nombre esten nulos o vacios*/
Utils.empty(row1.PRIMER_APELLIDO) == true && Utils.empty(row1.SEGUNDO_APELLIDO) == true &&  Utils.empty(row1.PRIMER_NOMBRE) == true &&  Utils.empty(row1.SEGUNDO_NOMBRE) == true

 ) {
out1_tmp.TDOCUMENTOS = row1.TIPO_DOCUMENTO ;
out1_tmp.DOCUMENTO = row1.DOCUMENTO ;
out1_tmp.ARCHIVOS_ID = context.infoIdArchivo ;
out1 = out1_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "Ins"
if(Ins != null) { 



	
	/**
	 * [tOracleOutput_2 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Ins"
						
						);
					}
					



        whetherReject_tOracleOutput_2 = false;
                        if(Ins.ARCHIVOS_ID == null) {
pstmt_tOracleOutput_2.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_2.setInt(1, Ins.ARCHIVOS_ID);
}

                        if(Ins.DOCUMENTO == null) {
pstmt_tOracleOutput_2.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(2, Ins.DOCUMENTO);
}

                        if(Ins.TDOCUMENTOS == null) {
pstmt_tOracleOutput_2.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(3, Ins.TDOCUMENTOS);
}

                        if(Ins.PRIMER_NOMBRE == null) {
pstmt_tOracleOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(4, Ins.PRIMER_NOMBRE);
}

                        if(Ins.SEGUNDO_NOMBRE == null) {
pstmt_tOracleOutput_2.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(5, Ins.SEGUNDO_NOMBRE);
}

                        if(Ins.PRIMER_APELLIDO == null) {
pstmt_tOracleOutput_2.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(6, Ins.PRIMER_APELLIDO);
}

                        if(Ins.SEGUNDO_APELLIDO == null) {
pstmt_tOracleOutput_2.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(7, Ins.SEGUNDO_APELLIDO);
}

                try {
                    nb_line_tOracleOutput_2++;
                    int processedCount_tOracleOutput_2 = pstmt_tOracleOutput_2.executeUpdate();
                    insertedCount_tOracleOutput_2 += processedCount_tOracleOutput_2;
                    rowsToCommitCount_tOracleOutput_2 += processedCount_tOracleOutput_2;
                } catch(java.lang.Exception e_tOracleOutput_2) {
globalMap.put("tOracleOutput_2_ERROR_MESSAGE",e_tOracleOutput_2.getMessage());
                    whetherReject_tOracleOutput_2 = true;
                            System.err.print(e_tOracleOutput_2.getMessage());
                }
            if(!whetherReject_tOracleOutput_2) {
            }

 


	tos_count_tOracleOutput_2++;

/**
 * [tOracleOutput_2 main ] stop
 */
	
	/**
	 * [tOracleOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	

 



/**
 * [tOracleOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	

 



/**
 * [tOracleOutput_2 process_data_end ] stop
 */

} // End of branch "Ins"




// Start of branch "out1"
if(out1 != null) { 



	
	/**
	 * [tOracleOutput_3 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out1"
						
						);
					}
					



        whetherReject_tOracleOutput_3 = false;
                        if(out1.TDOCUMENTOS == null) {
pstmt_tOracleOutput_3.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_3.setString(1, out1.TDOCUMENTOS);
}

                        if(out1.DOCUMENTO == null) {
pstmt_tOracleOutput_3.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_3.setString(2, out1.DOCUMENTO);
}

                        if(out1.ARCHIVOS_ID == null) {
pstmt_tOracleOutput_3.setNull(3, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_3.setInt(3, out1.ARCHIVOS_ID);
}

                try {
                    nb_line_tOracleOutput_3++;
                    int processedCount_tOracleOutput_3 = pstmt_tOracleOutput_3.executeUpdate();
                    insertedCount_tOracleOutput_3 += processedCount_tOracleOutput_3;
                    rowsToCommitCount_tOracleOutput_3 += processedCount_tOracleOutput_3;
                } catch(java.lang.Exception e_tOracleOutput_3) {
globalMap.put("tOracleOutput_3_ERROR_MESSAGE",e_tOracleOutput_3.getMessage());
                    whetherReject_tOracleOutput_3 = true;
                            System.err.print(e_tOracleOutput_3.getMessage());
                }
            if(!whetherReject_tOracleOutput_3) {
            }

 


	tos_count_tOracleOutput_3++;

/**
 * [tOracleOutput_3 main ] stop
 */
	
	/**
	 * [tOracleOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_3";
	
	

 



/**
 * [tOracleOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_3";
	
	

 



/**
 * [tOracleOutput_3 process_data_end ] stop
 */

} // End of branch "out1"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */

} // End of branch "row1"




	
	/**
	 * [tFileInputDelimited_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_2";
	
	

 



/**
 * [tFileInputDelimited_2 process_data_end ] stop
 */
	
	/**
	 * [tFileInputDelimited_2 end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_2";
	
	



            }
            }finally{
                if(!((Object)(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.infoNombreArchivo) instanceof java.io.InputStream)){
                	if(fid_tFileInputDelimited_2!=null){
                		fid_tFileInputDelimited_2.close();
                	}
                }
                if(fid_tFileInputDelimited_2!=null){
                	globalMap.put("tFileInputDelimited_2_NB_LINE", fid_tFileInputDelimited_2.getRowNumber());
					
                }
			}
			  

 

ok_Hash.put("tFileInputDelimited_2", true);
end_Hash.put("tFileInputDelimited_2", System.currentTimeMillis());




/**
 * [tFileInputDelimited_2 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tOracleOutput_2 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	
	



	
        if(pstmt_tOracleOutput_2 != null) {
			
				pstmt_tOracleOutput_2.close();
				resourceMap.remove("pstmt_tOracleOutput_2");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_2", true);

	
	nb_line_deleted_tOracleOutput_2=nb_line_deleted_tOracleOutput_2+ deletedCount_tOracleOutput_2;
	nb_line_update_tOracleOutput_2=nb_line_update_tOracleOutput_2 + updatedCount_tOracleOutput_2;
	nb_line_inserted_tOracleOutput_2=nb_line_inserted_tOracleOutput_2 + insertedCount_tOracleOutput_2;
	nb_line_rejected_tOracleOutput_2=nb_line_rejected_tOracleOutput_2 + rejectedCount_tOracleOutput_2;
	
        globalMap.put("tOracleOutput_2_NB_LINE",nb_line_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_UPDATED",nb_line_update_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_2);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Ins");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_2", true);
end_Hash.put("tOracleOutput_2", System.currentTimeMillis());

   			if (((Integer)globalMap.get("tOracleOutput_2_NB_LINE_INSERTED")) > 0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If9", 0, "true");
					}
				tJava_3Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If9", 0, "false");
					}   	 
   				}



/**
 * [tOracleOutput_2 end ] stop
 */




	
	/**
	 * [tOracleOutput_3 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_3";
	
	
	



	
        if(pstmt_tOracleOutput_3 != null) {
			
				pstmt_tOracleOutput_3.close();
				resourceMap.remove("pstmt_tOracleOutput_3");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_3", true);

	
	nb_line_deleted_tOracleOutput_3=nb_line_deleted_tOracleOutput_3+ deletedCount_tOracleOutput_3;
	nb_line_update_tOracleOutput_3=nb_line_update_tOracleOutput_3 + updatedCount_tOracleOutput_3;
	nb_line_inserted_tOracleOutput_3=nb_line_inserted_tOracleOutput_3 + insertedCount_tOracleOutput_3;
	nb_line_rejected_tOracleOutput_3=nb_line_rejected_tOracleOutput_3 + rejectedCount_tOracleOutput_3;
	
        globalMap.put("tOracleOutput_3_NB_LINE",nb_line_tOracleOutput_3);
        globalMap.put("tOracleOutput_3_NB_LINE_UPDATED",nb_line_update_tOracleOutput_3);
        globalMap.put("tOracleOutput_3_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_3);
        globalMap.put("tOracleOutput_3_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_3);
        globalMap.put("tOracleOutput_3_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_3);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out1");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_3", true);
end_Hash.put("tOracleOutput_3", System.currentTimeMillis());

   			if (((Integer)globalMap.get("tOracleOutput_3_NB_LINE_INSERTED")) > 0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If14", 0, "true");
					}
				tJava_4Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If14", 0, "false");
					}   	 
   				}



/**
 * [tOracleOutput_3 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputDelimited_2 finally ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_2";
	
	

 



/**
 * [tFileInputDelimited_2 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tOracleOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_2") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_2 = null;
                if ((pstmtToClose_tOracleOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_2")) != null) {
                    pstmtToClose_tOracleOutput_2.close();
                }
    }
 



/**
 * [tOracleOutput_2 finally ] stop
 */




	
	/**
	 * [tOracleOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_3";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_3") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_3 = null;
                if ((pstmtToClose_tOracleOutput_3 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_3")) != null) {
                    pstmtToClose_tOracleOutput_3.close();
                }
    }
 



/**
 * [tOracleOutput_3 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputDelimited_2_SUBPROCESS_STATE", 1);
	}
	


public void tJava_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_3", false);
		start_Hash.put("tJava_3", System.currentTimeMillis());
		
	
	currentComponent="tJava_3";
	
	
		int tos_count_tJava_3 = 0;
		


System.out.println("TIPO DE ARCHIVO " + context.infoTipoArchivo);

if(context.infoTipoArchivo == 5){
	context.infoTipoArchivoRespuesta = 1;
    System.out.println("ARCHIVO A SEIS COLUMNAS");	
}

if(context.infoTipoArchivo == 25){
	context.infoTipoArchivoRespuesta = 2;	
	System.out.println("ARCHIVO A SEIS COLUMNAS PARA ACTUALIZAR");
}

if(context.infoTipoArchivo == 26){
	context.infoTipoArchivoRespuesta = 3;	
	System.out.println("ARCHIVO A SEIS COLUMNAS TRAMOS DE AFILIACIÓN");
}

if(context.infoTipoArchivo == 27){
	context.infoTipoArchivoRespuesta = 4;	
	System.out.println("ARCHIVO A SEIS COLUMNAS CAMBIOS DE ESM");
}
 



/**
 * [tJava_3 begin ] stop
 */
	
	/**
	 * [tJava_3 main ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 


	tos_count_tJava_3++;

/**
 * [tJava_3 main ] stop
 */
	
	/**
	 * [tJava_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_begin ] stop
 */
	
	/**
	 * [tJava_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_end ] stop
 */
	
	/**
	 * [tJava_3 end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 

ok_Hash.put("tJava_3", true);
end_Hash.put("tJava_3", System.currentTimeMillis());

   			if (context.infoTipoArchivoRespuesta == 1) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If10", 0, "true");
					}
				tOracleInput_4Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If10", 0, "false");
					}   	 
   				}
   			if (context.infoTipoArchivoRespuesta == 2) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If11", 0, "true");
					}
				tOracleInput_5Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If11", 0, "false");
					}   	 
   				}
   			if (context.infoTipoArchivoRespuesta == 3) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If26", 0, "true");
					}
				tOracleInput_11Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If26", 0, "false");
					}   	 
   				}
   			if (context.infoTipoArchivoRespuesta == 4) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If27", 0, "true");
					}
				tOracleInput_13Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If27", 0, "false");
					}   	 
   				}



/**
 * [tJava_3 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_3 finally ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_3_SUBPROCESS_STATE", 1);
	}
	


public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String NUMERO_DOCUMENTO;

				public String getNUMERO_DOCUMENTO () {
					return this.NUMERO_DOCUMENTO;
				}

				public Boolean NUMERO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NUMERO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NUMERO_DOCUMENTOLength(){
				    return null;
				}
				public Integer NUMERO_DOCUMENTOPrecision(){
				    return null;
				}
				public String NUMERO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NUMERO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NUMERO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NUMERO_DOCUMENTOOriginalDbColumnName(){
				
					return "NUMERO_DOCUMENTO";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return null;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return null;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return null;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return null;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return null;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return null;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return null;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return null;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String GENERO;

				public String getGENERO () {
					return this.GENERO;
				}

				public Boolean GENEROIsNullable(){
				    return true;
				}
				public Boolean GENEROIsKey(){
				    return false;
				}
				public Integer GENEROLength(){
				    return null;
				}
				public Integer GENEROPrecision(){
				    return null;
				}
				public String GENERODefault(){
				
					return null;
				
				}
				public String GENEROComment(){
				
				    return "";
				
				}
				public String GENEROPattern(){
				
					return "";
				
				}
				public String GENEROOriginalDbColumnName(){
				
					return "GENERO";
				
				}

				
			    public String DISCAPACIDAD;

				public String getDISCAPACIDAD () {
					return this.DISCAPACIDAD;
				}

				public Boolean DISCAPACIDADIsNullable(){
				    return true;
				}
				public Boolean DISCAPACIDADIsKey(){
				    return false;
				}
				public Integer DISCAPACIDADLength(){
				    return null;
				}
				public Integer DISCAPACIDADPrecision(){
				    return null;
				}
				public String DISCAPACIDADDefault(){
				
					return null;
				
				}
				public String DISCAPACIDADComment(){
				
				    return "";
				
				}
				public String DISCAPACIDADPattern(){
				
					return "";
				
				}
				public String DISCAPACIDADOriginalDbColumnName(){
				
					return "DISCAPACIDAD";
				
				}

				
			    public String PARENTESCOS;

				public String getPARENTESCOS () {
					return this.PARENTESCOS;
				}

				public Boolean PARENTESCOSIsNullable(){
				    return true;
				}
				public Boolean PARENTESCOSIsKey(){
				    return false;
				}
				public Integer PARENTESCOSLength(){
				    return null;
				}
				public Integer PARENTESCOSPrecision(){
				    return null;
				}
				public String PARENTESCOSDefault(){
				
					return null;
				
				}
				public String PARENTESCOSComment(){
				
				    return "";
				
				}
				public String PARENTESCOSPattern(){
				
					return "";
				
				}
				public String PARENTESCOSOriginalDbColumnName(){
				
					return "PARENTESCOS";
				
				}

				
			    public String FECHA_NACIMIENTO;

				public String getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return null;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return null;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				
			    public BigDecimal EDAD;

				public BigDecimal getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return true;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return null;
				}
				public Integer EDADPrecision(){
				    return null;
				}
				public String EDADDefault(){
				
					return "";
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public String LOCALIDADES;

				public String getLOCALIDADES () {
					return this.LOCALIDADES;
				}

				public Boolean LOCALIDADESIsNullable(){
				    return true;
				}
				public Boolean LOCALIDADESIsKey(){
				    return false;
				}
				public Integer LOCALIDADESLength(){
				    return null;
				}
				public Integer LOCALIDADESPrecision(){
				    return null;
				}
				public String LOCALIDADESDefault(){
				
					return "";
				
				}
				public String LOCALIDADESComment(){
				
				    return "";
				
				}
				public String LOCALIDADESPattern(){
				
					return "";
				
				}
				public String LOCALIDADESOriginalDbColumnName(){
				
					return "LOCALIDADES";
				
				}

				
			    public String DIRECCION;

				public String getDIRECCION () {
					return this.DIRECCION;
				}

				public Boolean DIRECCIONIsNullable(){
				    return true;
				}
				public Boolean DIRECCIONIsKey(){
				    return false;
				}
				public Integer DIRECCIONLength(){
				    return null;
				}
				public Integer DIRECCIONPrecision(){
				    return null;
				}
				public String DIRECCIONDefault(){
				
					return "";
				
				}
				public String DIRECCIONComment(){
				
				    return "";
				
				}
				public String DIRECCIONPattern(){
				
					return "";
				
				}
				public String DIRECCIONOriginalDbColumnName(){
				
					return "DIRECCION";
				
				}

				
			    public String BARRIO;

				public String getBARRIO () {
					return this.BARRIO;
				}

				public Boolean BARRIOIsNullable(){
				    return true;
				}
				public Boolean BARRIOIsKey(){
				    return false;
				}
				public Integer BARRIOLength(){
				    return null;
				}
				public Integer BARRIOPrecision(){
				    return null;
				}
				public String BARRIODefault(){
				
					return "";
				
				}
				public String BARRIOComment(){
				
				    return "";
				
				}
				public String BARRIOPattern(){
				
					return "";
				
				}
				public String BARRIOOriginalDbColumnName(){
				
					return "BARRIO";
				
				}

				
			    public String TELEFONO;

				public String getTELEFONO () {
					return this.TELEFONO;
				}

				public Boolean TELEFONOIsNullable(){
				    return true;
				}
				public Boolean TELEFONOIsKey(){
				    return false;
				}
				public Integer TELEFONOLength(){
				    return null;
				}
				public Integer TELEFONOPrecision(){
				    return null;
				}
				public String TELEFONODefault(){
				
					return "";
				
				}
				public String TELEFONOComment(){
				
				    return "";
				
				}
				public String TELEFONOPattern(){
				
					return "";
				
				}
				public String TELEFONOOriginalDbColumnName(){
				
					return "TELEFONO";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return "";
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public String RESIDENCIA_DEPARTAMENTO;

				public String getRESIDENCIA_DEPARTAMENTO () {
					return this.RESIDENCIA_DEPARTAMENTO;
				}

				public Boolean RESIDENCIA_DEPARTAMENTOIsNullable(){
				    return true;
				}
				public Boolean RESIDENCIA_DEPARTAMENTOIsKey(){
				    return false;
				}
				public Integer RESIDENCIA_DEPARTAMENTOLength(){
				    return null;
				}
				public Integer RESIDENCIA_DEPARTAMENTOPrecision(){
				    return null;
				}
				public String RESIDENCIA_DEPARTAMENTODefault(){
				
					return "";
				
				}
				public String RESIDENCIA_DEPARTAMENTOComment(){
				
				    return "";
				
				}
				public String RESIDENCIA_DEPARTAMENTOPattern(){
				
					return "";
				
				}
				public String RESIDENCIA_DEPARTAMENTOOriginalDbColumnName(){
				
					return "RESIDENCIA_DEPARTAMENTO";
				
				}

				
			    public String RESIDENCIA_CODIGO_DEPARTAMENTO;

				public String getRESIDENCIA_CODIGO_DEPARTAMENTO () {
					return this.RESIDENCIA_CODIGO_DEPARTAMENTO;
				}

				public Boolean RESIDENCIA_CODIGO_DEPARTAMENTOIsNullable(){
				    return true;
				}
				public Boolean RESIDENCIA_CODIGO_DEPARTAMENTOIsKey(){
				    return false;
				}
				public Integer RESIDENCIA_CODIGO_DEPARTAMENTOLength(){
				    return null;
				}
				public Integer RESIDENCIA_CODIGO_DEPARTAMENTOPrecision(){
				    return null;
				}
				public String RESIDENCIA_CODIGO_DEPARTAMENTODefault(){
				
					return "";
				
				}
				public String RESIDENCIA_CODIGO_DEPARTAMENTOComment(){
				
				    return "";
				
				}
				public String RESIDENCIA_CODIGO_DEPARTAMENTOPattern(){
				
					return "";
				
				}
				public String RESIDENCIA_CODIGO_DEPARTAMENTOOriginalDbColumnName(){
				
					return "RESIDENCIA_CODIGO_DEPARTAMENTO";
				
				}

				
			    public String RESIDENCIA_MUNICIPIO;

				public String getRESIDENCIA_MUNICIPIO () {
					return this.RESIDENCIA_MUNICIPIO;
				}

				public Boolean RESIDENCIA_MUNICIPIOIsNullable(){
				    return true;
				}
				public Boolean RESIDENCIA_MUNICIPIOIsKey(){
				    return false;
				}
				public Integer RESIDENCIA_MUNICIPIOLength(){
				    return null;
				}
				public Integer RESIDENCIA_MUNICIPIOPrecision(){
				    return null;
				}
				public String RESIDENCIA_MUNICIPIODefault(){
				
					return "";
				
				}
				public String RESIDENCIA_MUNICIPIOComment(){
				
				    return "";
				
				}
				public String RESIDENCIA_MUNICIPIOPattern(){
				
					return "";
				
				}
				public String RESIDENCIA_MUNICIPIOOriginalDbColumnName(){
				
					return "RESIDENCIA_MUNICIPIO";
				
				}

				
			    public String RESIDENCIA_CODIGO_MUNICIPIO;

				public String getRESIDENCIA_CODIGO_MUNICIPIO () {
					return this.RESIDENCIA_CODIGO_MUNICIPIO;
				}

				public Boolean RESIDENCIA_CODIGO_MUNICIPIOIsNullable(){
				    return true;
				}
				public Boolean RESIDENCIA_CODIGO_MUNICIPIOIsKey(){
				    return false;
				}
				public Integer RESIDENCIA_CODIGO_MUNICIPIOLength(){
				    return null;
				}
				public Integer RESIDENCIA_CODIGO_MUNICIPIOPrecision(){
				    return null;
				}
				public String RESIDENCIA_CODIGO_MUNICIPIODefault(){
				
					return "";
				
				}
				public String RESIDENCIA_CODIGO_MUNICIPIOComment(){
				
				    return "";
				
				}
				public String RESIDENCIA_CODIGO_MUNICIPIOPattern(){
				
					return "";
				
				}
				public String RESIDENCIA_CODIGO_MUNICIPIOOriginalDbColumnName(){
				
					return "RESIDENCIA_CODIGO_MUNICIPIO";
				
				}

				
			    public String PLAN_AFILIACIONES;

				public String getPLAN_AFILIACIONES () {
					return this.PLAN_AFILIACIONES;
				}

				public Boolean PLAN_AFILIACIONESIsNullable(){
				    return true;
				}
				public Boolean PLAN_AFILIACIONESIsKey(){
				    return false;
				}
				public Integer PLAN_AFILIACIONESLength(){
				    return null;
				}
				public Integer PLAN_AFILIACIONESPrecision(){
				    return null;
				}
				public String PLAN_AFILIACIONESDefault(){
				
					return "";
				
				}
				public String PLAN_AFILIACIONESComment(){
				
				    return "";
				
				}
				public String PLAN_AFILIACIONESPattern(){
				
					return "";
				
				}
				public String PLAN_AFILIACIONESOriginalDbColumnName(){
				
					return "PLAN_AFILIACIONES";
				
				}

				
			    public String TIPO_AFILIACION;

				public String getTIPO_AFILIACION () {
					return this.TIPO_AFILIACION;
				}

				public Boolean TIPO_AFILIACIONIsNullable(){
				    return true;
				}
				public Boolean TIPO_AFILIACIONIsKey(){
				    return false;
				}
				public Integer TIPO_AFILIACIONLength(){
				    return null;
				}
				public Integer TIPO_AFILIACIONPrecision(){
				    return null;
				}
				public String TIPO_AFILIACIONDefault(){
				
					return "";
				
				}
				public String TIPO_AFILIACIONComment(){
				
				    return "";
				
				}
				public String TIPO_AFILIACIONPattern(){
				
					return "";
				
				}
				public String TIPO_AFILIACIONOriginalDbColumnName(){
				
					return "TIPO_AFILIACION";
				
				}

				
			    public String TIPO_AFILIADO;

				public String getTIPO_AFILIADO () {
					return this.TIPO_AFILIADO;
				}

				public Boolean TIPO_AFILIADOIsNullable(){
				    return true;
				}
				public Boolean TIPO_AFILIADOIsKey(){
				    return false;
				}
				public Integer TIPO_AFILIADOLength(){
				    return null;
				}
				public Integer TIPO_AFILIADOPrecision(){
				    return null;
				}
				public String TIPO_AFILIADODefault(){
				
					return "";
				
				}
				public String TIPO_AFILIADOComment(){
				
				    return "";
				
				}
				public String TIPO_AFILIADOPattern(){
				
					return "";
				
				}
				public String TIPO_AFILIADOOriginalDbColumnName(){
				
					return "TIPO_AFILIADO";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return null;
				}
				public Integer ESTADOPrecision(){
				    return null;
				}
				public String ESTADODefault(){
				
					return "";
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String FECHA_AFILIACION;

				public String getFECHA_AFILIACION () {
					return this.FECHA_AFILIACION;
				}

				public Boolean FECHA_AFILIACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_AFILIACIONIsKey(){
				    return false;
				}
				public Integer FECHA_AFILIACIONLength(){
				    return null;
				}
				public Integer FECHA_AFILIACIONPrecision(){
				    return null;
				}
				public String FECHA_AFILIACIONDefault(){
				
					return "";
				
				}
				public String FECHA_AFILIACIONComment(){
				
				    return "";
				
				}
				public String FECHA_AFILIACIONPattern(){
				
					return "";
				
				}
				public String FECHA_AFILIACIONOriginalDbColumnName(){
				
					return "FECHA_AFILIACION";
				
				}

				
			    public String FECHA_REGISTRO_AFILIACION;

				public String getFECHA_REGISTRO_AFILIACION () {
					return this.FECHA_REGISTRO_AFILIACION;
				}

				public Boolean FECHA_REGISTRO_AFILIACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_REGISTRO_AFILIACIONIsKey(){
				    return false;
				}
				public Integer FECHA_REGISTRO_AFILIACIONLength(){
				    return null;
				}
				public Integer FECHA_REGISTRO_AFILIACIONPrecision(){
				    return null;
				}
				public String FECHA_REGISTRO_AFILIACIONDefault(){
				
					return "";
				
				}
				public String FECHA_REGISTRO_AFILIACIONComment(){
				
				    return "";
				
				}
				public String FECHA_REGISTRO_AFILIACIONPattern(){
				
					return "";
				
				}
				public String FECHA_REGISTRO_AFILIACIONOriginalDbColumnName(){
				
					return "FECHA_REGISTRO_AFILIACION";
				
				}

				
			    public String FECHA_INACTIVACION;

				public String getFECHA_INACTIVACION () {
					return this.FECHA_INACTIVACION;
				}

				public Boolean FECHA_INACTIVACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVACIONIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVACIONLength(){
				    return null;
				}
				public Integer FECHA_INACTIVACIONPrecision(){
				    return null;
				}
				public String FECHA_INACTIVACIONDefault(){
				
					return "";
				
				}
				public String FECHA_INACTIVACIONComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVACIONPattern(){
				
					return "";
				
				}
				public String FECHA_INACTIVACIONOriginalDbColumnName(){
				
					return "FECHA_INACTIVACION";
				
				}

				
			    public String FUERZA;

				public String getFUERZA () {
					return this.FUERZA;
				}

				public Boolean FUERZAIsNullable(){
				    return true;
				}
				public Boolean FUERZAIsKey(){
				    return false;
				}
				public Integer FUERZALength(){
				    return null;
				}
				public Integer FUERZAPrecision(){
				    return null;
				}
				public String FUERZADefault(){
				
					return "";
				
				}
				public String FUERZAComment(){
				
				    return "";
				
				}
				public String FUERZAPattern(){
				
					return "";
				
				}
				public String FUERZAOriginalDbColumnName(){
				
					return "FUERZA";
				
				}

				
			    public String GRADO_CODIGO;

				public String getGRADO_CODIGO () {
					return this.GRADO_CODIGO;
				}

				public Boolean GRADO_CODIGOIsNullable(){
				    return true;
				}
				public Boolean GRADO_CODIGOIsKey(){
				    return false;
				}
				public Integer GRADO_CODIGOLength(){
				    return null;
				}
				public Integer GRADO_CODIGOPrecision(){
				    return null;
				}
				public String GRADO_CODIGODefault(){
				
					return "";
				
				}
				public String GRADO_CODIGOComment(){
				
				    return "";
				
				}
				public String GRADO_CODIGOPattern(){
				
					return "";
				
				}
				public String GRADO_CODIGOOriginalDbColumnName(){
				
					return "GRADO_CODIGO";
				
				}

				
			    public String GRADO_NOMBRE;

				public String getGRADO_NOMBRE () {
					return this.GRADO_NOMBRE;
				}

				public Boolean GRADO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean GRADO_NOMBREIsKey(){
				    return false;
				}
				public Integer GRADO_NOMBRELength(){
				    return null;
				}
				public Integer GRADO_NOMBREPrecision(){
				    return null;
				}
				public String GRADO_NOMBREDefault(){
				
					return "";
				
				}
				public String GRADO_NOMBREComment(){
				
				    return "";
				
				}
				public String GRADO_NOMBREPattern(){
				
					return "";
				
				}
				public String GRADO_NOMBREOriginalDbColumnName(){
				
					return "GRADO_NOMBRE";
				
				}

				
			    public String GRADO_SIGLA;

				public String getGRADO_SIGLA () {
					return this.GRADO_SIGLA;
				}

				public Boolean GRADO_SIGLAIsNullable(){
				    return true;
				}
				public Boolean GRADO_SIGLAIsKey(){
				    return false;
				}
				public Integer GRADO_SIGLALength(){
				    return null;
				}
				public Integer GRADO_SIGLAPrecision(){
				    return null;
				}
				public String GRADO_SIGLADefault(){
				
					return "";
				
				}
				public String GRADO_SIGLAComment(){
				
				    return "";
				
				}
				public String GRADO_SIGLAPattern(){
				
					return "";
				
				}
				public String GRADO_SIGLAOriginalDbColumnName(){
				
					return "GRADO_SIGLA";
				
				}

				
			    public String ESM_CODIGO;

				public String getESM_CODIGO () {
					return this.ESM_CODIGO;
				}

				public Boolean ESM_CODIGOIsNullable(){
				    return true;
				}
				public Boolean ESM_CODIGOIsKey(){
				    return false;
				}
				public Integer ESM_CODIGOLength(){
				    return null;
				}
				public Integer ESM_CODIGOPrecision(){
				    return null;
				}
				public String ESM_CODIGODefault(){
				
					return "";
				
				}
				public String ESM_CODIGOComment(){
				
				    return "";
				
				}
				public String ESM_CODIGOPattern(){
				
					return "";
				
				}
				public String ESM_CODIGOOriginalDbColumnName(){
				
					return "ESM_CODIGO";
				
				}

				
			    public String ESM_NOMBRE;

				public String getESM_NOMBRE () {
					return this.ESM_NOMBRE;
				}

				public Boolean ESM_NOMBREIsNullable(){
				    return true;
				}
				public Boolean ESM_NOMBREIsKey(){
				    return false;
				}
				public Integer ESM_NOMBRELength(){
				    return null;
				}
				public Integer ESM_NOMBREPrecision(){
				    return null;
				}
				public String ESM_NOMBREDefault(){
				
					return "";
				
				}
				public String ESM_NOMBREComment(){
				
				    return "";
				
				}
				public String ESM_NOMBREPattern(){
				
					return "";
				
				}
				public String ESM_NOMBREOriginalDbColumnName(){
				
					return "ESM_NOMBRE";
				
				}

				
			    public String ESM_FUERZA;

				public String getESM_FUERZA () {
					return this.ESM_FUERZA;
				}

				public Boolean ESM_FUERZAIsNullable(){
				    return true;
				}
				public Boolean ESM_FUERZAIsKey(){
				    return false;
				}
				public Integer ESM_FUERZALength(){
				    return null;
				}
				public Integer ESM_FUERZAPrecision(){
				    return null;
				}
				public String ESM_FUERZADefault(){
				
					return "";
				
				}
				public String ESM_FUERZAComment(){
				
				    return "";
				
				}
				public String ESM_FUERZAPattern(){
				
					return "";
				
				}
				public String ESM_FUERZAOriginalDbColumnName(){
				
					return "ESM_FUERZA";
				
				}

				
			    public String ESM_DEPARTAMENTO;

				public String getESM_DEPARTAMENTO () {
					return this.ESM_DEPARTAMENTO;
				}

				public Boolean ESM_DEPARTAMENTOIsNullable(){
				    return true;
				}
				public Boolean ESM_DEPARTAMENTOIsKey(){
				    return false;
				}
				public Integer ESM_DEPARTAMENTOLength(){
				    return null;
				}
				public Integer ESM_DEPARTAMENTOPrecision(){
				    return null;
				}
				public String ESM_DEPARTAMENTODefault(){
				
					return "";
				
				}
				public String ESM_DEPARTAMENTOComment(){
				
				    return "";
				
				}
				public String ESM_DEPARTAMENTOPattern(){
				
					return "";
				
				}
				public String ESM_DEPARTAMENTOOriginalDbColumnName(){
				
					return "ESM_DEPARTAMENTO";
				
				}

				
			    public String ESM_CODIGO_DEPARTAMENTO;

				public String getESM_CODIGO_DEPARTAMENTO () {
					return this.ESM_CODIGO_DEPARTAMENTO;
				}

				public Boolean ESM_CODIGO_DEPARTAMENTOIsNullable(){
				    return true;
				}
				public Boolean ESM_CODIGO_DEPARTAMENTOIsKey(){
				    return false;
				}
				public Integer ESM_CODIGO_DEPARTAMENTOLength(){
				    return null;
				}
				public Integer ESM_CODIGO_DEPARTAMENTOPrecision(){
				    return null;
				}
				public String ESM_CODIGO_DEPARTAMENTODefault(){
				
					return "";
				
				}
				public String ESM_CODIGO_DEPARTAMENTOComment(){
				
				    return "";
				
				}
				public String ESM_CODIGO_DEPARTAMENTOPattern(){
				
					return "";
				
				}
				public String ESM_CODIGO_DEPARTAMENTOOriginalDbColumnName(){
				
					return "ESM_CODIGO_DEPARTAMENTO";
				
				}

				
			    public String ESM_MUNICIPIO;

				public String getESM_MUNICIPIO () {
					return this.ESM_MUNICIPIO;
				}

				public Boolean ESM_MUNICIPIOIsNullable(){
				    return true;
				}
				public Boolean ESM_MUNICIPIOIsKey(){
				    return false;
				}
				public Integer ESM_MUNICIPIOLength(){
				    return null;
				}
				public Integer ESM_MUNICIPIOPrecision(){
				    return null;
				}
				public String ESM_MUNICIPIODefault(){
				
					return "";
				
				}
				public String ESM_MUNICIPIOComment(){
				
				    return "";
				
				}
				public String ESM_MUNICIPIOPattern(){
				
					return "";
				
				}
				public String ESM_MUNICIPIOOriginalDbColumnName(){
				
					return "ESM_MUNICIPIO";
				
				}

				
			    public String ESM_CODIGO_MUNICIPIO;

				public String getESM_CODIGO_MUNICIPIO () {
					return this.ESM_CODIGO_MUNICIPIO;
				}

				public Boolean ESM_CODIGO_MUNICIPIOIsNullable(){
				    return true;
				}
				public Boolean ESM_CODIGO_MUNICIPIOIsKey(){
				    return false;
				}
				public Integer ESM_CODIGO_MUNICIPIOLength(){
				    return null;
				}
				public Integer ESM_CODIGO_MUNICIPIOPrecision(){
				    return null;
				}
				public String ESM_CODIGO_MUNICIPIODefault(){
				
					return "";
				
				}
				public String ESM_CODIGO_MUNICIPIOComment(){
				
				    return "";
				
				}
				public String ESM_CODIGO_MUNICIPIOPattern(){
				
					return "";
				
				}
				public String ESM_CODIGO_MUNICIPIOOriginalDbColumnName(){
				
					return "ESM_CODIGO_MUNICIPIO";
				
				}

				
			    public String FECHA_DEFUNCION;

				public String getFECHA_DEFUNCION () {
					return this.FECHA_DEFUNCION;
				}

				public Boolean FECHA_DEFUNCIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_DEFUNCIONIsKey(){
				    return false;
				}
				public Integer FECHA_DEFUNCIONLength(){
				    return null;
				}
				public Integer FECHA_DEFUNCIONPrecision(){
				    return null;
				}
				public String FECHA_DEFUNCIONDefault(){
				
					return "";
				
				}
				public String FECHA_DEFUNCIONComment(){
				
				    return "";
				
				}
				public String FECHA_DEFUNCIONPattern(){
				
					return "";
				
				}
				public String FECHA_DEFUNCIONOriginalDbColumnName(){
				
					return "FECHA_DEFUNCION";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.NUMERO_DOCUMENTO = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.GENERO = readString(dis);
					
					this.DISCAPACIDAD = readString(dis);
					
					this.PARENTESCOS = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
						this.EDAD = (BigDecimal) dis.readObject();
					
					this.LOCALIDADES = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.BARRIO = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.RESIDENCIA_DEPARTAMENTO = readString(dis);
					
					this.RESIDENCIA_CODIGO_DEPARTAMENTO = readString(dis);
					
					this.RESIDENCIA_MUNICIPIO = readString(dis);
					
					this.RESIDENCIA_CODIGO_MUNICIPIO = readString(dis);
					
					this.PLAN_AFILIACIONES = readString(dis);
					
					this.TIPO_AFILIACION = readString(dis);
					
					this.TIPO_AFILIADO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.FECHA_AFILIACION = readString(dis);
					
					this.FECHA_REGISTRO_AFILIACION = readString(dis);
					
					this.FECHA_INACTIVACION = readString(dis);
					
					this.FUERZA = readString(dis);
					
					this.GRADO_CODIGO = readString(dis);
					
					this.GRADO_NOMBRE = readString(dis);
					
					this.GRADO_SIGLA = readString(dis);
					
					this.ESM_CODIGO = readString(dis);
					
					this.ESM_NOMBRE = readString(dis);
					
					this.ESM_FUERZA = readString(dis);
					
					this.ESM_DEPARTAMENTO = readString(dis);
					
					this.ESM_CODIGO_DEPARTAMENTO = readString(dis);
					
					this.ESM_MUNICIPIO = readString(dis);
					
					this.ESM_CODIGO_MUNICIPIO = readString(dis);
					
					this.FECHA_DEFUNCION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.NUMERO_DOCUMENTO = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.GENERO = readString(dis);
					
					this.DISCAPACIDAD = readString(dis);
					
					this.PARENTESCOS = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
						this.EDAD = (BigDecimal) dis.readObject();
					
					this.LOCALIDADES = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.BARRIO = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.RESIDENCIA_DEPARTAMENTO = readString(dis);
					
					this.RESIDENCIA_CODIGO_DEPARTAMENTO = readString(dis);
					
					this.RESIDENCIA_MUNICIPIO = readString(dis);
					
					this.RESIDENCIA_CODIGO_MUNICIPIO = readString(dis);
					
					this.PLAN_AFILIACIONES = readString(dis);
					
					this.TIPO_AFILIACION = readString(dis);
					
					this.TIPO_AFILIADO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.FECHA_AFILIACION = readString(dis);
					
					this.FECHA_REGISTRO_AFILIACION = readString(dis);
					
					this.FECHA_INACTIVACION = readString(dis);
					
					this.FUERZA = readString(dis);
					
					this.GRADO_CODIGO = readString(dis);
					
					this.GRADO_NOMBRE = readString(dis);
					
					this.GRADO_SIGLA = readString(dis);
					
					this.ESM_CODIGO = readString(dis);
					
					this.ESM_NOMBRE = readString(dis);
					
					this.ESM_FUERZA = readString(dis);
					
					this.ESM_DEPARTAMENTO = readString(dis);
					
					this.ESM_CODIGO_DEPARTAMENTO = readString(dis);
					
					this.ESM_MUNICIPIO = readString(dis);
					
					this.ESM_CODIGO_MUNICIPIO = readString(dis);
					
					this.FECHA_DEFUNCION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NUMERO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.GENERO,dos);
					
					// String
				
						writeString(this.DISCAPACIDAD,dos);
					
					// String
				
						writeString(this.PARENTESCOS,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.EDAD);
					
					// String
				
						writeString(this.LOCALIDADES,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.BARRIO,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// String
				
						writeString(this.RESIDENCIA_DEPARTAMENTO,dos);
					
					// String
				
						writeString(this.RESIDENCIA_CODIGO_DEPARTAMENTO,dos);
					
					// String
				
						writeString(this.RESIDENCIA_MUNICIPIO,dos);
					
					// String
				
						writeString(this.RESIDENCIA_CODIGO_MUNICIPIO,dos);
					
					// String
				
						writeString(this.PLAN_AFILIACIONES,dos);
					
					// String
				
						writeString(this.TIPO_AFILIACION,dos);
					
					// String
				
						writeString(this.TIPO_AFILIADO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.FECHA_AFILIACION,dos);
					
					// String
				
						writeString(this.FECHA_REGISTRO_AFILIACION,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVACION,dos);
					
					// String
				
						writeString(this.FUERZA,dos);
					
					// String
				
						writeString(this.GRADO_CODIGO,dos);
					
					// String
				
						writeString(this.GRADO_NOMBRE,dos);
					
					// String
				
						writeString(this.GRADO_SIGLA,dos);
					
					// String
				
						writeString(this.ESM_CODIGO,dos);
					
					// String
				
						writeString(this.ESM_NOMBRE,dos);
					
					// String
				
						writeString(this.ESM_FUERZA,dos);
					
					// String
				
						writeString(this.ESM_DEPARTAMENTO,dos);
					
					// String
				
						writeString(this.ESM_CODIGO_DEPARTAMENTO,dos);
					
					// String
				
						writeString(this.ESM_MUNICIPIO,dos);
					
					// String
				
						writeString(this.ESM_CODIGO_MUNICIPIO,dos);
					
					// String
				
						writeString(this.FECHA_DEFUNCION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NUMERO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.GENERO,dos);
					
					// String
				
						writeString(this.DISCAPACIDAD,dos);
					
					// String
				
						writeString(this.PARENTESCOS,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.EDAD);
					
					// String
				
						writeString(this.LOCALIDADES,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.BARRIO,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// String
				
						writeString(this.RESIDENCIA_DEPARTAMENTO,dos);
					
					// String
				
						writeString(this.RESIDENCIA_CODIGO_DEPARTAMENTO,dos);
					
					// String
				
						writeString(this.RESIDENCIA_MUNICIPIO,dos);
					
					// String
				
						writeString(this.RESIDENCIA_CODIGO_MUNICIPIO,dos);
					
					// String
				
						writeString(this.PLAN_AFILIACIONES,dos);
					
					// String
				
						writeString(this.TIPO_AFILIACION,dos);
					
					// String
				
						writeString(this.TIPO_AFILIADO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.FECHA_AFILIACION,dos);
					
					// String
				
						writeString(this.FECHA_REGISTRO_AFILIACION,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVACION,dos);
					
					// String
				
						writeString(this.FUERZA,dos);
					
					// String
				
						writeString(this.GRADO_CODIGO,dos);
					
					// String
				
						writeString(this.GRADO_NOMBRE,dos);
					
					// String
				
						writeString(this.GRADO_SIGLA,dos);
					
					// String
				
						writeString(this.ESM_CODIGO,dos);
					
					// String
				
						writeString(this.ESM_NOMBRE,dos);
					
					// String
				
						writeString(this.ESM_FUERZA,dos);
					
					// String
				
						writeString(this.ESM_DEPARTAMENTO,dos);
					
					// String
				
						writeString(this.ESM_CODIGO_DEPARTAMENTO,dos);
					
					// String
				
						writeString(this.ESM_MUNICIPIO,dos);
					
					// String
				
						writeString(this.ESM_CODIGO_MUNICIPIO,dos);
					
					// String
				
						writeString(this.FECHA_DEFUNCION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",NUMERO_DOCUMENTO="+NUMERO_DOCUMENTO);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",GENERO="+GENERO);
		sb.append(",DISCAPACIDAD="+DISCAPACIDAD);
		sb.append(",PARENTESCOS="+PARENTESCOS);
		sb.append(",FECHA_NACIMIENTO="+FECHA_NACIMIENTO);
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",LOCALIDADES="+LOCALIDADES);
		sb.append(",DIRECCION="+DIRECCION);
		sb.append(",BARRIO="+BARRIO);
		sb.append(",TELEFONO="+TELEFONO);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",RESIDENCIA_DEPARTAMENTO="+RESIDENCIA_DEPARTAMENTO);
		sb.append(",RESIDENCIA_CODIGO_DEPARTAMENTO="+RESIDENCIA_CODIGO_DEPARTAMENTO);
		sb.append(",RESIDENCIA_MUNICIPIO="+RESIDENCIA_MUNICIPIO);
		sb.append(",RESIDENCIA_CODIGO_MUNICIPIO="+RESIDENCIA_CODIGO_MUNICIPIO);
		sb.append(",PLAN_AFILIACIONES="+PLAN_AFILIACIONES);
		sb.append(",TIPO_AFILIACION="+TIPO_AFILIACION);
		sb.append(",TIPO_AFILIADO="+TIPO_AFILIADO);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",FECHA_AFILIACION="+FECHA_AFILIACION);
		sb.append(",FECHA_REGISTRO_AFILIACION="+FECHA_REGISTRO_AFILIACION);
		sb.append(",FECHA_INACTIVACION="+FECHA_INACTIVACION);
		sb.append(",FUERZA="+FUERZA);
		sb.append(",GRADO_CODIGO="+GRADO_CODIGO);
		sb.append(",GRADO_NOMBRE="+GRADO_NOMBRE);
		sb.append(",GRADO_SIGLA="+GRADO_SIGLA);
		sb.append(",ESM_CODIGO="+ESM_CODIGO);
		sb.append(",ESM_NOMBRE="+ESM_NOMBRE);
		sb.append(",ESM_FUERZA="+ESM_FUERZA);
		sb.append(",ESM_DEPARTAMENTO="+ESM_DEPARTAMENTO);
		sb.append(",ESM_CODIGO_DEPARTAMENTO="+ESM_CODIGO_DEPARTAMENTO);
		sb.append(",ESM_MUNICIPIO="+ESM_MUNICIPIO);
		sb.append(",ESM_CODIGO_MUNICIPIO="+ESM_CODIGO_MUNICIPIO);
		sb.append(",FECHA_DEFUNCION="+FECHA_DEFUNCION);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row4Struct row4 = new row4Struct();




	
	/**
	 * [tFileOutputDelimited_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_3", false);
		start_Hash.put("tFileOutputDelimited_3", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tFileOutputDelimited_3 = 0;
		

String fileName_tFileOutputDelimited_3 = "";
    fileName_tFileOutputDelimited_3 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_3 = null;
    String extension_tFileOutputDelimited_3 = null;
    String directory_tFileOutputDelimited_3 = null;
    if((fileName_tFileOutputDelimited_3.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_3.lastIndexOf(".") < fileName_tFileOutputDelimited_3.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3;
            extension_tFileOutputDelimited_3 = "";
        } else {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(0, fileName_tFileOutputDelimited_3.lastIndexOf("."));
            extension_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(fileName_tFileOutputDelimited_3.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(0, fileName_tFileOutputDelimited_3.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_3.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(0, fileName_tFileOutputDelimited_3.lastIndexOf("."));
            extension_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(fileName_tFileOutputDelimited_3.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3;
            extension_tFileOutputDelimited_3 = "";
        }
        directory_tFileOutputDelimited_3 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_3 = true;
    java.io.File filetFileOutputDelimited_3 = new java.io.File(fileName_tFileOutputDelimited_3);
    globalMap.put("tFileOutputDelimited_3_FILE_NAME",fileName_tFileOutputDelimited_3);
        if(filetFileOutputDelimited_3.exists()){
            isFileGenerated_tFileOutputDelimited_3 = false;
        }
            int nb_line_tFileOutputDelimited_3 = 0;
            int splitedFileNo_tFileOutputDelimited_3 = 0;
            int currentRow_tFileOutputDelimited_3 = 0;

            final String OUT_DELIM_tFileOutputDelimited_3 = /** Start field tFileOutputDelimited_3:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_3:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_3 = /** Start field tFileOutputDelimited_3:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_3:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_3 != null && directory_tFileOutputDelimited_3.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_3 = new java.io.File(directory_tFileOutputDelimited_3);
                        if(!dir_tFileOutputDelimited_3.exists()) {
                            dir_tFileOutputDelimited_3.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_3 = null;

                        outtFileOutputDelimited_3 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_3, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_3", outtFileOutputDelimited_3);
                                    if(filetFileOutputDelimited_3.length()==0){
                                        outtFileOutputDelimited_3.write("TIPO_DOCUMENTO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("NUMERO_DOCUMENTO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("PRIMER_APELLIDO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("SEGUNDO_APELLIDO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("PRIMER_NOMBRE");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("SEGUNDO_NOMBRE");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("GENERO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("DISCAPACIDAD");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("PARENTESCOS");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("FECHA_NACIMIENTO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("EDAD");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("LOCALIDADES");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("DIRECCION");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("BARRIO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("TELEFONO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("EMAIL");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("RESIDENCIA_DEPARTAMENTO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("RESIDENCIA_CODIGO_DEPARTAMENTO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("RESIDENCIA_MUNICIPIO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("RESIDENCIA_CODIGO_MUNICIPIO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("PLAN_AFILIACIONES");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("TIPO_AFILIACION");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("TIPO_AFILIADO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("ESTADO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("FECHA_AFILIACION");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("FECHA_REGISTRO_AFILIACION");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("FECHA_INACTIVACION");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("FUERZA");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("GRADO_CODIGO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("GRADO_NOMBRE");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("GRADO_SIGLA");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("ESM_CODIGO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("ESM_NOMBRE");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("ESM_FUERZA");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("ESM_DEPARTAMENTO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("ESM_CODIGO_DEPARTAMENTO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("ESM_MUNICIPIO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("ESM_CODIGO_MUNICIPIO");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("FECHA_DEFUNCION");
                                        outtFileOutputDelimited_3.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_3", nb_line_tFileOutputDelimited_3);

 



/**
 * [tFileOutputDelimited_3 begin ] stop
 */



	
	/**
	 * [tOracleInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_4", false);
		start_Hash.put("tOracleInput_4", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_4";
	
	
		int tos_count_tOracleInput_4 = 0;
		
	


	
		    int nb_line_tOracleInput_4 = 0;
		    java.sql.Connection conn_tOracleInput_4 = null;
				conn_tOracleInput_4 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_4 = false;
				boolean isConnectionWrapped_tOracleInput_4 = !(conn_tOracleInput_4 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_4.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_4 = null;
                if (isConnectionWrapped_tOracleInput_4) {
					unwrappedOraConn_tOracleInput_4 = conn_tOracleInput_4.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_4 != null) {
                        isTimeZoneNull_tOracleInput_4 = (unwrappedOraConn_tOracleInput_4.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_4 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_4).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_4) {
					java.sql.Statement stmtGetTZ_tOracleInput_4 = conn_tOracleInput_4.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_4 = stmtGetTZ_tOracleInput_4.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_4 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_4.next()) {
						sessionTimezone_tOracleInput_4 = rsGetTZ_tOracleInput_4.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_4 && unwrappedOraConn_tOracleInput_4 != null) {
                        unwrappedOraConn_tOracleInput_4.setSessionTimeZone(sessionTimezone_tOracleInput_4);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_4).setSessionTimeZone(sessionTimezone_tOracleInput_4);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_4 = conn_tOracleInput_4.createStatement();

		    String dbquery_tOracleInput_4 = "SELECT  replace(replace(VM.TIPO_DOCUMENTO,chr(10),''),chr(13),'') AS TIPO_DOCUMENTO,\n        replace(replace(VM.DOCUME"
+"NTO,chr(10),''),chr(13),'') AS NUMERO_DOCUMENTO,\n        replace(replace(VM.PRIMER_APELLIDO,chr(10),''),chr(13),'') AS "
+"PRIMER_APELLIDO,\n        replace(replace(VM.SEGUNDO_APELLIDO,chr(10),''),chr(13),'') AS SEGUNDO_APELLIDO,\n        repl"
+"ace(replace(VM.PRIMER_NOMBRE,chr(10),''),chr(13),'') AS PRIMER_NOMBRE,\n        replace(replace(VM.SEGUNDO_NOMBRE,chr(10"
+"),''),chr(13),'') AS SEGUNDO_NOMBRE,\n        replace(replace(VM.GENERO,chr(10),''),chr(13),'') AS GENERO,\n        repl"
+"ace(replace(VM.TDISCAPACIDADES,chr(10),''),chr(13),'') AS DISCAPACIDAD,\n        replace(replace(VM.PARENTESCOS,chr(10),"
+"''),chr(13),'') AS PARENTESCOS,\n        TO_CHAR(VM.FECHA_NACIMIENTO,'DD/MM/YYYY') AS FECHA_NACIMIENTO,\n        TRUNC(M"
+"ONTHS_BETWEEN(SYSDATE,VM.FECHA_NACIMIENTO)/12) AS EDAD,\n        replace(replace(VM.LOCALIDADES,chr(10),''),chr(13),'') "
+"AS LOCALIDADES,\n        replace(replace(VM.DIRECCION,chr(10),''),chr(13),'') AS DIRECCION, \n        replace(replace(VM"
+".BARRIO,chr(10),''),chr(13),'') AS BARRIO,\n        replace(replace(VM.TELEFONO,chr(10),''),chr(13),'') AS TELEFONO,\n  "
+"      replace(replace(VM.EMAIL,chr(10),''),chr(13),'') AS EMAIL, \n        replace(replace(VM.DEPARTAMENTO_RESIDENCIAS,c"
+"hr(10),''),chr(13),'') AS RESIDENCIA_DEPARTAMENTO,\n        replace(replace(VM.CODIGO_DEPTO_RESIDENCIA,chr(10),''),chr(1"
+"3),'') AS RESIDENCIA_CODIGO_DEPARTAMENTO,\n        replace(replace(VM.MUNICIPIO_RESIDENCIA,chr(10),''),chr(13),'') AS RE"
+"SIDENCIA_MUNICIPIO,\n        replace(replace(VM.CODIGO_MUNICIPIO_RESIDENCIA,chr(10),''),chr(13),'') AS RESIDENCIA_CODIGO"
+"_MUNICIPIO,\n        replace(replace(VM.PLANAFILIACIONES,chr(10),''),chr(13),'') AS PLAN_AFILIACIONES,\n        replace("
+"replace(VM.TAFILIACIONES,chr(10),''),chr(13),'') AS TIPO_AFILIACION,\n        replace(replace(VM.TAFILIADOS,chr(10),''),"
+"chr(13),'') AS TIPO_AFILIADO,\n        replace(replace(VM.ESTAFILIACION,chr(10),''),chr(13),'') AS ESTADO,\n        TO_C"
+"HAR(VM.FAFILIACION,'DD/MM/YYYY') AS FECHA_AFILIACION,\n        TO_CHAR(VM.FREGISTRO,'DD/MM/YYYY') AS FECHA_REGISTRO_AFIL"
+"IACION,\n        DECODE( VM.ESTAFILIACION,  'Inactivo', TO_CHAR(VM.FECHA_ESTADO, 'DD/MM/YYYY'), ' ') AS FECHA_INACTIVACI"
+"ON,\n        replace(replace(VM.FUERZAS,chr(10),''),chr(13),'') AS FUERZA,\n        replace(replace(VM.CODIGO_GRADO,chr("
+"10),''),chr(13),'') AS GRADO_CODIGO,\n        replace(replace(VM.GRDMILITARES,chr(10),''),chr(13),'') AS GRADO_NOMBRE,\n"
+"        replace(replace(VM.SIGLA_GRADO,chr(10),''),chr(13),'') AS GRADO_SIGLA,\n        replace(replace(VM.CODIGO_ESM,ch"
+"r(10),''),chr(13),'') AS ESM_CODIGO,\n        replace(replace(VM.ESMADSCRITO,chr(10),''),chr(13),'') AS ESM_NOMBRE,\n   "
+"     replace(replace(VM.FUERZA_ESM,chr(10),''),chr(13),'') AS ESM_FUERZA,\n        replace(replace(VM.DEPARTAMENTO_ESM,c"
+"hr(10),''),chr(13),'') AS ESM_DEPARTAMENTO,\n        replace(replace(VM.CODIGO_DEPTO_ESM,chr(10),''),chr(13),'') AS ESM_"
+"CODIGO_DEPARTAMENTO,\n        replace(replace(VM.MUNICIPIO_ESM,chr(10),''),chr(13),'') AS ESM_MUNICIPIO,\n        replac"
+"e(replace(VM.CODIGO_MUNICIPIO_ESM,chr(10),''),chr(13),'') AS ESM_CODIGO_MUNICIPIO,\n        TO_CHAR(VM.FECHA_DEFUNCION,'"
+"DD/MM/YYYY') AS FECHA_DEFUNCION\nFROM  VM_PERSONAS VM\nINNER JOIN AFI_CARCHIVOS CA ON CA.DOCUMENTO = VM.DOCUMENTO AND  T"
+"RIM(UPPER(CA.TDOCUMENTOS)) = TRIM(UPPER(VM.TIPO_DOCUMENTO))\nAND TRIM(UPPER(CA.PRIMER_NOMBRE)) = TRIM(UPPER(VM.PRIMER_NO"
+"MBRE)) AND TRIM(UPPER(CA.PRIMER_APELLIDO)) = TRIM(UPPER(VM.PRIMER_APELLIDO))\nWHERE VM.AFILIADO_ESTREGISTRO_ID = 1 AND C"
+"A.ARCHIVOS_ID = " + context.infoIdArchivo ;
		    

		    globalMap.put("tOracleInput_4_QUERY",dbquery_tOracleInput_4);

		    java.sql.ResultSet rs_tOracleInput_4 = null;

		    try {
		    	rs_tOracleInput_4 = stmt_tOracleInput_4.executeQuery(dbquery_tOracleInput_4);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_4 = rs_tOracleInput_4.getMetaData();
		    	int colQtyInRs_tOracleInput_4 = rsmd_tOracleInput_4.getColumnCount();

		    String tmpContent_tOracleInput_4 = null;
		    
		    
		    while (rs_tOracleInput_4.next()) {
		        nb_line_tOracleInput_4++;
		        
							if(colQtyInRs_tOracleInput_4 < 1) {
								row4.TIPO_DOCUMENTO = null;
							} else {
	                         		
        	row4.TIPO_DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 2) {
								row4.NUMERO_DOCUMENTO = null;
							} else {
	                         		
        	row4.NUMERO_DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 3) {
								row4.PRIMER_APELLIDO = null;
							} else {
	                         		
        	row4.PRIMER_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 4) {
								row4.SEGUNDO_APELLIDO = null;
							} else {
	                         		
        	row4.SEGUNDO_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 5) {
								row4.PRIMER_NOMBRE = null;
							} else {
	                         		
        	row4.PRIMER_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 6) {
								row4.SEGUNDO_NOMBRE = null;
							} else {
	                         		
        	row4.SEGUNDO_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 7) {
								row4.GENERO = null;
							} else {
	                         		
        	row4.GENERO = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 8) {
								row4.DISCAPACIDAD = null;
							} else {
	                         		
        	row4.DISCAPACIDAD = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 8, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 9) {
								row4.PARENTESCOS = null;
							} else {
	                         		
        	row4.PARENTESCOS = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 10) {
								row4.FECHA_NACIMIENTO = null;
							} else {
	                         		
        	row4.FECHA_NACIMIENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 11) {
								row4.EDAD = null;
							} else {
		                          
					if(rs_tOracleInput_4.getObject(11) != null) {
						row4.EDAD = rs_tOracleInput_4.getBigDecimal(11);
					} else {
				
						row4.EDAD = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_4 < 12) {
								row4.LOCALIDADES = null;
							} else {
	                         		
        	row4.LOCALIDADES = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 13) {
								row4.DIRECCION = null;
							} else {
	                         		
        	row4.DIRECCION = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 13, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 14) {
								row4.BARRIO = null;
							} else {
	                         		
        	row4.BARRIO = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 14, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 15) {
								row4.TELEFONO = null;
							} else {
	                         		
        	row4.TELEFONO = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 15, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 16) {
								row4.EMAIL = null;
							} else {
	                         		
        	row4.EMAIL = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 16, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 17) {
								row4.RESIDENCIA_DEPARTAMENTO = null;
							} else {
	                         		
        	row4.RESIDENCIA_DEPARTAMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 17, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 18) {
								row4.RESIDENCIA_CODIGO_DEPARTAMENTO = null;
							} else {
	                         		
        	row4.RESIDENCIA_CODIGO_DEPARTAMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 18, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 19) {
								row4.RESIDENCIA_MUNICIPIO = null;
							} else {
	                         		
        	row4.RESIDENCIA_MUNICIPIO = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 19, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 20) {
								row4.RESIDENCIA_CODIGO_MUNICIPIO = null;
							} else {
	                         		
        	row4.RESIDENCIA_CODIGO_MUNICIPIO = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 20, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 21) {
								row4.PLAN_AFILIACIONES = null;
							} else {
	                         		
        	row4.PLAN_AFILIACIONES = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 21, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 22) {
								row4.TIPO_AFILIACION = null;
							} else {
	                         		
        	row4.TIPO_AFILIACION = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 22, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 23) {
								row4.TIPO_AFILIADO = null;
							} else {
	                         		
        	row4.TIPO_AFILIADO = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 23, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 24) {
								row4.ESTADO = null;
							} else {
	                         		
        	row4.ESTADO = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 24, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 25) {
								row4.FECHA_AFILIACION = null;
							} else {
	                         		
        	row4.FECHA_AFILIACION = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 25, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 26) {
								row4.FECHA_REGISTRO_AFILIACION = null;
							} else {
	                         		
        	row4.FECHA_REGISTRO_AFILIACION = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 26, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 27) {
								row4.FECHA_INACTIVACION = null;
							} else {
	                         		
        	row4.FECHA_INACTIVACION = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 27, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 28) {
								row4.FUERZA = null;
							} else {
	                         		
        	row4.FUERZA = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 28, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 29) {
								row4.GRADO_CODIGO = null;
							} else {
	                         		
        	row4.GRADO_CODIGO = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 29, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 30) {
								row4.GRADO_NOMBRE = null;
							} else {
	                         		
        	row4.GRADO_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 30, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 31) {
								row4.GRADO_SIGLA = null;
							} else {
	                         		
        	row4.GRADO_SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 31, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 32) {
								row4.ESM_CODIGO = null;
							} else {
	                         		
        	row4.ESM_CODIGO = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 32, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 33) {
								row4.ESM_NOMBRE = null;
							} else {
	                         		
        	row4.ESM_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 33, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 34) {
								row4.ESM_FUERZA = null;
							} else {
	                         		
        	row4.ESM_FUERZA = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 34, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 35) {
								row4.ESM_DEPARTAMENTO = null;
							} else {
	                         		
        	row4.ESM_DEPARTAMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 35, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 36) {
								row4.ESM_CODIGO_DEPARTAMENTO = null;
							} else {
	                         		
        	row4.ESM_CODIGO_DEPARTAMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 36, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 37) {
								row4.ESM_MUNICIPIO = null;
							} else {
	                         		
        	row4.ESM_MUNICIPIO = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 37, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 38) {
								row4.ESM_CODIGO_MUNICIPIO = null;
							} else {
	                         		
        	row4.ESM_CODIGO_MUNICIPIO = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 38, false);
		                    }
							if(colQtyInRs_tOracleInput_4 < 39) {
								row4.FECHA_DEFUNCION = null;
							} else {
	                         		
        	row4.FECHA_DEFUNCION = routines.system.JDBCUtil.getString(rs_tOracleInput_4, 39, false);
		                    }
					




 



/**
 * [tOracleInput_4 begin ] stop
 */
	
	/**
	 * [tOracleInput_4 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 


	tos_count_tOracleInput_4++;

/**
 * [tOracleInput_4 main ] stop
 */
	
	/**
	 * [tOracleInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_3 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_3 = new StringBuilder();
                            if(row4.TIPO_DOCUMENTO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.TIPO_DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.NUMERO_DOCUMENTO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.NUMERO_DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.PRIMER_APELLIDO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.PRIMER_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.SEGUNDO_APELLIDO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.SEGUNDO_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.PRIMER_NOMBRE != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.PRIMER_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.SEGUNDO_NOMBRE != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.SEGUNDO_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.GENERO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.GENERO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.DISCAPACIDAD != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.DISCAPACIDAD
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.PARENTESCOS != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.PARENTESCOS
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.FECHA_NACIMIENTO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.FECHA_NACIMIENTO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.EDAD != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.EDAD.toPlainString()
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.LOCALIDADES != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.LOCALIDADES
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.DIRECCION != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.DIRECCION
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.BARRIO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.BARRIO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.TELEFONO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.TELEFONO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.EMAIL != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.EMAIL
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.RESIDENCIA_DEPARTAMENTO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.RESIDENCIA_DEPARTAMENTO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.RESIDENCIA_CODIGO_DEPARTAMENTO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.RESIDENCIA_CODIGO_DEPARTAMENTO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.RESIDENCIA_MUNICIPIO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.RESIDENCIA_MUNICIPIO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.RESIDENCIA_CODIGO_MUNICIPIO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.RESIDENCIA_CODIGO_MUNICIPIO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.PLAN_AFILIACIONES != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.PLAN_AFILIACIONES
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.TIPO_AFILIACION != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.TIPO_AFILIACION
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.TIPO_AFILIADO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.TIPO_AFILIADO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.ESTADO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.ESTADO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.FECHA_AFILIACION != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.FECHA_AFILIACION
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.FECHA_REGISTRO_AFILIACION != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.FECHA_REGISTRO_AFILIACION
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.FECHA_INACTIVACION != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.FECHA_INACTIVACION
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.FUERZA != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.FUERZA
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.GRADO_CODIGO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.GRADO_CODIGO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.GRADO_NOMBRE != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.GRADO_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.GRADO_SIGLA != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.GRADO_SIGLA
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.ESM_CODIGO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.ESM_CODIGO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.ESM_NOMBRE != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.ESM_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.ESM_FUERZA != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.ESM_FUERZA
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.ESM_DEPARTAMENTO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.ESM_DEPARTAMENTO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.ESM_CODIGO_DEPARTAMENTO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.ESM_CODIGO_DEPARTAMENTO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.ESM_MUNICIPIO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.ESM_MUNICIPIO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.ESM_CODIGO_MUNICIPIO != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.ESM_CODIGO_MUNICIPIO
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row4.FECHA_DEFUNCION != null) {
                        sb_tFileOutputDelimited_3.append(
                            row4.FECHA_DEFUNCION
                        );
                            }
                    sb_tFileOutputDelimited_3.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_3);


                    nb_line_tFileOutputDelimited_3++;
                    resourceMap.put("nb_line_tFileOutputDelimited_3", nb_line_tFileOutputDelimited_3);

                        outtFileOutputDelimited_3.write(sb_tFileOutputDelimited_3.toString());




 


	tos_count_tFileOutputDelimited_3++;

/**
 * [tFileOutputDelimited_3 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	

 



/**
 * [tFileOutputDelimited_3 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	

 



/**
 * [tFileOutputDelimited_3 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_4 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

}
}finally{
	if (rs_tOracleInput_4 != null) {
		rs_tOracleInput_4.close();
	}
	if (stmt_tOracleInput_4 != null) {
		stmt_tOracleInput_4.close();
	}
}

globalMap.put("tOracleInput_4_NB_LINE",nb_line_tOracleInput_4);
 

ok_Hash.put("tOracleInput_4", true);
end_Hash.put("tOracleInput_4", System.currentTimeMillis());

   			if (((Integer)globalMap.get("tOracleOutput_2_NB_LINE_INSERTED"))> ((Integer)globalMap.get("tOracleInput_4_NB_LINE"))) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If12", 0, "true");
					}
				tOracleInput_2Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If12", 0, "false");
					}   	 
   				}



/**
 * [tOracleInput_4 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_3 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	



		
			
					if(outtFileOutputDelimited_3!=null) {
						outtFileOutputDelimited_3.flush();
						outtFileOutputDelimited_3.close();
					}
				
				globalMap.put("tFileOutputDelimited_3_NB_LINE",nb_line_tFileOutputDelimited_3);
				globalMap.put("tFileOutputDelimited_3_FILE_NAME",fileName_tFileOutputDelimited_3);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_3", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_3", true);
end_Hash.put("tFileOutputDelimited_3", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk13", 0, "ok");
				}
				tFixedFlowInput_2Process(globalMap);



/**
 * [tFileOutputDelimited_3 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_4 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_3 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_3") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_3 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_3");
						if(outtFileOutputDelimited_3!=null) {
							outtFileOutputDelimited_3.flush();
							outtFileOutputDelimited_3.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfout6Struct implements routines.system.IPersistableRow<copyOfcopyOfout6Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public int ESTADO;

				public int getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return false;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 22;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return "1";
				
				}
				public String ESTADOComment(){
				
				    return "Estado del trabajo (1 Activo - 2 Realizado - 3 Fallido - 4 Cancelado)";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String ARCHIVO;

				public String getARCHIVO () {
					return this.ARCHIVO;
				}

				public Boolean ARCHIVOIsNullable(){
				    return false;
				}
				public Boolean ARCHIVOIsKey(){
				    return false;
				}
				public Integer ARCHIVOLength(){
				    return 100;
				}
				public Integer ARCHIVOPrecision(){
				    return 0;
				}
				public String ARCHIVODefault(){
				
					return null;
				
				}
				public String ARCHIVOComment(){
				
				    return "Nombre del archivo";
				
				}
				public String ARCHIVOPattern(){
				
					return "";
				
				}
				public String ARCHIVOOriginalDbColumnName(){
				
					return "ARCHIVO";
				
				}

				
			    public int TARCHIVOS_ID;

				public int getTARCHIVOS_ID () {
					return this.TARCHIVOS_ID;
				}

				public Boolean TARCHIVOS_IDIsNullable(){
				    return false;
				}
				public Boolean TARCHIVOS_IDIsKey(){
				    return false;
				}
				public Integer TARCHIVOS_IDLength(){
				    return 22;
				}
				public Integer TARCHIVOS_IDPrecision(){
				    return 0;
				}
				public String TARCHIVOS_IDDefault(){
				
					return null;
				
				}
				public String TARCHIVOS_IDComment(){
				
				    return "FK - AFI_TARCHIVOS";
				
				}
				public String TARCHIVOS_IDPattern(){
				
					return "";
				
				}
				public String TARCHIVOS_IDOriginalDbColumnName(){
				
					return "TARCHIVOS_ID";
				
				}

				
			    public int USUARIOS_ID;

				public int getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 22;
				}
				public Integer USUARIOS_IDPrecision(){
				    return 0;
				}
				public String USUARIOS_IDDefault(){
				
					return null;
				
				}
				public String USUARIOS_IDComment(){
				
				    return "FK - GEN_USUARIOS (Usuario que subio el archivo)";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public String CODIGO;

				public String getCODIGO () {
					return this.CODIGO;
				}

				public Boolean CODIGOIsNullable(){
				    return false;
				}
				public Boolean CODIGOIsKey(){
				    return false;
				}
				public Integer CODIGOLength(){
				    return 10;
				}
				public Integer CODIGOPrecision(){
				    return 0;
				}
				public String CODIGODefault(){
				
					return null;
				
				}
				public String CODIGOComment(){
				
				    return "Codigo de identificacion del archivo";
				
				}
				public String CODIGOPattern(){
				
					return "";
				
				}
				public String CODIGOOriginalDbColumnName(){
				
					return "CODIGO";
				
				}

				
			    public String ARCHIVOFS;

				public String getARCHIVOFS () {
					return this.ARCHIVOFS;
				}

				public Boolean ARCHIVOFSIsNullable(){
				    return false;
				}
				public Boolean ARCHIVOFSIsKey(){
				    return false;
				}
				public Integer ARCHIVOFSLength(){
				    return 100;
				}
				public Integer ARCHIVOFSPrecision(){
				    return 0;
				}
				public String ARCHIVOFSDefault(){
				
					return null;
				
				}
				public String ARCHIVOFSComment(){
				
				    return "Nombre del archivo en el File System";
				
				}
				public String ARCHIVOFSPattern(){
				
					return "";
				
				}
				public String ARCHIVOFSOriginalDbColumnName(){
				
					return "ARCHIVOFS";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return 7;
				}
				public Integer FECHAPrecision(){
				    return 0;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "Fecha y hora del registro";
				
				}
				public String FECHAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String EXTENSION;

				public String getEXTENSION () {
					return this.EXTENSION;
				}

				public Boolean EXTENSIONIsNullable(){
				    return false;
				}
				public Boolean EXTENSIONIsKey(){
				    return false;
				}
				public Integer EXTENSIONLength(){
				    return 0;
				}
				public Integer EXTENSIONPrecision(){
				    return 0;
				}
				public String EXTENSIONDefault(){
				
					return null;
				
				}
				public String EXTENSIONComment(){
				
				    return "";
				
				}
				public String EXTENSIONPattern(){
				
					return "";
				
				}
				public String EXTENSIONOriginalDbColumnName(){
				
					return "EXTENSION";
				
				}

				
			    public int PADRE_ID;

				public int getPADRE_ID () {
					return this.PADRE_ID;
				}

				public Boolean PADRE_IDIsNullable(){
				    return false;
				}
				public Boolean PADRE_IDIsKey(){
				    return false;
				}
				public Integer PADRE_IDLength(){
				    return 0;
				}
				public Integer PADRE_IDPrecision(){
				    return 0;
				}
				public String PADRE_IDDefault(){
				
					return null;
				
				}
				public String PADRE_IDComment(){
				
				    return "";
				
				}
				public String PADRE_IDPattern(){
				
					return "";
				
				}
				public String PADRE_IDOriginalDbColumnName(){
				
					return "PADRE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
			        this.ESTADO = dis.readInt();
					
					this.ARCHIVO = readString(dis);
					
			        this.TARCHIVOS_ID = dis.readInt();
					
			        this.USUARIOS_ID = dis.readInt();
					
					this.CODIGO = readString(dis);
					
					this.ARCHIVOFS = readString(dis);
					
					this.FECHA = readDate(dis);
					
					this.EXTENSION = readString(dis);
					
			        this.PADRE_ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
			        this.ESTADO = dis.readInt();
					
					this.ARCHIVO = readString(dis);
					
			        this.TARCHIVOS_ID = dis.readInt();
					
			        this.USUARIOS_ID = dis.readInt();
					
					this.CODIGO = readString(dis);
					
					this.ARCHIVOFS = readString(dis);
					
					this.FECHA = readDate(dis);
					
					this.EXTENSION = readString(dis);
					
			        this.PADRE_ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ESTADO);
					
					// String
				
						writeString(this.ARCHIVO,dos);
					
					// int
				
		            	dos.writeInt(this.TARCHIVOS_ID);
					
					// int
				
		            	dos.writeInt(this.USUARIOS_ID);
					
					// String
				
						writeString(this.CODIGO,dos);
					
					// String
				
						writeString(this.ARCHIVOFS,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.EXTENSION,dos);
					
					// int
				
		            	dos.writeInt(this.PADRE_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ESTADO);
					
					// String
				
						writeString(this.ARCHIVO,dos);
					
					// int
				
		            	dos.writeInt(this.TARCHIVOS_ID);
					
					// int
				
		            	dos.writeInt(this.USUARIOS_ID);
					
					// String
				
						writeString(this.CODIGO,dos);
					
					// String
				
						writeString(this.ARCHIVOFS,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.EXTENSION,dos);
					
					// int
				
		            	dos.writeInt(this.PADRE_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ESTADO="+String.valueOf(ESTADO));
		sb.append(",ARCHIVO="+ARCHIVO);
		sb.append(",TARCHIVOS_ID="+String.valueOf(TARCHIVOS_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",CODIGO="+CODIGO);
		sb.append(",ARCHIVOFS="+ARCHIVOFS);
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",EXTENSION="+EXTENSION);
		sb.append(",PADRE_ID="+String.valueOf(PADRE_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfout6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public int ESTADO;

				public int getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return false;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 22;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return "1";
				
				}
				public String ESTADOComment(){
				
				    return "Estado del trabajo (1 Activo - 2 Realizado - 3 Fallido - 4 Cancelado)";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String ARCHIVO;

				public String getARCHIVO () {
					return this.ARCHIVO;
				}

				public Boolean ARCHIVOIsNullable(){
				    return false;
				}
				public Boolean ARCHIVOIsKey(){
				    return false;
				}
				public Integer ARCHIVOLength(){
				    return 100;
				}
				public Integer ARCHIVOPrecision(){
				    return 0;
				}
				public String ARCHIVODefault(){
				
					return null;
				
				}
				public String ARCHIVOComment(){
				
				    return "Nombre del archivo";
				
				}
				public String ARCHIVOPattern(){
				
					return "";
				
				}
				public String ARCHIVOOriginalDbColumnName(){
				
					return "ARCHIVO";
				
				}

				
			    public int TARCHIVOS_ID;

				public int getTARCHIVOS_ID () {
					return this.TARCHIVOS_ID;
				}

				public Boolean TARCHIVOS_IDIsNullable(){
				    return false;
				}
				public Boolean TARCHIVOS_IDIsKey(){
				    return false;
				}
				public Integer TARCHIVOS_IDLength(){
				    return 22;
				}
				public Integer TARCHIVOS_IDPrecision(){
				    return 0;
				}
				public String TARCHIVOS_IDDefault(){
				
					return null;
				
				}
				public String TARCHIVOS_IDComment(){
				
				    return "FK - AFI_TARCHIVOS";
				
				}
				public String TARCHIVOS_IDPattern(){
				
					return "";
				
				}
				public String TARCHIVOS_IDOriginalDbColumnName(){
				
					return "TARCHIVOS_ID";
				
				}

				
			    public int USUARIOS_ID;

				public int getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 22;
				}
				public Integer USUARIOS_IDPrecision(){
				    return 0;
				}
				public String USUARIOS_IDDefault(){
				
					return null;
				
				}
				public String USUARIOS_IDComment(){
				
				    return "FK - GEN_USUARIOS (Usuario que subio el archivo)";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public String CODIGO;

				public String getCODIGO () {
					return this.CODIGO;
				}

				public Boolean CODIGOIsNullable(){
				    return false;
				}
				public Boolean CODIGOIsKey(){
				    return false;
				}
				public Integer CODIGOLength(){
				    return 10;
				}
				public Integer CODIGOPrecision(){
				    return 0;
				}
				public String CODIGODefault(){
				
					return null;
				
				}
				public String CODIGOComment(){
				
				    return "Codigo de identificacion del archivo";
				
				}
				public String CODIGOPattern(){
				
					return "";
				
				}
				public String CODIGOOriginalDbColumnName(){
				
					return "CODIGO";
				
				}

				
			    public String ARCHIVOFS;

				public String getARCHIVOFS () {
					return this.ARCHIVOFS;
				}

				public Boolean ARCHIVOFSIsNullable(){
				    return false;
				}
				public Boolean ARCHIVOFSIsKey(){
				    return false;
				}
				public Integer ARCHIVOFSLength(){
				    return 100;
				}
				public Integer ARCHIVOFSPrecision(){
				    return 0;
				}
				public String ARCHIVOFSDefault(){
				
					return null;
				
				}
				public String ARCHIVOFSComment(){
				
				    return "Nombre del archivo en el File System";
				
				}
				public String ARCHIVOFSPattern(){
				
					return "";
				
				}
				public String ARCHIVOFSOriginalDbColumnName(){
				
					return "ARCHIVOFS";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return 7;
				}
				public Integer FECHAPrecision(){
				    return 0;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "Fecha y hora del registro";
				
				}
				public String FECHAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String EXTENSION;

				public String getEXTENSION () {
					return this.EXTENSION;
				}

				public Boolean EXTENSIONIsNullable(){
				    return false;
				}
				public Boolean EXTENSIONIsKey(){
				    return false;
				}
				public Integer EXTENSIONLength(){
				    return 0;
				}
				public Integer EXTENSIONPrecision(){
				    return 0;
				}
				public String EXTENSIONDefault(){
				
					return null;
				
				}
				public String EXTENSIONComment(){
				
				    return "";
				
				}
				public String EXTENSIONPattern(){
				
					return "";
				
				}
				public String EXTENSIONOriginalDbColumnName(){
				
					return "EXTENSION";
				
				}

				
			    public int PADRE_ID;

				public int getPADRE_ID () {
					return this.PADRE_ID;
				}

				public Boolean PADRE_IDIsNullable(){
				    return false;
				}
				public Boolean PADRE_IDIsKey(){
				    return false;
				}
				public Integer PADRE_IDLength(){
				    return 0;
				}
				public Integer PADRE_IDPrecision(){
				    return 0;
				}
				public String PADRE_IDDefault(){
				
					return null;
				
				}
				public String PADRE_IDComment(){
				
				    return "";
				
				}
				public String PADRE_IDPattern(){
				
					return "";
				
				}
				public String PADRE_IDOriginalDbColumnName(){
				
					return "PADRE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
			        this.ESTADO = dis.readInt();
					
					this.ARCHIVO = readString(dis);
					
			        this.TARCHIVOS_ID = dis.readInt();
					
			        this.USUARIOS_ID = dis.readInt();
					
					this.CODIGO = readString(dis);
					
					this.ARCHIVOFS = readString(dis);
					
					this.FECHA = readDate(dis);
					
					this.EXTENSION = readString(dis);
					
			        this.PADRE_ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
			        this.ESTADO = dis.readInt();
					
					this.ARCHIVO = readString(dis);
					
			        this.TARCHIVOS_ID = dis.readInt();
					
			        this.USUARIOS_ID = dis.readInt();
					
					this.CODIGO = readString(dis);
					
					this.ARCHIVOFS = readString(dis);
					
					this.FECHA = readDate(dis);
					
					this.EXTENSION = readString(dis);
					
			        this.PADRE_ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ESTADO);
					
					// String
				
						writeString(this.ARCHIVO,dos);
					
					// int
				
		            	dos.writeInt(this.TARCHIVOS_ID);
					
					// int
				
		            	dos.writeInt(this.USUARIOS_ID);
					
					// String
				
						writeString(this.CODIGO,dos);
					
					// String
				
						writeString(this.ARCHIVOFS,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.EXTENSION,dos);
					
					// int
				
		            	dos.writeInt(this.PADRE_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ESTADO);
					
					// String
				
						writeString(this.ARCHIVO,dos);
					
					// int
				
		            	dos.writeInt(this.TARCHIVOS_ID);
					
					// int
				
		            	dos.writeInt(this.USUARIOS_ID);
					
					// String
				
						writeString(this.CODIGO,dos);
					
					// String
				
						writeString(this.ARCHIVOFS,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.EXTENSION,dos);
					
					// int
				
		            	dos.writeInt(this.PADRE_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ESTADO="+String.valueOf(ESTADO));
		sb.append(",ARCHIVO="+ARCHIVO);
		sb.append(",TARCHIVOS_ID="+String.valueOf(TARCHIVOS_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",CODIGO="+CODIGO);
		sb.append(",ARCHIVOFS="+ARCHIVOFS);
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",EXTENSION="+EXTENSION);
		sb.append(",PADRE_ID="+String.valueOf(PADRE_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tFixedFlowInput_2Struct implements routines.system.IPersistableRow<after_tFixedFlowInput_2Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public int ESTADO;

				public int getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return false;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 22;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return "1";
				
				}
				public String ESTADOComment(){
				
				    return "Estado del trabajo (1 Activo - 2 Realizado - 3 Fallido - 4 Cancelado)";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String ARCHIVO;

				public String getARCHIVO () {
					return this.ARCHIVO;
				}

				public Boolean ARCHIVOIsNullable(){
				    return false;
				}
				public Boolean ARCHIVOIsKey(){
				    return false;
				}
				public Integer ARCHIVOLength(){
				    return 100;
				}
				public Integer ARCHIVOPrecision(){
				    return 0;
				}
				public String ARCHIVODefault(){
				
					return null;
				
				}
				public String ARCHIVOComment(){
				
				    return "Nombre del archivo";
				
				}
				public String ARCHIVOPattern(){
				
					return "";
				
				}
				public String ARCHIVOOriginalDbColumnName(){
				
					return "ARCHIVO";
				
				}

				
			    public int TARCHIVOS_ID;

				public int getTARCHIVOS_ID () {
					return this.TARCHIVOS_ID;
				}

				public Boolean TARCHIVOS_IDIsNullable(){
				    return false;
				}
				public Boolean TARCHIVOS_IDIsKey(){
				    return false;
				}
				public Integer TARCHIVOS_IDLength(){
				    return 22;
				}
				public Integer TARCHIVOS_IDPrecision(){
				    return 0;
				}
				public String TARCHIVOS_IDDefault(){
				
					return null;
				
				}
				public String TARCHIVOS_IDComment(){
				
				    return "FK - AFI_TARCHIVOS";
				
				}
				public String TARCHIVOS_IDPattern(){
				
					return "";
				
				}
				public String TARCHIVOS_IDOriginalDbColumnName(){
				
					return "TARCHIVOS_ID";
				
				}

				
			    public int USUARIOS_ID;

				public int getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 22;
				}
				public Integer USUARIOS_IDPrecision(){
				    return 0;
				}
				public String USUARIOS_IDDefault(){
				
					return null;
				
				}
				public String USUARIOS_IDComment(){
				
				    return "FK - GEN_USUARIOS (Usuario que subio el archivo)";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public String CODIGO;

				public String getCODIGO () {
					return this.CODIGO;
				}

				public Boolean CODIGOIsNullable(){
				    return false;
				}
				public Boolean CODIGOIsKey(){
				    return false;
				}
				public Integer CODIGOLength(){
				    return 10;
				}
				public Integer CODIGOPrecision(){
				    return 0;
				}
				public String CODIGODefault(){
				
					return null;
				
				}
				public String CODIGOComment(){
				
				    return "Codigo de identificacion del archivo";
				
				}
				public String CODIGOPattern(){
				
					return "";
				
				}
				public String CODIGOOriginalDbColumnName(){
				
					return "CODIGO";
				
				}

				
			    public String ARCHIVOFS;

				public String getARCHIVOFS () {
					return this.ARCHIVOFS;
				}

				public Boolean ARCHIVOFSIsNullable(){
				    return false;
				}
				public Boolean ARCHIVOFSIsKey(){
				    return false;
				}
				public Integer ARCHIVOFSLength(){
				    return 100;
				}
				public Integer ARCHIVOFSPrecision(){
				    return 0;
				}
				public String ARCHIVOFSDefault(){
				
					return null;
				
				}
				public String ARCHIVOFSComment(){
				
				    return "Nombre del archivo en el File System";
				
				}
				public String ARCHIVOFSPattern(){
				
					return "";
				
				}
				public String ARCHIVOFSOriginalDbColumnName(){
				
					return "ARCHIVOFS";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return 7;
				}
				public Integer FECHAPrecision(){
				    return 0;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "Fecha y hora del registro";
				
				}
				public String FECHAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String EXTENSION;

				public String getEXTENSION () {
					return this.EXTENSION;
				}

				public Boolean EXTENSIONIsNullable(){
				    return false;
				}
				public Boolean EXTENSIONIsKey(){
				    return false;
				}
				public Integer EXTENSIONLength(){
				    return 0;
				}
				public Integer EXTENSIONPrecision(){
				    return 0;
				}
				public String EXTENSIONDefault(){
				
					return null;
				
				}
				public String EXTENSIONComment(){
				
				    return "";
				
				}
				public String EXTENSIONPattern(){
				
					return "";
				
				}
				public String EXTENSIONOriginalDbColumnName(){
				
					return "EXTENSION";
				
				}

				
			    public int PADRE_ID;

				public int getPADRE_ID () {
					return this.PADRE_ID;
				}

				public Boolean PADRE_IDIsNullable(){
				    return false;
				}
				public Boolean PADRE_IDIsKey(){
				    return false;
				}
				public Integer PADRE_IDLength(){
				    return 0;
				}
				public Integer PADRE_IDPrecision(){
				    return 0;
				}
				public String PADRE_IDDefault(){
				
					return null;
				
				}
				public String PADRE_IDComment(){
				
				    return "";
				
				}
				public String PADRE_IDPattern(){
				
					return "";
				
				}
				public String PADRE_IDOriginalDbColumnName(){
				
					return "PADRE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
			        this.ESTADO = dis.readInt();
					
					this.ARCHIVO = readString(dis);
					
			        this.TARCHIVOS_ID = dis.readInt();
					
			        this.USUARIOS_ID = dis.readInt();
					
					this.CODIGO = readString(dis);
					
					this.ARCHIVOFS = readString(dis);
					
					this.FECHA = readDate(dis);
					
					this.EXTENSION = readString(dis);
					
			        this.PADRE_ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
			        this.ESTADO = dis.readInt();
					
					this.ARCHIVO = readString(dis);
					
			        this.TARCHIVOS_ID = dis.readInt();
					
			        this.USUARIOS_ID = dis.readInt();
					
					this.CODIGO = readString(dis);
					
					this.ARCHIVOFS = readString(dis);
					
					this.FECHA = readDate(dis);
					
					this.EXTENSION = readString(dis);
					
			        this.PADRE_ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ESTADO);
					
					// String
				
						writeString(this.ARCHIVO,dos);
					
					// int
				
		            	dos.writeInt(this.TARCHIVOS_ID);
					
					// int
				
		            	dos.writeInt(this.USUARIOS_ID);
					
					// String
				
						writeString(this.CODIGO,dos);
					
					// String
				
						writeString(this.ARCHIVOFS,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.EXTENSION,dos);
					
					// int
				
		            	dos.writeInt(this.PADRE_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ESTADO);
					
					// String
				
						writeString(this.ARCHIVO,dos);
					
					// int
				
		            	dos.writeInt(this.TARCHIVOS_ID);
					
					// int
				
		            	dos.writeInt(this.USUARIOS_ID);
					
					// String
				
						writeString(this.CODIGO,dos);
					
					// String
				
						writeString(this.ARCHIVOFS,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.EXTENSION,dos);
					
					// int
				
		            	dos.writeInt(this.PADRE_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ESTADO="+String.valueOf(ESTADO));
		sb.append(",ARCHIVO="+ARCHIVO);
		sb.append(",TARCHIVOS_ID="+String.valueOf(TARCHIVOS_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",CODIGO="+CODIGO);
		sb.append(",ARCHIVOFS="+ARCHIVOFS);
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",EXTENSION="+EXTENSION);
		sb.append(",PADRE_ID="+String.valueOf(PADRE_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tFixedFlowInput_2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tOracleInput_3Process(globalMap);

		row6Struct row6 = new row6Struct();
copyOfcopyOfout6Struct copyOfcopyOfout6 = new copyOfcopyOfout6Struct();





	
	/**
	 * [tOracleOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_4", false);
		start_Hash.put("tOracleOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfout6");
					}
				
		int tos_count_tOracleOutput_4 = 0;
		






    
    int nb_line_tOracleOutput_4 = 0;
    int nb_line_update_tOracleOutput_4 = 0;
    int nb_line_inserted_tOracleOutput_4 = 0;
    int nb_line_deleted_tOracleOutput_4 = 0;
    int nb_line_rejected_tOracleOutput_4 = 0;

    int tmp_batchUpdateCount_tOracleOutput_4 = 0;

    int deletedCount_tOracleOutput_4=0;
    int updatedCount_tOracleOutput_4=0;
    int insertedCount_tOracleOutput_4=0;
    int rowsToCommitCount_tOracleOutput_4=0;
    int rejectedCount_tOracleOutput_4=0;

    boolean whetherReject_tOracleOutput_4 = false;

    java.sql.Connection conn_tOracleOutput_4 = null;

    //optional table
    String dbschema_tOracleOutput_4 = null;
    String tableName_tOracleOutput_4 = null;
        dbschema_tOracleOutput_4 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_4 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_4=0;

        if(dbschema_tOracleOutput_4 == null || dbschema_tOracleOutput_4.trim().length() == 0) {
            tableName_tOracleOutput_4 = ("AFI_ARCHIVOS");
        } else {
            tableName_tOracleOutput_4 = dbschema_tOracleOutput_4 + "." + ("AFI_ARCHIVOS");
        }
                String insert_tOracleOutput_4 = "INSERT INTO " + tableName_tOracleOutput_4 + " (ESTADO,ARCHIVO,TARCHIVOS_ID,USUARIOS_ID,CODIGO,ARCHIVOFS,FECHA,EXTENSION,PADRE_ID) VALUES (?,?,?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_4 = conn_tOracleOutput_4.prepareStatement(insert_tOracleOutput_4);
                        resourceMap.put("pstmt_tOracleOutput_4", pstmt_tOracleOutput_4);





 



/**
 * [tOracleOutput_4 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct> tHash_Lookup_row7 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct>) 
					globalMap.get( "tHash_Lookup_row7" ))
					;					
					
	

row7Struct row7HashKey = new row7Struct();
row7Struct row7Default = new row7Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfout6Struct copyOfcopyOfout6_tmp = new copyOfcopyOfout6Struct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_2", false);
		start_Hash.put("tFixedFlowInput_2", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_2";
	
	
		int tos_count_tFixedFlowInput_2 = 0;
		

	    for (int i_tFixedFlowInput_2 = 0 ; i_tFixedFlowInput_2 < 1 ; i_tFixedFlowInput_2++) {
	                	            	
    	            		row6.ESTADO = context.estArchivoProcesado;
    	            	        	            	
    	            		row6.ARCHIVO = "ENTES TERRITORIALES GENERADO "+context.idProceso;
    	            	        	            	
    	            		row6.TARCHIVOS_ID = context.tipoArchivoEntesGenerado;
    	            	        	            	
    	            		row6.USUARIOS_ID = context.infoUsuarioIdArchivo;
    	            	        	            	
    	            		row6.CODIGO = "AFI_" + context.tipoArchivoEntesGenerado + "_"+context.infoUsuarioIdArchivo;
    	            	        	            	
    	            		row6.ARCHIVOFS = context.archivoSalida+".CSV";
    	            	        	            	
    	            		row6.FECHA = TalendDate.getCurrentDate();
    	            	        	            	
    	            		row6.EXTENSION = "CSV";
    	            	        	            	
    	            		row6.PADRE_ID = context.infoIdArchivo;
    	            	

 



/**
 * [tFixedFlowInput_2 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 


	tos_count_tFixedFlowInput_2++;

/**
 * [tFixedFlowInput_2 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
						row7Struct row7 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row7" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow7 = false;
       		  	    	
       		  	    	
 							row7Struct row7ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row7HashKey.CODIGO = row6.TARCHIVOS_ID ;
                        		    		

								
		                        	row7HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row7.lookup( row7HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row7 != null && tHash_Lookup_row7.getCount(row7HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row7' and it contains more one result from keys :  row7.CODIGO = '" + row7HashKey.CODIGO + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row7Struct fromLookup_row7 = null;
							row7 = row7Default;
										 
							
								 
							
							
								if (tHash_Lookup_row7 !=null && tHash_Lookup_row7.hasNext()) { // G 099
								
							
								
								fromLookup_row7 = tHash_Lookup_row7.next();

							
							
								} // G 099
							
							

							if(fromLookup_row7 != null) {
								row7 = fromLookup_row7;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfout6 = null;


// # Output table : 'copyOfcopyOfout6'
copyOfcopyOfout6_tmp.ESTADO = row6.ESTADO;
copyOfcopyOfout6_tmp.ARCHIVO = row6.ARCHIVO;
copyOfcopyOfout6_tmp.TARCHIVOS_ID = row7.ID;
copyOfcopyOfout6_tmp.USUARIOS_ID = row6.USUARIOS_ID ;
copyOfcopyOfout6_tmp.CODIGO = row6.CODIGO ;
copyOfcopyOfout6_tmp.ARCHIVOFS = row6.ARCHIVOFS ;
copyOfcopyOfout6_tmp.FECHA = row6.FECHA ;
copyOfcopyOfout6_tmp.EXTENSION = row6.EXTENSION ;
copyOfcopyOfout6_tmp.PADRE_ID = row6.PADRE_ID ;
copyOfcopyOfout6 = copyOfcopyOfout6_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfout6"
if(copyOfcopyOfout6 != null) { 



	
	/**
	 * [tOracleOutput_4 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfcopyOfout6"
						
						);
					}
					



        whetherReject_tOracleOutput_4 = false;
                        pstmt_tOracleOutput_4.setInt(1, copyOfcopyOfout6.ESTADO);

                        if(copyOfcopyOfout6.ARCHIVO == null) {
pstmt_tOracleOutput_4.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_4.setString(2, copyOfcopyOfout6.ARCHIVO);
}

                        pstmt_tOracleOutput_4.setInt(3, copyOfcopyOfout6.TARCHIVOS_ID);

                        pstmt_tOracleOutput_4.setInt(4, copyOfcopyOfout6.USUARIOS_ID);

                        if(copyOfcopyOfout6.CODIGO == null) {
pstmt_tOracleOutput_4.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_4.setString(5, copyOfcopyOfout6.CODIGO);
}

                        if(copyOfcopyOfout6.ARCHIVOFS == null) {
pstmt_tOracleOutput_4.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_4.setString(6, copyOfcopyOfout6.ARCHIVOFS);
}

                        if(copyOfcopyOfout6.FECHA != null) {
pstmt_tOracleOutput_4.setObject(7, new java.sql.Timestamp(copyOfcopyOfout6.FECHA.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_4.setNull(7, java.sql.Types.DATE);
}

                        if(copyOfcopyOfout6.EXTENSION == null) {
pstmt_tOracleOutput_4.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_4.setString(8, copyOfcopyOfout6.EXTENSION);
}

                        pstmt_tOracleOutput_4.setInt(9, copyOfcopyOfout6.PADRE_ID);

                try {
                    nb_line_tOracleOutput_4++;
                    int processedCount_tOracleOutput_4 = pstmt_tOracleOutput_4.executeUpdate();
                    insertedCount_tOracleOutput_4 += processedCount_tOracleOutput_4;
                    rowsToCommitCount_tOracleOutput_4 += processedCount_tOracleOutput_4;
                } catch(java.lang.Exception e_tOracleOutput_4) {
globalMap.put("tOracleOutput_4_ERROR_MESSAGE",e_tOracleOutput_4.getMessage());
                    whetherReject_tOracleOutput_4 = true;
                            System.err.print(e_tOracleOutput_4.getMessage());
                }

 


	tos_count_tOracleOutput_4++;

/**
 * [tOracleOutput_4 main ] stop
 */
	
	/**
	 * [tOracleOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	

 



/**
 * [tOracleOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	

 



/**
 * [tOracleOutput_4 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfout6"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

        }
        globalMap.put("tFixedFlowInput_2_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_2", true);
end_Hash.put("tFixedFlowInput_2", System.currentTimeMillis());




/**
 * [tFixedFlowInput_2 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row7 != null) {
						tHash_Lookup_row7.endGet();
					}
					globalMap.remove( "tHash_Lookup_row7" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tOracleOutput_4 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	
	



	
        if(pstmt_tOracleOutput_4 != null) {
			
				pstmt_tOracleOutput_4.close();
				resourceMap.remove("pstmt_tOracleOutput_4");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_4", true);

	
	nb_line_deleted_tOracleOutput_4=nb_line_deleted_tOracleOutput_4+ deletedCount_tOracleOutput_4;
	nb_line_update_tOracleOutput_4=nb_line_update_tOracleOutput_4 + updatedCount_tOracleOutput_4;
	nb_line_inserted_tOracleOutput_4=nb_line_inserted_tOracleOutput_4 + insertedCount_tOracleOutput_4;
	nb_line_rejected_tOracleOutput_4=nb_line_rejected_tOracleOutput_4 + rejectedCount_tOracleOutput_4;
	
        globalMap.put("tOracleOutput_4_NB_LINE",nb_line_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_UPDATED",nb_line_update_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_4);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfout6");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_4", true);
end_Hash.put("tOracleOutput_4", System.currentTimeMillis());




/**
 * [tOracleOutput_4 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row7"); 
				     			
				try{
					
	
	/**
	 * [tFixedFlowInput_2 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tOracleOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_4") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_4 = null;
                if ((pstmtToClose_tOracleOutput_4 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_4")) != null) {
                    pstmtToClose_tOracleOutput_4.close();
                }
    }
 



/**
 * [tOracleOutput_4 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public String TDOCUMENTOS;

				public String getTDOCUMENTOS () {
					return this.TDOCUMENTOS;
				}

				public Boolean TDOCUMENTOSIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOSIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOSLength(){
				    return null;
				}
				public Integer TDOCUMENTOSPrecision(){
				    return null;
				}
				public String TDOCUMENTOSDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOSComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOSPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOSOriginalDbColumnName(){
				
					return "TDOCUMENTOS";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return null;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return null;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return null;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return null;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return null;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return null;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return null;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return null;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return null;
				}
				public Integer ERRORPrecision(){
				    return null;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TDOCUMENTOS = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TDOCUMENTOS = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TDOCUMENTOS,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TDOCUMENTOS,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS="+TDOCUMENTOS);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row3Struct row3 = new row3Struct();




	
	/**
	 * [tFileOutputDelimited_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_2", false);
		start_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tFileOutputDelimited_2 = 0;
		

String fileName_tFileOutputDelimited_2 = "";
    fileName_tFileOutputDelimited_2 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+"ERRORES_"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_2 = null;
    String extension_tFileOutputDelimited_2 = null;
    String directory_tFileOutputDelimited_2 = null;
    if((fileName_tFileOutputDelimited_2.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") < fileName_tFileOutputDelimited_2.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        }
        directory_tFileOutputDelimited_2 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_2 = true;
    java.io.File filetFileOutputDelimited_2 = new java.io.File(fileName_tFileOutputDelimited_2);
    globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
        if(filetFileOutputDelimited_2.exists()){
            isFileGenerated_tFileOutputDelimited_2 = false;
        }
            int nb_line_tFileOutputDelimited_2 = 0;
            int splitedFileNo_tFileOutputDelimited_2 = 0;
            int currentRow_tFileOutputDelimited_2 = 0;

            final String OUT_DELIM_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_2:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_2:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_2 != null && directory_tFileOutputDelimited_2.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_2 = new java.io.File(directory_tFileOutputDelimited_2);
                        if(!dir_tFileOutputDelimited_2.exists()) {
                            dir_tFileOutputDelimited_2.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_2 = null;

                        outtFileOutputDelimited_2 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_2, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_2", outtFileOutputDelimited_2);
                                    if(filetFileOutputDelimited_2.length()==0){
                                        outtFileOutputDelimited_2.write("TDOCUMENTOS");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("DOCUMENTO");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("PRIMER_NOMBRE");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("SEGUNDO_NOMBRE");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("PRIMER_APELLIDO");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("SEGUNDO_APELLIDO");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("ERROR");
                                        outtFileOutputDelimited_2.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

 



/**
 * [tFileOutputDelimited_2 begin ] stop
 */



	
	/**
	 * [tOracleInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_2", false);
		start_Hash.put("tOracleInput_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_2";
	
	
		int tos_count_tOracleInput_2 = 0;
		
	


	
		    int nb_line_tOracleInput_2 = 0;
		    java.sql.Connection conn_tOracleInput_2 = null;
				conn_tOracleInput_2 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_2 = false;
				boolean isConnectionWrapped_tOracleInput_2 = !(conn_tOracleInput_2 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_2.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_2 = null;
                if (isConnectionWrapped_tOracleInput_2) {
					unwrappedOraConn_tOracleInput_2 = conn_tOracleInput_2.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_2 != null) {
                        isTimeZoneNull_tOracleInput_2 = (unwrappedOraConn_tOracleInput_2.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_2 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_2).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_2) {
					java.sql.Statement stmtGetTZ_tOracleInput_2 = conn_tOracleInput_2.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_2 = stmtGetTZ_tOracleInput_2.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_2 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_2.next()) {
						sessionTimezone_tOracleInput_2 = rsGetTZ_tOracleInput_2.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_2 && unwrappedOraConn_tOracleInput_2 != null) {
                        unwrappedOraConn_tOracleInput_2.setSessionTimeZone(sessionTimezone_tOracleInput_2);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_2).setSessionTimeZone(sessionTimezone_tOracleInput_2);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_2 = conn_tOracleInput_2.createStatement();

		    String dbquery_tOracleInput_2 = "SELECT\nCA.TDOCUMENTOS,\nCA.DOCUMENTO,\nCA.PRIMER_NOMBRE,\nCA.SEGUNDO_APELLIDO,\nCA.PRIMER_APELLIDO,\nCA.SEGUNDO_APELLI"
+"DO,\n'NO ENCOTRADO' AS ERROR\nFROM AFI_CARCHIVOS CA\nWHERE NOT EXISTS(SELECT * FROM VM_PERSONAS VP \n                WHE"
+"RE CA.DOCUMENTO = VP.DOCUMENTO AND  \n                      TRIM(UPPER(CA.TDOCUMENTOS)) = TRIM(UPPER(VP.TIPO_DOCUMENTO))"
+"AND \n                      TRIM(UPPER(CA.PRIMER_NOMBRE)) = TRIM(UPPER(VP.PRIMER_NOMBRE)) AND \n                      TR"
+"IM(UPPER(CA.PRIMER_APELLIDO)) = TRIM(UPPER(VP.PRIMER_APELLIDO))) AND CA.ARCHIVOS_ID = " + context.infoIdArchivo;
		    

		    globalMap.put("tOracleInput_2_QUERY",dbquery_tOracleInput_2);

		    java.sql.ResultSet rs_tOracleInput_2 = null;

		    try {
		    	rs_tOracleInput_2 = stmt_tOracleInput_2.executeQuery(dbquery_tOracleInput_2);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_2 = rs_tOracleInput_2.getMetaData();
		    	int colQtyInRs_tOracleInput_2 = rsmd_tOracleInput_2.getColumnCount();

		    String tmpContent_tOracleInput_2 = null;
		    
		    
		    while (rs_tOracleInput_2.next()) {
		        nb_line_tOracleInput_2++;
		        
							if(colQtyInRs_tOracleInput_2 < 1) {
								row3.TDOCUMENTOS = null;
							} else {
	                         		
        	row3.TDOCUMENTOS = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_2 < 2) {
								row3.DOCUMENTO = null;
							} else {
	                         		
        	row3.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_2 < 3) {
								row3.PRIMER_NOMBRE = null;
							} else {
	                         		
        	row3.PRIMER_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_2 < 4) {
								row3.SEGUNDO_NOMBRE = null;
							} else {
	                         		
        	row3.SEGUNDO_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_2 < 5) {
								row3.PRIMER_APELLIDO = null;
							} else {
	                         		
        	row3.PRIMER_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_2 < 6) {
								row3.SEGUNDO_APELLIDO = null;
							} else {
	                         		
        	row3.SEGUNDO_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_2 < 7) {
								row3.ERROR = null;
							} else {
	                         		
        	row3.ERROR = routines.system.JDBCUtil.getString(rs_tOracleInput_2, 7, false);
		                    }
					




 



/**
 * [tOracleInput_2 begin ] stop
 */
	
	/**
	 * [tOracleInput_2 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 


	tos_count_tOracleInput_2++;

/**
 * [tOracleInput_2 main ] stop
 */
	
	/**
	 * [tOracleInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_2 = new StringBuilder();
                            if(row3.TDOCUMENTOS != null) {
                        sb_tFileOutputDelimited_2.append(
                            row3.TDOCUMENTOS
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row3.DOCUMENTO != null) {
                        sb_tFileOutputDelimited_2.append(
                            row3.DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row3.PRIMER_NOMBRE != null) {
                        sb_tFileOutputDelimited_2.append(
                            row3.PRIMER_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row3.SEGUNDO_NOMBRE != null) {
                        sb_tFileOutputDelimited_2.append(
                            row3.SEGUNDO_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row3.PRIMER_APELLIDO != null) {
                        sb_tFileOutputDelimited_2.append(
                            row3.PRIMER_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row3.SEGUNDO_APELLIDO != null) {
                        sb_tFileOutputDelimited_2.append(
                            row3.SEGUNDO_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row3.ERROR != null) {
                        sb_tFileOutputDelimited_2.append(
                            row3.ERROR
                        );
                            }
                    sb_tFileOutputDelimited_2.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);


                    nb_line_tFileOutputDelimited_2++;
                    resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

                        outtFileOutputDelimited_2.write(sb_tFileOutputDelimited_2.toString());




 


	tos_count_tFileOutputDelimited_2++;

/**
 * [tFileOutputDelimited_2 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_2 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

}
}finally{
	if (rs_tOracleInput_2 != null) {
		rs_tOracleInput_2.close();
	}
	if (stmt_tOracleInput_2 != null) {
		stmt_tOracleInput_2.close();
	}
}

globalMap.put("tOracleInput_2_NB_LINE",nb_line_tOracleInput_2);
 

ok_Hash.put("tOracleInput_2", true);
end_Hash.put("tOracleInput_2", System.currentTimeMillis());




/**
 * [tOracleInput_2 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	



		
			
					if(outtFileOutputDelimited_2!=null) {
						outtFileOutputDelimited_2.flush();
						outtFileOutputDelimited_2.close();
					}
				
				globalMap.put("tFileOutputDelimited_2_NB_LINE",nb_line_tFileOutputDelimited_2);
				globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_2", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_2", true);
end_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk12", 0, "ok");
				}
				tFixedFlowInput_1Process(globalMap);



/**
 * [tFileOutputDelimited_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_2") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_2 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_2");
						if(outtFileOutputDelimited_2!=null) {
							outtFileOutputDelimited_2.flush();
							outtFileOutputDelimited_2.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfcopyOfout6Struct implements routines.system.IPersistableRow<copyOfcopyOfcopyOfout6Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public int ESTADO;

				public int getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return false;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 22;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return "1";
				
				}
				public String ESTADOComment(){
				
				    return "Estado del trabajo (1 Activo - 2 Realizado - 3 Fallido - 4 Cancelado)";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String ARCHIVO;

				public String getARCHIVO () {
					return this.ARCHIVO;
				}

				public Boolean ARCHIVOIsNullable(){
				    return false;
				}
				public Boolean ARCHIVOIsKey(){
				    return false;
				}
				public Integer ARCHIVOLength(){
				    return 100;
				}
				public Integer ARCHIVOPrecision(){
				    return 0;
				}
				public String ARCHIVODefault(){
				
					return null;
				
				}
				public String ARCHIVOComment(){
				
				    return "Nombre del archivo";
				
				}
				public String ARCHIVOPattern(){
				
					return "";
				
				}
				public String ARCHIVOOriginalDbColumnName(){
				
					return "ARCHIVO";
				
				}

				
			    public int TARCHIVOS_ID;

				public int getTARCHIVOS_ID () {
					return this.TARCHIVOS_ID;
				}

				public Boolean TARCHIVOS_IDIsNullable(){
				    return false;
				}
				public Boolean TARCHIVOS_IDIsKey(){
				    return false;
				}
				public Integer TARCHIVOS_IDLength(){
				    return 22;
				}
				public Integer TARCHIVOS_IDPrecision(){
				    return 0;
				}
				public String TARCHIVOS_IDDefault(){
				
					return null;
				
				}
				public String TARCHIVOS_IDComment(){
				
				    return "FK - AFI_TARCHIVOS";
				
				}
				public String TARCHIVOS_IDPattern(){
				
					return "";
				
				}
				public String TARCHIVOS_IDOriginalDbColumnName(){
				
					return "TARCHIVOS_ID";
				
				}

				
			    public int USUARIOS_ID;

				public int getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 22;
				}
				public Integer USUARIOS_IDPrecision(){
				    return 0;
				}
				public String USUARIOS_IDDefault(){
				
					return null;
				
				}
				public String USUARIOS_IDComment(){
				
				    return "FK - GEN_USUARIOS (Usuario que subio el archivo)";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public String CODIGO;

				public String getCODIGO () {
					return this.CODIGO;
				}

				public Boolean CODIGOIsNullable(){
				    return false;
				}
				public Boolean CODIGOIsKey(){
				    return false;
				}
				public Integer CODIGOLength(){
				    return 10;
				}
				public Integer CODIGOPrecision(){
				    return 0;
				}
				public String CODIGODefault(){
				
					return null;
				
				}
				public String CODIGOComment(){
				
				    return "Codigo de identificacion del archivo";
				
				}
				public String CODIGOPattern(){
				
					return "";
				
				}
				public String CODIGOOriginalDbColumnName(){
				
					return "CODIGO";
				
				}

				
			    public String ARCHIVOFS;

				public String getARCHIVOFS () {
					return this.ARCHIVOFS;
				}

				public Boolean ARCHIVOFSIsNullable(){
				    return false;
				}
				public Boolean ARCHIVOFSIsKey(){
				    return false;
				}
				public Integer ARCHIVOFSLength(){
				    return 100;
				}
				public Integer ARCHIVOFSPrecision(){
				    return 0;
				}
				public String ARCHIVOFSDefault(){
				
					return null;
				
				}
				public String ARCHIVOFSComment(){
				
				    return "Nombre del archivo en el File System";
				
				}
				public String ARCHIVOFSPattern(){
				
					return "";
				
				}
				public String ARCHIVOFSOriginalDbColumnName(){
				
					return "ARCHIVOFS";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return 7;
				}
				public Integer FECHAPrecision(){
				    return 0;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "Fecha y hora del registro";
				
				}
				public String FECHAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String EXTENSION;

				public String getEXTENSION () {
					return this.EXTENSION;
				}

				public Boolean EXTENSIONIsNullable(){
				    return false;
				}
				public Boolean EXTENSIONIsKey(){
				    return false;
				}
				public Integer EXTENSIONLength(){
				    return 0;
				}
				public Integer EXTENSIONPrecision(){
				    return 0;
				}
				public String EXTENSIONDefault(){
				
					return null;
				
				}
				public String EXTENSIONComment(){
				
				    return "";
				
				}
				public String EXTENSIONPattern(){
				
					return "";
				
				}
				public String EXTENSIONOriginalDbColumnName(){
				
					return "EXTENSION";
				
				}

				
			    public int PADRE_ID;

				public int getPADRE_ID () {
					return this.PADRE_ID;
				}

				public Boolean PADRE_IDIsNullable(){
				    return false;
				}
				public Boolean PADRE_IDIsKey(){
				    return false;
				}
				public Integer PADRE_IDLength(){
				    return 0;
				}
				public Integer PADRE_IDPrecision(){
				    return 0;
				}
				public String PADRE_IDDefault(){
				
					return null;
				
				}
				public String PADRE_IDComment(){
				
				    return "";
				
				}
				public String PADRE_IDPattern(){
				
					return "";
				
				}
				public String PADRE_IDOriginalDbColumnName(){
				
					return "PADRE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
			        this.ESTADO = dis.readInt();
					
					this.ARCHIVO = readString(dis);
					
			        this.TARCHIVOS_ID = dis.readInt();
					
			        this.USUARIOS_ID = dis.readInt();
					
					this.CODIGO = readString(dis);
					
					this.ARCHIVOFS = readString(dis);
					
					this.FECHA = readDate(dis);
					
					this.EXTENSION = readString(dis);
					
			        this.PADRE_ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
			        this.ESTADO = dis.readInt();
					
					this.ARCHIVO = readString(dis);
					
			        this.TARCHIVOS_ID = dis.readInt();
					
			        this.USUARIOS_ID = dis.readInt();
					
					this.CODIGO = readString(dis);
					
					this.ARCHIVOFS = readString(dis);
					
					this.FECHA = readDate(dis);
					
					this.EXTENSION = readString(dis);
					
			        this.PADRE_ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ESTADO);
					
					// String
				
						writeString(this.ARCHIVO,dos);
					
					// int
				
		            	dos.writeInt(this.TARCHIVOS_ID);
					
					// int
				
		            	dos.writeInt(this.USUARIOS_ID);
					
					// String
				
						writeString(this.CODIGO,dos);
					
					// String
				
						writeString(this.ARCHIVOFS,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.EXTENSION,dos);
					
					// int
				
		            	dos.writeInt(this.PADRE_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ESTADO);
					
					// String
				
						writeString(this.ARCHIVO,dos);
					
					// int
				
		            	dos.writeInt(this.TARCHIVOS_ID);
					
					// int
				
		            	dos.writeInt(this.USUARIOS_ID);
					
					// String
				
						writeString(this.CODIGO,dos);
					
					// String
				
						writeString(this.ARCHIVOFS,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.EXTENSION,dos);
					
					// int
				
		            	dos.writeInt(this.PADRE_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ESTADO="+String.valueOf(ESTADO));
		sb.append(",ARCHIVO="+ARCHIVO);
		sb.append(",TARCHIVOS_ID="+String.valueOf(TARCHIVOS_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",CODIGO="+CODIGO);
		sb.append(",ARCHIVOFS="+ARCHIVOFS);
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",EXTENSION="+EXTENSION);
		sb.append(",PADRE_ID="+String.valueOf(PADRE_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcopyOfout6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public int ESTADO;

				public int getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return false;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 22;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return "1";
				
				}
				public String ESTADOComment(){
				
				    return "Estado del trabajo (1 Activo - 2 Realizado - 3 Fallido - 4 Cancelado)";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String ARCHIVO;

				public String getARCHIVO () {
					return this.ARCHIVO;
				}

				public Boolean ARCHIVOIsNullable(){
				    return false;
				}
				public Boolean ARCHIVOIsKey(){
				    return false;
				}
				public Integer ARCHIVOLength(){
				    return 100;
				}
				public Integer ARCHIVOPrecision(){
				    return 0;
				}
				public String ARCHIVODefault(){
				
					return null;
				
				}
				public String ARCHIVOComment(){
				
				    return "Nombre del archivo";
				
				}
				public String ARCHIVOPattern(){
				
					return "";
				
				}
				public String ARCHIVOOriginalDbColumnName(){
				
					return "ARCHIVO";
				
				}

				
			    public int TARCHIVOS_ID;

				public int getTARCHIVOS_ID () {
					return this.TARCHIVOS_ID;
				}

				public Boolean TARCHIVOS_IDIsNullable(){
				    return false;
				}
				public Boolean TARCHIVOS_IDIsKey(){
				    return false;
				}
				public Integer TARCHIVOS_IDLength(){
				    return 22;
				}
				public Integer TARCHIVOS_IDPrecision(){
				    return 0;
				}
				public String TARCHIVOS_IDDefault(){
				
					return null;
				
				}
				public String TARCHIVOS_IDComment(){
				
				    return "FK - AFI_TARCHIVOS";
				
				}
				public String TARCHIVOS_IDPattern(){
				
					return "";
				
				}
				public String TARCHIVOS_IDOriginalDbColumnName(){
				
					return "TARCHIVOS_ID";
				
				}

				
			    public int USUARIOS_ID;

				public int getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 22;
				}
				public Integer USUARIOS_IDPrecision(){
				    return 0;
				}
				public String USUARIOS_IDDefault(){
				
					return null;
				
				}
				public String USUARIOS_IDComment(){
				
				    return "FK - GEN_USUARIOS (Usuario que subio el archivo)";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public String CODIGO;

				public String getCODIGO () {
					return this.CODIGO;
				}

				public Boolean CODIGOIsNullable(){
				    return false;
				}
				public Boolean CODIGOIsKey(){
				    return false;
				}
				public Integer CODIGOLength(){
				    return 10;
				}
				public Integer CODIGOPrecision(){
				    return 0;
				}
				public String CODIGODefault(){
				
					return null;
				
				}
				public String CODIGOComment(){
				
				    return "Codigo de identificacion del archivo";
				
				}
				public String CODIGOPattern(){
				
					return "";
				
				}
				public String CODIGOOriginalDbColumnName(){
				
					return "CODIGO";
				
				}

				
			    public String ARCHIVOFS;

				public String getARCHIVOFS () {
					return this.ARCHIVOFS;
				}

				public Boolean ARCHIVOFSIsNullable(){
				    return false;
				}
				public Boolean ARCHIVOFSIsKey(){
				    return false;
				}
				public Integer ARCHIVOFSLength(){
				    return 100;
				}
				public Integer ARCHIVOFSPrecision(){
				    return 0;
				}
				public String ARCHIVOFSDefault(){
				
					return null;
				
				}
				public String ARCHIVOFSComment(){
				
				    return "Nombre del archivo en el File System";
				
				}
				public String ARCHIVOFSPattern(){
				
					return "";
				
				}
				public String ARCHIVOFSOriginalDbColumnName(){
				
					return "ARCHIVOFS";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return 7;
				}
				public Integer FECHAPrecision(){
				    return 0;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "Fecha y hora del registro";
				
				}
				public String FECHAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String EXTENSION;

				public String getEXTENSION () {
					return this.EXTENSION;
				}

				public Boolean EXTENSIONIsNullable(){
				    return false;
				}
				public Boolean EXTENSIONIsKey(){
				    return false;
				}
				public Integer EXTENSIONLength(){
				    return 0;
				}
				public Integer EXTENSIONPrecision(){
				    return 0;
				}
				public String EXTENSIONDefault(){
				
					return null;
				
				}
				public String EXTENSIONComment(){
				
				    return "";
				
				}
				public String EXTENSIONPattern(){
				
					return "";
				
				}
				public String EXTENSIONOriginalDbColumnName(){
				
					return "EXTENSION";
				
				}

				
			    public int PADRE_ID;

				public int getPADRE_ID () {
					return this.PADRE_ID;
				}

				public Boolean PADRE_IDIsNullable(){
				    return false;
				}
				public Boolean PADRE_IDIsKey(){
				    return false;
				}
				public Integer PADRE_IDLength(){
				    return 0;
				}
				public Integer PADRE_IDPrecision(){
				    return 0;
				}
				public String PADRE_IDDefault(){
				
					return null;
				
				}
				public String PADRE_IDComment(){
				
				    return "";
				
				}
				public String PADRE_IDPattern(){
				
					return "";
				
				}
				public String PADRE_IDOriginalDbColumnName(){
				
					return "PADRE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
			        this.ESTADO = dis.readInt();
					
					this.ARCHIVO = readString(dis);
					
			        this.TARCHIVOS_ID = dis.readInt();
					
			        this.USUARIOS_ID = dis.readInt();
					
					this.CODIGO = readString(dis);
					
					this.ARCHIVOFS = readString(dis);
					
					this.FECHA = readDate(dis);
					
					this.EXTENSION = readString(dis);
					
			        this.PADRE_ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
			        this.ESTADO = dis.readInt();
					
					this.ARCHIVO = readString(dis);
					
			        this.TARCHIVOS_ID = dis.readInt();
					
			        this.USUARIOS_ID = dis.readInt();
					
					this.CODIGO = readString(dis);
					
					this.ARCHIVOFS = readString(dis);
					
					this.FECHA = readDate(dis);
					
					this.EXTENSION = readString(dis);
					
			        this.PADRE_ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ESTADO);
					
					// String
				
						writeString(this.ARCHIVO,dos);
					
					// int
				
		            	dos.writeInt(this.TARCHIVOS_ID);
					
					// int
				
		            	dos.writeInt(this.USUARIOS_ID);
					
					// String
				
						writeString(this.CODIGO,dos);
					
					// String
				
						writeString(this.ARCHIVOFS,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.EXTENSION,dos);
					
					// int
				
		            	dos.writeInt(this.PADRE_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ESTADO);
					
					// String
				
						writeString(this.ARCHIVO,dos);
					
					// int
				
		            	dos.writeInt(this.TARCHIVOS_ID);
					
					// int
				
		            	dos.writeInt(this.USUARIOS_ID);
					
					// String
				
						writeString(this.CODIGO,dos);
					
					// String
				
						writeString(this.ARCHIVOFS,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.EXTENSION,dos);
					
					// int
				
		            	dos.writeInt(this.PADRE_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ESTADO="+String.valueOf(ESTADO));
		sb.append(",ARCHIVO="+ARCHIVO);
		sb.append(",TARCHIVOS_ID="+String.valueOf(TARCHIVOS_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",CODIGO="+CODIGO);
		sb.append(",ARCHIVOFS="+ARCHIVOFS);
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",EXTENSION="+EXTENSION);
		sb.append(",PADRE_ID="+String.valueOf(PADRE_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tFixedFlowInput_1Struct implements routines.system.IPersistableRow<after_tFixedFlowInput_1Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public int ESTADO;

				public int getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return false;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 22;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return "1";
				
				}
				public String ESTADOComment(){
				
				    return "Estado del trabajo (1 Activo - 2 Realizado - 3 Fallido - 4 Cancelado)";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String ARCHIVO;

				public String getARCHIVO () {
					return this.ARCHIVO;
				}

				public Boolean ARCHIVOIsNullable(){
				    return false;
				}
				public Boolean ARCHIVOIsKey(){
				    return false;
				}
				public Integer ARCHIVOLength(){
				    return 100;
				}
				public Integer ARCHIVOPrecision(){
				    return 0;
				}
				public String ARCHIVODefault(){
				
					return null;
				
				}
				public String ARCHIVOComment(){
				
				    return "Nombre del archivo";
				
				}
				public String ARCHIVOPattern(){
				
					return "";
				
				}
				public String ARCHIVOOriginalDbColumnName(){
				
					return "ARCHIVO";
				
				}

				
			    public int TARCHIVOS_ID;

				public int getTARCHIVOS_ID () {
					return this.TARCHIVOS_ID;
				}

				public Boolean TARCHIVOS_IDIsNullable(){
				    return false;
				}
				public Boolean TARCHIVOS_IDIsKey(){
				    return false;
				}
				public Integer TARCHIVOS_IDLength(){
				    return 22;
				}
				public Integer TARCHIVOS_IDPrecision(){
				    return 0;
				}
				public String TARCHIVOS_IDDefault(){
				
					return null;
				
				}
				public String TARCHIVOS_IDComment(){
				
				    return "FK - AFI_TARCHIVOS";
				
				}
				public String TARCHIVOS_IDPattern(){
				
					return "";
				
				}
				public String TARCHIVOS_IDOriginalDbColumnName(){
				
					return "TARCHIVOS_ID";
				
				}

				
			    public int USUARIOS_ID;

				public int getUSUARIOS_ID () {
					return this.USUARIOS_ID;
				}

				public Boolean USUARIOS_IDIsNullable(){
				    return false;
				}
				public Boolean USUARIOS_IDIsKey(){
				    return false;
				}
				public Integer USUARIOS_IDLength(){
				    return 22;
				}
				public Integer USUARIOS_IDPrecision(){
				    return 0;
				}
				public String USUARIOS_IDDefault(){
				
					return null;
				
				}
				public String USUARIOS_IDComment(){
				
				    return "FK - GEN_USUARIOS (Usuario que subio el archivo)";
				
				}
				public String USUARIOS_IDPattern(){
				
					return "";
				
				}
				public String USUARIOS_IDOriginalDbColumnName(){
				
					return "USUARIOS_ID";
				
				}

				
			    public String CODIGO;

				public String getCODIGO () {
					return this.CODIGO;
				}

				public Boolean CODIGOIsNullable(){
				    return false;
				}
				public Boolean CODIGOIsKey(){
				    return false;
				}
				public Integer CODIGOLength(){
				    return 10;
				}
				public Integer CODIGOPrecision(){
				    return 0;
				}
				public String CODIGODefault(){
				
					return null;
				
				}
				public String CODIGOComment(){
				
				    return "Codigo de identificacion del archivo";
				
				}
				public String CODIGOPattern(){
				
					return "";
				
				}
				public String CODIGOOriginalDbColumnName(){
				
					return "CODIGO";
				
				}

				
			    public String ARCHIVOFS;

				public String getARCHIVOFS () {
					return this.ARCHIVOFS;
				}

				public Boolean ARCHIVOFSIsNullable(){
				    return false;
				}
				public Boolean ARCHIVOFSIsKey(){
				    return false;
				}
				public Integer ARCHIVOFSLength(){
				    return 100;
				}
				public Integer ARCHIVOFSPrecision(){
				    return 0;
				}
				public String ARCHIVOFSDefault(){
				
					return null;
				
				}
				public String ARCHIVOFSComment(){
				
				    return "Nombre del archivo en el File System";
				
				}
				public String ARCHIVOFSPattern(){
				
					return "";
				
				}
				public String ARCHIVOFSOriginalDbColumnName(){
				
					return "ARCHIVOFS";
				
				}

				
			    public java.util.Date FECHA;

				public java.util.Date getFECHA () {
					return this.FECHA;
				}

				public Boolean FECHAIsNullable(){
				    return false;
				}
				public Boolean FECHAIsKey(){
				    return false;
				}
				public Integer FECHALength(){
				    return 7;
				}
				public Integer FECHAPrecision(){
				    return 0;
				}
				public String FECHADefault(){
				
					return null;
				
				}
				public String FECHAComment(){
				
				    return "Fecha y hora del registro";
				
				}
				public String FECHAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FECHAOriginalDbColumnName(){
				
					return "FECHA";
				
				}

				
			    public String EXTENSION;

				public String getEXTENSION () {
					return this.EXTENSION;
				}

				public Boolean EXTENSIONIsNullable(){
				    return false;
				}
				public Boolean EXTENSIONIsKey(){
				    return false;
				}
				public Integer EXTENSIONLength(){
				    return 0;
				}
				public Integer EXTENSIONPrecision(){
				    return 0;
				}
				public String EXTENSIONDefault(){
				
					return null;
				
				}
				public String EXTENSIONComment(){
				
				    return "";
				
				}
				public String EXTENSIONPattern(){
				
					return "";
				
				}
				public String EXTENSIONOriginalDbColumnName(){
				
					return "EXTENSION";
				
				}

				
			    public int PADRE_ID;

				public int getPADRE_ID () {
					return this.PADRE_ID;
				}

				public Boolean PADRE_IDIsNullable(){
				    return false;
				}
				public Boolean PADRE_IDIsKey(){
				    return false;
				}
				public Integer PADRE_IDLength(){
				    return 0;
				}
				public Integer PADRE_IDPrecision(){
				    return 0;
				}
				public String PADRE_IDDefault(){
				
					return null;
				
				}
				public String PADRE_IDComment(){
				
				    return "";
				
				}
				public String PADRE_IDPattern(){
				
					return "";
				
				}
				public String PADRE_IDOriginalDbColumnName(){
				
					return "PADRE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
			        this.ESTADO = dis.readInt();
					
					this.ARCHIVO = readString(dis);
					
			        this.TARCHIVOS_ID = dis.readInt();
					
			        this.USUARIOS_ID = dis.readInt();
					
					this.CODIGO = readString(dis);
					
					this.ARCHIVOFS = readString(dis);
					
					this.FECHA = readDate(dis);
					
					this.EXTENSION = readString(dis);
					
			        this.PADRE_ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
			        this.ESTADO = dis.readInt();
					
					this.ARCHIVO = readString(dis);
					
			        this.TARCHIVOS_ID = dis.readInt();
					
			        this.USUARIOS_ID = dis.readInt();
					
					this.CODIGO = readString(dis);
					
					this.ARCHIVOFS = readString(dis);
					
					this.FECHA = readDate(dis);
					
					this.EXTENSION = readString(dis);
					
			        this.PADRE_ID = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ESTADO);
					
					// String
				
						writeString(this.ARCHIVO,dos);
					
					// int
				
		            	dos.writeInt(this.TARCHIVOS_ID);
					
					// int
				
		            	dos.writeInt(this.USUARIOS_ID);
					
					// String
				
						writeString(this.CODIGO,dos);
					
					// String
				
						writeString(this.ARCHIVOFS,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.EXTENSION,dos);
					
					// int
				
		            	dos.writeInt(this.PADRE_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// int
				
		            	dos.writeInt(this.ESTADO);
					
					// String
				
						writeString(this.ARCHIVO,dos);
					
					// int
				
		            	dos.writeInt(this.TARCHIVOS_ID);
					
					// int
				
		            	dos.writeInt(this.USUARIOS_ID);
					
					// String
				
						writeString(this.CODIGO,dos);
					
					// String
				
						writeString(this.ARCHIVOFS,dos);
					
					// java.util.Date
				
						writeDate(this.FECHA,dos);
					
					// String
				
						writeString(this.EXTENSION,dos);
					
					// int
				
		            	dos.writeInt(this.PADRE_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ESTADO="+String.valueOf(ESTADO));
		sb.append(",ARCHIVO="+ARCHIVO);
		sb.append(",TARCHIVOS_ID="+String.valueOf(TARCHIVOS_ID));
		sb.append(",USUARIOS_ID="+String.valueOf(USUARIOS_ID));
		sb.append(",CODIGO="+CODIGO);
		sb.append(",ARCHIVOFS="+ARCHIVOFS);
		sb.append(",FECHA="+String.valueOf(FECHA));
		sb.append(",EXTENSION="+EXTENSION);
		sb.append(",PADRE_ID="+String.valueOf(PADRE_ID));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tFixedFlowInput_1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tOracleInput_1Process(globalMap);

		row2Struct row2 = new row2Struct();
copyOfcopyOfcopyOfout6Struct copyOfcopyOfcopyOfout6 = new copyOfcopyOfcopyOfout6Struct();





	
	/**
	 * [tOracleOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_1", false);
		start_Hash.put("tOracleOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfcopyOfout6");
					}
				
		int tos_count_tOracleOutput_1 = 0;
		






    
    int nb_line_tOracleOutput_1 = 0;
    int nb_line_update_tOracleOutput_1 = 0;
    int nb_line_inserted_tOracleOutput_1 = 0;
    int nb_line_deleted_tOracleOutput_1 = 0;
    int nb_line_rejected_tOracleOutput_1 = 0;

    int tmp_batchUpdateCount_tOracleOutput_1 = 0;

    int deletedCount_tOracleOutput_1=0;
    int updatedCount_tOracleOutput_1=0;
    int insertedCount_tOracleOutput_1=0;
    int rowsToCommitCount_tOracleOutput_1=0;
    int rejectedCount_tOracleOutput_1=0;

    boolean whetherReject_tOracleOutput_1 = false;

    java.sql.Connection conn_tOracleOutput_1 = null;

    //optional table
    String dbschema_tOracleOutput_1 = null;
    String tableName_tOracleOutput_1 = null;
        dbschema_tOracleOutput_1 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_1=0;

        if(dbschema_tOracleOutput_1 == null || dbschema_tOracleOutput_1.trim().length() == 0) {
            tableName_tOracleOutput_1 = ("AFI_ARCHIVOS");
        } else {
            tableName_tOracleOutput_1 = dbschema_tOracleOutput_1 + "." + ("AFI_ARCHIVOS");
        }
                String insert_tOracleOutput_1 = "INSERT INTO " + tableName_tOracleOutput_1 + " (ESTADO,ARCHIVO,TARCHIVOS_ID,USUARIOS_ID,CODIGO,ARCHIVOFS,FECHA,EXTENSION,PADRE_ID) VALUES (?,?,?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_1 = conn_tOracleOutput_1.prepareStatement(insert_tOracleOutput_1);
                        resourceMap.put("pstmt_tOracleOutput_1", pstmt_tOracleOutput_1);





 



/**
 * [tOracleOutput_1 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct> tHash_Lookup_row14 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct>) 
					globalMap.get( "tHash_Lookup_row14" ))
					;					
					
	

row14Struct row14HashKey = new row14Struct();
row14Struct row14Default = new row14Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcopyOfout6Struct copyOfcopyOfcopyOfout6_tmp = new copyOfcopyOfcopyOfout6Struct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_1", false);
		start_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_1";
	
	
		int tos_count_tFixedFlowInput_1 = 0;
		

	    for (int i_tFixedFlowInput_1 = 0 ; i_tFixedFlowInput_1 < 1 ; i_tFixedFlowInput_1++) {
	                	            	
    	            		row2.ESTADO = context.estArchivoProcesado;
    	            	        	            	
    	            		row2.ARCHIVO = "ENTES TERRITORIALES EERORES "+context.idProceso;
    	            	        	            	
    	            		row2.TARCHIVOS_ID = context.tipoArchivoCruceErrores;
    	            	        	            	
    	            		row2.USUARIOS_ID = context.infoUsuarioIdArchivo;
    	            	        	            	
    	            		row2.CODIGO = "AFI_" + context.tipoArchivoCruceErrores + "_"+context.infoUsuarioIdArchivo;
    	            	        	            	
    	            		row2.ARCHIVOFS = "ERRORES_"+context.archivoSalida+".CSV";
    	            	        	            	
    	            		row2.FECHA = TalendDate.getCurrentDate();
    	            	        	            	
    	            		row2.EXTENSION = "CSV";
    	            	        	            	
    	            		row2.PADRE_ID = context.infoIdArchivo;
    	            	

 



/**
 * [tFixedFlowInput_1 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 


	tos_count_tFixedFlowInput_1++;

/**
 * [tFixedFlowInput_1 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
						row14Struct row14 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row14" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow14 = false;
       		  	    	
       		  	    	
 							row14Struct row14ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row14HashKey.CODIGO = row2.TARCHIVOS_ID ;
                        		    		

								
		                        	row14HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row14.lookup( row14HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row14 != null && tHash_Lookup_row14.getCount(row14HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row14' and it contains more one result from keys :  row14.CODIGO = '" + row14HashKey.CODIGO + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row14Struct fromLookup_row14 = null;
							row14 = row14Default;
										 
							
								 
							
							
								if (tHash_Lookup_row14 !=null && tHash_Lookup_row14.hasNext()) { // G 099
								
							
								
								fromLookup_row14 = tHash_Lookup_row14.next();

							
							
								} // G 099
							
							

							if(fromLookup_row14 != null) {
								row14 = fromLookup_row14;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcopyOfout6 = null;


// # Output table : 'copyOfcopyOfcopyOfout6'
copyOfcopyOfcopyOfout6_tmp.ESTADO = row2.ESTADO;
copyOfcopyOfcopyOfout6_tmp.ARCHIVO = row2.ARCHIVO;
copyOfcopyOfcopyOfout6_tmp.TARCHIVOS_ID = row14.ID;
copyOfcopyOfcopyOfout6_tmp.USUARIOS_ID = row2.USUARIOS_ID ;
copyOfcopyOfcopyOfout6_tmp.CODIGO = row2.CODIGO ;
copyOfcopyOfcopyOfout6_tmp.ARCHIVOFS = row2.ARCHIVOFS ;
copyOfcopyOfcopyOfout6_tmp.FECHA = row2.FECHA ;
copyOfcopyOfcopyOfout6_tmp.EXTENSION = row2.EXTENSION ;
copyOfcopyOfcopyOfout6_tmp.PADRE_ID = row2.PADRE_ID ;
copyOfcopyOfcopyOfout6 = copyOfcopyOfcopyOfout6_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcopyOfout6"
if(copyOfcopyOfcopyOfout6 != null) { 



	
	/**
	 * [tOracleOutput_1 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfcopyOfcopyOfout6"
						
						);
					}
					



        whetherReject_tOracleOutput_1 = false;
                        pstmt_tOracleOutput_1.setInt(1, copyOfcopyOfcopyOfout6.ESTADO);

                        if(copyOfcopyOfcopyOfout6.ARCHIVO == null) {
pstmt_tOracleOutput_1.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(2, copyOfcopyOfcopyOfout6.ARCHIVO);
}

                        pstmt_tOracleOutput_1.setInt(3, copyOfcopyOfcopyOfout6.TARCHIVOS_ID);

                        pstmt_tOracleOutput_1.setInt(4, copyOfcopyOfcopyOfout6.USUARIOS_ID);

                        if(copyOfcopyOfcopyOfout6.CODIGO == null) {
pstmt_tOracleOutput_1.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(5, copyOfcopyOfcopyOfout6.CODIGO);
}

                        if(copyOfcopyOfcopyOfout6.ARCHIVOFS == null) {
pstmt_tOracleOutput_1.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(6, copyOfcopyOfcopyOfout6.ARCHIVOFS);
}

                        if(copyOfcopyOfcopyOfout6.FECHA != null) {
pstmt_tOracleOutput_1.setObject(7, new java.sql.Timestamp(copyOfcopyOfcopyOfout6.FECHA.getTime()),java.sql.Types.DATE);
} else {
pstmt_tOracleOutput_1.setNull(7, java.sql.Types.DATE);
}

                        if(copyOfcopyOfcopyOfout6.EXTENSION == null) {
pstmt_tOracleOutput_1.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(8, copyOfcopyOfcopyOfout6.EXTENSION);
}

                        pstmt_tOracleOutput_1.setInt(9, copyOfcopyOfcopyOfout6.PADRE_ID);

                try {
                    nb_line_tOracleOutput_1++;
                    int processedCount_tOracleOutput_1 = pstmt_tOracleOutput_1.executeUpdate();
                    insertedCount_tOracleOutput_1 += processedCount_tOracleOutput_1;
                    rowsToCommitCount_tOracleOutput_1 += processedCount_tOracleOutput_1;
                } catch(java.lang.Exception e_tOracleOutput_1) {
globalMap.put("tOracleOutput_1_ERROR_MESSAGE",e_tOracleOutput_1.getMessage());
                    whetherReject_tOracleOutput_1 = true;
                            System.err.print(e_tOracleOutput_1.getMessage());
                }

 


	tos_count_tOracleOutput_1++;

/**
 * [tOracleOutput_1 main ] stop
 */
	
	/**
	 * [tOracleOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	

 



/**
 * [tOracleOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	

 



/**
 * [tOracleOutput_1 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcopyOfout6"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

        }
        globalMap.put("tFixedFlowInput_1_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_1", true);
end_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());




/**
 * [tFixedFlowInput_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row14 != null) {
						tHash_Lookup_row14.endGet();
					}
					globalMap.remove( "tHash_Lookup_row14" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tOracleOutput_1 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	
	



	
        if(pstmt_tOracleOutput_1 != null) {
			
				pstmt_tOracleOutput_1.close();
				resourceMap.remove("pstmt_tOracleOutput_1");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_1", true);

	
	nb_line_deleted_tOracleOutput_1=nb_line_deleted_tOracleOutput_1+ deletedCount_tOracleOutput_1;
	nb_line_update_tOracleOutput_1=nb_line_update_tOracleOutput_1 + updatedCount_tOracleOutput_1;
	nb_line_inserted_tOracleOutput_1=nb_line_inserted_tOracleOutput_1 + insertedCount_tOracleOutput_1;
	nb_line_rejected_tOracleOutput_1=nb_line_rejected_tOracleOutput_1 + rejectedCount_tOracleOutput_1;
	
        globalMap.put("tOracleOutput_1_NB_LINE",nb_line_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_UPDATED",nb_line_update_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_1);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfcopyOfout6");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_1", true);
end_Hash.put("tOracleOutput_1", System.currentTimeMillis());




/**
 * [tOracleOutput_1 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row14"); 
				     			
				try{
					
	
	/**
	 * [tFixedFlowInput_1 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tOracleOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_1") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_1 = null;
                if ((pstmtToClose_tOracleOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_1")) != null) {
                    pstmtToClose_tOracleOutput_1.close();
                }
    }
 



/**
 * [tOracleOutput_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public BigDecimal ID_UNICO_PERSONA;

				public BigDecimal getID_UNICO_PERSONA () {
					return this.ID_UNICO_PERSONA;
				}

				public Boolean ID_UNICO_PERSONAIsNullable(){
				    return true;
				}
				public Boolean ID_UNICO_PERSONAIsKey(){
				    return false;
				}
				public Integer ID_UNICO_PERSONALength(){
				    return null;
				}
				public Integer ID_UNICO_PERSONAPrecision(){
				    return null;
				}
				public String ID_UNICO_PERSONADefault(){
				
					return "";
				
				}
				public String ID_UNICO_PERSONAComment(){
				
				    return "";
				
				}
				public String ID_UNICO_PERSONAPattern(){
				
					return "";
				
				}
				public String ID_UNICO_PERSONAOriginalDbColumnName(){
				
					return "ID_UNICO_PERSONA";
				
				}

				
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return null;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return null;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return null;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return null;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return null;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return null;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return null;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return null;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String SIGLA_SEXO;

				public String getSIGLA_SEXO () {
					return this.SIGLA_SEXO;
				}

				public Boolean SIGLA_SEXOIsNullable(){
				    return true;
				}
				public Boolean SIGLA_SEXOIsKey(){
				    return false;
				}
				public Integer SIGLA_SEXOLength(){
				    return null;
				}
				public Integer SIGLA_SEXOPrecision(){
				    return null;
				}
				public String SIGLA_SEXODefault(){
				
					return null;
				
				}
				public String SIGLA_SEXOComment(){
				
				    return "";
				
				}
				public String SIGLA_SEXOPattern(){
				
					return "";
				
				}
				public String SIGLA_SEXOOriginalDbColumnName(){
				
					return "SIGLA_SEXO";
				
				}

				
			    public String DIRECCION;

				public String getDIRECCION () {
					return this.DIRECCION;
				}

				public Boolean DIRECCIONIsNullable(){
				    return true;
				}
				public Boolean DIRECCIONIsKey(){
				    return false;
				}
				public Integer DIRECCIONLength(){
				    return null;
				}
				public Integer DIRECCIONPrecision(){
				    return null;
				}
				public String DIRECCIONDefault(){
				
					return null;
				
				}
				public String DIRECCIONComment(){
				
				    return "";
				
				}
				public String DIRECCIONPattern(){
				
					return "";
				
				}
				public String DIRECCIONOriginalDbColumnName(){
				
					return "DIRECCION";
				
				}

				
			    public String TELEFONO;

				public String getTELEFONO () {
					return this.TELEFONO;
				}

				public Boolean TELEFONOIsNullable(){
				    return true;
				}
				public Boolean TELEFONOIsKey(){
				    return false;
				}
				public Integer TELEFONOLength(){
				    return null;
				}
				public Integer TELEFONOPrecision(){
				    return null;
				}
				public String TELEFONODefault(){
				
					return null;
				
				}
				public String TELEFONOComment(){
				
				    return "";
				
				}
				public String TELEFONOPattern(){
				
					return "";
				
				}
				public String TELEFONOOriginalDbColumnName(){
				
					return "TELEFONO";
				
				}

				
			    public String COD_PAIS_RESIDENCIA;

				public String getCOD_PAIS_RESIDENCIA () {
					return this.COD_PAIS_RESIDENCIA;
				}

				public Boolean COD_PAIS_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean COD_PAIS_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer COD_PAIS_RESIDENCIALength(){
				    return null;
				}
				public Integer COD_PAIS_RESIDENCIAPrecision(){
				    return null;
				}
				public String COD_PAIS_RESIDENCIADefault(){
				
					return null;
				
				}
				public String COD_PAIS_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String COD_PAIS_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String COD_PAIS_RESIDENCIAOriginalDbColumnName(){
				
					return "COD_PAIS_RESIDENCIA";
				
				}

				
			    public String COD_DEPTO_RESIDENCIA;

				public String getCOD_DEPTO_RESIDENCIA () {
					return this.COD_DEPTO_RESIDENCIA;
				}

				public Boolean COD_DEPTO_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean COD_DEPTO_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer COD_DEPTO_RESIDENCIALength(){
				    return null;
				}
				public Integer COD_DEPTO_RESIDENCIAPrecision(){
				    return null;
				}
				public String COD_DEPTO_RESIDENCIADefault(){
				
					return null;
				
				}
				public String COD_DEPTO_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String COD_DEPTO_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String COD_DEPTO_RESIDENCIAOriginalDbColumnName(){
				
					return "COD_DEPTO_RESIDENCIA";
				
				}

				
			    public String COD_MCIPIO_RESIDENCIA;

				public String getCOD_MCIPIO_RESIDENCIA () {
					return this.COD_MCIPIO_RESIDENCIA;
				}

				public Boolean COD_MCIPIO_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean COD_MCIPIO_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer COD_MCIPIO_RESIDENCIALength(){
				    return null;
				}
				public Integer COD_MCIPIO_RESIDENCIAPrecision(){
				    return null;
				}
				public String COD_MCIPIO_RESIDENCIADefault(){
				
					return null;
				
				}
				public String COD_MCIPIO_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String COD_MCIPIO_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String COD_MCIPIO_RESIDENCIAOriginalDbColumnName(){
				
					return "COD_MCIPIO_RESIDENCIA";
				
				}

				
			    public String COD_LOC_RESIDENCIA;

				public String getCOD_LOC_RESIDENCIA () {
					return this.COD_LOC_RESIDENCIA;
				}

				public Boolean COD_LOC_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean COD_LOC_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer COD_LOC_RESIDENCIALength(){
				    return null;
				}
				public Integer COD_LOC_RESIDENCIAPrecision(){
				    return null;
				}
				public String COD_LOC_RESIDENCIADefault(){
				
					return null;
				
				}
				public String COD_LOC_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String COD_LOC_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String COD_LOC_RESIDENCIAOriginalDbColumnName(){
				
					return "COD_LOC_RESIDENCIA";
				
				}

				
			    public String COD_PAIS_NAC;

				public String getCOD_PAIS_NAC () {
					return this.COD_PAIS_NAC;
				}

				public Boolean COD_PAIS_NACIsNullable(){
				    return true;
				}
				public Boolean COD_PAIS_NACIsKey(){
				    return false;
				}
				public Integer COD_PAIS_NACLength(){
				    return null;
				}
				public Integer COD_PAIS_NACPrecision(){
				    return null;
				}
				public String COD_PAIS_NACDefault(){
				
					return null;
				
				}
				public String COD_PAIS_NACComment(){
				
				    return "";
				
				}
				public String COD_PAIS_NACPattern(){
				
					return "";
				
				}
				public String COD_PAIS_NACOriginalDbColumnName(){
				
					return "COD_PAIS_NAC";
				
				}

				
			    public String COD_DEPARTAMENTO_NAC;

				public String getCOD_DEPARTAMENTO_NAC () {
					return this.COD_DEPARTAMENTO_NAC;
				}

				public Boolean COD_DEPARTAMENTO_NACIsNullable(){
				    return true;
				}
				public Boolean COD_DEPARTAMENTO_NACIsKey(){
				    return false;
				}
				public Integer COD_DEPARTAMENTO_NACLength(){
				    return null;
				}
				public Integer COD_DEPARTAMENTO_NACPrecision(){
				    return null;
				}
				public String COD_DEPARTAMENTO_NACDefault(){
				
					return null;
				
				}
				public String COD_DEPARTAMENTO_NACComment(){
				
				    return "";
				
				}
				public String COD_DEPARTAMENTO_NACPattern(){
				
					return "";
				
				}
				public String COD_DEPARTAMENTO_NACOriginalDbColumnName(){
				
					return "COD_DEPARTAMENTO_NAC";
				
				}

				
			    public String COD_MCIPIO_NAC;

				public String getCOD_MCIPIO_NAC () {
					return this.COD_MCIPIO_NAC;
				}

				public Boolean COD_MCIPIO_NACIsNullable(){
				    return true;
				}
				public Boolean COD_MCIPIO_NACIsKey(){
				    return false;
				}
				public Integer COD_MCIPIO_NACLength(){
				    return null;
				}
				public Integer COD_MCIPIO_NACPrecision(){
				    return null;
				}
				public String COD_MCIPIO_NACDefault(){
				
					return null;
				
				}
				public String COD_MCIPIO_NACComment(){
				
				    return "";
				
				}
				public String COD_MCIPIO_NACPattern(){
				
					return "";
				
				}
				public String COD_MCIPIO_NACOriginalDbColumnName(){
				
					return "COD_MCIPIO_NAC";
				
				}

				
			    public String COD_PAIS_EXP;

				public String getCOD_PAIS_EXP () {
					return this.COD_PAIS_EXP;
				}

				public Boolean COD_PAIS_EXPIsNullable(){
				    return true;
				}
				public Boolean COD_PAIS_EXPIsKey(){
				    return false;
				}
				public Integer COD_PAIS_EXPLength(){
				    return null;
				}
				public Integer COD_PAIS_EXPPrecision(){
				    return null;
				}
				public String COD_PAIS_EXPDefault(){
				
					return null;
				
				}
				public String COD_PAIS_EXPComment(){
				
				    return "";
				
				}
				public String COD_PAIS_EXPPattern(){
				
					return "";
				
				}
				public String COD_PAIS_EXPOriginalDbColumnName(){
				
					return "COD_PAIS_EXP";
				
				}

				
			    public String COD_DEPARTAMENTO_EXP;

				public String getCOD_DEPARTAMENTO_EXP () {
					return this.COD_DEPARTAMENTO_EXP;
				}

				public Boolean COD_DEPARTAMENTO_EXPIsNullable(){
				    return true;
				}
				public Boolean COD_DEPARTAMENTO_EXPIsKey(){
				    return false;
				}
				public Integer COD_DEPARTAMENTO_EXPLength(){
				    return null;
				}
				public Integer COD_DEPARTAMENTO_EXPPrecision(){
				    return null;
				}
				public String COD_DEPARTAMENTO_EXPDefault(){
				
					return null;
				
				}
				public String COD_DEPARTAMENTO_EXPComment(){
				
				    return "";
				
				}
				public String COD_DEPARTAMENTO_EXPPattern(){
				
					return "";
				
				}
				public String COD_DEPARTAMENTO_EXPOriginalDbColumnName(){
				
					return "COD_DEPARTAMENTO_EXP";
				
				}

				
			    public String COD_MUNICIPIO_EXP;

				public String getCOD_MUNICIPIO_EXP () {
					return this.COD_MUNICIPIO_EXP;
				}

				public Boolean COD_MUNICIPIO_EXPIsNullable(){
				    return true;
				}
				public Boolean COD_MUNICIPIO_EXPIsKey(){
				    return false;
				}
				public Integer COD_MUNICIPIO_EXPLength(){
				    return null;
				}
				public Integer COD_MUNICIPIO_EXPPrecision(){
				    return null;
				}
				public String COD_MUNICIPIO_EXPDefault(){
				
					return null;
				
				}
				public String COD_MUNICIPIO_EXPComment(){
				
				    return "";
				
				}
				public String COD_MUNICIPIO_EXPPattern(){
				
					return "";
				
				}
				public String COD_MUNICIPIO_EXPOriginalDbColumnName(){
				
					return "COD_MUNICIPIO_EXP";
				
				}

				
			    public String FECHA_EXPEDICION_DOCUMENTO;

				public String getFECHA_EXPEDICION_DOCUMENTO () {
					return this.FECHA_EXPEDICION_DOCUMENTO;
				}

				public Boolean FECHA_EXPEDICION_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_DOCUMENTOLength(){
				    return null;
				}
				public Integer FECHA_EXPEDICION_DOCUMENTOPrecision(){
				    return null;
				}
				public String FECHA_EXPEDICION_DOCUMENTODefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String FECHA_EXPEDICION_DOCUMENTOOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_DOCUMENTO";
				
				}

				
			    public String FECHA_NACIMIENTO;

				public String getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return null;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return null;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				
			    public String GSANGUINEOS;

				public String getGSANGUINEOS () {
					return this.GSANGUINEOS;
				}

				public Boolean GSANGUINEOSIsNullable(){
				    return true;
				}
				public Boolean GSANGUINEOSIsKey(){
				    return false;
				}
				public Integer GSANGUINEOSLength(){
				    return null;
				}
				public Integer GSANGUINEOSPrecision(){
				    return null;
				}
				public String GSANGUINEOSDefault(){
				
					return null;
				
				}
				public String GSANGUINEOSComment(){
				
				    return "";
				
				}
				public String GSANGUINEOSPattern(){
				
					return "";
				
				}
				public String GSANGUINEOSOriginalDbColumnName(){
				
					return "GSANGUINEOS";
				
				}

				
			    public String FACTOR_RH;

				public String getFACTOR_RH () {
					return this.FACTOR_RH;
				}

				public Boolean FACTOR_RHIsNullable(){
				    return true;
				}
				public Boolean FACTOR_RHIsKey(){
				    return false;
				}
				public Integer FACTOR_RHLength(){
				    return null;
				}
				public Integer FACTOR_RHPrecision(){
				    return null;
				}
				public String FACTOR_RHDefault(){
				
					return null;
				
				}
				public String FACTOR_RHComment(){
				
				    return "";
				
				}
				public String FACTOR_RHPattern(){
				
					return "";
				
				}
				public String FACTOR_RHOriginalDbColumnName(){
				
					return "FACTOR_RH";
				
				}

				
			    public String SIGLA_NEDUCATIVOS;

				public String getSIGLA_NEDUCATIVOS () {
					return this.SIGLA_NEDUCATIVOS;
				}

				public Boolean SIGLA_NEDUCATIVOSIsNullable(){
				    return true;
				}
				public Boolean SIGLA_NEDUCATIVOSIsKey(){
				    return false;
				}
				public Integer SIGLA_NEDUCATIVOSLength(){
				    return null;
				}
				public Integer SIGLA_NEDUCATIVOSPrecision(){
				    return null;
				}
				public String SIGLA_NEDUCATIVOSDefault(){
				
					return null;
				
				}
				public String SIGLA_NEDUCATIVOSComment(){
				
				    return "";
				
				}
				public String SIGLA_NEDUCATIVOSPattern(){
				
					return "";
				
				}
				public String SIGLA_NEDUCATIVOSOriginalDbColumnName(){
				
					return "SIGLA_NEDUCATIVOS";
				
				}

				
			    public String COD_ESM;

				public String getCOD_ESM () {
					return this.COD_ESM;
				}

				public Boolean COD_ESMIsNullable(){
				    return true;
				}
				public Boolean COD_ESMIsKey(){
				    return false;
				}
				public Integer COD_ESMLength(){
				    return null;
				}
				public Integer COD_ESMPrecision(){
				    return null;
				}
				public String COD_ESMDefault(){
				
					return null;
				
				}
				public String COD_ESMComment(){
				
				    return "";
				
				}
				public String COD_ESMPattern(){
				
					return "";
				
				}
				public String COD_ESMOriginalDbColumnName(){
				
					return "COD_ESM";
				
				}

				
			    public String SIGLA_ESM;

				public String getSIGLA_ESM () {
					return this.SIGLA_ESM;
				}

				public Boolean SIGLA_ESMIsNullable(){
				    return true;
				}
				public Boolean SIGLA_ESMIsKey(){
				    return false;
				}
				public Integer SIGLA_ESMLength(){
				    return null;
				}
				public Integer SIGLA_ESMPrecision(){
				    return null;
				}
				public String SIGLA_ESMDefault(){
				
					return null;
				
				}
				public String SIGLA_ESMComment(){
				
				    return "";
				
				}
				public String SIGLA_ESMPattern(){
				
					return "";
				
				}
				public String SIGLA_ESMOriginalDbColumnName(){
				
					return "SIGLA_ESM";
				
				}

				
			    public String COD_ETNICAS;

				public String getCOD_ETNICAS () {
					return this.COD_ETNICAS;
				}

				public Boolean COD_ETNICASIsNullable(){
				    return true;
				}
				public Boolean COD_ETNICASIsKey(){
				    return false;
				}
				public Integer COD_ETNICASLength(){
				    return null;
				}
				public Integer COD_ETNICASPrecision(){
				    return null;
				}
				public String COD_ETNICASDefault(){
				
					return null;
				
				}
				public String COD_ETNICASComment(){
				
				    return "";
				
				}
				public String COD_ETNICASPattern(){
				
					return "";
				
				}
				public String COD_ETNICASOriginalDbColumnName(){
				
					return "COD_ETNICAS";
				
				}

				
			    public String NSOCIOECONOMICOS;

				public String getNSOCIOECONOMICOS () {
					return this.NSOCIOECONOMICOS;
				}

				public Boolean NSOCIOECONOMICOSIsNullable(){
				    return true;
				}
				public Boolean NSOCIOECONOMICOSIsKey(){
				    return false;
				}
				public Integer NSOCIOECONOMICOSLength(){
				    return null;
				}
				public Integer NSOCIOECONOMICOSPrecision(){
				    return null;
				}
				public String NSOCIOECONOMICOSDefault(){
				
					return null;
				
				}
				public String NSOCIOECONOMICOSComment(){
				
				    return "";
				
				}
				public String NSOCIOECONOMICOSPattern(){
				
					return "";
				
				}
				public String NSOCIOECONOMICOSOriginalDbColumnName(){
				
					return "NSOCIOECONOMICOS";
				
				}

				
			    public String SIGLA_OCUPACIONES;

				public String getSIGLA_OCUPACIONES () {
					return this.SIGLA_OCUPACIONES;
				}

				public Boolean SIGLA_OCUPACIONESIsNullable(){
				    return true;
				}
				public Boolean SIGLA_OCUPACIONESIsKey(){
				    return false;
				}
				public Integer SIGLA_OCUPACIONESLength(){
				    return null;
				}
				public Integer SIGLA_OCUPACIONESPrecision(){
				    return null;
				}
				public String SIGLA_OCUPACIONESDefault(){
				
					return null;
				
				}
				public String SIGLA_OCUPACIONESComment(){
				
				    return "";
				
				}
				public String SIGLA_OCUPACIONESPattern(){
				
					return "";
				
				}
				public String SIGLA_OCUPACIONESOriginalDbColumnName(){
				
					return "SIGLA_OCUPACIONES";
				
				}

				
			    public String ESTATURA;

				public String getESTATURA () {
					return this.ESTATURA;
				}

				public Boolean ESTATURAIsNullable(){
				    return true;
				}
				public Boolean ESTATURAIsKey(){
				    return false;
				}
				public Integer ESTATURALength(){
				    return null;
				}
				public Integer ESTATURAPrecision(){
				    return null;
				}
				public String ESTATURADefault(){
				
					return null;
				
				}
				public String ESTATURAComment(){
				
				    return "";
				
				}
				public String ESTATURAPattern(){
				
					return "";
				
				}
				public String ESTATURAOriginalDbColumnName(){
				
					return "ESTATURA";
				
				}

				
			    public String SIGLA_TVIVIENDA;

				public String getSIGLA_TVIVIENDA () {
					return this.SIGLA_TVIVIENDA;
				}

				public Boolean SIGLA_TVIVIENDAIsNullable(){
				    return true;
				}
				public Boolean SIGLA_TVIVIENDAIsKey(){
				    return false;
				}
				public Integer SIGLA_TVIVIENDALength(){
				    return null;
				}
				public Integer SIGLA_TVIVIENDAPrecision(){
				    return null;
				}
				public String SIGLA_TVIVIENDADefault(){
				
					return null;
				
				}
				public String SIGLA_TVIVIENDAComment(){
				
				    return "";
				
				}
				public String SIGLA_TVIVIENDAPattern(){
				
					return "";
				
				}
				public String SIGLA_TVIVIENDAOriginalDbColumnName(){
				
					return "SIGLA_TVIVIENDA";
				
				}

				
			    public String FECHA_CADUCIDAD;

				public String getFECHA_CADUCIDAD () {
					return this.FECHA_CADUCIDAD;
				}

				public Boolean FECHA_CADUCIDADIsNullable(){
				    return true;
				}
				public Boolean FECHA_CADUCIDADIsKey(){
				    return false;
				}
				public Integer FECHA_CADUCIDADLength(){
				    return null;
				}
				public Integer FECHA_CADUCIDADPrecision(){
				    return null;
				}
				public String FECHA_CADUCIDADDefault(){
				
					return null;
				
				}
				public String FECHA_CADUCIDADComment(){
				
				    return "";
				
				}
				public String FECHA_CADUCIDADPattern(){
				
					return "";
				
				}
				public String FECHA_CADUCIDADOriginalDbColumnName(){
				
					return "FECHA_CADUCIDAD";
				
				}

				
			    public String SIGLA_FUERZA;

				public String getSIGLA_FUERZA () {
					return this.SIGLA_FUERZA;
				}

				public Boolean SIGLA_FUERZAIsNullable(){
				    return true;
				}
				public Boolean SIGLA_FUERZAIsKey(){
				    return false;
				}
				public Integer SIGLA_FUERZALength(){
				    return null;
				}
				public Integer SIGLA_FUERZAPrecision(){
				    return null;
				}
				public String SIGLA_FUERZADefault(){
				
					return null;
				
				}
				public String SIGLA_FUERZAComment(){
				
				    return "";
				
				}
				public String SIGLA_FUERZAPattern(){
				
					return "";
				
				}
				public String SIGLA_FUERZAOriginalDbColumnName(){
				
					return "SIGLA_FUERZA";
				
				}

				
			    public String COD_GRADO;

				public String getCOD_GRADO () {
					return this.COD_GRADO;
				}

				public Boolean COD_GRADOIsNullable(){
				    return true;
				}
				public Boolean COD_GRADOIsKey(){
				    return false;
				}
				public Integer COD_GRADOLength(){
				    return null;
				}
				public Integer COD_GRADOPrecision(){
				    return null;
				}
				public String COD_GRADODefault(){
				
					return null;
				
				}
				public String COD_GRADOComment(){
				
				    return "";
				
				}
				public String COD_GRADOPattern(){
				
					return "";
				
				}
				public String COD_GRADOOriginalDbColumnName(){
				
					return "COD_GRADO";
				
				}

				
			    public String SIGLA_GRADO;

				public String getSIGLA_GRADO () {
					return this.SIGLA_GRADO;
				}

				public Boolean SIGLA_GRADOIsNullable(){
				    return true;
				}
				public Boolean SIGLA_GRADOIsKey(){
				    return false;
				}
				public Integer SIGLA_GRADOLength(){
				    return null;
				}
				public Integer SIGLA_GRADOPrecision(){
				    return null;
				}
				public String SIGLA_GRADODefault(){
				
					return null;
				
				}
				public String SIGLA_GRADOComment(){
				
				    return "";
				
				}
				public String SIGLA_GRADOPattern(){
				
					return "";
				
				}
				public String SIGLA_GRADOOriginalDbColumnName(){
				
					return "SIGLA_GRADO";
				
				}

				
			    public String SIGLA_UMILITAR;

				public String getSIGLA_UMILITAR () {
					return this.SIGLA_UMILITAR;
				}

				public Boolean SIGLA_UMILITARIsNullable(){
				    return true;
				}
				public Boolean SIGLA_UMILITARIsKey(){
				    return false;
				}
				public Integer SIGLA_UMILITARLength(){
				    return null;
				}
				public Integer SIGLA_UMILITARPrecision(){
				    return null;
				}
				public String SIGLA_UMILITARDefault(){
				
					return null;
				
				}
				public String SIGLA_UMILITARComment(){
				
				    return "";
				
				}
				public String SIGLA_UMILITARPattern(){
				
					return "";
				
				}
				public String SIGLA_UMILITAROriginalDbColumnName(){
				
					return "SIGLA_UMILITAR";
				
				}

				
			    public String COD_UMILITAR;

				public String getCOD_UMILITAR () {
					return this.COD_UMILITAR;
				}

				public Boolean COD_UMILITARIsNullable(){
				    return true;
				}
				public Boolean COD_UMILITARIsKey(){
				    return false;
				}
				public Integer COD_UMILITARLength(){
				    return null;
				}
				public Integer COD_UMILITARPrecision(){
				    return null;
				}
				public String COD_UMILITARDefault(){
				
					return null;
				
				}
				public String COD_UMILITARComment(){
				
				    return "";
				
				}
				public String COD_UMILITARPattern(){
				
					return "";
				
				}
				public String COD_UMILITAROriginalDbColumnName(){
				
					return "COD_UMILITAR";
				
				}

				
			    public String SIGLA_TVINCULACION;

				public String getSIGLA_TVINCULACION () {
					return this.SIGLA_TVINCULACION;
				}

				public Boolean SIGLA_TVINCULACIONIsNullable(){
				    return true;
				}
				public Boolean SIGLA_TVINCULACIONIsKey(){
				    return false;
				}
				public Integer SIGLA_TVINCULACIONLength(){
				    return null;
				}
				public Integer SIGLA_TVINCULACIONPrecision(){
				    return null;
				}
				public String SIGLA_TVINCULACIONDefault(){
				
					return null;
				
				}
				public String SIGLA_TVINCULACIONComment(){
				
				    return "";
				
				}
				public String SIGLA_TVINCULACIONPattern(){
				
					return "";
				
				}
				public String SIGLA_TVINCULACIONOriginalDbColumnName(){
				
					return "SIGLA_TVINCULACION";
				
				}

				
			    public String SIGLA_TREGIMEN;

				public String getSIGLA_TREGIMEN () {
					return this.SIGLA_TREGIMEN;
				}

				public Boolean SIGLA_TREGIMENIsNullable(){
				    return true;
				}
				public Boolean SIGLA_TREGIMENIsKey(){
				    return false;
				}
				public Integer SIGLA_TREGIMENLength(){
				    return null;
				}
				public Integer SIGLA_TREGIMENPrecision(){
				    return null;
				}
				public String SIGLA_TREGIMENDefault(){
				
					return null;
				
				}
				public String SIGLA_TREGIMENComment(){
				
				    return "";
				
				}
				public String SIGLA_TREGIMENPattern(){
				
					return "";
				
				}
				public String SIGLA_TREGIMENOriginalDbColumnName(){
				
					return "SIGLA_TREGIMEN";
				
				}

				
			    public String SIGLA_TAFILIADOS;

				public String getSIGLA_TAFILIADOS () {
					return this.SIGLA_TAFILIADOS;
				}

				public Boolean SIGLA_TAFILIADOSIsNullable(){
				    return true;
				}
				public Boolean SIGLA_TAFILIADOSIsKey(){
				    return false;
				}
				public Integer SIGLA_TAFILIADOSLength(){
				    return null;
				}
				public Integer SIGLA_TAFILIADOSPrecision(){
				    return null;
				}
				public String SIGLA_TAFILIADOSDefault(){
				
					return null;
				
				}
				public String SIGLA_TAFILIADOSComment(){
				
				    return "";
				
				}
				public String SIGLA_TAFILIADOSPattern(){
				
					return "";
				
				}
				public String SIGLA_TAFILIADOSOriginalDbColumnName(){
				
					return "SIGLA_TAFILIADOS";
				
				}

				
			    public String SIGLA_ESTADO;

				public String getSIGLA_ESTADO () {
					return this.SIGLA_ESTADO;
				}

				public Boolean SIGLA_ESTADOIsNullable(){
				    return true;
				}
				public Boolean SIGLA_ESTADOIsKey(){
				    return false;
				}
				public Integer SIGLA_ESTADOLength(){
				    return null;
				}
				public Integer SIGLA_ESTADOPrecision(){
				    return null;
				}
				public String SIGLA_ESTADODefault(){
				
					return null;
				
				}
				public String SIGLA_ESTADOComment(){
				
				    return "";
				
				}
				public String SIGLA_ESTADOPattern(){
				
					return "";
				
				}
				public String SIGLA_ESTADOOriginalDbColumnName(){
				
					return "SIGLA_ESTADO";
				
				}

				
			    public String DOCUMENTO_ENTIDAD;

				public String getDOCUMENTO_ENTIDAD () {
					return this.DOCUMENTO_ENTIDAD;
				}

				public Boolean DOCUMENTO_ENTIDADIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTO_ENTIDADIsKey(){
				    return false;
				}
				public Integer DOCUMENTO_ENTIDADLength(){
				    return null;
				}
				public Integer DOCUMENTO_ENTIDADPrecision(){
				    return null;
				}
				public String DOCUMENTO_ENTIDADDefault(){
				
					return null;
				
				}
				public String DOCUMENTO_ENTIDADComment(){
				
				    return "";
				
				}
				public String DOCUMENTO_ENTIDADPattern(){
				
					return "";
				
				}
				public String DOCUMENTO_ENTIDADOriginalDbColumnName(){
				
					return "DOCUMENTO_ENTIDAD";
				
				}

				
			    public BigDecimal ENT_APO_PRINCIPAL;

				public BigDecimal getENT_APO_PRINCIPAL () {
					return this.ENT_APO_PRINCIPAL;
				}

				public Boolean ENT_APO_PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean ENT_APO_PRINCIPALIsKey(){
				    return false;
				}
				public Integer ENT_APO_PRINCIPALLength(){
				    return null;
				}
				public Integer ENT_APO_PRINCIPALPrecision(){
				    return null;
				}
				public String ENT_APO_PRINCIPALDefault(){
				
					return "";
				
				}
				public String ENT_APO_PRINCIPALComment(){
				
				    return "";
				
				}
				public String ENT_APO_PRINCIPALPattern(){
				
					return "";
				
				}
				public String ENT_APO_PRINCIPALOriginalDbColumnName(){
				
					return "ENT_APO_PRINCIPAL";
				
				}

				
			    public String FECHA_VINCULACION;

				public String getFECHA_VINCULACION () {
					return this.FECHA_VINCULACION;
				}

				public Boolean FECHA_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_VINCULACIONIsKey(){
				    return false;
				}
				public Integer FECHA_VINCULACIONLength(){
				    return null;
				}
				public Integer FECHA_VINCULACIONPrecision(){
				    return null;
				}
				public String FECHA_VINCULACIONDefault(){
				
					return null;
				
				}
				public String FECHA_VINCULACIONComment(){
				
				    return "";
				
				}
				public String FECHA_VINCULACIONPattern(){
				
					return "";
				
				}
				public String FECHA_VINCULACIONOriginalDbColumnName(){
				
					return "FECHA_VINCULACION";
				
				}

				
			    public String ESTADO_ENTIDAD;

				public String getESTADO_ENTIDAD () {
					return this.ESTADO_ENTIDAD;
				}

				public Boolean ESTADO_ENTIDADIsNullable(){
				    return true;
				}
				public Boolean ESTADO_ENTIDADIsKey(){
				    return false;
				}
				public Integer ESTADO_ENTIDADLength(){
				    return null;
				}
				public Integer ESTADO_ENTIDADPrecision(){
				    return null;
				}
				public String ESTADO_ENTIDADDefault(){
				
					return null;
				
				}
				public String ESTADO_ENTIDADComment(){
				
				    return "";
				
				}
				public String ESTADO_ENTIDADPattern(){
				
					return "";
				
				}
				public String ESTADO_ENTIDADOriginalDbColumnName(){
				
					return "ESTADO_ENTIDAD";
				
				}

				
			    public BigDecimal ID_UNICO_AFILIADO;

				public BigDecimal getID_UNICO_AFILIADO () {
					return this.ID_UNICO_AFILIADO;
				}

				public Boolean ID_UNICO_AFILIADOIsNullable(){
				    return true;
				}
				public Boolean ID_UNICO_AFILIADOIsKey(){
				    return false;
				}
				public Integer ID_UNICO_AFILIADOLength(){
				    return null;
				}
				public Integer ID_UNICO_AFILIADOPrecision(){
				    return null;
				}
				public String ID_UNICO_AFILIADODefault(){
				
					return "";
				
				}
				public String ID_UNICO_AFILIADOComment(){
				
				    return "";
				
				}
				public String ID_UNICO_AFILIADOPattern(){
				
					return "";
				
				}
				public String ID_UNICO_AFILIADOOriginalDbColumnName(){
				
					return "ID_UNICO_AFILIADO";
				
				}

				
			    public BigDecimal ID_UNICO_ENTIDAD;

				public BigDecimal getID_UNICO_ENTIDAD () {
					return this.ID_UNICO_ENTIDAD;
				}

				public Boolean ID_UNICO_ENTIDADIsNullable(){
				    return true;
				}
				public Boolean ID_UNICO_ENTIDADIsKey(){
				    return false;
				}
				public Integer ID_UNICO_ENTIDADLength(){
				    return null;
				}
				public Integer ID_UNICO_ENTIDADPrecision(){
				    return null;
				}
				public String ID_UNICO_ENTIDADDefault(){
				
					return "";
				
				}
				public String ID_UNICO_ENTIDADComment(){
				
				    return "";
				
				}
				public String ID_UNICO_ENTIDADPattern(){
				
					return "";
				
				}
				public String ID_UNICO_ENTIDADOriginalDbColumnName(){
				
					return "ID_UNICO_ENTIDAD";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public String CELULAR;

				public String getCELULAR () {
					return this.CELULAR;
				}

				public Boolean CELULARIsNullable(){
				    return true;
				}
				public Boolean CELULARIsKey(){
				    return false;
				}
				public Integer CELULARLength(){
				    return null;
				}
				public Integer CELULARPrecision(){
				    return null;
				}
				public String CELULARDefault(){
				
					return null;
				
				}
				public String CELULARComment(){
				
				    return "";
				
				}
				public String CELULARPattern(){
				
					return "";
				
				}
				public String CELULAROriginalDbColumnName(){
				
					return "CELULAR";
				
				}

				
			    public String FECHA_DEFUNCION;

				public String getFECHA_DEFUNCION () {
					return this.FECHA_DEFUNCION;
				}

				public Boolean FECHA_DEFUNCIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_DEFUNCIONIsKey(){
				    return false;
				}
				public Integer FECHA_DEFUNCIONLength(){
				    return null;
				}
				public Integer FECHA_DEFUNCIONPrecision(){
				    return null;
				}
				public String FECHA_DEFUNCIONDefault(){
				
					return null;
				
				}
				public String FECHA_DEFUNCIONComment(){
				
				    return "";
				
				}
				public String FECHA_DEFUNCIONPattern(){
				
					return "";
				
				}
				public String FECHA_DEFUNCIONOriginalDbColumnName(){
				
					return "FECHA_DEFUNCION";
				
				}

				
			    public String OBSERVACIONES;

				public String getOBSERVACIONES () {
					return this.OBSERVACIONES;
				}

				public Boolean OBSERVACIONESIsNullable(){
				    return true;
				}
				public Boolean OBSERVACIONESIsKey(){
				    return false;
				}
				public Integer OBSERVACIONESLength(){
				    return null;
				}
				public Integer OBSERVACIONESPrecision(){
				    return null;
				}
				public String OBSERVACIONESDefault(){
				
					return null;
				
				}
				public String OBSERVACIONESComment(){
				
				    return "";
				
				}
				public String OBSERVACIONESPattern(){
				
					return "";
				
				}
				public String OBSERVACIONESOriginalDbColumnName(){
				
					return "OBSERVACIONES";
				
				}

				
			    public String PLANAFILIACIONES;

				public String getPLANAFILIACIONES () {
					return this.PLANAFILIACIONES;
				}

				public Boolean PLANAFILIACIONESIsNullable(){
				    return true;
				}
				public Boolean PLANAFILIACIONESIsKey(){
				    return false;
				}
				public Integer PLANAFILIACIONESLength(){
				    return null;
				}
				public Integer PLANAFILIACIONESPrecision(){
				    return null;
				}
				public String PLANAFILIACIONESDefault(){
				
					return null;
				
				}
				public String PLANAFILIACIONESComment(){
				
				    return "";
				
				}
				public String PLANAFILIACIONESPattern(){
				
					return "";
				
				}
				public String PLANAFILIACIONESOriginalDbColumnName(){
				
					return "PLANAFILIACIONES";
				
				}

				
			    public Integer ID_BDUA;

				public Integer getID_BDUA () {
					return this.ID_BDUA;
				}

				public Boolean ID_BDUAIsNullable(){
				    return true;
				}
				public Boolean ID_BDUAIsKey(){
				    return false;
				}
				public Integer ID_BDUALength(){
				    return null;
				}
				public Integer ID_BDUAPrecision(){
				    return null;
				}
				public String ID_BDUADefault(){
				
					return null;
				
				}
				public String ID_BDUAComment(){
				
				    return "";
				
				}
				public String ID_BDUAPattern(){
				
					return "";
				
				}
				public String ID_BDUAOriginalDbColumnName(){
				
					return "ID_BDUA";
				
				}

				
			    public String MOTIVO_CAMBIO_ESTADO;

				public String getMOTIVO_CAMBIO_ESTADO () {
					return this.MOTIVO_CAMBIO_ESTADO;
				}

				public Boolean MOTIVO_CAMBIO_ESTADOIsNullable(){
				    return true;
				}
				public Boolean MOTIVO_CAMBIO_ESTADOIsKey(){
				    return false;
				}
				public Integer MOTIVO_CAMBIO_ESTADOLength(){
				    return null;
				}
				public Integer MOTIVO_CAMBIO_ESTADOPrecision(){
				    return null;
				}
				public String MOTIVO_CAMBIO_ESTADODefault(){
				
					return null;
				
				}
				public String MOTIVO_CAMBIO_ESTADOComment(){
				
				    return "";
				
				}
				public String MOTIVO_CAMBIO_ESTADOPattern(){
				
					return "";
				
				}
				public String MOTIVO_CAMBIO_ESTADOOriginalDbColumnName(){
				
					return "MOTIVO_CAMBIO_ESTADO";
				
				}

				
			    public String MOTIVO_CAMBIO_ESM;

				public String getMOTIVO_CAMBIO_ESM () {
					return this.MOTIVO_CAMBIO_ESM;
				}

				public Boolean MOTIVO_CAMBIO_ESMIsNullable(){
				    return true;
				}
				public Boolean MOTIVO_CAMBIO_ESMIsKey(){
				    return false;
				}
				public Integer MOTIVO_CAMBIO_ESMLength(){
				    return null;
				}
				public Integer MOTIVO_CAMBIO_ESMPrecision(){
				    return null;
				}
				public String MOTIVO_CAMBIO_ESMDefault(){
				
					return null;
				
				}
				public String MOTIVO_CAMBIO_ESMComment(){
				
				    return "";
				
				}
				public String MOTIVO_CAMBIO_ESMPattern(){
				
					return "";
				
				}
				public String MOTIVO_CAMBIO_ESMOriginalDbColumnName(){
				
					return "MOTIVO_CAMBIO_ESM";
				
				}

				
			    public String DISCAPACIDAD;

				public String getDISCAPACIDAD () {
					return this.DISCAPACIDAD;
				}

				public Boolean DISCAPACIDADIsNullable(){
				    return true;
				}
				public Boolean DISCAPACIDADIsKey(){
				    return false;
				}
				public Integer DISCAPACIDADLength(){
				    return null;
				}
				public Integer DISCAPACIDADPrecision(){
				    return null;
				}
				public String DISCAPACIDADDefault(){
				
					return null;
				
				}
				public String DISCAPACIDADComment(){
				
				    return "";
				
				}
				public String DISCAPACIDADPattern(){
				
					return "";
				
				}
				public String DISCAPACIDADOriginalDbColumnName(){
				
					return "DISCAPACIDAD";
				
				}

				
			    public String POBLACION_ESPECIAL;

				public String getPOBLACION_ESPECIAL () {
					return this.POBLACION_ESPECIAL;
				}

				public Boolean POBLACION_ESPECIALIsNullable(){
				    return true;
				}
				public Boolean POBLACION_ESPECIALIsKey(){
				    return false;
				}
				public Integer POBLACION_ESPECIALLength(){
				    return null;
				}
				public Integer POBLACION_ESPECIALPrecision(){
				    return null;
				}
				public String POBLACION_ESPECIALDefault(){
				
					return null;
				
				}
				public String POBLACION_ESPECIALComment(){
				
				    return "";
				
				}
				public String POBLACION_ESPECIALPattern(){
				
					return "";
				
				}
				public String POBLACION_ESPECIALOriginalDbColumnName(){
				
					return "POBLACION_ESPECIAL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
						this.ID_UNICO_PERSONA = (BigDecimal) dis.readObject();
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.SIGLA_SEXO = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.COD_PAIS_RESIDENCIA = readString(dis);
					
					this.COD_DEPTO_RESIDENCIA = readString(dis);
					
					this.COD_MCIPIO_RESIDENCIA = readString(dis);
					
					this.COD_LOC_RESIDENCIA = readString(dis);
					
					this.COD_PAIS_NAC = readString(dis);
					
					this.COD_DEPARTAMENTO_NAC = readString(dis);
					
					this.COD_MCIPIO_NAC = readString(dis);
					
					this.COD_PAIS_EXP = readString(dis);
					
					this.COD_DEPARTAMENTO_EXP = readString(dis);
					
					this.COD_MUNICIPIO_EXP = readString(dis);
					
					this.FECHA_EXPEDICION_DOCUMENTO = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.GSANGUINEOS = readString(dis);
					
					this.FACTOR_RH = readString(dis);
					
					this.SIGLA_NEDUCATIVOS = readString(dis);
					
					this.COD_ESM = readString(dis);
					
					this.SIGLA_ESM = readString(dis);
					
					this.COD_ETNICAS = readString(dis);
					
					this.NSOCIOECONOMICOS = readString(dis);
					
					this.SIGLA_OCUPACIONES = readString(dis);
					
					this.ESTATURA = readString(dis);
					
					this.SIGLA_TVIVIENDA = readString(dis);
					
					this.FECHA_CADUCIDAD = readString(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
					this.COD_GRADO = readString(dis);
					
					this.SIGLA_GRADO = readString(dis);
					
					this.SIGLA_UMILITAR = readString(dis);
					
					this.COD_UMILITAR = readString(dis);
					
					this.SIGLA_TVINCULACION = readString(dis);
					
					this.SIGLA_TREGIMEN = readString(dis);
					
					this.SIGLA_TAFILIADOS = readString(dis);
					
					this.SIGLA_ESTADO = readString(dis);
					
					this.DOCUMENTO_ENTIDAD = readString(dis);
					
						this.ENT_APO_PRINCIPAL = (BigDecimal) dis.readObject();
					
					this.FECHA_VINCULACION = readString(dis);
					
					this.ESTADO_ENTIDAD = readString(dis);
					
						this.ID_UNICO_AFILIADO = (BigDecimal) dis.readObject();
					
						this.ID_UNICO_ENTIDAD = (BigDecimal) dis.readObject();
					
					this.EMAIL = readString(dis);
					
					this.CELULAR = readString(dis);
					
					this.FECHA_DEFUNCION = readString(dis);
					
					this.OBSERVACIONES = readString(dis);
					
					this.PLANAFILIACIONES = readString(dis);
					
						this.ID_BDUA = readInteger(dis);
					
					this.MOTIVO_CAMBIO_ESTADO = readString(dis);
					
					this.MOTIVO_CAMBIO_ESM = readString(dis);
					
					this.DISCAPACIDAD = readString(dis);
					
					this.POBLACION_ESPECIAL = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
						this.ID_UNICO_PERSONA = (BigDecimal) dis.readObject();
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.SIGLA_SEXO = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.COD_PAIS_RESIDENCIA = readString(dis);
					
					this.COD_DEPTO_RESIDENCIA = readString(dis);
					
					this.COD_MCIPIO_RESIDENCIA = readString(dis);
					
					this.COD_LOC_RESIDENCIA = readString(dis);
					
					this.COD_PAIS_NAC = readString(dis);
					
					this.COD_DEPARTAMENTO_NAC = readString(dis);
					
					this.COD_MCIPIO_NAC = readString(dis);
					
					this.COD_PAIS_EXP = readString(dis);
					
					this.COD_DEPARTAMENTO_EXP = readString(dis);
					
					this.COD_MUNICIPIO_EXP = readString(dis);
					
					this.FECHA_EXPEDICION_DOCUMENTO = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.GSANGUINEOS = readString(dis);
					
					this.FACTOR_RH = readString(dis);
					
					this.SIGLA_NEDUCATIVOS = readString(dis);
					
					this.COD_ESM = readString(dis);
					
					this.SIGLA_ESM = readString(dis);
					
					this.COD_ETNICAS = readString(dis);
					
					this.NSOCIOECONOMICOS = readString(dis);
					
					this.SIGLA_OCUPACIONES = readString(dis);
					
					this.ESTATURA = readString(dis);
					
					this.SIGLA_TVIVIENDA = readString(dis);
					
					this.FECHA_CADUCIDAD = readString(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
					this.COD_GRADO = readString(dis);
					
					this.SIGLA_GRADO = readString(dis);
					
					this.SIGLA_UMILITAR = readString(dis);
					
					this.COD_UMILITAR = readString(dis);
					
					this.SIGLA_TVINCULACION = readString(dis);
					
					this.SIGLA_TREGIMEN = readString(dis);
					
					this.SIGLA_TAFILIADOS = readString(dis);
					
					this.SIGLA_ESTADO = readString(dis);
					
					this.DOCUMENTO_ENTIDAD = readString(dis);
					
						this.ENT_APO_PRINCIPAL = (BigDecimal) dis.readObject();
					
					this.FECHA_VINCULACION = readString(dis);
					
					this.ESTADO_ENTIDAD = readString(dis);
					
						this.ID_UNICO_AFILIADO = (BigDecimal) dis.readObject();
					
						this.ID_UNICO_ENTIDAD = (BigDecimal) dis.readObject();
					
					this.EMAIL = readString(dis);
					
					this.CELULAR = readString(dis);
					
					this.FECHA_DEFUNCION = readString(dis);
					
					this.OBSERVACIONES = readString(dis);
					
					this.PLANAFILIACIONES = readString(dis);
					
						this.ID_BDUA = readInteger(dis);
					
					this.MOTIVO_CAMBIO_ESTADO = readString(dis);
					
					this.MOTIVO_CAMBIO_ESM = readString(dis);
					
					this.DISCAPACIDAD = readString(dis);
					
					this.POBLACION_ESPECIAL = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID_UNICO_PERSONA);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.SIGLA_SEXO,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.COD_PAIS_RESIDENCIA,dos);
					
					// String
				
						writeString(this.COD_DEPTO_RESIDENCIA,dos);
					
					// String
				
						writeString(this.COD_MCIPIO_RESIDENCIA,dos);
					
					// String
				
						writeString(this.COD_LOC_RESIDENCIA,dos);
					
					// String
				
						writeString(this.COD_PAIS_NAC,dos);
					
					// String
				
						writeString(this.COD_DEPARTAMENTO_NAC,dos);
					
					// String
				
						writeString(this.COD_MCIPIO_NAC,dos);
					
					// String
				
						writeString(this.COD_PAIS_EXP,dos);
					
					// String
				
						writeString(this.COD_DEPARTAMENTO_EXP,dos);
					
					// String
				
						writeString(this.COD_MUNICIPIO_EXP,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_DOCUMENTO,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.GSANGUINEOS,dos);
					
					// String
				
						writeString(this.FACTOR_RH,dos);
					
					// String
				
						writeString(this.SIGLA_NEDUCATIVOS,dos);
					
					// String
				
						writeString(this.COD_ESM,dos);
					
					// String
				
						writeString(this.SIGLA_ESM,dos);
					
					// String
				
						writeString(this.COD_ETNICAS,dos);
					
					// String
				
						writeString(this.NSOCIOECONOMICOS,dos);
					
					// String
				
						writeString(this.SIGLA_OCUPACIONES,dos);
					
					// String
				
						writeString(this.ESTATURA,dos);
					
					// String
				
						writeString(this.SIGLA_TVIVIENDA,dos);
					
					// String
				
						writeString(this.FECHA_CADUCIDAD,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// String
				
						writeString(this.COD_GRADO,dos);
					
					// String
				
						writeString(this.SIGLA_GRADO,dos);
					
					// String
				
						writeString(this.SIGLA_UMILITAR,dos);
					
					// String
				
						writeString(this.COD_UMILITAR,dos);
					
					// String
				
						writeString(this.SIGLA_TVINCULACION,dos);
					
					// String
				
						writeString(this.SIGLA_TREGIMEN,dos);
					
					// String
				
						writeString(this.SIGLA_TAFILIADOS,dos);
					
					// String
				
						writeString(this.SIGLA_ESTADO,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTIDAD,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENT_APO_PRINCIPAL);
					
					// String
				
						writeString(this.FECHA_VINCULACION,dos);
					
					// String
				
						writeString(this.ESTADO_ENTIDAD,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID_UNICO_AFILIADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID_UNICO_ENTIDAD);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// String
				
						writeString(this.CELULAR,dos);
					
					// String
				
						writeString(this.FECHA_DEFUNCION,dos);
					
					// String
				
						writeString(this.OBSERVACIONES,dos);
					
					// String
				
						writeString(this.PLANAFILIACIONES,dos);
					
					// Integer
				
						writeInteger(this.ID_BDUA,dos);
					
					// String
				
						writeString(this.MOTIVO_CAMBIO_ESTADO,dos);
					
					// String
				
						writeString(this.MOTIVO_CAMBIO_ESM,dos);
					
					// String
				
						writeString(this.DISCAPACIDAD,dos);
					
					// String
				
						writeString(this.POBLACION_ESPECIAL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID_UNICO_PERSONA);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.SIGLA_SEXO,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.COD_PAIS_RESIDENCIA,dos);
					
					// String
				
						writeString(this.COD_DEPTO_RESIDENCIA,dos);
					
					// String
				
						writeString(this.COD_MCIPIO_RESIDENCIA,dos);
					
					// String
				
						writeString(this.COD_LOC_RESIDENCIA,dos);
					
					// String
				
						writeString(this.COD_PAIS_NAC,dos);
					
					// String
				
						writeString(this.COD_DEPARTAMENTO_NAC,dos);
					
					// String
				
						writeString(this.COD_MCIPIO_NAC,dos);
					
					// String
				
						writeString(this.COD_PAIS_EXP,dos);
					
					// String
				
						writeString(this.COD_DEPARTAMENTO_EXP,dos);
					
					// String
				
						writeString(this.COD_MUNICIPIO_EXP,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_DOCUMENTO,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.GSANGUINEOS,dos);
					
					// String
				
						writeString(this.FACTOR_RH,dos);
					
					// String
				
						writeString(this.SIGLA_NEDUCATIVOS,dos);
					
					// String
				
						writeString(this.COD_ESM,dos);
					
					// String
				
						writeString(this.SIGLA_ESM,dos);
					
					// String
				
						writeString(this.COD_ETNICAS,dos);
					
					// String
				
						writeString(this.NSOCIOECONOMICOS,dos);
					
					// String
				
						writeString(this.SIGLA_OCUPACIONES,dos);
					
					// String
				
						writeString(this.ESTATURA,dos);
					
					// String
				
						writeString(this.SIGLA_TVIVIENDA,dos);
					
					// String
				
						writeString(this.FECHA_CADUCIDAD,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// String
				
						writeString(this.COD_GRADO,dos);
					
					// String
				
						writeString(this.SIGLA_GRADO,dos);
					
					// String
				
						writeString(this.SIGLA_UMILITAR,dos);
					
					// String
				
						writeString(this.COD_UMILITAR,dos);
					
					// String
				
						writeString(this.SIGLA_TVINCULACION,dos);
					
					// String
				
						writeString(this.SIGLA_TREGIMEN,dos);
					
					// String
				
						writeString(this.SIGLA_TAFILIADOS,dos);
					
					// String
				
						writeString(this.SIGLA_ESTADO,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTIDAD,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENT_APO_PRINCIPAL);
					
					// String
				
						writeString(this.FECHA_VINCULACION,dos);
					
					// String
				
						writeString(this.ESTADO_ENTIDAD,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID_UNICO_AFILIADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID_UNICO_ENTIDAD);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// String
				
						writeString(this.CELULAR,dos);
					
					// String
				
						writeString(this.FECHA_DEFUNCION,dos);
					
					// String
				
						writeString(this.OBSERVACIONES,dos);
					
					// String
				
						writeString(this.PLANAFILIACIONES,dos);
					
					// Integer
				
						writeInteger(this.ID_BDUA,dos);
					
					// String
				
						writeString(this.MOTIVO_CAMBIO_ESTADO,dos);
					
					// String
				
						writeString(this.MOTIVO_CAMBIO_ESM,dos);
					
					// String
				
						writeString(this.DISCAPACIDAD,dos);
					
					// String
				
						writeString(this.POBLACION_ESPECIAL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_UNICO_PERSONA="+String.valueOf(ID_UNICO_PERSONA));
		sb.append(",PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",SIGLA_SEXO="+SIGLA_SEXO);
		sb.append(",DIRECCION="+DIRECCION);
		sb.append(",TELEFONO="+TELEFONO);
		sb.append(",COD_PAIS_RESIDENCIA="+COD_PAIS_RESIDENCIA);
		sb.append(",COD_DEPTO_RESIDENCIA="+COD_DEPTO_RESIDENCIA);
		sb.append(",COD_MCIPIO_RESIDENCIA="+COD_MCIPIO_RESIDENCIA);
		sb.append(",COD_LOC_RESIDENCIA="+COD_LOC_RESIDENCIA);
		sb.append(",COD_PAIS_NAC="+COD_PAIS_NAC);
		sb.append(",COD_DEPARTAMENTO_NAC="+COD_DEPARTAMENTO_NAC);
		sb.append(",COD_MCIPIO_NAC="+COD_MCIPIO_NAC);
		sb.append(",COD_PAIS_EXP="+COD_PAIS_EXP);
		sb.append(",COD_DEPARTAMENTO_EXP="+COD_DEPARTAMENTO_EXP);
		sb.append(",COD_MUNICIPIO_EXP="+COD_MUNICIPIO_EXP);
		sb.append(",FECHA_EXPEDICION_DOCUMENTO="+FECHA_EXPEDICION_DOCUMENTO);
		sb.append(",FECHA_NACIMIENTO="+FECHA_NACIMIENTO);
		sb.append(",GSANGUINEOS="+GSANGUINEOS);
		sb.append(",FACTOR_RH="+FACTOR_RH);
		sb.append(",SIGLA_NEDUCATIVOS="+SIGLA_NEDUCATIVOS);
		sb.append(",COD_ESM="+COD_ESM);
		sb.append(",SIGLA_ESM="+SIGLA_ESM);
		sb.append(",COD_ETNICAS="+COD_ETNICAS);
		sb.append(",NSOCIOECONOMICOS="+NSOCIOECONOMICOS);
		sb.append(",SIGLA_OCUPACIONES="+SIGLA_OCUPACIONES);
		sb.append(",ESTATURA="+ESTATURA);
		sb.append(",SIGLA_TVIVIENDA="+SIGLA_TVIVIENDA);
		sb.append(",FECHA_CADUCIDAD="+FECHA_CADUCIDAD);
		sb.append(",SIGLA_FUERZA="+SIGLA_FUERZA);
		sb.append(",COD_GRADO="+COD_GRADO);
		sb.append(",SIGLA_GRADO="+SIGLA_GRADO);
		sb.append(",SIGLA_UMILITAR="+SIGLA_UMILITAR);
		sb.append(",COD_UMILITAR="+COD_UMILITAR);
		sb.append(",SIGLA_TVINCULACION="+SIGLA_TVINCULACION);
		sb.append(",SIGLA_TREGIMEN="+SIGLA_TREGIMEN);
		sb.append(",SIGLA_TAFILIADOS="+SIGLA_TAFILIADOS);
		sb.append(",SIGLA_ESTADO="+SIGLA_ESTADO);
		sb.append(",DOCUMENTO_ENTIDAD="+DOCUMENTO_ENTIDAD);
		sb.append(",ENT_APO_PRINCIPAL="+String.valueOf(ENT_APO_PRINCIPAL));
		sb.append(",FECHA_VINCULACION="+FECHA_VINCULACION);
		sb.append(",ESTADO_ENTIDAD="+ESTADO_ENTIDAD);
		sb.append(",ID_UNICO_AFILIADO="+String.valueOf(ID_UNICO_AFILIADO));
		sb.append(",ID_UNICO_ENTIDAD="+String.valueOf(ID_UNICO_ENTIDAD));
		sb.append(",EMAIL="+EMAIL);
		sb.append(",CELULAR="+CELULAR);
		sb.append(",FECHA_DEFUNCION="+FECHA_DEFUNCION);
		sb.append(",OBSERVACIONES="+OBSERVACIONES);
		sb.append(",PLANAFILIACIONES="+PLANAFILIACIONES);
		sb.append(",ID_BDUA="+String.valueOf(ID_BDUA));
		sb.append(",MOTIVO_CAMBIO_ESTADO="+MOTIVO_CAMBIO_ESTADO);
		sb.append(",MOTIVO_CAMBIO_ESM="+MOTIVO_CAMBIO_ESM);
		sb.append(",DISCAPACIDAD="+DISCAPACIDAD);
		sb.append(",POBLACION_ESPECIAL="+POBLACION_ESPECIAL);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row5Struct row5 = new row5Struct();




	
	/**
	 * [tFileOutputDelimited_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_4", false);
		start_Hash.put("tFileOutputDelimited_4", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tFileOutputDelimited_4 = 0;
		

String fileName_tFileOutputDelimited_4 = "";
    fileName_tFileOutputDelimited_4 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_4 = null;
    String extension_tFileOutputDelimited_4 = null;
    String directory_tFileOutputDelimited_4 = null;
    if((fileName_tFileOutputDelimited_4.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_4.lastIndexOf(".") < fileName_tFileOutputDelimited_4.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_4 = fileName_tFileOutputDelimited_4;
            extension_tFileOutputDelimited_4 = "";
        } else {
            fullName_tFileOutputDelimited_4 = fileName_tFileOutputDelimited_4.substring(0, fileName_tFileOutputDelimited_4.lastIndexOf("."));
            extension_tFileOutputDelimited_4 = fileName_tFileOutputDelimited_4.substring(fileName_tFileOutputDelimited_4.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_4 = fileName_tFileOutputDelimited_4.substring(0, fileName_tFileOutputDelimited_4.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_4.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_4 = fileName_tFileOutputDelimited_4.substring(0, fileName_tFileOutputDelimited_4.lastIndexOf("."));
            extension_tFileOutputDelimited_4 = fileName_tFileOutputDelimited_4.substring(fileName_tFileOutputDelimited_4.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_4 = fileName_tFileOutputDelimited_4;
            extension_tFileOutputDelimited_4 = "";
        }
        directory_tFileOutputDelimited_4 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_4 = true;
    java.io.File filetFileOutputDelimited_4 = new java.io.File(fileName_tFileOutputDelimited_4);
    globalMap.put("tFileOutputDelimited_4_FILE_NAME",fileName_tFileOutputDelimited_4);
        if(filetFileOutputDelimited_4.exists()){
            isFileGenerated_tFileOutputDelimited_4 = false;
        }
            int nb_line_tFileOutputDelimited_4 = 0;
            int splitedFileNo_tFileOutputDelimited_4 = 0;
            int currentRow_tFileOutputDelimited_4 = 0;

            final String OUT_DELIM_tFileOutputDelimited_4 = /** Start field tFileOutputDelimited_4:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_4:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_4 = /** Start field tFileOutputDelimited_4:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_4:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_4 != null && directory_tFileOutputDelimited_4.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_4 = new java.io.File(directory_tFileOutputDelimited_4);
                        if(!dir_tFileOutputDelimited_4.exists()) {
                            dir_tFileOutputDelimited_4.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_4 = null;

                        outtFileOutputDelimited_4 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_4, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_4", outtFileOutputDelimited_4);
                                    if(filetFileOutputDelimited_4.length()==0){
                                        outtFileOutputDelimited_4.write("ID_UNICO_PERSONA");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("PRIMER_NOMBRE");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("SEGUNDO_NOMBRE");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("PRIMER_APELLIDO");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("SEGUNDO_APELLIDO");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("TIPO_DOCUMENTO");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("DOCUMENTO");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("SIGLA_SEXO");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("DIRECCION");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("TELEFONO");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("COD_PAIS_RESIDENCIA");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("COD_DEPTO_RESIDENCIA");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("COD_MCIPIO_RESIDENCIA");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("COD_LOC_RESIDENCIA");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("COD_PAIS_NAC");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("COD_DEPARTAMENTO_NAC");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("COD_MCIPIO_NAC");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("COD_PAIS_EXP");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("COD_DEPARTAMENTO_EXP");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("COD_MUNICIPIO_EXP");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("FECHA_EXPEDICION_DOCUMENTO");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("FECHA_NACIMIENTO");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("GSANGUINEOS");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("FACTOR_RH");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("SIGLA_NEDUCATIVOS");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("COD_ESM");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("SIGLA_ESM");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("COD_ETNICAS");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("NSOCIOECONOMICOS");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("SIGLA_OCUPACIONES");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("ESTATURA");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("SIGLA_TVIVIENDA");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("FECHA_CADUCIDAD");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("SIGLA_FUERZA");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("COD_GRADO");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("SIGLA_GRADO");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("SIGLA_UMILITAR");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("COD_UMILITAR");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("SIGLA_TVINCULACION");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("SIGLA_TREGIMEN");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("SIGLA_TAFILIADOS");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("SIGLA_ESTADO");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("DOCUMENTO_ENTIDAD");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("ENT_APO_PRINCIPAL");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("FECHA_VINCULACION");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("ESTADO_ENTIDAD");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("ID_UNICO_AFILIADO");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("ID_UNICO_ENTIDAD");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("EMAIL");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("CELULAR");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("FECHA_DEFUNCION");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("OBSERVACIONES");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("PLANAFILIACIONES");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("ID_BDUA");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("MOTIVO_CAMBIO_ESTADO");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("MOTIVO_CAMBIO_ESM");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("DISCAPACIDAD");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("POBLACION_ESPECIAL");
                                        outtFileOutputDelimited_4.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_4", nb_line_tFileOutputDelimited_4);

 



/**
 * [tFileOutputDelimited_4 begin ] stop
 */



	
	/**
	 * [tOracleInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_5", false);
		start_Hash.put("tOracleInput_5", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_5";
	
	
		int tos_count_tOracleInput_5 = 0;
		
	


	
		    int nb_line_tOracleInput_5 = 0;
		    java.sql.Connection conn_tOracleInput_5 = null;
				conn_tOracleInput_5 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_5 = false;
				boolean isConnectionWrapped_tOracleInput_5 = !(conn_tOracleInput_5 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_5.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_5 = null;
                if (isConnectionWrapped_tOracleInput_5) {
					unwrappedOraConn_tOracleInput_5 = conn_tOracleInput_5.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_5 != null) {
                        isTimeZoneNull_tOracleInput_5 = (unwrappedOraConn_tOracleInput_5.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_5 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_5).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_5) {
					java.sql.Statement stmtGetTZ_tOracleInput_5 = conn_tOracleInput_5.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_5 = stmtGetTZ_tOracleInput_5.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_5 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_5.next()) {
						sessionTimezone_tOracleInput_5 = rsGetTZ_tOracleInput_5.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_5 && unwrappedOraConn_tOracleInput_5 != null) {
                        unwrappedOraConn_tOracleInput_5.setSessionTimeZone(sessionTimezone_tOracleInput_5);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_5).setSessionTimeZone(sessionTimezone_tOracleInput_5);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_5 = conn_tOracleInput_5.createStatement();

		    String dbquery_tOracleInput_5 = "SELECT  VM.PERSONAS_ID AS ID_UNICO_PERSONA, \nreplace(replace(VM.PRIMER_NOMBRE,chr(10),''),chr(13),'') AS PRIMER_NOMBRE"
+",\nreplace(replace(VM.SEGUNDO_NOMBRE,chr(10),''),chr(13),'') AS SEGUNDO_NOMBRE,\nreplace(replace(VM.PRIMER_APELLIDO,chr("
+"10),''),chr(13),'') AS PRIMER_APELLIDO,\nreplace(replace(VM.SEGUNDO_APELLIDO,chr(10),''),chr(13),'') AS SEGUNDO_APELLIDO"
+",\nreplace(replace(VM.TIPO_DOCUMENTO,chr(10),''),chr(13),'') AS TIPO_DOCUMENTO,\nreplace(replace(VM.DOCUMENTO,chr(10),''"
+"),chr(13),'') AS DOCUMENTO,\nreplace(replace(VM.SIGLA_SEXO,chr(10),''),chr(13),'') AS SIGLA_SEXO,\nreplace(replace(VM.DI"
+"RECCION,chr(10),''),chr(13),'') AS DIRECCION, \nreplace(replace(VM.TELEFONO,chr(10),''),chr(13),'') AS TELEFONO,\nreplac"
+"e(replace(VM.CODIGO_PAIS_RES,chr(10),''),chr(13),'') AS COD_PAIS_RESIDENCIA,\nreplace(replace(VM.CODIGO_DEPTO_RESIDENCIA"
+",chr(10),''),chr(13),'') AS COD_DEPTO_RESIDENCIA,\nreplace(replace(VM.CODIGO_MUNICIPIO_RESIDENCIA,chr(10),''),chr(13),''"
+") AS COD_MCIPIO_RESIDENCIA,\nVM.CODLOCALIDAD AS COD_LOC_RESIDENCIA,\nVM.COD_PAIS_NAC AS COD_PAIS_NAC,\nVM.COD_DEPARTAMEN"
+"TO_NAC AS COD_DEPARTAMENTO_NAC,\nVM.COD_MUNICIPIO_NAC AS COD_MCIPIO_NAC,\nVM.COD_PAIS_EXP,\nVM.COD_DEPARTAMENTO_EXP,\nVM"
+".COD_MUNICIPIO_EXP,\nTO_CHAR(VM.FECHA_EXPEDICION,'DD/MM/YYYY') AS FECHA_EXPEDICION_DOCUMENTO,\nTO_CHAR(VM.FECHA_NACIMIEN"
+"TO,'DD/MM/YYYY') AS FECHA_NACIMIENTO,\nVM.GSANGUINEOS,\nVM.FACTOR_RH,\nVM.SIGLA_NEDUCATIVOS,\nVM.CODIGO_ESM  AS COD_ESM,"
+"\nVM.SIGLA_ADSCRITO AS SIGLA_ESM,\nVM.CODIGO_ETNICAS AS COD_ETNICAS,\nVM.NSOCIOECONOMICOS,\nVM.SIGLA_OCUPACIONES,\nTO_CH"
+"AR(VM.ESTATURA, 'fm0.00') AS ESTATURA,\nVM.SIGLA_TVIVIENDA,\nTO_CHAR(VM.FECHA_CADUCIDAD,'DD/MM/YYYY') AS FECHA_CADUCIDAD"
+",\nVM.SIGLA_FUERZA,\nVM.CODIGO_GRADO AS COD_GRADO,\nVM.SIGLA_GRADO AS SIGLA_GRADO,\nVM.SIGLA_UMILITAR AS SIGLA_UMILITAR,"
+"\nVM.CODIGO_UMILITAR AS COD_UMILITAR,\nVM.TVINCULACION_SIGLA AS SIGLA_TVINCULACION,\nVM.SIGLA_TREGIMEN,\nVM.SIGLA_TAFILI"
+"ADOS,\nVM.ESTADO_SIGLA AS SIGLA_ESTADO,\nVM.DOCUMENTO_ENTIDAD,\nVM.ENTA_PRINCIPAL AS ENT_APO_PRINCIPAL,\nTO_CHAR(VM.FECH"
+"A_INGRESO,'DD/MM/YYYY') AS FECHA_VINCULACION,\nVM.ESTADO_ENTIDAD,\nVM.GA AS ID_UNICO_AFILIADO, \nVM.GAR AS ID_UNICO_ENTI"
+"DAD,\nVM.EMAIL,\nVM.CELULAR,\nVM.FECHA_DEFUNCION,\nreplace(replace(REPLACE(VM.OBSERVACIONES,';',','),chr(10),''),chr(13)"
+",'') AS OBSERVACIONES,\nreplace(replace(VM.PLANAFILIACIONES,chr(10),''),chr(13),'') AS PLANAFILIACIONES,\nVM.ID_BDUA,\n'"
+"' AS MOTIVO_CAMBIO_ESTADO,\n'' AS MOTIVO_CAMBIO_ESM,\nVM.SIGLA_DISCAPACIDAD AS DISCAPACIDAD,\nGPE.CODIGO AS POBLACION_ES"
+"PECIAL\nFROM  VM_PERSONAS VM\nINNER JOIN GEN_PERSONAS gp ON GP.ID = VM.PERSONAS_ID \nLEFT JOIN GEN_POBLACION_ESPECIAL gp"
+"e ON GPE.ID = GP.PESPECIAL_ID \nINNER JOIN AFI_CARCHIVOS CA ON CA.DOCUMENTO = VM.DOCUMENTO AND  TRIM(UPPER(CA.TDOCUMENTO"
+"S)) = TRIM(UPPER(VM.TIPO_DOCUMENTO))\nAND TRIM(UPPER(CA.PRIMER_NOMBRE)) = TRIM(UPPER(VM.PRIMER_NOMBRE)) AND TRIM(UPPER(C"
+"A.PRIMER_APELLIDO)) = TRIM(UPPER(VM.PRIMER_APELLIDO))\nWHERE VM.AFILIADO_ESTREGISTRO_ID = 1 AND CA.ARCHIVOS_ID = " + context.infoIdArchivo ;
		    

		    globalMap.put("tOracleInput_5_QUERY",dbquery_tOracleInput_5);

		    java.sql.ResultSet rs_tOracleInput_5 = null;

		    try {
		    	rs_tOracleInput_5 = stmt_tOracleInput_5.executeQuery(dbquery_tOracleInput_5);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_5 = rs_tOracleInput_5.getMetaData();
		    	int colQtyInRs_tOracleInput_5 = rsmd_tOracleInput_5.getColumnCount();

		    String tmpContent_tOracleInput_5 = null;
		    
		    
		    while (rs_tOracleInput_5.next()) {
		        nb_line_tOracleInput_5++;
		        
							if(colQtyInRs_tOracleInput_5 < 1) {
								row5.ID_UNICO_PERSONA = null;
							} else {
		                          
					if(rs_tOracleInput_5.getObject(1) != null) {
						row5.ID_UNICO_PERSONA = rs_tOracleInput_5.getBigDecimal(1);
					} else {
				
						row5.ID_UNICO_PERSONA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_5 < 2) {
								row5.PRIMER_NOMBRE = null;
							} else {
	                         		
        	row5.PRIMER_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 3) {
								row5.SEGUNDO_NOMBRE = null;
							} else {
	                         		
        	row5.SEGUNDO_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 4) {
								row5.PRIMER_APELLIDO = null;
							} else {
	                         		
        	row5.PRIMER_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 5) {
								row5.SEGUNDO_APELLIDO = null;
							} else {
	                         		
        	row5.SEGUNDO_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 6) {
								row5.TIPO_DOCUMENTO = null;
							} else {
	                         		
        	row5.TIPO_DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 7) {
								row5.DOCUMENTO = null;
							} else {
	                         		
        	row5.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 8) {
								row5.SIGLA_SEXO = null;
							} else {
	                         		
        	row5.SIGLA_SEXO = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 8, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 9) {
								row5.DIRECCION = null;
							} else {
	                         		
        	row5.DIRECCION = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 10) {
								row5.TELEFONO = null;
							} else {
	                         		
        	row5.TELEFONO = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 11) {
								row5.COD_PAIS_RESIDENCIA = null;
							} else {
	                         		
        	row5.COD_PAIS_RESIDENCIA = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 11, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 12) {
								row5.COD_DEPTO_RESIDENCIA = null;
							} else {
	                         		
        	row5.COD_DEPTO_RESIDENCIA = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 13) {
								row5.COD_MCIPIO_RESIDENCIA = null;
							} else {
	                         		
        	row5.COD_MCIPIO_RESIDENCIA = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 13, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 14) {
								row5.COD_LOC_RESIDENCIA = null;
							} else {
	                         		
        	row5.COD_LOC_RESIDENCIA = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 14, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 15) {
								row5.COD_PAIS_NAC = null;
							} else {
	                         		
        	row5.COD_PAIS_NAC = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 15, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 16) {
								row5.COD_DEPARTAMENTO_NAC = null;
							} else {
	                         		
        	row5.COD_DEPARTAMENTO_NAC = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 16, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 17) {
								row5.COD_MCIPIO_NAC = null;
							} else {
	                         		
        	row5.COD_MCIPIO_NAC = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 17, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 18) {
								row5.COD_PAIS_EXP = null;
							} else {
	                         		
        	row5.COD_PAIS_EXP = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 18, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 19) {
								row5.COD_DEPARTAMENTO_EXP = null;
							} else {
	                         		
        	row5.COD_DEPARTAMENTO_EXP = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 19, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 20) {
								row5.COD_MUNICIPIO_EXP = null;
							} else {
	                         		
        	row5.COD_MUNICIPIO_EXP = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 20, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 21) {
								row5.FECHA_EXPEDICION_DOCUMENTO = null;
							} else {
	                         		
        	row5.FECHA_EXPEDICION_DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 21, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 22) {
								row5.FECHA_NACIMIENTO = null;
							} else {
	                         		
        	row5.FECHA_NACIMIENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 22, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 23) {
								row5.GSANGUINEOS = null;
							} else {
	                         		
        	row5.GSANGUINEOS = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 23, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 24) {
								row5.FACTOR_RH = null;
							} else {
	                         		
        	row5.FACTOR_RH = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 24, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 25) {
								row5.SIGLA_NEDUCATIVOS = null;
							} else {
	                         		
        	row5.SIGLA_NEDUCATIVOS = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 25, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 26) {
								row5.COD_ESM = null;
							} else {
	                         		
        	row5.COD_ESM = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 26, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 27) {
								row5.SIGLA_ESM = null;
							} else {
	                         		
        	row5.SIGLA_ESM = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 27, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 28) {
								row5.COD_ETNICAS = null;
							} else {
	                         		
        	row5.COD_ETNICAS = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 28, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 29) {
								row5.NSOCIOECONOMICOS = null;
							} else {
	                         		
        	row5.NSOCIOECONOMICOS = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 29, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 30) {
								row5.SIGLA_OCUPACIONES = null;
							} else {
	                         		
        	row5.SIGLA_OCUPACIONES = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 30, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 31) {
								row5.ESTATURA = null;
							} else {
	                         		
        	row5.ESTATURA = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 31, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 32) {
								row5.SIGLA_TVIVIENDA = null;
							} else {
	                         		
        	row5.SIGLA_TVIVIENDA = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 32, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 33) {
								row5.FECHA_CADUCIDAD = null;
							} else {
	                         		
        	row5.FECHA_CADUCIDAD = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 33, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 34) {
								row5.SIGLA_FUERZA = null;
							} else {
	                         		
        	row5.SIGLA_FUERZA = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 34, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 35) {
								row5.COD_GRADO = null;
							} else {
	                         		
        	row5.COD_GRADO = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 35, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 36) {
								row5.SIGLA_GRADO = null;
							} else {
	                         		
        	row5.SIGLA_GRADO = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 36, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 37) {
								row5.SIGLA_UMILITAR = null;
							} else {
	                         		
        	row5.SIGLA_UMILITAR = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 37, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 38) {
								row5.COD_UMILITAR = null;
							} else {
	                         		
        	row5.COD_UMILITAR = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 38, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 39) {
								row5.SIGLA_TVINCULACION = null;
							} else {
	                         		
        	row5.SIGLA_TVINCULACION = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 39, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 40) {
								row5.SIGLA_TREGIMEN = null;
							} else {
	                         		
        	row5.SIGLA_TREGIMEN = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 40, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 41) {
								row5.SIGLA_TAFILIADOS = null;
							} else {
	                         		
        	row5.SIGLA_TAFILIADOS = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 41, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 42) {
								row5.SIGLA_ESTADO = null;
							} else {
	                         		
        	row5.SIGLA_ESTADO = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 42, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 43) {
								row5.DOCUMENTO_ENTIDAD = null;
							} else {
	                         		
        	row5.DOCUMENTO_ENTIDAD = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 43, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 44) {
								row5.ENT_APO_PRINCIPAL = null;
							} else {
		                          
					if(rs_tOracleInput_5.getObject(44) != null) {
						row5.ENT_APO_PRINCIPAL = rs_tOracleInput_5.getBigDecimal(44);
					} else {
				
						row5.ENT_APO_PRINCIPAL = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_5 < 45) {
								row5.FECHA_VINCULACION = null;
							} else {
	                         		
        	row5.FECHA_VINCULACION = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 45, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 46) {
								row5.ESTADO_ENTIDAD = null;
							} else {
	                         		
        	row5.ESTADO_ENTIDAD = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 46, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 47) {
								row5.ID_UNICO_AFILIADO = null;
							} else {
		                          
					if(rs_tOracleInput_5.getObject(47) != null) {
						row5.ID_UNICO_AFILIADO = rs_tOracleInput_5.getBigDecimal(47);
					} else {
				
						row5.ID_UNICO_AFILIADO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_5 < 48) {
								row5.ID_UNICO_ENTIDAD = null;
							} else {
		                          
					if(rs_tOracleInput_5.getObject(48) != null) {
						row5.ID_UNICO_ENTIDAD = rs_tOracleInput_5.getBigDecimal(48);
					} else {
				
						row5.ID_UNICO_ENTIDAD = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_5 < 49) {
								row5.EMAIL = null;
							} else {
	                         		
        	row5.EMAIL = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 49, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 50) {
								row5.CELULAR = null;
							} else {
	                         		
        	row5.CELULAR = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 50, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 51) {
								row5.FECHA_DEFUNCION = null;
							} else {
	                         		
        	row5.FECHA_DEFUNCION = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 51, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 52) {
								row5.OBSERVACIONES = null;
							} else {
	                         		
        	row5.OBSERVACIONES = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 52, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 53) {
								row5.PLANAFILIACIONES = null;
							} else {
	                         		
        	row5.PLANAFILIACIONES = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 53, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 54) {
								row5.ID_BDUA = null;
							} else {
		                          
					if(rs_tOracleInput_5.getObject(54) != null) {
						row5.ID_BDUA = rs_tOracleInput_5.getInt(54);
					} else {
				
						row5.ID_BDUA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_5 < 55) {
								row5.MOTIVO_CAMBIO_ESTADO = null;
							} else {
	                         		
        	row5.MOTIVO_CAMBIO_ESTADO = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 55, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 56) {
								row5.MOTIVO_CAMBIO_ESM = null;
							} else {
	                         		
        	row5.MOTIVO_CAMBIO_ESM = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 56, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 57) {
								row5.DISCAPACIDAD = null;
							} else {
	                         		
        	row5.DISCAPACIDAD = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 57, false);
		                    }
							if(colQtyInRs_tOracleInput_5 < 58) {
								row5.POBLACION_ESPECIAL = null;
							} else {
	                         		
        	row5.POBLACION_ESPECIAL = routines.system.JDBCUtil.getString(rs_tOracleInput_5, 58, false);
		                    }
					




 



/**
 * [tOracleInput_5 begin ] stop
 */
	
	/**
	 * [tOracleInput_5 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 


	tos_count_tOracleInput_5++;

/**
 * [tOracleInput_5 main ] stop
 */
	
	/**
	 * [tOracleInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 



/**
 * [tOracleInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_4 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_4 = new StringBuilder();
                            if(row5.ID_UNICO_PERSONA != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.ID_UNICO_PERSONA.toPlainString()
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.PRIMER_NOMBRE != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.PRIMER_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.SEGUNDO_NOMBRE != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.SEGUNDO_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.PRIMER_APELLIDO != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.PRIMER_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.SEGUNDO_APELLIDO != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.SEGUNDO_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.TIPO_DOCUMENTO != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.TIPO_DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.DOCUMENTO != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.SIGLA_SEXO != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.SIGLA_SEXO
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.DIRECCION != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.DIRECCION
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.TELEFONO != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.TELEFONO
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.COD_PAIS_RESIDENCIA != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.COD_PAIS_RESIDENCIA
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.COD_DEPTO_RESIDENCIA != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.COD_DEPTO_RESIDENCIA
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.COD_MCIPIO_RESIDENCIA != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.COD_MCIPIO_RESIDENCIA
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.COD_LOC_RESIDENCIA != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.COD_LOC_RESIDENCIA
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.COD_PAIS_NAC != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.COD_PAIS_NAC
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.COD_DEPARTAMENTO_NAC != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.COD_DEPARTAMENTO_NAC
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.COD_MCIPIO_NAC != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.COD_MCIPIO_NAC
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.COD_PAIS_EXP != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.COD_PAIS_EXP
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.COD_DEPARTAMENTO_EXP != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.COD_DEPARTAMENTO_EXP
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.COD_MUNICIPIO_EXP != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.COD_MUNICIPIO_EXP
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.FECHA_EXPEDICION_DOCUMENTO != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.FECHA_EXPEDICION_DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.FECHA_NACIMIENTO != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.FECHA_NACIMIENTO
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.GSANGUINEOS != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.GSANGUINEOS
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.FACTOR_RH != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.FACTOR_RH
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.SIGLA_NEDUCATIVOS != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.SIGLA_NEDUCATIVOS
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.COD_ESM != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.COD_ESM
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.SIGLA_ESM != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.SIGLA_ESM
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.COD_ETNICAS != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.COD_ETNICAS
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.NSOCIOECONOMICOS != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.NSOCIOECONOMICOS
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.SIGLA_OCUPACIONES != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.SIGLA_OCUPACIONES
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.ESTATURA != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.ESTATURA
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.SIGLA_TVIVIENDA != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.SIGLA_TVIVIENDA
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.FECHA_CADUCIDAD != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.FECHA_CADUCIDAD
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.SIGLA_FUERZA != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.SIGLA_FUERZA
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.COD_GRADO != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.COD_GRADO
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.SIGLA_GRADO != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.SIGLA_GRADO
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.SIGLA_UMILITAR != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.SIGLA_UMILITAR
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.COD_UMILITAR != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.COD_UMILITAR
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.SIGLA_TVINCULACION != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.SIGLA_TVINCULACION
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.SIGLA_TREGIMEN != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.SIGLA_TREGIMEN
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.SIGLA_TAFILIADOS != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.SIGLA_TAFILIADOS
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.SIGLA_ESTADO != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.SIGLA_ESTADO
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.DOCUMENTO_ENTIDAD != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.DOCUMENTO_ENTIDAD
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.ENT_APO_PRINCIPAL != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.ENT_APO_PRINCIPAL.toPlainString()
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.FECHA_VINCULACION != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.FECHA_VINCULACION
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.ESTADO_ENTIDAD != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.ESTADO_ENTIDAD
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.ID_UNICO_AFILIADO != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.ID_UNICO_AFILIADO.toPlainString()
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.ID_UNICO_ENTIDAD != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.ID_UNICO_ENTIDAD.toPlainString()
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.EMAIL != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.EMAIL
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.CELULAR != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.CELULAR
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.FECHA_DEFUNCION != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.FECHA_DEFUNCION
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.OBSERVACIONES != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.OBSERVACIONES
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.PLANAFILIACIONES != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.PLANAFILIACIONES
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.ID_BDUA != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.ID_BDUA
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.MOTIVO_CAMBIO_ESTADO != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.MOTIVO_CAMBIO_ESTADO
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.MOTIVO_CAMBIO_ESM != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.MOTIVO_CAMBIO_ESM
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.DISCAPACIDAD != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.DISCAPACIDAD
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row5.POBLACION_ESPECIAL != null) {
                        sb_tFileOutputDelimited_4.append(
                            row5.POBLACION_ESPECIAL
                        );
                            }
                    sb_tFileOutputDelimited_4.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_4);


                    nb_line_tFileOutputDelimited_4++;
                    resourceMap.put("nb_line_tFileOutputDelimited_4", nb_line_tFileOutputDelimited_4);

                        outtFileOutputDelimited_4.write(sb_tFileOutputDelimited_4.toString());




 


	tos_count_tFileOutputDelimited_4++;

/**
 * [tFileOutputDelimited_4 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_4";
	
	

 



/**
 * [tFileOutputDelimited_4 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_4";
	
	

 



/**
 * [tFileOutputDelimited_4 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 



/**
 * [tOracleInput_5 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_5 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

}
}finally{
	if (rs_tOracleInput_5 != null) {
		rs_tOracleInput_5.close();
	}
	if (stmt_tOracleInput_5 != null) {
		stmt_tOracleInput_5.close();
	}
}

globalMap.put("tOracleInput_5_NB_LINE",nb_line_tOracleInput_5);
 

ok_Hash.put("tOracleInput_5", true);
end_Hash.put("tOracleInput_5", System.currentTimeMillis());

   			if (((Integer)globalMap.get("tOracleOutput_2_NB_LINE_INSERTED"))> ((Integer)globalMap.get("tOracleInput_5_NB_LINE"))) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If13", 0, "true");
					}
				tOracleInput_6Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If13", 0, "false");
					}   	 
   				}



/**
 * [tOracleInput_5 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_4 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_4";
	
	



		
			
					if(outtFileOutputDelimited_4!=null) {
						outtFileOutputDelimited_4.flush();
						outtFileOutputDelimited_4.close();
					}
				
				globalMap.put("tFileOutputDelimited_4_NB_LINE",nb_line_tFileOutputDelimited_4);
				globalMap.put("tFileOutputDelimited_4_FILE_NAME",fileName_tFileOutputDelimited_4);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_4", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_4", true);
end_Hash.put("tFileOutputDelimited_4", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk14", 0, "ok");
				}
				tFixedFlowInput_2Process(globalMap);



/**
 * [tFileOutputDelimited_4 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_5 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 



/**
 * [tOracleInput_5 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_4 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_4";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_4") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_4 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_4");
						if(outtFileOutputDelimited_4!=null) {
							outtFileOutputDelimited_4.flush();
							outtFileOutputDelimited_4.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public String TDOCUMENTOS;

				public String getTDOCUMENTOS () {
					return this.TDOCUMENTOS;
				}

				public Boolean TDOCUMENTOSIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOSIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOSLength(){
				    return null;
				}
				public Integer TDOCUMENTOSPrecision(){
				    return null;
				}
				public String TDOCUMENTOSDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOSComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOSPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOSOriginalDbColumnName(){
				
					return "TDOCUMENTOS";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return null;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return null;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return null;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return null;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return null;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return null;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return null;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return null;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return null;
				}
				public Integer ERRORPrecision(){
				    return null;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TDOCUMENTOS = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TDOCUMENTOS = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TDOCUMENTOS,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TDOCUMENTOS,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS="+TDOCUMENTOS);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row9Struct row9 = new row9Struct();




	
	/**
	 * [tFileOutputDelimited_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_5", false);
		start_Hash.put("tFileOutputDelimited_5", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tFileOutputDelimited_5 = 0;
		

String fileName_tFileOutputDelimited_5 = "";
    fileName_tFileOutputDelimited_5 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+"ERRORES_"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_5 = null;
    String extension_tFileOutputDelimited_5 = null;
    String directory_tFileOutputDelimited_5 = null;
    if((fileName_tFileOutputDelimited_5.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_5.lastIndexOf(".") < fileName_tFileOutputDelimited_5.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_5 = fileName_tFileOutputDelimited_5;
            extension_tFileOutputDelimited_5 = "";
        } else {
            fullName_tFileOutputDelimited_5 = fileName_tFileOutputDelimited_5.substring(0, fileName_tFileOutputDelimited_5.lastIndexOf("."));
            extension_tFileOutputDelimited_5 = fileName_tFileOutputDelimited_5.substring(fileName_tFileOutputDelimited_5.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_5 = fileName_tFileOutputDelimited_5.substring(0, fileName_tFileOutputDelimited_5.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_5.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_5 = fileName_tFileOutputDelimited_5.substring(0, fileName_tFileOutputDelimited_5.lastIndexOf("."));
            extension_tFileOutputDelimited_5 = fileName_tFileOutputDelimited_5.substring(fileName_tFileOutputDelimited_5.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_5 = fileName_tFileOutputDelimited_5;
            extension_tFileOutputDelimited_5 = "";
        }
        directory_tFileOutputDelimited_5 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_5 = true;
    java.io.File filetFileOutputDelimited_5 = new java.io.File(fileName_tFileOutputDelimited_5);
    globalMap.put("tFileOutputDelimited_5_FILE_NAME",fileName_tFileOutputDelimited_5);
        if(filetFileOutputDelimited_5.exists()){
            isFileGenerated_tFileOutputDelimited_5 = false;
        }
            int nb_line_tFileOutputDelimited_5 = 0;
            int splitedFileNo_tFileOutputDelimited_5 = 0;
            int currentRow_tFileOutputDelimited_5 = 0;

            final String OUT_DELIM_tFileOutputDelimited_5 = /** Start field tFileOutputDelimited_5:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_5:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_5 = /** Start field tFileOutputDelimited_5:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_5:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_5 != null && directory_tFileOutputDelimited_5.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_5 = new java.io.File(directory_tFileOutputDelimited_5);
                        if(!dir_tFileOutputDelimited_5.exists()) {
                            dir_tFileOutputDelimited_5.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_5 = null;

                        outtFileOutputDelimited_5 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_5, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_5", outtFileOutputDelimited_5);
                                    if(filetFileOutputDelimited_5.length()==0){
                                        outtFileOutputDelimited_5.write("TDOCUMENTOS");
                                            outtFileOutputDelimited_5.write(OUT_DELIM_tFileOutputDelimited_5);
                                        outtFileOutputDelimited_5.write("DOCUMENTO");
                                            outtFileOutputDelimited_5.write(OUT_DELIM_tFileOutputDelimited_5);
                                        outtFileOutputDelimited_5.write("PRIMER_NOMBRE");
                                            outtFileOutputDelimited_5.write(OUT_DELIM_tFileOutputDelimited_5);
                                        outtFileOutputDelimited_5.write("SEGUNDO_NOMBRE");
                                            outtFileOutputDelimited_5.write(OUT_DELIM_tFileOutputDelimited_5);
                                        outtFileOutputDelimited_5.write("PRIMER_APELLIDO");
                                            outtFileOutputDelimited_5.write(OUT_DELIM_tFileOutputDelimited_5);
                                        outtFileOutputDelimited_5.write("SEGUNDO_APELLIDO");
                                            outtFileOutputDelimited_5.write(OUT_DELIM_tFileOutputDelimited_5);
                                        outtFileOutputDelimited_5.write("ERROR");
                                        outtFileOutputDelimited_5.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_5);
                                        outtFileOutputDelimited_5.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_5", nb_line_tFileOutputDelimited_5);

 



/**
 * [tFileOutputDelimited_5 begin ] stop
 */



	
	/**
	 * [tOracleInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_6", false);
		start_Hash.put("tOracleInput_6", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_6";
	
	
		int tos_count_tOracleInput_6 = 0;
		
	


	
		    int nb_line_tOracleInput_6 = 0;
		    java.sql.Connection conn_tOracleInput_6 = null;
				conn_tOracleInput_6 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_6 = false;
				boolean isConnectionWrapped_tOracleInput_6 = !(conn_tOracleInput_6 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_6.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_6 = null;
                if (isConnectionWrapped_tOracleInput_6) {
					unwrappedOraConn_tOracleInput_6 = conn_tOracleInput_6.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_6 != null) {
                        isTimeZoneNull_tOracleInput_6 = (unwrappedOraConn_tOracleInput_6.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_6 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_6).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_6) {
					java.sql.Statement stmtGetTZ_tOracleInput_6 = conn_tOracleInput_6.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_6 = stmtGetTZ_tOracleInput_6.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_6 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_6.next()) {
						sessionTimezone_tOracleInput_6 = rsGetTZ_tOracleInput_6.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_6 && unwrappedOraConn_tOracleInput_6 != null) {
                        unwrappedOraConn_tOracleInput_6.setSessionTimeZone(sessionTimezone_tOracleInput_6);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_6).setSessionTimeZone(sessionTimezone_tOracleInput_6);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_6 = conn_tOracleInput_6.createStatement();

		    String dbquery_tOracleInput_6 = "SELECT\nCA.TDOCUMENTOS,\nCA.DOCUMENTO,\nCA.PRIMER_NOMBRE,\nCA.SEGUNDO_APELLIDO,\nCA.PRIMER_APELLIDO,\nCA.SEGUNDO_APELLI"
+"DO,\n'NO ENCOTRADO' AS ERROR\nFROM AFI_CARCHIVOS CA\nWHERE NOT EXISTS(SELECT * FROM VM_PERSONAS VP \n                WHE"
+"RE CA.DOCUMENTO = VP.DOCUMENTO AND  \n                      TRIM(UPPER(CA.TDOCUMENTOS)) = TRIM(UPPER(VP.TIPO_DOCUMENTO))"
+"AND \n                      TRIM(UPPER(CA.PRIMER_NOMBRE)) = TRIM(UPPER(VP.PRIMER_NOMBRE)) AND \n                      TR"
+"IM(UPPER(CA.PRIMER_APELLIDO)) = TRIM(UPPER(VP.PRIMER_APELLIDO))) AND CA.ARCHIVOS_ID = " + context.infoIdArchivo;
		    

		    globalMap.put("tOracleInput_6_QUERY",dbquery_tOracleInput_6);

		    java.sql.ResultSet rs_tOracleInput_6 = null;

		    try {
		    	rs_tOracleInput_6 = stmt_tOracleInput_6.executeQuery(dbquery_tOracleInput_6);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_6 = rs_tOracleInput_6.getMetaData();
		    	int colQtyInRs_tOracleInput_6 = rsmd_tOracleInput_6.getColumnCount();

		    String tmpContent_tOracleInput_6 = null;
		    
		    
		    while (rs_tOracleInput_6.next()) {
		        nb_line_tOracleInput_6++;
		        
							if(colQtyInRs_tOracleInput_6 < 1) {
								row9.TDOCUMENTOS = null;
							} else {
	                         		
        	row9.TDOCUMENTOS = routines.system.JDBCUtil.getString(rs_tOracleInput_6, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_6 < 2) {
								row9.DOCUMENTO = null;
							} else {
	                         		
        	row9.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_6, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_6 < 3) {
								row9.PRIMER_NOMBRE = null;
							} else {
	                         		
        	row9.PRIMER_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_6, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_6 < 4) {
								row9.SEGUNDO_NOMBRE = null;
							} else {
	                         		
        	row9.SEGUNDO_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_6, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_6 < 5) {
								row9.PRIMER_APELLIDO = null;
							} else {
	                         		
        	row9.PRIMER_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_6, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_6 < 6) {
								row9.SEGUNDO_APELLIDO = null;
							} else {
	                         		
        	row9.SEGUNDO_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_6, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_6 < 7) {
								row9.ERROR = null;
							} else {
	                         		
        	row9.ERROR = routines.system.JDBCUtil.getString(rs_tOracleInput_6, 7, false);
		                    }
					




 



/**
 * [tOracleInput_6 begin ] stop
 */
	
	/**
	 * [tOracleInput_6 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 


	tos_count_tOracleInput_6++;

/**
 * [tOracleInput_6 main ] stop
 */
	
	/**
	 * [tOracleInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 



/**
 * [tOracleInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_5 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_5 = new StringBuilder();
                            if(row9.TDOCUMENTOS != null) {
                        sb_tFileOutputDelimited_5.append(
                            row9.TDOCUMENTOS
                        );
                            }
                            sb_tFileOutputDelimited_5.append(OUT_DELIM_tFileOutputDelimited_5);
                            if(row9.DOCUMENTO != null) {
                        sb_tFileOutputDelimited_5.append(
                            row9.DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_5.append(OUT_DELIM_tFileOutputDelimited_5);
                            if(row9.PRIMER_NOMBRE != null) {
                        sb_tFileOutputDelimited_5.append(
                            row9.PRIMER_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_5.append(OUT_DELIM_tFileOutputDelimited_5);
                            if(row9.SEGUNDO_NOMBRE != null) {
                        sb_tFileOutputDelimited_5.append(
                            row9.SEGUNDO_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_5.append(OUT_DELIM_tFileOutputDelimited_5);
                            if(row9.PRIMER_APELLIDO != null) {
                        sb_tFileOutputDelimited_5.append(
                            row9.PRIMER_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_5.append(OUT_DELIM_tFileOutputDelimited_5);
                            if(row9.SEGUNDO_APELLIDO != null) {
                        sb_tFileOutputDelimited_5.append(
                            row9.SEGUNDO_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_5.append(OUT_DELIM_tFileOutputDelimited_5);
                            if(row9.ERROR != null) {
                        sb_tFileOutputDelimited_5.append(
                            row9.ERROR
                        );
                            }
                    sb_tFileOutputDelimited_5.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_5);


                    nb_line_tFileOutputDelimited_5++;
                    resourceMap.put("nb_line_tFileOutputDelimited_5", nb_line_tFileOutputDelimited_5);

                        outtFileOutputDelimited_5.write(sb_tFileOutputDelimited_5.toString());




 


	tos_count_tFileOutputDelimited_5++;

/**
 * [tFileOutputDelimited_5 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_5";
	
	

 



/**
 * [tFileOutputDelimited_5 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_5";
	
	

 



/**
 * [tFileOutputDelimited_5 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 



/**
 * [tOracleInput_6 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_6 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

}
}finally{
	if (rs_tOracleInput_6 != null) {
		rs_tOracleInput_6.close();
	}
	if (stmt_tOracleInput_6 != null) {
		stmt_tOracleInput_6.close();
	}
}

globalMap.put("tOracleInput_6_NB_LINE",nb_line_tOracleInput_6);
 

ok_Hash.put("tOracleInput_6", true);
end_Hash.put("tOracleInput_6", System.currentTimeMillis());




/**
 * [tOracleInput_6 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_5 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_5";
	
	



		
			
					if(outtFileOutputDelimited_5!=null) {
						outtFileOutputDelimited_5.flush();
						outtFileOutputDelimited_5.close();
					}
				
				globalMap.put("tFileOutputDelimited_5_NB_LINE",nb_line_tFileOutputDelimited_5);
				globalMap.put("tFileOutputDelimited_5_FILE_NAME",fileName_tFileOutputDelimited_5);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_5", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_5", true);
end_Hash.put("tFileOutputDelimited_5", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk11", 0, "ok");
				}
				tFixedFlowInput_1Process(globalMap);



/**
 * [tFileOutputDelimited_5 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_6 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 



/**
 * [tOracleInput_6 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_5 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_5";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_5") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_5 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_5");
						if(outtFileOutputDelimited_5!=null) {
							outtFileOutputDelimited_5.flush();
							outtFileOutputDelimited_5.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class row15Struct implements routines.system.IPersistableRow<row15Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public Integer ID_BDUA;

				public Integer getID_BDUA () {
					return this.ID_BDUA;
				}

				public Boolean ID_BDUAIsNullable(){
				    return true;
				}
				public Boolean ID_BDUAIsKey(){
				    return false;
				}
				public Integer ID_BDUALength(){
				    return null;
				}
				public Integer ID_BDUAPrecision(){
				    return null;
				}
				public String ID_BDUADefault(){
				
					return null;
				
				}
				public String ID_BDUAComment(){
				
				    return "";
				
				}
				public String ID_BDUAPattern(){
				
					return "";
				
				}
				public String ID_BDUAOriginalDbColumnName(){
				
					return "ID_BDUA";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return null;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return null;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return null;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return null;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return null;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return null;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return null;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return null;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String FECHA_NACIMIENTO;

				public String getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return null;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return null;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				
			    public String SIGLA_SEXO;

				public String getSIGLA_SEXO () {
					return this.SIGLA_SEXO;
				}

				public Boolean SIGLA_SEXOIsNullable(){
				    return true;
				}
				public Boolean SIGLA_SEXOIsKey(){
				    return false;
				}
				public Integer SIGLA_SEXOLength(){
				    return null;
				}
				public Integer SIGLA_SEXOPrecision(){
				    return null;
				}
				public String SIGLA_SEXODefault(){
				
					return null;
				
				}
				public String SIGLA_SEXOComment(){
				
				    return "";
				
				}
				public String SIGLA_SEXOPattern(){
				
					return "";
				
				}
				public String SIGLA_SEXOOriginalDbColumnName(){
				
					return "SIGLA_SEXO";
				
				}

				
			    public String FECHA_REGISTRO;

				public String getFECHA_REGISTRO () {
					return this.FECHA_REGISTRO;
				}

				public Boolean FECHA_REGISTROIsNullable(){
				    return true;
				}
				public Boolean FECHA_REGISTROIsKey(){
				    return false;
				}
				public Integer FECHA_REGISTROLength(){
				    return null;
				}
				public Integer FECHA_REGISTROPrecision(){
				    return null;
				}
				public String FECHA_REGISTRODefault(){
				
					return null;
				
				}
				public String FECHA_REGISTROComment(){
				
				    return "";
				
				}
				public String FECHA_REGISTROPattern(){
				
					return "";
				
				}
				public String FECHA_REGISTROOriginalDbColumnName(){
				
					return "FECHA_REGISTRO";
				
				}

				
			    public String FECHA_INGRESO;

				public String getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return null;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return null;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public String FECHA_ACTIVACION;

				public String getFECHA_ACTIVACION () {
					return this.FECHA_ACTIVACION;
				}

				public Boolean FECHA_ACTIVACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVACIONIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVACIONLength(){
				    return null;
				}
				public Integer FECHA_ACTIVACIONPrecision(){
				    return null;
				}
				public String FECHA_ACTIVACIONDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVACIONComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVACIONPattern(){
				
					return "";
				
				}
				public String FECHA_ACTIVACIONOriginalDbColumnName(){
				
					return "FECHA_ACTIVACION";
				
				}

				
			    public String FECHA_INACTIVACION;

				public String getFECHA_INACTIVACION () {
					return this.FECHA_INACTIVACION;
				}

				public Boolean FECHA_INACTIVACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVACIONIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVACIONLength(){
				    return null;
				}
				public Integer FECHA_INACTIVACIONPrecision(){
				    return null;
				}
				public String FECHA_INACTIVACIONDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVACIONComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVACIONPattern(){
				
					return "";
				
				}
				public String FECHA_INACTIVACIONOriginalDbColumnName(){
				
					return "FECHA_INACTIVACION";
				
				}

				
			    public String ESTADO_INICIAL;

				public String getESTADO_INICIAL () {
					return this.ESTADO_INICIAL;
				}

				public Boolean ESTADO_INICIALIsNullable(){
				    return true;
				}
				public Boolean ESTADO_INICIALIsKey(){
				    return false;
				}
				public Integer ESTADO_INICIALLength(){
				    return null;
				}
				public Integer ESTADO_INICIALPrecision(){
				    return null;
				}
				public String ESTADO_INICIALDefault(){
				
					return null;
				
				}
				public String ESTADO_INICIALComment(){
				
				    return "";
				
				}
				public String ESTADO_INICIALPattern(){
				
					return "";
				
				}
				public String ESTADO_INICIALOriginalDbColumnName(){
				
					return "ESTADO_INICIAL";
				
				}

				
			    public String ESTADO_FINAL;

				public String getESTADO_FINAL () {
					return this.ESTADO_FINAL;
				}

				public Boolean ESTADO_FINALIsNullable(){
				    return true;
				}
				public Boolean ESTADO_FINALIsKey(){
				    return false;
				}
				public Integer ESTADO_FINALLength(){
				    return null;
				}
				public Integer ESTADO_FINALPrecision(){
				    return null;
				}
				public String ESTADO_FINALDefault(){
				
					return null;
				
				}
				public String ESTADO_FINALComment(){
				
				    return "";
				
				}
				public String ESTADO_FINALPattern(){
				
					return "";
				
				}
				public String ESTADO_FINALOriginalDbColumnName(){
				
					return "ESTADO_FINAL";
				
				}

				
			    public String ESTADO_AFILIACION;

				public String getESTADO_AFILIACION () {
					return this.ESTADO_AFILIACION;
				}

				public Boolean ESTADO_AFILIACIONIsNullable(){
				    return true;
				}
				public Boolean ESTADO_AFILIACIONIsKey(){
				    return false;
				}
				public Integer ESTADO_AFILIACIONLength(){
				    return null;
				}
				public Integer ESTADO_AFILIACIONPrecision(){
				    return null;
				}
				public String ESTADO_AFILIACIONDefault(){
				
					return null;
				
				}
				public String ESTADO_AFILIACIONComment(){
				
				    return "";
				
				}
				public String ESTADO_AFILIACIONPattern(){
				
					return "";
				
				}
				public String ESTADO_AFILIACIONOriginalDbColumnName(){
				
					return "ESTADO_AFILIACION";
				
				}

				
			    public String PLANAFILIACIONES;

				public String getPLANAFILIACIONES () {
					return this.PLANAFILIACIONES;
				}

				public Boolean PLANAFILIACIONESIsNullable(){
				    return true;
				}
				public Boolean PLANAFILIACIONESIsKey(){
				    return false;
				}
				public Integer PLANAFILIACIONESLength(){
				    return null;
				}
				public Integer PLANAFILIACIONESPrecision(){
				    return null;
				}
				public String PLANAFILIACIONESDefault(){
				
					return null;
				
				}
				public String PLANAFILIACIONESComment(){
				
				    return "";
				
				}
				public String PLANAFILIACIONESPattern(){
				
					return "";
				
				}
				public String PLANAFILIACIONESOriginalDbColumnName(){
				
					return "PLANAFILIACIONES";
				
				}

				
			    public String FECHA_DEFUNCION;

				public String getFECHA_DEFUNCION () {
					return this.FECHA_DEFUNCION;
				}

				public Boolean FECHA_DEFUNCIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_DEFUNCIONIsKey(){
				    return false;
				}
				public Integer FECHA_DEFUNCIONLength(){
				    return null;
				}
				public Integer FECHA_DEFUNCIONPrecision(){
				    return null;
				}
				public String FECHA_DEFUNCIONDefault(){
				
					return null;
				
				}
				public String FECHA_DEFUNCIONComment(){
				
				    return "";
				
				}
				public String FECHA_DEFUNCIONPattern(){
				
					return "";
				
				}
				public String FECHA_DEFUNCIONOriginalDbColumnName(){
				
					return "FECHA_DEFUNCION";
				
				}

				
			    public String USUARIO_MODIFICADOR;

				public String getUSUARIO_MODIFICADOR () {
					return this.USUARIO_MODIFICADOR;
				}

				public Boolean USUARIO_MODIFICADORIsNullable(){
				    return true;
				}
				public Boolean USUARIO_MODIFICADORIsKey(){
				    return false;
				}
				public Integer USUARIO_MODIFICADORLength(){
				    return null;
				}
				public Integer USUARIO_MODIFICADORPrecision(){
				    return null;
				}
				public String USUARIO_MODIFICADORDefault(){
				
					return null;
				
				}
				public String USUARIO_MODIFICADORComment(){
				
				    return "";
				
				}
				public String USUARIO_MODIFICADORPattern(){
				
					return "";
				
				}
				public String USUARIO_MODIFICADOROriginalDbColumnName(){
				
					return "USUARIO_MODIFICADOR";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
						this.ID_BDUA = readInteger(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.SIGLA_SEXO = readString(dis);
					
					this.FECHA_REGISTRO = readString(dis);
					
					this.FECHA_INGRESO = readString(dis);
					
					this.FECHA_ACTIVACION = readString(dis);
					
					this.FECHA_INACTIVACION = readString(dis);
					
					this.ESTADO_INICIAL = readString(dis);
					
					this.ESTADO_FINAL = readString(dis);
					
					this.ESTADO_AFILIACION = readString(dis);
					
					this.PLANAFILIACIONES = readString(dis);
					
					this.FECHA_DEFUNCION = readString(dis);
					
					this.USUARIO_MODIFICADOR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
						this.ID_BDUA = readInteger(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.SIGLA_SEXO = readString(dis);
					
					this.FECHA_REGISTRO = readString(dis);
					
					this.FECHA_INGRESO = readString(dis);
					
					this.FECHA_ACTIVACION = readString(dis);
					
					this.FECHA_INACTIVACION = readString(dis);
					
					this.ESTADO_INICIAL = readString(dis);
					
					this.ESTADO_FINAL = readString(dis);
					
					this.ESTADO_AFILIACION = readString(dis);
					
					this.PLANAFILIACIONES = readString(dis);
					
					this.FECHA_DEFUNCION = readString(dis);
					
					this.USUARIO_MODIFICADOR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_BDUA,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.SIGLA_SEXO,dos);
					
					// String
				
						writeString(this.FECHA_REGISTRO,dos);
					
					// String
				
						writeString(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVACION,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVACION,dos);
					
					// String
				
						writeString(this.ESTADO_INICIAL,dos);
					
					// String
				
						writeString(this.ESTADO_FINAL,dos);
					
					// String
				
						writeString(this.ESTADO_AFILIACION,dos);
					
					// String
				
						writeString(this.PLANAFILIACIONES,dos);
					
					// String
				
						writeString(this.FECHA_DEFUNCION,dos);
					
					// String
				
						writeString(this.USUARIO_MODIFICADOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_BDUA,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.SIGLA_SEXO,dos);
					
					// String
				
						writeString(this.FECHA_REGISTRO,dos);
					
					// String
				
						writeString(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVACION,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVACION,dos);
					
					// String
				
						writeString(this.ESTADO_INICIAL,dos);
					
					// String
				
						writeString(this.ESTADO_FINAL,dos);
					
					// String
				
						writeString(this.ESTADO_AFILIACION,dos);
					
					// String
				
						writeString(this.PLANAFILIACIONES,dos);
					
					// String
				
						writeString(this.FECHA_DEFUNCION,dos);
					
					// String
				
						writeString(this.USUARIO_MODIFICADOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_BDUA="+String.valueOf(ID_BDUA));
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",FECHA_NACIMIENTO="+FECHA_NACIMIENTO);
		sb.append(",SIGLA_SEXO="+SIGLA_SEXO);
		sb.append(",FECHA_REGISTRO="+FECHA_REGISTRO);
		sb.append(",FECHA_INGRESO="+FECHA_INGRESO);
		sb.append(",FECHA_ACTIVACION="+FECHA_ACTIVACION);
		sb.append(",FECHA_INACTIVACION="+FECHA_INACTIVACION);
		sb.append(",ESTADO_INICIAL="+ESTADO_INICIAL);
		sb.append(",ESTADO_FINAL="+ESTADO_FINAL);
		sb.append(",ESTADO_AFILIACION="+ESTADO_AFILIACION);
		sb.append(",PLANAFILIACIONES="+PLANAFILIACIONES);
		sb.append(",FECHA_DEFUNCION="+FECHA_DEFUNCION);
		sb.append(",USUARIO_MODIFICADOR="+USUARIO_MODIFICADOR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row15Struct row15 = new row15Struct();




	
	/**
	 * [tFileOutputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_1", false);
		start_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tFileOutputDelimited_1 = 0;
		

String fileName_tFileOutputDelimited_1 = "";
    fileName_tFileOutputDelimited_1 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_1 = null;
    String extension_tFileOutputDelimited_1 = null;
    String directory_tFileOutputDelimited_1 = null;
    if((fileName_tFileOutputDelimited_1.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") < fileName_tFileOutputDelimited_1.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        }
        directory_tFileOutputDelimited_1 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_1 = true;
    java.io.File filetFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
    globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
        if(filetFileOutputDelimited_1.exists()){
            isFileGenerated_tFileOutputDelimited_1 = false;
        }
            int nb_line_tFileOutputDelimited_1 = 0;
            int splitedFileNo_tFileOutputDelimited_1 = 0;
            int currentRow_tFileOutputDelimited_1 = 0;

            final String OUT_DELIM_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_1:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_1:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_1 != null && directory_tFileOutputDelimited_1.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_1 = new java.io.File(directory_tFileOutputDelimited_1);
                        if(!dir_tFileOutputDelimited_1.exists()) {
                            dir_tFileOutputDelimited_1.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_1 = null;

                        outtFileOutputDelimited_1 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_1, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_1", outtFileOutputDelimited_1);
                                    if(filetFileOutputDelimited_1.length()==0){
                                        outtFileOutputDelimited_1.write("ID_BDUA");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("TIPO_DOCUMENTO");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("DOCUMENTO");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("PRIMER_APELLIDO");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("SEGUNDO_APELLIDO");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("PRIMER_NOMBRE");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("SEGUNDO_NOMBRE");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("FECHA_NACIMIENTO");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("SIGLA_SEXO");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("FECHA_REGISTRO");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("FECHA_INGRESO");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("FECHA_ACTIVACION");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("FECHA_INACTIVACION");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("ESTADO_INICIAL");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("ESTADO_FINAL");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("ESTADO_AFILIACION");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("PLANAFILIACIONES");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("FECHA_DEFUNCION");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("USUARIO_MODIFICADOR");
                                        outtFileOutputDelimited_1.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

 



/**
 * [tFileOutputDelimited_1 begin ] stop
 */



	
	/**
	 * [tOracleInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_11", false);
		start_Hash.put("tOracleInput_11", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_11";
	
	
		int tos_count_tOracleInput_11 = 0;
		
	


	
		    int nb_line_tOracleInput_11 = 0;
		    java.sql.Connection conn_tOracleInput_11 = null;
				conn_tOracleInput_11 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_11 = false;
				boolean isConnectionWrapped_tOracleInput_11 = !(conn_tOracleInput_11 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_11.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_11 = null;
                if (isConnectionWrapped_tOracleInput_11) {
					unwrappedOraConn_tOracleInput_11 = conn_tOracleInput_11.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_11 != null) {
                        isTimeZoneNull_tOracleInput_11 = (unwrappedOraConn_tOracleInput_11.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_11 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_11).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_11) {
					java.sql.Statement stmtGetTZ_tOracleInput_11 = conn_tOracleInput_11.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_11 = stmtGetTZ_tOracleInput_11.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_11 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_11.next()) {
						sessionTimezone_tOracleInput_11 = rsGetTZ_tOracleInput_11.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_11 && unwrappedOraConn_tOracleInput_11 != null) {
                        unwrappedOraConn_tOracleInput_11.setSessionTimeZone(sessionTimezone_tOracleInput_11);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_11).setSessionTimeZone(sessionTimezone_tOracleInput_11);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_11 = conn_tOracleInput_11.createStatement();

		    String dbquery_tOracleInput_11 = "SELECT ID_BDUA,\nTIPO_DOCUMENTO,\nDOCUMENTO,\nPRIMER_APELLIDO,\nSEGUNDO_APELLIDO,\nPRIMER_NOMBRE,\nSEGUNDO_NOMBRE,\nFEC"
+"HA_NACIMIENTO,\nSIGLA_SEXO,\nFECHA_REGISTRO,\nFECHA_INGRESO,\nFECHA_ACTIVACION, \nFECHA_INACTIVACION,\nESTADO_INICIAL,\n"
+"ESTADO_FINAL,\nESTADO_AFILIACION, \nPLANAFILIACIONES,\nFECHA_DEFUNCION,\nUSUARIO_MODIFICADOR\nFROM (SELECT  \nVM.ID_BDUA"
+",\nreplace(replace(VM.TIPO_DOCUMENTO,chr(10),''),chr(13),'') AS TIPO_DOCUMENTO,\nreplace(replace(VM.DOCUMENTO,chr(10),''"
+"),chr(13),'') AS DOCUMENTO,\nreplace(replace(VM.PRIMER_APELLIDO,chr(10),''),chr(13),'') AS PRIMER_APELLIDO,\nreplace(rep"
+"lace(VM.SEGUNDO_APELLIDO,chr(10),''),chr(13),'') AS SEGUNDO_APELLIDO,\nreplace(replace(VM.PRIMER_NOMBRE,chr(10),''),chr("
+"13),'') AS PRIMER_NOMBRE,\nreplace(replace(VM.SEGUNDO_NOMBRE,chr(10),''),chr(13),'') AS SEGUNDO_NOMBRE,\nTO_CHAR(VM.FECH"
+"A_NACIMIENTO,'DD/MM/YYYY') AS FECHA_NACIMIENTO,\nreplace(replace(VM.SIGLA_SEXO,chr(10),''),chr(13),'') AS SIGLA_SEXO,\nT"
+"O_CHAR(VM.FECHA_INGRESO,'DD/MM/YYYY') AS FECHA_REGISTRO,\nTO_CHAR(VM.FREGISTRO,'DD/MM/YYYY') AS FECHA_INGRESO,\nDECODE(A"
+"E2.SIGLA,'AC',DECODE(AR.CODIGO,'S05',TO_CHAR(VM.FREGISTRO,'DD/MM/YYYY'),TO_CHAR(AP.FECHA_REGISTRO,'DD/MM/YYYY')) ,'PR',T"
+"O_CHAR(AP.FECHA_REGISTRO,'DD/MM/YYYY')) AS FECHA_ACTIVACION, \nDECODE(AE2.SIGLA,'IN',TO_CHAR(AP.FECHA_REGISTRO,'DD/MM/YY"
+"YY')) AS FECHA_INACTIVACION,\nae.NOMBRE AS ESTADO_INICIAL,\nae2.NOMBRE AS ESTADO_FINAL,\nVM.ESTAFILIACION AS ESTADO_AFIL"
+"IACION, \nreplace(replace(VM.PLANAFILIACIONES,chr(10),''),chr(13),'') AS PLANAFILIACIONES,\nTO_CHAR(VM.FECHA_DEFUNCION,'"
+"DD/MM/YYYY') AS FECHA_DEFUNCION,\nGU.USUARIO AS USUARIO_MODIFICADOR,\nap.FECHA_REGISTRO AS FECHA_PROCESO\nFROM  VM_PERSO"
+"NAS VM\nINNER JOIN AFI_CARCHIVOS CA ON CA.DOCUMENTO = VM.DOCUMENTO AND  TRIM(UPPER(CA.TDOCUMENTOS)) = TRIM(UPPER(VM.TIPO"
+"_DOCUMENTO))\nAND TRIM(UPPER(CA.PRIMER_NOMBRE)) = TRIM(UPPER(VM.PRIMER_NOMBRE)) AND TRIM(UPPER(CA.PRIMER_APELLIDO)) = TR"
+"IM(UPPER(VM.PRIMER_APELLIDO))\nINNER JOIN AFI_HAFILIADOS ah ON ah.AFILIADOS_ID = VM.GA\nINNER JOIN AFI_RNOVEDADES ar ON "
+"AR.ID = AH.RNOVEDADES_ID \nINNER JOIN AFI_PROCESOS ap ON AP.ID = AH.PROCESOS_ID \nINNER JOIN GEN_USUARIOS gu ON GU.ID = "
+"AP.USUARIOS_ID \nINNER JOIN AFI_ESTADOS ae ON AE.ID = DECODE(AH.VANTERIOR,'0',(SELECT AE3.ID FROM AFI_ESTADOS ae3 WHERE "
+"AE3.SIGLA = 'IX' AND AE3.ESTREGISTRO_ID = 1),TO_NUMBER(AH.VANTERIOR)) \nINNER JOIN AFI_ESTADOS ae2 ON AE2.ID = TO_NUMBER"
+"(AH.VACTUAL)\nWHERE \nVM.AFILIADO_ESTREGISTRO_ID = 1\nAND AP.ESTREGISTRO_ID = 1\nAND GU.ESTREGISTRO_ID = 1\nAND AH.ESTRE"
+"GISTRO_ID = 1\nAND AE.ESTREGISTRO_ID = 1\nAND AE2.ESTREGISTRO_ID = 1\nAND AR.ESTREGISTRO_ID = 1\nAND AH.VACTUAL IS NOT N"
+"ULL \nAND AH.VANTERIOR IS NOT NULL  \nAND (AH.CAMPO = 'ESTADOS_ID' OR AR.CODIGO = 'S05')\nAND CA.ARCHIVOS_ID = " + context.infoIdArchivo +") ORDER BY DOCUMENTO, FECHA_PROCESO DESC";
		    

		    globalMap.put("tOracleInput_11_QUERY",dbquery_tOracleInput_11);

		    java.sql.ResultSet rs_tOracleInput_11 = null;

		    try {
		    	rs_tOracleInput_11 = stmt_tOracleInput_11.executeQuery(dbquery_tOracleInput_11);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_11 = rs_tOracleInput_11.getMetaData();
		    	int colQtyInRs_tOracleInput_11 = rsmd_tOracleInput_11.getColumnCount();

		    String tmpContent_tOracleInput_11 = null;
		    
		    
		    while (rs_tOracleInput_11.next()) {
		        nb_line_tOracleInput_11++;
		        
							if(colQtyInRs_tOracleInput_11 < 1) {
								row15.ID_BDUA = null;
							} else {
		                          
					if(rs_tOracleInput_11.getObject(1) != null) {
						row15.ID_BDUA = rs_tOracleInput_11.getInt(1);
					} else {
				
						row15.ID_BDUA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_11 < 2) {
								row15.TIPO_DOCUMENTO = null;
							} else {
	                         		
        	row15.TIPO_DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 3) {
								row15.DOCUMENTO = null;
							} else {
	                         		
        	row15.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 4) {
								row15.PRIMER_APELLIDO = null;
							} else {
	                         		
        	row15.PRIMER_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 5) {
								row15.SEGUNDO_APELLIDO = null;
							} else {
	                         		
        	row15.SEGUNDO_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 6) {
								row15.PRIMER_NOMBRE = null;
							} else {
	                         		
        	row15.PRIMER_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 7) {
								row15.SEGUNDO_NOMBRE = null;
							} else {
	                         		
        	row15.SEGUNDO_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 8) {
								row15.FECHA_NACIMIENTO = null;
							} else {
	                         		
        	row15.FECHA_NACIMIENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 8, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 9) {
								row15.SIGLA_SEXO = null;
							} else {
	                         		
        	row15.SIGLA_SEXO = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 10) {
								row15.FECHA_REGISTRO = null;
							} else {
	                         		
        	row15.FECHA_REGISTRO = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 11) {
								row15.FECHA_INGRESO = null;
							} else {
	                         		
        	row15.FECHA_INGRESO = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 11, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 12) {
								row15.FECHA_ACTIVACION = null;
							} else {
	                         		
        	row15.FECHA_ACTIVACION = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 13) {
								row15.FECHA_INACTIVACION = null;
							} else {
	                         		
        	row15.FECHA_INACTIVACION = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 13, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 14) {
								row15.ESTADO_INICIAL = null;
							} else {
	                         		
        	row15.ESTADO_INICIAL = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 14, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 15) {
								row15.ESTADO_FINAL = null;
							} else {
	                         		
        	row15.ESTADO_FINAL = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 15, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 16) {
								row15.ESTADO_AFILIACION = null;
							} else {
	                         		
        	row15.ESTADO_AFILIACION = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 16, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 17) {
								row15.PLANAFILIACIONES = null;
							} else {
	                         		
        	row15.PLANAFILIACIONES = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 17, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 18) {
								row15.FECHA_DEFUNCION = null;
							} else {
	                         		
        	row15.FECHA_DEFUNCION = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 18, false);
		                    }
							if(colQtyInRs_tOracleInput_11 < 19) {
								row15.USUARIO_MODIFICADOR = null;
							} else {
	                         		
        	row15.USUARIO_MODIFICADOR = routines.system.JDBCUtil.getString(rs_tOracleInput_11, 19, false);
		                    }
					




 



/**
 * [tOracleInput_11 begin ] stop
 */
	
	/**
	 * [tOracleInput_11 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 


	tos_count_tOracleInput_11++;

/**
 * [tOracleInput_11 main ] stop
 */
	
	/**
	 * [tOracleInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 



/**
 * [tOracleInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row15"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_1 = new StringBuilder();
                            if(row15.ID_BDUA != null) {
                        sb_tFileOutputDelimited_1.append(
                            row15.ID_BDUA
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row15.TIPO_DOCUMENTO != null) {
                        sb_tFileOutputDelimited_1.append(
                            row15.TIPO_DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row15.DOCUMENTO != null) {
                        sb_tFileOutputDelimited_1.append(
                            row15.DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row15.PRIMER_APELLIDO != null) {
                        sb_tFileOutputDelimited_1.append(
                            row15.PRIMER_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row15.SEGUNDO_APELLIDO != null) {
                        sb_tFileOutputDelimited_1.append(
                            row15.SEGUNDO_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row15.PRIMER_NOMBRE != null) {
                        sb_tFileOutputDelimited_1.append(
                            row15.PRIMER_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row15.SEGUNDO_NOMBRE != null) {
                        sb_tFileOutputDelimited_1.append(
                            row15.SEGUNDO_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row15.FECHA_NACIMIENTO != null) {
                        sb_tFileOutputDelimited_1.append(
                            row15.FECHA_NACIMIENTO
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row15.SIGLA_SEXO != null) {
                        sb_tFileOutputDelimited_1.append(
                            row15.SIGLA_SEXO
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row15.FECHA_REGISTRO != null) {
                        sb_tFileOutputDelimited_1.append(
                            row15.FECHA_REGISTRO
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row15.FECHA_INGRESO != null) {
                        sb_tFileOutputDelimited_1.append(
                            row15.FECHA_INGRESO
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row15.FECHA_ACTIVACION != null) {
                        sb_tFileOutputDelimited_1.append(
                            row15.FECHA_ACTIVACION
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row15.FECHA_INACTIVACION != null) {
                        sb_tFileOutputDelimited_1.append(
                            row15.FECHA_INACTIVACION
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row15.ESTADO_INICIAL != null) {
                        sb_tFileOutputDelimited_1.append(
                            row15.ESTADO_INICIAL
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row15.ESTADO_FINAL != null) {
                        sb_tFileOutputDelimited_1.append(
                            row15.ESTADO_FINAL
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row15.ESTADO_AFILIACION != null) {
                        sb_tFileOutputDelimited_1.append(
                            row15.ESTADO_AFILIACION
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row15.PLANAFILIACIONES != null) {
                        sb_tFileOutputDelimited_1.append(
                            row15.PLANAFILIACIONES
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row15.FECHA_DEFUNCION != null) {
                        sb_tFileOutputDelimited_1.append(
                            row15.FECHA_DEFUNCION
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row15.USUARIO_MODIFICADOR != null) {
                        sb_tFileOutputDelimited_1.append(
                            row15.USUARIO_MODIFICADOR
                        );
                            }
                    sb_tFileOutputDelimited_1.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);


                    nb_line_tFileOutputDelimited_1++;
                    resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

                        outtFileOutputDelimited_1.write(sb_tFileOutputDelimited_1.toString());




 


	tos_count_tFileOutputDelimited_1++;

/**
 * [tFileOutputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 



/**
 * [tOracleInput_11 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_11 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

}
}finally{
	if (rs_tOracleInput_11 != null) {
		rs_tOracleInput_11.close();
	}
	if (stmt_tOracleInput_11 != null) {
		stmt_tOracleInput_11.close();
	}
}

globalMap.put("tOracleInput_11_NB_LINE",nb_line_tOracleInput_11);
 

ok_Hash.put("tOracleInput_11", true);
end_Hash.put("tOracleInput_11", System.currentTimeMillis());

   			if (((Integer)globalMap.get("tOracleOutput_2_NB_LINE_INSERTED"))> ((Integer)globalMap.get("tOracleInput_11_NB_LINE"))) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If21", 0, "true");
					}
				tOracleInput_12Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If21", 0, "false");
					}   	 
   				}



/**
 * [tOracleInput_11 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	



		
			
					if(outtFileOutputDelimited_1!=null) {
						outtFileOutputDelimited_1.flush();
						outtFileOutputDelimited_1.close();
					}
				
				globalMap.put("tFileOutputDelimited_1_NB_LINE",nb_line_tFileOutputDelimited_1);
				globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_1", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_1", true);
end_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk24", 0, "ok");
				}
				tFixedFlowInput_2Process(globalMap);



/**
 * [tFileOutputDelimited_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_11 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_11";
	
	

 



/**
 * [tOracleInput_11 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_1") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_1 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_1");
						if(outtFileOutputDelimited_1!=null) {
							outtFileOutputDelimited_1.flush();
							outtFileOutputDelimited_1.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_11_SUBPROCESS_STATE", 1);
	}
	


public static class row16Struct implements routines.system.IPersistableRow<row16Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public String TDOCUMENTOS;

				public String getTDOCUMENTOS () {
					return this.TDOCUMENTOS;
				}

				public Boolean TDOCUMENTOSIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOSIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOSLength(){
				    return null;
				}
				public Integer TDOCUMENTOSPrecision(){
				    return null;
				}
				public String TDOCUMENTOSDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOSComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOSPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOSOriginalDbColumnName(){
				
					return "TDOCUMENTOS";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return null;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return null;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return null;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return null;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return null;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return null;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return null;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return null;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return null;
				}
				public Integer ERRORPrecision(){
				    return null;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TDOCUMENTOS = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TDOCUMENTOS = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TDOCUMENTOS,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TDOCUMENTOS,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS="+TDOCUMENTOS);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_12Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_12_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row16Struct row16 = new row16Struct();




	
	/**
	 * [tFileOutputDelimited_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_10", false);
		start_Hash.put("tFileOutputDelimited_10", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tFileOutputDelimited_10 = 0;
		

String fileName_tFileOutputDelimited_10 = "";
    fileName_tFileOutputDelimited_10 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+"ERRORES_"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_10 = null;
    String extension_tFileOutputDelimited_10 = null;
    String directory_tFileOutputDelimited_10 = null;
    if((fileName_tFileOutputDelimited_10.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_10.lastIndexOf(".") < fileName_tFileOutputDelimited_10.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_10 = fileName_tFileOutputDelimited_10;
            extension_tFileOutputDelimited_10 = "";
        } else {
            fullName_tFileOutputDelimited_10 = fileName_tFileOutputDelimited_10.substring(0, fileName_tFileOutputDelimited_10.lastIndexOf("."));
            extension_tFileOutputDelimited_10 = fileName_tFileOutputDelimited_10.substring(fileName_tFileOutputDelimited_10.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_10 = fileName_tFileOutputDelimited_10.substring(0, fileName_tFileOutputDelimited_10.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_10.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_10 = fileName_tFileOutputDelimited_10.substring(0, fileName_tFileOutputDelimited_10.lastIndexOf("."));
            extension_tFileOutputDelimited_10 = fileName_tFileOutputDelimited_10.substring(fileName_tFileOutputDelimited_10.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_10 = fileName_tFileOutputDelimited_10;
            extension_tFileOutputDelimited_10 = "";
        }
        directory_tFileOutputDelimited_10 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_10 = true;
    java.io.File filetFileOutputDelimited_10 = new java.io.File(fileName_tFileOutputDelimited_10);
    globalMap.put("tFileOutputDelimited_10_FILE_NAME",fileName_tFileOutputDelimited_10);
        if(filetFileOutputDelimited_10.exists()){
            isFileGenerated_tFileOutputDelimited_10 = false;
        }
            int nb_line_tFileOutputDelimited_10 = 0;
            int splitedFileNo_tFileOutputDelimited_10 = 0;
            int currentRow_tFileOutputDelimited_10 = 0;

            final String OUT_DELIM_tFileOutputDelimited_10 = /** Start field tFileOutputDelimited_10:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_10:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_10 = /** Start field tFileOutputDelimited_10:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_10:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_10 != null && directory_tFileOutputDelimited_10.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_10 = new java.io.File(directory_tFileOutputDelimited_10);
                        if(!dir_tFileOutputDelimited_10.exists()) {
                            dir_tFileOutputDelimited_10.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_10 = null;

                        outtFileOutputDelimited_10 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_10, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_10", outtFileOutputDelimited_10);
                                    if(filetFileOutputDelimited_10.length()==0){
                                        outtFileOutputDelimited_10.write("TDOCUMENTOS");
                                            outtFileOutputDelimited_10.write(OUT_DELIM_tFileOutputDelimited_10);
                                        outtFileOutputDelimited_10.write("DOCUMENTO");
                                            outtFileOutputDelimited_10.write(OUT_DELIM_tFileOutputDelimited_10);
                                        outtFileOutputDelimited_10.write("PRIMER_NOMBRE");
                                            outtFileOutputDelimited_10.write(OUT_DELIM_tFileOutputDelimited_10);
                                        outtFileOutputDelimited_10.write("SEGUNDO_NOMBRE");
                                            outtFileOutputDelimited_10.write(OUT_DELIM_tFileOutputDelimited_10);
                                        outtFileOutputDelimited_10.write("PRIMER_APELLIDO");
                                            outtFileOutputDelimited_10.write(OUT_DELIM_tFileOutputDelimited_10);
                                        outtFileOutputDelimited_10.write("SEGUNDO_APELLIDO");
                                            outtFileOutputDelimited_10.write(OUT_DELIM_tFileOutputDelimited_10);
                                        outtFileOutputDelimited_10.write("ERROR");
                                        outtFileOutputDelimited_10.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_10);
                                        outtFileOutputDelimited_10.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_10", nb_line_tFileOutputDelimited_10);

 



/**
 * [tFileOutputDelimited_10 begin ] stop
 */



	
	/**
	 * [tOracleInput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_12", false);
		start_Hash.put("tOracleInput_12", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_12";
	
	
		int tos_count_tOracleInput_12 = 0;
		
	


	
		    int nb_line_tOracleInput_12 = 0;
		    java.sql.Connection conn_tOracleInput_12 = null;
				conn_tOracleInput_12 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_12 = false;
				boolean isConnectionWrapped_tOracleInput_12 = !(conn_tOracleInput_12 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_12.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_12 = null;
                if (isConnectionWrapped_tOracleInput_12) {
					unwrappedOraConn_tOracleInput_12 = conn_tOracleInput_12.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_12 != null) {
                        isTimeZoneNull_tOracleInput_12 = (unwrappedOraConn_tOracleInput_12.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_12 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_12).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_12) {
					java.sql.Statement stmtGetTZ_tOracleInput_12 = conn_tOracleInput_12.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_12 = stmtGetTZ_tOracleInput_12.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_12 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_12.next()) {
						sessionTimezone_tOracleInput_12 = rsGetTZ_tOracleInput_12.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_12 && unwrappedOraConn_tOracleInput_12 != null) {
                        unwrappedOraConn_tOracleInput_12.setSessionTimeZone(sessionTimezone_tOracleInput_12);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_12).setSessionTimeZone(sessionTimezone_tOracleInput_12);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_12 = conn_tOracleInput_12.createStatement();

		    String dbquery_tOracleInput_12 = "SELECT\nCA.TDOCUMENTOS,\nCA.DOCUMENTO,\nCA.PRIMER_NOMBRE,\nCA.SEGUNDO_APELLIDO,\nCA.PRIMER_APELLIDO,\nCA.SEGUNDO_APELLI"
+"DO,\n'NO ENCOTRADO' AS ERROR\nFROM AFI_CARCHIVOS CA\nWHERE NOT EXISTS(SELECT * FROM VM_PERSONAS VP \n                WHE"
+"RE CA.DOCUMENTO = VP.DOCUMENTO AND  \n                      TRIM(UPPER(CA.TDOCUMENTOS)) = TRIM(UPPER(VP.TIPO_DOCUMENTO))"
+"AND \n                      TRIM(UPPER(CA.PRIMER_NOMBRE)) = TRIM(UPPER(VP.PRIMER_NOMBRE)) AND \n                      TR"
+"IM(UPPER(CA.PRIMER_APELLIDO)) = TRIM(UPPER(VP.PRIMER_APELLIDO))) AND CA.ARCHIVOS_ID = " + context.infoIdArchivo;
		    

		    globalMap.put("tOracleInput_12_QUERY",dbquery_tOracleInput_12);

		    java.sql.ResultSet rs_tOracleInput_12 = null;

		    try {
		    	rs_tOracleInput_12 = stmt_tOracleInput_12.executeQuery(dbquery_tOracleInput_12);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_12 = rs_tOracleInput_12.getMetaData();
		    	int colQtyInRs_tOracleInput_12 = rsmd_tOracleInput_12.getColumnCount();

		    String tmpContent_tOracleInput_12 = null;
		    
		    
		    while (rs_tOracleInput_12.next()) {
		        nb_line_tOracleInput_12++;
		        
							if(colQtyInRs_tOracleInput_12 < 1) {
								row16.TDOCUMENTOS = null;
							} else {
	                         		
        	row16.TDOCUMENTOS = routines.system.JDBCUtil.getString(rs_tOracleInput_12, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_12 < 2) {
								row16.DOCUMENTO = null;
							} else {
	                         		
        	row16.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_12, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_12 < 3) {
								row16.PRIMER_NOMBRE = null;
							} else {
	                         		
        	row16.PRIMER_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_12, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_12 < 4) {
								row16.SEGUNDO_NOMBRE = null;
							} else {
	                         		
        	row16.SEGUNDO_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_12, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_12 < 5) {
								row16.PRIMER_APELLIDO = null;
							} else {
	                         		
        	row16.PRIMER_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_12, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_12 < 6) {
								row16.SEGUNDO_APELLIDO = null;
							} else {
	                         		
        	row16.SEGUNDO_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_12, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_12 < 7) {
								row16.ERROR = null;
							} else {
	                         		
        	row16.ERROR = routines.system.JDBCUtil.getString(rs_tOracleInput_12, 7, false);
		                    }
					




 



/**
 * [tOracleInput_12 begin ] stop
 */
	
	/**
	 * [tOracleInput_12 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 


	tos_count_tOracleInput_12++;

/**
 * [tOracleInput_12 main ] stop
 */
	
	/**
	 * [tOracleInput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 



/**
 * [tOracleInput_12 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_10 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row16"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_10 = new StringBuilder();
                            if(row16.TDOCUMENTOS != null) {
                        sb_tFileOutputDelimited_10.append(
                            row16.TDOCUMENTOS
                        );
                            }
                            sb_tFileOutputDelimited_10.append(OUT_DELIM_tFileOutputDelimited_10);
                            if(row16.DOCUMENTO != null) {
                        sb_tFileOutputDelimited_10.append(
                            row16.DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_10.append(OUT_DELIM_tFileOutputDelimited_10);
                            if(row16.PRIMER_NOMBRE != null) {
                        sb_tFileOutputDelimited_10.append(
                            row16.PRIMER_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_10.append(OUT_DELIM_tFileOutputDelimited_10);
                            if(row16.SEGUNDO_NOMBRE != null) {
                        sb_tFileOutputDelimited_10.append(
                            row16.SEGUNDO_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_10.append(OUT_DELIM_tFileOutputDelimited_10);
                            if(row16.PRIMER_APELLIDO != null) {
                        sb_tFileOutputDelimited_10.append(
                            row16.PRIMER_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_10.append(OUT_DELIM_tFileOutputDelimited_10);
                            if(row16.SEGUNDO_APELLIDO != null) {
                        sb_tFileOutputDelimited_10.append(
                            row16.SEGUNDO_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_10.append(OUT_DELIM_tFileOutputDelimited_10);
                            if(row16.ERROR != null) {
                        sb_tFileOutputDelimited_10.append(
                            row16.ERROR
                        );
                            }
                    sb_tFileOutputDelimited_10.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_10);


                    nb_line_tFileOutputDelimited_10++;
                    resourceMap.put("nb_line_tFileOutputDelimited_10", nb_line_tFileOutputDelimited_10);

                        outtFileOutputDelimited_10.write(sb_tFileOutputDelimited_10.toString());




 


	tos_count_tFileOutputDelimited_10++;

/**
 * [tFileOutputDelimited_10 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_10";
	
	

 



/**
 * [tFileOutputDelimited_10 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_10";
	
	

 



/**
 * [tFileOutputDelimited_10 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 



/**
 * [tOracleInput_12 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_12 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

}
}finally{
	if (rs_tOracleInput_12 != null) {
		rs_tOracleInput_12.close();
	}
	if (stmt_tOracleInput_12 != null) {
		stmt_tOracleInput_12.close();
	}
}

globalMap.put("tOracleInput_12_NB_LINE",nb_line_tOracleInput_12);
 

ok_Hash.put("tOracleInput_12", true);
end_Hash.put("tOracleInput_12", System.currentTimeMillis());




/**
 * [tOracleInput_12 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_10 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_10";
	
	



		
			
					if(outtFileOutputDelimited_10!=null) {
						outtFileOutputDelimited_10.flush();
						outtFileOutputDelimited_10.close();
					}
				
				globalMap.put("tFileOutputDelimited_10_NB_LINE",nb_line_tFileOutputDelimited_10);
				globalMap.put("tFileOutputDelimited_10_FILE_NAME",fileName_tFileOutputDelimited_10);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_10", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_10", true);
end_Hash.put("tFileOutputDelimited_10", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk21", 0, "ok");
				}
				tFixedFlowInput_1Process(globalMap);



/**
 * [tFileOutputDelimited_10 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_12 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_12";
	
	

 



/**
 * [tOracleInput_12 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_10 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_10";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_10") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_10 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_10");
						if(outtFileOutputDelimited_10!=null) {
							outtFileOutputDelimited_10.flush();
							outtFileOutputDelimited_10.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_10 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_12_SUBPROCESS_STATE", 1);
	}
	


public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public Integer ID_BDUA;

				public Integer getID_BDUA () {
					return this.ID_BDUA;
				}

				public Boolean ID_BDUAIsNullable(){
				    return true;
				}
				public Boolean ID_BDUAIsKey(){
				    return false;
				}
				public Integer ID_BDUALength(){
				    return null;
				}
				public Integer ID_BDUAPrecision(){
				    return null;
				}
				public String ID_BDUADefault(){
				
					return "";
				
				}
				public String ID_BDUAComment(){
				
				    return "";
				
				}
				public String ID_BDUAPattern(){
				
					return "";
				
				}
				public String ID_BDUAOriginalDbColumnName(){
				
					return "ID_BDUA";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return null;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return null;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return null;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return null;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return null;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return null;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return null;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return null;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String FECHA_NACIMIENTO;

				public String getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return null;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return null;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				
			    public String SIGLA_SEXO;

				public String getSIGLA_SEXO () {
					return this.SIGLA_SEXO;
				}

				public Boolean SIGLA_SEXOIsNullable(){
				    return true;
				}
				public Boolean SIGLA_SEXOIsKey(){
				    return false;
				}
				public Integer SIGLA_SEXOLength(){
				    return null;
				}
				public Integer SIGLA_SEXOPrecision(){
				    return null;
				}
				public String SIGLA_SEXODefault(){
				
					return null;
				
				}
				public String SIGLA_SEXOComment(){
				
				    return "";
				
				}
				public String SIGLA_SEXOPattern(){
				
					return "";
				
				}
				public String SIGLA_SEXOOriginalDbColumnName(){
				
					return "SIGLA_SEXO";
				
				}

				
			    public String FECHA_MODIFICACION;

				public String getFECHA_MODIFICACION () {
					return this.FECHA_MODIFICACION;
				}

				public Boolean FECHA_MODIFICACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_MODIFICACIONIsKey(){
				    return false;
				}
				public Integer FECHA_MODIFICACIONLength(){
				    return null;
				}
				public Integer FECHA_MODIFICACIONPrecision(){
				    return null;
				}
				public String FECHA_MODIFICACIONDefault(){
				
					return null;
				
				}
				public String FECHA_MODIFICACIONComment(){
				
				    return "";
				
				}
				public String FECHA_MODIFICACIONPattern(){
				
					return "";
				
				}
				public String FECHA_MODIFICACIONOriginalDbColumnName(){
				
					return "FECHA_MODIFICACION";
				
				}

				
			    public String CODIGO_ESM_ANTERIOR;

				public String getCODIGO_ESM_ANTERIOR () {
					return this.CODIGO_ESM_ANTERIOR;
				}

				public Boolean CODIGO_ESM_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ESM_ANTERIORIsKey(){
				    return false;
				}
				public Integer CODIGO_ESM_ANTERIORLength(){
				    return null;
				}
				public Integer CODIGO_ESM_ANTERIORPrecision(){
				    return null;
				}
				public String CODIGO_ESM_ANTERIORDefault(){
				
					return null;
				
				}
				public String CODIGO_ESM_ANTERIORComment(){
				
				    return "";
				
				}
				public String CODIGO_ESM_ANTERIORPattern(){
				
					return "";
				
				}
				public String CODIGO_ESM_ANTERIOROriginalDbColumnName(){
				
					return "CODIGO_ESM_ANTERIOR";
				
				}

				
			    public String SIGLA_ESEM_ANTERIOR;

				public String getSIGLA_ESEM_ANTERIOR () {
					return this.SIGLA_ESEM_ANTERIOR;
				}

				public Boolean SIGLA_ESEM_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean SIGLA_ESEM_ANTERIORIsKey(){
				    return false;
				}
				public Integer SIGLA_ESEM_ANTERIORLength(){
				    return null;
				}
				public Integer SIGLA_ESEM_ANTERIORPrecision(){
				    return null;
				}
				public String SIGLA_ESEM_ANTERIORDefault(){
				
					return null;
				
				}
				public String SIGLA_ESEM_ANTERIORComment(){
				
				    return "";
				
				}
				public String SIGLA_ESEM_ANTERIORPattern(){
				
					return "";
				
				}
				public String SIGLA_ESEM_ANTERIOROriginalDbColumnName(){
				
					return "SIGLA_ESEM_ANTERIOR";
				
				}

				
			    public String ESM_ANTERIOR;

				public String getESM_ANTERIOR () {
					return this.ESM_ANTERIOR;
				}

				public Boolean ESM_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean ESM_ANTERIORIsKey(){
				    return false;
				}
				public Integer ESM_ANTERIORLength(){
				    return null;
				}
				public Integer ESM_ANTERIORPrecision(){
				    return null;
				}
				public String ESM_ANTERIORDefault(){
				
					return null;
				
				}
				public String ESM_ANTERIORComment(){
				
				    return "";
				
				}
				public String ESM_ANTERIORPattern(){
				
					return "";
				
				}
				public String ESM_ANTERIOROriginalDbColumnName(){
				
					return "ESM_ANTERIOR";
				
				}

				
			    public String CODIGO_ESM_ACTUAL;

				public String getCODIGO_ESM_ACTUAL () {
					return this.CODIGO_ESM_ACTUAL;
				}

				public Boolean CODIGO_ESM_ACTUALIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ESM_ACTUALIsKey(){
				    return false;
				}
				public Integer CODIGO_ESM_ACTUALLength(){
				    return null;
				}
				public Integer CODIGO_ESM_ACTUALPrecision(){
				    return null;
				}
				public String CODIGO_ESM_ACTUALDefault(){
				
					return null;
				
				}
				public String CODIGO_ESM_ACTUALComment(){
				
				    return "";
				
				}
				public String CODIGO_ESM_ACTUALPattern(){
				
					return "";
				
				}
				public String CODIGO_ESM_ACTUALOriginalDbColumnName(){
				
					return "CODIGO_ESM_ACTUAL";
				
				}

				
			    public String SIGLA_ESM_ACTUAL;

				public String getSIGLA_ESM_ACTUAL () {
					return this.SIGLA_ESM_ACTUAL;
				}

				public Boolean SIGLA_ESM_ACTUALIsNullable(){
				    return true;
				}
				public Boolean SIGLA_ESM_ACTUALIsKey(){
				    return false;
				}
				public Integer SIGLA_ESM_ACTUALLength(){
				    return null;
				}
				public Integer SIGLA_ESM_ACTUALPrecision(){
				    return null;
				}
				public String SIGLA_ESM_ACTUALDefault(){
				
					return null;
				
				}
				public String SIGLA_ESM_ACTUALComment(){
				
				    return "";
				
				}
				public String SIGLA_ESM_ACTUALPattern(){
				
					return "";
				
				}
				public String SIGLA_ESM_ACTUALOriginalDbColumnName(){
				
					return "SIGLA_ESM_ACTUAL";
				
				}

				
			    public String ESM_ACTUAL;

				public String getESM_ACTUAL () {
					return this.ESM_ACTUAL;
				}

				public Boolean ESM_ACTUALIsNullable(){
				    return true;
				}
				public Boolean ESM_ACTUALIsKey(){
				    return false;
				}
				public Integer ESM_ACTUALLength(){
				    return null;
				}
				public Integer ESM_ACTUALPrecision(){
				    return null;
				}
				public String ESM_ACTUALDefault(){
				
					return null;
				
				}
				public String ESM_ACTUALComment(){
				
				    return "";
				
				}
				public String ESM_ACTUALPattern(){
				
					return "";
				
				}
				public String ESM_ACTUALOriginalDbColumnName(){
				
					return "ESM_ACTUAL";
				
				}

				
			    public String ESTADO_AFILIACION;

				public String getESTADO_AFILIACION () {
					return this.ESTADO_AFILIACION;
				}

				public Boolean ESTADO_AFILIACIONIsNullable(){
				    return true;
				}
				public Boolean ESTADO_AFILIACIONIsKey(){
				    return false;
				}
				public Integer ESTADO_AFILIACIONLength(){
				    return null;
				}
				public Integer ESTADO_AFILIACIONPrecision(){
				    return null;
				}
				public String ESTADO_AFILIACIONDefault(){
				
					return null;
				
				}
				public String ESTADO_AFILIACIONComment(){
				
				    return "";
				
				}
				public String ESTADO_AFILIACIONPattern(){
				
					return "";
				
				}
				public String ESTADO_AFILIACIONOriginalDbColumnName(){
				
					return "ESTADO_AFILIACION";
				
				}

				
			    public String PLANAFILIACIONES;

				public String getPLANAFILIACIONES () {
					return this.PLANAFILIACIONES;
				}

				public Boolean PLANAFILIACIONESIsNullable(){
				    return true;
				}
				public Boolean PLANAFILIACIONESIsKey(){
				    return false;
				}
				public Integer PLANAFILIACIONESLength(){
				    return null;
				}
				public Integer PLANAFILIACIONESPrecision(){
				    return null;
				}
				public String PLANAFILIACIONESDefault(){
				
					return null;
				
				}
				public String PLANAFILIACIONESComment(){
				
				    return "";
				
				}
				public String PLANAFILIACIONESPattern(){
				
					return "";
				
				}
				public String PLANAFILIACIONESOriginalDbColumnName(){
				
					return "PLANAFILIACIONES";
				
				}

				
			    public String FECHA_DEFUNCION;

				public String getFECHA_DEFUNCION () {
					return this.FECHA_DEFUNCION;
				}

				public Boolean FECHA_DEFUNCIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_DEFUNCIONIsKey(){
				    return false;
				}
				public Integer FECHA_DEFUNCIONLength(){
				    return null;
				}
				public Integer FECHA_DEFUNCIONPrecision(){
				    return null;
				}
				public String FECHA_DEFUNCIONDefault(){
				
					return null;
				
				}
				public String FECHA_DEFUNCIONComment(){
				
				    return "";
				
				}
				public String FECHA_DEFUNCIONPattern(){
				
					return "";
				
				}
				public String FECHA_DEFUNCIONOriginalDbColumnName(){
				
					return "FECHA_DEFUNCION";
				
				}

				
			    public String USUARIO_MODIFICADOR;

				public String getUSUARIO_MODIFICADOR () {
					return this.USUARIO_MODIFICADOR;
				}

				public Boolean USUARIO_MODIFICADORIsNullable(){
				    return true;
				}
				public Boolean USUARIO_MODIFICADORIsKey(){
				    return false;
				}
				public Integer USUARIO_MODIFICADORLength(){
				    return null;
				}
				public Integer USUARIO_MODIFICADORPrecision(){
				    return null;
				}
				public String USUARIO_MODIFICADORDefault(){
				
					return null;
				
				}
				public String USUARIO_MODIFICADORComment(){
				
				    return "";
				
				}
				public String USUARIO_MODIFICADORPattern(){
				
					return "";
				
				}
				public String USUARIO_MODIFICADOROriginalDbColumnName(){
				
					return "USUARIO_MODIFICADOR";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
						this.ID_BDUA = readInteger(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.SIGLA_SEXO = readString(dis);
					
					this.FECHA_MODIFICACION = readString(dis);
					
					this.CODIGO_ESM_ANTERIOR = readString(dis);
					
					this.SIGLA_ESEM_ANTERIOR = readString(dis);
					
					this.ESM_ANTERIOR = readString(dis);
					
					this.CODIGO_ESM_ACTUAL = readString(dis);
					
					this.SIGLA_ESM_ACTUAL = readString(dis);
					
					this.ESM_ACTUAL = readString(dis);
					
					this.ESTADO_AFILIACION = readString(dis);
					
					this.PLANAFILIACIONES = readString(dis);
					
					this.FECHA_DEFUNCION = readString(dis);
					
					this.USUARIO_MODIFICADOR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
						this.ID_BDUA = readInteger(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.SIGLA_SEXO = readString(dis);
					
					this.FECHA_MODIFICACION = readString(dis);
					
					this.CODIGO_ESM_ANTERIOR = readString(dis);
					
					this.SIGLA_ESEM_ANTERIOR = readString(dis);
					
					this.ESM_ANTERIOR = readString(dis);
					
					this.CODIGO_ESM_ACTUAL = readString(dis);
					
					this.SIGLA_ESM_ACTUAL = readString(dis);
					
					this.ESM_ACTUAL = readString(dis);
					
					this.ESTADO_AFILIACION = readString(dis);
					
					this.PLANAFILIACIONES = readString(dis);
					
					this.FECHA_DEFUNCION = readString(dis);
					
					this.USUARIO_MODIFICADOR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_BDUA,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.SIGLA_SEXO,dos);
					
					// String
				
						writeString(this.FECHA_MODIFICACION,dos);
					
					// String
				
						writeString(this.CODIGO_ESM_ANTERIOR,dos);
					
					// String
				
						writeString(this.SIGLA_ESEM_ANTERIOR,dos);
					
					// String
				
						writeString(this.ESM_ANTERIOR,dos);
					
					// String
				
						writeString(this.CODIGO_ESM_ACTUAL,dos);
					
					// String
				
						writeString(this.SIGLA_ESM_ACTUAL,dos);
					
					// String
				
						writeString(this.ESM_ACTUAL,dos);
					
					// String
				
						writeString(this.ESTADO_AFILIACION,dos);
					
					// String
				
						writeString(this.PLANAFILIACIONES,dos);
					
					// String
				
						writeString(this.FECHA_DEFUNCION,dos);
					
					// String
				
						writeString(this.USUARIO_MODIFICADOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_BDUA,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.SIGLA_SEXO,dos);
					
					// String
				
						writeString(this.FECHA_MODIFICACION,dos);
					
					// String
				
						writeString(this.CODIGO_ESM_ANTERIOR,dos);
					
					// String
				
						writeString(this.SIGLA_ESEM_ANTERIOR,dos);
					
					// String
				
						writeString(this.ESM_ANTERIOR,dos);
					
					// String
				
						writeString(this.CODIGO_ESM_ACTUAL,dos);
					
					// String
				
						writeString(this.SIGLA_ESM_ACTUAL,dos);
					
					// String
				
						writeString(this.ESM_ACTUAL,dos);
					
					// String
				
						writeString(this.ESTADO_AFILIACION,dos);
					
					// String
				
						writeString(this.PLANAFILIACIONES,dos);
					
					// String
				
						writeString(this.FECHA_DEFUNCION,dos);
					
					// String
				
						writeString(this.USUARIO_MODIFICADOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_BDUA="+String.valueOf(ID_BDUA));
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",FECHA_NACIMIENTO="+FECHA_NACIMIENTO);
		sb.append(",SIGLA_SEXO="+SIGLA_SEXO);
		sb.append(",FECHA_MODIFICACION="+FECHA_MODIFICACION);
		sb.append(",CODIGO_ESM_ANTERIOR="+CODIGO_ESM_ANTERIOR);
		sb.append(",SIGLA_ESEM_ANTERIOR="+SIGLA_ESEM_ANTERIOR);
		sb.append(",ESM_ANTERIOR="+ESM_ANTERIOR);
		sb.append(",CODIGO_ESM_ACTUAL="+CODIGO_ESM_ACTUAL);
		sb.append(",SIGLA_ESM_ACTUAL="+SIGLA_ESM_ACTUAL);
		sb.append(",ESM_ACTUAL="+ESM_ACTUAL);
		sb.append(",ESTADO_AFILIACION="+ESTADO_AFILIACION);
		sb.append(",PLANAFILIACIONES="+PLANAFILIACIONES);
		sb.append(",FECHA_DEFUNCION="+FECHA_DEFUNCION);
		sb.append(",USUARIO_MODIFICADOR="+USUARIO_MODIFICADOR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_13Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_13_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row17Struct row17 = new row17Struct();




	
	/**
	 * [tFileOutputDelimited_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_11", false);
		start_Hash.put("tFileOutputDelimited_11", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tFileOutputDelimited_11 = 0;
		

String fileName_tFileOutputDelimited_11 = "";
    fileName_tFileOutputDelimited_11 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_11 = null;
    String extension_tFileOutputDelimited_11 = null;
    String directory_tFileOutputDelimited_11 = null;
    if((fileName_tFileOutputDelimited_11.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_11.lastIndexOf(".") < fileName_tFileOutputDelimited_11.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_11 = fileName_tFileOutputDelimited_11;
            extension_tFileOutputDelimited_11 = "";
        } else {
            fullName_tFileOutputDelimited_11 = fileName_tFileOutputDelimited_11.substring(0, fileName_tFileOutputDelimited_11.lastIndexOf("."));
            extension_tFileOutputDelimited_11 = fileName_tFileOutputDelimited_11.substring(fileName_tFileOutputDelimited_11.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_11 = fileName_tFileOutputDelimited_11.substring(0, fileName_tFileOutputDelimited_11.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_11.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_11 = fileName_tFileOutputDelimited_11.substring(0, fileName_tFileOutputDelimited_11.lastIndexOf("."));
            extension_tFileOutputDelimited_11 = fileName_tFileOutputDelimited_11.substring(fileName_tFileOutputDelimited_11.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_11 = fileName_tFileOutputDelimited_11;
            extension_tFileOutputDelimited_11 = "";
        }
        directory_tFileOutputDelimited_11 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_11 = true;
    java.io.File filetFileOutputDelimited_11 = new java.io.File(fileName_tFileOutputDelimited_11);
    globalMap.put("tFileOutputDelimited_11_FILE_NAME",fileName_tFileOutputDelimited_11);
        if(filetFileOutputDelimited_11.exists()){
            isFileGenerated_tFileOutputDelimited_11 = false;
        }
            int nb_line_tFileOutputDelimited_11 = 0;
            int splitedFileNo_tFileOutputDelimited_11 = 0;
            int currentRow_tFileOutputDelimited_11 = 0;

            final String OUT_DELIM_tFileOutputDelimited_11 = /** Start field tFileOutputDelimited_11:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_11:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_11 = /** Start field tFileOutputDelimited_11:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_11:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_11 != null && directory_tFileOutputDelimited_11.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_11 = new java.io.File(directory_tFileOutputDelimited_11);
                        if(!dir_tFileOutputDelimited_11.exists()) {
                            dir_tFileOutputDelimited_11.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_11 = null;

                        outtFileOutputDelimited_11 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_11, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_11", outtFileOutputDelimited_11);
                                    if(filetFileOutputDelimited_11.length()==0){
                                        outtFileOutputDelimited_11.write("ID_BDUA");
                                            outtFileOutputDelimited_11.write(OUT_DELIM_tFileOutputDelimited_11);
                                        outtFileOutputDelimited_11.write("TIPO_DOCUMENTO");
                                            outtFileOutputDelimited_11.write(OUT_DELIM_tFileOutputDelimited_11);
                                        outtFileOutputDelimited_11.write("DOCUMENTO");
                                            outtFileOutputDelimited_11.write(OUT_DELIM_tFileOutputDelimited_11);
                                        outtFileOutputDelimited_11.write("PRIMER_APELLIDO");
                                            outtFileOutputDelimited_11.write(OUT_DELIM_tFileOutputDelimited_11);
                                        outtFileOutputDelimited_11.write("SEGUNDO_APELLIDO");
                                            outtFileOutputDelimited_11.write(OUT_DELIM_tFileOutputDelimited_11);
                                        outtFileOutputDelimited_11.write("PRIMER_NOMBRE");
                                            outtFileOutputDelimited_11.write(OUT_DELIM_tFileOutputDelimited_11);
                                        outtFileOutputDelimited_11.write("SEGUNDO_NOMBRE");
                                            outtFileOutputDelimited_11.write(OUT_DELIM_tFileOutputDelimited_11);
                                        outtFileOutputDelimited_11.write("FECHA_NACIMIENTO");
                                            outtFileOutputDelimited_11.write(OUT_DELIM_tFileOutputDelimited_11);
                                        outtFileOutputDelimited_11.write("SIGLA_SEXO");
                                            outtFileOutputDelimited_11.write(OUT_DELIM_tFileOutputDelimited_11);
                                        outtFileOutputDelimited_11.write("FECHA_MODIFICACION");
                                            outtFileOutputDelimited_11.write(OUT_DELIM_tFileOutputDelimited_11);
                                        outtFileOutputDelimited_11.write("CODIGO_ESM_ANTERIOR");
                                            outtFileOutputDelimited_11.write(OUT_DELIM_tFileOutputDelimited_11);
                                        outtFileOutputDelimited_11.write("SIGLA_ESEM_ANTERIOR");
                                            outtFileOutputDelimited_11.write(OUT_DELIM_tFileOutputDelimited_11);
                                        outtFileOutputDelimited_11.write("ESM_ANTERIOR");
                                            outtFileOutputDelimited_11.write(OUT_DELIM_tFileOutputDelimited_11);
                                        outtFileOutputDelimited_11.write("CODIGO_ESM_ACTUAL");
                                            outtFileOutputDelimited_11.write(OUT_DELIM_tFileOutputDelimited_11);
                                        outtFileOutputDelimited_11.write("SIGLA_ESM_ACTUAL");
                                            outtFileOutputDelimited_11.write(OUT_DELIM_tFileOutputDelimited_11);
                                        outtFileOutputDelimited_11.write("ESM_ACTUAL");
                                            outtFileOutputDelimited_11.write(OUT_DELIM_tFileOutputDelimited_11);
                                        outtFileOutputDelimited_11.write("ESTADO_AFILIACION");
                                            outtFileOutputDelimited_11.write(OUT_DELIM_tFileOutputDelimited_11);
                                        outtFileOutputDelimited_11.write("PLANAFILIACIONES");
                                            outtFileOutputDelimited_11.write(OUT_DELIM_tFileOutputDelimited_11);
                                        outtFileOutputDelimited_11.write("FECHA_DEFUNCION");
                                            outtFileOutputDelimited_11.write(OUT_DELIM_tFileOutputDelimited_11);
                                        outtFileOutputDelimited_11.write("USUARIO_MODIFICADOR");
                                        outtFileOutputDelimited_11.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_11);
                                        outtFileOutputDelimited_11.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_11", nb_line_tFileOutputDelimited_11);

 



/**
 * [tFileOutputDelimited_11 begin ] stop
 */



	
	/**
	 * [tOracleInput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_13", false);
		start_Hash.put("tOracleInput_13", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_13";
	
	
		int tos_count_tOracleInput_13 = 0;
		
	


	
		    int nb_line_tOracleInput_13 = 0;
		    java.sql.Connection conn_tOracleInput_13 = null;
				conn_tOracleInput_13 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_13 = false;
				boolean isConnectionWrapped_tOracleInput_13 = !(conn_tOracleInput_13 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_13.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_13 = null;
                if (isConnectionWrapped_tOracleInput_13) {
					unwrappedOraConn_tOracleInput_13 = conn_tOracleInput_13.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_13 != null) {
                        isTimeZoneNull_tOracleInput_13 = (unwrappedOraConn_tOracleInput_13.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_13 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_13).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_13) {
					java.sql.Statement stmtGetTZ_tOracleInput_13 = conn_tOracleInput_13.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_13 = stmtGetTZ_tOracleInput_13.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_13 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_13.next()) {
						sessionTimezone_tOracleInput_13 = rsGetTZ_tOracleInput_13.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_13 && unwrappedOraConn_tOracleInput_13 != null) {
                        unwrappedOraConn_tOracleInput_13.setSessionTimeZone(sessionTimezone_tOracleInput_13);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_13).setSessionTimeZone(sessionTimezone_tOracleInput_13);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_13 = conn_tOracleInput_13.createStatement();

		    String dbquery_tOracleInput_13 = "SELECT  \nVM.ID_BDUA,\nreplace(replace(VM.TIPO_DOCUMENTO,chr(10),''),chr(13),'') AS TIPO_DOCUMENTO,\nreplace(replace(VM"
+".DOCUMENTO,chr(10),''),chr(13),'') AS DOCUMENTO,\nreplace(replace(VM.PRIMER_APELLIDO,chr(10),''),chr(13),'') AS PRIMER_A"
+"PELLIDO,\nreplace(replace(VM.SEGUNDO_APELLIDO,chr(10),''),chr(13),'') AS SEGUNDO_APELLIDO,\nreplace(replace(VM.PRIMER_NO"
+"MBRE,chr(10),''),chr(13),'') AS PRIMER_NOMBRE,\nreplace(replace(VM.SEGUNDO_NOMBRE,chr(10),''),chr(13),'') AS SEGUNDO_NOM"
+"BRE,\nTO_CHAR(VM.FECHA_NACIMIENTO,'DD/MM/YYYY') AS FECHA_NACIMIENTO,\nreplace(replace(VM.SIGLA_SEXO,chr(10),''),chr(13),"
+"'') AS SIGLA_SEXO,\nTO_CHAR(ap.FECHA_REGISTRO ,'DD/MM/YYYY') AS FECHA_MODIFICACION,\ngu2.CODIGO AS CODIGO_ESM_ANTERIOR,"
+"\nGU2.SIGLA AS SIGLA_ESEM_ANTERIOR,\nGU2.NOMBRE AS ESM_ANTERIOR,\ngu3.CODIGO AS CODIGO_ESM_ACTUAL,\nGU3.SIGLA AS SIGLA_ES"
+"M_ACTUAL,\nGU3.NOMBRE AS ESM_ACTUAL,\nVM.ESTAFILIACION AS ESTADO_AFILIACION, \nreplace(replace(VM.PLANAFILIACIONES,chr(1"
+"0),''),chr(13),'') AS PLANAFILIACIONES,\nVM.FECHA_DEFUNCION,\nGU.USUARIO AS USUARIO_MODIFICADOR\nFROM  VM_PERSONAS VM\nI"
+"NNER JOIN AFI_CARCHIVOS CA ON CA.DOCUMENTO = VM.DOCUMENTO AND  TRIM(UPPER(CA.TDOCUMENTOS)) = TRIM(UPPER(VM.TIPO_DOCUMENT"
+"O))\nAND TRIM(UPPER(CA.PRIMER_NOMBRE)) = TRIM(UPPER(VM.PRIMER_NOMBRE)) AND TRIM(UPPER(CA.PRIMER_APELLIDO)) = TRIM(UPPER("
+"VM.PRIMER_APELLIDO))\nINNER JOIN AFI_HAFILIADOS ah ON ah.AFILIADOS_ID = VM.GA\nINNER JOIN AFI_PROCESOS ap ON AP.ID = AH."
+"PROCESOS_ID \nINNER JOIN GEN_USUARIOS gu ON GU.ID = AP.USUARIOS_ID\nINNER JOIN GEN_UORG gu2 ON GU2.ID = TO_NUMBER(AH.VAN"
+"TERIOR) \nINNER JOIN GEN_UORG gu3 ON GU3.ID = TO_NUMBER(AH.VACTUAL) \nWHERE \nVM.AFILIADO_ESTREGISTRO_ID = 1\nAND AP.EST"
+"REGISTRO_ID = 1\nAND GU.ESTREGISTRO_ID = 1\nAND AH.ESTREGISTRO_ID = 1\nAND GU2.ESTREGISTRO_ID = 1\nAND GU3.ESTREGISTRO_I"
+"D = 1\nAND AH.CAMPO = 'ESMADSCRITO'\nAND CA.ARCHIVOS_ID = " + context.infoIdArchivo ;;
		    

		    globalMap.put("tOracleInput_13_QUERY",dbquery_tOracleInput_13);

		    java.sql.ResultSet rs_tOracleInput_13 = null;

		    try {
		    	rs_tOracleInput_13 = stmt_tOracleInput_13.executeQuery(dbquery_tOracleInput_13);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_13 = rs_tOracleInput_13.getMetaData();
		    	int colQtyInRs_tOracleInput_13 = rsmd_tOracleInput_13.getColumnCount();

		    String tmpContent_tOracleInput_13 = null;
		    
		    
		    while (rs_tOracleInput_13.next()) {
		        nb_line_tOracleInput_13++;
		        
							if(colQtyInRs_tOracleInput_13 < 1) {
								row17.ID_BDUA = null;
							} else {
		                          
					if(rs_tOracleInput_13.getObject(1) != null) {
						row17.ID_BDUA = rs_tOracleInput_13.getInt(1);
					} else {
				
						row17.ID_BDUA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_13 < 2) {
								row17.TIPO_DOCUMENTO = null;
							} else {
	                         		
        	row17.TIPO_DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_13, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_13 < 3) {
								row17.DOCUMENTO = null;
							} else {
	                         		
        	row17.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_13, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_13 < 4) {
								row17.PRIMER_APELLIDO = null;
							} else {
	                         		
        	row17.PRIMER_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_13, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_13 < 5) {
								row17.SEGUNDO_APELLIDO = null;
							} else {
	                         		
        	row17.SEGUNDO_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_13, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_13 < 6) {
								row17.PRIMER_NOMBRE = null;
							} else {
	                         		
        	row17.PRIMER_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_13, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_13 < 7) {
								row17.SEGUNDO_NOMBRE = null;
							} else {
	                         		
        	row17.SEGUNDO_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_13, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_13 < 8) {
								row17.FECHA_NACIMIENTO = null;
							} else {
	                         		
        	row17.FECHA_NACIMIENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_13, 8, false);
		                    }
							if(colQtyInRs_tOracleInput_13 < 9) {
								row17.SIGLA_SEXO = null;
							} else {
	                         		
        	row17.SIGLA_SEXO = routines.system.JDBCUtil.getString(rs_tOracleInput_13, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_13 < 10) {
								row17.FECHA_MODIFICACION = null;
							} else {
	                         		
        	row17.FECHA_MODIFICACION = routines.system.JDBCUtil.getString(rs_tOracleInput_13, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_13 < 11) {
								row17.CODIGO_ESM_ANTERIOR = null;
							} else {
	                         		
        	row17.CODIGO_ESM_ANTERIOR = routines.system.JDBCUtil.getString(rs_tOracleInput_13, 11, false);
		                    }
							if(colQtyInRs_tOracleInput_13 < 12) {
								row17.SIGLA_ESEM_ANTERIOR = null;
							} else {
	                         		
        	row17.SIGLA_ESEM_ANTERIOR = routines.system.JDBCUtil.getString(rs_tOracleInput_13, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_13 < 13) {
								row17.ESM_ANTERIOR = null;
							} else {
	                         		
        	row17.ESM_ANTERIOR = routines.system.JDBCUtil.getString(rs_tOracleInput_13, 13, false);
		                    }
							if(colQtyInRs_tOracleInput_13 < 14) {
								row17.CODIGO_ESM_ACTUAL = null;
							} else {
	                         		
        	row17.CODIGO_ESM_ACTUAL = routines.system.JDBCUtil.getString(rs_tOracleInput_13, 14, false);
		                    }
							if(colQtyInRs_tOracleInput_13 < 15) {
								row17.SIGLA_ESM_ACTUAL = null;
							} else {
	                         		
        	row17.SIGLA_ESM_ACTUAL = routines.system.JDBCUtil.getString(rs_tOracleInput_13, 15, false);
		                    }
							if(colQtyInRs_tOracleInput_13 < 16) {
								row17.ESM_ACTUAL = null;
							} else {
	                         		
        	row17.ESM_ACTUAL = routines.system.JDBCUtil.getString(rs_tOracleInput_13, 16, false);
		                    }
							if(colQtyInRs_tOracleInput_13 < 17) {
								row17.ESTADO_AFILIACION = null;
							} else {
	                         		
        	row17.ESTADO_AFILIACION = routines.system.JDBCUtil.getString(rs_tOracleInput_13, 17, false);
		                    }
							if(colQtyInRs_tOracleInput_13 < 18) {
								row17.PLANAFILIACIONES = null;
							} else {
	                         		
        	row17.PLANAFILIACIONES = routines.system.JDBCUtil.getString(rs_tOracleInput_13, 18, false);
		                    }
							if(colQtyInRs_tOracleInput_13 < 19) {
								row17.FECHA_DEFUNCION = null;
							} else {
	                         		
        	row17.FECHA_DEFUNCION = routines.system.JDBCUtil.getString(rs_tOracleInput_13, 19, false);
		                    }
							if(colQtyInRs_tOracleInput_13 < 20) {
								row17.USUARIO_MODIFICADOR = null;
							} else {
	                         		
        	row17.USUARIO_MODIFICADOR = routines.system.JDBCUtil.getString(rs_tOracleInput_13, 20, false);
		                    }
					




 



/**
 * [tOracleInput_13 begin ] stop
 */
	
	/**
	 * [tOracleInput_13 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_13";
	
	

 


	tos_count_tOracleInput_13++;

/**
 * [tOracleInput_13 main ] stop
 */
	
	/**
	 * [tOracleInput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_13";
	
	

 



/**
 * [tOracleInput_13 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_11 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_11 = new StringBuilder();
                            if(row17.ID_BDUA != null) {
                        sb_tFileOutputDelimited_11.append(
                            row17.ID_BDUA
                        );
                            }
                            sb_tFileOutputDelimited_11.append(OUT_DELIM_tFileOutputDelimited_11);
                            if(row17.TIPO_DOCUMENTO != null) {
                        sb_tFileOutputDelimited_11.append(
                            row17.TIPO_DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_11.append(OUT_DELIM_tFileOutputDelimited_11);
                            if(row17.DOCUMENTO != null) {
                        sb_tFileOutputDelimited_11.append(
                            row17.DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_11.append(OUT_DELIM_tFileOutputDelimited_11);
                            if(row17.PRIMER_APELLIDO != null) {
                        sb_tFileOutputDelimited_11.append(
                            row17.PRIMER_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_11.append(OUT_DELIM_tFileOutputDelimited_11);
                            if(row17.SEGUNDO_APELLIDO != null) {
                        sb_tFileOutputDelimited_11.append(
                            row17.SEGUNDO_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_11.append(OUT_DELIM_tFileOutputDelimited_11);
                            if(row17.PRIMER_NOMBRE != null) {
                        sb_tFileOutputDelimited_11.append(
                            row17.PRIMER_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_11.append(OUT_DELIM_tFileOutputDelimited_11);
                            if(row17.SEGUNDO_NOMBRE != null) {
                        sb_tFileOutputDelimited_11.append(
                            row17.SEGUNDO_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_11.append(OUT_DELIM_tFileOutputDelimited_11);
                            if(row17.FECHA_NACIMIENTO != null) {
                        sb_tFileOutputDelimited_11.append(
                            row17.FECHA_NACIMIENTO
                        );
                            }
                            sb_tFileOutputDelimited_11.append(OUT_DELIM_tFileOutputDelimited_11);
                            if(row17.SIGLA_SEXO != null) {
                        sb_tFileOutputDelimited_11.append(
                            row17.SIGLA_SEXO
                        );
                            }
                            sb_tFileOutputDelimited_11.append(OUT_DELIM_tFileOutputDelimited_11);
                            if(row17.FECHA_MODIFICACION != null) {
                        sb_tFileOutputDelimited_11.append(
                            row17.FECHA_MODIFICACION
                        );
                            }
                            sb_tFileOutputDelimited_11.append(OUT_DELIM_tFileOutputDelimited_11);
                            if(row17.CODIGO_ESM_ANTERIOR != null) {
                        sb_tFileOutputDelimited_11.append(
                            row17.CODIGO_ESM_ANTERIOR
                        );
                            }
                            sb_tFileOutputDelimited_11.append(OUT_DELIM_tFileOutputDelimited_11);
                            if(row17.SIGLA_ESEM_ANTERIOR != null) {
                        sb_tFileOutputDelimited_11.append(
                            row17.SIGLA_ESEM_ANTERIOR
                        );
                            }
                            sb_tFileOutputDelimited_11.append(OUT_DELIM_tFileOutputDelimited_11);
                            if(row17.ESM_ANTERIOR != null) {
                        sb_tFileOutputDelimited_11.append(
                            row17.ESM_ANTERIOR
                        );
                            }
                            sb_tFileOutputDelimited_11.append(OUT_DELIM_tFileOutputDelimited_11);
                            if(row17.CODIGO_ESM_ACTUAL != null) {
                        sb_tFileOutputDelimited_11.append(
                            row17.CODIGO_ESM_ACTUAL
                        );
                            }
                            sb_tFileOutputDelimited_11.append(OUT_DELIM_tFileOutputDelimited_11);
                            if(row17.SIGLA_ESM_ACTUAL != null) {
                        sb_tFileOutputDelimited_11.append(
                            row17.SIGLA_ESM_ACTUAL
                        );
                            }
                            sb_tFileOutputDelimited_11.append(OUT_DELIM_tFileOutputDelimited_11);
                            if(row17.ESM_ACTUAL != null) {
                        sb_tFileOutputDelimited_11.append(
                            row17.ESM_ACTUAL
                        );
                            }
                            sb_tFileOutputDelimited_11.append(OUT_DELIM_tFileOutputDelimited_11);
                            if(row17.ESTADO_AFILIACION != null) {
                        sb_tFileOutputDelimited_11.append(
                            row17.ESTADO_AFILIACION
                        );
                            }
                            sb_tFileOutputDelimited_11.append(OUT_DELIM_tFileOutputDelimited_11);
                            if(row17.PLANAFILIACIONES != null) {
                        sb_tFileOutputDelimited_11.append(
                            row17.PLANAFILIACIONES
                        );
                            }
                            sb_tFileOutputDelimited_11.append(OUT_DELIM_tFileOutputDelimited_11);
                            if(row17.FECHA_DEFUNCION != null) {
                        sb_tFileOutputDelimited_11.append(
                            row17.FECHA_DEFUNCION
                        );
                            }
                            sb_tFileOutputDelimited_11.append(OUT_DELIM_tFileOutputDelimited_11);
                            if(row17.USUARIO_MODIFICADOR != null) {
                        sb_tFileOutputDelimited_11.append(
                            row17.USUARIO_MODIFICADOR
                        );
                            }
                    sb_tFileOutputDelimited_11.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_11);


                    nb_line_tFileOutputDelimited_11++;
                    resourceMap.put("nb_line_tFileOutputDelimited_11", nb_line_tFileOutputDelimited_11);

                        outtFileOutputDelimited_11.write(sb_tFileOutputDelimited_11.toString());




 


	tos_count_tFileOutputDelimited_11++;

/**
 * [tFileOutputDelimited_11 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_11";
	
	

 



/**
 * [tFileOutputDelimited_11 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_11";
	
	

 



/**
 * [tFileOutputDelimited_11 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_13";
	
	

 



/**
 * [tOracleInput_13 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_13 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_13";
	
	

}
}finally{
	if (rs_tOracleInput_13 != null) {
		rs_tOracleInput_13.close();
	}
	if (stmt_tOracleInput_13 != null) {
		stmt_tOracleInput_13.close();
	}
}

globalMap.put("tOracleInput_13_NB_LINE",nb_line_tOracleInput_13);
 

ok_Hash.put("tOracleInput_13", true);
end_Hash.put("tOracleInput_13", System.currentTimeMillis());

   			if (((Integer)globalMap.get("tOracleOutput_2_NB_LINE_INSERTED"))> ((Integer)globalMap.get("tOracleInput_13_NB_LINE"))) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If22", 0, "true");
					}
				tOracleInput_14Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If22", 0, "false");
					}   	 
   				}



/**
 * [tOracleInput_13 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_11 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_11";
	
	



		
			
					if(outtFileOutputDelimited_11!=null) {
						outtFileOutputDelimited_11.flush();
						outtFileOutputDelimited_11.close();
					}
				
				globalMap.put("tFileOutputDelimited_11_NB_LINE",nb_line_tFileOutputDelimited_11);
				globalMap.put("tFileOutputDelimited_11_FILE_NAME",fileName_tFileOutputDelimited_11);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_11", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_11", true);
end_Hash.put("tFileOutputDelimited_11", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk25", 0, "ok");
				}
				tFixedFlowInput_2Process(globalMap);



/**
 * [tFileOutputDelimited_11 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_13 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_13";
	
	

 



/**
 * [tOracleInput_13 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_11 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_11";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_11") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_11 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_11");
						if(outtFileOutputDelimited_11!=null) {
							outtFileOutputDelimited_11.flush();
							outtFileOutputDelimited_11.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_11 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_13_SUBPROCESS_STATE", 1);
	}
	


public static class row18Struct implements routines.system.IPersistableRow<row18Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public String TDOCUMENTOS;

				public String getTDOCUMENTOS () {
					return this.TDOCUMENTOS;
				}

				public Boolean TDOCUMENTOSIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOSIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOSLength(){
				    return null;
				}
				public Integer TDOCUMENTOSPrecision(){
				    return null;
				}
				public String TDOCUMENTOSDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOSComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOSPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOSOriginalDbColumnName(){
				
					return "TDOCUMENTOS";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return null;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return null;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return null;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return null;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return null;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return null;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return null;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return null;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return null;
				}
				public Integer ERRORPrecision(){
				    return null;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TDOCUMENTOS = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TDOCUMENTOS = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TDOCUMENTOS,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TDOCUMENTOS,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS="+TDOCUMENTOS);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_14Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_14_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row18Struct row18 = new row18Struct();




	
	/**
	 * [tFileOutputDelimited_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_12", false);
		start_Hash.put("tFileOutputDelimited_12", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row18");
					}
				
		int tos_count_tFileOutputDelimited_12 = 0;
		

String fileName_tFileOutputDelimited_12 = "";
    fileName_tFileOutputDelimited_12 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+"ERRORES_"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_12 = null;
    String extension_tFileOutputDelimited_12 = null;
    String directory_tFileOutputDelimited_12 = null;
    if((fileName_tFileOutputDelimited_12.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_12.lastIndexOf(".") < fileName_tFileOutputDelimited_12.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_12 = fileName_tFileOutputDelimited_12;
            extension_tFileOutputDelimited_12 = "";
        } else {
            fullName_tFileOutputDelimited_12 = fileName_tFileOutputDelimited_12.substring(0, fileName_tFileOutputDelimited_12.lastIndexOf("."));
            extension_tFileOutputDelimited_12 = fileName_tFileOutputDelimited_12.substring(fileName_tFileOutputDelimited_12.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_12 = fileName_tFileOutputDelimited_12.substring(0, fileName_tFileOutputDelimited_12.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_12.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_12 = fileName_tFileOutputDelimited_12.substring(0, fileName_tFileOutputDelimited_12.lastIndexOf("."));
            extension_tFileOutputDelimited_12 = fileName_tFileOutputDelimited_12.substring(fileName_tFileOutputDelimited_12.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_12 = fileName_tFileOutputDelimited_12;
            extension_tFileOutputDelimited_12 = "";
        }
        directory_tFileOutputDelimited_12 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_12 = true;
    java.io.File filetFileOutputDelimited_12 = new java.io.File(fileName_tFileOutputDelimited_12);
    globalMap.put("tFileOutputDelimited_12_FILE_NAME",fileName_tFileOutputDelimited_12);
        if(filetFileOutputDelimited_12.exists()){
            isFileGenerated_tFileOutputDelimited_12 = false;
        }
            int nb_line_tFileOutputDelimited_12 = 0;
            int splitedFileNo_tFileOutputDelimited_12 = 0;
            int currentRow_tFileOutputDelimited_12 = 0;

            final String OUT_DELIM_tFileOutputDelimited_12 = /** Start field tFileOutputDelimited_12:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_12:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_12 = /** Start field tFileOutputDelimited_12:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_12:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_12 != null && directory_tFileOutputDelimited_12.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_12 = new java.io.File(directory_tFileOutputDelimited_12);
                        if(!dir_tFileOutputDelimited_12.exists()) {
                            dir_tFileOutputDelimited_12.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_12 = null;

                        outtFileOutputDelimited_12 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_12, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_12", outtFileOutputDelimited_12);
                                    if(filetFileOutputDelimited_12.length()==0){
                                        outtFileOutputDelimited_12.write("TDOCUMENTOS");
                                            outtFileOutputDelimited_12.write(OUT_DELIM_tFileOutputDelimited_12);
                                        outtFileOutputDelimited_12.write("DOCUMENTO");
                                            outtFileOutputDelimited_12.write(OUT_DELIM_tFileOutputDelimited_12);
                                        outtFileOutputDelimited_12.write("PRIMER_NOMBRE");
                                            outtFileOutputDelimited_12.write(OUT_DELIM_tFileOutputDelimited_12);
                                        outtFileOutputDelimited_12.write("SEGUNDO_NOMBRE");
                                            outtFileOutputDelimited_12.write(OUT_DELIM_tFileOutputDelimited_12);
                                        outtFileOutputDelimited_12.write("PRIMER_APELLIDO");
                                            outtFileOutputDelimited_12.write(OUT_DELIM_tFileOutputDelimited_12);
                                        outtFileOutputDelimited_12.write("SEGUNDO_APELLIDO");
                                            outtFileOutputDelimited_12.write(OUT_DELIM_tFileOutputDelimited_12);
                                        outtFileOutputDelimited_12.write("ERROR");
                                        outtFileOutputDelimited_12.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_12);
                                        outtFileOutputDelimited_12.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_12", nb_line_tFileOutputDelimited_12);

 



/**
 * [tFileOutputDelimited_12 begin ] stop
 */



	
	/**
	 * [tOracleInput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_14", false);
		start_Hash.put("tOracleInput_14", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_14";
	
	
		int tos_count_tOracleInput_14 = 0;
		
	


	
		    int nb_line_tOracleInput_14 = 0;
		    java.sql.Connection conn_tOracleInput_14 = null;
				conn_tOracleInput_14 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_14 = false;
				boolean isConnectionWrapped_tOracleInput_14 = !(conn_tOracleInput_14 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_14.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_14 = null;
                if (isConnectionWrapped_tOracleInput_14) {
					unwrappedOraConn_tOracleInput_14 = conn_tOracleInput_14.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_14 != null) {
                        isTimeZoneNull_tOracleInput_14 = (unwrappedOraConn_tOracleInput_14.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_14 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_14).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_14) {
					java.sql.Statement stmtGetTZ_tOracleInput_14 = conn_tOracleInput_14.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_14 = stmtGetTZ_tOracleInput_14.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_14 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_14.next()) {
						sessionTimezone_tOracleInput_14 = rsGetTZ_tOracleInput_14.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_14 && unwrappedOraConn_tOracleInput_14 != null) {
                        unwrappedOraConn_tOracleInput_14.setSessionTimeZone(sessionTimezone_tOracleInput_14);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_14).setSessionTimeZone(sessionTimezone_tOracleInput_14);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_14 = conn_tOracleInput_14.createStatement();

		    String dbquery_tOracleInput_14 = "SELECT\nCA.TDOCUMENTOS,\nCA.DOCUMENTO,\nCA.PRIMER_NOMBRE,\nCA.SEGUNDO_APELLIDO,\nCA.PRIMER_APELLIDO,\nCA.SEGUNDO_APELLI"
+"DO,\n'NO ENCOTRADO' AS ERROR\nFROM AFI_CARCHIVOS CA\nWHERE NOT EXISTS(SELECT * FROM VM_PERSONAS VP \n                WHE"
+"RE CA.DOCUMENTO = VP.DOCUMENTO AND  \n                      TRIM(UPPER(CA.TDOCUMENTOS)) = TRIM(UPPER(VP.TIPO_DOCUMENTO))"
+"AND \n                      TRIM(UPPER(CA.PRIMER_NOMBRE)) = TRIM(UPPER(VP.PRIMER_NOMBRE)) AND \n                      TR"
+"IM(UPPER(CA.PRIMER_APELLIDO)) = TRIM(UPPER(VP.PRIMER_APELLIDO))) AND CA.ARCHIVOS_ID = " + context.infoIdArchivo;
		    

		    globalMap.put("tOracleInput_14_QUERY",dbquery_tOracleInput_14);

		    java.sql.ResultSet rs_tOracleInput_14 = null;

		    try {
		    	rs_tOracleInput_14 = stmt_tOracleInput_14.executeQuery(dbquery_tOracleInput_14);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_14 = rs_tOracleInput_14.getMetaData();
		    	int colQtyInRs_tOracleInput_14 = rsmd_tOracleInput_14.getColumnCount();

		    String tmpContent_tOracleInput_14 = null;
		    
		    
		    while (rs_tOracleInput_14.next()) {
		        nb_line_tOracleInput_14++;
		        
							if(colQtyInRs_tOracleInput_14 < 1) {
								row18.TDOCUMENTOS = null;
							} else {
	                         		
        	row18.TDOCUMENTOS = routines.system.JDBCUtil.getString(rs_tOracleInput_14, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_14 < 2) {
								row18.DOCUMENTO = null;
							} else {
	                         		
        	row18.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_14, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_14 < 3) {
								row18.PRIMER_NOMBRE = null;
							} else {
	                         		
        	row18.PRIMER_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_14, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_14 < 4) {
								row18.SEGUNDO_NOMBRE = null;
							} else {
	                         		
        	row18.SEGUNDO_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_14, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_14 < 5) {
								row18.PRIMER_APELLIDO = null;
							} else {
	                         		
        	row18.PRIMER_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_14, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_14 < 6) {
								row18.SEGUNDO_APELLIDO = null;
							} else {
	                         		
        	row18.SEGUNDO_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_14, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_14 < 7) {
								row18.ERROR = null;
							} else {
	                         		
        	row18.ERROR = routines.system.JDBCUtil.getString(rs_tOracleInput_14, 7, false);
		                    }
					




 



/**
 * [tOracleInput_14 begin ] stop
 */
	
	/**
	 * [tOracleInput_14 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_14";
	
	

 


	tos_count_tOracleInput_14++;

/**
 * [tOracleInput_14 main ] stop
 */
	
	/**
	 * [tOracleInput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_14";
	
	

 



/**
 * [tOracleInput_14 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_12 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row18"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_12 = new StringBuilder();
                            if(row18.TDOCUMENTOS != null) {
                        sb_tFileOutputDelimited_12.append(
                            row18.TDOCUMENTOS
                        );
                            }
                            sb_tFileOutputDelimited_12.append(OUT_DELIM_tFileOutputDelimited_12);
                            if(row18.DOCUMENTO != null) {
                        sb_tFileOutputDelimited_12.append(
                            row18.DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_12.append(OUT_DELIM_tFileOutputDelimited_12);
                            if(row18.PRIMER_NOMBRE != null) {
                        sb_tFileOutputDelimited_12.append(
                            row18.PRIMER_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_12.append(OUT_DELIM_tFileOutputDelimited_12);
                            if(row18.SEGUNDO_NOMBRE != null) {
                        sb_tFileOutputDelimited_12.append(
                            row18.SEGUNDO_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_12.append(OUT_DELIM_tFileOutputDelimited_12);
                            if(row18.PRIMER_APELLIDO != null) {
                        sb_tFileOutputDelimited_12.append(
                            row18.PRIMER_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_12.append(OUT_DELIM_tFileOutputDelimited_12);
                            if(row18.SEGUNDO_APELLIDO != null) {
                        sb_tFileOutputDelimited_12.append(
                            row18.SEGUNDO_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_12.append(OUT_DELIM_tFileOutputDelimited_12);
                            if(row18.ERROR != null) {
                        sb_tFileOutputDelimited_12.append(
                            row18.ERROR
                        );
                            }
                    sb_tFileOutputDelimited_12.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_12);


                    nb_line_tFileOutputDelimited_12++;
                    resourceMap.put("nb_line_tFileOutputDelimited_12", nb_line_tFileOutputDelimited_12);

                        outtFileOutputDelimited_12.write(sb_tFileOutputDelimited_12.toString());




 


	tos_count_tFileOutputDelimited_12++;

/**
 * [tFileOutputDelimited_12 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_12";
	
	

 



/**
 * [tFileOutputDelimited_12 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_12";
	
	

 



/**
 * [tFileOutputDelimited_12 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_14";
	
	

 



/**
 * [tOracleInput_14 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_14 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_14";
	
	

}
}finally{
	if (rs_tOracleInput_14 != null) {
		rs_tOracleInput_14.close();
	}
	if (stmt_tOracleInput_14 != null) {
		stmt_tOracleInput_14.close();
	}
}

globalMap.put("tOracleInput_14_NB_LINE",nb_line_tOracleInput_14);
 

ok_Hash.put("tOracleInput_14", true);
end_Hash.put("tOracleInput_14", System.currentTimeMillis());




/**
 * [tOracleInput_14 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_12 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_12";
	
	



		
			
					if(outtFileOutputDelimited_12!=null) {
						outtFileOutputDelimited_12.flush();
						outtFileOutputDelimited_12.close();
					}
				
				globalMap.put("tFileOutputDelimited_12_NB_LINE",nb_line_tFileOutputDelimited_12);
				globalMap.put("tFileOutputDelimited_12_FILE_NAME",fileName_tFileOutputDelimited_12);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_12", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row18");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_12", true);
end_Hash.put("tFileOutputDelimited_12", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk20", 0, "ok");
				}
				tFixedFlowInput_1Process(globalMap);



/**
 * [tFileOutputDelimited_12 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_14 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_14";
	
	

 



/**
 * [tOracleInput_14 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_12 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_12";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_12") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_12 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_12");
						if(outtFileOutputDelimited_12!=null) {
							outtFileOutputDelimited_12.flush();
							outtFileOutputDelimited_12.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_12 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_14_SUBPROCESS_STATE", 1);
	}
	


public void tJava_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_4", false);
		start_Hash.put("tJava_4", System.currentTimeMillis());
		
	
	currentComponent="tJava_4";
	
	
		int tos_count_tJava_4 = 0;
		


System.out.println("TIPO DE ARCHIVO " + context.infoTipoArchivo);

context.infoTipoArchivoRespuesta = 0;

if(context.infoTipoArchivo == 5){
	context.infoTipoArchivoRespuesta = 1;
    System.out.println("ARCHIVO A DOS COLUMNAS");	
}

if(context.infoTipoArchivo == 25){
	context.infoTipoArchivoRespuesta = 2;	
	System.out.println("ARCHIVO A DOS COLUMNAS PARA ACTUALIZAR");
}

if(context.infoTipoArchivo == 26){
	context.infoTipoArchivoRespuesta = 3;	
	System.out.println("ARCHIVO A DOS COLUMNAS TRAMOS DE AFILIACIÓN");
}

if(context.infoTipoArchivo == 27){
	context.infoTipoArchivoRespuesta = 4;	
	System.out.println("ARCHIVO A DOS COLUMNAS CAMBIOS DE ESM");
}

 



/**
 * [tJava_4 begin ] stop
 */
	
	/**
	 * [tJava_4 main ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 


	tos_count_tJava_4++;

/**
 * [tJava_4 main ] stop
 */
	
	/**
	 * [tJava_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_begin ] stop
 */
	
	/**
	 * [tJava_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_end ] stop
 */
	
	/**
	 * [tJava_4 end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 

ok_Hash.put("tJava_4", true);
end_Hash.put("tJava_4", System.currentTimeMillis());

   			if (context.infoTipoArchivoRespuesta == 2) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If15", 0, "true");
					}
				tOracleInput_8Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If15", 0, "false");
					}   	 
   				}
   			if (context.infoTipoArchivoRespuesta == 1) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If16", 0, "true");
					}
				tOracleInput_9Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If16", 0, "false");
					}   	 
   				}
   			if (context.infoTipoArchivoRespuesta == 3) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If25", 0, "true");
					}
				tOracleInput_15Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If25", 0, "false");
					}   	 
   				}
   			if (context.infoTipoArchivoRespuesta == 4) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If28", 0, "true");
					}
				tOracleInput_17Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If28", 0, "false");
					}   	 
   				}



/**
 * [tJava_4 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_4 finally ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_4_SUBPROCESS_STATE", 1);
	}
	


public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public BigDecimal ID_UNICO_PERSONA;

				public BigDecimal getID_UNICO_PERSONA () {
					return this.ID_UNICO_PERSONA;
				}

				public Boolean ID_UNICO_PERSONAIsNullable(){
				    return true;
				}
				public Boolean ID_UNICO_PERSONAIsKey(){
				    return false;
				}
				public Integer ID_UNICO_PERSONALength(){
				    return null;
				}
				public Integer ID_UNICO_PERSONAPrecision(){
				    return null;
				}
				public String ID_UNICO_PERSONADefault(){
				
					return "";
				
				}
				public String ID_UNICO_PERSONAComment(){
				
				    return "";
				
				}
				public String ID_UNICO_PERSONAPattern(){
				
					return "";
				
				}
				public String ID_UNICO_PERSONAOriginalDbColumnName(){
				
					return "ID_UNICO_PERSONA";
				
				}

				
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return null;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return null;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return null;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return null;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return null;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return null;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return null;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return null;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String SIGLA_SEXO;

				public String getSIGLA_SEXO () {
					return this.SIGLA_SEXO;
				}

				public Boolean SIGLA_SEXOIsNullable(){
				    return true;
				}
				public Boolean SIGLA_SEXOIsKey(){
				    return false;
				}
				public Integer SIGLA_SEXOLength(){
				    return null;
				}
				public Integer SIGLA_SEXOPrecision(){
				    return null;
				}
				public String SIGLA_SEXODefault(){
				
					return null;
				
				}
				public String SIGLA_SEXOComment(){
				
				    return "";
				
				}
				public String SIGLA_SEXOPattern(){
				
					return "";
				
				}
				public String SIGLA_SEXOOriginalDbColumnName(){
				
					return "SIGLA_SEXO";
				
				}

				
			    public String DIRECCION;

				public String getDIRECCION () {
					return this.DIRECCION;
				}

				public Boolean DIRECCIONIsNullable(){
				    return true;
				}
				public Boolean DIRECCIONIsKey(){
				    return false;
				}
				public Integer DIRECCIONLength(){
				    return null;
				}
				public Integer DIRECCIONPrecision(){
				    return null;
				}
				public String DIRECCIONDefault(){
				
					return null;
				
				}
				public String DIRECCIONComment(){
				
				    return "";
				
				}
				public String DIRECCIONPattern(){
				
					return "";
				
				}
				public String DIRECCIONOriginalDbColumnName(){
				
					return "DIRECCION";
				
				}

				
			    public String TELEFONO;

				public String getTELEFONO () {
					return this.TELEFONO;
				}

				public Boolean TELEFONOIsNullable(){
				    return true;
				}
				public Boolean TELEFONOIsKey(){
				    return false;
				}
				public Integer TELEFONOLength(){
				    return null;
				}
				public Integer TELEFONOPrecision(){
				    return null;
				}
				public String TELEFONODefault(){
				
					return null;
				
				}
				public String TELEFONOComment(){
				
				    return "";
				
				}
				public String TELEFONOPattern(){
				
					return "";
				
				}
				public String TELEFONOOriginalDbColumnName(){
				
					return "TELEFONO";
				
				}

				
			    public String COD_PAIS_RESIDENCIA;

				public String getCOD_PAIS_RESIDENCIA () {
					return this.COD_PAIS_RESIDENCIA;
				}

				public Boolean COD_PAIS_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean COD_PAIS_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer COD_PAIS_RESIDENCIALength(){
				    return null;
				}
				public Integer COD_PAIS_RESIDENCIAPrecision(){
				    return null;
				}
				public String COD_PAIS_RESIDENCIADefault(){
				
					return null;
				
				}
				public String COD_PAIS_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String COD_PAIS_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String COD_PAIS_RESIDENCIAOriginalDbColumnName(){
				
					return "COD_PAIS_RESIDENCIA";
				
				}

				
			    public String COD_DEPTO_RESIDENCIA;

				public String getCOD_DEPTO_RESIDENCIA () {
					return this.COD_DEPTO_RESIDENCIA;
				}

				public Boolean COD_DEPTO_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean COD_DEPTO_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer COD_DEPTO_RESIDENCIALength(){
				    return null;
				}
				public Integer COD_DEPTO_RESIDENCIAPrecision(){
				    return null;
				}
				public String COD_DEPTO_RESIDENCIADefault(){
				
					return null;
				
				}
				public String COD_DEPTO_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String COD_DEPTO_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String COD_DEPTO_RESIDENCIAOriginalDbColumnName(){
				
					return "COD_DEPTO_RESIDENCIA";
				
				}

				
			    public String COD_MCIPIO_RESIDENCIA;

				public String getCOD_MCIPIO_RESIDENCIA () {
					return this.COD_MCIPIO_RESIDENCIA;
				}

				public Boolean COD_MCIPIO_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean COD_MCIPIO_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer COD_MCIPIO_RESIDENCIALength(){
				    return null;
				}
				public Integer COD_MCIPIO_RESIDENCIAPrecision(){
				    return null;
				}
				public String COD_MCIPIO_RESIDENCIADefault(){
				
					return null;
				
				}
				public String COD_MCIPIO_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String COD_MCIPIO_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String COD_MCIPIO_RESIDENCIAOriginalDbColumnName(){
				
					return "COD_MCIPIO_RESIDENCIA";
				
				}

				
			    public String COD_LOC_RESIDENCIA;

				public String getCOD_LOC_RESIDENCIA () {
					return this.COD_LOC_RESIDENCIA;
				}

				public Boolean COD_LOC_RESIDENCIAIsNullable(){
				    return true;
				}
				public Boolean COD_LOC_RESIDENCIAIsKey(){
				    return false;
				}
				public Integer COD_LOC_RESIDENCIALength(){
				    return null;
				}
				public Integer COD_LOC_RESIDENCIAPrecision(){
				    return null;
				}
				public String COD_LOC_RESIDENCIADefault(){
				
					return null;
				
				}
				public String COD_LOC_RESIDENCIAComment(){
				
				    return "";
				
				}
				public String COD_LOC_RESIDENCIAPattern(){
				
					return "";
				
				}
				public String COD_LOC_RESIDENCIAOriginalDbColumnName(){
				
					return "COD_LOC_RESIDENCIA";
				
				}

				
			    public String COD_PAIS_NAC;

				public String getCOD_PAIS_NAC () {
					return this.COD_PAIS_NAC;
				}

				public Boolean COD_PAIS_NACIsNullable(){
				    return true;
				}
				public Boolean COD_PAIS_NACIsKey(){
				    return false;
				}
				public Integer COD_PAIS_NACLength(){
				    return null;
				}
				public Integer COD_PAIS_NACPrecision(){
				    return null;
				}
				public String COD_PAIS_NACDefault(){
				
					return null;
				
				}
				public String COD_PAIS_NACComment(){
				
				    return "";
				
				}
				public String COD_PAIS_NACPattern(){
				
					return "";
				
				}
				public String COD_PAIS_NACOriginalDbColumnName(){
				
					return "COD_PAIS_NAC";
				
				}

				
			    public String COD_DEPARTAMENTO_NAC;

				public String getCOD_DEPARTAMENTO_NAC () {
					return this.COD_DEPARTAMENTO_NAC;
				}

				public Boolean COD_DEPARTAMENTO_NACIsNullable(){
				    return true;
				}
				public Boolean COD_DEPARTAMENTO_NACIsKey(){
				    return false;
				}
				public Integer COD_DEPARTAMENTO_NACLength(){
				    return null;
				}
				public Integer COD_DEPARTAMENTO_NACPrecision(){
				    return null;
				}
				public String COD_DEPARTAMENTO_NACDefault(){
				
					return null;
				
				}
				public String COD_DEPARTAMENTO_NACComment(){
				
				    return "";
				
				}
				public String COD_DEPARTAMENTO_NACPattern(){
				
					return "";
				
				}
				public String COD_DEPARTAMENTO_NACOriginalDbColumnName(){
				
					return "COD_DEPARTAMENTO_NAC";
				
				}

				
			    public String COD_MCIPIO_NAC;

				public String getCOD_MCIPIO_NAC () {
					return this.COD_MCIPIO_NAC;
				}

				public Boolean COD_MCIPIO_NACIsNullable(){
				    return true;
				}
				public Boolean COD_MCIPIO_NACIsKey(){
				    return false;
				}
				public Integer COD_MCIPIO_NACLength(){
				    return null;
				}
				public Integer COD_MCIPIO_NACPrecision(){
				    return null;
				}
				public String COD_MCIPIO_NACDefault(){
				
					return null;
				
				}
				public String COD_MCIPIO_NACComment(){
				
				    return "";
				
				}
				public String COD_MCIPIO_NACPattern(){
				
					return "";
				
				}
				public String COD_MCIPIO_NACOriginalDbColumnName(){
				
					return "COD_MCIPIO_NAC";
				
				}

				
			    public String COD_PAIS_EXP;

				public String getCOD_PAIS_EXP () {
					return this.COD_PAIS_EXP;
				}

				public Boolean COD_PAIS_EXPIsNullable(){
				    return true;
				}
				public Boolean COD_PAIS_EXPIsKey(){
				    return false;
				}
				public Integer COD_PAIS_EXPLength(){
				    return null;
				}
				public Integer COD_PAIS_EXPPrecision(){
				    return null;
				}
				public String COD_PAIS_EXPDefault(){
				
					return null;
				
				}
				public String COD_PAIS_EXPComment(){
				
				    return "";
				
				}
				public String COD_PAIS_EXPPattern(){
				
					return "";
				
				}
				public String COD_PAIS_EXPOriginalDbColumnName(){
				
					return "COD_PAIS_EXP";
				
				}

				
			    public String COD_DEPARTAMENTO_EXP;

				public String getCOD_DEPARTAMENTO_EXP () {
					return this.COD_DEPARTAMENTO_EXP;
				}

				public Boolean COD_DEPARTAMENTO_EXPIsNullable(){
				    return true;
				}
				public Boolean COD_DEPARTAMENTO_EXPIsKey(){
				    return false;
				}
				public Integer COD_DEPARTAMENTO_EXPLength(){
				    return null;
				}
				public Integer COD_DEPARTAMENTO_EXPPrecision(){
				    return null;
				}
				public String COD_DEPARTAMENTO_EXPDefault(){
				
					return null;
				
				}
				public String COD_DEPARTAMENTO_EXPComment(){
				
				    return "";
				
				}
				public String COD_DEPARTAMENTO_EXPPattern(){
				
					return "";
				
				}
				public String COD_DEPARTAMENTO_EXPOriginalDbColumnName(){
				
					return "COD_DEPARTAMENTO_EXP";
				
				}

				
			    public String COD_MUNICIPIO_EXP;

				public String getCOD_MUNICIPIO_EXP () {
					return this.COD_MUNICIPIO_EXP;
				}

				public Boolean COD_MUNICIPIO_EXPIsNullable(){
				    return true;
				}
				public Boolean COD_MUNICIPIO_EXPIsKey(){
				    return false;
				}
				public Integer COD_MUNICIPIO_EXPLength(){
				    return null;
				}
				public Integer COD_MUNICIPIO_EXPPrecision(){
				    return null;
				}
				public String COD_MUNICIPIO_EXPDefault(){
				
					return null;
				
				}
				public String COD_MUNICIPIO_EXPComment(){
				
				    return "";
				
				}
				public String COD_MUNICIPIO_EXPPattern(){
				
					return "";
				
				}
				public String COD_MUNICIPIO_EXPOriginalDbColumnName(){
				
					return "COD_MUNICIPIO_EXP";
				
				}

				
			    public String FECHA_EXPEDICION_DOCUMENTO;

				public String getFECHA_EXPEDICION_DOCUMENTO () {
					return this.FECHA_EXPEDICION_DOCUMENTO;
				}

				public Boolean FECHA_EXPEDICION_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_EXPEDICION_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer FECHA_EXPEDICION_DOCUMENTOLength(){
				    return null;
				}
				public Integer FECHA_EXPEDICION_DOCUMENTOPrecision(){
				    return null;
				}
				public String FECHA_EXPEDICION_DOCUMENTODefault(){
				
					return null;
				
				}
				public String FECHA_EXPEDICION_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String FECHA_EXPEDICION_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String FECHA_EXPEDICION_DOCUMENTOOriginalDbColumnName(){
				
					return "FECHA_EXPEDICION_DOCUMENTO";
				
				}

				
			    public String FECHA_NACIMIENTO;

				public String getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return null;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return null;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				
			    public String GSANGUINEOS;

				public String getGSANGUINEOS () {
					return this.GSANGUINEOS;
				}

				public Boolean GSANGUINEOSIsNullable(){
				    return true;
				}
				public Boolean GSANGUINEOSIsKey(){
				    return false;
				}
				public Integer GSANGUINEOSLength(){
				    return null;
				}
				public Integer GSANGUINEOSPrecision(){
				    return null;
				}
				public String GSANGUINEOSDefault(){
				
					return null;
				
				}
				public String GSANGUINEOSComment(){
				
				    return "";
				
				}
				public String GSANGUINEOSPattern(){
				
					return "";
				
				}
				public String GSANGUINEOSOriginalDbColumnName(){
				
					return "GSANGUINEOS";
				
				}

				
			    public String FACTOR_RH;

				public String getFACTOR_RH () {
					return this.FACTOR_RH;
				}

				public Boolean FACTOR_RHIsNullable(){
				    return true;
				}
				public Boolean FACTOR_RHIsKey(){
				    return false;
				}
				public Integer FACTOR_RHLength(){
				    return null;
				}
				public Integer FACTOR_RHPrecision(){
				    return null;
				}
				public String FACTOR_RHDefault(){
				
					return null;
				
				}
				public String FACTOR_RHComment(){
				
				    return "";
				
				}
				public String FACTOR_RHPattern(){
				
					return "";
				
				}
				public String FACTOR_RHOriginalDbColumnName(){
				
					return "FACTOR_RH";
				
				}

				
			    public String SIGLA_NEDUCATIVOS;

				public String getSIGLA_NEDUCATIVOS () {
					return this.SIGLA_NEDUCATIVOS;
				}

				public Boolean SIGLA_NEDUCATIVOSIsNullable(){
				    return true;
				}
				public Boolean SIGLA_NEDUCATIVOSIsKey(){
				    return false;
				}
				public Integer SIGLA_NEDUCATIVOSLength(){
				    return null;
				}
				public Integer SIGLA_NEDUCATIVOSPrecision(){
				    return null;
				}
				public String SIGLA_NEDUCATIVOSDefault(){
				
					return null;
				
				}
				public String SIGLA_NEDUCATIVOSComment(){
				
				    return "";
				
				}
				public String SIGLA_NEDUCATIVOSPattern(){
				
					return "";
				
				}
				public String SIGLA_NEDUCATIVOSOriginalDbColumnName(){
				
					return "SIGLA_NEDUCATIVOS";
				
				}

				
			    public String COD_ESM;

				public String getCOD_ESM () {
					return this.COD_ESM;
				}

				public Boolean COD_ESMIsNullable(){
				    return true;
				}
				public Boolean COD_ESMIsKey(){
				    return false;
				}
				public Integer COD_ESMLength(){
				    return null;
				}
				public Integer COD_ESMPrecision(){
				    return null;
				}
				public String COD_ESMDefault(){
				
					return null;
				
				}
				public String COD_ESMComment(){
				
				    return "";
				
				}
				public String COD_ESMPattern(){
				
					return "";
				
				}
				public String COD_ESMOriginalDbColumnName(){
				
					return "COD_ESM";
				
				}

				
			    public String SIGLA_ESM;

				public String getSIGLA_ESM () {
					return this.SIGLA_ESM;
				}

				public Boolean SIGLA_ESMIsNullable(){
				    return true;
				}
				public Boolean SIGLA_ESMIsKey(){
				    return false;
				}
				public Integer SIGLA_ESMLength(){
				    return null;
				}
				public Integer SIGLA_ESMPrecision(){
				    return null;
				}
				public String SIGLA_ESMDefault(){
				
					return null;
				
				}
				public String SIGLA_ESMComment(){
				
				    return "";
				
				}
				public String SIGLA_ESMPattern(){
				
					return "";
				
				}
				public String SIGLA_ESMOriginalDbColumnName(){
				
					return "SIGLA_ESM";
				
				}

				
			    public String COD_ETNICAS;

				public String getCOD_ETNICAS () {
					return this.COD_ETNICAS;
				}

				public Boolean COD_ETNICASIsNullable(){
				    return true;
				}
				public Boolean COD_ETNICASIsKey(){
				    return false;
				}
				public Integer COD_ETNICASLength(){
				    return null;
				}
				public Integer COD_ETNICASPrecision(){
				    return null;
				}
				public String COD_ETNICASDefault(){
				
					return null;
				
				}
				public String COD_ETNICASComment(){
				
				    return "";
				
				}
				public String COD_ETNICASPattern(){
				
					return "";
				
				}
				public String COD_ETNICASOriginalDbColumnName(){
				
					return "COD_ETNICAS";
				
				}

				
			    public String NSOCIOECONOMICOS;

				public String getNSOCIOECONOMICOS () {
					return this.NSOCIOECONOMICOS;
				}

				public Boolean NSOCIOECONOMICOSIsNullable(){
				    return true;
				}
				public Boolean NSOCIOECONOMICOSIsKey(){
				    return false;
				}
				public Integer NSOCIOECONOMICOSLength(){
				    return null;
				}
				public Integer NSOCIOECONOMICOSPrecision(){
				    return null;
				}
				public String NSOCIOECONOMICOSDefault(){
				
					return null;
				
				}
				public String NSOCIOECONOMICOSComment(){
				
				    return "";
				
				}
				public String NSOCIOECONOMICOSPattern(){
				
					return "";
				
				}
				public String NSOCIOECONOMICOSOriginalDbColumnName(){
				
					return "NSOCIOECONOMICOS";
				
				}

				
			    public String SIGLA_OCUPACIONES;

				public String getSIGLA_OCUPACIONES () {
					return this.SIGLA_OCUPACIONES;
				}

				public Boolean SIGLA_OCUPACIONESIsNullable(){
				    return true;
				}
				public Boolean SIGLA_OCUPACIONESIsKey(){
				    return false;
				}
				public Integer SIGLA_OCUPACIONESLength(){
				    return null;
				}
				public Integer SIGLA_OCUPACIONESPrecision(){
				    return null;
				}
				public String SIGLA_OCUPACIONESDefault(){
				
					return null;
				
				}
				public String SIGLA_OCUPACIONESComment(){
				
				    return "";
				
				}
				public String SIGLA_OCUPACIONESPattern(){
				
					return "";
				
				}
				public String SIGLA_OCUPACIONESOriginalDbColumnName(){
				
					return "SIGLA_OCUPACIONES";
				
				}

				
			    public String ESTATURA;

				public String getESTATURA () {
					return this.ESTATURA;
				}

				public Boolean ESTATURAIsNullable(){
				    return true;
				}
				public Boolean ESTATURAIsKey(){
				    return false;
				}
				public Integer ESTATURALength(){
				    return null;
				}
				public Integer ESTATURAPrecision(){
				    return null;
				}
				public String ESTATURADefault(){
				
					return null;
				
				}
				public String ESTATURAComment(){
				
				    return "";
				
				}
				public String ESTATURAPattern(){
				
					return "";
				
				}
				public String ESTATURAOriginalDbColumnName(){
				
					return "ESTATURA";
				
				}

				
			    public String SIGLA_TVIVIENDA;

				public String getSIGLA_TVIVIENDA () {
					return this.SIGLA_TVIVIENDA;
				}

				public Boolean SIGLA_TVIVIENDAIsNullable(){
				    return true;
				}
				public Boolean SIGLA_TVIVIENDAIsKey(){
				    return false;
				}
				public Integer SIGLA_TVIVIENDALength(){
				    return null;
				}
				public Integer SIGLA_TVIVIENDAPrecision(){
				    return null;
				}
				public String SIGLA_TVIVIENDADefault(){
				
					return null;
				
				}
				public String SIGLA_TVIVIENDAComment(){
				
				    return "";
				
				}
				public String SIGLA_TVIVIENDAPattern(){
				
					return "";
				
				}
				public String SIGLA_TVIVIENDAOriginalDbColumnName(){
				
					return "SIGLA_TVIVIENDA";
				
				}

				
			    public String FECHA_CADUCIDAD;

				public String getFECHA_CADUCIDAD () {
					return this.FECHA_CADUCIDAD;
				}

				public Boolean FECHA_CADUCIDADIsNullable(){
				    return true;
				}
				public Boolean FECHA_CADUCIDADIsKey(){
				    return false;
				}
				public Integer FECHA_CADUCIDADLength(){
				    return null;
				}
				public Integer FECHA_CADUCIDADPrecision(){
				    return null;
				}
				public String FECHA_CADUCIDADDefault(){
				
					return null;
				
				}
				public String FECHA_CADUCIDADComment(){
				
				    return "";
				
				}
				public String FECHA_CADUCIDADPattern(){
				
					return "";
				
				}
				public String FECHA_CADUCIDADOriginalDbColumnName(){
				
					return "FECHA_CADUCIDAD";
				
				}

				
			    public String SIGLA_FUERZA;

				public String getSIGLA_FUERZA () {
					return this.SIGLA_FUERZA;
				}

				public Boolean SIGLA_FUERZAIsNullable(){
				    return true;
				}
				public Boolean SIGLA_FUERZAIsKey(){
				    return false;
				}
				public Integer SIGLA_FUERZALength(){
				    return null;
				}
				public Integer SIGLA_FUERZAPrecision(){
				    return null;
				}
				public String SIGLA_FUERZADefault(){
				
					return null;
				
				}
				public String SIGLA_FUERZAComment(){
				
				    return "";
				
				}
				public String SIGLA_FUERZAPattern(){
				
					return "";
				
				}
				public String SIGLA_FUERZAOriginalDbColumnName(){
				
					return "SIGLA_FUERZA";
				
				}

				
			    public String COD_GRADO;

				public String getCOD_GRADO () {
					return this.COD_GRADO;
				}

				public Boolean COD_GRADOIsNullable(){
				    return true;
				}
				public Boolean COD_GRADOIsKey(){
				    return false;
				}
				public Integer COD_GRADOLength(){
				    return null;
				}
				public Integer COD_GRADOPrecision(){
				    return null;
				}
				public String COD_GRADODefault(){
				
					return null;
				
				}
				public String COD_GRADOComment(){
				
				    return "";
				
				}
				public String COD_GRADOPattern(){
				
					return "";
				
				}
				public String COD_GRADOOriginalDbColumnName(){
				
					return "COD_GRADO";
				
				}

				
			    public String SIGLA_GRADO;

				public String getSIGLA_GRADO () {
					return this.SIGLA_GRADO;
				}

				public Boolean SIGLA_GRADOIsNullable(){
				    return true;
				}
				public Boolean SIGLA_GRADOIsKey(){
				    return false;
				}
				public Integer SIGLA_GRADOLength(){
				    return null;
				}
				public Integer SIGLA_GRADOPrecision(){
				    return null;
				}
				public String SIGLA_GRADODefault(){
				
					return null;
				
				}
				public String SIGLA_GRADOComment(){
				
				    return "";
				
				}
				public String SIGLA_GRADOPattern(){
				
					return "";
				
				}
				public String SIGLA_GRADOOriginalDbColumnName(){
				
					return "SIGLA_GRADO";
				
				}

				
			    public String SIGLA_UMILITAR;

				public String getSIGLA_UMILITAR () {
					return this.SIGLA_UMILITAR;
				}

				public Boolean SIGLA_UMILITARIsNullable(){
				    return true;
				}
				public Boolean SIGLA_UMILITARIsKey(){
				    return false;
				}
				public Integer SIGLA_UMILITARLength(){
				    return null;
				}
				public Integer SIGLA_UMILITARPrecision(){
				    return null;
				}
				public String SIGLA_UMILITARDefault(){
				
					return null;
				
				}
				public String SIGLA_UMILITARComment(){
				
				    return "";
				
				}
				public String SIGLA_UMILITARPattern(){
				
					return "";
				
				}
				public String SIGLA_UMILITAROriginalDbColumnName(){
				
					return "SIGLA_UMILITAR";
				
				}

				
			    public String COD_UMILITAR;

				public String getCOD_UMILITAR () {
					return this.COD_UMILITAR;
				}

				public Boolean COD_UMILITARIsNullable(){
				    return true;
				}
				public Boolean COD_UMILITARIsKey(){
				    return false;
				}
				public Integer COD_UMILITARLength(){
				    return null;
				}
				public Integer COD_UMILITARPrecision(){
				    return null;
				}
				public String COD_UMILITARDefault(){
				
					return null;
				
				}
				public String COD_UMILITARComment(){
				
				    return "";
				
				}
				public String COD_UMILITARPattern(){
				
					return "";
				
				}
				public String COD_UMILITAROriginalDbColumnName(){
				
					return "COD_UMILITAR";
				
				}

				
			    public String SIGLA_TVINCULACION;

				public String getSIGLA_TVINCULACION () {
					return this.SIGLA_TVINCULACION;
				}

				public Boolean SIGLA_TVINCULACIONIsNullable(){
				    return true;
				}
				public Boolean SIGLA_TVINCULACIONIsKey(){
				    return false;
				}
				public Integer SIGLA_TVINCULACIONLength(){
				    return null;
				}
				public Integer SIGLA_TVINCULACIONPrecision(){
				    return null;
				}
				public String SIGLA_TVINCULACIONDefault(){
				
					return null;
				
				}
				public String SIGLA_TVINCULACIONComment(){
				
				    return "";
				
				}
				public String SIGLA_TVINCULACIONPattern(){
				
					return "";
				
				}
				public String SIGLA_TVINCULACIONOriginalDbColumnName(){
				
					return "SIGLA_TVINCULACION";
				
				}

				
			    public String SIGLA_TREGIMEN;

				public String getSIGLA_TREGIMEN () {
					return this.SIGLA_TREGIMEN;
				}

				public Boolean SIGLA_TREGIMENIsNullable(){
				    return true;
				}
				public Boolean SIGLA_TREGIMENIsKey(){
				    return false;
				}
				public Integer SIGLA_TREGIMENLength(){
				    return null;
				}
				public Integer SIGLA_TREGIMENPrecision(){
				    return null;
				}
				public String SIGLA_TREGIMENDefault(){
				
					return null;
				
				}
				public String SIGLA_TREGIMENComment(){
				
				    return "";
				
				}
				public String SIGLA_TREGIMENPattern(){
				
					return "";
				
				}
				public String SIGLA_TREGIMENOriginalDbColumnName(){
				
					return "SIGLA_TREGIMEN";
				
				}

				
			    public String SIGLA_TAFILIADOS;

				public String getSIGLA_TAFILIADOS () {
					return this.SIGLA_TAFILIADOS;
				}

				public Boolean SIGLA_TAFILIADOSIsNullable(){
				    return true;
				}
				public Boolean SIGLA_TAFILIADOSIsKey(){
				    return false;
				}
				public Integer SIGLA_TAFILIADOSLength(){
				    return null;
				}
				public Integer SIGLA_TAFILIADOSPrecision(){
				    return null;
				}
				public String SIGLA_TAFILIADOSDefault(){
				
					return null;
				
				}
				public String SIGLA_TAFILIADOSComment(){
				
				    return "";
				
				}
				public String SIGLA_TAFILIADOSPattern(){
				
					return "";
				
				}
				public String SIGLA_TAFILIADOSOriginalDbColumnName(){
				
					return "SIGLA_TAFILIADOS";
				
				}

				
			    public String SIGLA_ESTADO;

				public String getSIGLA_ESTADO () {
					return this.SIGLA_ESTADO;
				}

				public Boolean SIGLA_ESTADOIsNullable(){
				    return true;
				}
				public Boolean SIGLA_ESTADOIsKey(){
				    return false;
				}
				public Integer SIGLA_ESTADOLength(){
				    return null;
				}
				public Integer SIGLA_ESTADOPrecision(){
				    return null;
				}
				public String SIGLA_ESTADODefault(){
				
					return null;
				
				}
				public String SIGLA_ESTADOComment(){
				
				    return "";
				
				}
				public String SIGLA_ESTADOPattern(){
				
					return "";
				
				}
				public String SIGLA_ESTADOOriginalDbColumnName(){
				
					return "SIGLA_ESTADO";
				
				}

				
			    public String DOCUMENTO_ENTIDAD;

				public String getDOCUMENTO_ENTIDAD () {
					return this.DOCUMENTO_ENTIDAD;
				}

				public Boolean DOCUMENTO_ENTIDADIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTO_ENTIDADIsKey(){
				    return false;
				}
				public Integer DOCUMENTO_ENTIDADLength(){
				    return null;
				}
				public Integer DOCUMENTO_ENTIDADPrecision(){
				    return null;
				}
				public String DOCUMENTO_ENTIDADDefault(){
				
					return null;
				
				}
				public String DOCUMENTO_ENTIDADComment(){
				
				    return "";
				
				}
				public String DOCUMENTO_ENTIDADPattern(){
				
					return "";
				
				}
				public String DOCUMENTO_ENTIDADOriginalDbColumnName(){
				
					return "DOCUMENTO_ENTIDAD";
				
				}

				
			    public BigDecimal ENT_APO_PRINCIPAL;

				public BigDecimal getENT_APO_PRINCIPAL () {
					return this.ENT_APO_PRINCIPAL;
				}

				public Boolean ENT_APO_PRINCIPALIsNullable(){
				    return true;
				}
				public Boolean ENT_APO_PRINCIPALIsKey(){
				    return false;
				}
				public Integer ENT_APO_PRINCIPALLength(){
				    return null;
				}
				public Integer ENT_APO_PRINCIPALPrecision(){
				    return null;
				}
				public String ENT_APO_PRINCIPALDefault(){
				
					return "";
				
				}
				public String ENT_APO_PRINCIPALComment(){
				
				    return "";
				
				}
				public String ENT_APO_PRINCIPALPattern(){
				
					return "";
				
				}
				public String ENT_APO_PRINCIPALOriginalDbColumnName(){
				
					return "ENT_APO_PRINCIPAL";
				
				}

				
			    public String FECHA_VINCULACION;

				public String getFECHA_VINCULACION () {
					return this.FECHA_VINCULACION;
				}

				public Boolean FECHA_VINCULACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_VINCULACIONIsKey(){
				    return false;
				}
				public Integer FECHA_VINCULACIONLength(){
				    return null;
				}
				public Integer FECHA_VINCULACIONPrecision(){
				    return null;
				}
				public String FECHA_VINCULACIONDefault(){
				
					return null;
				
				}
				public String FECHA_VINCULACIONComment(){
				
				    return "";
				
				}
				public String FECHA_VINCULACIONPattern(){
				
					return "";
				
				}
				public String FECHA_VINCULACIONOriginalDbColumnName(){
				
					return "FECHA_VINCULACION";
				
				}

				
			    public String ESTADO_ENTIDAD;

				public String getESTADO_ENTIDAD () {
					return this.ESTADO_ENTIDAD;
				}

				public Boolean ESTADO_ENTIDADIsNullable(){
				    return true;
				}
				public Boolean ESTADO_ENTIDADIsKey(){
				    return false;
				}
				public Integer ESTADO_ENTIDADLength(){
				    return null;
				}
				public Integer ESTADO_ENTIDADPrecision(){
				    return null;
				}
				public String ESTADO_ENTIDADDefault(){
				
					return null;
				
				}
				public String ESTADO_ENTIDADComment(){
				
				    return "";
				
				}
				public String ESTADO_ENTIDADPattern(){
				
					return "";
				
				}
				public String ESTADO_ENTIDADOriginalDbColumnName(){
				
					return "ESTADO_ENTIDAD";
				
				}

				
			    public BigDecimal ID_UNICO_AFILIADO;

				public BigDecimal getID_UNICO_AFILIADO () {
					return this.ID_UNICO_AFILIADO;
				}

				public Boolean ID_UNICO_AFILIADOIsNullable(){
				    return true;
				}
				public Boolean ID_UNICO_AFILIADOIsKey(){
				    return false;
				}
				public Integer ID_UNICO_AFILIADOLength(){
				    return null;
				}
				public Integer ID_UNICO_AFILIADOPrecision(){
				    return null;
				}
				public String ID_UNICO_AFILIADODefault(){
				
					return "";
				
				}
				public String ID_UNICO_AFILIADOComment(){
				
				    return "";
				
				}
				public String ID_UNICO_AFILIADOPattern(){
				
					return "";
				
				}
				public String ID_UNICO_AFILIADOOriginalDbColumnName(){
				
					return "ID_UNICO_AFILIADO";
				
				}

				
			    public BigDecimal ID_UNICO_ENTIDAD;

				public BigDecimal getID_UNICO_ENTIDAD () {
					return this.ID_UNICO_ENTIDAD;
				}

				public Boolean ID_UNICO_ENTIDADIsNullable(){
				    return true;
				}
				public Boolean ID_UNICO_ENTIDADIsKey(){
				    return false;
				}
				public Integer ID_UNICO_ENTIDADLength(){
				    return null;
				}
				public Integer ID_UNICO_ENTIDADPrecision(){
				    return null;
				}
				public String ID_UNICO_ENTIDADDefault(){
				
					return "";
				
				}
				public String ID_UNICO_ENTIDADComment(){
				
				    return "";
				
				}
				public String ID_UNICO_ENTIDADPattern(){
				
					return "";
				
				}
				public String ID_UNICO_ENTIDADOriginalDbColumnName(){
				
					return "ID_UNICO_ENTIDAD";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return null;
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public String CELULAR;

				public String getCELULAR () {
					return this.CELULAR;
				}

				public Boolean CELULARIsNullable(){
				    return true;
				}
				public Boolean CELULARIsKey(){
				    return false;
				}
				public Integer CELULARLength(){
				    return null;
				}
				public Integer CELULARPrecision(){
				    return null;
				}
				public String CELULARDefault(){
				
					return null;
				
				}
				public String CELULARComment(){
				
				    return "";
				
				}
				public String CELULARPattern(){
				
					return "";
				
				}
				public String CELULAROriginalDbColumnName(){
				
					return "CELULAR";
				
				}

				
			    public String FECHA_DEFUNCION;

				public String getFECHA_DEFUNCION () {
					return this.FECHA_DEFUNCION;
				}

				public Boolean FECHA_DEFUNCIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_DEFUNCIONIsKey(){
				    return false;
				}
				public Integer FECHA_DEFUNCIONLength(){
				    return null;
				}
				public Integer FECHA_DEFUNCIONPrecision(){
				    return null;
				}
				public String FECHA_DEFUNCIONDefault(){
				
					return null;
				
				}
				public String FECHA_DEFUNCIONComment(){
				
				    return "";
				
				}
				public String FECHA_DEFUNCIONPattern(){
				
					return "";
				
				}
				public String FECHA_DEFUNCIONOriginalDbColumnName(){
				
					return "FECHA_DEFUNCION";
				
				}

				
			    public String OBSERVACIONES;

				public String getOBSERVACIONES () {
					return this.OBSERVACIONES;
				}

				public Boolean OBSERVACIONESIsNullable(){
				    return true;
				}
				public Boolean OBSERVACIONESIsKey(){
				    return false;
				}
				public Integer OBSERVACIONESLength(){
				    return null;
				}
				public Integer OBSERVACIONESPrecision(){
				    return null;
				}
				public String OBSERVACIONESDefault(){
				
					return null;
				
				}
				public String OBSERVACIONESComment(){
				
				    return "";
				
				}
				public String OBSERVACIONESPattern(){
				
					return "";
				
				}
				public String OBSERVACIONESOriginalDbColumnName(){
				
					return "OBSERVACIONES";
				
				}

				
			    public String PLANAFILIACIONES;

				public String getPLANAFILIACIONES () {
					return this.PLANAFILIACIONES;
				}

				public Boolean PLANAFILIACIONESIsNullable(){
				    return true;
				}
				public Boolean PLANAFILIACIONESIsKey(){
				    return false;
				}
				public Integer PLANAFILIACIONESLength(){
				    return null;
				}
				public Integer PLANAFILIACIONESPrecision(){
				    return null;
				}
				public String PLANAFILIACIONESDefault(){
				
					return null;
				
				}
				public String PLANAFILIACIONESComment(){
				
				    return "";
				
				}
				public String PLANAFILIACIONESPattern(){
				
					return "";
				
				}
				public String PLANAFILIACIONESOriginalDbColumnName(){
				
					return "PLANAFILIACIONES";
				
				}

				
			    public Integer ID_BDUA;

				public Integer getID_BDUA () {
					return this.ID_BDUA;
				}

				public Boolean ID_BDUAIsNullable(){
				    return true;
				}
				public Boolean ID_BDUAIsKey(){
				    return false;
				}
				public Integer ID_BDUALength(){
				    return null;
				}
				public Integer ID_BDUAPrecision(){
				    return null;
				}
				public String ID_BDUADefault(){
				
					return null;
				
				}
				public String ID_BDUAComment(){
				
				    return "";
				
				}
				public String ID_BDUAPattern(){
				
					return "";
				
				}
				public String ID_BDUAOriginalDbColumnName(){
				
					return "ID_BDUA";
				
				}

				
			    public String MOTIVO_CAMBIO_ESTADO;

				public String getMOTIVO_CAMBIO_ESTADO () {
					return this.MOTIVO_CAMBIO_ESTADO;
				}

				public Boolean MOTIVO_CAMBIO_ESTADOIsNullable(){
				    return true;
				}
				public Boolean MOTIVO_CAMBIO_ESTADOIsKey(){
				    return false;
				}
				public Integer MOTIVO_CAMBIO_ESTADOLength(){
				    return null;
				}
				public Integer MOTIVO_CAMBIO_ESTADOPrecision(){
				    return null;
				}
				public String MOTIVO_CAMBIO_ESTADODefault(){
				
					return null;
				
				}
				public String MOTIVO_CAMBIO_ESTADOComment(){
				
				    return "";
				
				}
				public String MOTIVO_CAMBIO_ESTADOPattern(){
				
					return "";
				
				}
				public String MOTIVO_CAMBIO_ESTADOOriginalDbColumnName(){
				
					return "MOTIVO_CAMBIO_ESTADO";
				
				}

				
			    public String MOTIVO_CAMBIO_ESM;

				public String getMOTIVO_CAMBIO_ESM () {
					return this.MOTIVO_CAMBIO_ESM;
				}

				public Boolean MOTIVO_CAMBIO_ESMIsNullable(){
				    return true;
				}
				public Boolean MOTIVO_CAMBIO_ESMIsKey(){
				    return false;
				}
				public Integer MOTIVO_CAMBIO_ESMLength(){
				    return null;
				}
				public Integer MOTIVO_CAMBIO_ESMPrecision(){
				    return null;
				}
				public String MOTIVO_CAMBIO_ESMDefault(){
				
					return null;
				
				}
				public String MOTIVO_CAMBIO_ESMComment(){
				
				    return "";
				
				}
				public String MOTIVO_CAMBIO_ESMPattern(){
				
					return "";
				
				}
				public String MOTIVO_CAMBIO_ESMOriginalDbColumnName(){
				
					return "MOTIVO_CAMBIO_ESM";
				
				}

				
			    public String DISCAPACIDAD;

				public String getDISCAPACIDAD () {
					return this.DISCAPACIDAD;
				}

				public Boolean DISCAPACIDADIsNullable(){
				    return true;
				}
				public Boolean DISCAPACIDADIsKey(){
				    return false;
				}
				public Integer DISCAPACIDADLength(){
				    return null;
				}
				public Integer DISCAPACIDADPrecision(){
				    return null;
				}
				public String DISCAPACIDADDefault(){
				
					return null;
				
				}
				public String DISCAPACIDADComment(){
				
				    return "";
				
				}
				public String DISCAPACIDADPattern(){
				
					return "";
				
				}
				public String DISCAPACIDADOriginalDbColumnName(){
				
					return "DISCAPACIDAD";
				
				}

				
			    public String POBLACION_ESPECIAL;

				public String getPOBLACION_ESPECIAL () {
					return this.POBLACION_ESPECIAL;
				}

				public Boolean POBLACION_ESPECIALIsNullable(){
				    return true;
				}
				public Boolean POBLACION_ESPECIALIsKey(){
				    return false;
				}
				public Integer POBLACION_ESPECIALLength(){
				    return null;
				}
				public Integer POBLACION_ESPECIALPrecision(){
				    return null;
				}
				public String POBLACION_ESPECIALDefault(){
				
					return null;
				
				}
				public String POBLACION_ESPECIALComment(){
				
				    return "";
				
				}
				public String POBLACION_ESPECIALPattern(){
				
					return "";
				
				}
				public String POBLACION_ESPECIALOriginalDbColumnName(){
				
					return "POBLACION_ESPECIAL";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
						this.ID_UNICO_PERSONA = (BigDecimal) dis.readObject();
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.SIGLA_SEXO = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.COD_PAIS_RESIDENCIA = readString(dis);
					
					this.COD_DEPTO_RESIDENCIA = readString(dis);
					
					this.COD_MCIPIO_RESIDENCIA = readString(dis);
					
					this.COD_LOC_RESIDENCIA = readString(dis);
					
					this.COD_PAIS_NAC = readString(dis);
					
					this.COD_DEPARTAMENTO_NAC = readString(dis);
					
					this.COD_MCIPIO_NAC = readString(dis);
					
					this.COD_PAIS_EXP = readString(dis);
					
					this.COD_DEPARTAMENTO_EXP = readString(dis);
					
					this.COD_MUNICIPIO_EXP = readString(dis);
					
					this.FECHA_EXPEDICION_DOCUMENTO = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.GSANGUINEOS = readString(dis);
					
					this.FACTOR_RH = readString(dis);
					
					this.SIGLA_NEDUCATIVOS = readString(dis);
					
					this.COD_ESM = readString(dis);
					
					this.SIGLA_ESM = readString(dis);
					
					this.COD_ETNICAS = readString(dis);
					
					this.NSOCIOECONOMICOS = readString(dis);
					
					this.SIGLA_OCUPACIONES = readString(dis);
					
					this.ESTATURA = readString(dis);
					
					this.SIGLA_TVIVIENDA = readString(dis);
					
					this.FECHA_CADUCIDAD = readString(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
					this.COD_GRADO = readString(dis);
					
					this.SIGLA_GRADO = readString(dis);
					
					this.SIGLA_UMILITAR = readString(dis);
					
					this.COD_UMILITAR = readString(dis);
					
					this.SIGLA_TVINCULACION = readString(dis);
					
					this.SIGLA_TREGIMEN = readString(dis);
					
					this.SIGLA_TAFILIADOS = readString(dis);
					
					this.SIGLA_ESTADO = readString(dis);
					
					this.DOCUMENTO_ENTIDAD = readString(dis);
					
						this.ENT_APO_PRINCIPAL = (BigDecimal) dis.readObject();
					
					this.FECHA_VINCULACION = readString(dis);
					
					this.ESTADO_ENTIDAD = readString(dis);
					
						this.ID_UNICO_AFILIADO = (BigDecimal) dis.readObject();
					
						this.ID_UNICO_ENTIDAD = (BigDecimal) dis.readObject();
					
					this.EMAIL = readString(dis);
					
					this.CELULAR = readString(dis);
					
					this.FECHA_DEFUNCION = readString(dis);
					
					this.OBSERVACIONES = readString(dis);
					
					this.PLANAFILIACIONES = readString(dis);
					
						this.ID_BDUA = readInteger(dis);
					
					this.MOTIVO_CAMBIO_ESTADO = readString(dis);
					
					this.MOTIVO_CAMBIO_ESM = readString(dis);
					
					this.DISCAPACIDAD = readString(dis);
					
					this.POBLACION_ESPECIAL = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
						this.ID_UNICO_PERSONA = (BigDecimal) dis.readObject();
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.SIGLA_SEXO = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.COD_PAIS_RESIDENCIA = readString(dis);
					
					this.COD_DEPTO_RESIDENCIA = readString(dis);
					
					this.COD_MCIPIO_RESIDENCIA = readString(dis);
					
					this.COD_LOC_RESIDENCIA = readString(dis);
					
					this.COD_PAIS_NAC = readString(dis);
					
					this.COD_DEPARTAMENTO_NAC = readString(dis);
					
					this.COD_MCIPIO_NAC = readString(dis);
					
					this.COD_PAIS_EXP = readString(dis);
					
					this.COD_DEPARTAMENTO_EXP = readString(dis);
					
					this.COD_MUNICIPIO_EXP = readString(dis);
					
					this.FECHA_EXPEDICION_DOCUMENTO = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.GSANGUINEOS = readString(dis);
					
					this.FACTOR_RH = readString(dis);
					
					this.SIGLA_NEDUCATIVOS = readString(dis);
					
					this.COD_ESM = readString(dis);
					
					this.SIGLA_ESM = readString(dis);
					
					this.COD_ETNICAS = readString(dis);
					
					this.NSOCIOECONOMICOS = readString(dis);
					
					this.SIGLA_OCUPACIONES = readString(dis);
					
					this.ESTATURA = readString(dis);
					
					this.SIGLA_TVIVIENDA = readString(dis);
					
					this.FECHA_CADUCIDAD = readString(dis);
					
					this.SIGLA_FUERZA = readString(dis);
					
					this.COD_GRADO = readString(dis);
					
					this.SIGLA_GRADO = readString(dis);
					
					this.SIGLA_UMILITAR = readString(dis);
					
					this.COD_UMILITAR = readString(dis);
					
					this.SIGLA_TVINCULACION = readString(dis);
					
					this.SIGLA_TREGIMEN = readString(dis);
					
					this.SIGLA_TAFILIADOS = readString(dis);
					
					this.SIGLA_ESTADO = readString(dis);
					
					this.DOCUMENTO_ENTIDAD = readString(dis);
					
						this.ENT_APO_PRINCIPAL = (BigDecimal) dis.readObject();
					
					this.FECHA_VINCULACION = readString(dis);
					
					this.ESTADO_ENTIDAD = readString(dis);
					
						this.ID_UNICO_AFILIADO = (BigDecimal) dis.readObject();
					
						this.ID_UNICO_ENTIDAD = (BigDecimal) dis.readObject();
					
					this.EMAIL = readString(dis);
					
					this.CELULAR = readString(dis);
					
					this.FECHA_DEFUNCION = readString(dis);
					
					this.OBSERVACIONES = readString(dis);
					
					this.PLANAFILIACIONES = readString(dis);
					
						this.ID_BDUA = readInteger(dis);
					
					this.MOTIVO_CAMBIO_ESTADO = readString(dis);
					
					this.MOTIVO_CAMBIO_ESM = readString(dis);
					
					this.DISCAPACIDAD = readString(dis);
					
					this.POBLACION_ESPECIAL = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.ID_UNICO_PERSONA);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.SIGLA_SEXO,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.COD_PAIS_RESIDENCIA,dos);
					
					// String
				
						writeString(this.COD_DEPTO_RESIDENCIA,dos);
					
					// String
				
						writeString(this.COD_MCIPIO_RESIDENCIA,dos);
					
					// String
				
						writeString(this.COD_LOC_RESIDENCIA,dos);
					
					// String
				
						writeString(this.COD_PAIS_NAC,dos);
					
					// String
				
						writeString(this.COD_DEPARTAMENTO_NAC,dos);
					
					// String
				
						writeString(this.COD_MCIPIO_NAC,dos);
					
					// String
				
						writeString(this.COD_PAIS_EXP,dos);
					
					// String
				
						writeString(this.COD_DEPARTAMENTO_EXP,dos);
					
					// String
				
						writeString(this.COD_MUNICIPIO_EXP,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_DOCUMENTO,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.GSANGUINEOS,dos);
					
					// String
				
						writeString(this.FACTOR_RH,dos);
					
					// String
				
						writeString(this.SIGLA_NEDUCATIVOS,dos);
					
					// String
				
						writeString(this.COD_ESM,dos);
					
					// String
				
						writeString(this.SIGLA_ESM,dos);
					
					// String
				
						writeString(this.COD_ETNICAS,dos);
					
					// String
				
						writeString(this.NSOCIOECONOMICOS,dos);
					
					// String
				
						writeString(this.SIGLA_OCUPACIONES,dos);
					
					// String
				
						writeString(this.ESTATURA,dos);
					
					// String
				
						writeString(this.SIGLA_TVIVIENDA,dos);
					
					// String
				
						writeString(this.FECHA_CADUCIDAD,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// String
				
						writeString(this.COD_GRADO,dos);
					
					// String
				
						writeString(this.SIGLA_GRADO,dos);
					
					// String
				
						writeString(this.SIGLA_UMILITAR,dos);
					
					// String
				
						writeString(this.COD_UMILITAR,dos);
					
					// String
				
						writeString(this.SIGLA_TVINCULACION,dos);
					
					// String
				
						writeString(this.SIGLA_TREGIMEN,dos);
					
					// String
				
						writeString(this.SIGLA_TAFILIADOS,dos);
					
					// String
				
						writeString(this.SIGLA_ESTADO,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTIDAD,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ENT_APO_PRINCIPAL);
					
					// String
				
						writeString(this.FECHA_VINCULACION,dos);
					
					// String
				
						writeString(this.ESTADO_ENTIDAD,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID_UNICO_AFILIADO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ID_UNICO_ENTIDAD);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// String
				
						writeString(this.CELULAR,dos);
					
					// String
				
						writeString(this.FECHA_DEFUNCION,dos);
					
					// String
				
						writeString(this.OBSERVACIONES,dos);
					
					// String
				
						writeString(this.PLANAFILIACIONES,dos);
					
					// Integer
				
						writeInteger(this.ID_BDUA,dos);
					
					// String
				
						writeString(this.MOTIVO_CAMBIO_ESTADO,dos);
					
					// String
				
						writeString(this.MOTIVO_CAMBIO_ESM,dos);
					
					// String
				
						writeString(this.DISCAPACIDAD,dos);
					
					// String
				
						writeString(this.POBLACION_ESPECIAL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID_UNICO_PERSONA);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.SIGLA_SEXO,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.COD_PAIS_RESIDENCIA,dos);
					
					// String
				
						writeString(this.COD_DEPTO_RESIDENCIA,dos);
					
					// String
				
						writeString(this.COD_MCIPIO_RESIDENCIA,dos);
					
					// String
				
						writeString(this.COD_LOC_RESIDENCIA,dos);
					
					// String
				
						writeString(this.COD_PAIS_NAC,dos);
					
					// String
				
						writeString(this.COD_DEPARTAMENTO_NAC,dos);
					
					// String
				
						writeString(this.COD_MCIPIO_NAC,dos);
					
					// String
				
						writeString(this.COD_PAIS_EXP,dos);
					
					// String
				
						writeString(this.COD_DEPARTAMENTO_EXP,dos);
					
					// String
				
						writeString(this.COD_MUNICIPIO_EXP,dos);
					
					// String
				
						writeString(this.FECHA_EXPEDICION_DOCUMENTO,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.GSANGUINEOS,dos);
					
					// String
				
						writeString(this.FACTOR_RH,dos);
					
					// String
				
						writeString(this.SIGLA_NEDUCATIVOS,dos);
					
					// String
				
						writeString(this.COD_ESM,dos);
					
					// String
				
						writeString(this.SIGLA_ESM,dos);
					
					// String
				
						writeString(this.COD_ETNICAS,dos);
					
					// String
				
						writeString(this.NSOCIOECONOMICOS,dos);
					
					// String
				
						writeString(this.SIGLA_OCUPACIONES,dos);
					
					// String
				
						writeString(this.ESTATURA,dos);
					
					// String
				
						writeString(this.SIGLA_TVIVIENDA,dos);
					
					// String
				
						writeString(this.FECHA_CADUCIDAD,dos);
					
					// String
				
						writeString(this.SIGLA_FUERZA,dos);
					
					// String
				
						writeString(this.COD_GRADO,dos);
					
					// String
				
						writeString(this.SIGLA_GRADO,dos);
					
					// String
				
						writeString(this.SIGLA_UMILITAR,dos);
					
					// String
				
						writeString(this.COD_UMILITAR,dos);
					
					// String
				
						writeString(this.SIGLA_TVINCULACION,dos);
					
					// String
				
						writeString(this.SIGLA_TREGIMEN,dos);
					
					// String
				
						writeString(this.SIGLA_TAFILIADOS,dos);
					
					// String
				
						writeString(this.SIGLA_ESTADO,dos);
					
					// String
				
						writeString(this.DOCUMENTO_ENTIDAD,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ENT_APO_PRINCIPAL);
					
					// String
				
						writeString(this.FECHA_VINCULACION,dos);
					
					// String
				
						writeString(this.ESTADO_ENTIDAD,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID_UNICO_AFILIADO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ID_UNICO_ENTIDAD);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// String
				
						writeString(this.CELULAR,dos);
					
					// String
				
						writeString(this.FECHA_DEFUNCION,dos);
					
					// String
				
						writeString(this.OBSERVACIONES,dos);
					
					// String
				
						writeString(this.PLANAFILIACIONES,dos);
					
					// Integer
				
						writeInteger(this.ID_BDUA,dos);
					
					// String
				
						writeString(this.MOTIVO_CAMBIO_ESTADO,dos);
					
					// String
				
						writeString(this.MOTIVO_CAMBIO_ESM,dos);
					
					// String
				
						writeString(this.DISCAPACIDAD,dos);
					
					// String
				
						writeString(this.POBLACION_ESPECIAL,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_UNICO_PERSONA="+String.valueOf(ID_UNICO_PERSONA));
		sb.append(",PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",SIGLA_SEXO="+SIGLA_SEXO);
		sb.append(",DIRECCION="+DIRECCION);
		sb.append(",TELEFONO="+TELEFONO);
		sb.append(",COD_PAIS_RESIDENCIA="+COD_PAIS_RESIDENCIA);
		sb.append(",COD_DEPTO_RESIDENCIA="+COD_DEPTO_RESIDENCIA);
		sb.append(",COD_MCIPIO_RESIDENCIA="+COD_MCIPIO_RESIDENCIA);
		sb.append(",COD_LOC_RESIDENCIA="+COD_LOC_RESIDENCIA);
		sb.append(",COD_PAIS_NAC="+COD_PAIS_NAC);
		sb.append(",COD_DEPARTAMENTO_NAC="+COD_DEPARTAMENTO_NAC);
		sb.append(",COD_MCIPIO_NAC="+COD_MCIPIO_NAC);
		sb.append(",COD_PAIS_EXP="+COD_PAIS_EXP);
		sb.append(",COD_DEPARTAMENTO_EXP="+COD_DEPARTAMENTO_EXP);
		sb.append(",COD_MUNICIPIO_EXP="+COD_MUNICIPIO_EXP);
		sb.append(",FECHA_EXPEDICION_DOCUMENTO="+FECHA_EXPEDICION_DOCUMENTO);
		sb.append(",FECHA_NACIMIENTO="+FECHA_NACIMIENTO);
		sb.append(",GSANGUINEOS="+GSANGUINEOS);
		sb.append(",FACTOR_RH="+FACTOR_RH);
		sb.append(",SIGLA_NEDUCATIVOS="+SIGLA_NEDUCATIVOS);
		sb.append(",COD_ESM="+COD_ESM);
		sb.append(",SIGLA_ESM="+SIGLA_ESM);
		sb.append(",COD_ETNICAS="+COD_ETNICAS);
		sb.append(",NSOCIOECONOMICOS="+NSOCIOECONOMICOS);
		sb.append(",SIGLA_OCUPACIONES="+SIGLA_OCUPACIONES);
		sb.append(",ESTATURA="+ESTATURA);
		sb.append(",SIGLA_TVIVIENDA="+SIGLA_TVIVIENDA);
		sb.append(",FECHA_CADUCIDAD="+FECHA_CADUCIDAD);
		sb.append(",SIGLA_FUERZA="+SIGLA_FUERZA);
		sb.append(",COD_GRADO="+COD_GRADO);
		sb.append(",SIGLA_GRADO="+SIGLA_GRADO);
		sb.append(",SIGLA_UMILITAR="+SIGLA_UMILITAR);
		sb.append(",COD_UMILITAR="+COD_UMILITAR);
		sb.append(",SIGLA_TVINCULACION="+SIGLA_TVINCULACION);
		sb.append(",SIGLA_TREGIMEN="+SIGLA_TREGIMEN);
		sb.append(",SIGLA_TAFILIADOS="+SIGLA_TAFILIADOS);
		sb.append(",SIGLA_ESTADO="+SIGLA_ESTADO);
		sb.append(",DOCUMENTO_ENTIDAD="+DOCUMENTO_ENTIDAD);
		sb.append(",ENT_APO_PRINCIPAL="+String.valueOf(ENT_APO_PRINCIPAL));
		sb.append(",FECHA_VINCULACION="+FECHA_VINCULACION);
		sb.append(",ESTADO_ENTIDAD="+ESTADO_ENTIDAD);
		sb.append(",ID_UNICO_AFILIADO="+String.valueOf(ID_UNICO_AFILIADO));
		sb.append(",ID_UNICO_ENTIDAD="+String.valueOf(ID_UNICO_ENTIDAD));
		sb.append(",EMAIL="+EMAIL);
		sb.append(",CELULAR="+CELULAR);
		sb.append(",FECHA_DEFUNCION="+FECHA_DEFUNCION);
		sb.append(",OBSERVACIONES="+OBSERVACIONES);
		sb.append(",PLANAFILIACIONES="+PLANAFILIACIONES);
		sb.append(",ID_BDUA="+String.valueOf(ID_BDUA));
		sb.append(",MOTIVO_CAMBIO_ESTADO="+MOTIVO_CAMBIO_ESTADO);
		sb.append(",MOTIVO_CAMBIO_ESM="+MOTIVO_CAMBIO_ESM);
		sb.append(",DISCAPACIDAD="+DISCAPACIDAD);
		sb.append(",POBLACION_ESPECIAL="+POBLACION_ESPECIAL);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row11Struct row11 = new row11Struct();




	
	/**
	 * [tFileOutputDelimited_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_7", false);
		start_Hash.put("tFileOutputDelimited_7", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tFileOutputDelimited_7 = 0;
		

String fileName_tFileOutputDelimited_7 = "";
    fileName_tFileOutputDelimited_7 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_7 = null;
    String extension_tFileOutputDelimited_7 = null;
    String directory_tFileOutputDelimited_7 = null;
    if((fileName_tFileOutputDelimited_7.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_7.lastIndexOf(".") < fileName_tFileOutputDelimited_7.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_7 = fileName_tFileOutputDelimited_7;
            extension_tFileOutputDelimited_7 = "";
        } else {
            fullName_tFileOutputDelimited_7 = fileName_tFileOutputDelimited_7.substring(0, fileName_tFileOutputDelimited_7.lastIndexOf("."));
            extension_tFileOutputDelimited_7 = fileName_tFileOutputDelimited_7.substring(fileName_tFileOutputDelimited_7.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_7 = fileName_tFileOutputDelimited_7.substring(0, fileName_tFileOutputDelimited_7.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_7.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_7 = fileName_tFileOutputDelimited_7.substring(0, fileName_tFileOutputDelimited_7.lastIndexOf("."));
            extension_tFileOutputDelimited_7 = fileName_tFileOutputDelimited_7.substring(fileName_tFileOutputDelimited_7.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_7 = fileName_tFileOutputDelimited_7;
            extension_tFileOutputDelimited_7 = "";
        }
        directory_tFileOutputDelimited_7 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_7 = true;
    java.io.File filetFileOutputDelimited_7 = new java.io.File(fileName_tFileOutputDelimited_7);
    globalMap.put("tFileOutputDelimited_7_FILE_NAME",fileName_tFileOutputDelimited_7);
        if(filetFileOutputDelimited_7.exists()){
            isFileGenerated_tFileOutputDelimited_7 = false;
        }
            int nb_line_tFileOutputDelimited_7 = 0;
            int splitedFileNo_tFileOutputDelimited_7 = 0;
            int currentRow_tFileOutputDelimited_7 = 0;

            final String OUT_DELIM_tFileOutputDelimited_7 = /** Start field tFileOutputDelimited_7:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_7:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_7 = /** Start field tFileOutputDelimited_7:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_7:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_7 != null && directory_tFileOutputDelimited_7.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_7 = new java.io.File(directory_tFileOutputDelimited_7);
                        if(!dir_tFileOutputDelimited_7.exists()) {
                            dir_tFileOutputDelimited_7.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_7 = null;

                        outtFileOutputDelimited_7 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_7, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_7", outtFileOutputDelimited_7);
                                    if(filetFileOutputDelimited_7.length()==0){
                                        outtFileOutputDelimited_7.write("ID_UNICO_PERSONA");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("PRIMER_NOMBRE");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("SEGUNDO_NOMBRE");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("PRIMER_APELLIDO");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("SEGUNDO_APELLIDO");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("TIPO_DOCUMENTO");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("DOCUMENTO");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("SIGLA_SEXO");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("DIRECCION");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("TELEFONO");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("COD_PAIS_RESIDENCIA");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("COD_DEPTO_RESIDENCIA");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("COD_MCIPIO_RESIDENCIA");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("COD_LOC_RESIDENCIA");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("COD_PAIS_NAC");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("COD_DEPARTAMENTO_NAC");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("COD_MCIPIO_NAC");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("COD_PAIS_EXP");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("COD_DEPARTAMENTO_EXP");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("COD_MUNICIPIO_EXP");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("FECHA_EXPEDICION_DOCUMENTO");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("FECHA_NACIMIENTO");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("GSANGUINEOS");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("FACTOR_RH");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("SIGLA_NEDUCATIVOS");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("COD_ESM");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("SIGLA_ESM");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("COD_ETNICAS");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("NSOCIOECONOMICOS");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("SIGLA_OCUPACIONES");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("ESTATURA");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("SIGLA_TVIVIENDA");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("FECHA_CADUCIDAD");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("SIGLA_FUERZA");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("COD_GRADO");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("SIGLA_GRADO");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("SIGLA_UMILITAR");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("COD_UMILITAR");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("SIGLA_TVINCULACION");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("SIGLA_TREGIMEN");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("SIGLA_TAFILIADOS");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("SIGLA_ESTADO");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("DOCUMENTO_ENTIDAD");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("ENT_APO_PRINCIPAL");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("FECHA_VINCULACION");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("ESTADO_ENTIDAD");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("ID_UNICO_AFILIADO");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("ID_UNICO_ENTIDAD");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("EMAIL");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("CELULAR");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("FECHA_DEFUNCION");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("OBSERVACIONES");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("PLANAFILIACIONES");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("ID_BDUA");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("MOTIVO_CAMBIO_ESTADO");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("MOTIVO_CAMBIO_ESM");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("DISCAPACIDAD");
                                            outtFileOutputDelimited_7.write(OUT_DELIM_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.write("POBLACION_ESPECIAL");
                                        outtFileOutputDelimited_7.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_7);
                                        outtFileOutputDelimited_7.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_7", nb_line_tFileOutputDelimited_7);

 



/**
 * [tFileOutputDelimited_7 begin ] stop
 */



	
	/**
	 * [tOracleInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_8", false);
		start_Hash.put("tOracleInput_8", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_8";
	
	
		int tos_count_tOracleInput_8 = 0;
		
	


	
		    int nb_line_tOracleInput_8 = 0;
		    java.sql.Connection conn_tOracleInput_8 = null;
				conn_tOracleInput_8 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_8 = false;
				boolean isConnectionWrapped_tOracleInput_8 = !(conn_tOracleInput_8 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_8.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_8 = null;
                if (isConnectionWrapped_tOracleInput_8) {
					unwrappedOraConn_tOracleInput_8 = conn_tOracleInput_8.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_8 != null) {
                        isTimeZoneNull_tOracleInput_8 = (unwrappedOraConn_tOracleInput_8.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_8 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_8).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_8) {
					java.sql.Statement stmtGetTZ_tOracleInput_8 = conn_tOracleInput_8.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_8 = stmtGetTZ_tOracleInput_8.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_8 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_8.next()) {
						sessionTimezone_tOracleInput_8 = rsGetTZ_tOracleInput_8.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_8 && unwrappedOraConn_tOracleInput_8 != null) {
                        unwrappedOraConn_tOracleInput_8.setSessionTimeZone(sessionTimezone_tOracleInput_8);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_8).setSessionTimeZone(sessionTimezone_tOracleInput_8);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_8 = conn_tOracleInput_8.createStatement();

		    String dbquery_tOracleInput_8 = "SELECT  VM.PERSONAS_ID AS ID_UNICO_PERSONA, \nreplace(replace(VM.PRIMER_NOMBRE,chr(10),''),chr(13),'') AS PRIMER_NOMBRE"
+",\nreplace(replace(VM.SEGUNDO_NOMBRE,chr(10),''),chr(13),'') AS SEGUNDO_NOMBRE,\nreplace(replace(VM.PRIMER_APELLIDO,chr("
+"10),''),chr(13),'') AS PRIMER_APELLIDO,\nreplace(replace(VM.SEGUNDO_APELLIDO,chr(10),''),chr(13),'') AS SEGUNDO_APELLIDO"
+",\nreplace(replace(VM.TIPO_DOCUMENTO,chr(10),''),chr(13),'') AS TIPO_DOCUMENTO,\nreplace(replace(VM.DOCUMENTO,chr(10),''"
+"),chr(13),'') AS DOCUMENTO,\nreplace(replace(VM.SIGLA_SEXO,chr(10),''),chr(13),'') AS SIGLA_SEXO,\nreplace(replace(VM.DI"
+"RECCION,chr(10),''),chr(13),'') AS DIRECCION, \nreplace(replace(VM.TELEFONO,chr(10),''),chr(13),'') AS TELEFONO,\nreplac"
+"e(replace(VM.CODIGO_PAIS_RES,chr(10),''),chr(13),'') AS COD_PAIS_RESIDENCIA,\nreplace(replace(VM.CODIGO_DEPTO_RESIDENCIA"
+",chr(10),''),chr(13),'') AS COD_DEPTO_RESIDENCIA,\nreplace(replace(VM.CODIGO_MUNICIPIO_RESIDENCIA,chr(10),''),chr(13),''"
+") AS COD_MCIPIO_RESIDENCIA,\nVM.CODLOCALIDAD AS COD_LOC_RESIDENCIA,\nVM.COD_PAIS_NAC AS COD_PAIS_NAC,\nVM.COD_DEPARTAMEN"
+"TO_NAC AS COD_DEPARTAMENTO_NAC,\nVM.COD_MUNICIPIO_NAC AS COD_MCIPIO_NAC,\nVM.COD_PAIS_EXP, \nVM.COD_DEPARTAMENTO_EXP,\nV"
+"M.COD_MUNICIPIO_EXP,\nTO_CHAR(VM.FECHA_EXPEDICION,'DD/MM/YYYY') AS FECHA_EXPEDICION_DOCUMENTO,\nTO_CHAR(VM.FECHA_NACIMIE"
+"NTO,'DD/MM/YYYY') AS FECHA_NACIMIENTO,\nVM.GSANGUINEOS,\nVM.FACTOR_RH,\nVM.SIGLA_NEDUCATIVOS,\nVM.CODIGO_ESM  AS COD_ESM"
+",\nVM.SIGLA_ADSCRITO AS SIGLA_ESM,\nVM.CODIGO_ETNICAS AS COD_ETNICAS,\nVM.NSOCIOECONOMICOS,\nVM.SIGLA_OCUPACIONES,\nTO_C"
+"HAR(VM.ESTATURA, 'fm0.00') AS ESTATURA,\nVM.SIGLA_TVIVIENDA,\nTO_CHAR(VM.FECHA_CADUCIDAD,'DD/MM/YYYY') AS FECHA_CADUCIDA"
+"D,\nVM.SIGLA_FUERZA,\nVM.CODIGO_GRADO AS COD_GRADO,\nVM.SIGLA_GRADO AS SIGLA_GRADO,\nVM.SIGLA_UMILITAR AS SIGLA_UMILITAR"
+",\nVM.CODIGO_UMILITAR AS COD_UMILITAR,\nVM.TVINCULACION_SIGLA AS SIGLA_TVINCULACION,\nVM.SIGLA_TREGIMEN,\nVM.SIGLA_TAFIL"
+"IADOS,\nVM.ESTADO_SIGLA AS SIGLA_ESTADO,\nVM.DOCUMENTO_ENTIDAD,\nVM.ENTA_PRINCIPAL AS ENT_APO_PRINCIPAL,\nTO_CHAR(VM.FEC"
+"HA_INGRESO,'DD/MM/YYYY') AS FECHA_VINCULACION,\nVM.ESTADO_ENTIDAD,\nVM.GA AS ID_UNICO_AFILIADO, \nVM.GAR AS ID_UNICO_ENT"
+"IDAD,\nVM.EMAIL,\nVM.CELULAR,\nVM.FECHA_DEFUNCION,\nreplace(replace(REPLACE(VM.OBSERVACIONES,';',','),chr(10),''),chr(13"
+"),'') AS OBSERVACIONES,\nreplace(replace(VM.PLANAFILIACIONES,chr(10),''),chr(13),'') AS PLANAFILIACIONES,\nVM.ID_BDUA,\n"
+"'' AS MOTIVO_CAMBIO_ESTADO,\n'' AS MOTIVO_CAMBIO_ESM,\nVM.SIGLA_DISCAPACIDAD AS DISCAPACIDAD,\nGPE.CODIGO AS POBLACION_E"
+"SPECIAL\nFROM  VM_PERSONAS VM\nINNER JOIN GEN_PERSONAS gp ON GP.ID = VM.PERSONAS_ID \nLEFT JOIN GEN_POBLACION_ESPECIAL g"
+"pe ON GPE.ID = GP.PESPECIAL_ID \nINNER JOIN AFI_CARCHIVOS CA ON CA.DOCUMENTO = VM.DOCUMENTO AND  TRIM(UPPER(CA.TDOCUMENT"
+"OS)) = TRIM(UPPER(VM.TIPO_DOCUMENTO))\nWHERE VM.AFILIADO_ESTREGISTRO_ID = 1 AND CA.ARCHIVOS_ID = " + context.infoIdArchivo ;
		    

		    globalMap.put("tOracleInput_8_QUERY",dbquery_tOracleInput_8);

		    java.sql.ResultSet rs_tOracleInput_8 = null;

		    try {
		    	rs_tOracleInput_8 = stmt_tOracleInput_8.executeQuery(dbquery_tOracleInput_8);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_8 = rs_tOracleInput_8.getMetaData();
		    	int colQtyInRs_tOracleInput_8 = rsmd_tOracleInput_8.getColumnCount();

		    String tmpContent_tOracleInput_8 = null;
		    
		    
		    while (rs_tOracleInput_8.next()) {
		        nb_line_tOracleInput_8++;
		        
							if(colQtyInRs_tOracleInput_8 < 1) {
								row11.ID_UNICO_PERSONA = null;
							} else {
		                          
					if(rs_tOracleInput_8.getObject(1) != null) {
						row11.ID_UNICO_PERSONA = rs_tOracleInput_8.getBigDecimal(1);
					} else {
				
						row11.ID_UNICO_PERSONA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_8 < 2) {
								row11.PRIMER_NOMBRE = null;
							} else {
	                         		
        	row11.PRIMER_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 3) {
								row11.SEGUNDO_NOMBRE = null;
							} else {
	                         		
        	row11.SEGUNDO_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 4) {
								row11.PRIMER_APELLIDO = null;
							} else {
	                         		
        	row11.PRIMER_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 5) {
								row11.SEGUNDO_APELLIDO = null;
							} else {
	                         		
        	row11.SEGUNDO_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 6) {
								row11.TIPO_DOCUMENTO = null;
							} else {
	                         		
        	row11.TIPO_DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 7) {
								row11.DOCUMENTO = null;
							} else {
	                         		
        	row11.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 8) {
								row11.SIGLA_SEXO = null;
							} else {
	                         		
        	row11.SIGLA_SEXO = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 8, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 9) {
								row11.DIRECCION = null;
							} else {
	                         		
        	row11.DIRECCION = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 10) {
								row11.TELEFONO = null;
							} else {
	                         		
        	row11.TELEFONO = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 11) {
								row11.COD_PAIS_RESIDENCIA = null;
							} else {
	                         		
        	row11.COD_PAIS_RESIDENCIA = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 11, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 12) {
								row11.COD_DEPTO_RESIDENCIA = null;
							} else {
	                         		
        	row11.COD_DEPTO_RESIDENCIA = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 13) {
								row11.COD_MCIPIO_RESIDENCIA = null;
							} else {
	                         		
        	row11.COD_MCIPIO_RESIDENCIA = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 13, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 14) {
								row11.COD_LOC_RESIDENCIA = null;
							} else {
	                         		
        	row11.COD_LOC_RESIDENCIA = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 14, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 15) {
								row11.COD_PAIS_NAC = null;
							} else {
	                         		
        	row11.COD_PAIS_NAC = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 15, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 16) {
								row11.COD_DEPARTAMENTO_NAC = null;
							} else {
	                         		
        	row11.COD_DEPARTAMENTO_NAC = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 16, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 17) {
								row11.COD_MCIPIO_NAC = null;
							} else {
	                         		
        	row11.COD_MCIPIO_NAC = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 17, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 18) {
								row11.COD_PAIS_EXP = null;
							} else {
	                         		
        	row11.COD_PAIS_EXP = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 18, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 19) {
								row11.COD_DEPARTAMENTO_EXP = null;
							} else {
	                         		
        	row11.COD_DEPARTAMENTO_EXP = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 19, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 20) {
								row11.COD_MUNICIPIO_EXP = null;
							} else {
	                         		
        	row11.COD_MUNICIPIO_EXP = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 20, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 21) {
								row11.FECHA_EXPEDICION_DOCUMENTO = null;
							} else {
	                         		
        	row11.FECHA_EXPEDICION_DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 21, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 22) {
								row11.FECHA_NACIMIENTO = null;
							} else {
	                         		
        	row11.FECHA_NACIMIENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 22, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 23) {
								row11.GSANGUINEOS = null;
							} else {
	                         		
        	row11.GSANGUINEOS = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 23, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 24) {
								row11.FACTOR_RH = null;
							} else {
	                         		
        	row11.FACTOR_RH = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 24, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 25) {
								row11.SIGLA_NEDUCATIVOS = null;
							} else {
	                         		
        	row11.SIGLA_NEDUCATIVOS = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 25, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 26) {
								row11.COD_ESM = null;
							} else {
	                         		
        	row11.COD_ESM = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 26, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 27) {
								row11.SIGLA_ESM = null;
							} else {
	                         		
        	row11.SIGLA_ESM = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 27, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 28) {
								row11.COD_ETNICAS = null;
							} else {
	                         		
        	row11.COD_ETNICAS = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 28, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 29) {
								row11.NSOCIOECONOMICOS = null;
							} else {
	                         		
        	row11.NSOCIOECONOMICOS = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 29, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 30) {
								row11.SIGLA_OCUPACIONES = null;
							} else {
	                         		
        	row11.SIGLA_OCUPACIONES = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 30, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 31) {
								row11.ESTATURA = null;
							} else {
	                         		
        	row11.ESTATURA = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 31, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 32) {
								row11.SIGLA_TVIVIENDA = null;
							} else {
	                         		
        	row11.SIGLA_TVIVIENDA = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 32, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 33) {
								row11.FECHA_CADUCIDAD = null;
							} else {
	                         		
        	row11.FECHA_CADUCIDAD = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 33, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 34) {
								row11.SIGLA_FUERZA = null;
							} else {
	                         		
        	row11.SIGLA_FUERZA = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 34, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 35) {
								row11.COD_GRADO = null;
							} else {
	                         		
        	row11.COD_GRADO = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 35, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 36) {
								row11.SIGLA_GRADO = null;
							} else {
	                         		
        	row11.SIGLA_GRADO = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 36, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 37) {
								row11.SIGLA_UMILITAR = null;
							} else {
	                         		
        	row11.SIGLA_UMILITAR = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 37, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 38) {
								row11.COD_UMILITAR = null;
							} else {
	                         		
        	row11.COD_UMILITAR = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 38, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 39) {
								row11.SIGLA_TVINCULACION = null;
							} else {
	                         		
        	row11.SIGLA_TVINCULACION = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 39, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 40) {
								row11.SIGLA_TREGIMEN = null;
							} else {
	                         		
        	row11.SIGLA_TREGIMEN = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 40, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 41) {
								row11.SIGLA_TAFILIADOS = null;
							} else {
	                         		
        	row11.SIGLA_TAFILIADOS = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 41, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 42) {
								row11.SIGLA_ESTADO = null;
							} else {
	                         		
        	row11.SIGLA_ESTADO = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 42, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 43) {
								row11.DOCUMENTO_ENTIDAD = null;
							} else {
	                         		
        	row11.DOCUMENTO_ENTIDAD = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 43, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 44) {
								row11.ENT_APO_PRINCIPAL = null;
							} else {
		                          
					if(rs_tOracleInput_8.getObject(44) != null) {
						row11.ENT_APO_PRINCIPAL = rs_tOracleInput_8.getBigDecimal(44);
					} else {
				
						row11.ENT_APO_PRINCIPAL = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_8 < 45) {
								row11.FECHA_VINCULACION = null;
							} else {
	                         		
        	row11.FECHA_VINCULACION = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 45, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 46) {
								row11.ESTADO_ENTIDAD = null;
							} else {
	                         		
        	row11.ESTADO_ENTIDAD = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 46, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 47) {
								row11.ID_UNICO_AFILIADO = null;
							} else {
		                          
					if(rs_tOracleInput_8.getObject(47) != null) {
						row11.ID_UNICO_AFILIADO = rs_tOracleInput_8.getBigDecimal(47);
					} else {
				
						row11.ID_UNICO_AFILIADO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_8 < 48) {
								row11.ID_UNICO_ENTIDAD = null;
							} else {
		                          
					if(rs_tOracleInput_8.getObject(48) != null) {
						row11.ID_UNICO_ENTIDAD = rs_tOracleInput_8.getBigDecimal(48);
					} else {
				
						row11.ID_UNICO_ENTIDAD = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_8 < 49) {
								row11.EMAIL = null;
							} else {
	                         		
        	row11.EMAIL = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 49, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 50) {
								row11.CELULAR = null;
							} else {
	                         		
        	row11.CELULAR = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 50, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 51) {
								row11.FECHA_DEFUNCION = null;
							} else {
	                         		
        	row11.FECHA_DEFUNCION = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 51, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 52) {
								row11.OBSERVACIONES = null;
							} else {
	                         		
        	row11.OBSERVACIONES = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 52, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 53) {
								row11.PLANAFILIACIONES = null;
							} else {
	                         		
        	row11.PLANAFILIACIONES = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 53, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 54) {
								row11.ID_BDUA = null;
							} else {
		                          
					if(rs_tOracleInput_8.getObject(54) != null) {
						row11.ID_BDUA = rs_tOracleInput_8.getInt(54);
					} else {
				
						row11.ID_BDUA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_8 < 55) {
								row11.MOTIVO_CAMBIO_ESTADO = null;
							} else {
	                         		
        	row11.MOTIVO_CAMBIO_ESTADO = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 55, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 56) {
								row11.MOTIVO_CAMBIO_ESM = null;
							} else {
	                         		
        	row11.MOTIVO_CAMBIO_ESM = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 56, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 57) {
								row11.DISCAPACIDAD = null;
							} else {
	                         		
        	row11.DISCAPACIDAD = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 57, false);
		                    }
							if(colQtyInRs_tOracleInput_8 < 58) {
								row11.POBLACION_ESPECIAL = null;
							} else {
	                         		
        	row11.POBLACION_ESPECIAL = routines.system.JDBCUtil.getString(rs_tOracleInput_8, 58, false);
		                    }
					




 



/**
 * [tOracleInput_8 begin ] stop
 */
	
	/**
	 * [tOracleInput_8 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 


	tos_count_tOracleInput_8++;

/**
 * [tOracleInput_8 main ] stop
 */
	
	/**
	 * [tOracleInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 



/**
 * [tOracleInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_7 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_7 = new StringBuilder();
                            if(row11.ID_UNICO_PERSONA != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.ID_UNICO_PERSONA.toPlainString()
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.PRIMER_NOMBRE != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.PRIMER_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.SEGUNDO_NOMBRE != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.SEGUNDO_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.PRIMER_APELLIDO != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.PRIMER_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.SEGUNDO_APELLIDO != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.SEGUNDO_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.TIPO_DOCUMENTO != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.TIPO_DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.DOCUMENTO != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.SIGLA_SEXO != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.SIGLA_SEXO
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.DIRECCION != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.DIRECCION
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.TELEFONO != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.TELEFONO
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.COD_PAIS_RESIDENCIA != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.COD_PAIS_RESIDENCIA
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.COD_DEPTO_RESIDENCIA != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.COD_DEPTO_RESIDENCIA
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.COD_MCIPIO_RESIDENCIA != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.COD_MCIPIO_RESIDENCIA
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.COD_LOC_RESIDENCIA != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.COD_LOC_RESIDENCIA
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.COD_PAIS_NAC != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.COD_PAIS_NAC
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.COD_DEPARTAMENTO_NAC != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.COD_DEPARTAMENTO_NAC
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.COD_MCIPIO_NAC != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.COD_MCIPIO_NAC
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.COD_PAIS_EXP != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.COD_PAIS_EXP
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.COD_DEPARTAMENTO_EXP != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.COD_DEPARTAMENTO_EXP
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.COD_MUNICIPIO_EXP != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.COD_MUNICIPIO_EXP
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.FECHA_EXPEDICION_DOCUMENTO != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.FECHA_EXPEDICION_DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.FECHA_NACIMIENTO != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.FECHA_NACIMIENTO
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.GSANGUINEOS != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.GSANGUINEOS
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.FACTOR_RH != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.FACTOR_RH
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.SIGLA_NEDUCATIVOS != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.SIGLA_NEDUCATIVOS
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.COD_ESM != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.COD_ESM
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.SIGLA_ESM != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.SIGLA_ESM
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.COD_ETNICAS != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.COD_ETNICAS
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.NSOCIOECONOMICOS != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.NSOCIOECONOMICOS
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.SIGLA_OCUPACIONES != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.SIGLA_OCUPACIONES
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.ESTATURA != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.ESTATURA
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.SIGLA_TVIVIENDA != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.SIGLA_TVIVIENDA
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.FECHA_CADUCIDAD != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.FECHA_CADUCIDAD
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.SIGLA_FUERZA != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.SIGLA_FUERZA
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.COD_GRADO != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.COD_GRADO
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.SIGLA_GRADO != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.SIGLA_GRADO
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.SIGLA_UMILITAR != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.SIGLA_UMILITAR
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.COD_UMILITAR != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.COD_UMILITAR
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.SIGLA_TVINCULACION != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.SIGLA_TVINCULACION
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.SIGLA_TREGIMEN != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.SIGLA_TREGIMEN
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.SIGLA_TAFILIADOS != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.SIGLA_TAFILIADOS
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.SIGLA_ESTADO != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.SIGLA_ESTADO
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.DOCUMENTO_ENTIDAD != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.DOCUMENTO_ENTIDAD
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.ENT_APO_PRINCIPAL != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.ENT_APO_PRINCIPAL.toPlainString()
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.FECHA_VINCULACION != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.FECHA_VINCULACION
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.ESTADO_ENTIDAD != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.ESTADO_ENTIDAD
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.ID_UNICO_AFILIADO != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.ID_UNICO_AFILIADO.toPlainString()
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.ID_UNICO_ENTIDAD != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.ID_UNICO_ENTIDAD.toPlainString()
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.EMAIL != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.EMAIL
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.CELULAR != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.CELULAR
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.FECHA_DEFUNCION != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.FECHA_DEFUNCION
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.OBSERVACIONES != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.OBSERVACIONES
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.PLANAFILIACIONES != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.PLANAFILIACIONES
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.ID_BDUA != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.ID_BDUA
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.MOTIVO_CAMBIO_ESTADO != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.MOTIVO_CAMBIO_ESTADO
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.MOTIVO_CAMBIO_ESM != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.MOTIVO_CAMBIO_ESM
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.DISCAPACIDAD != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.DISCAPACIDAD
                        );
                            }
                            sb_tFileOutputDelimited_7.append(OUT_DELIM_tFileOutputDelimited_7);
                            if(row11.POBLACION_ESPECIAL != null) {
                        sb_tFileOutputDelimited_7.append(
                            row11.POBLACION_ESPECIAL
                        );
                            }
                    sb_tFileOutputDelimited_7.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_7);


                    nb_line_tFileOutputDelimited_7++;
                    resourceMap.put("nb_line_tFileOutputDelimited_7", nb_line_tFileOutputDelimited_7);

                        outtFileOutputDelimited_7.write(sb_tFileOutputDelimited_7.toString());




 


	tos_count_tFileOutputDelimited_7++;

/**
 * [tFileOutputDelimited_7 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_7";
	
	

 



/**
 * [tFileOutputDelimited_7 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_7";
	
	

 



/**
 * [tFileOutputDelimited_7 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 



/**
 * [tOracleInput_8 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_8 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

}
}finally{
	if (rs_tOracleInput_8 != null) {
		rs_tOracleInput_8.close();
	}
	if (stmt_tOracleInput_8 != null) {
		stmt_tOracleInput_8.close();
	}
}

globalMap.put("tOracleInput_8_NB_LINE",nb_line_tOracleInput_8);
 

ok_Hash.put("tOracleInput_8", true);
end_Hash.put("tOracleInput_8", System.currentTimeMillis());

   			if (((Integer)globalMap.get("tOracleOutput_3_NB_LINE_INSERTED"))> ((Integer)globalMap.get("tOracleInput_8_NB_LINE"))) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If17", 0, "true");
					}
				tOracleInput_7Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If17", 0, "false");
					}   	 
   				}



/**
 * [tOracleInput_8 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_7 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_7";
	
	



		
			
					if(outtFileOutputDelimited_7!=null) {
						outtFileOutputDelimited_7.flush();
						outtFileOutputDelimited_7.close();
					}
				
				globalMap.put("tFileOutputDelimited_7_NB_LINE",nb_line_tFileOutputDelimited_7);
				globalMap.put("tFileOutputDelimited_7_FILE_NAME",fileName_tFileOutputDelimited_7);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_7", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_7", true);
end_Hash.put("tFileOutputDelimited_7", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk15", 0, "ok");
				}
				tFixedFlowInput_2Process(globalMap);



/**
 * [tFileOutputDelimited_7 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_8 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_8";
	
	

 



/**
 * [tOracleInput_8 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_7 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_7";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_7") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_7 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_7");
						if(outtFileOutputDelimited_7!=null) {
							outtFileOutputDelimited_7.flush();
							outtFileOutputDelimited_7.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_7 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_8_SUBPROCESS_STATE", 1);
	}
	


public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public String TDOCUMENTOS;

				public String getTDOCUMENTOS () {
					return this.TDOCUMENTOS;
				}

				public Boolean TDOCUMENTOSIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOSIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOSLength(){
				    return null;
				}
				public Integer TDOCUMENTOSPrecision(){
				    return null;
				}
				public String TDOCUMENTOSDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOSComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOSPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOSOriginalDbColumnName(){
				
					return "TDOCUMENTOS";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return null;
				}
				public Integer ERRORPrecision(){
				    return null;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TDOCUMENTOS = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TDOCUMENTOS = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TDOCUMENTOS,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TDOCUMENTOS,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS="+TDOCUMENTOS);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row10Struct row10 = new row10Struct();




	
	/**
	 * [tFileOutputDelimited_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_6", false);
		start_Hash.put("tFileOutputDelimited_6", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tFileOutputDelimited_6 = 0;
		

String fileName_tFileOutputDelimited_6 = "";
    fileName_tFileOutputDelimited_6 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+"ERRORES_"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_6 = null;
    String extension_tFileOutputDelimited_6 = null;
    String directory_tFileOutputDelimited_6 = null;
    if((fileName_tFileOutputDelimited_6.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_6.lastIndexOf(".") < fileName_tFileOutputDelimited_6.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_6 = fileName_tFileOutputDelimited_6;
            extension_tFileOutputDelimited_6 = "";
        } else {
            fullName_tFileOutputDelimited_6 = fileName_tFileOutputDelimited_6.substring(0, fileName_tFileOutputDelimited_6.lastIndexOf("."));
            extension_tFileOutputDelimited_6 = fileName_tFileOutputDelimited_6.substring(fileName_tFileOutputDelimited_6.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_6 = fileName_tFileOutputDelimited_6.substring(0, fileName_tFileOutputDelimited_6.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_6.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_6 = fileName_tFileOutputDelimited_6.substring(0, fileName_tFileOutputDelimited_6.lastIndexOf("."));
            extension_tFileOutputDelimited_6 = fileName_tFileOutputDelimited_6.substring(fileName_tFileOutputDelimited_6.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_6 = fileName_tFileOutputDelimited_6;
            extension_tFileOutputDelimited_6 = "";
        }
        directory_tFileOutputDelimited_6 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_6 = true;
    java.io.File filetFileOutputDelimited_6 = new java.io.File(fileName_tFileOutputDelimited_6);
    globalMap.put("tFileOutputDelimited_6_FILE_NAME",fileName_tFileOutputDelimited_6);
        if(filetFileOutputDelimited_6.exists()){
            isFileGenerated_tFileOutputDelimited_6 = false;
        }
            int nb_line_tFileOutputDelimited_6 = 0;
            int splitedFileNo_tFileOutputDelimited_6 = 0;
            int currentRow_tFileOutputDelimited_6 = 0;

            final String OUT_DELIM_tFileOutputDelimited_6 = /** Start field tFileOutputDelimited_6:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_6:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_6 = /** Start field tFileOutputDelimited_6:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_6:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_6 != null && directory_tFileOutputDelimited_6.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_6 = new java.io.File(directory_tFileOutputDelimited_6);
                        if(!dir_tFileOutputDelimited_6.exists()) {
                            dir_tFileOutputDelimited_6.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_6 = null;

                        outtFileOutputDelimited_6 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_6, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_6", outtFileOutputDelimited_6);
                                    if(filetFileOutputDelimited_6.length()==0){
                                        outtFileOutputDelimited_6.write("TDOCUMENTOS");
                                            outtFileOutputDelimited_6.write(OUT_DELIM_tFileOutputDelimited_6);
                                        outtFileOutputDelimited_6.write("DOCUMENTO");
                                            outtFileOutputDelimited_6.write(OUT_DELIM_tFileOutputDelimited_6);
                                        outtFileOutputDelimited_6.write("ERROR");
                                        outtFileOutputDelimited_6.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_6);
                                        outtFileOutputDelimited_6.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_6", nb_line_tFileOutputDelimited_6);

 



/**
 * [tFileOutputDelimited_6 begin ] stop
 */



	
	/**
	 * [tOracleInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_7", false);
		start_Hash.put("tOracleInput_7", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_7";
	
	
		int tos_count_tOracleInput_7 = 0;
		
	


	
		    int nb_line_tOracleInput_7 = 0;
		    java.sql.Connection conn_tOracleInput_7 = null;
				conn_tOracleInput_7 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_7 = false;
				boolean isConnectionWrapped_tOracleInput_7 = !(conn_tOracleInput_7 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_7.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_7 = null;
                if (isConnectionWrapped_tOracleInput_7) {
					unwrappedOraConn_tOracleInput_7 = conn_tOracleInput_7.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_7 != null) {
                        isTimeZoneNull_tOracleInput_7 = (unwrappedOraConn_tOracleInput_7.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_7 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_7).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_7) {
					java.sql.Statement stmtGetTZ_tOracleInput_7 = conn_tOracleInput_7.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_7 = stmtGetTZ_tOracleInput_7.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_7 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_7.next()) {
						sessionTimezone_tOracleInput_7 = rsGetTZ_tOracleInput_7.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_7 && unwrappedOraConn_tOracleInput_7 != null) {
                        unwrappedOraConn_tOracleInput_7.setSessionTimeZone(sessionTimezone_tOracleInput_7);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_7).setSessionTimeZone(sessionTimezone_tOracleInput_7);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_7 = conn_tOracleInput_7.createStatement();

		    String dbquery_tOracleInput_7 = "SELECT\nCA.TDOCUMENTOS,\nCA.DOCUMENTO,\n'NO ENCOTRADO' AS ERROR\nFROM AFI_CARCHIVOS CA\nWHERE NOT EXISTS(SELECT * FROM "
+"VM_PERSONAS VP \n                WHERE VP.TIPO_DOCUMENTO = CA.TDOCUMENTOS\n                      AND VP.DOCUMENTO = CA.D"
+"OCUMENTO) AND CA.ARCHIVOS_ID = " + context.infoIdArchivo;
		    

		    globalMap.put("tOracleInput_7_QUERY",dbquery_tOracleInput_7);

		    java.sql.ResultSet rs_tOracleInput_7 = null;

		    try {
		    	rs_tOracleInput_7 = stmt_tOracleInput_7.executeQuery(dbquery_tOracleInput_7);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_7 = rs_tOracleInput_7.getMetaData();
		    	int colQtyInRs_tOracleInput_7 = rsmd_tOracleInput_7.getColumnCount();

		    String tmpContent_tOracleInput_7 = null;
		    
		    
		    while (rs_tOracleInput_7.next()) {
		        nb_line_tOracleInput_7++;
		        
							if(colQtyInRs_tOracleInput_7 < 1) {
								row10.TDOCUMENTOS = null;
							} else {
	                         		
        	row10.TDOCUMENTOS = routines.system.JDBCUtil.getString(rs_tOracleInput_7, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_7 < 2) {
								row10.DOCUMENTO = null;
							} else {
	                         		
        	row10.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_7, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_7 < 3) {
								row10.ERROR = null;
							} else {
	                         		
        	row10.ERROR = routines.system.JDBCUtil.getString(rs_tOracleInput_7, 3, false);
		                    }
					




 



/**
 * [tOracleInput_7 begin ] stop
 */
	
	/**
	 * [tOracleInput_7 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 


	tos_count_tOracleInput_7++;

/**
 * [tOracleInput_7 main ] stop
 */
	
	/**
	 * [tOracleInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_6 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_6 = new StringBuilder();
                            if(row10.TDOCUMENTOS != null) {
                        sb_tFileOutputDelimited_6.append(
                            row10.TDOCUMENTOS
                        );
                            }
                            sb_tFileOutputDelimited_6.append(OUT_DELIM_tFileOutputDelimited_6);
                            if(row10.DOCUMENTO != null) {
                        sb_tFileOutputDelimited_6.append(
                            row10.DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_6.append(OUT_DELIM_tFileOutputDelimited_6);
                            if(row10.ERROR != null) {
                        sb_tFileOutputDelimited_6.append(
                            row10.ERROR
                        );
                            }
                    sb_tFileOutputDelimited_6.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_6);


                    nb_line_tFileOutputDelimited_6++;
                    resourceMap.put("nb_line_tFileOutputDelimited_6", nb_line_tFileOutputDelimited_6);

                        outtFileOutputDelimited_6.write(sb_tFileOutputDelimited_6.toString());




 


	tos_count_tFileOutputDelimited_6++;

/**
 * [tFileOutputDelimited_6 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_6";
	
	

 



/**
 * [tFileOutputDelimited_6 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_6";
	
	

 



/**
 * [tFileOutputDelimited_6 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_7 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

}
}finally{
	if (rs_tOracleInput_7 != null) {
		rs_tOracleInput_7.close();
	}
	if (stmt_tOracleInput_7 != null) {
		stmt_tOracleInput_7.close();
	}
}

globalMap.put("tOracleInput_7_NB_LINE",nb_line_tOracleInput_7);
 

ok_Hash.put("tOracleInput_7", true);
end_Hash.put("tOracleInput_7", System.currentTimeMillis());




/**
 * [tOracleInput_7 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_6 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_6";
	
	



		
			
					if(outtFileOutputDelimited_6!=null) {
						outtFileOutputDelimited_6.flush();
						outtFileOutputDelimited_6.close();
					}
				
				globalMap.put("tFileOutputDelimited_6_NB_LINE",nb_line_tFileOutputDelimited_6);
				globalMap.put("tFileOutputDelimited_6_FILE_NAME",fileName_tFileOutputDelimited_6);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_6", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_6", true);
end_Hash.put("tFileOutputDelimited_6", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk8", 0, "ok");
				}
				tFixedFlowInput_1Process(globalMap);



/**
 * [tFileOutputDelimited_6 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_7 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_6 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_6";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_6") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_6 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_6");
						if(outtFileOutputDelimited_6!=null) {
							outtFileOutputDelimited_6.flush();
							outtFileOutputDelimited_6.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_6 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String NUMERO_DOCUMENTO;

				public String getNUMERO_DOCUMENTO () {
					return this.NUMERO_DOCUMENTO;
				}

				public Boolean NUMERO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean NUMERO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer NUMERO_DOCUMENTOLength(){
				    return null;
				}
				public Integer NUMERO_DOCUMENTOPrecision(){
				    return null;
				}
				public String NUMERO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String NUMERO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String NUMERO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String NUMERO_DOCUMENTOOriginalDbColumnName(){
				
					return "NUMERO_DOCUMENTO";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return null;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return null;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return null;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return null;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return null;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return null;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return null;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return null;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String GENERO;

				public String getGENERO () {
					return this.GENERO;
				}

				public Boolean GENEROIsNullable(){
				    return true;
				}
				public Boolean GENEROIsKey(){
				    return false;
				}
				public Integer GENEROLength(){
				    return null;
				}
				public Integer GENEROPrecision(){
				    return null;
				}
				public String GENERODefault(){
				
					return null;
				
				}
				public String GENEROComment(){
				
				    return "";
				
				}
				public String GENEROPattern(){
				
					return "";
				
				}
				public String GENEROOriginalDbColumnName(){
				
					return "GENERO";
				
				}

				
			    public String DISCAPACIDAD;

				public String getDISCAPACIDAD () {
					return this.DISCAPACIDAD;
				}

				public Boolean DISCAPACIDADIsNullable(){
				    return true;
				}
				public Boolean DISCAPACIDADIsKey(){
				    return false;
				}
				public Integer DISCAPACIDADLength(){
				    return null;
				}
				public Integer DISCAPACIDADPrecision(){
				    return null;
				}
				public String DISCAPACIDADDefault(){
				
					return null;
				
				}
				public String DISCAPACIDADComment(){
				
				    return "";
				
				}
				public String DISCAPACIDADPattern(){
				
					return "";
				
				}
				public String DISCAPACIDADOriginalDbColumnName(){
				
					return "DISCAPACIDAD";
				
				}

				
			    public String PARENTESCOS;

				public String getPARENTESCOS () {
					return this.PARENTESCOS;
				}

				public Boolean PARENTESCOSIsNullable(){
				    return true;
				}
				public Boolean PARENTESCOSIsKey(){
				    return false;
				}
				public Integer PARENTESCOSLength(){
				    return null;
				}
				public Integer PARENTESCOSPrecision(){
				    return null;
				}
				public String PARENTESCOSDefault(){
				
					return null;
				
				}
				public String PARENTESCOSComment(){
				
				    return "";
				
				}
				public String PARENTESCOSPattern(){
				
					return "";
				
				}
				public String PARENTESCOSOriginalDbColumnName(){
				
					return "PARENTESCOS";
				
				}

				
			    public String FECHA_NACIMIENTO;

				public String getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return null;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return null;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				
			    public BigDecimal EDAD;

				public BigDecimal getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return true;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return null;
				}
				public Integer EDADPrecision(){
				    return null;
				}
				public String EDADDefault(){
				
					return "";
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public String LOCALIDADES;

				public String getLOCALIDADES () {
					return this.LOCALIDADES;
				}

				public Boolean LOCALIDADESIsNullable(){
				    return true;
				}
				public Boolean LOCALIDADESIsKey(){
				    return false;
				}
				public Integer LOCALIDADESLength(){
				    return null;
				}
				public Integer LOCALIDADESPrecision(){
				    return null;
				}
				public String LOCALIDADESDefault(){
				
					return "";
				
				}
				public String LOCALIDADESComment(){
				
				    return "";
				
				}
				public String LOCALIDADESPattern(){
				
					return "";
				
				}
				public String LOCALIDADESOriginalDbColumnName(){
				
					return "LOCALIDADES";
				
				}

				
			    public String DIRECCION;

				public String getDIRECCION () {
					return this.DIRECCION;
				}

				public Boolean DIRECCIONIsNullable(){
				    return true;
				}
				public Boolean DIRECCIONIsKey(){
				    return false;
				}
				public Integer DIRECCIONLength(){
				    return null;
				}
				public Integer DIRECCIONPrecision(){
				    return null;
				}
				public String DIRECCIONDefault(){
				
					return "";
				
				}
				public String DIRECCIONComment(){
				
				    return "";
				
				}
				public String DIRECCIONPattern(){
				
					return "";
				
				}
				public String DIRECCIONOriginalDbColumnName(){
				
					return "DIRECCION";
				
				}

				
			    public String BARRIO;

				public String getBARRIO () {
					return this.BARRIO;
				}

				public Boolean BARRIOIsNullable(){
				    return true;
				}
				public Boolean BARRIOIsKey(){
				    return false;
				}
				public Integer BARRIOLength(){
				    return null;
				}
				public Integer BARRIOPrecision(){
				    return null;
				}
				public String BARRIODefault(){
				
					return "";
				
				}
				public String BARRIOComment(){
				
				    return "";
				
				}
				public String BARRIOPattern(){
				
					return "";
				
				}
				public String BARRIOOriginalDbColumnName(){
				
					return "BARRIO";
				
				}

				
			    public String TELEFONO;

				public String getTELEFONO () {
					return this.TELEFONO;
				}

				public Boolean TELEFONOIsNullable(){
				    return true;
				}
				public Boolean TELEFONOIsKey(){
				    return false;
				}
				public Integer TELEFONOLength(){
				    return null;
				}
				public Integer TELEFONOPrecision(){
				    return null;
				}
				public String TELEFONODefault(){
				
					return "";
				
				}
				public String TELEFONOComment(){
				
				    return "";
				
				}
				public String TELEFONOPattern(){
				
					return "";
				
				}
				public String TELEFONOOriginalDbColumnName(){
				
					return "TELEFONO";
				
				}

				
			    public String EMAIL;

				public String getEMAIL () {
					return this.EMAIL;
				}

				public Boolean EMAILIsNullable(){
				    return true;
				}
				public Boolean EMAILIsKey(){
				    return false;
				}
				public Integer EMAILLength(){
				    return null;
				}
				public Integer EMAILPrecision(){
				    return null;
				}
				public String EMAILDefault(){
				
					return "";
				
				}
				public String EMAILComment(){
				
				    return "";
				
				}
				public String EMAILPattern(){
				
					return "";
				
				}
				public String EMAILOriginalDbColumnName(){
				
					return "EMAIL";
				
				}

				
			    public String RESIDENCIA_DEPARTAMENTO;

				public String getRESIDENCIA_DEPARTAMENTO () {
					return this.RESIDENCIA_DEPARTAMENTO;
				}

				public Boolean RESIDENCIA_DEPARTAMENTOIsNullable(){
				    return true;
				}
				public Boolean RESIDENCIA_DEPARTAMENTOIsKey(){
				    return false;
				}
				public Integer RESIDENCIA_DEPARTAMENTOLength(){
				    return null;
				}
				public Integer RESIDENCIA_DEPARTAMENTOPrecision(){
				    return null;
				}
				public String RESIDENCIA_DEPARTAMENTODefault(){
				
					return "";
				
				}
				public String RESIDENCIA_DEPARTAMENTOComment(){
				
				    return "";
				
				}
				public String RESIDENCIA_DEPARTAMENTOPattern(){
				
					return "";
				
				}
				public String RESIDENCIA_DEPARTAMENTOOriginalDbColumnName(){
				
					return "RESIDENCIA_DEPARTAMENTO";
				
				}

				
			    public String RESIDENCIA_CODIGO_DEPARTAMENTO;

				public String getRESIDENCIA_CODIGO_DEPARTAMENTO () {
					return this.RESIDENCIA_CODIGO_DEPARTAMENTO;
				}

				public Boolean RESIDENCIA_CODIGO_DEPARTAMENTOIsNullable(){
				    return true;
				}
				public Boolean RESIDENCIA_CODIGO_DEPARTAMENTOIsKey(){
				    return false;
				}
				public Integer RESIDENCIA_CODIGO_DEPARTAMENTOLength(){
				    return null;
				}
				public Integer RESIDENCIA_CODIGO_DEPARTAMENTOPrecision(){
				    return null;
				}
				public String RESIDENCIA_CODIGO_DEPARTAMENTODefault(){
				
					return "";
				
				}
				public String RESIDENCIA_CODIGO_DEPARTAMENTOComment(){
				
				    return "";
				
				}
				public String RESIDENCIA_CODIGO_DEPARTAMENTOPattern(){
				
					return "";
				
				}
				public String RESIDENCIA_CODIGO_DEPARTAMENTOOriginalDbColumnName(){
				
					return "RESIDENCIA_CODIGO_DEPARTAMENTO";
				
				}

				
			    public String RESIDENCIA_MUNICIPIO;

				public String getRESIDENCIA_MUNICIPIO () {
					return this.RESIDENCIA_MUNICIPIO;
				}

				public Boolean RESIDENCIA_MUNICIPIOIsNullable(){
				    return true;
				}
				public Boolean RESIDENCIA_MUNICIPIOIsKey(){
				    return false;
				}
				public Integer RESIDENCIA_MUNICIPIOLength(){
				    return null;
				}
				public Integer RESIDENCIA_MUNICIPIOPrecision(){
				    return null;
				}
				public String RESIDENCIA_MUNICIPIODefault(){
				
					return "";
				
				}
				public String RESIDENCIA_MUNICIPIOComment(){
				
				    return "";
				
				}
				public String RESIDENCIA_MUNICIPIOPattern(){
				
					return "";
				
				}
				public String RESIDENCIA_MUNICIPIOOriginalDbColumnName(){
				
					return "RESIDENCIA_MUNICIPIO";
				
				}

				
			    public String RESIDENCIA_CODIGO_MUNICIPIO;

				public String getRESIDENCIA_CODIGO_MUNICIPIO () {
					return this.RESIDENCIA_CODIGO_MUNICIPIO;
				}

				public Boolean RESIDENCIA_CODIGO_MUNICIPIOIsNullable(){
				    return true;
				}
				public Boolean RESIDENCIA_CODIGO_MUNICIPIOIsKey(){
				    return false;
				}
				public Integer RESIDENCIA_CODIGO_MUNICIPIOLength(){
				    return null;
				}
				public Integer RESIDENCIA_CODIGO_MUNICIPIOPrecision(){
				    return null;
				}
				public String RESIDENCIA_CODIGO_MUNICIPIODefault(){
				
					return "";
				
				}
				public String RESIDENCIA_CODIGO_MUNICIPIOComment(){
				
				    return "";
				
				}
				public String RESIDENCIA_CODIGO_MUNICIPIOPattern(){
				
					return "";
				
				}
				public String RESIDENCIA_CODIGO_MUNICIPIOOriginalDbColumnName(){
				
					return "RESIDENCIA_CODIGO_MUNICIPIO";
				
				}

				
			    public String PLAN_AFILIACIONES;

				public String getPLAN_AFILIACIONES () {
					return this.PLAN_AFILIACIONES;
				}

				public Boolean PLAN_AFILIACIONESIsNullable(){
				    return true;
				}
				public Boolean PLAN_AFILIACIONESIsKey(){
				    return false;
				}
				public Integer PLAN_AFILIACIONESLength(){
				    return null;
				}
				public Integer PLAN_AFILIACIONESPrecision(){
				    return null;
				}
				public String PLAN_AFILIACIONESDefault(){
				
					return "";
				
				}
				public String PLAN_AFILIACIONESComment(){
				
				    return "";
				
				}
				public String PLAN_AFILIACIONESPattern(){
				
					return "";
				
				}
				public String PLAN_AFILIACIONESOriginalDbColumnName(){
				
					return "PLAN_AFILIACIONES";
				
				}

				
			    public String TIPO_AFILIACION;

				public String getTIPO_AFILIACION () {
					return this.TIPO_AFILIACION;
				}

				public Boolean TIPO_AFILIACIONIsNullable(){
				    return true;
				}
				public Boolean TIPO_AFILIACIONIsKey(){
				    return false;
				}
				public Integer TIPO_AFILIACIONLength(){
				    return null;
				}
				public Integer TIPO_AFILIACIONPrecision(){
				    return null;
				}
				public String TIPO_AFILIACIONDefault(){
				
					return "";
				
				}
				public String TIPO_AFILIACIONComment(){
				
				    return "";
				
				}
				public String TIPO_AFILIACIONPattern(){
				
					return "";
				
				}
				public String TIPO_AFILIACIONOriginalDbColumnName(){
				
					return "TIPO_AFILIACION";
				
				}

				
			    public String TIPO_AFILIADO;

				public String getTIPO_AFILIADO () {
					return this.TIPO_AFILIADO;
				}

				public Boolean TIPO_AFILIADOIsNullable(){
				    return true;
				}
				public Boolean TIPO_AFILIADOIsKey(){
				    return false;
				}
				public Integer TIPO_AFILIADOLength(){
				    return null;
				}
				public Integer TIPO_AFILIADOPrecision(){
				    return null;
				}
				public String TIPO_AFILIADODefault(){
				
					return "";
				
				}
				public String TIPO_AFILIADOComment(){
				
				    return "";
				
				}
				public String TIPO_AFILIADOPattern(){
				
					return "";
				
				}
				public String TIPO_AFILIADOOriginalDbColumnName(){
				
					return "TIPO_AFILIADO";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return null;
				}
				public Integer ESTADOPrecision(){
				    return null;
				}
				public String ESTADODefault(){
				
					return "";
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public String FECHA_AFILIACION;

				public String getFECHA_AFILIACION () {
					return this.FECHA_AFILIACION;
				}

				public Boolean FECHA_AFILIACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_AFILIACIONIsKey(){
				    return false;
				}
				public Integer FECHA_AFILIACIONLength(){
				    return null;
				}
				public Integer FECHA_AFILIACIONPrecision(){
				    return null;
				}
				public String FECHA_AFILIACIONDefault(){
				
					return "";
				
				}
				public String FECHA_AFILIACIONComment(){
				
				    return "";
				
				}
				public String FECHA_AFILIACIONPattern(){
				
					return "";
				
				}
				public String FECHA_AFILIACIONOriginalDbColumnName(){
				
					return "FECHA_AFILIACION";
				
				}

				
			    public String FECHA_REGISTRO_AFILIACION;

				public String getFECHA_REGISTRO_AFILIACION () {
					return this.FECHA_REGISTRO_AFILIACION;
				}

				public Boolean FECHA_REGISTRO_AFILIACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_REGISTRO_AFILIACIONIsKey(){
				    return false;
				}
				public Integer FECHA_REGISTRO_AFILIACIONLength(){
				    return null;
				}
				public Integer FECHA_REGISTRO_AFILIACIONPrecision(){
				    return null;
				}
				public String FECHA_REGISTRO_AFILIACIONDefault(){
				
					return "";
				
				}
				public String FECHA_REGISTRO_AFILIACIONComment(){
				
				    return "";
				
				}
				public String FECHA_REGISTRO_AFILIACIONPattern(){
				
					return "";
				
				}
				public String FECHA_REGISTRO_AFILIACIONOriginalDbColumnName(){
				
					return "FECHA_REGISTRO_AFILIACION";
				
				}

				
			    public String FECHA_INACTIVACION;

				public String getFECHA_INACTIVACION () {
					return this.FECHA_INACTIVACION;
				}

				public Boolean FECHA_INACTIVACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVACIONIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVACIONLength(){
				    return null;
				}
				public Integer FECHA_INACTIVACIONPrecision(){
				    return null;
				}
				public String FECHA_INACTIVACIONDefault(){
				
					return "";
				
				}
				public String FECHA_INACTIVACIONComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVACIONPattern(){
				
					return "";
				
				}
				public String FECHA_INACTIVACIONOriginalDbColumnName(){
				
					return "FECHA_INACTIVACION";
				
				}

				
			    public String FUERZA;

				public String getFUERZA () {
					return this.FUERZA;
				}

				public Boolean FUERZAIsNullable(){
				    return true;
				}
				public Boolean FUERZAIsKey(){
				    return false;
				}
				public Integer FUERZALength(){
				    return null;
				}
				public Integer FUERZAPrecision(){
				    return null;
				}
				public String FUERZADefault(){
				
					return "";
				
				}
				public String FUERZAComment(){
				
				    return "";
				
				}
				public String FUERZAPattern(){
				
					return "";
				
				}
				public String FUERZAOriginalDbColumnName(){
				
					return "FUERZA";
				
				}

				
			    public String GRADO_CODIGO;

				public String getGRADO_CODIGO () {
					return this.GRADO_CODIGO;
				}

				public Boolean GRADO_CODIGOIsNullable(){
				    return true;
				}
				public Boolean GRADO_CODIGOIsKey(){
				    return false;
				}
				public Integer GRADO_CODIGOLength(){
				    return null;
				}
				public Integer GRADO_CODIGOPrecision(){
				    return null;
				}
				public String GRADO_CODIGODefault(){
				
					return "";
				
				}
				public String GRADO_CODIGOComment(){
				
				    return "";
				
				}
				public String GRADO_CODIGOPattern(){
				
					return "";
				
				}
				public String GRADO_CODIGOOriginalDbColumnName(){
				
					return "GRADO_CODIGO";
				
				}

				
			    public String GRADO_NOMBRE;

				public String getGRADO_NOMBRE () {
					return this.GRADO_NOMBRE;
				}

				public Boolean GRADO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean GRADO_NOMBREIsKey(){
				    return false;
				}
				public Integer GRADO_NOMBRELength(){
				    return null;
				}
				public Integer GRADO_NOMBREPrecision(){
				    return null;
				}
				public String GRADO_NOMBREDefault(){
				
					return "";
				
				}
				public String GRADO_NOMBREComment(){
				
				    return "";
				
				}
				public String GRADO_NOMBREPattern(){
				
					return "";
				
				}
				public String GRADO_NOMBREOriginalDbColumnName(){
				
					return "GRADO_NOMBRE";
				
				}

				
			    public String GRADO_SIGLA;

				public String getGRADO_SIGLA () {
					return this.GRADO_SIGLA;
				}

				public Boolean GRADO_SIGLAIsNullable(){
				    return true;
				}
				public Boolean GRADO_SIGLAIsKey(){
				    return false;
				}
				public Integer GRADO_SIGLALength(){
				    return null;
				}
				public Integer GRADO_SIGLAPrecision(){
				    return null;
				}
				public String GRADO_SIGLADefault(){
				
					return "";
				
				}
				public String GRADO_SIGLAComment(){
				
				    return "";
				
				}
				public String GRADO_SIGLAPattern(){
				
					return "";
				
				}
				public String GRADO_SIGLAOriginalDbColumnName(){
				
					return "GRADO_SIGLA";
				
				}

				
			    public String ESM_CODIGO;

				public String getESM_CODIGO () {
					return this.ESM_CODIGO;
				}

				public Boolean ESM_CODIGOIsNullable(){
				    return true;
				}
				public Boolean ESM_CODIGOIsKey(){
				    return false;
				}
				public Integer ESM_CODIGOLength(){
				    return null;
				}
				public Integer ESM_CODIGOPrecision(){
				    return null;
				}
				public String ESM_CODIGODefault(){
				
					return "";
				
				}
				public String ESM_CODIGOComment(){
				
				    return "";
				
				}
				public String ESM_CODIGOPattern(){
				
					return "";
				
				}
				public String ESM_CODIGOOriginalDbColumnName(){
				
					return "ESM_CODIGO";
				
				}

				
			    public String ESM_NOMBRE;

				public String getESM_NOMBRE () {
					return this.ESM_NOMBRE;
				}

				public Boolean ESM_NOMBREIsNullable(){
				    return true;
				}
				public Boolean ESM_NOMBREIsKey(){
				    return false;
				}
				public Integer ESM_NOMBRELength(){
				    return null;
				}
				public Integer ESM_NOMBREPrecision(){
				    return null;
				}
				public String ESM_NOMBREDefault(){
				
					return "";
				
				}
				public String ESM_NOMBREComment(){
				
				    return "";
				
				}
				public String ESM_NOMBREPattern(){
				
					return "";
				
				}
				public String ESM_NOMBREOriginalDbColumnName(){
				
					return "ESM_NOMBRE";
				
				}

				
			    public String ESM_FUERZA;

				public String getESM_FUERZA () {
					return this.ESM_FUERZA;
				}

				public Boolean ESM_FUERZAIsNullable(){
				    return true;
				}
				public Boolean ESM_FUERZAIsKey(){
				    return false;
				}
				public Integer ESM_FUERZALength(){
				    return null;
				}
				public Integer ESM_FUERZAPrecision(){
				    return null;
				}
				public String ESM_FUERZADefault(){
				
					return "";
				
				}
				public String ESM_FUERZAComment(){
				
				    return "";
				
				}
				public String ESM_FUERZAPattern(){
				
					return "";
				
				}
				public String ESM_FUERZAOriginalDbColumnName(){
				
					return "ESM_FUERZA";
				
				}

				
			    public String ESM_DEPARTAMENTO;

				public String getESM_DEPARTAMENTO () {
					return this.ESM_DEPARTAMENTO;
				}

				public Boolean ESM_DEPARTAMENTOIsNullable(){
				    return true;
				}
				public Boolean ESM_DEPARTAMENTOIsKey(){
				    return false;
				}
				public Integer ESM_DEPARTAMENTOLength(){
				    return null;
				}
				public Integer ESM_DEPARTAMENTOPrecision(){
				    return null;
				}
				public String ESM_DEPARTAMENTODefault(){
				
					return "";
				
				}
				public String ESM_DEPARTAMENTOComment(){
				
				    return "";
				
				}
				public String ESM_DEPARTAMENTOPattern(){
				
					return "";
				
				}
				public String ESM_DEPARTAMENTOOriginalDbColumnName(){
				
					return "ESM_DEPARTAMENTO";
				
				}

				
			    public String ESM_CODIGO_DEPARTAMENTO;

				public String getESM_CODIGO_DEPARTAMENTO () {
					return this.ESM_CODIGO_DEPARTAMENTO;
				}

				public Boolean ESM_CODIGO_DEPARTAMENTOIsNullable(){
				    return true;
				}
				public Boolean ESM_CODIGO_DEPARTAMENTOIsKey(){
				    return false;
				}
				public Integer ESM_CODIGO_DEPARTAMENTOLength(){
				    return null;
				}
				public Integer ESM_CODIGO_DEPARTAMENTOPrecision(){
				    return null;
				}
				public String ESM_CODIGO_DEPARTAMENTODefault(){
				
					return "";
				
				}
				public String ESM_CODIGO_DEPARTAMENTOComment(){
				
				    return "";
				
				}
				public String ESM_CODIGO_DEPARTAMENTOPattern(){
				
					return "";
				
				}
				public String ESM_CODIGO_DEPARTAMENTOOriginalDbColumnName(){
				
					return "ESM_CODIGO_DEPARTAMENTO";
				
				}

				
			    public String ESM_MUNICIPIO;

				public String getESM_MUNICIPIO () {
					return this.ESM_MUNICIPIO;
				}

				public Boolean ESM_MUNICIPIOIsNullable(){
				    return true;
				}
				public Boolean ESM_MUNICIPIOIsKey(){
				    return false;
				}
				public Integer ESM_MUNICIPIOLength(){
				    return null;
				}
				public Integer ESM_MUNICIPIOPrecision(){
				    return null;
				}
				public String ESM_MUNICIPIODefault(){
				
					return "";
				
				}
				public String ESM_MUNICIPIOComment(){
				
				    return "";
				
				}
				public String ESM_MUNICIPIOPattern(){
				
					return "";
				
				}
				public String ESM_MUNICIPIOOriginalDbColumnName(){
				
					return "ESM_MUNICIPIO";
				
				}

				
			    public String ESM_CODIGO_MUNICIPIO;

				public String getESM_CODIGO_MUNICIPIO () {
					return this.ESM_CODIGO_MUNICIPIO;
				}

				public Boolean ESM_CODIGO_MUNICIPIOIsNullable(){
				    return true;
				}
				public Boolean ESM_CODIGO_MUNICIPIOIsKey(){
				    return false;
				}
				public Integer ESM_CODIGO_MUNICIPIOLength(){
				    return null;
				}
				public Integer ESM_CODIGO_MUNICIPIOPrecision(){
				    return null;
				}
				public String ESM_CODIGO_MUNICIPIODefault(){
				
					return "";
				
				}
				public String ESM_CODIGO_MUNICIPIOComment(){
				
				    return "";
				
				}
				public String ESM_CODIGO_MUNICIPIOPattern(){
				
					return "";
				
				}
				public String ESM_CODIGO_MUNICIPIOOriginalDbColumnName(){
				
					return "ESM_CODIGO_MUNICIPIO";
				
				}

				
			    public String FECHA_DEFUNCION;

				public String getFECHA_DEFUNCION () {
					return this.FECHA_DEFUNCION;
				}

				public Boolean FECHA_DEFUNCIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_DEFUNCIONIsKey(){
				    return false;
				}
				public Integer FECHA_DEFUNCIONLength(){
				    return null;
				}
				public Integer FECHA_DEFUNCIONPrecision(){
				    return null;
				}
				public String FECHA_DEFUNCIONDefault(){
				
					return "";
				
				}
				public String FECHA_DEFUNCIONComment(){
				
				    return "";
				
				}
				public String FECHA_DEFUNCIONPattern(){
				
					return "";
				
				}
				public String FECHA_DEFUNCIONOriginalDbColumnName(){
				
					return "FECHA_DEFUNCION";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.NUMERO_DOCUMENTO = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.GENERO = readString(dis);
					
					this.DISCAPACIDAD = readString(dis);
					
					this.PARENTESCOS = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
						this.EDAD = (BigDecimal) dis.readObject();
					
					this.LOCALIDADES = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.BARRIO = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.RESIDENCIA_DEPARTAMENTO = readString(dis);
					
					this.RESIDENCIA_CODIGO_DEPARTAMENTO = readString(dis);
					
					this.RESIDENCIA_MUNICIPIO = readString(dis);
					
					this.RESIDENCIA_CODIGO_MUNICIPIO = readString(dis);
					
					this.PLAN_AFILIACIONES = readString(dis);
					
					this.TIPO_AFILIACION = readString(dis);
					
					this.TIPO_AFILIADO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.FECHA_AFILIACION = readString(dis);
					
					this.FECHA_REGISTRO_AFILIACION = readString(dis);
					
					this.FECHA_INACTIVACION = readString(dis);
					
					this.FUERZA = readString(dis);
					
					this.GRADO_CODIGO = readString(dis);
					
					this.GRADO_NOMBRE = readString(dis);
					
					this.GRADO_SIGLA = readString(dis);
					
					this.ESM_CODIGO = readString(dis);
					
					this.ESM_NOMBRE = readString(dis);
					
					this.ESM_FUERZA = readString(dis);
					
					this.ESM_DEPARTAMENTO = readString(dis);
					
					this.ESM_CODIGO_DEPARTAMENTO = readString(dis);
					
					this.ESM_MUNICIPIO = readString(dis);
					
					this.ESM_CODIGO_MUNICIPIO = readString(dis);
					
					this.FECHA_DEFUNCION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.NUMERO_DOCUMENTO = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.GENERO = readString(dis);
					
					this.DISCAPACIDAD = readString(dis);
					
					this.PARENTESCOS = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
						this.EDAD = (BigDecimal) dis.readObject();
					
					this.LOCALIDADES = readString(dis);
					
					this.DIRECCION = readString(dis);
					
					this.BARRIO = readString(dis);
					
					this.TELEFONO = readString(dis);
					
					this.EMAIL = readString(dis);
					
					this.RESIDENCIA_DEPARTAMENTO = readString(dis);
					
					this.RESIDENCIA_CODIGO_DEPARTAMENTO = readString(dis);
					
					this.RESIDENCIA_MUNICIPIO = readString(dis);
					
					this.RESIDENCIA_CODIGO_MUNICIPIO = readString(dis);
					
					this.PLAN_AFILIACIONES = readString(dis);
					
					this.TIPO_AFILIACION = readString(dis);
					
					this.TIPO_AFILIADO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.FECHA_AFILIACION = readString(dis);
					
					this.FECHA_REGISTRO_AFILIACION = readString(dis);
					
					this.FECHA_INACTIVACION = readString(dis);
					
					this.FUERZA = readString(dis);
					
					this.GRADO_CODIGO = readString(dis);
					
					this.GRADO_NOMBRE = readString(dis);
					
					this.GRADO_SIGLA = readString(dis);
					
					this.ESM_CODIGO = readString(dis);
					
					this.ESM_NOMBRE = readString(dis);
					
					this.ESM_FUERZA = readString(dis);
					
					this.ESM_DEPARTAMENTO = readString(dis);
					
					this.ESM_CODIGO_DEPARTAMENTO = readString(dis);
					
					this.ESM_MUNICIPIO = readString(dis);
					
					this.ESM_CODIGO_MUNICIPIO = readString(dis);
					
					this.FECHA_DEFUNCION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NUMERO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.GENERO,dos);
					
					// String
				
						writeString(this.DISCAPACIDAD,dos);
					
					// String
				
						writeString(this.PARENTESCOS,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.EDAD);
					
					// String
				
						writeString(this.LOCALIDADES,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.BARRIO,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// String
				
						writeString(this.RESIDENCIA_DEPARTAMENTO,dos);
					
					// String
				
						writeString(this.RESIDENCIA_CODIGO_DEPARTAMENTO,dos);
					
					// String
				
						writeString(this.RESIDENCIA_MUNICIPIO,dos);
					
					// String
				
						writeString(this.RESIDENCIA_CODIGO_MUNICIPIO,dos);
					
					// String
				
						writeString(this.PLAN_AFILIACIONES,dos);
					
					// String
				
						writeString(this.TIPO_AFILIACION,dos);
					
					// String
				
						writeString(this.TIPO_AFILIADO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.FECHA_AFILIACION,dos);
					
					// String
				
						writeString(this.FECHA_REGISTRO_AFILIACION,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVACION,dos);
					
					// String
				
						writeString(this.FUERZA,dos);
					
					// String
				
						writeString(this.GRADO_CODIGO,dos);
					
					// String
				
						writeString(this.GRADO_NOMBRE,dos);
					
					// String
				
						writeString(this.GRADO_SIGLA,dos);
					
					// String
				
						writeString(this.ESM_CODIGO,dos);
					
					// String
				
						writeString(this.ESM_NOMBRE,dos);
					
					// String
				
						writeString(this.ESM_FUERZA,dos);
					
					// String
				
						writeString(this.ESM_DEPARTAMENTO,dos);
					
					// String
				
						writeString(this.ESM_CODIGO_DEPARTAMENTO,dos);
					
					// String
				
						writeString(this.ESM_MUNICIPIO,dos);
					
					// String
				
						writeString(this.ESM_CODIGO_MUNICIPIO,dos);
					
					// String
				
						writeString(this.FECHA_DEFUNCION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.NUMERO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.GENERO,dos);
					
					// String
				
						writeString(this.DISCAPACIDAD,dos);
					
					// String
				
						writeString(this.PARENTESCOS,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.EDAD);
					
					// String
				
						writeString(this.LOCALIDADES,dos);
					
					// String
				
						writeString(this.DIRECCION,dos);
					
					// String
				
						writeString(this.BARRIO,dos);
					
					// String
				
						writeString(this.TELEFONO,dos);
					
					// String
				
						writeString(this.EMAIL,dos);
					
					// String
				
						writeString(this.RESIDENCIA_DEPARTAMENTO,dos);
					
					// String
				
						writeString(this.RESIDENCIA_CODIGO_DEPARTAMENTO,dos);
					
					// String
				
						writeString(this.RESIDENCIA_MUNICIPIO,dos);
					
					// String
				
						writeString(this.RESIDENCIA_CODIGO_MUNICIPIO,dos);
					
					// String
				
						writeString(this.PLAN_AFILIACIONES,dos);
					
					// String
				
						writeString(this.TIPO_AFILIACION,dos);
					
					// String
				
						writeString(this.TIPO_AFILIADO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.FECHA_AFILIACION,dos);
					
					// String
				
						writeString(this.FECHA_REGISTRO_AFILIACION,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVACION,dos);
					
					// String
				
						writeString(this.FUERZA,dos);
					
					// String
				
						writeString(this.GRADO_CODIGO,dos);
					
					// String
				
						writeString(this.GRADO_NOMBRE,dos);
					
					// String
				
						writeString(this.GRADO_SIGLA,dos);
					
					// String
				
						writeString(this.ESM_CODIGO,dos);
					
					// String
				
						writeString(this.ESM_NOMBRE,dos);
					
					// String
				
						writeString(this.ESM_FUERZA,dos);
					
					// String
				
						writeString(this.ESM_DEPARTAMENTO,dos);
					
					// String
				
						writeString(this.ESM_CODIGO_DEPARTAMENTO,dos);
					
					// String
				
						writeString(this.ESM_MUNICIPIO,dos);
					
					// String
				
						writeString(this.ESM_CODIGO_MUNICIPIO,dos);
					
					// String
				
						writeString(this.FECHA_DEFUNCION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",NUMERO_DOCUMENTO="+NUMERO_DOCUMENTO);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",GENERO="+GENERO);
		sb.append(",DISCAPACIDAD="+DISCAPACIDAD);
		sb.append(",PARENTESCOS="+PARENTESCOS);
		sb.append(",FECHA_NACIMIENTO="+FECHA_NACIMIENTO);
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",LOCALIDADES="+LOCALIDADES);
		sb.append(",DIRECCION="+DIRECCION);
		sb.append(",BARRIO="+BARRIO);
		sb.append(",TELEFONO="+TELEFONO);
		sb.append(",EMAIL="+EMAIL);
		sb.append(",RESIDENCIA_DEPARTAMENTO="+RESIDENCIA_DEPARTAMENTO);
		sb.append(",RESIDENCIA_CODIGO_DEPARTAMENTO="+RESIDENCIA_CODIGO_DEPARTAMENTO);
		sb.append(",RESIDENCIA_MUNICIPIO="+RESIDENCIA_MUNICIPIO);
		sb.append(",RESIDENCIA_CODIGO_MUNICIPIO="+RESIDENCIA_CODIGO_MUNICIPIO);
		sb.append(",PLAN_AFILIACIONES="+PLAN_AFILIACIONES);
		sb.append(",TIPO_AFILIACION="+TIPO_AFILIACION);
		sb.append(",TIPO_AFILIADO="+TIPO_AFILIADO);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",FECHA_AFILIACION="+FECHA_AFILIACION);
		sb.append(",FECHA_REGISTRO_AFILIACION="+FECHA_REGISTRO_AFILIACION);
		sb.append(",FECHA_INACTIVACION="+FECHA_INACTIVACION);
		sb.append(",FUERZA="+FUERZA);
		sb.append(",GRADO_CODIGO="+GRADO_CODIGO);
		sb.append(",GRADO_NOMBRE="+GRADO_NOMBRE);
		sb.append(",GRADO_SIGLA="+GRADO_SIGLA);
		sb.append(",ESM_CODIGO="+ESM_CODIGO);
		sb.append(",ESM_NOMBRE="+ESM_NOMBRE);
		sb.append(",ESM_FUERZA="+ESM_FUERZA);
		sb.append(",ESM_DEPARTAMENTO="+ESM_DEPARTAMENTO);
		sb.append(",ESM_CODIGO_DEPARTAMENTO="+ESM_CODIGO_DEPARTAMENTO);
		sb.append(",ESM_MUNICIPIO="+ESM_MUNICIPIO);
		sb.append(",ESM_CODIGO_MUNICIPIO="+ESM_CODIGO_MUNICIPIO);
		sb.append(",FECHA_DEFUNCION="+FECHA_DEFUNCION);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row12Struct row12 = new row12Struct();




	
	/**
	 * [tFileOutputDelimited_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_8", false);
		start_Hash.put("tFileOutputDelimited_8", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tFileOutputDelimited_8 = 0;
		

String fileName_tFileOutputDelimited_8 = "";
    fileName_tFileOutputDelimited_8 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_8 = null;
    String extension_tFileOutputDelimited_8 = null;
    String directory_tFileOutputDelimited_8 = null;
    if((fileName_tFileOutputDelimited_8.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_8.lastIndexOf(".") < fileName_tFileOutputDelimited_8.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_8 = fileName_tFileOutputDelimited_8;
            extension_tFileOutputDelimited_8 = "";
        } else {
            fullName_tFileOutputDelimited_8 = fileName_tFileOutputDelimited_8.substring(0, fileName_tFileOutputDelimited_8.lastIndexOf("."));
            extension_tFileOutputDelimited_8 = fileName_tFileOutputDelimited_8.substring(fileName_tFileOutputDelimited_8.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_8 = fileName_tFileOutputDelimited_8.substring(0, fileName_tFileOutputDelimited_8.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_8.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_8 = fileName_tFileOutputDelimited_8.substring(0, fileName_tFileOutputDelimited_8.lastIndexOf("."));
            extension_tFileOutputDelimited_8 = fileName_tFileOutputDelimited_8.substring(fileName_tFileOutputDelimited_8.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_8 = fileName_tFileOutputDelimited_8;
            extension_tFileOutputDelimited_8 = "";
        }
        directory_tFileOutputDelimited_8 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_8 = true;
    java.io.File filetFileOutputDelimited_8 = new java.io.File(fileName_tFileOutputDelimited_8);
    globalMap.put("tFileOutputDelimited_8_FILE_NAME",fileName_tFileOutputDelimited_8);
        if(filetFileOutputDelimited_8.exists()){
            isFileGenerated_tFileOutputDelimited_8 = false;
        }
            int nb_line_tFileOutputDelimited_8 = 0;
            int splitedFileNo_tFileOutputDelimited_8 = 0;
            int currentRow_tFileOutputDelimited_8 = 0;

            final String OUT_DELIM_tFileOutputDelimited_8 = /** Start field tFileOutputDelimited_8:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_8:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_8 = /** Start field tFileOutputDelimited_8:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_8:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_8 != null && directory_tFileOutputDelimited_8.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_8 = new java.io.File(directory_tFileOutputDelimited_8);
                        if(!dir_tFileOutputDelimited_8.exists()) {
                            dir_tFileOutputDelimited_8.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_8 = null;

                        outtFileOutputDelimited_8 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_8, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_8", outtFileOutputDelimited_8);
                                    if(filetFileOutputDelimited_8.length()==0){
                                        outtFileOutputDelimited_8.write("TIPO_DOCUMENTO");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("NUMERO_DOCUMENTO");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("PRIMER_APELLIDO");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("SEGUNDO_APELLIDO");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("PRIMER_NOMBRE");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("SEGUNDO_NOMBRE");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("GENERO");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("DISCAPACIDAD");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("PARENTESCOS");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("FECHA_NACIMIENTO");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("EDAD");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("LOCALIDADES");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("DIRECCION");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("BARRIO");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("TELEFONO");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("EMAIL");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("RESIDENCIA_DEPARTAMENTO");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("RESIDENCIA_CODIGO_DEPARTAMENTO");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("RESIDENCIA_MUNICIPIO");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("RESIDENCIA_CODIGO_MUNICIPIO");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("PLAN_AFILIACIONES");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("TIPO_AFILIACION");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("TIPO_AFILIADO");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("ESTADO");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("FECHA_AFILIACION");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("FECHA_REGISTRO_AFILIACION");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("FECHA_INACTIVACION");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("FUERZA");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("GRADO_CODIGO");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("GRADO_NOMBRE");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("GRADO_SIGLA");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("ESM_CODIGO");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("ESM_NOMBRE");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("ESM_FUERZA");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("ESM_DEPARTAMENTO");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("ESM_CODIGO_DEPARTAMENTO");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("ESM_MUNICIPIO");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("ESM_CODIGO_MUNICIPIO");
                                            outtFileOutputDelimited_8.write(OUT_DELIM_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.write("FECHA_DEFUNCION");
                                        outtFileOutputDelimited_8.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_8);
                                        outtFileOutputDelimited_8.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_8", nb_line_tFileOutputDelimited_8);

 



/**
 * [tFileOutputDelimited_8 begin ] stop
 */



	
	/**
	 * [tOracleInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_9", false);
		start_Hash.put("tOracleInput_9", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_9";
	
	
		int tos_count_tOracleInput_9 = 0;
		
	


	
		    int nb_line_tOracleInput_9 = 0;
		    java.sql.Connection conn_tOracleInput_9 = null;
				conn_tOracleInput_9 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_9 = false;
				boolean isConnectionWrapped_tOracleInput_9 = !(conn_tOracleInput_9 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_9.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_9 = null;
                if (isConnectionWrapped_tOracleInput_9) {
					unwrappedOraConn_tOracleInput_9 = conn_tOracleInput_9.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_9 != null) {
                        isTimeZoneNull_tOracleInput_9 = (unwrappedOraConn_tOracleInput_9.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_9 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_9).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_9) {
					java.sql.Statement stmtGetTZ_tOracleInput_9 = conn_tOracleInput_9.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_9 = stmtGetTZ_tOracleInput_9.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_9 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_9.next()) {
						sessionTimezone_tOracleInput_9 = rsGetTZ_tOracleInput_9.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_9 && unwrappedOraConn_tOracleInput_9 != null) {
                        unwrappedOraConn_tOracleInput_9.setSessionTimeZone(sessionTimezone_tOracleInput_9);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_9).setSessionTimeZone(sessionTimezone_tOracleInput_9);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_9 = conn_tOracleInput_9.createStatement();

		    String dbquery_tOracleInput_9 = "SELECT  replace(replace(VM.TIPO_DOCUMENTO,chr(10),''),chr(13),'') AS TIPO_DOCUMENTO,\n        replace(replace(VM.DOCUME"
+"NTO,chr(10),''),chr(13),'') AS NUMERO_DOCUMENTO,\n        replace(replace(VM.PRIMER_APELLIDO,chr(10),''),chr(13),'') AS "
+"PRIMER_APELLIDO,\n        replace(replace(VM.SEGUNDO_APELLIDO,chr(10),''),chr(13),'') AS SEGUNDO_APELLIDO,\n        repl"
+"ace(replace(VM.PRIMER_NOMBRE,chr(10),''),chr(13),'') AS PRIMER_NOMBRE,\n        replace(replace(VM.SEGUNDO_NOMBRE,chr(10"
+"),''),chr(13),'') AS SEGUNDO_NOMBRE,\n        replace(replace(VM.GENERO,chr(10),''),chr(13),'') AS GENERO,\n        repl"
+"ace(replace(VM.TDISCAPACIDADES,chr(10),''),chr(13),'') AS DISCAPACIDAD,\n        replace(replace(VM.PARENTESCOS,chr(10),"
+"''),chr(13),'') AS PARENTESCOS,\n        TO_CHAR(VM.FECHA_NACIMIENTO,'DD/MM/YYYY') AS FECHA_NACIMIENTO,\n        TRUNC(M"
+"ONTHS_BETWEEN(SYSDATE,VM.FECHA_NACIMIENTO)/12) AS EDAD,\n        replace(replace(VM.LOCALIDADES,chr(10),''),chr(13),'') "
+"AS LOCALIDADES,\n        replace(replace(VM.DIRECCION,chr(10),''),chr(13),'') AS DIRECCION, \n        replace(replace(VM"
+".BARRIO,chr(10),''),chr(13),'') AS BARRIO,\n        replace(replace(VM.TELEFONO,chr(10),''),chr(13),'') AS TELEFONO,\n  "
+"      replace(replace(VM.EMAIL,chr(10),''),chr(13),'') AS EMAIL, \n        replace(replace(VM.DEPARTAMENTO_RESIDENCIAS,c"
+"hr(10),''),chr(13),'') AS RESIDENCIA_DEPARTAMENTO,\n        replace(replace(VM.CODIGO_DEPTO_RESIDENCIA,chr(10),''),chr(1"
+"3),'') AS RESIDENCIA_CODIGO_DEPARTAMENTO,\n        replace(replace(VM.MUNICIPIO_RESIDENCIA,chr(10),''),chr(13),'') AS RE"
+"SIDENCIA_MUNICIPIO,\n        replace(replace(VM.CODIGO_MUNICIPIO_RESIDENCIA,chr(10),''),chr(13),'') AS RESIDENCIA_CODIGO"
+"_MUNICIPIO,\n        replace(replace(VM.PLANAFILIACIONES,chr(10),''),chr(13),'') AS PLAN_AFILIACIONES,\n        replace("
+"replace(VM.TAFILIACIONES,chr(10),''),chr(13),'') AS TIPO_AFILIACION,\n        replace(replace(VM.TAFILIADOS,chr(10),''),"
+"chr(13),'') AS TIPO_AFILIADO,\n        replace(replace(VM.ESTAFILIACION,chr(10),''),chr(13),'') AS ESTADO,\n        TO_C"
+"HAR(VM.FAFILIACION,'DD/MM/YYYY') AS FECHA_AFILIACION,\n        TO_CHAR(VM.FREGISTRO,'DD/MM/YYYY') AS FECHA_REGISTRO_AFIL"
+"IACION,\n        DECODE( VM.ESTAFILIACION,  'Inactivo', TO_CHAR(VM.FECHA_ESTADO, 'DD/MM/YYYY'), ' ') AS FECHA_INACTIVACI"
+"ON,\n        replace(replace(VM.FUERZAS,chr(10),''),chr(13),'') AS FUERZA,\n        replace(replace(VM.CODIGO_GRADO,chr("
+"10),''),chr(13),'') AS GRADO_CODIGO,\n        replace(replace(VM.GRDMILITARES,chr(10),''),chr(13),'') AS GRADO_NOMBRE,\n"
+"        replace(replace(VM.SIGLA_GRADO,chr(10),''),chr(13),'') AS GRADO_SIGLA,\n        replace(replace(VM.CODIGO_ESM,ch"
+"r(10),''),chr(13),'') AS ESM_CODIGO,\n        replace(replace(VM.ESMADSCRITO,chr(10),''),chr(13),'') AS ESM_NOMBRE,\n   "
+"     replace(replace(VM.FUERZA_ESM,chr(10),''),chr(13),'') AS ESM_FUERZA,\n        replace(replace(VM.DEPARTAMENTO_ESM,c"
+"hr(10),''),chr(13),'') AS ESM_DEPARTAMENTO,\n        replace(replace(VM.CODIGO_DEPTO_ESM,chr(10),''),chr(13),'') AS ESM_"
+"CODIGO_DEPARTAMENTO,\n        replace(replace(VM.MUNICIPIO_ESM,chr(10),''),chr(13),'') AS ESM_MUNICIPIO,\n        replac"
+"e(replace(VM.CODIGO_MUNICIPIO_ESM,chr(10),''),chr(13),'') AS ESM_CODIGO_MUNICIPIO,\n        TO_CHAR(VM.FECHA_DEFUNCION,'"
+"DD/MM/YYYY') AS FECHA_DEFUNCION\nFROM  VM_PERSONAS VM\nINNER JOIN AFI_CARCHIVOS CA ON CA.DOCUMENTO = VM.DOCUMENTO AND TR"
+"IM(UPPER(CA.TDOCUMENTOS)) = TRIM(UPPER(VM.TIPO_DOCUMENTO))\nWHERE VM.AFILIADO_ESTREGISTRO_ID = 1 AND CA.ARCHIVOS_ID = " + context.infoIdArchivo ;
		    

		    globalMap.put("tOracleInput_9_QUERY",dbquery_tOracleInput_9);

		    java.sql.ResultSet rs_tOracleInput_9 = null;

		    try {
		    	rs_tOracleInput_9 = stmt_tOracleInput_9.executeQuery(dbquery_tOracleInput_9);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_9 = rs_tOracleInput_9.getMetaData();
		    	int colQtyInRs_tOracleInput_9 = rsmd_tOracleInput_9.getColumnCount();

		    String tmpContent_tOracleInput_9 = null;
		    
		    
		    while (rs_tOracleInput_9.next()) {
		        nb_line_tOracleInput_9++;
		        
							if(colQtyInRs_tOracleInput_9 < 1) {
								row12.TIPO_DOCUMENTO = null;
							} else {
	                         		
        	row12.TIPO_DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 2) {
								row12.NUMERO_DOCUMENTO = null;
							} else {
	                         		
        	row12.NUMERO_DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 3) {
								row12.PRIMER_APELLIDO = null;
							} else {
	                         		
        	row12.PRIMER_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 4) {
								row12.SEGUNDO_APELLIDO = null;
							} else {
	                         		
        	row12.SEGUNDO_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 5) {
								row12.PRIMER_NOMBRE = null;
							} else {
	                         		
        	row12.PRIMER_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 6) {
								row12.SEGUNDO_NOMBRE = null;
							} else {
	                         		
        	row12.SEGUNDO_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 7) {
								row12.GENERO = null;
							} else {
	                         		
        	row12.GENERO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 8) {
								row12.DISCAPACIDAD = null;
							} else {
	                         		
        	row12.DISCAPACIDAD = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 8, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 9) {
								row12.PARENTESCOS = null;
							} else {
	                         		
        	row12.PARENTESCOS = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 10) {
								row12.FECHA_NACIMIENTO = null;
							} else {
	                         		
        	row12.FECHA_NACIMIENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 11) {
								row12.EDAD = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(11) != null) {
						row12.EDAD = rs_tOracleInput_9.getBigDecimal(11);
					} else {
				
						row12.EDAD = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_9 < 12) {
								row12.LOCALIDADES = null;
							} else {
	                         		
        	row12.LOCALIDADES = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 13) {
								row12.DIRECCION = null;
							} else {
	                         		
        	row12.DIRECCION = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 13, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 14) {
								row12.BARRIO = null;
							} else {
	                         		
        	row12.BARRIO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 14, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 15) {
								row12.TELEFONO = null;
							} else {
	                         		
        	row12.TELEFONO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 15, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 16) {
								row12.EMAIL = null;
							} else {
	                         		
        	row12.EMAIL = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 16, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 17) {
								row12.RESIDENCIA_DEPARTAMENTO = null;
							} else {
	                         		
        	row12.RESIDENCIA_DEPARTAMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 17, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 18) {
								row12.RESIDENCIA_CODIGO_DEPARTAMENTO = null;
							} else {
	                         		
        	row12.RESIDENCIA_CODIGO_DEPARTAMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 18, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 19) {
								row12.RESIDENCIA_MUNICIPIO = null;
							} else {
	                         		
        	row12.RESIDENCIA_MUNICIPIO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 19, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 20) {
								row12.RESIDENCIA_CODIGO_MUNICIPIO = null;
							} else {
	                         		
        	row12.RESIDENCIA_CODIGO_MUNICIPIO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 20, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 21) {
								row12.PLAN_AFILIACIONES = null;
							} else {
	                         		
        	row12.PLAN_AFILIACIONES = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 21, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 22) {
								row12.TIPO_AFILIACION = null;
							} else {
	                         		
        	row12.TIPO_AFILIACION = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 22, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 23) {
								row12.TIPO_AFILIADO = null;
							} else {
	                         		
        	row12.TIPO_AFILIADO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 23, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 24) {
								row12.ESTADO = null;
							} else {
	                         		
        	row12.ESTADO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 24, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 25) {
								row12.FECHA_AFILIACION = null;
							} else {
	                         		
        	row12.FECHA_AFILIACION = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 25, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 26) {
								row12.FECHA_REGISTRO_AFILIACION = null;
							} else {
	                         		
        	row12.FECHA_REGISTRO_AFILIACION = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 26, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 27) {
								row12.FECHA_INACTIVACION = null;
							} else {
	                         		
        	row12.FECHA_INACTIVACION = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 27, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 28) {
								row12.FUERZA = null;
							} else {
	                         		
        	row12.FUERZA = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 28, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 29) {
								row12.GRADO_CODIGO = null;
							} else {
	                         		
        	row12.GRADO_CODIGO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 29, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 30) {
								row12.GRADO_NOMBRE = null;
							} else {
	                         		
        	row12.GRADO_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 30, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 31) {
								row12.GRADO_SIGLA = null;
							} else {
	                         		
        	row12.GRADO_SIGLA = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 31, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 32) {
								row12.ESM_CODIGO = null;
							} else {
	                         		
        	row12.ESM_CODIGO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 32, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 33) {
								row12.ESM_NOMBRE = null;
							} else {
	                         		
        	row12.ESM_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 33, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 34) {
								row12.ESM_FUERZA = null;
							} else {
	                         		
        	row12.ESM_FUERZA = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 34, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 35) {
								row12.ESM_DEPARTAMENTO = null;
							} else {
	                         		
        	row12.ESM_DEPARTAMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 35, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 36) {
								row12.ESM_CODIGO_DEPARTAMENTO = null;
							} else {
	                         		
        	row12.ESM_CODIGO_DEPARTAMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 36, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 37) {
								row12.ESM_MUNICIPIO = null;
							} else {
	                         		
        	row12.ESM_MUNICIPIO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 37, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 38) {
								row12.ESM_CODIGO_MUNICIPIO = null;
							} else {
	                         		
        	row12.ESM_CODIGO_MUNICIPIO = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 38, false);
		                    }
							if(colQtyInRs_tOracleInput_9 < 39) {
								row12.FECHA_DEFUNCION = null;
							} else {
	                         		
        	row12.FECHA_DEFUNCION = routines.system.JDBCUtil.getString(rs_tOracleInput_9, 39, false);
		                    }
					




 



/**
 * [tOracleInput_9 begin ] stop
 */
	
	/**
	 * [tOracleInput_9 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 


	tos_count_tOracleInput_9++;

/**
 * [tOracleInput_9 main ] stop
 */
	
	/**
	 * [tOracleInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 



/**
 * [tOracleInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_8 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_8 = new StringBuilder();
                            if(row12.TIPO_DOCUMENTO != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.TIPO_DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.NUMERO_DOCUMENTO != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.NUMERO_DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.PRIMER_APELLIDO != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.PRIMER_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.SEGUNDO_APELLIDO != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.SEGUNDO_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.PRIMER_NOMBRE != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.PRIMER_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.SEGUNDO_NOMBRE != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.SEGUNDO_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.GENERO != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.GENERO
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.DISCAPACIDAD != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.DISCAPACIDAD
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.PARENTESCOS != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.PARENTESCOS
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.FECHA_NACIMIENTO != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.FECHA_NACIMIENTO
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.EDAD != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.EDAD.toPlainString()
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.LOCALIDADES != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.LOCALIDADES
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.DIRECCION != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.DIRECCION
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.BARRIO != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.BARRIO
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.TELEFONO != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.TELEFONO
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.EMAIL != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.EMAIL
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.RESIDENCIA_DEPARTAMENTO != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.RESIDENCIA_DEPARTAMENTO
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.RESIDENCIA_CODIGO_DEPARTAMENTO != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.RESIDENCIA_CODIGO_DEPARTAMENTO
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.RESIDENCIA_MUNICIPIO != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.RESIDENCIA_MUNICIPIO
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.RESIDENCIA_CODIGO_MUNICIPIO != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.RESIDENCIA_CODIGO_MUNICIPIO
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.PLAN_AFILIACIONES != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.PLAN_AFILIACIONES
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.TIPO_AFILIACION != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.TIPO_AFILIACION
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.TIPO_AFILIADO != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.TIPO_AFILIADO
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.ESTADO != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.ESTADO
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.FECHA_AFILIACION != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.FECHA_AFILIACION
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.FECHA_REGISTRO_AFILIACION != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.FECHA_REGISTRO_AFILIACION
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.FECHA_INACTIVACION != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.FECHA_INACTIVACION
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.FUERZA != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.FUERZA
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.GRADO_CODIGO != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.GRADO_CODIGO
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.GRADO_NOMBRE != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.GRADO_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.GRADO_SIGLA != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.GRADO_SIGLA
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.ESM_CODIGO != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.ESM_CODIGO
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.ESM_NOMBRE != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.ESM_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.ESM_FUERZA != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.ESM_FUERZA
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.ESM_DEPARTAMENTO != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.ESM_DEPARTAMENTO
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.ESM_CODIGO_DEPARTAMENTO != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.ESM_CODIGO_DEPARTAMENTO
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.ESM_MUNICIPIO != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.ESM_MUNICIPIO
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.ESM_CODIGO_MUNICIPIO != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.ESM_CODIGO_MUNICIPIO
                        );
                            }
                            sb_tFileOutputDelimited_8.append(OUT_DELIM_tFileOutputDelimited_8);
                            if(row12.FECHA_DEFUNCION != null) {
                        sb_tFileOutputDelimited_8.append(
                            row12.FECHA_DEFUNCION
                        );
                            }
                    sb_tFileOutputDelimited_8.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_8);


                    nb_line_tFileOutputDelimited_8++;
                    resourceMap.put("nb_line_tFileOutputDelimited_8", nb_line_tFileOutputDelimited_8);

                        outtFileOutputDelimited_8.write(sb_tFileOutputDelimited_8.toString());




 


	tos_count_tFileOutputDelimited_8++;

/**
 * [tFileOutputDelimited_8 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_8";
	
	

 



/**
 * [tFileOutputDelimited_8 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_8";
	
	

 



/**
 * [tFileOutputDelimited_8 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 



/**
 * [tOracleInput_9 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_9 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

}
}finally{
	if (rs_tOracleInput_9 != null) {
		rs_tOracleInput_9.close();
	}
	if (stmt_tOracleInput_9 != null) {
		stmt_tOracleInput_9.close();
	}
}

globalMap.put("tOracleInput_9_NB_LINE",nb_line_tOracleInput_9);
 

ok_Hash.put("tOracleInput_9", true);
end_Hash.put("tOracleInput_9", System.currentTimeMillis());

   			if (((Integer)globalMap.get("tOracleOutput_3_NB_LINE_INSERTED"))> ((Integer)globalMap.get("tOracleInput_9_NB_LINE"))) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If18", 0, "true");
					}
				tOracleInput_10Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If18", 0, "false");
					}   	 
   				}



/**
 * [tOracleInput_9 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_8 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_8";
	
	



		
			
					if(outtFileOutputDelimited_8!=null) {
						outtFileOutputDelimited_8.flush();
						outtFileOutputDelimited_8.close();
					}
				
				globalMap.put("tFileOutputDelimited_8_NB_LINE",nb_line_tFileOutputDelimited_8);
				globalMap.put("tFileOutputDelimited_8_FILE_NAME",fileName_tFileOutputDelimited_8);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_8", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_8", true);
end_Hash.put("tFileOutputDelimited_8", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk16", 0, "ok");
				}
				tFixedFlowInput_2Process(globalMap);



/**
 * [tFileOutputDelimited_8 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_9 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 



/**
 * [tOracleInput_9 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_8 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_8";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_8") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_8 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_8");
						if(outtFileOutputDelimited_8!=null) {
							outtFileOutputDelimited_8.flush();
							outtFileOutputDelimited_8.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_8 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_9_SUBPROCESS_STATE", 1);
	}
	


public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public String TDOCUMENTOS;

				public String getTDOCUMENTOS () {
					return this.TDOCUMENTOS;
				}

				public Boolean TDOCUMENTOSIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOSIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOSLength(){
				    return null;
				}
				public Integer TDOCUMENTOSPrecision(){
				    return null;
				}
				public String TDOCUMENTOSDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOSComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOSPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOSOriginalDbColumnName(){
				
					return "TDOCUMENTOS";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return null;
				}
				public Integer ERRORPrecision(){
				    return null;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TDOCUMENTOS = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TDOCUMENTOS = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TDOCUMENTOS,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TDOCUMENTOS,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS="+TDOCUMENTOS);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row13Struct row13 = new row13Struct();




	
	/**
	 * [tFileOutputDelimited_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_9", false);
		start_Hash.put("tFileOutputDelimited_9", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tFileOutputDelimited_9 = 0;
		

String fileName_tFileOutputDelimited_9 = "";
    fileName_tFileOutputDelimited_9 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+"ERRORES_"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_9 = null;
    String extension_tFileOutputDelimited_9 = null;
    String directory_tFileOutputDelimited_9 = null;
    if((fileName_tFileOutputDelimited_9.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_9.lastIndexOf(".") < fileName_tFileOutputDelimited_9.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_9 = fileName_tFileOutputDelimited_9;
            extension_tFileOutputDelimited_9 = "";
        } else {
            fullName_tFileOutputDelimited_9 = fileName_tFileOutputDelimited_9.substring(0, fileName_tFileOutputDelimited_9.lastIndexOf("."));
            extension_tFileOutputDelimited_9 = fileName_tFileOutputDelimited_9.substring(fileName_tFileOutputDelimited_9.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_9 = fileName_tFileOutputDelimited_9.substring(0, fileName_tFileOutputDelimited_9.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_9.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_9 = fileName_tFileOutputDelimited_9.substring(0, fileName_tFileOutputDelimited_9.lastIndexOf("."));
            extension_tFileOutputDelimited_9 = fileName_tFileOutputDelimited_9.substring(fileName_tFileOutputDelimited_9.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_9 = fileName_tFileOutputDelimited_9;
            extension_tFileOutputDelimited_9 = "";
        }
        directory_tFileOutputDelimited_9 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_9 = true;
    java.io.File filetFileOutputDelimited_9 = new java.io.File(fileName_tFileOutputDelimited_9);
    globalMap.put("tFileOutputDelimited_9_FILE_NAME",fileName_tFileOutputDelimited_9);
        if(filetFileOutputDelimited_9.exists()){
            isFileGenerated_tFileOutputDelimited_9 = false;
        }
            int nb_line_tFileOutputDelimited_9 = 0;
            int splitedFileNo_tFileOutputDelimited_9 = 0;
            int currentRow_tFileOutputDelimited_9 = 0;

            final String OUT_DELIM_tFileOutputDelimited_9 = /** Start field tFileOutputDelimited_9:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_9:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_9 = /** Start field tFileOutputDelimited_9:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_9:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_9 != null && directory_tFileOutputDelimited_9.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_9 = new java.io.File(directory_tFileOutputDelimited_9);
                        if(!dir_tFileOutputDelimited_9.exists()) {
                            dir_tFileOutputDelimited_9.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_9 = null;

                        outtFileOutputDelimited_9 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_9, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_9", outtFileOutputDelimited_9);
                                    if(filetFileOutputDelimited_9.length()==0){
                                        outtFileOutputDelimited_9.write("TDOCUMENTOS");
                                            outtFileOutputDelimited_9.write(OUT_DELIM_tFileOutputDelimited_9);
                                        outtFileOutputDelimited_9.write("DOCUMENTO");
                                            outtFileOutputDelimited_9.write(OUT_DELIM_tFileOutputDelimited_9);
                                        outtFileOutputDelimited_9.write("ERROR");
                                        outtFileOutputDelimited_9.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_9);
                                        outtFileOutputDelimited_9.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_9", nb_line_tFileOutputDelimited_9);

 



/**
 * [tFileOutputDelimited_9 begin ] stop
 */



	
	/**
	 * [tOracleInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_10", false);
		start_Hash.put("tOracleInput_10", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_10";
	
	
		int tos_count_tOracleInput_10 = 0;
		
	


	
		    int nb_line_tOracleInput_10 = 0;
		    java.sql.Connection conn_tOracleInput_10 = null;
				conn_tOracleInput_10 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_10 = false;
				boolean isConnectionWrapped_tOracleInput_10 = !(conn_tOracleInput_10 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_10.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_10 = null;
                if (isConnectionWrapped_tOracleInput_10) {
					unwrappedOraConn_tOracleInput_10 = conn_tOracleInput_10.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_10 != null) {
                        isTimeZoneNull_tOracleInput_10 = (unwrappedOraConn_tOracleInput_10.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_10 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_10).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_10) {
					java.sql.Statement stmtGetTZ_tOracleInput_10 = conn_tOracleInput_10.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_10 = stmtGetTZ_tOracleInput_10.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_10 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_10.next()) {
						sessionTimezone_tOracleInput_10 = rsGetTZ_tOracleInput_10.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_10 && unwrappedOraConn_tOracleInput_10 != null) {
                        unwrappedOraConn_tOracleInput_10.setSessionTimeZone(sessionTimezone_tOracleInput_10);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_10).setSessionTimeZone(sessionTimezone_tOracleInput_10);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_10 = conn_tOracleInput_10.createStatement();

		    String dbquery_tOracleInput_10 = "SELECT\nCA.TDOCUMENTOS,\nCA.DOCUMENTO,\n'NO ENCOTRADO' AS ERROR\nFROM AFI_CARCHIVOS CA\nWHERE NOT EXISTS(SELECT * FROM "
+"VM_PERSONAS VP \n                WHERE VP.TIPO_DOCUMENTO = CA.TDOCUMENTOS\n                      AND VP.DOCUMENTO = CA.D"
+"OCUMENTO) AND CA.ARCHIVOS_ID = " + context.infoIdArchivo;
		    

		    globalMap.put("tOracleInput_10_QUERY",dbquery_tOracleInput_10);

		    java.sql.ResultSet rs_tOracleInput_10 = null;

		    try {
		    	rs_tOracleInput_10 = stmt_tOracleInput_10.executeQuery(dbquery_tOracleInput_10);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_10 = rs_tOracleInput_10.getMetaData();
		    	int colQtyInRs_tOracleInput_10 = rsmd_tOracleInput_10.getColumnCount();

		    String tmpContent_tOracleInput_10 = null;
		    
		    
		    while (rs_tOracleInput_10.next()) {
		        nb_line_tOracleInput_10++;
		        
							if(colQtyInRs_tOracleInput_10 < 1) {
								row13.TDOCUMENTOS = null;
							} else {
	                         		
        	row13.TDOCUMENTOS = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 2) {
								row13.DOCUMENTO = null;
							} else {
	                         		
        	row13.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_10 < 3) {
								row13.ERROR = null;
							} else {
	                         		
        	row13.ERROR = routines.system.JDBCUtil.getString(rs_tOracleInput_10, 3, false);
		                    }
					




 



/**
 * [tOracleInput_10 begin ] stop
 */
	
	/**
	 * [tOracleInput_10 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 


	tos_count_tOracleInput_10++;

/**
 * [tOracleInput_10 main ] stop
 */
	
	/**
	 * [tOracleInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 



/**
 * [tOracleInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_9 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_9 = new StringBuilder();
                            if(row13.TDOCUMENTOS != null) {
                        sb_tFileOutputDelimited_9.append(
                            row13.TDOCUMENTOS
                        );
                            }
                            sb_tFileOutputDelimited_9.append(OUT_DELIM_tFileOutputDelimited_9);
                            if(row13.DOCUMENTO != null) {
                        sb_tFileOutputDelimited_9.append(
                            row13.DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_9.append(OUT_DELIM_tFileOutputDelimited_9);
                            if(row13.ERROR != null) {
                        sb_tFileOutputDelimited_9.append(
                            row13.ERROR
                        );
                            }
                    sb_tFileOutputDelimited_9.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_9);


                    nb_line_tFileOutputDelimited_9++;
                    resourceMap.put("nb_line_tFileOutputDelimited_9", nb_line_tFileOutputDelimited_9);

                        outtFileOutputDelimited_9.write(sb_tFileOutputDelimited_9.toString());




 


	tos_count_tFileOutputDelimited_9++;

/**
 * [tFileOutputDelimited_9 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_9";
	
	

 



/**
 * [tFileOutputDelimited_9 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_9";
	
	

 



/**
 * [tFileOutputDelimited_9 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 



/**
 * [tOracleInput_10 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_10 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

}
}finally{
	if (rs_tOracleInput_10 != null) {
		rs_tOracleInput_10.close();
	}
	if (stmt_tOracleInput_10 != null) {
		stmt_tOracleInput_10.close();
	}
}

globalMap.put("tOracleInput_10_NB_LINE",nb_line_tOracleInput_10);
 

ok_Hash.put("tOracleInput_10", true);
end_Hash.put("tOracleInput_10", System.currentTimeMillis());




/**
 * [tOracleInput_10 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_9 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_9";
	
	



		
			
					if(outtFileOutputDelimited_9!=null) {
						outtFileOutputDelimited_9.flush();
						outtFileOutputDelimited_9.close();
					}
				
				globalMap.put("tFileOutputDelimited_9_NB_LINE",nb_line_tFileOutputDelimited_9);
				globalMap.put("tFileOutputDelimited_9_FILE_NAME",fileName_tFileOutputDelimited_9);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_9", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_9", true);
end_Hash.put("tFileOutputDelimited_9", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk7", 0, "ok");
				}
				tFixedFlowInput_1Process(globalMap);



/**
 * [tFileOutputDelimited_9 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_10 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_10";
	
	

 



/**
 * [tOracleInput_10 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_9 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_9";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_9") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_9 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_9");
						if(outtFileOutputDelimited_9!=null) {
							outtFileOutputDelimited_9.flush();
							outtFileOutputDelimited_9.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_9 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_10_SUBPROCESS_STATE", 1);
	}
	


public static class row19Struct implements routines.system.IPersistableRow<row19Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public Integer ID_BDUA;

				public Integer getID_BDUA () {
					return this.ID_BDUA;
				}

				public Boolean ID_BDUAIsNullable(){
				    return true;
				}
				public Boolean ID_BDUAIsKey(){
				    return false;
				}
				public Integer ID_BDUALength(){
				    return null;
				}
				public Integer ID_BDUAPrecision(){
				    return null;
				}
				public String ID_BDUADefault(){
				
					return "";
				
				}
				public String ID_BDUAComment(){
				
				    return "";
				
				}
				public String ID_BDUAPattern(){
				
					return "";
				
				}
				public String ID_BDUAOriginalDbColumnName(){
				
					return "ID_BDUA";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return null;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return null;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return null;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return null;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return null;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return null;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return null;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return null;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String FECHA_NACIMIENTO;

				public String getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return null;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return null;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				
			    public String SIGLA_SEXO;

				public String getSIGLA_SEXO () {
					return this.SIGLA_SEXO;
				}

				public Boolean SIGLA_SEXOIsNullable(){
				    return true;
				}
				public Boolean SIGLA_SEXOIsKey(){
				    return false;
				}
				public Integer SIGLA_SEXOLength(){
				    return null;
				}
				public Integer SIGLA_SEXOPrecision(){
				    return null;
				}
				public String SIGLA_SEXODefault(){
				
					return null;
				
				}
				public String SIGLA_SEXOComment(){
				
				    return "";
				
				}
				public String SIGLA_SEXOPattern(){
				
					return "";
				
				}
				public String SIGLA_SEXOOriginalDbColumnName(){
				
					return "SIGLA_SEXO";
				
				}

				
			    public String FECHA_REGISTRO;

				public String getFECHA_REGISTRO () {
					return this.FECHA_REGISTRO;
				}

				public Boolean FECHA_REGISTROIsNullable(){
				    return true;
				}
				public Boolean FECHA_REGISTROIsKey(){
				    return false;
				}
				public Integer FECHA_REGISTROLength(){
				    return null;
				}
				public Integer FECHA_REGISTROPrecision(){
				    return null;
				}
				public String FECHA_REGISTRODefault(){
				
					return null;
				
				}
				public String FECHA_REGISTROComment(){
				
				    return "";
				
				}
				public String FECHA_REGISTROPattern(){
				
					return "";
				
				}
				public String FECHA_REGISTROOriginalDbColumnName(){
				
					return "FECHA_REGISTRO";
				
				}

				
			    public String FECHA_INGRESO;

				public String getFECHA_INGRESO () {
					return this.FECHA_INGRESO;
				}

				public Boolean FECHA_INGRESOIsNullable(){
				    return true;
				}
				public Boolean FECHA_INGRESOIsKey(){
				    return false;
				}
				public Integer FECHA_INGRESOLength(){
				    return null;
				}
				public Integer FECHA_INGRESOPrecision(){
				    return null;
				}
				public String FECHA_INGRESODefault(){
				
					return null;
				
				}
				public String FECHA_INGRESOComment(){
				
				    return "";
				
				}
				public String FECHA_INGRESOPattern(){
				
					return "";
				
				}
				public String FECHA_INGRESOOriginalDbColumnName(){
				
					return "FECHA_INGRESO";
				
				}

				
			    public String FECHA_ACTIVACION;

				public String getFECHA_ACTIVACION () {
					return this.FECHA_ACTIVACION;
				}

				public Boolean FECHA_ACTIVACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_ACTIVACIONIsKey(){
				    return false;
				}
				public Integer FECHA_ACTIVACIONLength(){
				    return null;
				}
				public Integer FECHA_ACTIVACIONPrecision(){
				    return null;
				}
				public String FECHA_ACTIVACIONDefault(){
				
					return null;
				
				}
				public String FECHA_ACTIVACIONComment(){
				
				    return "";
				
				}
				public String FECHA_ACTIVACIONPattern(){
				
					return "";
				
				}
				public String FECHA_ACTIVACIONOriginalDbColumnName(){
				
					return "FECHA_ACTIVACION";
				
				}

				
			    public String FECHA_INACTIVACION;

				public String getFECHA_INACTIVACION () {
					return this.FECHA_INACTIVACION;
				}

				public Boolean FECHA_INACTIVACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_INACTIVACIONIsKey(){
				    return false;
				}
				public Integer FECHA_INACTIVACIONLength(){
				    return null;
				}
				public Integer FECHA_INACTIVACIONPrecision(){
				    return null;
				}
				public String FECHA_INACTIVACIONDefault(){
				
					return null;
				
				}
				public String FECHA_INACTIVACIONComment(){
				
				    return "";
				
				}
				public String FECHA_INACTIVACIONPattern(){
				
					return "";
				
				}
				public String FECHA_INACTIVACIONOriginalDbColumnName(){
				
					return "FECHA_INACTIVACION";
				
				}

				
			    public String ESTADO_INICIAL;

				public String getESTADO_INICIAL () {
					return this.ESTADO_INICIAL;
				}

				public Boolean ESTADO_INICIALIsNullable(){
				    return true;
				}
				public Boolean ESTADO_INICIALIsKey(){
				    return false;
				}
				public Integer ESTADO_INICIALLength(){
				    return null;
				}
				public Integer ESTADO_INICIALPrecision(){
				    return null;
				}
				public String ESTADO_INICIALDefault(){
				
					return null;
				
				}
				public String ESTADO_INICIALComment(){
				
				    return "";
				
				}
				public String ESTADO_INICIALPattern(){
				
					return "";
				
				}
				public String ESTADO_INICIALOriginalDbColumnName(){
				
					return "ESTADO_INICIAL";
				
				}

				
			    public String ESTADO_FINAL;

				public String getESTADO_FINAL () {
					return this.ESTADO_FINAL;
				}

				public Boolean ESTADO_FINALIsNullable(){
				    return true;
				}
				public Boolean ESTADO_FINALIsKey(){
				    return false;
				}
				public Integer ESTADO_FINALLength(){
				    return null;
				}
				public Integer ESTADO_FINALPrecision(){
				    return null;
				}
				public String ESTADO_FINALDefault(){
				
					return null;
				
				}
				public String ESTADO_FINALComment(){
				
				    return "";
				
				}
				public String ESTADO_FINALPattern(){
				
					return "";
				
				}
				public String ESTADO_FINALOriginalDbColumnName(){
				
					return "ESTADO_FINAL";
				
				}

				
			    public String ESTADO_AFILIACION;

				public String getESTADO_AFILIACION () {
					return this.ESTADO_AFILIACION;
				}

				public Boolean ESTADO_AFILIACIONIsNullable(){
				    return true;
				}
				public Boolean ESTADO_AFILIACIONIsKey(){
				    return false;
				}
				public Integer ESTADO_AFILIACIONLength(){
				    return null;
				}
				public Integer ESTADO_AFILIACIONPrecision(){
				    return null;
				}
				public String ESTADO_AFILIACIONDefault(){
				
					return null;
				
				}
				public String ESTADO_AFILIACIONComment(){
				
				    return "";
				
				}
				public String ESTADO_AFILIACIONPattern(){
				
					return "";
				
				}
				public String ESTADO_AFILIACIONOriginalDbColumnName(){
				
					return "ESTADO_AFILIACION";
				
				}

				
			    public String PLANAFILIACIONES;

				public String getPLANAFILIACIONES () {
					return this.PLANAFILIACIONES;
				}

				public Boolean PLANAFILIACIONESIsNullable(){
				    return true;
				}
				public Boolean PLANAFILIACIONESIsKey(){
				    return false;
				}
				public Integer PLANAFILIACIONESLength(){
				    return null;
				}
				public Integer PLANAFILIACIONESPrecision(){
				    return null;
				}
				public String PLANAFILIACIONESDefault(){
				
					return null;
				
				}
				public String PLANAFILIACIONESComment(){
				
				    return "";
				
				}
				public String PLANAFILIACIONESPattern(){
				
					return "";
				
				}
				public String PLANAFILIACIONESOriginalDbColumnName(){
				
					return "PLANAFILIACIONES";
				
				}

				
			    public String FECHA_DEFUNCION;

				public String getFECHA_DEFUNCION () {
					return this.FECHA_DEFUNCION;
				}

				public Boolean FECHA_DEFUNCIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_DEFUNCIONIsKey(){
				    return false;
				}
				public Integer FECHA_DEFUNCIONLength(){
				    return null;
				}
				public Integer FECHA_DEFUNCIONPrecision(){
				    return null;
				}
				public String FECHA_DEFUNCIONDefault(){
				
					return null;
				
				}
				public String FECHA_DEFUNCIONComment(){
				
				    return "";
				
				}
				public String FECHA_DEFUNCIONPattern(){
				
					return "";
				
				}
				public String FECHA_DEFUNCIONOriginalDbColumnName(){
				
					return "FECHA_DEFUNCION";
				
				}

				
			    public String USUARIO_MODIFICADOR;

				public String getUSUARIO_MODIFICADOR () {
					return this.USUARIO_MODIFICADOR;
				}

				public Boolean USUARIO_MODIFICADORIsNullable(){
				    return true;
				}
				public Boolean USUARIO_MODIFICADORIsKey(){
				    return false;
				}
				public Integer USUARIO_MODIFICADORLength(){
				    return null;
				}
				public Integer USUARIO_MODIFICADORPrecision(){
				    return null;
				}
				public String USUARIO_MODIFICADORDefault(){
				
					return null;
				
				}
				public String USUARIO_MODIFICADORComment(){
				
				    return "";
				
				}
				public String USUARIO_MODIFICADORPattern(){
				
					return "";
				
				}
				public String USUARIO_MODIFICADOROriginalDbColumnName(){
				
					return "USUARIO_MODIFICADOR";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
						this.ID_BDUA = readInteger(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.SIGLA_SEXO = readString(dis);
					
					this.FECHA_REGISTRO = readString(dis);
					
					this.FECHA_INGRESO = readString(dis);
					
					this.FECHA_ACTIVACION = readString(dis);
					
					this.FECHA_INACTIVACION = readString(dis);
					
					this.ESTADO_INICIAL = readString(dis);
					
					this.ESTADO_FINAL = readString(dis);
					
					this.ESTADO_AFILIACION = readString(dis);
					
					this.PLANAFILIACIONES = readString(dis);
					
					this.FECHA_DEFUNCION = readString(dis);
					
					this.USUARIO_MODIFICADOR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
						this.ID_BDUA = readInteger(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.SIGLA_SEXO = readString(dis);
					
					this.FECHA_REGISTRO = readString(dis);
					
					this.FECHA_INGRESO = readString(dis);
					
					this.FECHA_ACTIVACION = readString(dis);
					
					this.FECHA_INACTIVACION = readString(dis);
					
					this.ESTADO_INICIAL = readString(dis);
					
					this.ESTADO_FINAL = readString(dis);
					
					this.ESTADO_AFILIACION = readString(dis);
					
					this.PLANAFILIACIONES = readString(dis);
					
					this.FECHA_DEFUNCION = readString(dis);
					
					this.USUARIO_MODIFICADOR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_BDUA,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.SIGLA_SEXO,dos);
					
					// String
				
						writeString(this.FECHA_REGISTRO,dos);
					
					// String
				
						writeString(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVACION,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVACION,dos);
					
					// String
				
						writeString(this.ESTADO_INICIAL,dos);
					
					// String
				
						writeString(this.ESTADO_FINAL,dos);
					
					// String
				
						writeString(this.ESTADO_AFILIACION,dos);
					
					// String
				
						writeString(this.PLANAFILIACIONES,dos);
					
					// String
				
						writeString(this.FECHA_DEFUNCION,dos);
					
					// String
				
						writeString(this.USUARIO_MODIFICADOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_BDUA,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.SIGLA_SEXO,dos);
					
					// String
				
						writeString(this.FECHA_REGISTRO,dos);
					
					// String
				
						writeString(this.FECHA_INGRESO,dos);
					
					// String
				
						writeString(this.FECHA_ACTIVACION,dos);
					
					// String
				
						writeString(this.FECHA_INACTIVACION,dos);
					
					// String
				
						writeString(this.ESTADO_INICIAL,dos);
					
					// String
				
						writeString(this.ESTADO_FINAL,dos);
					
					// String
				
						writeString(this.ESTADO_AFILIACION,dos);
					
					// String
				
						writeString(this.PLANAFILIACIONES,dos);
					
					// String
				
						writeString(this.FECHA_DEFUNCION,dos);
					
					// String
				
						writeString(this.USUARIO_MODIFICADOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_BDUA="+String.valueOf(ID_BDUA));
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",FECHA_NACIMIENTO="+FECHA_NACIMIENTO);
		sb.append(",SIGLA_SEXO="+SIGLA_SEXO);
		sb.append(",FECHA_REGISTRO="+FECHA_REGISTRO);
		sb.append(",FECHA_INGRESO="+FECHA_INGRESO);
		sb.append(",FECHA_ACTIVACION="+FECHA_ACTIVACION);
		sb.append(",FECHA_INACTIVACION="+FECHA_INACTIVACION);
		sb.append(",ESTADO_INICIAL="+ESTADO_INICIAL);
		sb.append(",ESTADO_FINAL="+ESTADO_FINAL);
		sb.append(",ESTADO_AFILIACION="+ESTADO_AFILIACION);
		sb.append(",PLANAFILIACIONES="+PLANAFILIACIONES);
		sb.append(",FECHA_DEFUNCION="+FECHA_DEFUNCION);
		sb.append(",USUARIO_MODIFICADOR="+USUARIO_MODIFICADOR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_15Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_15_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row19Struct row19 = new row19Struct();




	
	/**
	 * [tFileOutputDelimited_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_13", false);
		start_Hash.put("tFileOutputDelimited_13", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row19");
					}
				
		int tos_count_tFileOutputDelimited_13 = 0;
		

String fileName_tFileOutputDelimited_13 = "";
    fileName_tFileOutputDelimited_13 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_13 = null;
    String extension_tFileOutputDelimited_13 = null;
    String directory_tFileOutputDelimited_13 = null;
    if((fileName_tFileOutputDelimited_13.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_13.lastIndexOf(".") < fileName_tFileOutputDelimited_13.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_13 = fileName_tFileOutputDelimited_13;
            extension_tFileOutputDelimited_13 = "";
        } else {
            fullName_tFileOutputDelimited_13 = fileName_tFileOutputDelimited_13.substring(0, fileName_tFileOutputDelimited_13.lastIndexOf("."));
            extension_tFileOutputDelimited_13 = fileName_tFileOutputDelimited_13.substring(fileName_tFileOutputDelimited_13.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_13 = fileName_tFileOutputDelimited_13.substring(0, fileName_tFileOutputDelimited_13.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_13.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_13 = fileName_tFileOutputDelimited_13.substring(0, fileName_tFileOutputDelimited_13.lastIndexOf("."));
            extension_tFileOutputDelimited_13 = fileName_tFileOutputDelimited_13.substring(fileName_tFileOutputDelimited_13.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_13 = fileName_tFileOutputDelimited_13;
            extension_tFileOutputDelimited_13 = "";
        }
        directory_tFileOutputDelimited_13 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_13 = true;
    java.io.File filetFileOutputDelimited_13 = new java.io.File(fileName_tFileOutputDelimited_13);
    globalMap.put("tFileOutputDelimited_13_FILE_NAME",fileName_tFileOutputDelimited_13);
        if(filetFileOutputDelimited_13.exists()){
            isFileGenerated_tFileOutputDelimited_13 = false;
        }
            int nb_line_tFileOutputDelimited_13 = 0;
            int splitedFileNo_tFileOutputDelimited_13 = 0;
            int currentRow_tFileOutputDelimited_13 = 0;

            final String OUT_DELIM_tFileOutputDelimited_13 = /** Start field tFileOutputDelimited_13:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_13:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_13 = /** Start field tFileOutputDelimited_13:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_13:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_13 != null && directory_tFileOutputDelimited_13.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_13 = new java.io.File(directory_tFileOutputDelimited_13);
                        if(!dir_tFileOutputDelimited_13.exists()) {
                            dir_tFileOutputDelimited_13.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_13 = null;

                        outtFileOutputDelimited_13 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_13, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_13", outtFileOutputDelimited_13);
                                    if(filetFileOutputDelimited_13.length()==0){
                                        outtFileOutputDelimited_13.write("ID_BDUA");
                                            outtFileOutputDelimited_13.write(OUT_DELIM_tFileOutputDelimited_13);
                                        outtFileOutputDelimited_13.write("TIPO_DOCUMENTO");
                                            outtFileOutputDelimited_13.write(OUT_DELIM_tFileOutputDelimited_13);
                                        outtFileOutputDelimited_13.write("DOCUMENTO");
                                            outtFileOutputDelimited_13.write(OUT_DELIM_tFileOutputDelimited_13);
                                        outtFileOutputDelimited_13.write("PRIMER_APELLIDO");
                                            outtFileOutputDelimited_13.write(OUT_DELIM_tFileOutputDelimited_13);
                                        outtFileOutputDelimited_13.write("SEGUNDO_APELLIDO");
                                            outtFileOutputDelimited_13.write(OUT_DELIM_tFileOutputDelimited_13);
                                        outtFileOutputDelimited_13.write("PRIMER_NOMBRE");
                                            outtFileOutputDelimited_13.write(OUT_DELIM_tFileOutputDelimited_13);
                                        outtFileOutputDelimited_13.write("SEGUNDO_NOMBRE");
                                            outtFileOutputDelimited_13.write(OUT_DELIM_tFileOutputDelimited_13);
                                        outtFileOutputDelimited_13.write("FECHA_NACIMIENTO");
                                            outtFileOutputDelimited_13.write(OUT_DELIM_tFileOutputDelimited_13);
                                        outtFileOutputDelimited_13.write("SIGLA_SEXO");
                                            outtFileOutputDelimited_13.write(OUT_DELIM_tFileOutputDelimited_13);
                                        outtFileOutputDelimited_13.write("FECHA_REGISTRO");
                                            outtFileOutputDelimited_13.write(OUT_DELIM_tFileOutputDelimited_13);
                                        outtFileOutputDelimited_13.write("FECHA_INGRESO");
                                            outtFileOutputDelimited_13.write(OUT_DELIM_tFileOutputDelimited_13);
                                        outtFileOutputDelimited_13.write("FECHA_ACTIVACION");
                                            outtFileOutputDelimited_13.write(OUT_DELIM_tFileOutputDelimited_13);
                                        outtFileOutputDelimited_13.write("FECHA_INACTIVACION");
                                            outtFileOutputDelimited_13.write(OUT_DELIM_tFileOutputDelimited_13);
                                        outtFileOutputDelimited_13.write("ESTADO_INICIAL");
                                            outtFileOutputDelimited_13.write(OUT_DELIM_tFileOutputDelimited_13);
                                        outtFileOutputDelimited_13.write("ESTADO_FINAL");
                                            outtFileOutputDelimited_13.write(OUT_DELIM_tFileOutputDelimited_13);
                                        outtFileOutputDelimited_13.write("ESTADO_AFILIACION");
                                            outtFileOutputDelimited_13.write(OUT_DELIM_tFileOutputDelimited_13);
                                        outtFileOutputDelimited_13.write("PLANAFILIACIONES");
                                            outtFileOutputDelimited_13.write(OUT_DELIM_tFileOutputDelimited_13);
                                        outtFileOutputDelimited_13.write("FECHA_DEFUNCION");
                                            outtFileOutputDelimited_13.write(OUT_DELIM_tFileOutputDelimited_13);
                                        outtFileOutputDelimited_13.write("USUARIO_MODIFICADOR");
                                        outtFileOutputDelimited_13.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_13);
                                        outtFileOutputDelimited_13.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_13", nb_line_tFileOutputDelimited_13);

 



/**
 * [tFileOutputDelimited_13 begin ] stop
 */



	
	/**
	 * [tOracleInput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_15", false);
		start_Hash.put("tOracleInput_15", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_15";
	
	
		int tos_count_tOracleInput_15 = 0;
		
	


	
		    int nb_line_tOracleInput_15 = 0;
		    java.sql.Connection conn_tOracleInput_15 = null;
				conn_tOracleInput_15 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_15 = false;
				boolean isConnectionWrapped_tOracleInput_15 = !(conn_tOracleInput_15 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_15.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_15 = null;
                if (isConnectionWrapped_tOracleInput_15) {
					unwrappedOraConn_tOracleInput_15 = conn_tOracleInput_15.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_15 != null) {
                        isTimeZoneNull_tOracleInput_15 = (unwrappedOraConn_tOracleInput_15.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_15 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_15).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_15) {
					java.sql.Statement stmtGetTZ_tOracleInput_15 = conn_tOracleInput_15.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_15 = stmtGetTZ_tOracleInput_15.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_15 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_15.next()) {
						sessionTimezone_tOracleInput_15 = rsGetTZ_tOracleInput_15.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_15 && unwrappedOraConn_tOracleInput_15 != null) {
                        unwrappedOraConn_tOracleInput_15.setSessionTimeZone(sessionTimezone_tOracleInput_15);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_15).setSessionTimeZone(sessionTimezone_tOracleInput_15);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_15 = conn_tOracleInput_15.createStatement();

		    String dbquery_tOracleInput_15 = "SELECT ID_BDUA,\nTIPO_DOCUMENTO,\nDOCUMENTO,\nPRIMER_APELLIDO,\nSEGUNDO_APELLIDO,\nPRIMER_NOMBRE,\nSEGUNDO_NOMBRE,\nFEC"
+"HA_NACIMIENTO,\nSIGLA_SEXO,\nFECHA_REGISTRO,\nFECHA_INGRESO,\nFECHA_ACTIVACION, \nFECHA_INACTIVACION,\nESTADO_INICIAL,\n"
+"ESTADO_FINAL,\nESTADO_AFILIACION, \nPLANAFILIACIONES,\nFECHA_DEFUNCION,\nUSUARIO_MODIFICADOR\nFROM (SELECT  \nVM.ID_BDUA"
+",\nreplace(replace(VM.TIPO_DOCUMENTO,chr(10),''),chr(13),'') AS TIPO_DOCUMENTO,\nreplace(replace(VM.DOCUMENTO,chr(10),''"
+"),chr(13),'') AS DOCUMENTO,\nreplace(replace(VM.PRIMER_APELLIDO,chr(10),''),chr(13),'') AS PRIMER_APELLIDO,\nreplace(rep"
+"lace(VM.SEGUNDO_APELLIDO,chr(10),''),chr(13),'') AS SEGUNDO_APELLIDO,\nreplace(replace(VM.PRIMER_NOMBRE,chr(10),''),chr("
+"13),'') AS PRIMER_NOMBRE,\nreplace(replace(VM.SEGUNDO_NOMBRE,chr(10),''),chr(13),'') AS SEGUNDO_NOMBRE,\nTO_CHAR(VM.FECH"
+"A_NACIMIENTO,'DD/MM/YYYY') AS FECHA_NACIMIENTO,\nreplace(replace(VM.SIGLA_SEXO,chr(10),''),chr(13),'') AS SIGLA_SEXO,\nT"
+"O_CHAR(VM.FECHA_INGRESO,'DD/MM/YYYY') AS FECHA_REGISTRO,\nTO_CHAR(VM.FREGISTRO,'DD/MM/YYYY') AS FECHA_INGRESO,\nDECODE(A"
+"E2.SIGLA,'AC',DECODE(AR.CODIGO,'S05',TO_CHAR(VM.FREGISTRO,'DD/MM/YYYY'),TO_CHAR(AP.FECHA_REGISTRO,'DD/MM/YYYY')) ,'PR',T"
+"O_CHAR(AP.FECHA_REGISTRO,'DD/MM/YYYY')) AS FECHA_ACTIVACION, \nDECODE(AE2.SIGLA,'IN',TO_CHAR(AP.FECHA_REGISTRO,'DD/MM/YY"
+"YY')) AS FECHA_INACTIVACION,\nae.NOMBRE AS ESTADO_INICIAL,\nae2.NOMBRE AS ESTADO_FINAL,\nVM.ESTAFILIACION AS ESTADO_AFIL"
+"IACION, \nreplace(replace(VM.PLANAFILIACIONES,chr(10),''),chr(13),'') AS PLANAFILIACIONES,\nTO_CHAR(VM.FECHA_DEFUNCION,'"
+"DD/MM/YYYY') AS FECHA_DEFUNCION,\nGU.USUARIO AS USUARIO_MODIFICADOR,\nap.FECHA_REGISTRO AS FECHA_PROCESO\nFROM  VM_PERSO"
+"NAS VM\nINNER JOIN AFI_CARCHIVOS CA ON CA.DOCUMENTO = VM.DOCUMENTO AND  TRIM(UPPER(CA.TDOCUMENTOS)) = TRIM(UPPER(VM.TIPO"
+"_DOCUMENTO))\nINNER JOIN AFI_HAFILIADOS ah ON ah.AFILIADOS_ID = VM.GA\nINNER JOIN AFI_RNOVEDADES ar ON AR.ID = AH.RNOVED"
+"ADES_ID \nINNER JOIN AFI_PROCESOS ap ON AP.ID = AH.PROCESOS_ID \nINNER JOIN GEN_USUARIOS gu ON GU.ID = AP.USUARIOS_ID \n"
+"INNER JOIN AFI_ESTADOS ae ON AE.ID = DECODE(AH.VANTERIOR,'0',(SELECT AE3.ID FROM AFI_ESTADOS ae3 WHERE AE3.SIGLA = 'IX' "
+"AND AE3.ESTREGISTRO_ID = 1),TO_NUMBER(AH.VANTERIOR)) \nINNER JOIN AFI_ESTADOS ae2 ON AE2.ID = TO_NUMBER(AH.VACTUAL)\nWHE"
+"RE \nVM.AFILIADO_ESTREGISTRO_ID = 1\nAND AP.ESTREGISTRO_ID = 1\nAND GU.ESTREGISTRO_ID = 1\nAND AH.ESTREGISTRO_ID = 1\nAN"
+"D AE.ESTREGISTRO_ID = 1\nAND AE2.ESTREGISTRO_ID = 1\nAND AR.ESTREGISTRO_ID = 1\nAND AH.VACTUAL IS NOT NULL \nAND AH.VANT"
+"ERIOR IS NOT NULL  \nAND (AH.CAMPO = 'ESTADOS_ID' OR AR.CODIGO = 'S05')\nAND CA.ARCHIVOS_ID = " + context.infoIdArchivo +") ORDER BY DOCUMENTO, FECHA_PROCESO DESC";
		    

		    globalMap.put("tOracleInput_15_QUERY",dbquery_tOracleInput_15);

		    java.sql.ResultSet rs_tOracleInput_15 = null;

		    try {
		    	rs_tOracleInput_15 = stmt_tOracleInput_15.executeQuery(dbquery_tOracleInput_15);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_15 = rs_tOracleInput_15.getMetaData();
		    	int colQtyInRs_tOracleInput_15 = rsmd_tOracleInput_15.getColumnCount();

		    String tmpContent_tOracleInput_15 = null;
		    
		    
		    while (rs_tOracleInput_15.next()) {
		        nb_line_tOracleInput_15++;
		        
							if(colQtyInRs_tOracleInput_15 < 1) {
								row19.ID_BDUA = null;
							} else {
		                          
					if(rs_tOracleInput_15.getObject(1) != null) {
						row19.ID_BDUA = rs_tOracleInput_15.getInt(1);
					} else {
				
						row19.ID_BDUA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_15 < 2) {
								row19.TIPO_DOCUMENTO = null;
							} else {
	                         		
        	row19.TIPO_DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 3) {
								row19.DOCUMENTO = null;
							} else {
	                         		
        	row19.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 4) {
								row19.PRIMER_APELLIDO = null;
							} else {
	                         		
        	row19.PRIMER_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 5) {
								row19.SEGUNDO_APELLIDO = null;
							} else {
	                         		
        	row19.SEGUNDO_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 6) {
								row19.PRIMER_NOMBRE = null;
							} else {
	                         		
        	row19.PRIMER_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 7) {
								row19.SEGUNDO_NOMBRE = null;
							} else {
	                         		
        	row19.SEGUNDO_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 8) {
								row19.FECHA_NACIMIENTO = null;
							} else {
	                         		
        	row19.FECHA_NACIMIENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 8, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 9) {
								row19.SIGLA_SEXO = null;
							} else {
	                         		
        	row19.SIGLA_SEXO = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 10) {
								row19.FECHA_REGISTRO = null;
							} else {
	                         		
        	row19.FECHA_REGISTRO = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 11) {
								row19.FECHA_INGRESO = null;
							} else {
	                         		
        	row19.FECHA_INGRESO = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 11, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 12) {
								row19.FECHA_ACTIVACION = null;
							} else {
	                         		
        	row19.FECHA_ACTIVACION = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 13) {
								row19.FECHA_INACTIVACION = null;
							} else {
	                         		
        	row19.FECHA_INACTIVACION = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 13, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 14) {
								row19.ESTADO_INICIAL = null;
							} else {
	                         		
        	row19.ESTADO_INICIAL = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 14, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 15) {
								row19.ESTADO_FINAL = null;
							} else {
	                         		
        	row19.ESTADO_FINAL = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 15, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 16) {
								row19.ESTADO_AFILIACION = null;
							} else {
	                         		
        	row19.ESTADO_AFILIACION = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 16, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 17) {
								row19.PLANAFILIACIONES = null;
							} else {
	                         		
        	row19.PLANAFILIACIONES = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 17, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 18) {
								row19.FECHA_DEFUNCION = null;
							} else {
	                         		
        	row19.FECHA_DEFUNCION = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 18, false);
		                    }
							if(colQtyInRs_tOracleInput_15 < 19) {
								row19.USUARIO_MODIFICADOR = null;
							} else {
	                         		
        	row19.USUARIO_MODIFICADOR = routines.system.JDBCUtil.getString(rs_tOracleInput_15, 19, false);
		                    }
					




 



/**
 * [tOracleInput_15 begin ] stop
 */
	
	/**
	 * [tOracleInput_15 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_15";
	
	

 


	tos_count_tOracleInput_15++;

/**
 * [tOracleInput_15 main ] stop
 */
	
	/**
	 * [tOracleInput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_15";
	
	

 



/**
 * [tOracleInput_15 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_13 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row19"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_13 = new StringBuilder();
                            if(row19.ID_BDUA != null) {
                        sb_tFileOutputDelimited_13.append(
                            row19.ID_BDUA
                        );
                            }
                            sb_tFileOutputDelimited_13.append(OUT_DELIM_tFileOutputDelimited_13);
                            if(row19.TIPO_DOCUMENTO != null) {
                        sb_tFileOutputDelimited_13.append(
                            row19.TIPO_DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_13.append(OUT_DELIM_tFileOutputDelimited_13);
                            if(row19.DOCUMENTO != null) {
                        sb_tFileOutputDelimited_13.append(
                            row19.DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_13.append(OUT_DELIM_tFileOutputDelimited_13);
                            if(row19.PRIMER_APELLIDO != null) {
                        sb_tFileOutputDelimited_13.append(
                            row19.PRIMER_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_13.append(OUT_DELIM_tFileOutputDelimited_13);
                            if(row19.SEGUNDO_APELLIDO != null) {
                        sb_tFileOutputDelimited_13.append(
                            row19.SEGUNDO_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_13.append(OUT_DELIM_tFileOutputDelimited_13);
                            if(row19.PRIMER_NOMBRE != null) {
                        sb_tFileOutputDelimited_13.append(
                            row19.PRIMER_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_13.append(OUT_DELIM_tFileOutputDelimited_13);
                            if(row19.SEGUNDO_NOMBRE != null) {
                        sb_tFileOutputDelimited_13.append(
                            row19.SEGUNDO_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_13.append(OUT_DELIM_tFileOutputDelimited_13);
                            if(row19.FECHA_NACIMIENTO != null) {
                        sb_tFileOutputDelimited_13.append(
                            row19.FECHA_NACIMIENTO
                        );
                            }
                            sb_tFileOutputDelimited_13.append(OUT_DELIM_tFileOutputDelimited_13);
                            if(row19.SIGLA_SEXO != null) {
                        sb_tFileOutputDelimited_13.append(
                            row19.SIGLA_SEXO
                        );
                            }
                            sb_tFileOutputDelimited_13.append(OUT_DELIM_tFileOutputDelimited_13);
                            if(row19.FECHA_REGISTRO != null) {
                        sb_tFileOutputDelimited_13.append(
                            row19.FECHA_REGISTRO
                        );
                            }
                            sb_tFileOutputDelimited_13.append(OUT_DELIM_tFileOutputDelimited_13);
                            if(row19.FECHA_INGRESO != null) {
                        sb_tFileOutputDelimited_13.append(
                            row19.FECHA_INGRESO
                        );
                            }
                            sb_tFileOutputDelimited_13.append(OUT_DELIM_tFileOutputDelimited_13);
                            if(row19.FECHA_ACTIVACION != null) {
                        sb_tFileOutputDelimited_13.append(
                            row19.FECHA_ACTIVACION
                        );
                            }
                            sb_tFileOutputDelimited_13.append(OUT_DELIM_tFileOutputDelimited_13);
                            if(row19.FECHA_INACTIVACION != null) {
                        sb_tFileOutputDelimited_13.append(
                            row19.FECHA_INACTIVACION
                        );
                            }
                            sb_tFileOutputDelimited_13.append(OUT_DELIM_tFileOutputDelimited_13);
                            if(row19.ESTADO_INICIAL != null) {
                        sb_tFileOutputDelimited_13.append(
                            row19.ESTADO_INICIAL
                        );
                            }
                            sb_tFileOutputDelimited_13.append(OUT_DELIM_tFileOutputDelimited_13);
                            if(row19.ESTADO_FINAL != null) {
                        sb_tFileOutputDelimited_13.append(
                            row19.ESTADO_FINAL
                        );
                            }
                            sb_tFileOutputDelimited_13.append(OUT_DELIM_tFileOutputDelimited_13);
                            if(row19.ESTADO_AFILIACION != null) {
                        sb_tFileOutputDelimited_13.append(
                            row19.ESTADO_AFILIACION
                        );
                            }
                            sb_tFileOutputDelimited_13.append(OUT_DELIM_tFileOutputDelimited_13);
                            if(row19.PLANAFILIACIONES != null) {
                        sb_tFileOutputDelimited_13.append(
                            row19.PLANAFILIACIONES
                        );
                            }
                            sb_tFileOutputDelimited_13.append(OUT_DELIM_tFileOutputDelimited_13);
                            if(row19.FECHA_DEFUNCION != null) {
                        sb_tFileOutputDelimited_13.append(
                            row19.FECHA_DEFUNCION
                        );
                            }
                            sb_tFileOutputDelimited_13.append(OUT_DELIM_tFileOutputDelimited_13);
                            if(row19.USUARIO_MODIFICADOR != null) {
                        sb_tFileOutputDelimited_13.append(
                            row19.USUARIO_MODIFICADOR
                        );
                            }
                    sb_tFileOutputDelimited_13.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_13);


                    nb_line_tFileOutputDelimited_13++;
                    resourceMap.put("nb_line_tFileOutputDelimited_13", nb_line_tFileOutputDelimited_13);

                        outtFileOutputDelimited_13.write(sb_tFileOutputDelimited_13.toString());




 


	tos_count_tFileOutputDelimited_13++;

/**
 * [tFileOutputDelimited_13 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_13";
	
	

 



/**
 * [tFileOutputDelimited_13 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_13";
	
	

 



/**
 * [tFileOutputDelimited_13 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_15";
	
	

 



/**
 * [tOracleInput_15 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_15 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_15";
	
	

}
}finally{
	if (rs_tOracleInput_15 != null) {
		rs_tOracleInput_15.close();
	}
	if (stmt_tOracleInput_15 != null) {
		stmt_tOracleInput_15.close();
	}
}

globalMap.put("tOracleInput_15_NB_LINE",nb_line_tOracleInput_15);
 

ok_Hash.put("tOracleInput_15", true);
end_Hash.put("tOracleInput_15", System.currentTimeMillis());

   			if (((Integer)globalMap.get("tOracleOutput_3_NB_LINE_INSERTED"))> ((Integer)globalMap.get("tOracleInput_15_NB_LINE"))) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If23", 0, "true");
					}
				tOracleInput_16Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If23", 0, "false");
					}   	 
   				}



/**
 * [tOracleInput_15 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_13 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_13";
	
	



		
			
					if(outtFileOutputDelimited_13!=null) {
						outtFileOutputDelimited_13.flush();
						outtFileOutputDelimited_13.close();
					}
				
				globalMap.put("tFileOutputDelimited_13_NB_LINE",nb_line_tFileOutputDelimited_13);
				globalMap.put("tFileOutputDelimited_13_FILE_NAME",fileName_tFileOutputDelimited_13);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_13", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row19");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_13", true);
end_Hash.put("tFileOutputDelimited_13", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk26", 0, "ok");
				}
				tFixedFlowInput_2Process(globalMap);



/**
 * [tFileOutputDelimited_13 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_15 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_15";
	
	

 



/**
 * [tOracleInput_15 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_13 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_13";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_13") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_13 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_13");
						if(outtFileOutputDelimited_13!=null) {
							outtFileOutputDelimited_13.flush();
							outtFileOutputDelimited_13.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_13 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_15_SUBPROCESS_STATE", 1);
	}
	


public static class row20Struct implements routines.system.IPersistableRow<row20Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public String TDOCUMENTOS;

				public String getTDOCUMENTOS () {
					return this.TDOCUMENTOS;
				}

				public Boolean TDOCUMENTOSIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOSIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOSLength(){
				    return null;
				}
				public Integer TDOCUMENTOSPrecision(){
				    return null;
				}
				public String TDOCUMENTOSDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOSComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOSPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOSOriginalDbColumnName(){
				
					return "TDOCUMENTOS";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return null;
				}
				public Integer ERRORPrecision(){
				    return null;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TDOCUMENTOS = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TDOCUMENTOS = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TDOCUMENTOS,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TDOCUMENTOS,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS="+TDOCUMENTOS);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row20Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_16Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_16_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row20Struct row20 = new row20Struct();




	
	/**
	 * [tFileOutputDelimited_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_14", false);
		start_Hash.put("tFileOutputDelimited_14", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row20");
					}
				
		int tos_count_tFileOutputDelimited_14 = 0;
		

String fileName_tFileOutputDelimited_14 = "";
    fileName_tFileOutputDelimited_14 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+"ERRORES_"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_14 = null;
    String extension_tFileOutputDelimited_14 = null;
    String directory_tFileOutputDelimited_14 = null;
    if((fileName_tFileOutputDelimited_14.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_14.lastIndexOf(".") < fileName_tFileOutputDelimited_14.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_14 = fileName_tFileOutputDelimited_14;
            extension_tFileOutputDelimited_14 = "";
        } else {
            fullName_tFileOutputDelimited_14 = fileName_tFileOutputDelimited_14.substring(0, fileName_tFileOutputDelimited_14.lastIndexOf("."));
            extension_tFileOutputDelimited_14 = fileName_tFileOutputDelimited_14.substring(fileName_tFileOutputDelimited_14.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_14 = fileName_tFileOutputDelimited_14.substring(0, fileName_tFileOutputDelimited_14.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_14.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_14 = fileName_tFileOutputDelimited_14.substring(0, fileName_tFileOutputDelimited_14.lastIndexOf("."));
            extension_tFileOutputDelimited_14 = fileName_tFileOutputDelimited_14.substring(fileName_tFileOutputDelimited_14.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_14 = fileName_tFileOutputDelimited_14;
            extension_tFileOutputDelimited_14 = "";
        }
        directory_tFileOutputDelimited_14 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_14 = true;
    java.io.File filetFileOutputDelimited_14 = new java.io.File(fileName_tFileOutputDelimited_14);
    globalMap.put("tFileOutputDelimited_14_FILE_NAME",fileName_tFileOutputDelimited_14);
        if(filetFileOutputDelimited_14.exists()){
            isFileGenerated_tFileOutputDelimited_14 = false;
        }
            int nb_line_tFileOutputDelimited_14 = 0;
            int splitedFileNo_tFileOutputDelimited_14 = 0;
            int currentRow_tFileOutputDelimited_14 = 0;

            final String OUT_DELIM_tFileOutputDelimited_14 = /** Start field tFileOutputDelimited_14:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_14:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_14 = /** Start field tFileOutputDelimited_14:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_14:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_14 != null && directory_tFileOutputDelimited_14.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_14 = new java.io.File(directory_tFileOutputDelimited_14);
                        if(!dir_tFileOutputDelimited_14.exists()) {
                            dir_tFileOutputDelimited_14.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_14 = null;

                        outtFileOutputDelimited_14 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_14, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_14", outtFileOutputDelimited_14);
                                    if(filetFileOutputDelimited_14.length()==0){
                                        outtFileOutputDelimited_14.write("TDOCUMENTOS");
                                            outtFileOutputDelimited_14.write(OUT_DELIM_tFileOutputDelimited_14);
                                        outtFileOutputDelimited_14.write("DOCUMENTO");
                                            outtFileOutputDelimited_14.write(OUT_DELIM_tFileOutputDelimited_14);
                                        outtFileOutputDelimited_14.write("ERROR");
                                        outtFileOutputDelimited_14.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_14);
                                        outtFileOutputDelimited_14.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_14", nb_line_tFileOutputDelimited_14);

 



/**
 * [tFileOutputDelimited_14 begin ] stop
 */



	
	/**
	 * [tOracleInput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_16", false);
		start_Hash.put("tOracleInput_16", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_16";
	
	
		int tos_count_tOracleInput_16 = 0;
		
	


	
		    int nb_line_tOracleInput_16 = 0;
		    java.sql.Connection conn_tOracleInput_16 = null;
				conn_tOracleInput_16 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_16 = false;
				boolean isConnectionWrapped_tOracleInput_16 = !(conn_tOracleInput_16 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_16.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_16 = null;
                if (isConnectionWrapped_tOracleInput_16) {
					unwrappedOraConn_tOracleInput_16 = conn_tOracleInput_16.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_16 != null) {
                        isTimeZoneNull_tOracleInput_16 = (unwrappedOraConn_tOracleInput_16.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_16 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_16).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_16) {
					java.sql.Statement stmtGetTZ_tOracleInput_16 = conn_tOracleInput_16.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_16 = stmtGetTZ_tOracleInput_16.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_16 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_16.next()) {
						sessionTimezone_tOracleInput_16 = rsGetTZ_tOracleInput_16.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_16 && unwrappedOraConn_tOracleInput_16 != null) {
                        unwrappedOraConn_tOracleInput_16.setSessionTimeZone(sessionTimezone_tOracleInput_16);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_16).setSessionTimeZone(sessionTimezone_tOracleInput_16);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_16 = conn_tOracleInput_16.createStatement();

		    String dbquery_tOracleInput_16 = "SELECT\nCA.TDOCUMENTOS,\nCA.DOCUMENTO,\n'NO ENCOTRADO' AS ERROR\nFROM AFI_CARCHIVOS CA\nWHERE NOT EXISTS(SELECT * FROM "
+"VM_PERSONAS VP \n                WHERE VP.TIPO_DOCUMENTO = CA.TDOCUMENTOS\n                      AND VP.DOCUMENTO = CA.D"
+"OCUMENTO) AND CA.ARCHIVOS_ID = " + context.infoIdArchivo;
		    

		    globalMap.put("tOracleInput_16_QUERY",dbquery_tOracleInput_16);

		    java.sql.ResultSet rs_tOracleInput_16 = null;

		    try {
		    	rs_tOracleInput_16 = stmt_tOracleInput_16.executeQuery(dbquery_tOracleInput_16);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_16 = rs_tOracleInput_16.getMetaData();
		    	int colQtyInRs_tOracleInput_16 = rsmd_tOracleInput_16.getColumnCount();

		    String tmpContent_tOracleInput_16 = null;
		    
		    
		    while (rs_tOracleInput_16.next()) {
		        nb_line_tOracleInput_16++;
		        
							if(colQtyInRs_tOracleInput_16 < 1) {
								row20.TDOCUMENTOS = null;
							} else {
	                         		
        	row20.TDOCUMENTOS = routines.system.JDBCUtil.getString(rs_tOracleInput_16, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_16 < 2) {
								row20.DOCUMENTO = null;
							} else {
	                         		
        	row20.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_16, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_16 < 3) {
								row20.ERROR = null;
							} else {
	                         		
        	row20.ERROR = routines.system.JDBCUtil.getString(rs_tOracleInput_16, 3, false);
		                    }
					




 



/**
 * [tOracleInput_16 begin ] stop
 */
	
	/**
	 * [tOracleInput_16 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_16";
	
	

 


	tos_count_tOracleInput_16++;

/**
 * [tOracleInput_16 main ] stop
 */
	
	/**
	 * [tOracleInput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_16";
	
	

 



/**
 * [tOracleInput_16 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_14 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row20"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_14 = new StringBuilder();
                            if(row20.TDOCUMENTOS != null) {
                        sb_tFileOutputDelimited_14.append(
                            row20.TDOCUMENTOS
                        );
                            }
                            sb_tFileOutputDelimited_14.append(OUT_DELIM_tFileOutputDelimited_14);
                            if(row20.DOCUMENTO != null) {
                        sb_tFileOutputDelimited_14.append(
                            row20.DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_14.append(OUT_DELIM_tFileOutputDelimited_14);
                            if(row20.ERROR != null) {
                        sb_tFileOutputDelimited_14.append(
                            row20.ERROR
                        );
                            }
                    sb_tFileOutputDelimited_14.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_14);


                    nb_line_tFileOutputDelimited_14++;
                    resourceMap.put("nb_line_tFileOutputDelimited_14", nb_line_tFileOutputDelimited_14);

                        outtFileOutputDelimited_14.write(sb_tFileOutputDelimited_14.toString());




 


	tos_count_tFileOutputDelimited_14++;

/**
 * [tFileOutputDelimited_14 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_14";
	
	

 



/**
 * [tFileOutputDelimited_14 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_14";
	
	

 



/**
 * [tFileOutputDelimited_14 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_16";
	
	

 



/**
 * [tOracleInput_16 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_16 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_16";
	
	

}
}finally{
	if (rs_tOracleInput_16 != null) {
		rs_tOracleInput_16.close();
	}
	if (stmt_tOracleInput_16 != null) {
		stmt_tOracleInput_16.close();
	}
}

globalMap.put("tOracleInput_16_NB_LINE",nb_line_tOracleInput_16);
 

ok_Hash.put("tOracleInput_16", true);
end_Hash.put("tOracleInput_16", System.currentTimeMillis());




/**
 * [tOracleInput_16 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_14 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_14";
	
	



		
			
					if(outtFileOutputDelimited_14!=null) {
						outtFileOutputDelimited_14.flush();
						outtFileOutputDelimited_14.close();
					}
				
				globalMap.put("tFileOutputDelimited_14_NB_LINE",nb_line_tFileOutputDelimited_14);
				globalMap.put("tFileOutputDelimited_14_FILE_NAME",fileName_tFileOutputDelimited_14);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_14", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row20");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_14", true);
end_Hash.put("tFileOutputDelimited_14", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk22", 0, "ok");
				}
				tFixedFlowInput_1Process(globalMap);



/**
 * [tFileOutputDelimited_14 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_16 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_16";
	
	

 



/**
 * [tOracleInput_16 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_14 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_14";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_14") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_14 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_14");
						if(outtFileOutputDelimited_14!=null) {
							outtFileOutputDelimited_14.flush();
							outtFileOutputDelimited_14.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_14 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_16_SUBPROCESS_STATE", 1);
	}
	


public static class row21Struct implements routines.system.IPersistableRow<row21Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public Integer ID_BDUA;

				public Integer getID_BDUA () {
					return this.ID_BDUA;
				}

				public Boolean ID_BDUAIsNullable(){
				    return true;
				}
				public Boolean ID_BDUAIsKey(){
				    return false;
				}
				public Integer ID_BDUALength(){
				    return null;
				}
				public Integer ID_BDUAPrecision(){
				    return null;
				}
				public String ID_BDUADefault(){
				
					return "";
				
				}
				public String ID_BDUAComment(){
				
				    return "";
				
				}
				public String ID_BDUAPattern(){
				
					return "";
				
				}
				public String ID_BDUAOriginalDbColumnName(){
				
					return "ID_BDUA";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String PRIMER_APELLIDO;

				public String getPRIMER_APELLIDO () {
					return this.PRIMER_APELLIDO;
				}

				public Boolean PRIMER_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean PRIMER_APELLIDOIsKey(){
				    return false;
				}
				public Integer PRIMER_APELLIDOLength(){
				    return null;
				}
				public Integer PRIMER_APELLIDOPrecision(){
				    return null;
				}
				public String PRIMER_APELLIDODefault(){
				
					return null;
				
				}
				public String PRIMER_APELLIDOComment(){
				
				    return "";
				
				}
				public String PRIMER_APELLIDOPattern(){
				
					return "";
				
				}
				public String PRIMER_APELLIDOOriginalDbColumnName(){
				
					return "PRIMER_APELLIDO";
				
				}

				
			    public String SEGUNDO_APELLIDO;

				public String getSEGUNDO_APELLIDO () {
					return this.SEGUNDO_APELLIDO;
				}

				public Boolean SEGUNDO_APELLIDOIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_APELLIDOIsKey(){
				    return false;
				}
				public Integer SEGUNDO_APELLIDOLength(){
				    return null;
				}
				public Integer SEGUNDO_APELLIDOPrecision(){
				    return null;
				}
				public String SEGUNDO_APELLIDODefault(){
				
					return null;
				
				}
				public String SEGUNDO_APELLIDOComment(){
				
				    return "";
				
				}
				public String SEGUNDO_APELLIDOPattern(){
				
					return "";
				
				}
				public String SEGUNDO_APELLIDOOriginalDbColumnName(){
				
					return "SEGUNDO_APELLIDO";
				
				}

				
			    public String PRIMER_NOMBRE;

				public String getPRIMER_NOMBRE () {
					return this.PRIMER_NOMBRE;
				}

				public Boolean PRIMER_NOMBREIsNullable(){
				    return true;
				}
				public Boolean PRIMER_NOMBREIsKey(){
				    return false;
				}
				public Integer PRIMER_NOMBRELength(){
				    return null;
				}
				public Integer PRIMER_NOMBREPrecision(){
				    return null;
				}
				public String PRIMER_NOMBREDefault(){
				
					return null;
				
				}
				public String PRIMER_NOMBREComment(){
				
				    return "";
				
				}
				public String PRIMER_NOMBREPattern(){
				
					return "";
				
				}
				public String PRIMER_NOMBREOriginalDbColumnName(){
				
					return "PRIMER_NOMBRE";
				
				}

				
			    public String SEGUNDO_NOMBRE;

				public String getSEGUNDO_NOMBRE () {
					return this.SEGUNDO_NOMBRE;
				}

				public Boolean SEGUNDO_NOMBREIsNullable(){
				    return true;
				}
				public Boolean SEGUNDO_NOMBREIsKey(){
				    return false;
				}
				public Integer SEGUNDO_NOMBRELength(){
				    return null;
				}
				public Integer SEGUNDO_NOMBREPrecision(){
				    return null;
				}
				public String SEGUNDO_NOMBREDefault(){
				
					return null;
				
				}
				public String SEGUNDO_NOMBREComment(){
				
				    return "";
				
				}
				public String SEGUNDO_NOMBREPattern(){
				
					return "";
				
				}
				public String SEGUNDO_NOMBREOriginalDbColumnName(){
				
					return "SEGUNDO_NOMBRE";
				
				}

				
			    public String FECHA_NACIMIENTO;

				public String getFECHA_NACIMIENTO () {
					return this.FECHA_NACIMIENTO;
				}

				public Boolean FECHA_NACIMIENTOIsNullable(){
				    return true;
				}
				public Boolean FECHA_NACIMIENTOIsKey(){
				    return false;
				}
				public Integer FECHA_NACIMIENTOLength(){
				    return null;
				}
				public Integer FECHA_NACIMIENTOPrecision(){
				    return null;
				}
				public String FECHA_NACIMIENTODefault(){
				
					return null;
				
				}
				public String FECHA_NACIMIENTOComment(){
				
				    return "";
				
				}
				public String FECHA_NACIMIENTOPattern(){
				
					return "";
				
				}
				public String FECHA_NACIMIENTOOriginalDbColumnName(){
				
					return "FECHA_NACIMIENTO";
				
				}

				
			    public String SIGLA_SEXO;

				public String getSIGLA_SEXO () {
					return this.SIGLA_SEXO;
				}

				public Boolean SIGLA_SEXOIsNullable(){
				    return true;
				}
				public Boolean SIGLA_SEXOIsKey(){
				    return false;
				}
				public Integer SIGLA_SEXOLength(){
				    return null;
				}
				public Integer SIGLA_SEXOPrecision(){
				    return null;
				}
				public String SIGLA_SEXODefault(){
				
					return null;
				
				}
				public String SIGLA_SEXOComment(){
				
				    return "";
				
				}
				public String SIGLA_SEXOPattern(){
				
					return "";
				
				}
				public String SIGLA_SEXOOriginalDbColumnName(){
				
					return "SIGLA_SEXO";
				
				}

				
			    public String FECHA_MODIFICACION;

				public String getFECHA_MODIFICACION () {
					return this.FECHA_MODIFICACION;
				}

				public Boolean FECHA_MODIFICACIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_MODIFICACIONIsKey(){
				    return false;
				}
				public Integer FECHA_MODIFICACIONLength(){
				    return null;
				}
				public Integer FECHA_MODIFICACIONPrecision(){
				    return null;
				}
				public String FECHA_MODIFICACIONDefault(){
				
					return null;
				
				}
				public String FECHA_MODIFICACIONComment(){
				
				    return "";
				
				}
				public String FECHA_MODIFICACIONPattern(){
				
					return "";
				
				}
				public String FECHA_MODIFICACIONOriginalDbColumnName(){
				
					return "FECHA_MODIFICACION";
				
				}

				
			    public String CODIGO_ESM_ANTERIOR;

				public String getCODIGO_ESM_ANTERIOR () {
					return this.CODIGO_ESM_ANTERIOR;
				}

				public Boolean CODIGO_ESM_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ESM_ANTERIORIsKey(){
				    return false;
				}
				public Integer CODIGO_ESM_ANTERIORLength(){
				    return null;
				}
				public Integer CODIGO_ESM_ANTERIORPrecision(){
				    return null;
				}
				public String CODIGO_ESM_ANTERIORDefault(){
				
					return null;
				
				}
				public String CODIGO_ESM_ANTERIORComment(){
				
				    return "";
				
				}
				public String CODIGO_ESM_ANTERIORPattern(){
				
					return "";
				
				}
				public String CODIGO_ESM_ANTERIOROriginalDbColumnName(){
				
					return "CODIGO_ESM_ANTERIOR";
				
				}

				
			    public String SIGLA_ESEM_ANTERIOR;

				public String getSIGLA_ESEM_ANTERIOR () {
					return this.SIGLA_ESEM_ANTERIOR;
				}

				public Boolean SIGLA_ESEM_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean SIGLA_ESEM_ANTERIORIsKey(){
				    return false;
				}
				public Integer SIGLA_ESEM_ANTERIORLength(){
				    return null;
				}
				public Integer SIGLA_ESEM_ANTERIORPrecision(){
				    return null;
				}
				public String SIGLA_ESEM_ANTERIORDefault(){
				
					return "";
				
				}
				public String SIGLA_ESEM_ANTERIORComment(){
				
				    return "";
				
				}
				public String SIGLA_ESEM_ANTERIORPattern(){
				
					return "";
				
				}
				public String SIGLA_ESEM_ANTERIOROriginalDbColumnName(){
				
					return "SIGLA_ESEM_ANTERIOR";
				
				}

				
			    public String ESM_ANTERIOR;

				public String getESM_ANTERIOR () {
					return this.ESM_ANTERIOR;
				}

				public Boolean ESM_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean ESM_ANTERIORIsKey(){
				    return false;
				}
				public Integer ESM_ANTERIORLength(){
				    return null;
				}
				public Integer ESM_ANTERIORPrecision(){
				    return null;
				}
				public String ESM_ANTERIORDefault(){
				
					return "";
				
				}
				public String ESM_ANTERIORComment(){
				
				    return "";
				
				}
				public String ESM_ANTERIORPattern(){
				
					return "";
				
				}
				public String ESM_ANTERIOROriginalDbColumnName(){
				
					return "ESM_ANTERIOR";
				
				}

				
			    public String CODIGO_ESM_ACTUAL;

				public String getCODIGO_ESM_ACTUAL () {
					return this.CODIGO_ESM_ACTUAL;
				}

				public Boolean CODIGO_ESM_ACTUALIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ESM_ACTUALIsKey(){
				    return false;
				}
				public Integer CODIGO_ESM_ACTUALLength(){
				    return null;
				}
				public Integer CODIGO_ESM_ACTUALPrecision(){
				    return null;
				}
				public String CODIGO_ESM_ACTUALDefault(){
				
					return "";
				
				}
				public String CODIGO_ESM_ACTUALComment(){
				
				    return "";
				
				}
				public String CODIGO_ESM_ACTUALPattern(){
				
					return "";
				
				}
				public String CODIGO_ESM_ACTUALOriginalDbColumnName(){
				
					return "CODIGO_ESM_ACTUAL";
				
				}

				
			    public String SIGLA_ESM_ACTUAL;

				public String getSIGLA_ESM_ACTUAL () {
					return this.SIGLA_ESM_ACTUAL;
				}

				public Boolean SIGLA_ESM_ACTUALIsNullable(){
				    return true;
				}
				public Boolean SIGLA_ESM_ACTUALIsKey(){
				    return false;
				}
				public Integer SIGLA_ESM_ACTUALLength(){
				    return null;
				}
				public Integer SIGLA_ESM_ACTUALPrecision(){
				    return null;
				}
				public String SIGLA_ESM_ACTUALDefault(){
				
					return "";
				
				}
				public String SIGLA_ESM_ACTUALComment(){
				
				    return "";
				
				}
				public String SIGLA_ESM_ACTUALPattern(){
				
					return "";
				
				}
				public String SIGLA_ESM_ACTUALOriginalDbColumnName(){
				
					return "SIGLA_ESM_ACTUAL";
				
				}

				
			    public String ESM_ACTUAL;

				public String getESM_ACTUAL () {
					return this.ESM_ACTUAL;
				}

				public Boolean ESM_ACTUALIsNullable(){
				    return true;
				}
				public Boolean ESM_ACTUALIsKey(){
				    return false;
				}
				public Integer ESM_ACTUALLength(){
				    return null;
				}
				public Integer ESM_ACTUALPrecision(){
				    return null;
				}
				public String ESM_ACTUALDefault(){
				
					return "";
				
				}
				public String ESM_ACTUALComment(){
				
				    return "";
				
				}
				public String ESM_ACTUALPattern(){
				
					return "";
				
				}
				public String ESM_ACTUALOriginalDbColumnName(){
				
					return "ESM_ACTUAL";
				
				}

				
			    public String ESTADO_AFILIACION;

				public String getESTADO_AFILIACION () {
					return this.ESTADO_AFILIACION;
				}

				public Boolean ESTADO_AFILIACIONIsNullable(){
				    return true;
				}
				public Boolean ESTADO_AFILIACIONIsKey(){
				    return false;
				}
				public Integer ESTADO_AFILIACIONLength(){
				    return null;
				}
				public Integer ESTADO_AFILIACIONPrecision(){
				    return null;
				}
				public String ESTADO_AFILIACIONDefault(){
				
					return "";
				
				}
				public String ESTADO_AFILIACIONComment(){
				
				    return "";
				
				}
				public String ESTADO_AFILIACIONPattern(){
				
					return "";
				
				}
				public String ESTADO_AFILIACIONOriginalDbColumnName(){
				
					return "ESTADO_AFILIACION";
				
				}

				
			    public String PLANAFILIACIONES;

				public String getPLANAFILIACIONES () {
					return this.PLANAFILIACIONES;
				}

				public Boolean PLANAFILIACIONESIsNullable(){
				    return true;
				}
				public Boolean PLANAFILIACIONESIsKey(){
				    return false;
				}
				public Integer PLANAFILIACIONESLength(){
				    return null;
				}
				public Integer PLANAFILIACIONESPrecision(){
				    return null;
				}
				public String PLANAFILIACIONESDefault(){
				
					return "";
				
				}
				public String PLANAFILIACIONESComment(){
				
				    return "";
				
				}
				public String PLANAFILIACIONESPattern(){
				
					return "";
				
				}
				public String PLANAFILIACIONESOriginalDbColumnName(){
				
					return "PLANAFILIACIONES";
				
				}

				
			    public String FECHA_DEFUNCION;

				public String getFECHA_DEFUNCION () {
					return this.FECHA_DEFUNCION;
				}

				public Boolean FECHA_DEFUNCIONIsNullable(){
				    return true;
				}
				public Boolean FECHA_DEFUNCIONIsKey(){
				    return false;
				}
				public Integer FECHA_DEFUNCIONLength(){
				    return null;
				}
				public Integer FECHA_DEFUNCIONPrecision(){
				    return null;
				}
				public String FECHA_DEFUNCIONDefault(){
				
					return "";
				
				}
				public String FECHA_DEFUNCIONComment(){
				
				    return "";
				
				}
				public String FECHA_DEFUNCIONPattern(){
				
					return "";
				
				}
				public String FECHA_DEFUNCIONOriginalDbColumnName(){
				
					return "FECHA_DEFUNCION";
				
				}

				
			    public String USUARIO_MODIFICADOR;

				public String getUSUARIO_MODIFICADOR () {
					return this.USUARIO_MODIFICADOR;
				}

				public Boolean USUARIO_MODIFICADORIsNullable(){
				    return true;
				}
				public Boolean USUARIO_MODIFICADORIsKey(){
				    return false;
				}
				public Integer USUARIO_MODIFICADORLength(){
				    return null;
				}
				public Integer USUARIO_MODIFICADORPrecision(){
				    return null;
				}
				public String USUARIO_MODIFICADORDefault(){
				
					return "";
				
				}
				public String USUARIO_MODIFICADORComment(){
				
				    return "";
				
				}
				public String USUARIO_MODIFICADORPattern(){
				
					return "";
				
				}
				public String USUARIO_MODIFICADOROriginalDbColumnName(){
				
					return "USUARIO_MODIFICADOR";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
						this.ID_BDUA = readInteger(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.SIGLA_SEXO = readString(dis);
					
					this.FECHA_MODIFICACION = readString(dis);
					
					this.CODIGO_ESM_ANTERIOR = readString(dis);
					
					this.SIGLA_ESEM_ANTERIOR = readString(dis);
					
					this.ESM_ANTERIOR = readString(dis);
					
					this.CODIGO_ESM_ACTUAL = readString(dis);
					
					this.SIGLA_ESM_ACTUAL = readString(dis);
					
					this.ESM_ACTUAL = readString(dis);
					
					this.ESTADO_AFILIACION = readString(dis);
					
					this.PLANAFILIACIONES = readString(dis);
					
					this.FECHA_DEFUNCION = readString(dis);
					
					this.USUARIO_MODIFICADOR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
						this.ID_BDUA = readInteger(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.PRIMER_APELLIDO = readString(dis);
					
					this.SEGUNDO_APELLIDO = readString(dis);
					
					this.PRIMER_NOMBRE = readString(dis);
					
					this.SEGUNDO_NOMBRE = readString(dis);
					
					this.FECHA_NACIMIENTO = readString(dis);
					
					this.SIGLA_SEXO = readString(dis);
					
					this.FECHA_MODIFICACION = readString(dis);
					
					this.CODIGO_ESM_ANTERIOR = readString(dis);
					
					this.SIGLA_ESEM_ANTERIOR = readString(dis);
					
					this.ESM_ANTERIOR = readString(dis);
					
					this.CODIGO_ESM_ACTUAL = readString(dis);
					
					this.SIGLA_ESM_ACTUAL = readString(dis);
					
					this.ESM_ACTUAL = readString(dis);
					
					this.ESTADO_AFILIACION = readString(dis);
					
					this.PLANAFILIACIONES = readString(dis);
					
					this.FECHA_DEFUNCION = readString(dis);
					
					this.USUARIO_MODIFICADOR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_BDUA,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.SIGLA_SEXO,dos);
					
					// String
				
						writeString(this.FECHA_MODIFICACION,dos);
					
					// String
				
						writeString(this.CODIGO_ESM_ANTERIOR,dos);
					
					// String
				
						writeString(this.SIGLA_ESEM_ANTERIOR,dos);
					
					// String
				
						writeString(this.ESM_ANTERIOR,dos);
					
					// String
				
						writeString(this.CODIGO_ESM_ACTUAL,dos);
					
					// String
				
						writeString(this.SIGLA_ESM_ACTUAL,dos);
					
					// String
				
						writeString(this.ESM_ACTUAL,dos);
					
					// String
				
						writeString(this.ESTADO_AFILIACION,dos);
					
					// String
				
						writeString(this.PLANAFILIACIONES,dos);
					
					// String
				
						writeString(this.FECHA_DEFUNCION,dos);
					
					// String
				
						writeString(this.USUARIO_MODIFICADOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_BDUA,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.PRIMER_APELLIDO,dos);
					
					// String
				
						writeString(this.SEGUNDO_APELLIDO,dos);
					
					// String
				
						writeString(this.PRIMER_NOMBRE,dos);
					
					// String
				
						writeString(this.SEGUNDO_NOMBRE,dos);
					
					// String
				
						writeString(this.FECHA_NACIMIENTO,dos);
					
					// String
				
						writeString(this.SIGLA_SEXO,dos);
					
					// String
				
						writeString(this.FECHA_MODIFICACION,dos);
					
					// String
				
						writeString(this.CODIGO_ESM_ANTERIOR,dos);
					
					// String
				
						writeString(this.SIGLA_ESEM_ANTERIOR,dos);
					
					// String
				
						writeString(this.ESM_ANTERIOR,dos);
					
					// String
				
						writeString(this.CODIGO_ESM_ACTUAL,dos);
					
					// String
				
						writeString(this.SIGLA_ESM_ACTUAL,dos);
					
					// String
				
						writeString(this.ESM_ACTUAL,dos);
					
					// String
				
						writeString(this.ESTADO_AFILIACION,dos);
					
					// String
				
						writeString(this.PLANAFILIACIONES,dos);
					
					// String
				
						writeString(this.FECHA_DEFUNCION,dos);
					
					// String
				
						writeString(this.USUARIO_MODIFICADOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_BDUA="+String.valueOf(ID_BDUA));
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",PRIMER_APELLIDO="+PRIMER_APELLIDO);
		sb.append(",SEGUNDO_APELLIDO="+SEGUNDO_APELLIDO);
		sb.append(",PRIMER_NOMBRE="+PRIMER_NOMBRE);
		sb.append(",SEGUNDO_NOMBRE="+SEGUNDO_NOMBRE);
		sb.append(",FECHA_NACIMIENTO="+FECHA_NACIMIENTO);
		sb.append(",SIGLA_SEXO="+SIGLA_SEXO);
		sb.append(",FECHA_MODIFICACION="+FECHA_MODIFICACION);
		sb.append(",CODIGO_ESM_ANTERIOR="+CODIGO_ESM_ANTERIOR);
		sb.append(",SIGLA_ESEM_ANTERIOR="+SIGLA_ESEM_ANTERIOR);
		sb.append(",ESM_ANTERIOR="+ESM_ANTERIOR);
		sb.append(",CODIGO_ESM_ACTUAL="+CODIGO_ESM_ACTUAL);
		sb.append(",SIGLA_ESM_ACTUAL="+SIGLA_ESM_ACTUAL);
		sb.append(",ESM_ACTUAL="+ESM_ACTUAL);
		sb.append(",ESTADO_AFILIACION="+ESTADO_AFILIACION);
		sb.append(",PLANAFILIACIONES="+PLANAFILIACIONES);
		sb.append(",FECHA_DEFUNCION="+FECHA_DEFUNCION);
		sb.append(",USUARIO_MODIFICADOR="+USUARIO_MODIFICADOR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row21Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_17Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_17_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row21Struct row21 = new row21Struct();




	
	/**
	 * [tFileOutputDelimited_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_15", false);
		start_Hash.put("tFileOutputDelimited_15", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row21");
					}
				
		int tos_count_tFileOutputDelimited_15 = 0;
		

String fileName_tFileOutputDelimited_15 = "";
    fileName_tFileOutputDelimited_15 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_15 = null;
    String extension_tFileOutputDelimited_15 = null;
    String directory_tFileOutputDelimited_15 = null;
    if((fileName_tFileOutputDelimited_15.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_15.lastIndexOf(".") < fileName_tFileOutputDelimited_15.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_15 = fileName_tFileOutputDelimited_15;
            extension_tFileOutputDelimited_15 = "";
        } else {
            fullName_tFileOutputDelimited_15 = fileName_tFileOutputDelimited_15.substring(0, fileName_tFileOutputDelimited_15.lastIndexOf("."));
            extension_tFileOutputDelimited_15 = fileName_tFileOutputDelimited_15.substring(fileName_tFileOutputDelimited_15.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_15 = fileName_tFileOutputDelimited_15.substring(0, fileName_tFileOutputDelimited_15.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_15.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_15 = fileName_tFileOutputDelimited_15.substring(0, fileName_tFileOutputDelimited_15.lastIndexOf("."));
            extension_tFileOutputDelimited_15 = fileName_tFileOutputDelimited_15.substring(fileName_tFileOutputDelimited_15.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_15 = fileName_tFileOutputDelimited_15;
            extension_tFileOutputDelimited_15 = "";
        }
        directory_tFileOutputDelimited_15 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_15 = true;
    java.io.File filetFileOutputDelimited_15 = new java.io.File(fileName_tFileOutputDelimited_15);
    globalMap.put("tFileOutputDelimited_15_FILE_NAME",fileName_tFileOutputDelimited_15);
        if(filetFileOutputDelimited_15.exists()){
            isFileGenerated_tFileOutputDelimited_15 = false;
        }
            int nb_line_tFileOutputDelimited_15 = 0;
            int splitedFileNo_tFileOutputDelimited_15 = 0;
            int currentRow_tFileOutputDelimited_15 = 0;

            final String OUT_DELIM_tFileOutputDelimited_15 = /** Start field tFileOutputDelimited_15:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_15:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_15 = /** Start field tFileOutputDelimited_15:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_15:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_15 != null && directory_tFileOutputDelimited_15.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_15 = new java.io.File(directory_tFileOutputDelimited_15);
                        if(!dir_tFileOutputDelimited_15.exists()) {
                            dir_tFileOutputDelimited_15.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_15 = null;

                        outtFileOutputDelimited_15 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_15, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_15", outtFileOutputDelimited_15);
                                    if(filetFileOutputDelimited_15.length()==0){
                                        outtFileOutputDelimited_15.write("ID_BDUA");
                                            outtFileOutputDelimited_15.write(OUT_DELIM_tFileOutputDelimited_15);
                                        outtFileOutputDelimited_15.write("TIPO_DOCUMENTO");
                                            outtFileOutputDelimited_15.write(OUT_DELIM_tFileOutputDelimited_15);
                                        outtFileOutputDelimited_15.write("DOCUMENTO");
                                            outtFileOutputDelimited_15.write(OUT_DELIM_tFileOutputDelimited_15);
                                        outtFileOutputDelimited_15.write("PRIMER_APELLIDO");
                                            outtFileOutputDelimited_15.write(OUT_DELIM_tFileOutputDelimited_15);
                                        outtFileOutputDelimited_15.write("SEGUNDO_APELLIDO");
                                            outtFileOutputDelimited_15.write(OUT_DELIM_tFileOutputDelimited_15);
                                        outtFileOutputDelimited_15.write("PRIMER_NOMBRE");
                                            outtFileOutputDelimited_15.write(OUT_DELIM_tFileOutputDelimited_15);
                                        outtFileOutputDelimited_15.write("SEGUNDO_NOMBRE");
                                            outtFileOutputDelimited_15.write(OUT_DELIM_tFileOutputDelimited_15);
                                        outtFileOutputDelimited_15.write("FECHA_NACIMIENTO");
                                            outtFileOutputDelimited_15.write(OUT_DELIM_tFileOutputDelimited_15);
                                        outtFileOutputDelimited_15.write("SIGLA_SEXO");
                                            outtFileOutputDelimited_15.write(OUT_DELIM_tFileOutputDelimited_15);
                                        outtFileOutputDelimited_15.write("FECHA_MODIFICACION");
                                            outtFileOutputDelimited_15.write(OUT_DELIM_tFileOutputDelimited_15);
                                        outtFileOutputDelimited_15.write("CODIGO_ESM_ANTERIOR");
                                            outtFileOutputDelimited_15.write(OUT_DELIM_tFileOutputDelimited_15);
                                        outtFileOutputDelimited_15.write("SIGLA_ESEM_ANTERIOR");
                                            outtFileOutputDelimited_15.write(OUT_DELIM_tFileOutputDelimited_15);
                                        outtFileOutputDelimited_15.write("ESM_ANTERIOR");
                                            outtFileOutputDelimited_15.write(OUT_DELIM_tFileOutputDelimited_15);
                                        outtFileOutputDelimited_15.write("CODIGO_ESM_ACTUAL");
                                            outtFileOutputDelimited_15.write(OUT_DELIM_tFileOutputDelimited_15);
                                        outtFileOutputDelimited_15.write("SIGLA_ESM_ACTUAL");
                                            outtFileOutputDelimited_15.write(OUT_DELIM_tFileOutputDelimited_15);
                                        outtFileOutputDelimited_15.write("ESM_ACTUAL");
                                            outtFileOutputDelimited_15.write(OUT_DELIM_tFileOutputDelimited_15);
                                        outtFileOutputDelimited_15.write("ESTADO_AFILIACION");
                                            outtFileOutputDelimited_15.write(OUT_DELIM_tFileOutputDelimited_15);
                                        outtFileOutputDelimited_15.write("PLANAFILIACIONES");
                                            outtFileOutputDelimited_15.write(OUT_DELIM_tFileOutputDelimited_15);
                                        outtFileOutputDelimited_15.write("FECHA_DEFUNCION");
                                            outtFileOutputDelimited_15.write(OUT_DELIM_tFileOutputDelimited_15);
                                        outtFileOutputDelimited_15.write("USUARIO_MODIFICADOR");
                                        outtFileOutputDelimited_15.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_15);
                                        outtFileOutputDelimited_15.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_15", nb_line_tFileOutputDelimited_15);

 



/**
 * [tFileOutputDelimited_15 begin ] stop
 */



	
	/**
	 * [tOracleInput_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_17", false);
		start_Hash.put("tOracleInput_17", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_17";
	
	
		int tos_count_tOracleInput_17 = 0;
		
	


	
		    int nb_line_tOracleInput_17 = 0;
		    java.sql.Connection conn_tOracleInput_17 = null;
				conn_tOracleInput_17 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_17 = false;
				boolean isConnectionWrapped_tOracleInput_17 = !(conn_tOracleInput_17 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_17.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_17 = null;
                if (isConnectionWrapped_tOracleInput_17) {
					unwrappedOraConn_tOracleInput_17 = conn_tOracleInput_17.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_17 != null) {
                        isTimeZoneNull_tOracleInput_17 = (unwrappedOraConn_tOracleInput_17.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_17 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_17).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_17) {
					java.sql.Statement stmtGetTZ_tOracleInput_17 = conn_tOracleInput_17.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_17 = stmtGetTZ_tOracleInput_17.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_17 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_17.next()) {
						sessionTimezone_tOracleInput_17 = rsGetTZ_tOracleInput_17.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_17 && unwrappedOraConn_tOracleInput_17 != null) {
                        unwrappedOraConn_tOracleInput_17.setSessionTimeZone(sessionTimezone_tOracleInput_17);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_17).setSessionTimeZone(sessionTimezone_tOracleInput_17);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_17 = conn_tOracleInput_17.createStatement();

		    String dbquery_tOracleInput_17 = "SELECT  \nVM.ID_BDUA,\nreplace(replace(VM.TIPO_DOCUMENTO,chr(10),''),chr(13),'') AS TIPO_DOCUMENTO,\nreplace(replace(VM"
+".DOCUMENTO,chr(10),''),chr(13),'') AS DOCUMENTO,\nreplace(replace(VM.PRIMER_APELLIDO,chr(10),''),chr(13),'') AS PRIMER_A"
+"PELLIDO,\nreplace(replace(VM.SEGUNDO_APELLIDO,chr(10),''),chr(13),'') AS SEGUNDO_APELLIDO,\nreplace(replace(VM.PRIMER_NO"
+"MBRE,chr(10),''),chr(13),'') AS PRIMER_NOMBRE,\nreplace(replace(VM.SEGUNDO_NOMBRE,chr(10),''),chr(13),'') AS SEGUNDO_NOM"
+"BRE,\nTO_CHAR(VM.FECHA_NACIMIENTO,'DD/MM/YYYY') AS FECHA_NACIMIENTO,\nreplace(replace(VM.SIGLA_SEXO,chr(10),''),chr(13),"
+"'') AS SIGLA_SEXO,\nTO_CHAR(ap.FECHA_REGISTRO ,'DD/MM/YYYY') AS FECHA_MODIFICACION,\ngu2.CODIGO AS CODIGO_ESM_ANTERIOR,"
+"\nGU2.SIGLA AS SIGLA_ESEM_ANTERIOR,\nGU2.NOMBRE AS ESM_ANTERIOR,\ngu3.CODIGO AS CODIGO_ESM_ACTUAL,\nGU3.SIGLA AS SIGLA_ES"
+"M_ACTUAL,\nGU3.NOMBRE AS ESM_ACTUAL,\nVM.ESTAFILIACION AS ESTADO_AFILIACION, \nreplace(replace(VM.PLANAFILIACIONES,chr(1"
+"0),''),chr(13),'') AS PLANAFILIACIONES,\nVM.FECHA_DEFUNCION,\nGU.USUARIO AS USUARIO_MODIFICADOR\nFROM  VM_PERSONAS VM\nI"
+"NNER JOIN AFI_CARCHIVOS CA ON CA.DOCUMENTO = VM.DOCUMENTO AND  TRIM(UPPER(CA.TDOCUMENTOS)) = TRIM(UPPER(VM.TIPO_DOCUMENT"
+"O))\nINNER JOIN AFI_HAFILIADOS ah ON ah.AFILIADOS_ID = VM.GA\nINNER JOIN AFI_PROCESOS ap ON AP.ID = AH.PROCESOS_ID \nINN"
+"ER JOIN GEN_USUARIOS gu ON GU.ID = AP.USUARIOS_ID\nINNER JOIN GEN_UORG gu2 ON GU2.ID = TO_NUMBER(AH.VANTERIOR) \nINNER J"
+"OIN GEN_UORG gu3 ON GU3.ID = TO_NUMBER(AH.VACTUAL) \nWHERE \nVM.AFILIADO_ESTREGISTRO_ID = 1\nAND AP.ESTREGISTRO_ID = 1\n"
+"AND GU.ESTREGISTRO_ID = 1\nAND AH.ESTREGISTRO_ID = 1\nAND GU2.ESTREGISTRO_ID = 1\nAND GU3.ESTREGISTRO_ID = 1\nAND AH.CAM"
+"PO = 'ESMADSCRITO'\nAND CA.ARCHIVOS_ID = " + context.infoIdArchivo ;;
		    

		    globalMap.put("tOracleInput_17_QUERY",dbquery_tOracleInput_17);

		    java.sql.ResultSet rs_tOracleInput_17 = null;

		    try {
		    	rs_tOracleInput_17 = stmt_tOracleInput_17.executeQuery(dbquery_tOracleInput_17);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_17 = rs_tOracleInput_17.getMetaData();
		    	int colQtyInRs_tOracleInput_17 = rsmd_tOracleInput_17.getColumnCount();

		    String tmpContent_tOracleInput_17 = null;
		    
		    
		    while (rs_tOracleInput_17.next()) {
		        nb_line_tOracleInput_17++;
		        
							if(colQtyInRs_tOracleInput_17 < 1) {
								row21.ID_BDUA = null;
							} else {
		                          
					if(rs_tOracleInput_17.getObject(1) != null) {
						row21.ID_BDUA = rs_tOracleInput_17.getInt(1);
					} else {
				
						row21.ID_BDUA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_17 < 2) {
								row21.TIPO_DOCUMENTO = null;
							} else {
	                         		
        	row21.TIPO_DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 3) {
								row21.DOCUMENTO = null;
							} else {
	                         		
        	row21.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 4) {
								row21.PRIMER_APELLIDO = null;
							} else {
	                         		
        	row21.PRIMER_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 4, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 5) {
								row21.SEGUNDO_APELLIDO = null;
							} else {
	                         		
        	row21.SEGUNDO_APELLIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 5, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 6) {
								row21.PRIMER_NOMBRE = null;
							} else {
	                         		
        	row21.PRIMER_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 6, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 7) {
								row21.SEGUNDO_NOMBRE = null;
							} else {
	                         		
        	row21.SEGUNDO_NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 7, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 8) {
								row21.FECHA_NACIMIENTO = null;
							} else {
	                         		
        	row21.FECHA_NACIMIENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 8, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 9) {
								row21.SIGLA_SEXO = null;
							} else {
	                         		
        	row21.SIGLA_SEXO = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 9, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 10) {
								row21.FECHA_MODIFICACION = null;
							} else {
	                         		
        	row21.FECHA_MODIFICACION = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 10, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 11) {
								row21.CODIGO_ESM_ANTERIOR = null;
							} else {
	                         		
        	row21.CODIGO_ESM_ANTERIOR = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 11, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 12) {
								row21.SIGLA_ESEM_ANTERIOR = null;
							} else {
	                         		
        	row21.SIGLA_ESEM_ANTERIOR = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 12, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 13) {
								row21.ESM_ANTERIOR = null;
							} else {
	                         		
        	row21.ESM_ANTERIOR = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 13, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 14) {
								row21.CODIGO_ESM_ACTUAL = null;
							} else {
	                         		
        	row21.CODIGO_ESM_ACTUAL = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 14, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 15) {
								row21.SIGLA_ESM_ACTUAL = null;
							} else {
	                         		
        	row21.SIGLA_ESM_ACTUAL = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 15, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 16) {
								row21.ESM_ACTUAL = null;
							} else {
	                         		
        	row21.ESM_ACTUAL = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 16, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 17) {
								row21.ESTADO_AFILIACION = null;
							} else {
	                         		
        	row21.ESTADO_AFILIACION = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 17, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 18) {
								row21.PLANAFILIACIONES = null;
							} else {
	                         		
        	row21.PLANAFILIACIONES = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 18, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 19) {
								row21.FECHA_DEFUNCION = null;
							} else {
	                         		
        	row21.FECHA_DEFUNCION = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 19, false);
		                    }
							if(colQtyInRs_tOracleInput_17 < 20) {
								row21.USUARIO_MODIFICADOR = null;
							} else {
	                         		
        	row21.USUARIO_MODIFICADOR = routines.system.JDBCUtil.getString(rs_tOracleInput_17, 20, false);
		                    }
					




 



/**
 * [tOracleInput_17 begin ] stop
 */
	
	/**
	 * [tOracleInput_17 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_17";
	
	

 


	tos_count_tOracleInput_17++;

/**
 * [tOracleInput_17 main ] stop
 */
	
	/**
	 * [tOracleInput_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_17";
	
	

 



/**
 * [tOracleInput_17 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_15 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row21"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_15 = new StringBuilder();
                            if(row21.ID_BDUA != null) {
                        sb_tFileOutputDelimited_15.append(
                            row21.ID_BDUA
                        );
                            }
                            sb_tFileOutputDelimited_15.append(OUT_DELIM_tFileOutputDelimited_15);
                            if(row21.TIPO_DOCUMENTO != null) {
                        sb_tFileOutputDelimited_15.append(
                            row21.TIPO_DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_15.append(OUT_DELIM_tFileOutputDelimited_15);
                            if(row21.DOCUMENTO != null) {
                        sb_tFileOutputDelimited_15.append(
                            row21.DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_15.append(OUT_DELIM_tFileOutputDelimited_15);
                            if(row21.PRIMER_APELLIDO != null) {
                        sb_tFileOutputDelimited_15.append(
                            row21.PRIMER_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_15.append(OUT_DELIM_tFileOutputDelimited_15);
                            if(row21.SEGUNDO_APELLIDO != null) {
                        sb_tFileOutputDelimited_15.append(
                            row21.SEGUNDO_APELLIDO
                        );
                            }
                            sb_tFileOutputDelimited_15.append(OUT_DELIM_tFileOutputDelimited_15);
                            if(row21.PRIMER_NOMBRE != null) {
                        sb_tFileOutputDelimited_15.append(
                            row21.PRIMER_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_15.append(OUT_DELIM_tFileOutputDelimited_15);
                            if(row21.SEGUNDO_NOMBRE != null) {
                        sb_tFileOutputDelimited_15.append(
                            row21.SEGUNDO_NOMBRE
                        );
                            }
                            sb_tFileOutputDelimited_15.append(OUT_DELIM_tFileOutputDelimited_15);
                            if(row21.FECHA_NACIMIENTO != null) {
                        sb_tFileOutputDelimited_15.append(
                            row21.FECHA_NACIMIENTO
                        );
                            }
                            sb_tFileOutputDelimited_15.append(OUT_DELIM_tFileOutputDelimited_15);
                            if(row21.SIGLA_SEXO != null) {
                        sb_tFileOutputDelimited_15.append(
                            row21.SIGLA_SEXO
                        );
                            }
                            sb_tFileOutputDelimited_15.append(OUT_DELIM_tFileOutputDelimited_15);
                            if(row21.FECHA_MODIFICACION != null) {
                        sb_tFileOutputDelimited_15.append(
                            row21.FECHA_MODIFICACION
                        );
                            }
                            sb_tFileOutputDelimited_15.append(OUT_DELIM_tFileOutputDelimited_15);
                            if(row21.CODIGO_ESM_ANTERIOR != null) {
                        sb_tFileOutputDelimited_15.append(
                            row21.CODIGO_ESM_ANTERIOR
                        );
                            }
                            sb_tFileOutputDelimited_15.append(OUT_DELIM_tFileOutputDelimited_15);
                            if(row21.SIGLA_ESEM_ANTERIOR != null) {
                        sb_tFileOutputDelimited_15.append(
                            row21.SIGLA_ESEM_ANTERIOR
                        );
                            }
                            sb_tFileOutputDelimited_15.append(OUT_DELIM_tFileOutputDelimited_15);
                            if(row21.ESM_ANTERIOR != null) {
                        sb_tFileOutputDelimited_15.append(
                            row21.ESM_ANTERIOR
                        );
                            }
                            sb_tFileOutputDelimited_15.append(OUT_DELIM_tFileOutputDelimited_15);
                            if(row21.CODIGO_ESM_ACTUAL != null) {
                        sb_tFileOutputDelimited_15.append(
                            row21.CODIGO_ESM_ACTUAL
                        );
                            }
                            sb_tFileOutputDelimited_15.append(OUT_DELIM_tFileOutputDelimited_15);
                            if(row21.SIGLA_ESM_ACTUAL != null) {
                        sb_tFileOutputDelimited_15.append(
                            row21.SIGLA_ESM_ACTUAL
                        );
                            }
                            sb_tFileOutputDelimited_15.append(OUT_DELIM_tFileOutputDelimited_15);
                            if(row21.ESM_ACTUAL != null) {
                        sb_tFileOutputDelimited_15.append(
                            row21.ESM_ACTUAL
                        );
                            }
                            sb_tFileOutputDelimited_15.append(OUT_DELIM_tFileOutputDelimited_15);
                            if(row21.ESTADO_AFILIACION != null) {
                        sb_tFileOutputDelimited_15.append(
                            row21.ESTADO_AFILIACION
                        );
                            }
                            sb_tFileOutputDelimited_15.append(OUT_DELIM_tFileOutputDelimited_15);
                            if(row21.PLANAFILIACIONES != null) {
                        sb_tFileOutputDelimited_15.append(
                            row21.PLANAFILIACIONES
                        );
                            }
                            sb_tFileOutputDelimited_15.append(OUT_DELIM_tFileOutputDelimited_15);
                            if(row21.FECHA_DEFUNCION != null) {
                        sb_tFileOutputDelimited_15.append(
                            row21.FECHA_DEFUNCION
                        );
                            }
                            sb_tFileOutputDelimited_15.append(OUT_DELIM_tFileOutputDelimited_15);
                            if(row21.USUARIO_MODIFICADOR != null) {
                        sb_tFileOutputDelimited_15.append(
                            row21.USUARIO_MODIFICADOR
                        );
                            }
                    sb_tFileOutputDelimited_15.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_15);


                    nb_line_tFileOutputDelimited_15++;
                    resourceMap.put("nb_line_tFileOutputDelimited_15", nb_line_tFileOutputDelimited_15);

                        outtFileOutputDelimited_15.write(sb_tFileOutputDelimited_15.toString());




 


	tos_count_tFileOutputDelimited_15++;

/**
 * [tFileOutputDelimited_15 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_15";
	
	

 



/**
 * [tFileOutputDelimited_15 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_15";
	
	

 



/**
 * [tFileOutputDelimited_15 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_17";
	
	

 



/**
 * [tOracleInput_17 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_17 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_17";
	
	

}
}finally{
	if (rs_tOracleInput_17 != null) {
		rs_tOracleInput_17.close();
	}
	if (stmt_tOracleInput_17 != null) {
		stmt_tOracleInput_17.close();
	}
}

globalMap.put("tOracleInput_17_NB_LINE",nb_line_tOracleInput_17);
 

ok_Hash.put("tOracleInput_17", true);
end_Hash.put("tOracleInput_17", System.currentTimeMillis());

   			if (((Integer)globalMap.get("tOracleOutput_3_NB_LINE_INSERTED"))> ((Integer)globalMap.get("tOracleInput_17_NB_LINE"))) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If24", 0, "true");
					}
				tOracleInput_18Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If24", 0, "false");
					}   	 
   				}



/**
 * [tOracleInput_17 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_15 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_15";
	
	



		
			
					if(outtFileOutputDelimited_15!=null) {
						outtFileOutputDelimited_15.flush();
						outtFileOutputDelimited_15.close();
					}
				
				globalMap.put("tFileOutputDelimited_15_NB_LINE",nb_line_tFileOutputDelimited_15);
				globalMap.put("tFileOutputDelimited_15_FILE_NAME",fileName_tFileOutputDelimited_15);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_15", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row21");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_15", true);
end_Hash.put("tFileOutputDelimited_15", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk27", 0, "ok");
				}
				tFixedFlowInput_2Process(globalMap);



/**
 * [tFileOutputDelimited_15 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_17 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_17";
	
	

 



/**
 * [tOracleInput_17 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_15 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_15";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_15") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_15 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_15");
						if(outtFileOutputDelimited_15!=null) {
							outtFileOutputDelimited_15.flush();
							outtFileOutputDelimited_15.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_15 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_17_SUBPROCESS_STATE", 1);
	}
	


public static class row22Struct implements routines.system.IPersistableRow<row22Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];

	
			    public String TDOCUMENTOS;

				public String getTDOCUMENTOS () {
					return this.TDOCUMENTOS;
				}

				public Boolean TDOCUMENTOSIsNullable(){
				    return true;
				}
				public Boolean TDOCUMENTOSIsKey(){
				    return false;
				}
				public Integer TDOCUMENTOSLength(){
				    return null;
				}
				public Integer TDOCUMENTOSPrecision(){
				    return null;
				}
				public String TDOCUMENTOSDefault(){
				
					return null;
				
				}
				public String TDOCUMENTOSComment(){
				
				    return "";
				
				}
				public String TDOCUMENTOSPattern(){
				
					return "";
				
				}
				public String TDOCUMENTOSOriginalDbColumnName(){
				
					return "TDOCUMENTOS";
				
				}

				
			    public String DOCUMENTO;

				public String getDOCUMENTO () {
					return this.DOCUMENTO;
				}

				public Boolean DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean DOCUMENTOIsKey(){
				    return false;
				}
				public Integer DOCUMENTOLength(){
				    return null;
				}
				public Integer DOCUMENTOPrecision(){
				    return null;
				}
				public String DOCUMENTODefault(){
				
					return null;
				
				}
				public String DOCUMENTOComment(){
				
				    return "";
				
				}
				public String DOCUMENTOPattern(){
				
					return "";
				
				}
				public String DOCUMENTOOriginalDbColumnName(){
				
					return "DOCUMENTO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return null;
				}
				public Integer ERRORPrecision(){
				    return null;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length) {
				if(length < 1024 && commonByteArray_AFI_PRINCIPAL_Entes_Territoriales.length == 0) {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[1024];
				} else {
   					commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length);
			strReturn = new String(commonByteArray_AFI_PRINCIPAL_Entes_Territoriales, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TDOCUMENTOS = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
					this.TDOCUMENTOS = readString(dis);
					
					this.DOCUMENTO = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.TDOCUMENTOS,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.TDOCUMENTOS,dos);
					
					// String
				
						writeString(this.DOCUMENTO,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("TDOCUMENTOS="+TDOCUMENTOS);
		sb.append(",DOCUMENTO="+DOCUMENTO);
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row22Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_18Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_18_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row22Struct row22 = new row22Struct();




	
	/**
	 * [tFileOutputDelimited_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_16", false);
		start_Hash.put("tFileOutputDelimited_16", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row22");
					}
				
		int tos_count_tFileOutputDelimited_16 = 0;
		

String fileName_tFileOutputDelimited_16 = "";
    fileName_tFileOutputDelimited_16 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+"ERRORES_"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_16 = null;
    String extension_tFileOutputDelimited_16 = null;
    String directory_tFileOutputDelimited_16 = null;
    if((fileName_tFileOutputDelimited_16.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_16.lastIndexOf(".") < fileName_tFileOutputDelimited_16.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_16 = fileName_tFileOutputDelimited_16;
            extension_tFileOutputDelimited_16 = "";
        } else {
            fullName_tFileOutputDelimited_16 = fileName_tFileOutputDelimited_16.substring(0, fileName_tFileOutputDelimited_16.lastIndexOf("."));
            extension_tFileOutputDelimited_16 = fileName_tFileOutputDelimited_16.substring(fileName_tFileOutputDelimited_16.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_16 = fileName_tFileOutputDelimited_16.substring(0, fileName_tFileOutputDelimited_16.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_16.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_16 = fileName_tFileOutputDelimited_16.substring(0, fileName_tFileOutputDelimited_16.lastIndexOf("."));
            extension_tFileOutputDelimited_16 = fileName_tFileOutputDelimited_16.substring(fileName_tFileOutputDelimited_16.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_16 = fileName_tFileOutputDelimited_16;
            extension_tFileOutputDelimited_16 = "";
        }
        directory_tFileOutputDelimited_16 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_16 = true;
    java.io.File filetFileOutputDelimited_16 = new java.io.File(fileName_tFileOutputDelimited_16);
    globalMap.put("tFileOutputDelimited_16_FILE_NAME",fileName_tFileOutputDelimited_16);
        if(filetFileOutputDelimited_16.exists()){
            isFileGenerated_tFileOutputDelimited_16 = false;
        }
            int nb_line_tFileOutputDelimited_16 = 0;
            int splitedFileNo_tFileOutputDelimited_16 = 0;
            int currentRow_tFileOutputDelimited_16 = 0;

            final String OUT_DELIM_tFileOutputDelimited_16 = /** Start field tFileOutputDelimited_16:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_16:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_16 = /** Start field tFileOutputDelimited_16:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_16:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_16 != null && directory_tFileOutputDelimited_16.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_16 = new java.io.File(directory_tFileOutputDelimited_16);
                        if(!dir_tFileOutputDelimited_16.exists()) {
                            dir_tFileOutputDelimited_16.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_16 = null;

                        outtFileOutputDelimited_16 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_16, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_16", outtFileOutputDelimited_16);
                                    if(filetFileOutputDelimited_16.length()==0){
                                        outtFileOutputDelimited_16.write("TDOCUMENTOS");
                                            outtFileOutputDelimited_16.write(OUT_DELIM_tFileOutputDelimited_16);
                                        outtFileOutputDelimited_16.write("DOCUMENTO");
                                            outtFileOutputDelimited_16.write(OUT_DELIM_tFileOutputDelimited_16);
                                        outtFileOutputDelimited_16.write("ERROR");
                                        outtFileOutputDelimited_16.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_16);
                                        outtFileOutputDelimited_16.flush();
                                    }


resourceMap.put("nb_line_tFileOutputDelimited_16", nb_line_tFileOutputDelimited_16);

 



/**
 * [tFileOutputDelimited_16 begin ] stop
 */



	
	/**
	 * [tOracleInput_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_18", false);
		start_Hash.put("tOracleInput_18", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_18";
	
	
		int tos_count_tOracleInput_18 = 0;
		
	


	
		    int nb_line_tOracleInput_18 = 0;
		    java.sql.Connection conn_tOracleInput_18 = null;
				conn_tOracleInput_18 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_18 = false;
				boolean isConnectionWrapped_tOracleInput_18 = !(conn_tOracleInput_18 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_18.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_18 = null;
                if (isConnectionWrapped_tOracleInput_18) {
					unwrappedOraConn_tOracleInput_18 = conn_tOracleInput_18.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_18 != null) {
                        isTimeZoneNull_tOracleInput_18 = (unwrappedOraConn_tOracleInput_18.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_18 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_18).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_18) {
					java.sql.Statement stmtGetTZ_tOracleInput_18 = conn_tOracleInput_18.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_18 = stmtGetTZ_tOracleInput_18.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_18 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_18.next()) {
						sessionTimezone_tOracleInput_18 = rsGetTZ_tOracleInput_18.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_18 && unwrappedOraConn_tOracleInput_18 != null) {
                        unwrappedOraConn_tOracleInput_18.setSessionTimeZone(sessionTimezone_tOracleInput_18);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_18).setSessionTimeZone(sessionTimezone_tOracleInput_18);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_18 = conn_tOracleInput_18.createStatement();

		    String dbquery_tOracleInput_18 = "SELECT\nCA.TDOCUMENTOS,\nCA.DOCUMENTO,\n'NO ENCOTRADO' AS ERROR\nFROM AFI_CARCHIVOS CA\nWHERE NOT EXISTS(SELECT * FROM "
+"VM_PERSONAS VP \n                WHERE VP.TIPO_DOCUMENTO = CA.TDOCUMENTOS\n                      AND VP.DOCUMENTO = CA.D"
+"OCUMENTO) AND CA.ARCHIVOS_ID = " + context.infoIdArchivo;
		    

		    globalMap.put("tOracleInput_18_QUERY",dbquery_tOracleInput_18);

		    java.sql.ResultSet rs_tOracleInput_18 = null;

		    try {
		    	rs_tOracleInput_18 = stmt_tOracleInput_18.executeQuery(dbquery_tOracleInput_18);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_18 = rs_tOracleInput_18.getMetaData();
		    	int colQtyInRs_tOracleInput_18 = rsmd_tOracleInput_18.getColumnCount();

		    String tmpContent_tOracleInput_18 = null;
		    
		    
		    while (rs_tOracleInput_18.next()) {
		        nb_line_tOracleInput_18++;
		        
							if(colQtyInRs_tOracleInput_18 < 1) {
								row22.TDOCUMENTOS = null;
							} else {
	                         		
        	row22.TDOCUMENTOS = routines.system.JDBCUtil.getString(rs_tOracleInput_18, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_18 < 2) {
								row22.DOCUMENTO = null;
							} else {
	                         		
        	row22.DOCUMENTO = routines.system.JDBCUtil.getString(rs_tOracleInput_18, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_18 < 3) {
								row22.ERROR = null;
							} else {
	                         		
        	row22.ERROR = routines.system.JDBCUtil.getString(rs_tOracleInput_18, 3, false);
		                    }
					




 



/**
 * [tOracleInput_18 begin ] stop
 */
	
	/**
	 * [tOracleInput_18 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_18";
	
	

 


	tos_count_tOracleInput_18++;

/**
 * [tOracleInput_18 main ] stop
 */
	
	/**
	 * [tOracleInput_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_18";
	
	

 



/**
 * [tOracleInput_18 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_16 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row22"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_16 = new StringBuilder();
                            if(row22.TDOCUMENTOS != null) {
                        sb_tFileOutputDelimited_16.append(
                            row22.TDOCUMENTOS
                        );
                            }
                            sb_tFileOutputDelimited_16.append(OUT_DELIM_tFileOutputDelimited_16);
                            if(row22.DOCUMENTO != null) {
                        sb_tFileOutputDelimited_16.append(
                            row22.DOCUMENTO
                        );
                            }
                            sb_tFileOutputDelimited_16.append(OUT_DELIM_tFileOutputDelimited_16);
                            if(row22.ERROR != null) {
                        sb_tFileOutputDelimited_16.append(
                            row22.ERROR
                        );
                            }
                    sb_tFileOutputDelimited_16.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_16);


                    nb_line_tFileOutputDelimited_16++;
                    resourceMap.put("nb_line_tFileOutputDelimited_16", nb_line_tFileOutputDelimited_16);

                        outtFileOutputDelimited_16.write(sb_tFileOutputDelimited_16.toString());




 


	tos_count_tFileOutputDelimited_16++;

/**
 * [tFileOutputDelimited_16 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_16";
	
	

 



/**
 * [tFileOutputDelimited_16 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_16";
	
	

 



/**
 * [tFileOutputDelimited_16 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_18";
	
	

 



/**
 * [tOracleInput_18 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_18 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_18";
	
	

}
}finally{
	if (rs_tOracleInput_18 != null) {
		rs_tOracleInput_18.close();
	}
	if (stmt_tOracleInput_18 != null) {
		stmt_tOracleInput_18.close();
	}
}

globalMap.put("tOracleInput_18_NB_LINE",nb_line_tOracleInput_18);
 

ok_Hash.put("tOracleInput_18", true);
end_Hash.put("tOracleInput_18", System.currentTimeMillis());




/**
 * [tOracleInput_18 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_16 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_16";
	
	



		
			
					if(outtFileOutputDelimited_16!=null) {
						outtFileOutputDelimited_16.flush();
						outtFileOutputDelimited_16.close();
					}
				
				globalMap.put("tFileOutputDelimited_16_NB_LINE",nb_line_tFileOutputDelimited_16);
				globalMap.put("tFileOutputDelimited_16_FILE_NAME",fileName_tFileOutputDelimited_16);
			
		
		
		resourceMap.put("finish_tFileOutputDelimited_16", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row22");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_16", true);
end_Hash.put("tFileOutputDelimited_16", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk23", 0, "ok");
				}
				tFixedFlowInput_1Process(globalMap);



/**
 * [tFileOutputDelimited_16 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_18 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_18";
	
	

 



/**
 * [tOracleInput_18 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_16 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_16";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_16") == null){ 
			
				
						java.io.Writer outtFileOutputDelimited_16 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_16");
						if(outtFileOutputDelimited_16!=null) {
							outtFileOutputDelimited_16.flush();
							outtFileOutputDelimited_16.close();
						}
					
				
			
		}
	

 



/**
 * [tFileOutputDelimited_16 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_18_SUBPROCESS_STATE", 1);
	}
	


public static class row7Struct implements routines.system.IPersistableComparableLookupRow<row7Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 22;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return "SALUDSIS\".\"ISEQ$$_100689\".nextval";
				
				}
				public String IDComment(){
				
				    return "PK- Llave primaria";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 50;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "Nombre del tipo de archivo";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public Integer CODIGO;

				public Integer getCODIGO () {
					return this.CODIGO;
				}

				public Boolean CODIGOIsNullable(){
				    return true;
				}
				public Boolean CODIGOIsKey(){
				    return false;
				}
				public Integer CODIGOLength(){
				    return 22;
				}
				public Integer CODIGOPrecision(){
				    return 0;
				}
				public String CODIGODefault(){
				
					return null;
				
				}
				public String CODIGOComment(){
				
				    return "Codigo del archivo";
				
				}
				public String CODIGOPattern(){
				
					return "";
				
				}
				public String CODIGOOriginalDbColumnName(){
				
					return "CODIGO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CODIGO == null) ? 0 : this.CODIGO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row7Struct other = (row7Struct) obj;
		
						if (this.CODIGO == null) {
							if (other.CODIGO != null)
								return false;
						
						} else if (!this.CODIGO.equals(other.CODIGO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row7Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.CODIGO = this.CODIGO;
	            
	}

	public void copyKeysDataTo(row7Struct other) {

		other.CODIGO = this.CODIGO;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
						this.CODIGO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
						this.CODIGO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            this.ID = dis.readInt();
					
						this.NOMBRE = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            this.ID = objectIn.readInt();
					
						this.NOMBRE = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
		            	dos.writeInt(this.ID);
					
						writeString(this.NOMBRE, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					objectOut.writeInt(this.ID);
					
						writeString(this.NOMBRE, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",CODIGO="+String.valueOf(CODIGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CODIGO, other.CODIGO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row7Struct row7 = new row7Struct();




	
	/**
	 * [tAdvancedHash_row7 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row7", false);
		start_Hash.put("tAdvancedHash_row7", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tAdvancedHash_row7 = 0;
		

			   		// connection name:row7
			   		// source node:tOracleInput_3 - inputs:(after_tFixedFlowInput_2) outputs:(row7,row7) | target node:tAdvancedHash_row7 - inputs:(row7) outputs:()
			   		// linked node: tMap_3 - inputs:(row6,row7) outputs:(copyOfcopyOfout6)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row7 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct> tHash_Lookup_row7 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row7Struct>getLookup(matchingModeEnum_row7);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row7", tHash_Lookup_row7);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row7 begin ] stop
 */



	
	/**
	 * [tOracleInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_3", false);
		start_Hash.put("tOracleInput_3", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_3";
	
	
		int tos_count_tOracleInput_3 = 0;
		
	


	
		    int nb_line_tOracleInput_3 = 0;
		    java.sql.Connection conn_tOracleInput_3 = null;
				conn_tOracleInput_3 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_3 = false;
				boolean isConnectionWrapped_tOracleInput_3 = !(conn_tOracleInput_3 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_3.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_3 = null;
                if (isConnectionWrapped_tOracleInput_3) {
					unwrappedOraConn_tOracleInput_3 = conn_tOracleInput_3.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_3 != null) {
                        isTimeZoneNull_tOracleInput_3 = (unwrappedOraConn_tOracleInput_3.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_3 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_3).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_3) {
					java.sql.Statement stmtGetTZ_tOracleInput_3 = conn_tOracleInput_3.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_3 = stmtGetTZ_tOracleInput_3.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_3 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_3.next()) {
						sessionTimezone_tOracleInput_3 = rsGetTZ_tOracleInput_3.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_3 && unwrappedOraConn_tOracleInput_3 != null) {
                        unwrappedOraConn_tOracleInput_3.setSessionTimeZone(sessionTimezone_tOracleInput_3);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_3).setSessionTimeZone(sessionTimezone_tOracleInput_3);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_3 = conn_tOracleInput_3.createStatement();

		    String dbquery_tOracleInput_3 = "SELECT \n	TAR.ID, \n	TAR.NOMBRE, \n	TAR.CODIGO\nFROM\n	SALUDSIS.AFI_TARCHIVOS TAR\nWHERE\n	TAR.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_3_QUERY",dbquery_tOracleInput_3);

		    java.sql.ResultSet rs_tOracleInput_3 = null;

		    try {
		    	rs_tOracleInput_3 = stmt_tOracleInput_3.executeQuery(dbquery_tOracleInput_3);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_3 = rs_tOracleInput_3.getMetaData();
		    	int colQtyInRs_tOracleInput_3 = rsmd_tOracleInput_3.getColumnCount();

		    String tmpContent_tOracleInput_3 = null;
		    
		    
		    while (rs_tOracleInput_3.next()) {
		        nb_line_tOracleInput_3++;
		        
							if(colQtyInRs_tOracleInput_3 < 1) {
								row7.ID = 0;
							} else {
		                          
					if(rs_tOracleInput_3.getObject(1) != null) {
						row7.ID = rs_tOracleInput_3.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_3 < 2) {
								row7.NOMBRE = null;
							} else {
	                         		
        	row7.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_3, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_3 < 3) {
								row7.CODIGO = null;
							} else {
		                          
					if(rs_tOracleInput_3.getObject(3) != null) {
						row7.CODIGO = rs_tOracleInput_3.getInt(3);
					} else {
				
						row7.CODIGO = null;
					}
		                    }
					




 



/**
 * [tOracleInput_3 begin ] stop
 */
	
	/**
	 * [tOracleInput_3 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 


	tos_count_tOracleInput_3++;

/**
 * [tOracleInput_3 main ] stop
 */
	
	/**
	 * [tOracleInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row7 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					


			   
			   

					row7Struct row7_HashRow = new row7Struct();
		   	   	   
				
				row7_HashRow.ID = row7.ID;
				
				row7_HashRow.NOMBRE = row7.NOMBRE;
				
				row7_HashRow.CODIGO = row7.CODIGO;
				
			tHash_Lookup_row7.put(row7_HashRow);
			
            




 


	tos_count_tAdvancedHash_row7++;

/**
 * [tAdvancedHash_row7 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

 



/**
 * [tAdvancedHash_row7 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row7 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

 



/**
 * [tAdvancedHash_row7 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_3 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

}
}finally{
	if (rs_tOracleInput_3 != null) {
		rs_tOracleInput_3.close();
	}
	if (stmt_tOracleInput_3 != null) {
		stmt_tOracleInput_3.close();
	}
}

globalMap.put("tOracleInput_3_NB_LINE",nb_line_tOracleInput_3);
 

ok_Hash.put("tOracleInput_3", true);
end_Hash.put("tOracleInput_3", System.currentTimeMillis());




/**
 * [tOracleInput_3 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row7 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

tHash_Lookup_row7.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row7", true);
end_Hash.put("tAdvancedHash_row7", System.currentTimeMillis());




/**
 * [tAdvancedHash_row7 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_3 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row7 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

 



/**
 * [tAdvancedHash_row7 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row14Struct implements routines.system.IPersistableComparableLookupRow<row14Struct> {
    final static byte[] commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
    static byte[] commonByteArray_AFI_PRINCIPAL_Entes_Territoriales = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public int ID;

				public int getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return false;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 22;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return "SALUDSIS\".\"ISEQ$$_100689\".nextval";
				
				}
				public String IDComment(){
				
				    return "PK- Llave primaria";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return false;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 50;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "Nombre del tipo de archivo";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public Integer CODIGO;

				public Integer getCODIGO () {
					return this.CODIGO;
				}

				public Boolean CODIGOIsNullable(){
				    return true;
				}
				public Boolean CODIGOIsKey(){
				    return false;
				}
				public Integer CODIGOLength(){
				    return 22;
				}
				public Integer CODIGOPrecision(){
				    return 0;
				}
				public String CODIGODefault(){
				
					return null;
				
				}
				public String CODIGOComment(){
				
				    return "Codigo del archivo";
				
				}
				public String CODIGOPattern(){
				
					return "";
				
				}
				public String CODIGOOriginalDbColumnName(){
				
					return "CODIGO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CODIGO == null) ? 0 : this.CODIGO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row14Struct other = (row14Struct) obj;
		
						if (this.CODIGO == null) {
							if (other.CODIGO != null)
								return false;
						
						} else if (!this.CODIGO.equals(other.CODIGO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row14Struct other) {

		other.ID = this.ID;
	            other.NOMBRE = this.NOMBRE;
	            other.CODIGO = this.CODIGO;
	            
	}

	public void copyKeysDataTo(row14Struct other) {

		other.CODIGO = this.CODIGO;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
						this.CODIGO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_AFI_PRINCIPAL_Entes_Territoriales) {

        	try {

        		int length = 0;
		
						this.CODIGO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            this.ID = dis.readInt();
					
						this.NOMBRE = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            this.ID = objectIn.readInt();
					
						this.NOMBRE = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
		            	dos.writeInt(this.ID);
					
						writeString(this.NOMBRE, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					objectOut.writeInt(this.ID);
					
						writeString(this.NOMBRE, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",CODIGO="+String.valueOf(CODIGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CODIGO, other.CODIGO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row14Struct row14 = new row14Struct();




	
	/**
	 * [tAdvancedHash_row14 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row14", false);
		start_Hash.put("tAdvancedHash_row14", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tAdvancedHash_row14 = 0;
		

			   		// connection name:row14
			   		// source node:tOracleInput_1 - inputs:(after_tFixedFlowInput_1) outputs:(row14,row14) | target node:tAdvancedHash_row14 - inputs:(row14) outputs:()
			   		// linked node: tMap_1 - inputs:(row2,row14) outputs:(copyOfcopyOfcopyOfout6)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row14 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct> tHash_Lookup_row14 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row14Struct>getLookup(matchingModeEnum_row14);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row14", tHash_Lookup_row14);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row14 begin ] stop
 */



	
	/**
	 * [tOracleInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_1", false);
		start_Hash.put("tOracleInput_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_1";
	
	
		int tos_count_tOracleInput_1 = 0;
		
	


	
		    int nb_line_tOracleInput_1 = 0;
		    java.sql.Connection conn_tOracleInput_1 = null;
				conn_tOracleInput_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_1 = false;
				boolean isConnectionWrapped_tOracleInput_1 = !(conn_tOracleInput_1 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_1.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_1 = null;
                if (isConnectionWrapped_tOracleInput_1) {
					unwrappedOraConn_tOracleInput_1 = conn_tOracleInput_1.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_1 != null) {
                        isTimeZoneNull_tOracleInput_1 = (unwrappedOraConn_tOracleInput_1.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_1 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_1).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_1) {
					java.sql.Statement stmtGetTZ_tOracleInput_1 = conn_tOracleInput_1.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_1 = stmtGetTZ_tOracleInput_1.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_1 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_1.next()) {
						sessionTimezone_tOracleInput_1 = rsGetTZ_tOracleInput_1.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_1 && unwrappedOraConn_tOracleInput_1 != null) {
                        unwrappedOraConn_tOracleInput_1.setSessionTimeZone(sessionTimezone_tOracleInput_1);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_1).setSessionTimeZone(sessionTimezone_tOracleInput_1);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_1 = conn_tOracleInput_1.createStatement();

		    String dbquery_tOracleInput_1 = "SELECT \n	TAR.ID, \n	TAR.NOMBRE, \n	TAR.CODIGO\nFROM\n	SALUDSIS.AFI_TARCHIVOS TAR\nWHERE\n	TAR.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_1_QUERY",dbquery_tOracleInput_1);

		    java.sql.ResultSet rs_tOracleInput_1 = null;

		    try {
		    	rs_tOracleInput_1 = stmt_tOracleInput_1.executeQuery(dbquery_tOracleInput_1);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_1 = rs_tOracleInput_1.getMetaData();
		    	int colQtyInRs_tOracleInput_1 = rsmd_tOracleInput_1.getColumnCount();

		    String tmpContent_tOracleInput_1 = null;
		    
		    
		    while (rs_tOracleInput_1.next()) {
		        nb_line_tOracleInput_1++;
		        
							if(colQtyInRs_tOracleInput_1 < 1) {
								row14.ID = 0;
							} else {
		                          
					if(rs_tOracleInput_1.getObject(1) != null) {
						row14.ID = rs_tOracleInput_1.getInt(1);
					} else {
				
 	                	throw new RuntimeException("Null value in non-Nullable column");
					}
		                    }
							if(colQtyInRs_tOracleInput_1 < 2) {
								row14.NOMBRE = null;
							} else {
	                         		
        	row14.NOMBRE = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 3) {
								row14.CODIGO = null;
							} else {
		                          
					if(rs_tOracleInput_1.getObject(3) != null) {
						row14.CODIGO = rs_tOracleInput_1.getInt(3);
					} else {
				
						row14.CODIGO = null;
					}
		                    }
					




 



/**
 * [tOracleInput_1 begin ] stop
 */
	
	/**
	 * [tOracleInput_1 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 


	tos_count_tOracleInput_1++;

/**
 * [tOracleInput_1 main ] stop
 */
	
	/**
	 * [tOracleInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row14 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					


			   
			   

					row14Struct row14_HashRow = new row14Struct();
		   	   	   
				
				row14_HashRow.ID = row14.ID;
				
				row14_HashRow.NOMBRE = row14.NOMBRE;
				
				row14_HashRow.CODIGO = row14.CODIGO;
				
			tHash_Lookup_row14.put(row14_HashRow);
			
            




 


	tos_count_tAdvancedHash_row14++;

/**
 * [tAdvancedHash_row14 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	

 



/**
 * [tAdvancedHash_row14 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row14 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	

 



/**
 * [tAdvancedHash_row14 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_1 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

}
}finally{
	if (rs_tOracleInput_1 != null) {
		rs_tOracleInput_1.close();
	}
	if (stmt_tOracleInput_1 != null) {
		stmt_tOracleInput_1.close();
	}
}

globalMap.put("tOracleInput_1_NB_LINE",nb_line_tOracleInput_1);
 

ok_Hash.put("tOracleInput_1", true);
end_Hash.put("tOracleInput_1", System.currentTimeMillis());




/**
 * [tOracleInput_1 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row14 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	

tHash_Lookup_row14.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row14", true);
end_Hash.put("tAdvancedHash_row14", System.currentTimeMillis());




/**
 * [tAdvancedHash_row14 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row14 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	

 



/**
 * [tAdvancedHash_row14 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_1_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };


    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final Entes_Territoriales Entes_TerritorialesClass = new Entes_Territoriales();

        int exitCode = Entes_TerritorialesClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = Entes_Territoriales.class.getClassLoader().getResourceAsStream("afi_principal/entes_territoriales_0_3/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = Entes_Territoriales.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }
            
            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("tipoArchivoMinSaludEtapa3MultiafiliacionGenerado", "id_Integer");
                        if(context.getStringValue("tipoArchivoMinSaludEtapa3MultiafiliacionGenerado") == null) {
                            context.tipoArchivoMinSaludEtapa3MultiafiliacionGenerado = null;
                        } else {
                            try{
                                context.tipoArchivoMinSaludEtapa3MultiafiliacionGenerado=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tipoArchivoMinSaludEtapa3MultiafiliacionGenerado"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tipoArchivoMinSaludEtapa3MultiafiliacionGenerado", e.getMessage()));
                                context.tipoArchivoMinSaludEtapa3MultiafiliacionGenerado=null;
                            }
                        }
                        context.setContextType("tipoArchivoMinSaludEtapa2NuevosRegistros", "id_Integer");
                        if(context.getStringValue("tipoArchivoMinSaludEtapa2NuevosRegistros") == null) {
                            context.tipoArchivoMinSaludEtapa2NuevosRegistros = null;
                        } else {
                            try{
                                context.tipoArchivoMinSaludEtapa2NuevosRegistros=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tipoArchivoMinSaludEtapa2NuevosRegistros"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tipoArchivoMinSaludEtapa2NuevosRegistros", e.getMessage()));
                                context.tipoArchivoMinSaludEtapa2NuevosRegistros=null;
                            }
                        }
                        context.setContextType("tipoArchivoEntesTerritoriales", "id_Integer");
                        if(context.getStringValue("tipoArchivoEntesTerritoriales") == null) {
                            context.tipoArchivoEntesTerritoriales = null;
                        } else {
                            try{
                                context.tipoArchivoEntesTerritoriales=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tipoArchivoEntesTerritoriales"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tipoArchivoEntesTerritoriales", e.getMessage()));
                                context.tipoArchivoEntesTerritoriales=null;
                            }
                        }
                        context.setContextType("tipoArchivoMinSaludEtapa2Novedades", "id_Integer");
                        if(context.getStringValue("tipoArchivoMinSaludEtapa2Novedades") == null) {
                            context.tipoArchivoMinSaludEtapa2Novedades = null;
                        } else {
                            try{
                                context.tipoArchivoMinSaludEtapa2Novedades=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tipoArchivoMinSaludEtapa2Novedades"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tipoArchivoMinSaludEtapa2Novedades", e.getMessage()));
                                context.tipoArchivoMinSaludEtapa2Novedades=null;
                            }
                        }
                        context.setContextType("tipoArchivoMinSaludEtapa2NovedadesGenerado", "id_Integer");
                        if(context.getStringValue("tipoArchivoMinSaludEtapa2NovedadesGenerado") == null) {
                            context.tipoArchivoMinSaludEtapa2NovedadesGenerado = null;
                        } else {
                            try{
                                context.tipoArchivoMinSaludEtapa2NovedadesGenerado=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tipoArchivoMinSaludEtapa2NovedadesGenerado"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tipoArchivoMinSaludEtapa2NovedadesGenerado", e.getMessage()));
                                context.tipoArchivoMinSaludEtapa2NovedadesGenerado=null;
                            }
                        }
                        context.setContextType("tipoArchivoMinSaludEtapa2NuevosRegistrosGenerado", "id_Integer");
                        if(context.getStringValue("tipoArchivoMinSaludEtapa2NuevosRegistrosGenerado") == null) {
                            context.tipoArchivoMinSaludEtapa2NuevosRegistrosGenerado = null;
                        } else {
                            try{
                                context.tipoArchivoMinSaludEtapa2NuevosRegistrosGenerado=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tipoArchivoMinSaludEtapa2NuevosRegistrosGenerado"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tipoArchivoMinSaludEtapa2NuevosRegistrosGenerado", e.getMessage()));
                                context.tipoArchivoMinSaludEtapa2NuevosRegistrosGenerado=null;
                            }
                        }
                        context.setContextType("tipoArchivoMinSaludEtapa3Multiafiliacion", "id_Integer");
                        if(context.getStringValue("tipoArchivoMinSaludEtapa3Multiafiliacion") == null) {
                            context.tipoArchivoMinSaludEtapa3Multiafiliacion = null;
                        } else {
                            try{
                                context.tipoArchivoMinSaludEtapa3Multiafiliacion=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tipoArchivoMinSaludEtapa3Multiafiliacion"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tipoArchivoMinSaludEtapa3Multiafiliacion", e.getMessage()));
                                context.tipoArchivoMinSaludEtapa3Multiafiliacion=null;
                            }
                        }
                        context.setContextType("tipoArchivoFedevidaGenerado", "id_Integer");
                        if(context.getStringValue("tipoArchivoFedevidaGenerado") == null) {
                            context.tipoArchivoFedevidaGenerado = null;
                        } else {
                            try{
                                context.tipoArchivoFedevidaGenerado=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tipoArchivoFedevidaGenerado"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tipoArchivoFedevidaGenerado", e.getMessage()));
                                context.tipoArchivoFedevidaGenerado=null;
                            }
                        }
                        context.setContextType("tipoArchivoEntesGenerado", "id_Integer");
                        if(context.getStringValue("tipoArchivoEntesGenerado") == null) {
                            context.tipoArchivoEntesGenerado = null;
                        } else {
                            try{
                                context.tipoArchivoEntesGenerado=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tipoArchivoEntesGenerado"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tipoArchivoEntesGenerado", e.getMessage()));
                                context.tipoArchivoEntesGenerado=null;
                            }
                        }
                        context.setContextType("tipoArchivoFedevida", "id_Integer");
                        if(context.getStringValue("tipoArchivoFedevida") == null) {
                            context.tipoArchivoFedevida = null;
                        } else {
                            try{
                                context.tipoArchivoFedevida=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tipoArchivoFedevida"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tipoArchivoFedevida", e.getMessage()));
                                context.tipoArchivoFedevida=null;
                            }
                        }
                        context.setContextType("tipoJobProceso", "id_Integer");
                        if(context.getStringValue("tipoJobProceso") == null) {
                            context.tipoJobProceso = null;
                        } else {
                            try{
                                context.tipoJobProceso=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tipoJobProceso"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tipoJobProceso", e.getMessage()));
                                context.tipoJobProceso=null;
                            }
                        }
                        context.setContextType("idProceso", "id_Integer");
                        if(context.getStringValue("idProceso") == null) {
                            context.idProceso = null;
                        } else {
                            try{
                                context.idProceso=routines.system.ParserUtils.parseTo_Integer (context.getProperty("idProceso"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "idProceso", e.getMessage()));
                                context.idProceso=null;
                            }
                        }
                        context.setContextType("tipoProceso", "id_Integer");
                        if(context.getStringValue("tipoProceso") == null) {
                            context.tipoProceso = null;
                        } else {
                            try{
                                context.tipoProceso=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tipoProceso"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tipoProceso", e.getMessage()));
                                context.tipoProceso=null;
                            }
                        }
                        context.setContextType("descripcionProceso", "id_String");
                        if(context.getStringValue("descripcionProceso") == null) {
                            context.descripcionProceso = null;
                        } else {
                            context.descripcionProceso=(String) context.getProperty("descripcionProceso");
                        }
                        context.setContextType("fileSystem_Path", "id_String");
                        if(context.getStringValue("fileSystem_Path") == null) {
                            context.fileSystem_Path = null;
                        } else {
                            context.fileSystem_Path=(String) context.getProperty("fileSystem_Path");
                        }
                        context.setContextType("fileSystem_Area", "id_String");
                        if(context.getStringValue("fileSystem_Area") == null) {
                            context.fileSystem_Area = null;
                        } else {
                            context.fileSystem_Area=(String) context.getProperty("fileSystem_Area");
                        }
                        context.setContextType("infoNombreArchivo", "id_String");
                        if(context.getStringValue("infoNombreArchivo") == null) {
                            context.infoNombreArchivo = null;
                        } else {
                            context.infoNombreArchivo=(String) context.getProperty("infoNombreArchivo");
                        }
                        context.setContextType("infoUsuarioIdArchivo", "id_Integer");
                        if(context.getStringValue("infoUsuarioIdArchivo") == null) {
                            context.infoUsuarioIdArchivo = null;
                        } else {
                            try{
                                context.infoUsuarioIdArchivo=routines.system.ParserUtils.parseTo_Integer (context.getProperty("infoUsuarioIdArchivo"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "infoUsuarioIdArchivo", e.getMessage()));
                                context.infoUsuarioIdArchivo=null;
                            }
                        }
                        context.setContextType("infoIdArchivo", "id_Integer");
                        if(context.getStringValue("infoIdArchivo") == null) {
                            context.infoIdArchivo = null;
                        } else {
                            try{
                                context.infoIdArchivo=routines.system.ParserUtils.parseTo_Integer (context.getProperty("infoIdArchivo"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "infoIdArchivo", e.getMessage()));
                                context.infoIdArchivo=null;
                            }
                        }
                        context.setContextType("infoTipoArchivo", "id_Integer");
                        if(context.getStringValue("infoTipoArchivo") == null) {
                            context.infoTipoArchivo = null;
                        } else {
                            try{
                                context.infoTipoArchivo=routines.system.ParserUtils.parseTo_Integer (context.getProperty("infoTipoArchivo"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "infoTipoArchivo", e.getMessage()));
                                context.infoTipoArchivo=null;
                            }
                        }
                        context.setContextType("auxAumentoRegistros", "id_Integer");
                        if(context.getStringValue("auxAumentoRegistros") == null) {
                            context.auxAumentoRegistros = null;
                        } else {
                            try{
                                context.auxAumentoRegistros=routines.system.ParserUtils.parseTo_Integer (context.getProperty("auxAumentoRegistros"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "auxAumentoRegistros", e.getMessage()));
                                context.auxAumentoRegistros=null;
                            }
                        }
                        context.setContextType("archivoConfiguracion", "id_String");
                        if(context.getStringValue("archivoConfiguracion") == null) {
                            context.archivoConfiguracion = null;
                        } else {
                            context.archivoConfiguracion=(String) context.getProperty("archivoConfiguracion");
                        }
                        context.setContextType("outCodigo", "id_Boolean");
                        if(context.getStringValue("outCodigo") == null) {
                            context.outCodigo = null;
                        } else {
                            try{
                                context.outCodigo=routines.system.ParserUtils.parseTo_Boolean (context.getProperty("outCodigo"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "outCodigo", e.getMessage()));
                                context.outCodigo=null;
                            }
                        }
                        context.setContextType("auxPosicionRegistros", "id_Integer");
                        if(context.getStringValue("auxPosicionRegistros") == null) {
                            context.auxPosicionRegistros = null;
                        } else {
                            try{
                                context.auxPosicionRegistros=routines.system.ParserUtils.parseTo_Integer (context.getProperty("auxPosicionRegistros"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "auxPosicionRegistros", e.getMessage()));
                                context.auxPosicionRegistros=null;
                            }
                        }
                        context.setContextType("archivoSalida", "id_String");
                        if(context.getStringValue("archivoSalida") == null) {
                            context.archivoSalida = null;
                        } else {
                            context.archivoSalida=(String) context.getProperty("archivoSalida");
                        }
                        context.setContextType("infoConteoRegistros", "id_Integer");
                        if(context.getStringValue("infoConteoRegistros") == null) {
                            context.infoConteoRegistros = null;
                        } else {
                            try{
                                context.infoConteoRegistros=routines.system.ParserUtils.parseTo_Integer (context.getProperty("infoConteoRegistros"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "infoConteoRegistros", e.getMessage()));
                                context.infoConteoRegistros=null;
                            }
                        }
                        context.setContextType("DOCUMENTO", "id_String");
                        if(context.getStringValue("DOCUMENTO") == null) {
                            context.DOCUMENTO = null;
                        } else {
                            context.DOCUMENTO=(String) context.getProperty("DOCUMENTO");
                        }
                        context.setContextType("TIPO_DOCUMENTO", "id_Integer");
                        if(context.getStringValue("TIPO_DOCUMENTO") == null) {
                            context.TIPO_DOCUMENTO = null;
                        } else {
                            try{
                                context.TIPO_DOCUMENTO=routines.system.ParserUtils.parseTo_Integer (context.getProperty("TIPO_DOCUMENTO"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "TIPO_DOCUMENTO", e.getMessage()));
                                context.TIPO_DOCUMENTO=null;
                            }
                        }
                        context.setContextType("mail_PasswordMail", "id_String");
                        if(context.getStringValue("mail_PasswordMail") == null) {
                            context.mail_PasswordMail = null;
                        } else {
                            context.mail_PasswordMail=(String) context.getProperty("mail_PasswordMail");
                        }
                        context.setContextType("mail_SMTPPort", "id_String");
                        if(context.getStringValue("mail_SMTPPort") == null) {
                            context.mail_SMTPPort = null;
                        } else {
                            context.mail_SMTPPort=(String) context.getProperty("mail_SMTPPort");
                        }
                        context.setContextType("mail_UsernameMail", "id_String");
                        if(context.getStringValue("mail_UsernameMail") == null) {
                            context.mail_UsernameMail = null;
                        } else {
                            context.mail_UsernameMail=(String) context.getProperty("mail_UsernameMail");
                        }
                        context.setContextType("mail_SMTPHost", "id_String");
                        if(context.getStringValue("mail_SMTPHost") == null) {
                            context.mail_SMTPHost = null;
                        } else {
                            context.mail_SMTPHost=(String) context.getProperty("mail_SMTPHost");
                        }
                        context.setContextType("ID_ARCHIVOS", "id_BigDecimal");
                        if(context.getStringValue("ID_ARCHIVOS") == null) {
                            context.ID_ARCHIVOS = null;
                        } else {
                            try{
                                context.ID_ARCHIVOS=routines.system.ParserUtils.parseTo_BigDecimal (context.getProperty("ID_ARCHIVOS"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "ID_ARCHIVOS", e.getMessage()));
                                context.ID_ARCHIVOS=null;
                            }
                        }
                        context.setContextType("estArchivoActivo", "id_Integer");
                        if(context.getStringValue("estArchivoActivo") == null) {
                            context.estArchivoActivo = null;
                        } else {
                            try{
                                context.estArchivoActivo=routines.system.ParserUtils.parseTo_Integer (context.getProperty("estArchivoActivo"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "estArchivoActivo", e.getMessage()));
                                context.estArchivoActivo=null;
                            }
                        }
                        context.setContextType("estArchivoCancelado", "id_Integer");
                        if(context.getStringValue("estArchivoCancelado") == null) {
                            context.estArchivoCancelado = null;
                        } else {
                            try{
                                context.estArchivoCancelado=routines.system.ParserUtils.parseTo_Integer (context.getProperty("estArchivoCancelado"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "estArchivoCancelado", e.getMessage()));
                                context.estArchivoCancelado=null;
                            }
                        }
                        context.setContextType("estArchivoEnProceso", "id_Integer");
                        if(context.getStringValue("estArchivoEnProceso") == null) {
                            context.estArchivoEnProceso = null;
                        } else {
                            try{
                                context.estArchivoEnProceso=routines.system.ParserUtils.parseTo_Integer (context.getProperty("estArchivoEnProceso"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "estArchivoEnProceso", e.getMessage()));
                                context.estArchivoEnProceso=null;
                            }
                        }
                        context.setContextType("estArchivoErrorArchivo", "id_Integer");
                        if(context.getStringValue("estArchivoErrorArchivo") == null) {
                            context.estArchivoErrorArchivo = null;
                        } else {
                            try{
                                context.estArchivoErrorArchivo=routines.system.ParserUtils.parseTo_Integer (context.getProperty("estArchivoErrorArchivo"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "estArchivoErrorArchivo", e.getMessage()));
                                context.estArchivoErrorArchivo=null;
                            }
                        }
                        context.setContextType("estArchivoErrorProcesamiento", "id_Integer");
                        if(context.getStringValue("estArchivoErrorProcesamiento") == null) {
                            context.estArchivoErrorProcesamiento = null;
                        } else {
                            try{
                                context.estArchivoErrorProcesamiento=routines.system.ParserUtils.parseTo_Integer (context.getProperty("estArchivoErrorProcesamiento"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "estArchivoErrorProcesamiento", e.getMessage()));
                                context.estArchivoErrorProcesamiento=null;
                            }
                        }
                        context.setContextType("estArchivoInactivo", "id_Integer");
                        if(context.getStringValue("estArchivoInactivo") == null) {
                            context.estArchivoInactivo = null;
                        } else {
                            try{
                                context.estArchivoInactivo=routines.system.ParserUtils.parseTo_Integer (context.getProperty("estArchivoInactivo"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "estArchivoInactivo", e.getMessage()));
                                context.estArchivoInactivo=null;
                            }
                        }
                        context.setContextType("estArchivoPausado", "id_Integer");
                        if(context.getStringValue("estArchivoPausado") == null) {
                            context.estArchivoPausado = null;
                        } else {
                            try{
                                context.estArchivoPausado=routines.system.ParserUtils.parseTo_Integer (context.getProperty("estArchivoPausado"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "estArchivoPausado", e.getMessage()));
                                context.estArchivoPausado=null;
                            }
                        }
                        context.setContextType("estArchivoProcesado", "id_Integer");
                        if(context.getStringValue("estArchivoProcesado") == null) {
                            context.estArchivoProcesado = null;
                        } else {
                            try{
                                context.estArchivoProcesado=routines.system.ParserUtils.parseTo_Integer (context.getProperty("estArchivoProcesado"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "estArchivoProcesado", e.getMessage()));
                                context.estArchivoProcesado=null;
                            }
                        }
                        context.setContextType("estRegistroActivo", "id_Integer");
                        if(context.getStringValue("estRegistroActivo") == null) {
                            context.estRegistroActivo = null;
                        } else {
                            try{
                                context.estRegistroActivo=routines.system.ParserUtils.parseTo_Integer (context.getProperty("estRegistroActivo"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "estRegistroActivo", e.getMessage()));
                                context.estRegistroActivo=null;
                            }
                        }
                        context.setContextType("estRegistroInactivo", "id_Integer");
                        if(context.getStringValue("estRegistroInactivo") == null) {
                            context.estRegistroInactivo = null;
                        } else {
                            try{
                                context.estRegistroInactivo=routines.system.ParserUtils.parseTo_Integer (context.getProperty("estRegistroInactivo"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "estRegistroInactivo", e.getMessage()));
                                context.estRegistroInactivo=null;
                            }
                        }
                        context.setContextType("infoTipoArchivoRespuesta", "id_Integer");
                        if(context.getStringValue("infoTipoArchivoRespuesta") == null) {
                            context.infoTipoArchivoRespuesta = null;
                        } else {
                            try{
                                context.infoTipoArchivoRespuesta=routines.system.ParserUtils.parseTo_Integer (context.getProperty("infoTipoArchivoRespuesta"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "infoTipoArchivoRespuesta", e.getMessage()));
                                context.infoTipoArchivoRespuesta=null;
                            }
                        }
                        context.setContextType("oracle_AdditionalParams", "id_String");
                        if(context.getStringValue("oracle_AdditionalParams") == null) {
                            context.oracle_AdditionalParams = null;
                        } else {
                            context.oracle_AdditionalParams=(String) context.getProperty("oracle_AdditionalParams");
                        }
                        context.setContextType("oracle_Host", "id_String");
                        if(context.getStringValue("oracle_Host") == null) {
                            context.oracle_Host = null;
                        } else {
                            context.oracle_Host=(String) context.getProperty("oracle_Host");
                        }
                        context.setContextType("oracle_Password", "id_String");
                        if(context.getStringValue("oracle_Password") == null) {
                            context.oracle_Password = null;
                        } else {
                            context.oracle_Password=(String) context.getProperty("oracle_Password");
                        }
                        context.setContextType("oracle_Port", "id_String");
                        if(context.getStringValue("oracle_Port") == null) {
                            context.oracle_Port = null;
                        } else {
                            context.oracle_Port=(String) context.getProperty("oracle_Port");
                        }
                        context.setContextType("oracle_Schema", "id_String");
                        if(context.getStringValue("oracle_Schema") == null) {
                            context.oracle_Schema = null;
                        } else {
                            context.oracle_Schema=(String) context.getProperty("oracle_Schema");
                        }
                        context.setContextType("oracle_ServiceName", "id_String");
                        if(context.getStringValue("oracle_ServiceName") == null) {
                            context.oracle_ServiceName = null;
                        } else {
                            context.oracle_ServiceName=(String) context.getProperty("oracle_ServiceName");
                        }
                        context.setContextType("oracle_Sid", "id_String");
                        if(context.getStringValue("oracle_Sid") == null) {
                            context.oracle_Sid = null;
                        } else {
                            context.oracle_Sid=(String) context.getProperty("oracle_Sid");
                        }
                        context.setContextType("oracle_User", "id_String");
                        if(context.getStringValue("oracle_User") == null) {
                            context.oracle_User = null;
                        } else {
                            context.oracle_User=(String) context.getProperty("oracle_User");
                        }
                        context.setContextType("tipoArchivoCompendioSalud", "id_Integer");
                        if(context.getStringValue("tipoArchivoCompendioSalud") == null) {
                            context.tipoArchivoCompendioSalud = null;
                        } else {
                            try{
                                context.tipoArchivoCompendioSalud=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tipoArchivoCompendioSalud"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tipoArchivoCompendioSalud", e.getMessage()));
                                context.tipoArchivoCompendioSalud=null;
                            }
                        }
                        context.setContextType("tipoArchivoCompendioSaludGenerado", "id_Integer");
                        if(context.getStringValue("tipoArchivoCompendioSaludGenerado") == null) {
                            context.tipoArchivoCompendioSaludGenerado = null;
                        } else {
                            try{
                                context.tipoArchivoCompendioSaludGenerado=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tipoArchivoCompendioSaludGenerado"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tipoArchivoCompendioSaludGenerado", e.getMessage()));
                                context.tipoArchivoCompendioSaludGenerado=null;
                            }
                        }
                        context.setContextType("tipoArchivoCruceErrores", "id_Integer");
                        if(context.getStringValue("tipoArchivoCruceErrores") == null) {
                            context.tipoArchivoCruceErrores = null;
                        } else {
                            try{
                                context.tipoArchivoCruceErrores=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tipoArchivoCruceErrores"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tipoArchivoCruceErrores", e.getMessage()));
                                context.tipoArchivoCruceErrores=null;
                            }
                        }
                        context.setContextType("tipoJobCompendioSalud", "id_Integer");
                        if(context.getStringValue("tipoJobCompendioSalud") == null) {
                            context.tipoJobCompendioSalud = null;
                        } else {
                            try{
                                context.tipoJobCompendioSalud=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tipoJobCompendioSalud"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tipoJobCompendioSalud", e.getMessage()));
                                context.tipoJobCompendioSalud=null;
                            }
                        }
                        context.setContextType("tipoJobEntesTerritoriales", "id_Integer");
                        if(context.getStringValue("tipoJobEntesTerritoriales") == null) {
                            context.tipoJobEntesTerritoriales = null;
                        } else {
                            try{
                                context.tipoJobEntesTerritoriales=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tipoJobEntesTerritoriales"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tipoJobEntesTerritoriales", e.getMessage()));
                                context.tipoJobEntesTerritoriales=null;
                            }
                        }
                        context.setContextType("tipoJobFedevida", "id_Integer");
                        if(context.getStringValue("tipoJobFedevida") == null) {
                            context.tipoJobFedevida = null;
                        } else {
                            try{
                                context.tipoJobFedevida=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tipoJobFedevida"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tipoJobFedevida", e.getMessage()));
                                context.tipoJobFedevida=null;
                            }
                        }
                        context.setContextType("tipoJobMinsaludEtapa2Novedades", "id_Integer");
                        if(context.getStringValue("tipoJobMinsaludEtapa2Novedades") == null) {
                            context.tipoJobMinsaludEtapa2Novedades = null;
                        } else {
                            try{
                                context.tipoJobMinsaludEtapa2Novedades=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tipoJobMinsaludEtapa2Novedades"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tipoJobMinsaludEtapa2Novedades", e.getMessage()));
                                context.tipoJobMinsaludEtapa2Novedades=null;
                            }
                        }
                        context.setContextType("tipoJobMinsaludEtapa2NuevosRegistros", "id_Integer");
                        if(context.getStringValue("tipoJobMinsaludEtapa2NuevosRegistros") == null) {
                            context.tipoJobMinsaludEtapa2NuevosRegistros = null;
                        } else {
                            try{
                                context.tipoJobMinsaludEtapa2NuevosRegistros=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tipoJobMinsaludEtapa2NuevosRegistros"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tipoJobMinsaludEtapa2NuevosRegistros", e.getMessage()));
                                context.tipoJobMinsaludEtapa2NuevosRegistros=null;
                            }
                        }
                        context.setContextType("tipoJobMinsaludEtapa3Multiafiliacion", "id_Integer");
                        if(context.getStringValue("tipoJobMinsaludEtapa3Multiafiliacion") == null) {
                            context.tipoJobMinsaludEtapa3Multiafiliacion = null;
                        } else {
                            try{
                                context.tipoJobMinsaludEtapa3Multiafiliacion=routines.system.ParserUtils.parseTo_Integer (context.getProperty("tipoJobMinsaludEtapa3Multiafiliacion"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "tipoJobMinsaludEtapa3Multiafiliacion", e.getMessage()));
                                context.tipoJobMinsaludEtapa3Multiafiliacion=null;
                            }
                        }
                        context.setContextType("auxAfiliadosCriterio", "id_String");
                        if(context.getStringValue("auxAfiliadosCriterio") == null) {
                            context.auxAfiliadosCriterio = null;
                        } else {
                            context.auxAfiliadosCriterio=(String) context.getProperty("auxAfiliadosCriterio");
                        }
                        context.setContextType("auxAfiliadosCriterioAct", "id_String");
                        if(context.getStringValue("auxAfiliadosCriterioAct") == null) {
                            context.auxAfiliadosCriterioAct = null;
                        } else {
                            context.auxAfiliadosCriterioAct=(String) context.getProperty("auxAfiliadosCriterioAct");
                        }
                        context.setContextType("auxAfiliadosCriterioInact", "id_String");
                        if(context.getStringValue("auxAfiliadosCriterioInact") == null) {
                            context.auxAfiliadosCriterioInact = null;
                        } else {
                            context.auxAfiliadosCriterioInact=(String) context.getProperty("auxAfiliadosCriterioInact");
                        }
                        context.setContextType("auxCriterioActual", "id_Integer");
                        if(context.getStringValue("auxCriterioActual") == null) {
                            context.auxCriterioActual = null;
                        } else {
                            try{
                                context.auxCriterioActual=routines.system.ParserUtils.parseTo_Integer (context.getProperty("auxCriterioActual"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "auxCriterioActual", e.getMessage()));
                                context.auxCriterioActual=null;
                            }
                        }
                        context.setContextType("auxPrimerLoop", "id_Boolean");
                        if(context.getStringValue("auxPrimerLoop") == null) {
                            context.auxPrimerLoop = null;
                        } else {
                            try{
                                context.auxPrimerLoop=routines.system.ParserUtils.parseTo_Boolean (context.getProperty("auxPrimerLoop"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "auxPrimerLoop", e.getMessage()));
                                context.auxPrimerLoop=null;
                            }
                        }
                        context.setContextType("auxRango", "id_String");
                        if(context.getStringValue("auxRango") == null) {
                            context.auxRango = null;
                        } else {
                            context.auxRango=(String) context.getProperty("auxRango");
                        }
                        context.setContextType("suma", "id_Integer");
                        if(context.getStringValue("suma") == null) {
                            context.suma = null;
                        } else {
                            try{
                                context.suma=routines.system.ParserUtils.parseTo_Integer (context.getProperty("suma"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "suma", e.getMessage()));
                                context.suma=null;
                            }
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("tipoArchivoMinSaludEtapa3MultiafiliacionGenerado")) {
                context.tipoArchivoMinSaludEtapa3MultiafiliacionGenerado = (Integer) parentContextMap.get("tipoArchivoMinSaludEtapa3MultiafiliacionGenerado");
            }if (parentContextMap.containsKey("tipoArchivoMinSaludEtapa2NuevosRegistros")) {
                context.tipoArchivoMinSaludEtapa2NuevosRegistros = (Integer) parentContextMap.get("tipoArchivoMinSaludEtapa2NuevosRegistros");
            }if (parentContextMap.containsKey("tipoArchivoEntesTerritoriales")) {
                context.tipoArchivoEntesTerritoriales = (Integer) parentContextMap.get("tipoArchivoEntesTerritoriales");
            }if (parentContextMap.containsKey("tipoArchivoMinSaludEtapa2Novedades")) {
                context.tipoArchivoMinSaludEtapa2Novedades = (Integer) parentContextMap.get("tipoArchivoMinSaludEtapa2Novedades");
            }if (parentContextMap.containsKey("tipoArchivoMinSaludEtapa2NovedadesGenerado")) {
                context.tipoArchivoMinSaludEtapa2NovedadesGenerado = (Integer) parentContextMap.get("tipoArchivoMinSaludEtapa2NovedadesGenerado");
            }if (parentContextMap.containsKey("tipoArchivoMinSaludEtapa2NuevosRegistrosGenerado")) {
                context.tipoArchivoMinSaludEtapa2NuevosRegistrosGenerado = (Integer) parentContextMap.get("tipoArchivoMinSaludEtapa2NuevosRegistrosGenerado");
            }if (parentContextMap.containsKey("tipoArchivoMinSaludEtapa3Multiafiliacion")) {
                context.tipoArchivoMinSaludEtapa3Multiafiliacion = (Integer) parentContextMap.get("tipoArchivoMinSaludEtapa3Multiafiliacion");
            }if (parentContextMap.containsKey("tipoArchivoFedevidaGenerado")) {
                context.tipoArchivoFedevidaGenerado = (Integer) parentContextMap.get("tipoArchivoFedevidaGenerado");
            }if (parentContextMap.containsKey("tipoArchivoEntesGenerado")) {
                context.tipoArchivoEntesGenerado = (Integer) parentContextMap.get("tipoArchivoEntesGenerado");
            }if (parentContextMap.containsKey("tipoArchivoFedevida")) {
                context.tipoArchivoFedevida = (Integer) parentContextMap.get("tipoArchivoFedevida");
            }if (parentContextMap.containsKey("tipoJobProceso")) {
                context.tipoJobProceso = (Integer) parentContextMap.get("tipoJobProceso");
            }if (parentContextMap.containsKey("idProceso")) {
                context.idProceso = (Integer) parentContextMap.get("idProceso");
            }if (parentContextMap.containsKey("tipoProceso")) {
                context.tipoProceso = (Integer) parentContextMap.get("tipoProceso");
            }if (parentContextMap.containsKey("descripcionProceso")) {
                context.descripcionProceso = (String) parentContextMap.get("descripcionProceso");
            }if (parentContextMap.containsKey("fileSystem_Path")) {
                context.fileSystem_Path = (String) parentContextMap.get("fileSystem_Path");
            }if (parentContextMap.containsKey("fileSystem_Area")) {
                context.fileSystem_Area = (String) parentContextMap.get("fileSystem_Area");
            }if (parentContextMap.containsKey("infoNombreArchivo")) {
                context.infoNombreArchivo = (String) parentContextMap.get("infoNombreArchivo");
            }if (parentContextMap.containsKey("infoUsuarioIdArchivo")) {
                context.infoUsuarioIdArchivo = (Integer) parentContextMap.get("infoUsuarioIdArchivo");
            }if (parentContextMap.containsKey("infoIdArchivo")) {
                context.infoIdArchivo = (Integer) parentContextMap.get("infoIdArchivo");
            }if (parentContextMap.containsKey("infoTipoArchivo")) {
                context.infoTipoArchivo = (Integer) parentContextMap.get("infoTipoArchivo");
            }if (parentContextMap.containsKey("auxAumentoRegistros")) {
                context.auxAumentoRegistros = (Integer) parentContextMap.get("auxAumentoRegistros");
            }if (parentContextMap.containsKey("archivoConfiguracion")) {
                context.archivoConfiguracion = (String) parentContextMap.get("archivoConfiguracion");
            }if (parentContextMap.containsKey("outCodigo")) {
                context.outCodigo = (Boolean) parentContextMap.get("outCodigo");
            }if (parentContextMap.containsKey("auxPosicionRegistros")) {
                context.auxPosicionRegistros = (Integer) parentContextMap.get("auxPosicionRegistros");
            }if (parentContextMap.containsKey("archivoSalida")) {
                context.archivoSalida = (String) parentContextMap.get("archivoSalida");
            }if (parentContextMap.containsKey("infoConteoRegistros")) {
                context.infoConteoRegistros = (Integer) parentContextMap.get("infoConteoRegistros");
            }if (parentContextMap.containsKey("DOCUMENTO")) {
                context.DOCUMENTO = (String) parentContextMap.get("DOCUMENTO");
            }if (parentContextMap.containsKey("TIPO_DOCUMENTO")) {
                context.TIPO_DOCUMENTO = (Integer) parentContextMap.get("TIPO_DOCUMENTO");
            }if (parentContextMap.containsKey("mail_PasswordMail")) {
                context.mail_PasswordMail = (String) parentContextMap.get("mail_PasswordMail");
            }if (parentContextMap.containsKey("mail_SMTPPort")) {
                context.mail_SMTPPort = (String) parentContextMap.get("mail_SMTPPort");
            }if (parentContextMap.containsKey("mail_UsernameMail")) {
                context.mail_UsernameMail = (String) parentContextMap.get("mail_UsernameMail");
            }if (parentContextMap.containsKey("mail_SMTPHost")) {
                context.mail_SMTPHost = (String) parentContextMap.get("mail_SMTPHost");
            }if (parentContextMap.containsKey("ID_ARCHIVOS")) {
                context.ID_ARCHIVOS = (BigDecimal) parentContextMap.get("ID_ARCHIVOS");
            }if (parentContextMap.containsKey("estArchivoActivo")) {
                context.estArchivoActivo = (Integer) parentContextMap.get("estArchivoActivo");
            }if (parentContextMap.containsKey("estArchivoCancelado")) {
                context.estArchivoCancelado = (Integer) parentContextMap.get("estArchivoCancelado");
            }if (parentContextMap.containsKey("estArchivoEnProceso")) {
                context.estArchivoEnProceso = (Integer) parentContextMap.get("estArchivoEnProceso");
            }if (parentContextMap.containsKey("estArchivoErrorArchivo")) {
                context.estArchivoErrorArchivo = (Integer) parentContextMap.get("estArchivoErrorArchivo");
            }if (parentContextMap.containsKey("estArchivoErrorProcesamiento")) {
                context.estArchivoErrorProcesamiento = (Integer) parentContextMap.get("estArchivoErrorProcesamiento");
            }if (parentContextMap.containsKey("estArchivoInactivo")) {
                context.estArchivoInactivo = (Integer) parentContextMap.get("estArchivoInactivo");
            }if (parentContextMap.containsKey("estArchivoPausado")) {
                context.estArchivoPausado = (Integer) parentContextMap.get("estArchivoPausado");
            }if (parentContextMap.containsKey("estArchivoProcesado")) {
                context.estArchivoProcesado = (Integer) parentContextMap.get("estArchivoProcesado");
            }if (parentContextMap.containsKey("estRegistroActivo")) {
                context.estRegistroActivo = (Integer) parentContextMap.get("estRegistroActivo");
            }if (parentContextMap.containsKey("estRegistroInactivo")) {
                context.estRegistroInactivo = (Integer) parentContextMap.get("estRegistroInactivo");
            }if (parentContextMap.containsKey("infoTipoArchivoRespuesta")) {
                context.infoTipoArchivoRespuesta = (Integer) parentContextMap.get("infoTipoArchivoRespuesta");
            }if (parentContextMap.containsKey("oracle_AdditionalParams")) {
                context.oracle_AdditionalParams = (String) parentContextMap.get("oracle_AdditionalParams");
            }if (parentContextMap.containsKey("oracle_Host")) {
                context.oracle_Host = (String) parentContextMap.get("oracle_Host");
            }if (parentContextMap.containsKey("oracle_Password")) {
                context.oracle_Password = (String) parentContextMap.get("oracle_Password");
            }if (parentContextMap.containsKey("oracle_Port")) {
                context.oracle_Port = (String) parentContextMap.get("oracle_Port");
            }if (parentContextMap.containsKey("oracle_Schema")) {
                context.oracle_Schema = (String) parentContextMap.get("oracle_Schema");
            }if (parentContextMap.containsKey("oracle_ServiceName")) {
                context.oracle_ServiceName = (String) parentContextMap.get("oracle_ServiceName");
            }if (parentContextMap.containsKey("oracle_Sid")) {
                context.oracle_Sid = (String) parentContextMap.get("oracle_Sid");
            }if (parentContextMap.containsKey("oracle_User")) {
                context.oracle_User = (String) parentContextMap.get("oracle_User");
            }if (parentContextMap.containsKey("tipoArchivoCompendioSalud")) {
                context.tipoArchivoCompendioSalud = (Integer) parentContextMap.get("tipoArchivoCompendioSalud");
            }if (parentContextMap.containsKey("tipoArchivoCompendioSaludGenerado")) {
                context.tipoArchivoCompendioSaludGenerado = (Integer) parentContextMap.get("tipoArchivoCompendioSaludGenerado");
            }if (parentContextMap.containsKey("tipoArchivoCruceErrores")) {
                context.tipoArchivoCruceErrores = (Integer) parentContextMap.get("tipoArchivoCruceErrores");
            }if (parentContextMap.containsKey("tipoJobCompendioSalud")) {
                context.tipoJobCompendioSalud = (Integer) parentContextMap.get("tipoJobCompendioSalud");
            }if (parentContextMap.containsKey("tipoJobEntesTerritoriales")) {
                context.tipoJobEntesTerritoriales = (Integer) parentContextMap.get("tipoJobEntesTerritoriales");
            }if (parentContextMap.containsKey("tipoJobFedevida")) {
                context.tipoJobFedevida = (Integer) parentContextMap.get("tipoJobFedevida");
            }if (parentContextMap.containsKey("tipoJobMinsaludEtapa2Novedades")) {
                context.tipoJobMinsaludEtapa2Novedades = (Integer) parentContextMap.get("tipoJobMinsaludEtapa2Novedades");
            }if (parentContextMap.containsKey("tipoJobMinsaludEtapa2NuevosRegistros")) {
                context.tipoJobMinsaludEtapa2NuevosRegistros = (Integer) parentContextMap.get("tipoJobMinsaludEtapa2NuevosRegistros");
            }if (parentContextMap.containsKey("tipoJobMinsaludEtapa3Multiafiliacion")) {
                context.tipoJobMinsaludEtapa3Multiafiliacion = (Integer) parentContextMap.get("tipoJobMinsaludEtapa3Multiafiliacion");
            }if (parentContextMap.containsKey("auxAfiliadosCriterio")) {
                context.auxAfiliadosCriterio = (String) parentContextMap.get("auxAfiliadosCriterio");
            }if (parentContextMap.containsKey("auxAfiliadosCriterioAct")) {
                context.auxAfiliadosCriterioAct = (String) parentContextMap.get("auxAfiliadosCriterioAct");
            }if (parentContextMap.containsKey("auxAfiliadosCriterioInact")) {
                context.auxAfiliadosCriterioInact = (String) parentContextMap.get("auxAfiliadosCriterioInact");
            }if (parentContextMap.containsKey("auxCriterioActual")) {
                context.auxCriterioActual = (Integer) parentContextMap.get("auxCriterioActual");
            }if (parentContextMap.containsKey("auxPrimerLoop")) {
                context.auxPrimerLoop = (Boolean) parentContextMap.get("auxPrimerLoop");
            }if (parentContextMap.containsKey("auxRango")) {
                context.auxRango = (String) parentContextMap.get("auxRango");
            }if (parentContextMap.containsKey("suma")) {
                context.suma = (Integer) parentContextMap.get("suma");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs

try {
errorCode = null;tFileExist_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tFileExist_1) {
globalMap.put("tFileExist_1_SUBPROCESS_STATE", -1);

e_tFileExist_1.printStackTrace();

}

this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : Entes_Territoriales");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;


    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tOracleConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tOracleConnection_1", globalMap.get("conn_tOracleConnection_1"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--context_file")) {
        	String keyValue = arg.substring(15);
        	String filePath = new String(java.util.Base64.getDecoder().decode(keyValue));
        	java.nio.file.Path contextFile = java.nio.file.Paths.get(filePath);
            try (java.io.BufferedReader reader = java.nio.file.Files.newBufferedReader(contextFile)) {
                String line;
                while ((line = reader.readLine()) != null) {
                    int index = -1;
                    if ( (index = line.indexOf('=')) > -1) {
							if (line.startsWith("--context_param")) {
								if ("id_Password".equals(context_param.getContextType(line.substring(16, index)))) {
									context_param.put(line.substring(16, index), routines.system.PasswordEncryptUtil.decryptPassword(
											line.substring(index + 1)));
								} else {
									context_param.put(line.substring(16, index), line.substring(index + 1));
								}
							}else {//--context_type
								context_param.setContextType(line.substring(15, index), line.substring(index + 1));
							}
                    }
                }
            } catch (java.io.IOException e) {
            	System.err.println("Could not load the context file: " + filePath);
                e.printStackTrace();
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     1312587 characters generated by Talend Open Studio for ESB 
 *     on the October 28, 2024, 2:33:24 PM COT
 ************************************************************************************************/