// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for ESB
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package vsp_vigilancia.etl_vigilancia_1_0;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.ValidationRules;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.GenerarUuid;
import routines.Mathematical;
import routines.ExtraerBlob;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJavaRow_3
	//import java.util.List;

	//the import part of tJava_6
	//import java.util.List;

	//the import part of tJava_1
	//import java.util.List;

	//the import part of tJavaRow_1
	//import java.util.List;

	//the import part of tJavaRow_21
	//import java.util.List;

	//the import part of tJava_2
	//import java.util.List;

	//the import part of tJavaRow_5
	//import java.util.List;

	//the import part of tJava_5
	//import java.util.List;

	//the import part of tJavaRow_7
	//import java.util.List;

	//the import part of tJavaRow_6
	//import java.util.List;

	//the import part of tJavaRow_9
	//import java.util.List;

	//the import part of tJavaRow_8
	//import java.util.List;

	//the import part of tJavaRow_11
	//import java.util.List;

	//the import part of tJavaRow_10
	//import java.util.List;

	//the import part of tJavaRow_13
	//import java.util.List;

	//the import part of tJavaRow_12
	//import java.util.List;

	//the import part of tJavaRow_15
	//import java.util.List;

	//the import part of tJavaRow_14
	//import java.util.List;

	//the import part of tJavaRow_17
	//import java.util.List;

	//the import part of tJavaRow_16
	//import java.util.List;

	//the import part of tJava_4
	//import java.util.List;

	//the import part of tJavaRow_20
	//import java.util.List;

	//the import part of tJava_9
	//import java.util.List;

	//the import part of tJava_10
	//import java.util.List;

	//the import part of tJavaRow_18
	//import java.util.List;

	//the import part of tJava_11
	//import java.util.List;

	//the import part of tJavaRow_19
	//import java.util.List;

	//the import part of tJava_12
	//import java.util.List;

	//the import part of tJavaRow_2
	//import java.util.List;

	//the import part of tJava_13
	//import java.util.List;

	//the import part of tJavaRow_4
	//import java.util.List;

	//the import part of tJava_7
	//import java.util.List;

	//the import part of tJava_8
	//import java.util.List;

	//the import part of tJava_3
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: ETL_vigilancia Purpose: <br>
 * Description:  <br>
 * @author jorgejlhc@gmail.com
 * @version 8.8.8.20240722_1936-SNAPSHOT
 * @status DEV
 */
public class ETL_vigilancia implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	private Object[] multiThreadLockWrite = new Object[0];
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(CIE10 != null){
				
					this.setProperty("CIE10", CIE10.toString());
				
			}
			
			if(COD_DIVIPOLA != null){
				
					this.setProperty("COD_DIVIPOLA", COD_DIVIPOLA.toString());
				
			}
			
			if(EDAD != null){
				
					this.setProperty("EDAD", EDAD.toString());
				
			}
			
			if(ETNIA != null){
				
					this.setProperty("ETNIA", ETNIA.toString());
				
			}
			
			if(GRUPO_RIESGO != null){
				
					this.setProperty("GRUPO_RIESGO", GRUPO_RIESGO.toString());
				
			}
			
			if(INDICADOR != null){
				
					this.setProperty("INDICADOR", INDICADOR.toString());
				
			}
			
			if(PRIORIDAD != null){
				
					this.setProperty("PRIORIDAD", PRIORIDAD.toString());
				
			}
			
			if(SEXO != null){
				
					this.setProperty("SEXO", SEXO.toString());
				
			}
			
			if(CIE10_VAL != null){
				
					this.setProperty("CIE10_VAL", CIE10_VAL.toString());
				
			}
			
			if(COD_DIVIPOLA_VAL != null){
				
					this.setProperty("COD_DIVIPOLA_VAL", COD_DIVIPOLA_VAL.toString());
				
			}
			
			if(EDAD_VAL != null){
				
					this.setProperty("EDAD_VAL", EDAD_VAL.toString());
				
			}
			
			if(ERROR_VAL != null){
				
					this.setProperty("ERROR_VAL", ERROR_VAL.toString());
				
			}
			
			if(ETNIA_VAL != null){
				
					this.setProperty("ETNIA_VAL", ETNIA_VAL.toString());
				
			}
			
			if(GRUPO_RIESGO_VAL != null){
				
					this.setProperty("GRUPO_RIESGO_VAL", GRUPO_RIESGO_VAL.toString());
				
			}
			
			if(INDICADOR_VAL != null){
				
					this.setProperty("INDICADOR_VAL", INDICADOR_VAL.toString());
				
			}
			
			if(PRIORIDAD_VAL != null){
				
					this.setProperty("PRIORIDAD_VAL", PRIORIDAD_VAL.toString());
				
			}
			
			if(SEXO_VAL != null){
				
					this.setProperty("SEXO_VAL", SEXO_VAL.toString());
				
			}
			
			if(PriorizacionAnio != null){
				
					this.setProperty("PriorizacionAnio", PriorizacionAnio.toString());
				
			}
			
			if(PriorizacionContenido != null){
				
					this.setProperty("PriorizacionContenido", PriorizacionContenido.toString());
				
			}
			
			if(PriorizacionId != null){
				
					this.setProperty("PriorizacionId", PriorizacionId.toString());
				
			}
			
			if(PriorizacionResultadoId != null){
				
					this.setProperty("PriorizacionResultadoId", PriorizacionResultadoId.toString());
				
			}
			
			if(PriorizacionTipoContenido != null){
				
					this.setProperty("PriorizacionTipoContenido", PriorizacionTipoContenido.toString());
				
			}
			
			if(PriorizacionUsuario != null){
				
					this.setProperty("PriorizacionUsuario", PriorizacionUsuario.toString());
				
			}
			
			if(ConfigFile != null){
				
					this.setProperty("ConfigFile", ConfigFile.toString());
				
			}
			
			if(archivoSalida != null){
				
					this.setProperty("archivoSalida", archivoSalida.toString());
				
			}
			
			if(fileSystem_Area != null){
				
					this.setProperty("fileSystem_Area", fileSystem_Area.toString());
				
			}
			
			if(fileSystem_Path != null){
				
					this.setProperty("fileSystem_Path", fileSystem_Path.toString());
				
			}
			
			if(oracle_AdditionalParams != null){
				
					this.setProperty("oracle_AdditionalParams", oracle_AdditionalParams.toString());
				
			}
			
			if(oracle_Host != null){
				
					this.setProperty("oracle_Host", oracle_Host.toString());
				
			}
			
			if(oracle_Password != null){
				
					this.setProperty("oracle_Password", oracle_Password.toString());
				
			}
			
			if(oracle_Port != null){
				
					this.setProperty("oracle_Port", oracle_Port.toString());
				
			}
			
			if(oracle_Schema != null){
				
					this.setProperty("oracle_Schema", oracle_Schema.toString());
				
			}
			
			if(oracle_ServiceName != null){
				
					this.setProperty("oracle_ServiceName", oracle_ServiceName.toString());
				
			}
			
			if(oracle_User != null){
				
					this.setProperty("oracle_User", oracle_User.toString());
				
			}
			
			if(ErrorCie10Exist != null){
				
					this.setProperty("ErrorCie10Exist", ErrorCie10Exist.toString());
				
			}
			
			if(ErrorCie10Formato != null){
				
					this.setProperty("ErrorCie10Formato", ErrorCie10Formato.toString());
				
			}
			
			if(ErrorCie10Nulo != null){
				
					this.setProperty("ErrorCie10Nulo", ErrorCie10Nulo.toString());
				
			}
			
			if(ErrorCodDivipola != null){
				
					this.setProperty("ErrorCodDivipola", ErrorCodDivipola.toString());
				
			}
			
			if(ErrorConfiguracionExistente != null){
				
					this.setProperty("ErrorConfiguracionExistente", ErrorConfiguracionExistente.toString());
				
			}
			
			if(ErrorConteoDivipola != null){
				
					this.setProperty("ErrorConteoDivipola", ErrorConteoDivipola.toString());
				
			}
			
			if(ErrorConteoIndicador != null){
				
					this.setProperty("ErrorConteoIndicador", ErrorConteoIndicador.toString());
				
			}
			
			if(ErrorConteoPrioridadDivipola != null){
				
					this.setProperty("ErrorConteoPrioridadDivipola", ErrorConteoPrioridadDivipola.toString());
				
			}
			
			if(ErrorEdadExist != null){
				
					this.setProperty("ErrorEdadExist", ErrorEdadExist.toString());
				
			}
			
			if(ErrorEdadFormato != null){
				
					this.setProperty("ErrorEdadFormato", ErrorEdadFormato.toString());
				
			}
			
			if(ErrorEtniaExist != null){
				
					this.setProperty("ErrorEtniaExist", ErrorEtniaExist.toString());
				
			}
			
			if(ErrorEtniaFormato != null){
				
					this.setProperty("ErrorEtniaFormato", ErrorEtniaFormato.toString());
				
			}
			
			if(ErrorGrupoRiesgoExist != null){
				
					this.setProperty("ErrorGrupoRiesgoExist", ErrorGrupoRiesgoExist.toString());
				
			}
			
			if(ErrorGrupoRiesgoFormato != null){
				
					this.setProperty("ErrorGrupoRiesgoFormato", ErrorGrupoRiesgoFormato.toString());
				
			}
			
			if(ErrorIndicadorExist != null){
				
					this.setProperty("ErrorIndicadorExist", ErrorIndicadorExist.toString());
				
			}
			
			if(ErrorIndicadorFormato != null){
				
					this.setProperty("ErrorIndicadorFormato", ErrorIndicadorFormato.toString());
				
			}
			
			if(ErrorMaxMinPrioridad != null){
				
					this.setProperty("ErrorMaxMinPrioridad", ErrorMaxMinPrioridad.toString());
				
			}
			
			if(ErrorPrioridad != null){
				
					this.setProperty("ErrorPrioridad", ErrorPrioridad.toString());
				
			}
			
			if(ErrorSexoExist != null){
				
					this.setProperty("ErrorSexoExist", ErrorSexoExist.toString());
				
			}
			
			if(ErrorSexoFormato != null){
				
					this.setProperty("ErrorSexoFormato", ErrorSexoFormato.toString());
				
			}
			
			if(EstAnexoActivo != null){
				
					this.setProperty("EstAnexoActivo", EstAnexoActivo.toString());
				
			}
			
			if(EstAnexoEnProcesado != null){
				
					this.setProperty("EstAnexoEnProcesado", EstAnexoEnProcesado.toString());
				
			}
			
			if(EstAnexoError != null){
				
					this.setProperty("EstAnexoError", EstAnexoError.toString());
				
			}
			
			if(EstAnexoInactivo != null){
				
					this.setProperty("EstAnexoInactivo", EstAnexoInactivo.toString());
				
			}
			
			if(EstAnexoProcesado != null){
				
					this.setProperty("EstAnexoProcesado", EstAnexoProcesado.toString());
				
			}
			
			if(FormatoExcel != null){
				
					this.setProperty("FormatoExcel", FormatoExcel.toString());
				
			}
			
			if(FormatoExcelXml != null){
				
					this.setProperty("FormatoExcelXml", FormatoExcelXml.toString());
				
			}
			
			if(FormatoSeparador != null){
				
					this.setProperty("FormatoSeparador", FormatoSeparador.toString());
				
			}
			
			if(FormatoTextoPlano != null){
				
					this.setProperty("FormatoTextoPlano", FormatoTextoPlano.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String CIE10;
public String getCIE10(){
	return this.CIE10;
}
public String COD_DIVIPOLA;
public String getCOD_DIVIPOLA(){
	return this.COD_DIVIPOLA;
}
public Integer EDAD;
public Integer getEDAD(){
	return this.EDAD;
}
public Integer ETNIA;
public Integer getETNIA(){
	return this.ETNIA;
}
public Integer GRUPO_RIESGO;
public Integer getGRUPO_RIESGO(){
	return this.GRUPO_RIESGO;
}
public Integer INDICADOR;
public Integer getINDICADOR(){
	return this.INDICADOR;
}
public Integer PRIORIDAD;
public Integer getPRIORIDAD(){
	return this.PRIORIDAD;
}
public Integer SEXO;
public Integer getSEXO(){
	return this.SEXO;
}
public String CIE10_VAL;
public String getCIE10_VAL(){
	return this.CIE10_VAL;
}
public String COD_DIVIPOLA_VAL;
public String getCOD_DIVIPOLA_VAL(){
	return this.COD_DIVIPOLA_VAL;
}
public Integer EDAD_VAL;
public Integer getEDAD_VAL(){
	return this.EDAD_VAL;
}
public String ERROR_VAL;
public String getERROR_VAL(){
	return this.ERROR_VAL;
}
public Integer ETNIA_VAL;
public Integer getETNIA_VAL(){
	return this.ETNIA_VAL;
}
public Integer GRUPO_RIESGO_VAL;
public Integer getGRUPO_RIESGO_VAL(){
	return this.GRUPO_RIESGO_VAL;
}
public Integer INDICADOR_VAL;
public Integer getINDICADOR_VAL(){
	return this.INDICADOR_VAL;
}
public Integer PRIORIDAD_VAL;
public Integer getPRIORIDAD_VAL(){
	return this.PRIORIDAD_VAL;
}
public Integer SEXO_VAL;
public Integer getSEXO_VAL(){
	return this.SEXO_VAL;
}
public String PriorizacionAnio;
public String getPriorizacionAnio(){
	return this.PriorizacionAnio;
}
public Object PriorizacionContenido;
public Object getPriorizacionContenido(){
	return this.PriorizacionContenido;
}
public Integer PriorizacionId;
public Integer getPriorizacionId(){
	return this.PriorizacionId;
}
public Integer PriorizacionResultadoId;
public Integer getPriorizacionResultadoId(){
	return this.PriorizacionResultadoId;
}
public String PriorizacionTipoContenido;
public String getPriorizacionTipoContenido(){
	return this.PriorizacionTipoContenido;
}
public String PriorizacionUsuario;
public String getPriorizacionUsuario(){
	return this.PriorizacionUsuario;
}
public String ConfigFile;
public String getConfigFile(){
	return this.ConfigFile;
}
public String archivoSalida;
public String getArchivoSalida(){
	return this.archivoSalida;
}
public String fileSystem_Area;
public String getFileSystem_Area(){
	return this.fileSystem_Area;
}
public String fileSystem_Path;
public String getFileSystem_Path(){
	return this.fileSystem_Path;
}
public String oracle_AdditionalParams;
public String getOracle_AdditionalParams(){
	return this.oracle_AdditionalParams;
}
public String oracle_Host;
public String getOracle_Host(){
	return this.oracle_Host;
}
public String oracle_Password;
public String getOracle_Password(){
	return this.oracle_Password;
}
public String oracle_Port;
public String getOracle_Port(){
	return this.oracle_Port;
}
public String oracle_Schema;
public String getOracle_Schema(){
	return this.oracle_Schema;
}
public String oracle_ServiceName;
public String getOracle_ServiceName(){
	return this.oracle_ServiceName;
}
public String oracle_User;
public String getOracle_User(){
	return this.oracle_User;
}
public String ErrorCie10Exist;
public String getErrorCie10Exist(){
	return this.ErrorCie10Exist;
}
public String ErrorCie10Formato;
public String getErrorCie10Formato(){
	return this.ErrorCie10Formato;
}
public String ErrorCie10Nulo;
public String getErrorCie10Nulo(){
	return this.ErrorCie10Nulo;
}
public String ErrorCodDivipola;
public String getErrorCodDivipola(){
	return this.ErrorCodDivipola;
}
public String ErrorConfiguracionExistente;
public String getErrorConfiguracionExistente(){
	return this.ErrorConfiguracionExistente;
}
public String ErrorConteoDivipola;
public String getErrorConteoDivipola(){
	return this.ErrorConteoDivipola;
}
public String ErrorConteoIndicador;
public String getErrorConteoIndicador(){
	return this.ErrorConteoIndicador;
}
public String ErrorConteoPrioridadDivipola;
public String getErrorConteoPrioridadDivipola(){
	return this.ErrorConteoPrioridadDivipola;
}
public String ErrorEdadExist;
public String getErrorEdadExist(){
	return this.ErrorEdadExist;
}
public String ErrorEdadFormato;
public String getErrorEdadFormato(){
	return this.ErrorEdadFormato;
}
public String ErrorEtniaExist;
public String getErrorEtniaExist(){
	return this.ErrorEtniaExist;
}
public String ErrorEtniaFormato;
public String getErrorEtniaFormato(){
	return this.ErrorEtniaFormato;
}
public String ErrorGrupoRiesgoExist;
public String getErrorGrupoRiesgoExist(){
	return this.ErrorGrupoRiesgoExist;
}
public String ErrorGrupoRiesgoFormato;
public String getErrorGrupoRiesgoFormato(){
	return this.ErrorGrupoRiesgoFormato;
}
public String ErrorIndicadorExist;
public String getErrorIndicadorExist(){
	return this.ErrorIndicadorExist;
}
public String ErrorIndicadorFormato;
public String getErrorIndicadorFormato(){
	return this.ErrorIndicadorFormato;
}
public String ErrorMaxMinPrioridad;
public String getErrorMaxMinPrioridad(){
	return this.ErrorMaxMinPrioridad;
}
public String ErrorPrioridad;
public String getErrorPrioridad(){
	return this.ErrorPrioridad;
}
public String ErrorSexoExist;
public String getErrorSexoExist(){
	return this.ErrorSexoExist;
}
public String ErrorSexoFormato;
public String getErrorSexoFormato(){
	return this.ErrorSexoFormato;
}
public String EstAnexoActivo;
public String getEstAnexoActivo(){
	return this.EstAnexoActivo;
}
public String EstAnexoEnProcesado;
public String getEstAnexoEnProcesado(){
	return this.EstAnexoEnProcesado;
}
public String EstAnexoError;
public String getEstAnexoError(){
	return this.EstAnexoError;
}
public String EstAnexoInactivo;
public String getEstAnexoInactivo(){
	return this.EstAnexoInactivo;
}
public String EstAnexoProcesado;
public String getEstAnexoProcesado(){
	return this.EstAnexoProcesado;
}
public String FormatoExcel;
public String getFormatoExcel(){
	return this.FormatoExcel;
}
public String FormatoExcelXml;
public String getFormatoExcelXml(){
	return this.FormatoExcelXml;
}
public String FormatoSeparador;
public String getFormatoSeparador(){
	return this.FormatoSeparador;
}
public String FormatoTextoPlano;
public String getFormatoTextoPlano(){
	return this.FormatoTextoPlano;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "1.0";
	private final String jobName = "ETL_vigilancia";
	private final String projectName = "VSP_VIGILANCIA";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Object>());
		
	
		private final java.util.Map<String, Long> start_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Long> end_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Boolean> ok_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Boolean>());
		public  final java.util.List<String[]> globalBuffer = java.util.Collections.synchronizedList(new java.util.ArrayList<String[]>());
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}


private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				ETL_vigilancia.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(ETL_vigilancia.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
			}
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileExist_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileExist_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputXML_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputXML_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputXML_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
						try {
							
								if(this.execStat){
									runStat.updateStatOnConnection("OnComponentError1", 0, "error");
								}
							
							
								((java.util.Map)threadLocal.get()).put("errorCode", null);
								tDie_1Process(globalMap);
								if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
									((java.util.Map)threadLocal.get()).put("status", "end");
								}
								

						} catch (Exception e) {
							e.printStackTrace();
						}
						
					tOracleConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDie_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleClose_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleClose_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_19_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_25_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_19_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
						try {
							
								if(this.execStat){
									runStat.updateStatOnConnection("OnComponentError3", 0, "error");
								}
							
							
								((java.util.Map)threadLocal.get()).put("errorCode", null);
								tJava_3Process(globalMap);
								if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
									((java.util.Map)threadLocal.get()).put("status", "end");
								}
								

						} catch (Exception e) {
							e.printStackTrace();
						}
						
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
						try {
							
								if(this.execStat){
									runStat.updateStatOnConnection("OnComponentError5", 0, "error");
								}
							
							
								((java.util.Map)threadLocal.get()).put("errorCode", null);
								tFixedFlowInput_28Process(globalMap);
								if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
									((java.util.Map)threadLocal.get()).put("status", "end");
								}
								

						} catch (Exception e) {
							e.printStackTrace();
						}
						
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_27_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_23_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_97_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_23_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_23_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_23_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_23_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_23_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_26_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_36_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_43_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_54_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_62_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_70_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_28_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_28_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_26_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_26_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleSP_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_26_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_26_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_25_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_25_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_25_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tOracleInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_89_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_22_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_98_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_22_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_22_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_22_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_23_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_23_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_100_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_25_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_25_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_25_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_26_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_26_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_106_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_26_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_26_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_26_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_27_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_27_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_27_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_19_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_19_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_19_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_22_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_22_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tOracleOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_19_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row26_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row28_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row48_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row54_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_19_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_2_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_2_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_2_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_1_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_1_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_1_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_22_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_3_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_3_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_3_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_4_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_4_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_4_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_26_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileExist_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputXML_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDie_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleClose_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_7_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_7_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_19_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputDelimited_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_23_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_7_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_21_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_8_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_9_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_11_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_12_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_13_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_28_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_14_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_26_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_25_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tOracleInput_9_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_9_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_21_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_18_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_11_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_22_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_23_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_12_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_24_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_25_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_13_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_26_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_27_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_7_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_19_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_22_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_24_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_15_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_17_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_8_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	









public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk13", 0, "ok");
				}
				tFileExist_1Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tFileExist_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileExist_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tFileExist_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileExist_1", false);
		start_Hash.put("tFileExist_1", System.currentTimeMillis());
		
	
	currentComponent="tFileExist_1";
	
	
		int tos_count_tFileExist_1 = 0;
		

 



/**
 * [tFileExist_1 begin ] stop
 */
	
	/**
	 * [tFileExist_1 main ] start
	 */

	

	
	
	currentComponent="tFileExist_1";
	
	



java.io.File file_tFileExist_1 = new java.io.File(context.ConfigFile);
if (!file_tFileExist_1.exists()) {
    globalMap.put("tFileExist_1_EXISTS",false);
}else{
	globalMap.put("tFileExist_1_EXISTS",true);
}

globalMap.put("tFileExist_1_FILENAME",context.ConfigFile);


 


	tos_count_tFileExist_1++;

/**
 * [tFileExist_1 main ] stop
 */
	
	/**
	 * [tFileExist_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileExist_1";
	
	

 



/**
 * [tFileExist_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileExist_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileExist_1";
	
	

 



/**
 * [tFileExist_1 process_data_end ] stop
 */
	
	/**
	 * [tFileExist_1 end ] start
	 */

	

	
	
	currentComponent="tFileExist_1";
	
	

 

ok_Hash.put("tFileExist_1", true);
end_Hash.put("tFileExist_1", System.currentTimeMillis());

   			if (((Boolean)globalMap.get("tFileExist_1_EXISTS"))) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If20", 0, "true");
					}
				tFileInputXML_1Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If20", 0, "false");
					}   	 
   				}
   			if (!((Boolean)globalMap.get("tFileExist_1_EXISTS"))) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If35", 0, "true");
					}
				tJava_6Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If35", 0, "false");
					}   	 
   				}



/**
 * [tFileExist_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileExist_1 finally ] start
	 */

	

	
	
	currentComponent="tFileExist_1";
	
	

 



/**
 * [tFileExist_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileExist_1_SUBPROCESS_STATE", 1);
	}
	


public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String DB_Host;

				public String getDB_Host () {
					return this.DB_Host;
				}

				public Boolean DB_HostIsNullable(){
				    return true;
				}
				public Boolean DB_HostIsKey(){
				    return false;
				}
				public Integer DB_HostLength(){
				    return 13;
				}
				public Integer DB_HostPrecision(){
				    return 0;
				}
				public String DB_HostDefault(){
				
					return null;
				
				}
				public String DB_HostComment(){
				
				    return "";
				
				}
				public String DB_HostPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DB_HostOriginalDbColumnName(){
				
					return "DB_Host";
				
				}

				
			    public String DB_Port;

				public String getDB_Port () {
					return this.DB_Port;
				}

				public Boolean DB_PortIsNullable(){
				    return true;
				}
				public Boolean DB_PortIsKey(){
				    return false;
				}
				public Integer DB_PortLength(){
				    return 4;
				}
				public Integer DB_PortPrecision(){
				    return 0;
				}
				public String DB_PortDefault(){
				
					return null;
				
				}
				public String DB_PortComment(){
				
				    return "";
				
				}
				public String DB_PortPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DB_PortOriginalDbColumnName(){
				
					return "DB_Port";
				
				}

				
			    public String DB_Sid;

				public String getDB_Sid () {
					return this.DB_Sid;
				}

				public Boolean DB_SidIsNullable(){
				    return true;
				}
				public Boolean DB_SidIsKey(){
				    return false;
				}
				public Integer DB_SidLength(){
				    return 4;
				}
				public Integer DB_SidPrecision(){
				    return 0;
				}
				public String DB_SidDefault(){
				
					return null;
				
				}
				public String DB_SidComment(){
				
				    return "";
				
				}
				public String DB_SidPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DB_SidOriginalDbColumnName(){
				
					return "DB_Sid";
				
				}

				
			    public String DB_ServiceName;

				public String getDB_ServiceName () {
					return this.DB_ServiceName;
				}

				public Boolean DB_ServiceNameIsNullable(){
				    return true;
				}
				public Boolean DB_ServiceNameIsKey(){
				    return false;
				}
				public Integer DB_ServiceNameLength(){
				    return 16;
				}
				public Integer DB_ServiceNamePrecision(){
				    return 0;
				}
				public String DB_ServiceNameDefault(){
				
					return null;
				
				}
				public String DB_ServiceNameComment(){
				
				    return "";
				
				}
				public String DB_ServiceNamePattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DB_ServiceNameOriginalDbColumnName(){
				
					return "DB_ServiceName";
				
				}

				
			    public String DB_Schema;

				public String getDB_Schema () {
					return this.DB_Schema;
				}

				public Boolean DB_SchemaIsNullable(){
				    return true;
				}
				public Boolean DB_SchemaIsKey(){
				    return false;
				}
				public Integer DB_SchemaLength(){
				    return 8;
				}
				public Integer DB_SchemaPrecision(){
				    return 0;
				}
				public String DB_SchemaDefault(){
				
					return null;
				
				}
				public String DB_SchemaComment(){
				
				    return "";
				
				}
				public String DB_SchemaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DB_SchemaOriginalDbColumnName(){
				
					return "DB_Schema";
				
				}

				
			    public String DB_User;

				public String getDB_User () {
					return this.DB_User;
				}

				public Boolean DB_UserIsNullable(){
				    return true;
				}
				public Boolean DB_UserIsKey(){
				    return false;
				}
				public Integer DB_UserLength(){
				    return 8;
				}
				public Integer DB_UserPrecision(){
				    return 0;
				}
				public String DB_UserDefault(){
				
					return null;
				
				}
				public String DB_UserComment(){
				
				    return "";
				
				}
				public String DB_UserPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DB_UserOriginalDbColumnName(){
				
					return "DB_User";
				
				}

				
			    public String DB_Password;

				public String getDB_Password () {
					return this.DB_Password;
				}

				public Boolean DB_PasswordIsNullable(){
				    return true;
				}
				public Boolean DB_PasswordIsKey(){
				    return false;
				}
				public Integer DB_PasswordLength(){
				    return 11;
				}
				public Integer DB_PasswordPrecision(){
				    return 0;
				}
				public String DB_PasswordDefault(){
				
					return null;
				
				}
				public String DB_PasswordComment(){
				
				    return "";
				
				}
				public String DB_PasswordPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DB_PasswordOriginalDbColumnName(){
				
					return "DB_Password";
				
				}

				
			    public String FS_PathStorage;

				public String getFS_PathStorage () {
					return this.FS_PathStorage;
				}

				public Boolean FS_PathStorageIsNullable(){
				    return true;
				}
				public Boolean FS_PathStorageIsKey(){
				    return false;
				}
				public Integer FS_PathStorageLength(){
				    return 0;
				}
				public Integer FS_PathStoragePrecision(){
				    return 0;
				}
				public String FS_PathStorageDefault(){
				
					return null;
				
				}
				public String FS_PathStorageComment(){
				
				    return "";
				
				}
				public String FS_PathStoragePattern(){
				
					return "";
				
				}
				public String FS_PathStorageOriginalDbColumnName(){
				
					return "FS_PathStorage";
				
				}

				
			    public String ML_SMTPHost;

				public String getML_SMTPHost () {
					return this.ML_SMTPHost;
				}

				public Boolean ML_SMTPHostIsNullable(){
				    return true;
				}
				public Boolean ML_SMTPHostIsKey(){
				    return false;
				}
				public Integer ML_SMTPHostLength(){
				    return 0;
				}
				public Integer ML_SMTPHostPrecision(){
				    return 0;
				}
				public String ML_SMTPHostDefault(){
				
					return null;
				
				}
				public String ML_SMTPHostComment(){
				
				    return "";
				
				}
				public String ML_SMTPHostPattern(){
				
					return "";
				
				}
				public String ML_SMTPHostOriginalDbColumnName(){
				
					return "ML_SMTPHost";
				
				}

				
			    public String ML_SMTPPort;

				public String getML_SMTPPort () {
					return this.ML_SMTPPort;
				}

				public Boolean ML_SMTPPortIsNullable(){
				    return true;
				}
				public Boolean ML_SMTPPortIsKey(){
				    return false;
				}
				public Integer ML_SMTPPortLength(){
				    return 0;
				}
				public Integer ML_SMTPPortPrecision(){
				    return 0;
				}
				public String ML_SMTPPortDefault(){
				
					return null;
				
				}
				public String ML_SMTPPortComment(){
				
				    return "";
				
				}
				public String ML_SMTPPortPattern(){
				
					return "";
				
				}
				public String ML_SMTPPortOriginalDbColumnName(){
				
					return "ML_SMTPPort";
				
				}

				
			    public String ML_UsernameMail;

				public String getML_UsernameMail () {
					return this.ML_UsernameMail;
				}

				public Boolean ML_UsernameMailIsNullable(){
				    return true;
				}
				public Boolean ML_UsernameMailIsKey(){
				    return false;
				}
				public Integer ML_UsernameMailLength(){
				    return 0;
				}
				public Integer ML_UsernameMailPrecision(){
				    return 0;
				}
				public String ML_UsernameMailDefault(){
				
					return null;
				
				}
				public String ML_UsernameMailComment(){
				
				    return "";
				
				}
				public String ML_UsernameMailPattern(){
				
					return "";
				
				}
				public String ML_UsernameMailOriginalDbColumnName(){
				
					return "ML_UsernameMail";
				
				}

				
			    public String ML_PasswordMail;

				public String getML_PasswordMail () {
					return this.ML_PasswordMail;
				}

				public Boolean ML_PasswordMailIsNullable(){
				    return true;
				}
				public Boolean ML_PasswordMailIsKey(){
				    return false;
				}
				public Integer ML_PasswordMailLength(){
				    return 0;
				}
				public Integer ML_PasswordMailPrecision(){
				    return 0;
				}
				public String ML_PasswordMailDefault(){
				
					return null;
				
				}
				public String ML_PasswordMailComment(){
				
				    return "";
				
				}
				public String ML_PasswordMailPattern(){
				
					return "";
				
				}
				public String ML_PasswordMailOriginalDbColumnName(){
				
					return "ML_PasswordMail";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.DB_Host = readString(dis);
					
					this.DB_Port = readString(dis);
					
					this.DB_Sid = readString(dis);
					
					this.DB_ServiceName = readString(dis);
					
					this.DB_Schema = readString(dis);
					
					this.DB_User = readString(dis);
					
					this.DB_Password = readString(dis);
					
					this.FS_PathStorage = readString(dis);
					
					this.ML_SMTPHost = readString(dis);
					
					this.ML_SMTPPort = readString(dis);
					
					this.ML_UsernameMail = readString(dis);
					
					this.ML_PasswordMail = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.DB_Host = readString(dis);
					
					this.DB_Port = readString(dis);
					
					this.DB_Sid = readString(dis);
					
					this.DB_ServiceName = readString(dis);
					
					this.DB_Schema = readString(dis);
					
					this.DB_User = readString(dis);
					
					this.DB_Password = readString(dis);
					
					this.FS_PathStorage = readString(dis);
					
					this.ML_SMTPHost = readString(dis);
					
					this.ML_SMTPPort = readString(dis);
					
					this.ML_UsernameMail = readString(dis);
					
					this.ML_PasswordMail = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.DB_Host,dos);
					
					// String
				
						writeString(this.DB_Port,dos);
					
					// String
				
						writeString(this.DB_Sid,dos);
					
					// String
				
						writeString(this.DB_ServiceName,dos);
					
					// String
				
						writeString(this.DB_Schema,dos);
					
					// String
				
						writeString(this.DB_User,dos);
					
					// String
				
						writeString(this.DB_Password,dos);
					
					// String
				
						writeString(this.FS_PathStorage,dos);
					
					// String
				
						writeString(this.ML_SMTPHost,dos);
					
					// String
				
						writeString(this.ML_SMTPPort,dos);
					
					// String
				
						writeString(this.ML_UsernameMail,dos);
					
					// String
				
						writeString(this.ML_PasswordMail,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.DB_Host,dos);
					
					// String
				
						writeString(this.DB_Port,dos);
					
					// String
				
						writeString(this.DB_Sid,dos);
					
					// String
				
						writeString(this.DB_ServiceName,dos);
					
					// String
				
						writeString(this.DB_Schema,dos);
					
					// String
				
						writeString(this.DB_User,dos);
					
					// String
				
						writeString(this.DB_Password,dos);
					
					// String
				
						writeString(this.FS_PathStorage,dos);
					
					// String
				
						writeString(this.ML_SMTPHost,dos);
					
					// String
				
						writeString(this.ML_SMTPPort,dos);
					
					// String
				
						writeString(this.ML_UsernameMail,dos);
					
					// String
				
						writeString(this.ML_PasswordMail,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("DB_Host="+DB_Host);
		sb.append(",DB_Port="+DB_Port);
		sb.append(",DB_Sid="+DB_Sid);
		sb.append(",DB_ServiceName="+DB_ServiceName);
		sb.append(",DB_Schema="+DB_Schema);
		sb.append(",DB_User="+DB_User);
		sb.append(",DB_Password="+DB_Password);
		sb.append(",FS_PathStorage="+FS_PathStorage);
		sb.append(",ML_SMTPHost="+ML_SMTPHost);
		sb.append(",ML_SMTPPort="+ML_SMTPPort);
		sb.append(",ML_UsernameMail="+ML_UsernameMail);
		sb.append(",ML_PasswordMail="+ML_PasswordMail);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputXML_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputXML_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row3Struct row3 = new row3Struct();




	
	/**
	 * [tJavaRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_3", false);
		start_Hash.put("tJavaRow_3", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tJavaRow_3 = 0;
		

int nb_line_tJavaRow_3 = 0;

 



/**
 * [tJavaRow_3 begin ] stop
 */



	
	/**
	 * [tFileInputXML_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputXML_1", false);
		start_Hash.put("tFileInputXML_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputXML_1";
	
	
		int tos_count_tFileInputXML_1 = 0;
		

	

int nb_line_tFileInputXML_1 = 0;

	String os_tFileInputXML_1 = System.getProperty("os.name").toLowerCase();
	boolean isWindows_tFileInputXML_1=false;
	if(os_tFileInputXML_1.indexOf("windows") > -1 || os_tFileInputXML_1.indexOf("nt") > -1){
		isWindows_tFileInputXML_1=true;
	}
class NameSpaceTool_tFileInputXML_1 {

    public java.util.HashMap<String, String> xmlNameSpaceMap = new java.util.HashMap<String, String>();
    
	private java.util.List<String> defualtNSPath = new java.util.ArrayList<String>();

    public void countNSMap(org.dom4j.Element el) {
        for (org.dom4j.Namespace ns : (java.util.List<org.dom4j.Namespace>) el.declaredNamespaces()) {
            if (ns.getPrefix().trim().length() == 0) {
                xmlNameSpaceMap.put("pre"+defualtNSPath.size(), ns.getURI());
                String path = "";
                org.dom4j.Element elTmp = el;
                while (elTmp != null) {
                	if (elTmp.getNamespacePrefix() != null && elTmp.getNamespacePrefix().length() > 0) {
                        path = "/" + elTmp.getNamespacePrefix() + ":" + elTmp.getName() + path;
                    } else {
                        path = "/" + elTmp.getName() + path;
                    }
                    elTmp = elTmp.getParent();
                }
                defualtNSPath.add(path);
            } else {
                xmlNameSpaceMap.put(ns.getPrefix(), ns.getURI());
            }

        }
        for (org.dom4j.Element e : (java.util.List<org.dom4j.Element>) el.elements()) {
            countNSMap(e);
        }
    }
    
    private final org.talend.xpath.XPathUtil util = new  org.talend.xpath.XPathUtil();
    
    {
    	util.setDefaultNSPath(defualtNSPath);
    }
    
	public String addDefaultNSPrefix(String path) {
		return util.addDefaultNSPrefix(path);
	}
	
	public String addDefaultNSPrefix(String relativeXpression, String basePath) {
		return util.addDefaultNSPrefix(relativeXpression,basePath);
	}
    
}

class XML_API_tFileInputXML_1{
	public boolean isDefNull(org.dom4j.Node node) throws javax.xml.transform.TransformerException {
        if (node != null && node instanceof org.dom4j.Element) {
        	org.dom4j.Attribute attri = ((org.dom4j.Element)node).attribute("nil");
        	if(attri != null && ("true").equals(attri.getText())){
            	return true;
            }
        }
        return false;
    }

    public boolean isMissing(org.dom4j.Node node) throws javax.xml.transform.TransformerException {
        return node == null ? true : false;
    }

    public boolean isEmpty(org.dom4j.Node node) throws javax.xml.transform.TransformerException {
        if (node != null) {
            return node.getStringValue().isEmpty();
        }
        return false;
    }
}


org.dom4j.io.SAXReader reader_tFileInputXML_1 = new org.dom4j.io.SAXReader();
Object filename_tFileInputXML_1 = null;
try {
	filename_tFileInputXML_1 = context.ConfigFile;
} catch(java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
	
	
	System.err.println(e.getMessage());
	
}
if(filename_tFileInputXML_1 != null && filename_tFileInputXML_1 instanceof String && filename_tFileInputXML_1.toString().startsWith("//")){
	if (!isWindows_tFileInputXML_1){
		filename_tFileInputXML_1 = filename_tFileInputXML_1.toString().replaceFirst("//","/");
	}
}

boolean isValidFile_tFileInputXML_1 = true;
org.dom4j.Document doc_tFileInputXML_1 = null;
java.io.Closeable toClose_tFileInputXML_1 = null;
try{
	if(filename_tFileInputXML_1 instanceof java.io.InputStream){
		java.io.InputStream inputStream_tFileInputXML_1 = (java.io.InputStream)filename_tFileInputXML_1;
		toClose_tFileInputXML_1 = inputStream_tFileInputXML_1;
		doc_tFileInputXML_1 = reader_tFileInputXML_1.read(inputStream_tFileInputXML_1);
	}else{
		java.io.Reader unicodeReader_tFileInputXML_1 = new UnicodeReader(new java.io.FileInputStream(String.valueOf(filename_tFileInputXML_1)),"UTF-8");
		toClose_tFileInputXML_1 = unicodeReader_tFileInputXML_1;
		org.xml.sax.InputSource in_tFileInputXML_1= new org.xml.sax.InputSource(unicodeReader_tFileInputXML_1);
		doc_tFileInputXML_1 = reader_tFileInputXML_1.read(in_tFileInputXML_1);
	}
}catch(java.lang.Exception e){
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
	
	System.err.println(e.getMessage());
	isValidFile_tFileInputXML_1 = false;
} finally {
	if(toClose_tFileInputXML_1!=null) {
		toClose_tFileInputXML_1.close();
	}
}
if(isValidFile_tFileInputXML_1){
NameSpaceTool_tFileInputXML_1 nsTool_tFileInputXML_1 = new NameSpaceTool_tFileInputXML_1();
nsTool_tFileInputXML_1.countNSMap(doc_tFileInputXML_1.getRootElement());
java.util.HashMap<String,String> xmlNameSpaceMap_tFileInputXML_1 = nsTool_tFileInputXML_1.xmlNameSpaceMap;  

org.dom4j.XPath x_tFileInputXML_1 = doc_tFileInputXML_1.createXPath(nsTool_tFileInputXML_1.addDefaultNSPrefix("/connectionStrings"));  
x_tFileInputXML_1.setNamespaceURIs(xmlNameSpaceMap_tFileInputXML_1); 

java.util.List<org.dom4j.Node> nodeList_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)x_tFileInputXML_1.selectNodes(doc_tFileInputXML_1);	
XML_API_tFileInputXML_1 xml_api_tFileInputXML_1 = new XML_API_tFileInputXML_1();
String str_tFileInputXML_1 = "";
org.dom4j.Node node_tFileInputXML_1 = null;

//init all mapping xpaths
java.util.Map<Integer,org.dom4j.XPath> xpaths_tFileInputXML_1=new java.util.HashMap<Integer,org.dom4j.XPath>();
	class XPathUtil_tFileInputXML_1{
	
			   public void initXPaths_0(java.util.Map<Integer,org.dom4j.XPath> xpaths,NameSpaceTool_tFileInputXML_1 nsTool,
			       java.util.HashMap<String,String> xmlNameSpaceMap){
			
	org.dom4j.XPath xpath_0 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Host","/connectionStrings"));
	xpath_0.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(0,xpath_0);
			
	org.dom4j.XPath xpath_1 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Port","/connectionStrings"));
	xpath_1.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(1,xpath_1);
			
	org.dom4j.XPath xpath_2 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Sid","/connectionStrings"));
	xpath_2.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(2,xpath_2);
			
	org.dom4j.XPath xpath_3 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("ServiceName","/connectionStrings"));
	xpath_3.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(3,xpath_3);
			
	org.dom4j.XPath xpath_4 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Schema","/connectionStrings"));
	xpath_4.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(4,xpath_4);
			
	org.dom4j.XPath xpath_5 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("User","/connectionStrings"));
	xpath_5.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(5,xpath_5);
			
	org.dom4j.XPath xpath_6 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("Password","/connectionStrings"));
	xpath_6.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(6,xpath_6);
			
	org.dom4j.XPath xpath_7 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("PathStorage","/connectionStrings"));
	xpath_7.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(7,xpath_7);
			
	org.dom4j.XPath xpath_8 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("SMTPHost","/connectionStrings"));
	xpath_8.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(8,xpath_8);
			
	org.dom4j.XPath xpath_9 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("SMTPPort","/connectionStrings"));
	xpath_9.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(9,xpath_9);
			
	org.dom4j.XPath xpath_10 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("UsernameMail","/connectionStrings"));
	xpath_10.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(10,xpath_10);
			
	org.dom4j.XPath xpath_11 = org.dom4j.DocumentHelper.createXPath(nsTool.addDefaultNSPrefix("PasswordMail","/connectionStrings"));
	xpath_11.setNamespaceURIs(xmlNameSpaceMap);
	
			xpaths.put(11,xpath_11);
			
	     }
	   
	      public void initXPaths(java.util.Map<Integer,org.dom4j.XPath> xpaths,NameSpaceTool_tFileInputXML_1 nsTool,
			    java.util.HashMap<String,String> xmlNameSpaceMap){
			    
			        initXPaths_0(xpaths,nsTool, xmlNameSpaceMap);
			    
		   }
	}
	XPathUtil_tFileInputXML_1 xPathUtil_tFileInputXML_1 = new XPathUtil_tFileInputXML_1();
	xPathUtil_tFileInputXML_1.initXPaths(xpaths_tFileInputXML_1, nsTool_tFileInputXML_1, xmlNameSpaceMap_tFileInputXML_1);
for (org.dom4j.Node temp_tFileInputXML_1: nodeList_tFileInputXML_1) {
	if (nb_line_tFileInputXML_1>=50) {
	
		break;
	}
		nb_line_tFileInputXML_1++;
		
	row3 = null;			
	boolean whetherReject_tFileInputXML_1 = false;
	row3 = new row3Struct();
	try{
    Object obj0_tFileInputXML_1 = xpaths_tFileInputXML_1.get(0).evaluate(temp_tFileInputXML_1);
    if(obj0_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj0_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj0_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj0_tFileInputXML_1 instanceof String || obj0_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj0_tFileInputXML_1);
    } else if(obj0_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj0_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row3.DB_Host =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row3.DB_Host ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row3.DB_Host =null;
									}else{
		row3.DB_Host = str_tFileInputXML_1;
	}
    Object obj1_tFileInputXML_1 = xpaths_tFileInputXML_1.get(1).evaluate(temp_tFileInputXML_1);
    if(obj1_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj1_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj1_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj1_tFileInputXML_1 instanceof String || obj1_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj1_tFileInputXML_1);
    } else if(obj1_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj1_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row3.DB_Port =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row3.DB_Port ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row3.DB_Port =null;
									}else{
		row3.DB_Port = str_tFileInputXML_1;
	}
    Object obj2_tFileInputXML_1 = xpaths_tFileInputXML_1.get(2).evaluate(temp_tFileInputXML_1);
    if(obj2_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj2_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj2_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj2_tFileInputXML_1 instanceof String || obj2_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj2_tFileInputXML_1);
    } else if(obj2_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj2_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row3.DB_Sid =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row3.DB_Sid ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row3.DB_Sid =null;
									}else{
		row3.DB_Sid = str_tFileInputXML_1;
	}
    Object obj3_tFileInputXML_1 = xpaths_tFileInputXML_1.get(3).evaluate(temp_tFileInputXML_1);
    if(obj3_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj3_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj3_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj3_tFileInputXML_1 instanceof String || obj3_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj3_tFileInputXML_1);
    } else if(obj3_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj3_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row3.DB_ServiceName =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row3.DB_ServiceName ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row3.DB_ServiceName =null;
									}else{
		row3.DB_ServiceName = str_tFileInputXML_1;
	}
    Object obj4_tFileInputXML_1 = xpaths_tFileInputXML_1.get(4).evaluate(temp_tFileInputXML_1);
    if(obj4_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj4_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj4_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj4_tFileInputXML_1 instanceof String || obj4_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj4_tFileInputXML_1);
    } else if(obj4_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj4_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row3.DB_Schema =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row3.DB_Schema ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row3.DB_Schema =null;
									}else{
		row3.DB_Schema = str_tFileInputXML_1;
	}
    Object obj5_tFileInputXML_1 = xpaths_tFileInputXML_1.get(5).evaluate(temp_tFileInputXML_1);
    if(obj5_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj5_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj5_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj5_tFileInputXML_1 instanceof String || obj5_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj5_tFileInputXML_1);
    } else if(obj5_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj5_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row3.DB_User =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row3.DB_User ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row3.DB_User =null;
									}else{
		row3.DB_User = str_tFileInputXML_1;
	}
    Object obj6_tFileInputXML_1 = xpaths_tFileInputXML_1.get(6).evaluate(temp_tFileInputXML_1);
    if(obj6_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj6_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj6_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj6_tFileInputXML_1 instanceof String || obj6_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj6_tFileInputXML_1);
    } else if(obj6_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj6_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row3.DB_Password =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row3.DB_Password ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row3.DB_Password =null;
									}else{
		row3.DB_Password = str_tFileInputXML_1;
	}
    Object obj7_tFileInputXML_1 = xpaths_tFileInputXML_1.get(7).evaluate(temp_tFileInputXML_1);
    if(obj7_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj7_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj7_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj7_tFileInputXML_1 instanceof String || obj7_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj7_tFileInputXML_1);
    } else if(obj7_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj7_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row3.FS_PathStorage =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row3.FS_PathStorage ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row3.FS_PathStorage =null;
									}else{
		row3.FS_PathStorage = str_tFileInputXML_1;
	}
    Object obj8_tFileInputXML_1 = xpaths_tFileInputXML_1.get(8).evaluate(temp_tFileInputXML_1);
    if(obj8_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj8_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj8_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj8_tFileInputXML_1 instanceof String || obj8_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj8_tFileInputXML_1);
    } else if(obj8_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj8_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row3.ML_SMTPHost =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row3.ML_SMTPHost ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row3.ML_SMTPHost =null;
									}else{
		row3.ML_SMTPHost = str_tFileInputXML_1;
	}
    Object obj9_tFileInputXML_1 = xpaths_tFileInputXML_1.get(9).evaluate(temp_tFileInputXML_1);
    if(obj9_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj9_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj9_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj9_tFileInputXML_1 instanceof String || obj9_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj9_tFileInputXML_1);
    } else if(obj9_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj9_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row3.ML_SMTPPort =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row3.ML_SMTPPort ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row3.ML_SMTPPort =null;
									}else{
		row3.ML_SMTPPort = str_tFileInputXML_1;
	}
    Object obj10_tFileInputXML_1 = xpaths_tFileInputXML_1.get(10).evaluate(temp_tFileInputXML_1);
    if(obj10_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj10_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj10_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj10_tFileInputXML_1 instanceof String || obj10_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj10_tFileInputXML_1);
    } else if(obj10_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj10_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row3.ML_UsernameMail =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row3.ML_UsernameMail ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row3.ML_UsernameMail =null;
									}else{
		row3.ML_UsernameMail = str_tFileInputXML_1;
	}
    Object obj11_tFileInputXML_1 = xpaths_tFileInputXML_1.get(11).evaluate(temp_tFileInputXML_1);
    if(obj11_tFileInputXML_1 == null) {
    	node_tFileInputXML_1 = null;
    	str_tFileInputXML_1 = "";
    	
    } else if(obj11_tFileInputXML_1 instanceof org.dom4j.Node) {
    	node_tFileInputXML_1 = (org.dom4j.Node)obj11_tFileInputXML_1;
    	str_tFileInputXML_1 = org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
    } else if(obj11_tFileInputXML_1 instanceof String || obj11_tFileInputXML_1 instanceof Number){
    	node_tFileInputXML_1 = temp_tFileInputXML_1;
    	str_tFileInputXML_1 = String.valueOf(obj11_tFileInputXML_1);
    } else if(obj11_tFileInputXML_1 instanceof java.util.List){
    	java.util.List<org.dom4j.Node> nodes_tFileInputXML_1 = (java.util.List<org.dom4j.Node>)obj11_tFileInputXML_1;
    	node_tFileInputXML_1 = nodes_tFileInputXML_1.size()>0 ? nodes_tFileInputXML_1.get(0) : null;
    	str_tFileInputXML_1 = node_tFileInputXML_1==null?"":org.jaxen.function.StringFunction.evaluate(node_tFileInputXML_1,org.jaxen.dom4j.DocumentNavigator.getInstance());
	}
									if(xml_api_tFileInputXML_1.isDefNull(node_tFileInputXML_1)){
											row3.ML_PasswordMail =null;
									}else if(xml_api_tFileInputXML_1.isEmpty(node_tFileInputXML_1)){
										row3.ML_PasswordMail ="";
									}else if(xml_api_tFileInputXML_1.isMissing(node_tFileInputXML_1 )){ 
										row3.ML_PasswordMail =null;
									}else{
		row3.ML_PasswordMail = str_tFileInputXML_1;
	} 
			
    } catch (java.lang.Exception e) {
globalMap.put("tFileInputXML_1_ERROR_MESSAGE",e.getMessage());
        whetherReject_tFileInputXML_1 = true;
                System.err.println(e.getMessage());
                row3 = null;
    }
			
			

 



/**
 * [tFileInputXML_1 begin ] stop
 */
	
	/**
	 * [tFileInputXML_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 


	tos_count_tFileInputXML_1++;

/**
 * [tFileInputXML_1 main ] stop
 */
	
	/**
	 * [tFileInputXML_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 process_data_begin ] stop
 */
// Start of branch "row3"
if(row3 != null) { 



	
	/**
	 * [tJavaRow_3 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					

    //****************************************************************************************//
//*** ALMACENAMIENTO EN VARIABLES DE CONTEXTO DE LA CONFIGURACIÓN DE LA BASE DE DATOS ****//
//****************************************************************************************//
context.oracle_Host=row3.DB_Host;
context.oracle_Port=row3.DB_Port;
//context.oracle_Sid=row3.DB_Sid;
context.oracle_ServiceName=row3.DB_ServiceName;
context.oracle_Schema=row3.DB_Schema;
context.oracle_User=row3.DB_User;
context.oracle_Password=row3.DB_Password;

//****************************************************************************************//
//*** ALMACENAMIENTO EN VARIABLES DE CONTEXTO DE LA CONFIGURACIÓN DEL FILE SYSTEM ********//
//****************************************************************************************//
context.fileSystem_Path=row3.FS_PathStorage;
context.fileSystem_Area = "VSP";
//****************************************************************************************//
//*** ALMACENAMIENTO EN VARIABLES DE CONTEXTO DE LA CONFIGURACIÓN DEL EMAIL **************//
//****************************************************************************************//
//context.mail_SMTPHost=row3.ML_SMTPHost;
//context.mail_SMTPPort=row3.ML_SMTPPort;
//context.mail_UsernameMail=row3.ML_UsernameMail;
//context.mail_PasswordMail=row3.ML_PasswordMail;

//****************************************************************************************//
//*** ALMACENAMIENTO EN VARIABLES DE CONTEXTO DEL NOMBRE PARA EL ARCHIVO DE SALIDA *******//
//****************************************************************************************//
context.archivoSalida=GenerarUuid.createUUID();

//System.out.println(context.fileSystem_Path+"\\"+context.fileSystem_Area+"\\"+context.archivoSalida+".csv");

//****************************************************************************************//
//*** INICIALIZACION DE VARIABLES GLOBALES ***********************************************//
//****************************************************************************************//

//VARIABLE QUE LLEVA EL CONTEO DE FILAS (REGISTROS) DEL ARCHIVO
globalMap.put("FILAS_ARCHIVO", 0);
//VARIABLE QUE LLEVA EL CONTEO DE FILAS DE ERROR DEL ARCHIVO
globalMap.put("FILAS_ERROR", 0);
//VARIABLE QUE LLEVA EL CONTEO DE FILAS DE ERROR DEL ARCHIVO POR CONFIGURACION
globalMap.put("FILAS_ERROR_CONFIGURACION", 0);
//VARIABLE QUE LLEVA EL CONTEO DE FILAS DE ERROR DEL ARCHIVO POR CONTEO DE DIVIPOLA
globalMap.put("FILAS_ERROR_CONTEO_DIVIPOLA", 0);
//VARIABLE QUE LLEVA EL CONTEO DE FILAS DE ERROR DEL ARCHIVO POR CONTEO DE PRIORIDAD CON DIVIPOLA
globalMap.put("FILAS_ERROR_CONTEO_PRIORIDAD_DIVIPOLA", 0);
//VARIABLE QUE LLEVA EL CONTEO DE FILAS DE ERROR DEL ARCHIVO POR VALOR DE PRIORIDAD
globalMap.put("FILAS_ERROR_MAX_MIN_PRIORIDAD", 0);
//VARIABLE QUE LLEVA EL CONTEO DE FILAS DE ERROR DEL ARCHIVO POR CONTEO DE INDICADOR
globalMap.put("FILAS_ERROR_CONTEO_INDICADOR", 0);
    nb_line_tJavaRow_3++;   

 


	tos_count_tJavaRow_3++;

/**
 * [tJavaRow_3 main ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_end ] stop
 */

} // End of branch "row3"




	
	/**
	 * [tFileInputXML_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputXML_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	


}
	}
	globalMap.put("tFileInputXML_1_NB_LINE",nb_line_tFileInputXML_1);

	

 

ok_Hash.put("tFileInputXML_1", true);
end_Hash.put("tFileInputXML_1", System.currentTimeMillis());




/**
 * [tFileInputXML_1 end ] stop
 */

	
	/**
	 * [tJavaRow_3 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

globalMap.put("tJavaRow_3_NB_LINE",nb_line_tJavaRow_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tJavaRow_3", true);
end_Hash.put("tJavaRow_3", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk19", 0, "ok");
				}
				tOracleConnection_1Process(globalMap);



/**
 * [tJavaRow_3 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputXML_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputXML_1";
	
	

 



/**
 * [tFileInputXML_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_3 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputXML_1_SUBPROCESS_STATE", 1);
	}
	


public void tOracleConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tOracleConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleConnection_1", false);
		start_Hash.put("tOracleConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleConnection_1";
	
	
		int tos_count_tOracleConnection_1 = 0;
		
	

	
        String url_tOracleConnection_1 = "jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=" + context.oracle_Host + ")(port=" + context.oracle_Port + "))(connect_data=(service_name=" + context.oracle_ServiceName + ")))";
    	globalMap.put("connectionType_" + "tOracleConnection_1", "ORACLE_SERVICE_NAME");
	String dbUser_tOracleConnection_1 = context.oracle_User;
	
	
		
	final String decryptedPassword_tOracleConnection_1 = context.oracle_Password; 
		String dbPwd_tOracleConnection_1 = decryptedPassword_tOracleConnection_1;
	
	
	java.sql.Connection conn_tOracleConnection_1 = null;
	
		
			String driverClass_tOracleConnection_1 = "oracle.jdbc.OracleDriver";
			java.lang.Class jdbcclazz_tOracleConnection_1 = java.lang.Class.forName(driverClass_tOracleConnection_1);
			globalMap.put("driverClass_tOracleConnection_1", driverClass_tOracleConnection_1);
		
			java.util.Properties atnParamsPrope_tOracleConnection_1 = new java.util.Properties();
			    atnParamsPrope_tOracleConnection_1.put("user",dbUser_tOracleConnection_1);
			    atnParamsPrope_tOracleConnection_1.put("password",dbPwd_tOracleConnection_1);
			if(context.oracle_AdditionalParams != null && !"\"\"".equals(context.oracle_AdditionalParams) && !"".equals(context.oracle_AdditionalParams)){
                atnParamsPrope_tOracleConnection_1.load(new java.io.ByteArrayInputStream(context.oracle_AdditionalParams.replace("&", "\n").getBytes()));
            }
         
			conn_tOracleConnection_1 = java.sql.DriverManager.getConnection(url_tOracleConnection_1, atnParamsPrope_tOracleConnection_1);

		globalMap.put("conn_tOracleConnection_1", conn_tOracleConnection_1);
	if (null != conn_tOracleConnection_1) {
		
			conn_tOracleConnection_1.setAutoCommit(true);
	}
        globalMap.put("host_" + "tOracleConnection_1",context.oracle_Host);
        globalMap.put("port_" + "tOracleConnection_1",context.oracle_Port);
        globalMap.put("dbname_" + "tOracleConnection_1",context.oracle_ServiceName);

	globalMap.put("dbschema_" + "tOracleConnection_1", context.oracle_Schema);
	globalMap.put("username_" + "tOracleConnection_1",context.oracle_User);
	globalMap.put("password_" + "tOracleConnection_1",dbPwd_tOracleConnection_1);

 



/**
 * [tOracleConnection_1 begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 main ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 


	tos_count_tOracleConnection_1++;

/**
 * [tOracleConnection_1 main ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleConnection_1 end ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 

ok_Hash.put("tOracleConnection_1", true);
end_Hash.put("tOracleConnection_1", System.currentTimeMillis());




/**
 * [tOracleConnection_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleConnection_1";
	
	

 



/**
 * [tOracleConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleConnection_1_SUBPROCESS_STATE", 1);
	}
	


public void tDie_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDie_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDie_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_1", false);
		start_Hash.put("tDie_1", System.currentTimeMillis());
		
	
	currentComponent="tDie_1";
	
	
		int tos_count_tDie_1 = 0;
		

 



/**
 * [tDie_1 begin ] stop
 */
	
	/**
	 * [tDie_1 main ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

	try {
	globalMap.put("tDie_1_DIE_PRIORITY", 5);
	System.err.println("the end is near");
	
	globalMap.put("tDie_1_DIE_MESSAGE", "the end is near");
	globalMap.put("tDie_1_DIE_MESSAGES", "the end is near");
	
	} catch (Exception | Error e_tDie_1) {
	    globalMap.put("tDie_1_ERROR_MESSAGE",e_tDie_1.getMessage());
		logIgnoredError(String.format("tDie_1 - tDie failed to log message due to internal error: %s", e_tDie_1), e_tDie_1);
	}
	
	currentComponent = "tDie_1";
	status = "failure";
    	errorCode = new Integer(4);
        ((java.util.Map)threadLocal.get()).put("errorCode", new Integer(4));
        ((java.util.Map)threadLocal.get()).put("status", "failure");
        globalMap.put("tDie_1_DIE_CODE", errorCode);

    
	if(true){	
		TDieException e_tDie_1 = new TDieException();

		

		throw e_tDie_1;
	}

 


	tos_count_tDie_1++;

/**
 * [tDie_1 main ] stop
 */
	
	/**
	 * [tDie_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 process_data_begin ] stop
 */
	
	/**
	 * [tDie_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 process_data_end ] stop
 */
	
	/**
	 * [tDie_1 end ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 

ok_Hash.put("tDie_1", true);
end_Hash.put("tDie_1", System.currentTimeMillis());




/**
 * [tDie_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDie_1 finally ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDie_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_6", false);
		start_Hash.put("tJava_6", System.currentTimeMillis());
		
	
	currentComponent="tJava_6";
	
	
		int tos_count_tJava_6 = 0;
		


//****************************************************************************************//
System.out.println("Archivo de configuración no encontrado.");
//****************************************************************************************//





 



/**
 * [tJava_6 begin ] stop
 */
	
	/**
	 * [tJava_6 main ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 


	tos_count_tJava_6++;

/**
 * [tJava_6 main ] stop
 */
	
	/**
	 * [tJava_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 



/**
 * [tJava_6 process_data_begin ] stop
 */
	
	/**
	 * [tJava_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 



/**
 * [tJava_6 process_data_end ] stop
 */
	
	/**
	 * [tJava_6 end ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 

ok_Hash.put("tJava_6", true);
end_Hash.put("tJava_6", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk20", 0, "ok");
				}
				tDie_1Process(globalMap);



/**
 * [tJava_6 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_6 finally ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 



/**
 * [tJava_6 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_6_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";
	
	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk15", 0, "ok");
				}
				tOracleClose_1Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	


public void tOracleClose_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleClose_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tOracleClose_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleClose_1", false);
		start_Hash.put("tOracleClose_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleClose_1";
	
	
		int tos_count_tOracleClose_1 = 0;
		

 



/**
 * [tOracleClose_1 begin ] stop
 */
	
	/**
	 * [tOracleClose_1 main ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

	java.sql.Connection conn_tOracleClose_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
	
	if(conn_tOracleClose_1 != null && !conn_tOracleClose_1.isClosed())
	{
		
			conn_tOracleClose_1.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_tOracleConnection_1"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}

 


	tos_count_tOracleClose_1++;

/**
 * [tOracleClose_1 main ] stop
 */
	
	/**
	 * [tOracleClose_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleClose_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleClose_1 end ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 

ok_Hash.put("tOracleClose_1", true);
end_Hash.put("tOracleClose_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk6", 0, "ok");
				}
				tJava_1Process(globalMap);



/**
 * [tOracleClose_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleClose_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleClose_1";
	
	

 



/**
 * [tOracleClose_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleClose_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
		int tos_count_tJava_1 = 0;
		


//****************************************************************************************//
System.out.println("****************** POSTJOB FINALIZADO VIGILANCIA SALUD PUBLICA PRIORIZACION ****");

/*System.out.println("(Integer)globalMap.get(FILAS_ERROR): "+(Integer)globalMap.get("FILAS_ERROR"));
System.out.println("(Integer)globalMap.get(FILAS_ERROR_CONFIGURACION): "+(Integer)globalMap.get("FILAS_ERROR_CONFIGURACION"));
System.out.println("(Integer)globalMap.get(FILAS_ERROR_CONTEO_DIVIPOLA): "+(Integer)globalMap.get("FILAS_ERROR_CONTEO_DIVIPOLA"));
System.out.println("(Integer)globalMap.get(FILAS_ERROR_CONTEO_PRIORIDAD_DIVIPOLA): "+(Integer)globalMap.get("FILAS_ERROR_CONTEO_PRIORIDAD_DIVIPOLA"));
System.out.println("(Integer)globalMap.get(FILAS_ERROR_MAX_MIN_PRIORIDAD): "+(Integer)globalMap.get("FILAS_ERROR_MAX_MIN_PRIORIDAD"));
System.out.println("(Integer)globalMap.get(FILAS_ERROR_CONTEO_INDICADOR): "+(Integer)globalMap.get("FILAS_ERROR_CONTEO_INDICADOR"));*/


 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());




/**
 * [tJava_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public Integer ID_INDICADOR;

				public Integer getID_INDICADOR () {
					return this.ID_INDICADOR;
				}

				public Boolean ID_INDICADORIsNullable(){
				    return true;
				}
				public Boolean ID_INDICADORIsKey(){
				    return false;
				}
				public Integer ID_INDICADORLength(){
				    return 0;
				}
				public Integer ID_INDICADORPrecision(){
				    return 0;
				}
				public String ID_INDICADORDefault(){
				
					return null;
				
				}
				public String ID_INDICADORComment(){
				
				    return "";
				
				}
				public String ID_INDICADORPattern(){
				
					return "";
				
				}
				public String ID_INDICADOROriginalDbColumnName(){
				
					return "ID_INDICADOR";
				
				}

				
			    public Integer CODIGO_INDICADOR;

				public Integer getCODIGO_INDICADOR () {
					return this.CODIGO_INDICADOR;
				}

				public Boolean CODIGO_INDICADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_INDICADORIsKey(){
				    return false;
				}
				public Integer CODIGO_INDICADORLength(){
				    return 0;
				}
				public Integer CODIGO_INDICADORPrecision(){
				    return 0;
				}
				public String CODIGO_INDICADORDefault(){
				
					return null;
				
				}
				public String CODIGO_INDICADORComment(){
				
				    return "";
				
				}
				public String CODIGO_INDICADORPattern(){
				
					return "";
				
				}
				public String CODIGO_INDICADOROriginalDbColumnName(){
				
					return "CODIGO_INDICADOR";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID_INDICADOR = readInteger(dis);
					
						this.CODIGO_INDICADOR = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID_INDICADOR = readInteger(dis);
					
						this.CODIGO_INDICADOR = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_INDICADOR,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_INDICADOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_INDICADOR,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_INDICADOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_INDICADOR="+String.valueOf(ID_INDICADOR));
		sb.append(",CODIGO_INDICADOR="+String.valueOf(CODIGO_INDICADOR));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row9Struct row9 = new row9Struct();




	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row9Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_ETL_vigilancia_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row9Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tOracleInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_2", false);
		start_Hash.put("tOracleInput_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_2";
	
	
		int tos_count_tOracleInput_2 = 0;
		
	


	
		    int nb_line_tOracleInput_2 = 0;
		    java.sql.Connection conn_tOracleInput_2 = null;
				conn_tOracleInput_2 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_2 = false;
				boolean isConnectionWrapped_tOracleInput_2 = !(conn_tOracleInput_2 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_2.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_2 = null;
                if (isConnectionWrapped_tOracleInput_2) {
					unwrappedOraConn_tOracleInput_2 = conn_tOracleInput_2.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_2 != null) {
                        isTimeZoneNull_tOracleInput_2 = (unwrappedOraConn_tOracleInput_2.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_2 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_2).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_2) {
					java.sql.Statement stmtGetTZ_tOracleInput_2 = conn_tOracleInput_2.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_2 = stmtGetTZ_tOracleInput_2.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_2 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_2.next()) {
						sessionTimezone_tOracleInput_2 = rsGetTZ_tOracleInput_2.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_2 && unwrappedOraConn_tOracleInput_2 != null) {
                        unwrappedOraConn_tOracleInput_2.setSessionTimeZone(sessionTimezone_tOracleInput_2);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_2).setSessionTimeZone(sessionTimezone_tOracleInput_2);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_2 = conn_tOracleInput_2.createStatement();

		    String dbquery_tOracleInput_2 = "SELECT\n       VTI.ID AS ID_INDICADOR,\n       VTI.CODIGO AS CODIGO_INDICADOR\nFROM\n       SALUDSIS.VSP_TINDICADORES V"
+"TI\nWHERE\n       VTI.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_2_QUERY",dbquery_tOracleInput_2);

		    java.sql.ResultSet rs_tOracleInput_2 = null;

		    try {
		    	rs_tOracleInput_2 = stmt_tOracleInput_2.executeQuery(dbquery_tOracleInput_2);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_2 = rs_tOracleInput_2.getMetaData();
		    	int colQtyInRs_tOracleInput_2 = rsmd_tOracleInput_2.getColumnCount();

		    String tmpContent_tOracleInput_2 = null;
		    
		    
		    while (rs_tOracleInput_2.next()) {
		        nb_line_tOracleInput_2++;
		        
							if(colQtyInRs_tOracleInput_2 < 1) {
								row9.ID_INDICADOR = null;
							} else {
		                          
					if(rs_tOracleInput_2.getObject(1) != null) {
						row9.ID_INDICADOR = rs_tOracleInput_2.getInt(1);
					} else {
				
						row9.ID_INDICADOR = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_2 < 2) {
								row9.CODIGO_INDICADOR = null;
							} else {
		                          
					if(rs_tOracleInput_2.getObject(2) != null) {
						row9.CODIGO_INDICADOR = rs_tOracleInput_2.getInt(2);
					} else {
				
						row9.CODIGO_INDICADOR = null;
					}
		                    }
					




 



/**
 * [tOracleInput_2 begin ] stop
 */
	
	/**
	 * [tOracleInput_2 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 


	tos_count_tOracleInput_2++;

/**
 * [tOracleInput_2 main ] stop
 */
	
	/**
	 * [tOracleInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					



    
		row9Struct oneRow_tHashOutput_1 = new row9Struct();
				
					oneRow_tHashOutput_1.ID_INDICADOR = row9.ID_INDICADOR;
					oneRow_tHashOutput_1.CODIGO_INDICADOR = row9.CODIGO_INDICADOR;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_2 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

}
}finally{
	if (rs_tOracleInput_2 != null) {
		rs_tOracleInput_2.close();
	}
	if (stmt_tOracleInput_2 != null) {
		stmt_tOracleInput_2.close();
	}
}

globalMap.put("tOracleInput_2_NB_LINE",nb_line_tOracleInput_2);
 

ok_Hash.put("tOracleInput_2", true);
end_Hash.put("tOracleInput_2", System.currentTimeMillis());




/**
 * [tOracleInput_2 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());




/**
 * [tHashOutput_1 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk1", 0, "ok");
								} 
							
							tOracleInput_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_2";
	
	

 



/**
 * [tOracleInput_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public Integer ID_SEXO;

				public Integer getID_SEXO () {
					return this.ID_SEXO;
				}

				public Boolean ID_SEXOIsNullable(){
				    return true;
				}
				public Boolean ID_SEXOIsKey(){
				    return false;
				}
				public Integer ID_SEXOLength(){
				    return 0;
				}
				public Integer ID_SEXOPrecision(){
				    return 0;
				}
				public String ID_SEXODefault(){
				
					return null;
				
				}
				public String ID_SEXOComment(){
				
				    return "";
				
				}
				public String ID_SEXOPattern(){
				
					return "";
				
				}
				public String ID_SEXOOriginalDbColumnName(){
				
					return "ID_SEXO";
				
				}

				
			    public Integer CODIGO_SEXO;

				public Integer getCODIGO_SEXO () {
					return this.CODIGO_SEXO;
				}

				public Boolean CODIGO_SEXOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SEXOIsKey(){
				    return false;
				}
				public Integer CODIGO_SEXOLength(){
				    return 0;
				}
				public Integer CODIGO_SEXOPrecision(){
				    return 0;
				}
				public String CODIGO_SEXODefault(){
				
					return null;
				
				}
				public String CODIGO_SEXOComment(){
				
				    return "";
				
				}
				public String CODIGO_SEXOPattern(){
				
					return "";
				
				}
				public String CODIGO_SEXOOriginalDbColumnName(){
				
					return "CODIGO_SEXO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID_SEXO = readInteger(dis);
					
						this.CODIGO_SEXO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID_SEXO = readInteger(dis);
					
						this.CODIGO_SEXO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_SEXO,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_SEXO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_SEXO,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_SEXO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_SEXO="+String.valueOf(ID_SEXO));
		sb.append(",CODIGO_SEXO="+String.valueOf(CODIGO_SEXO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row6Struct row6 = new row6Struct();




	
	/**
	 * [tHashOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_2", false);
		start_Hash.put("tHashOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tHashOutput_2 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row6Struct> tHashFile_tHashOutput_2 = null;
		String hashKey_tHashOutput_2 = "tHashFile_ETL_vigilancia_" + pid + "_tHashOutput_2";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_2)){
			    if(mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2) == null){
	      		    mf_tHashOutput_2.getResourceMap().put(hashKey_tHashOutput_2, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row6Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }else{
			    	tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }
			}
        int nb_line_tHashOutput_2 = 0;

 



/**
 * [tHashOutput_2 begin ] stop
 */



	
	/**
	 * [tOracleInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_3", false);
		start_Hash.put("tOracleInput_3", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_3";
	
	
		int tos_count_tOracleInput_3 = 0;
		
	


	
		    int nb_line_tOracleInput_3 = 0;
		    java.sql.Connection conn_tOracleInput_3 = null;
				conn_tOracleInput_3 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_3 = false;
				boolean isConnectionWrapped_tOracleInput_3 = !(conn_tOracleInput_3 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_3.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_3 = null;
                if (isConnectionWrapped_tOracleInput_3) {
					unwrappedOraConn_tOracleInput_3 = conn_tOracleInput_3.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_3 != null) {
                        isTimeZoneNull_tOracleInput_3 = (unwrappedOraConn_tOracleInput_3.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_3 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_3).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_3) {
					java.sql.Statement stmtGetTZ_tOracleInput_3 = conn_tOracleInput_3.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_3 = stmtGetTZ_tOracleInput_3.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_3 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_3.next()) {
						sessionTimezone_tOracleInput_3 = rsGetTZ_tOracleInput_3.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_3 && unwrappedOraConn_tOracleInput_3 != null) {
                        unwrappedOraConn_tOracleInput_3.setSessionTimeZone(sessionTimezone_tOracleInput_3);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_3).setSessionTimeZone(sessionTimezone_tOracleInput_3);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_3 = conn_tOracleInput_3.createStatement();

		    String dbquery_tOracleInput_3 = "SELECT\n  GSX.ID AS ID_SEXO,\n  GSX.CODIGO AS CODIGO_SEXO\nFROM\n  SALUDSIS.GEN_SEXOS GSX\nWHERE\n  GSX.CODIGO IS NOT N"
+"ULL AND\n  GSX.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_3_QUERY",dbquery_tOracleInput_3);

		    java.sql.ResultSet rs_tOracleInput_3 = null;

		    try {
		    	rs_tOracleInput_3 = stmt_tOracleInput_3.executeQuery(dbquery_tOracleInput_3);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_3 = rs_tOracleInput_3.getMetaData();
		    	int colQtyInRs_tOracleInput_3 = rsmd_tOracleInput_3.getColumnCount();

		    String tmpContent_tOracleInput_3 = null;
		    
		    
		    while (rs_tOracleInput_3.next()) {
		        nb_line_tOracleInput_3++;
		        
							if(colQtyInRs_tOracleInput_3 < 1) {
								row6.ID_SEXO = null;
							} else {
		                          
					if(rs_tOracleInput_3.getObject(1) != null) {
						row6.ID_SEXO = rs_tOracleInput_3.getInt(1);
					} else {
				
						row6.ID_SEXO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_3 < 2) {
								row6.CODIGO_SEXO = null;
							} else {
		                          
					if(rs_tOracleInput_3.getObject(2) != null) {
						row6.CODIGO_SEXO = rs_tOracleInput_3.getInt(2);
					} else {
				
						row6.CODIGO_SEXO = null;
					}
		                    }
					




 



/**
 * [tOracleInput_3 begin ] stop
 */
	
	/**
	 * [tOracleInput_3 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 


	tos_count_tOracleInput_3++;

/**
 * [tOracleInput_3 main ] stop
 */
	
	/**
	 * [tOracleInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_2 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					



    
		row6Struct oneRow_tHashOutput_2 = new row6Struct();
				
					oneRow_tHashOutput_2.ID_SEXO = row6.ID_SEXO;
					oneRow_tHashOutput_2.CODIGO_SEXO = row6.CODIGO_SEXO;
		
        tHashFile_tHashOutput_2.put(oneRow_tHashOutput_2);
        nb_line_tHashOutput_2 ++;

 


	tos_count_tHashOutput_2++;

/**
 * [tHashOutput_2 main ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_3 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

}
}finally{
	if (rs_tOracleInput_3 != null) {
		rs_tOracleInput_3.close();
	}
	if (stmt_tOracleInput_3 != null) {
		stmt_tOracleInput_3.close();
	}
}

globalMap.put("tOracleInput_3_NB_LINE",nb_line_tOracleInput_3);
 

ok_Hash.put("tOracleInput_3", true);
end_Hash.put("tOracleInput_3", System.currentTimeMillis());




/**
 * [tOracleInput_3 end ] stop
 */

	
	/**
	 * [tHashOutput_2 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
globalMap.put("tHashOutput_2_NB_LINE", nb_line_tHashOutput_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tHashOutput_2", true);
end_Hash.put("tHashOutput_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk8", 0, "ok");
				}
				tFixedFlowInput_3Process(globalMap);



/**
 * [tHashOutput_2 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk2", 0, "ok");
								} 
							
							tOracleInput_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_3 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_3";
	
	

 



/**
 * [tOracleInput_3 finally ] stop
 */

	
	/**
	 * [tHashOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public Integer ID_SEXO;

				public Integer getID_SEXO () {
					return this.ID_SEXO;
				}

				public Boolean ID_SEXOIsNullable(){
				    return true;
				}
				public Boolean ID_SEXOIsKey(){
				    return false;
				}
				public Integer ID_SEXOLength(){
				    return 0;
				}
				public Integer ID_SEXOPrecision(){
				    return 0;
				}
				public String ID_SEXODefault(){
				
					return null;
				
				}
				public String ID_SEXOComment(){
				
				    return "";
				
				}
				public String ID_SEXOPattern(){
				
					return "";
				
				}
				public String ID_SEXOOriginalDbColumnName(){
				
					return "ID_SEXO";
				
				}

				
			    public Integer CODIGO_SEXO;

				public Integer getCODIGO_SEXO () {
					return this.CODIGO_SEXO;
				}

				public Boolean CODIGO_SEXOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SEXOIsKey(){
				    return false;
				}
				public Integer CODIGO_SEXOLength(){
				    return 0;
				}
				public Integer CODIGO_SEXOPrecision(){
				    return 0;
				}
				public String CODIGO_SEXODefault(){
				
					return null;
				
				}
				public String CODIGO_SEXOComment(){
				
				    return "";
				
				}
				public String CODIGO_SEXOPattern(){
				
					return "";
				
				}
				public String CODIGO_SEXOOriginalDbColumnName(){
				
					return "CODIGO_SEXO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID_SEXO = readInteger(dis);
					
						this.CODIGO_SEXO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID_SEXO = readInteger(dis);
					
						this.CODIGO_SEXO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_SEXO,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_SEXO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_SEXO,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_SEXO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_SEXO="+String.valueOf(ID_SEXO));
		sb.append(",CODIGO_SEXO="+String.valueOf(CODIGO_SEXO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row10Struct row10 = new row10Struct();




	
	/**
	 * [tHashOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_3", false);
		start_Hash.put("tHashOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tHashOutput_3 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row6Struct> tHashFile_tHashOutput_3 = null; 
		//use this map to keep the present key and the previous key of AdvancedMemoryHashFile
		mf_tHashOutput_3.getKeyMap().put("tHashFile_ETL_vigilancia_" +pid + "_tHashOutput_3", "tHashFile_ETL_vigilancia_" + pid + "_tHashOutput_2");
        int nb_line_tHashOutput_3 = 0;

 



/**
 * [tHashOutput_3 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_3", false);
		start_Hash.put("tFixedFlowInput_3", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_3";
	
	
		int tos_count_tFixedFlowInput_3 = 0;
		

	    for (int i_tFixedFlowInput_3 = 0 ; i_tFixedFlowInput_3 < 1 ; i_tFixedFlowInput_3++) {
	                	            	
    	            		row10.ID_SEXO = null;
    	            	        	            	
    	            		row10.CODIGO_SEXO = 9;
    	            	

 



/**
 * [tFixedFlowInput_3 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 


	tos_count_tFixedFlowInput_3++;

/**
 * [tFixedFlowInput_3 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_3 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					




		if(tHashFile_tHashOutput_3 == null){
			tHashFile_tHashOutput_3 = mf_tHashOutput_3.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_2");
			mf_tHashOutput_3.getResourceMap().put("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_3", tHashFile_tHashOutput_3);
		}
		row6Struct oneRow_tHashOutput_3 = new row6Struct();
			oneRow_tHashOutput_3.ID_SEXO = row10.ID_SEXO;
			oneRow_tHashOutput_3.CODIGO_SEXO = row10.CODIGO_SEXO;
        tHashFile_tHashOutput_3.put(oneRow_tHashOutput_3);
        nb_line_tHashOutput_3 ++;	

 


	tos_count_tHashOutput_3++;

/**
 * [tHashOutput_3 main ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

        }
        globalMap.put("tFixedFlowInput_3_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_3", true);
end_Hash.put("tFixedFlowInput_3", System.currentTimeMillis());




/**
 * [tFixedFlowInput_3 end ] stop
 */

	
	/**
	 * [tHashOutput_3 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
globalMap.put("tHashOutput_3_NB_LINE", nb_line_tHashOutput_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tHashOutput_3", true);
end_Hash.put("tHashOutput_3", System.currentTimeMillis());




/**
 * [tHashOutput_3 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_3 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 finally ] stop
 */

	
	/**
	 * [tHashOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public Integer ID_EDAD;

				public Integer getID_EDAD () {
					return this.ID_EDAD;
				}

				public Boolean ID_EDADIsNullable(){
				    return true;
				}
				public Boolean ID_EDADIsKey(){
				    return false;
				}
				public Integer ID_EDADLength(){
				    return 0;
				}
				public Integer ID_EDADPrecision(){
				    return 0;
				}
				public String ID_EDADDefault(){
				
					return null;
				
				}
				public String ID_EDADComment(){
				
				    return "";
				
				}
				public String ID_EDADPattern(){
				
					return "";
				
				}
				public String ID_EDADOriginalDbColumnName(){
				
					return "ID_EDAD";
				
				}

				
			    public Integer CODIGO_EDAD;

				public Integer getCODIGO_EDAD () {
					return this.CODIGO_EDAD;
				}

				public Boolean CODIGO_EDADIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EDADIsKey(){
				    return false;
				}
				public Integer CODIGO_EDADLength(){
				    return 0;
				}
				public Integer CODIGO_EDADPrecision(){
				    return 0;
				}
				public String CODIGO_EDADDefault(){
				
					return null;
				
				}
				public String CODIGO_EDADComment(){
				
				    return "";
				
				}
				public String CODIGO_EDADPattern(){
				
					return "";
				
				}
				public String CODIGO_EDADOriginalDbColumnName(){
				
					return "CODIGO_EDAD";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID_EDAD = readInteger(dis);
					
						this.CODIGO_EDAD = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID_EDAD = readInteger(dis);
					
						this.CODIGO_EDAD = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_EDAD,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_EDAD,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_EDAD,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_EDAD,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_EDAD="+String.valueOf(ID_EDAD));
		sb.append(",CODIGO_EDAD="+String.valueOf(CODIGO_EDAD));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row13Struct row13 = new row13Struct();




	
	/**
	 * [tHashOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_4", false);
		start_Hash.put("tHashOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tHashOutput_4 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row13Struct> tHashFile_tHashOutput_4 = null;
		String hashKey_tHashOutput_4 = "tHashFile_ETL_vigilancia_" + pid + "_tHashOutput_4";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_4)){
			    if(mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4) == null){
	      		    mf_tHashOutput_4.getResourceMap().put(hashKey_tHashOutput_4, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row13Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }else{
			    	tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }
			}
        int nb_line_tHashOutput_4 = 0;

 



/**
 * [tHashOutput_4 begin ] stop
 */



	
	/**
	 * [tOracleInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_4", false);
		start_Hash.put("tOracleInput_4", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_4";
	
	
		int tos_count_tOracleInput_4 = 0;
		
	


	
		    int nb_line_tOracleInput_4 = 0;
		    java.sql.Connection conn_tOracleInput_4 = null;
				conn_tOracleInput_4 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_4 = false;
				boolean isConnectionWrapped_tOracleInput_4 = !(conn_tOracleInput_4 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_4.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_4 = null;
                if (isConnectionWrapped_tOracleInput_4) {
					unwrappedOraConn_tOracleInput_4 = conn_tOracleInput_4.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_4 != null) {
                        isTimeZoneNull_tOracleInput_4 = (unwrappedOraConn_tOracleInput_4.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_4 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_4).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_4) {
					java.sql.Statement stmtGetTZ_tOracleInput_4 = conn_tOracleInput_4.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_4 = stmtGetTZ_tOracleInput_4.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_4 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_4.next()) {
						sessionTimezone_tOracleInput_4 = rsGetTZ_tOracleInput_4.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_4 && unwrappedOraConn_tOracleInput_4 != null) {
                        unwrappedOraConn_tOracleInput_4.setSessionTimeZone(sessionTimezone_tOracleInput_4);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_4).setSessionTimeZone(sessionTimezone_tOracleInput_4);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_4 = conn_tOracleInput_4.createStatement();

		    String dbquery_tOracleInput_4 = "SELECT\n  GRE.ID AS ID_EDAD,\n  GRE.CODIGO AS CODIGO_EDAD\nFROM\n  SALUDSIS.GEN_RANGOEDAD GRE\nWHERE\n  GRE.CLASIFICACI"
+"ON ='Indicadores VSP' AND\n  GRE.CODIGO IS NOT NULL AND\n  GRE.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_4_QUERY",dbquery_tOracleInput_4);

		    java.sql.ResultSet rs_tOracleInput_4 = null;

		    try {
		    	rs_tOracleInput_4 = stmt_tOracleInput_4.executeQuery(dbquery_tOracleInput_4);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_4 = rs_tOracleInput_4.getMetaData();
		    	int colQtyInRs_tOracleInput_4 = rsmd_tOracleInput_4.getColumnCount();

		    String tmpContent_tOracleInput_4 = null;
		    
		    
		    while (rs_tOracleInput_4.next()) {
		        nb_line_tOracleInput_4++;
		        
							if(colQtyInRs_tOracleInput_4 < 1) {
								row13.ID_EDAD = null;
							} else {
		                          
					if(rs_tOracleInput_4.getObject(1) != null) {
						row13.ID_EDAD = rs_tOracleInput_4.getInt(1);
					} else {
				
						row13.ID_EDAD = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_4 < 2) {
								row13.CODIGO_EDAD = null;
							} else {
		                          
					if(rs_tOracleInput_4.getObject(2) != null) {
						row13.CODIGO_EDAD = rs_tOracleInput_4.getInt(2);
					} else {
				
						row13.CODIGO_EDAD = null;
					}
		                    }
					




 



/**
 * [tOracleInput_4 begin ] stop
 */
	
	/**
	 * [tOracleInput_4 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 


	tos_count_tOracleInput_4++;

/**
 * [tOracleInput_4 main ] stop
 */
	
	/**
	 * [tOracleInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_4 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					



    
		row13Struct oneRow_tHashOutput_4 = new row13Struct();
				
					oneRow_tHashOutput_4.ID_EDAD = row13.ID_EDAD;
					oneRow_tHashOutput_4.CODIGO_EDAD = row13.CODIGO_EDAD;
		
        tHashFile_tHashOutput_4.put(oneRow_tHashOutput_4);
        nb_line_tHashOutput_4 ++;

 


	tos_count_tHashOutput_4++;

/**
 * [tHashOutput_4 main ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_4 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

}
}finally{
	if (rs_tOracleInput_4 != null) {
		rs_tOracleInput_4.close();
	}
	if (stmt_tOracleInput_4 != null) {
		stmt_tOracleInput_4.close();
	}
}

globalMap.put("tOracleInput_4_NB_LINE",nb_line_tOracleInput_4);
 

ok_Hash.put("tOracleInput_4", true);
end_Hash.put("tOracleInput_4", System.currentTimeMillis());




/**
 * [tOracleInput_4 end ] stop
 */

	
	/**
	 * [tHashOutput_4 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
globalMap.put("tHashOutput_4_NB_LINE", nb_line_tHashOutput_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tHashOutput_4", true);
end_Hash.put("tHashOutput_4", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk9", 0, "ok");
				}
				tFixedFlowInput_7Process(globalMap);



/**
 * [tHashOutput_4 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk3", 0, "ok");
								} 
							
							tOracleInput_5Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_4 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_4";
	
	

 



/**
 * [tOracleInput_4 finally ] stop
 */

	
	/**
	 * [tHashOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row15Struct implements routines.system.IPersistableRow<row15Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public Integer ID_EDAD;

				public Integer getID_EDAD () {
					return this.ID_EDAD;
				}

				public Boolean ID_EDADIsNullable(){
				    return true;
				}
				public Boolean ID_EDADIsKey(){
				    return false;
				}
				public Integer ID_EDADLength(){
				    return 0;
				}
				public Integer ID_EDADPrecision(){
				    return 0;
				}
				public String ID_EDADDefault(){
				
					return null;
				
				}
				public String ID_EDADComment(){
				
				    return "";
				
				}
				public String ID_EDADPattern(){
				
					return "";
				
				}
				public String ID_EDADOriginalDbColumnName(){
				
					return "ID_EDAD";
				
				}

				
			    public Integer CODIGO_EDAD;

				public Integer getCODIGO_EDAD () {
					return this.CODIGO_EDAD;
				}

				public Boolean CODIGO_EDADIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EDADIsKey(){
				    return false;
				}
				public Integer CODIGO_EDADLength(){
				    return 0;
				}
				public Integer CODIGO_EDADPrecision(){
				    return 0;
				}
				public String CODIGO_EDADDefault(){
				
					return null;
				
				}
				public String CODIGO_EDADComment(){
				
				    return "";
				
				}
				public String CODIGO_EDADPattern(){
				
					return "";
				
				}
				public String CODIGO_EDADOriginalDbColumnName(){
				
					return "CODIGO_EDAD";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID_EDAD = readInteger(dis);
					
						this.CODIGO_EDAD = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID_EDAD = readInteger(dis);
					
						this.CODIGO_EDAD = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_EDAD,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_EDAD,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_EDAD,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_EDAD,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_EDAD="+String.valueOf(ID_EDAD));
		sb.append(",CODIGO_EDAD="+String.valueOf(CODIGO_EDAD));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row15Struct row15 = new row15Struct();




	
	/**
	 * [tHashOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_5", false);
		start_Hash.put("tHashOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tHashOutput_5 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row13Struct> tHashFile_tHashOutput_5 = null; 
		//use this map to keep the present key and the previous key of AdvancedMemoryHashFile
		mf_tHashOutput_5.getKeyMap().put("tHashFile_ETL_vigilancia_" +pid + "_tHashOutput_5", "tHashFile_ETL_vigilancia_" + pid + "_tHashOutput_4");
        int nb_line_tHashOutput_5 = 0;

 



/**
 * [tHashOutput_5 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_7", false);
		start_Hash.put("tFixedFlowInput_7", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_7";
	
	
		int tos_count_tFixedFlowInput_7 = 0;
		

	    for (int i_tFixedFlowInput_7 = 0 ; i_tFixedFlowInput_7 < 1 ; i_tFixedFlowInput_7++) {
	                	            	
    	            		row15.ID_EDAD = null;
    	            	        	            	
    	            		row15.CODIGO_EDAD = 999;
    	            	

 



/**
 * [tFixedFlowInput_7 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_7 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_7";
	
	

 


	tos_count_tFixedFlowInput_7++;

/**
 * [tFixedFlowInput_7 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_7";
	
	

 



/**
 * [tFixedFlowInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_5 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row15"
						
						);
					}
					




		if(tHashFile_tHashOutput_5 == null){
			tHashFile_tHashOutput_5 = mf_tHashOutput_5.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_4");
			mf_tHashOutput_5.getResourceMap().put("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_5", tHashFile_tHashOutput_5);
		}
		row13Struct oneRow_tHashOutput_5 = new row13Struct();
			oneRow_tHashOutput_5.ID_EDAD = row15.ID_EDAD;
			oneRow_tHashOutput_5.CODIGO_EDAD = row15.CODIGO_EDAD;
        tHashFile_tHashOutput_5.put(oneRow_tHashOutput_5);
        nb_line_tHashOutput_5 ++;	

 


	tos_count_tHashOutput_5++;

/**
 * [tHashOutput_5 main ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_7";
	
	

 



/**
 * [tFixedFlowInput_7 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_7 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_7";
	
	

        }
        globalMap.put("tFixedFlowInput_7_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_7", true);
end_Hash.put("tFixedFlowInput_7", System.currentTimeMillis());




/**
 * [tFixedFlowInput_7 end ] stop
 */

	
	/**
	 * [tHashOutput_5 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
globalMap.put("tHashOutput_5_NB_LINE", nb_line_tHashOutput_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tHashOutput_5", true);
end_Hash.put("tHashOutput_5", System.currentTimeMillis());




/**
 * [tHashOutput_5 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_7 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_7";
	
	

 



/**
 * [tFixedFlowInput_7 finally ] stop
 */

	
	/**
	 * [tHashOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public Integer ID_ETNIA;

				public Integer getID_ETNIA () {
					return this.ID_ETNIA;
				}

				public Boolean ID_ETNIAIsNullable(){
				    return true;
				}
				public Boolean ID_ETNIAIsKey(){
				    return false;
				}
				public Integer ID_ETNIALength(){
				    return 0;
				}
				public Integer ID_ETNIAPrecision(){
				    return 0;
				}
				public String ID_ETNIADefault(){
				
					return null;
				
				}
				public String ID_ETNIAComment(){
				
				    return "";
				
				}
				public String ID_ETNIAPattern(){
				
					return "";
				
				}
				public String ID_ETNIAOriginalDbColumnName(){
				
					return "ID_ETNIA";
				
				}

				
			    public Integer CODIGO_ETNIA;

				public Integer getCODIGO_ETNIA () {
					return this.CODIGO_ETNIA;
				}

				public Boolean CODIGO_ETNIAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ETNIAIsKey(){
				    return false;
				}
				public Integer CODIGO_ETNIALength(){
				    return 0;
				}
				public Integer CODIGO_ETNIAPrecision(){
				    return 0;
				}
				public String CODIGO_ETNIADefault(){
				
					return null;
				
				}
				public String CODIGO_ETNIAComment(){
				
				    return "";
				
				}
				public String CODIGO_ETNIAPattern(){
				
					return "";
				
				}
				public String CODIGO_ETNIAOriginalDbColumnName(){
				
					return "CODIGO_ETNIA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID_ETNIA = readInteger(dis);
					
						this.CODIGO_ETNIA = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID_ETNIA = readInteger(dis);
					
						this.CODIGO_ETNIA = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_ETNIA,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_ETNIA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_ETNIA,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_ETNIA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ETNIA="+String.valueOf(ID_ETNIA));
		sb.append(",CODIGO_ETNIA="+String.valueOf(CODIGO_ETNIA));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row17Struct row17 = new row17Struct();




	
	/**
	 * [tHashOutput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_6", false);
		start_Hash.put("tHashOutput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tHashOutput_6 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row17Struct> tHashFile_tHashOutput_6 = null;
		String hashKey_tHashOutput_6 = "tHashFile_ETL_vigilancia_" + pid + "_tHashOutput_6";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_6)){
			    if(mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6) == null){
	      		    mf_tHashOutput_6.getResourceMap().put(hashKey_tHashOutput_6, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row17Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }else{
			    	tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }
			}
        int nb_line_tHashOutput_6 = 0;

 



/**
 * [tHashOutput_6 begin ] stop
 */



	
	/**
	 * [tOracleInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_5", false);
		start_Hash.put("tOracleInput_5", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_5";
	
	
		int tos_count_tOracleInput_5 = 0;
		
	


	
		    int nb_line_tOracleInput_5 = 0;
		    java.sql.Connection conn_tOracleInput_5 = null;
				conn_tOracleInput_5 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_5 = false;
				boolean isConnectionWrapped_tOracleInput_5 = !(conn_tOracleInput_5 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_5.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_5 = null;
                if (isConnectionWrapped_tOracleInput_5) {
					unwrappedOraConn_tOracleInput_5 = conn_tOracleInput_5.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_5 != null) {
                        isTimeZoneNull_tOracleInput_5 = (unwrappedOraConn_tOracleInput_5.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_5 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_5).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_5) {
					java.sql.Statement stmtGetTZ_tOracleInput_5 = conn_tOracleInput_5.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_5 = stmtGetTZ_tOracleInput_5.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_5 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_5.next()) {
						sessionTimezone_tOracleInput_5 = rsGetTZ_tOracleInput_5.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_5 && unwrappedOraConn_tOracleInput_5 != null) {
                        unwrappedOraConn_tOracleInput_5.setSessionTimeZone(sessionTimezone_tOracleInput_5);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_5).setSessionTimeZone(sessionTimezone_tOracleInput_5);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_5 = conn_tOracleInput_5.createStatement();

		    String dbquery_tOracleInput_5 = "SELECT\n  GET.ID AS ID_ETNIA,\n  GET.CODIGO AS CODIGO_ETNIA\nFROM\n  SALUDSIS.GEN_ETNICAS GET\nWHERE\n  GET.CODIGO IS N"
+"OT NULL AND\n  GET.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_5_QUERY",dbquery_tOracleInput_5);

		    java.sql.ResultSet rs_tOracleInput_5 = null;

		    try {
		    	rs_tOracleInput_5 = stmt_tOracleInput_5.executeQuery(dbquery_tOracleInput_5);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_5 = rs_tOracleInput_5.getMetaData();
		    	int colQtyInRs_tOracleInput_5 = rsmd_tOracleInput_5.getColumnCount();

		    String tmpContent_tOracleInput_5 = null;
		    
		    
		    while (rs_tOracleInput_5.next()) {
		        nb_line_tOracleInput_5++;
		        
							if(colQtyInRs_tOracleInput_5 < 1) {
								row17.ID_ETNIA = null;
							} else {
		                          
					if(rs_tOracleInput_5.getObject(1) != null) {
						row17.ID_ETNIA = rs_tOracleInput_5.getInt(1);
					} else {
				
						row17.ID_ETNIA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_5 < 2) {
								row17.CODIGO_ETNIA = null;
							} else {
		                          
					if(rs_tOracleInput_5.getObject(2) != null) {
						row17.CODIGO_ETNIA = rs_tOracleInput_5.getInt(2);
					} else {
				
						row17.CODIGO_ETNIA = null;
					}
		                    }
					




 



/**
 * [tOracleInput_5 begin ] stop
 */
	
	/**
	 * [tOracleInput_5 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 


	tos_count_tOracleInput_5++;

/**
 * [tOracleInput_5 main ] stop
 */
	
	/**
	 * [tOracleInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 



/**
 * [tOracleInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_6 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					



    
		row17Struct oneRow_tHashOutput_6 = new row17Struct();
				
					oneRow_tHashOutput_6.ID_ETNIA = row17.ID_ETNIA;
					oneRow_tHashOutput_6.CODIGO_ETNIA = row17.CODIGO_ETNIA;
		
        tHashFile_tHashOutput_6.put(oneRow_tHashOutput_6);
        nb_line_tHashOutput_6 ++;

 


	tos_count_tHashOutput_6++;

/**
 * [tHashOutput_6 main ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 



/**
 * [tOracleInput_5 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_5 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

}
}finally{
	if (rs_tOracleInput_5 != null) {
		rs_tOracleInput_5.close();
	}
	if (stmt_tOracleInput_5 != null) {
		stmt_tOracleInput_5.close();
	}
}

globalMap.put("tOracleInput_5_NB_LINE",nb_line_tOracleInput_5);
 

ok_Hash.put("tOracleInput_5", true);
end_Hash.put("tOracleInput_5", System.currentTimeMillis());




/**
 * [tOracleInput_5 end ] stop
 */

	
	/**
	 * [tHashOutput_6 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
globalMap.put("tHashOutput_6_NB_LINE", nb_line_tHashOutput_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tHashOutput_6", true);
end_Hash.put("tHashOutput_6", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk10", 0, "ok");
				}
				tFixedFlowInput_10Process(globalMap);



/**
 * [tHashOutput_6 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_5:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk4", 0, "ok");
								} 
							
							tOracleInput_7Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_5 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_5";
	
	

 



/**
 * [tOracleInput_5 finally ] stop
 */

	
	/**
	 * [tHashOutput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row21Struct implements routines.system.IPersistableRow<row21Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public Integer ID_ETNIA;

				public Integer getID_ETNIA () {
					return this.ID_ETNIA;
				}

				public Boolean ID_ETNIAIsNullable(){
				    return true;
				}
				public Boolean ID_ETNIAIsKey(){
				    return false;
				}
				public Integer ID_ETNIALength(){
				    return 0;
				}
				public Integer ID_ETNIAPrecision(){
				    return 0;
				}
				public String ID_ETNIADefault(){
				
					return null;
				
				}
				public String ID_ETNIAComment(){
				
				    return "";
				
				}
				public String ID_ETNIAPattern(){
				
					return "";
				
				}
				public String ID_ETNIAOriginalDbColumnName(){
				
					return "ID_ETNIA";
				
				}

				
			    public Integer CODIGO_ETNIA;

				public Integer getCODIGO_ETNIA () {
					return this.CODIGO_ETNIA;
				}

				public Boolean CODIGO_ETNIAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ETNIAIsKey(){
				    return false;
				}
				public Integer CODIGO_ETNIALength(){
				    return 0;
				}
				public Integer CODIGO_ETNIAPrecision(){
				    return 0;
				}
				public String CODIGO_ETNIADefault(){
				
					return null;
				
				}
				public String CODIGO_ETNIAComment(){
				
				    return "";
				
				}
				public String CODIGO_ETNIAPattern(){
				
					return "";
				
				}
				public String CODIGO_ETNIAOriginalDbColumnName(){
				
					return "CODIGO_ETNIA";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID_ETNIA = readInteger(dis);
					
						this.CODIGO_ETNIA = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID_ETNIA = readInteger(dis);
					
						this.CODIGO_ETNIA = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_ETNIA,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_ETNIA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_ETNIA,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_ETNIA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ETNIA="+String.valueOf(ID_ETNIA));
		sb.append(",CODIGO_ETNIA="+String.valueOf(CODIGO_ETNIA));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row21Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row21Struct row21 = new row21Struct();




	
	/**
	 * [tHashOutput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_7", false);
		start_Hash.put("tHashOutput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row21");
					}
				
		int tos_count_tHashOutput_7 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row17Struct> tHashFile_tHashOutput_7 = null; 
		//use this map to keep the present key and the previous key of AdvancedMemoryHashFile
		mf_tHashOutput_7.getKeyMap().put("tHashFile_ETL_vigilancia_" +pid + "_tHashOutput_7", "tHashFile_ETL_vigilancia_" + pid + "_tHashOutput_6");
        int nb_line_tHashOutput_7 = 0;

 



/**
 * [tHashOutput_7 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_10", false);
		start_Hash.put("tFixedFlowInput_10", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_10";
	
	
		int tos_count_tFixedFlowInput_10 = 0;
		

	    for (int i_tFixedFlowInput_10 = 0 ; i_tFixedFlowInput_10 < 1 ; i_tFixedFlowInput_10++) {
	                	            	
    	            		row21.ID_ETNIA = null;
    	            	        	            	
    	            		row21.CODIGO_ETNIA = 9;
    	            	

 



/**
 * [tFixedFlowInput_10 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_10 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_10";
	
	

 


	tos_count_tFixedFlowInput_10++;

/**
 * [tFixedFlowInput_10 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_10";
	
	

 



/**
 * [tFixedFlowInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_7 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row21"
						
						);
					}
					




		if(tHashFile_tHashOutput_7 == null){
			tHashFile_tHashOutput_7 = mf_tHashOutput_7.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_6");
			mf_tHashOutput_7.getResourceMap().put("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_7", tHashFile_tHashOutput_7);
		}
		row17Struct oneRow_tHashOutput_7 = new row17Struct();
			oneRow_tHashOutput_7.ID_ETNIA = row21.ID_ETNIA;
			oneRow_tHashOutput_7.CODIGO_ETNIA = row21.CODIGO_ETNIA;
        tHashFile_tHashOutput_7.put(oneRow_tHashOutput_7);
        nb_line_tHashOutput_7 ++;	

 


	tos_count_tHashOutput_7++;

/**
 * [tHashOutput_7 main ] stop
 */
	
	/**
	 * [tHashOutput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_10";
	
	

 



/**
 * [tFixedFlowInput_10 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_10 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_10";
	
	

        }
        globalMap.put("tFixedFlowInput_10_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_10", true);
end_Hash.put("tFixedFlowInput_10", System.currentTimeMillis());




/**
 * [tFixedFlowInput_10 end ] stop
 */

	
	/**
	 * [tHashOutput_7 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	
globalMap.put("tHashOutput_7_NB_LINE", nb_line_tHashOutput_7);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row21");
			  	}
			  	
 

ok_Hash.put("tHashOutput_7", true);
end_Hash.put("tHashOutput_7", System.currentTimeMillis());




/**
 * [tHashOutput_7 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_10 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_10";
	
	

 



/**
 * [tFixedFlowInput_10 finally ] stop
 */

	
	/**
	 * [tHashOutput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_10_SUBPROCESS_STATE", 1);
	}
	


public static class row23Struct implements routines.system.IPersistableRow<row23Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String CODIGO_CIE10;

				public String getCODIGO_CIE10 () {
					return this.CODIGO_CIE10;
				}

				public Boolean CODIGO_CIE10IsNullable(){
				    return true;
				}
				public Boolean CODIGO_CIE10IsKey(){
				    return false;
				}
				public Integer CODIGO_CIE10Length(){
				    return 0;
				}
				public Integer CODIGO_CIE10Precision(){
				    return 0;
				}
				public String CODIGO_CIE10Default(){
				
					return null;
				
				}
				public String CODIGO_CIE10Comment(){
				
				    return "";
				
				}
				public String CODIGO_CIE10Pattern(){
				
					return "";
				
				}
				public String CODIGO_CIE10OriginalDbColumnName(){
				
					return "CODIGO_CIE10";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.CODIGO_CIE10 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.CODIGO_CIE10 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_CIE10,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_CIE10,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_CIE10="+CODIGO_CIE10);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row23Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row23Struct row23 = new row23Struct();




	
	/**
	 * [tHashOutput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_9", false);
		start_Hash.put("tHashOutput_9", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row23");
					}
				
		int tos_count_tHashOutput_9 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_9=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row23Struct> tHashFile_tHashOutput_9 = null;
		String hashKey_tHashOutput_9 = "tHashFile_ETL_vigilancia_" + pid + "_tHashOutput_9";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_9)){
			    if(mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9) == null){
	      		    mf_tHashOutput_9.getResourceMap().put(hashKey_tHashOutput_9, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row23Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_9 = mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9);
			    }else{
			    	tHashFile_tHashOutput_9 = mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9);
			    }
			}
        int nb_line_tHashOutput_9 = 0;

 



/**
 * [tHashOutput_9 begin ] stop
 */



	
	/**
	 * [tOracleInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_7", false);
		start_Hash.put("tOracleInput_7", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_7";
	
	
		int tos_count_tOracleInput_7 = 0;
		
	


	
		    int nb_line_tOracleInput_7 = 0;
		    java.sql.Connection conn_tOracleInput_7 = null;
				conn_tOracleInput_7 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_7 = false;
				boolean isConnectionWrapped_tOracleInput_7 = !(conn_tOracleInput_7 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_7.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_7 = null;
                if (isConnectionWrapped_tOracleInput_7) {
					unwrappedOraConn_tOracleInput_7 = conn_tOracleInput_7.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_7 != null) {
                        isTimeZoneNull_tOracleInput_7 = (unwrappedOraConn_tOracleInput_7.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_7 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_7).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_7) {
					java.sql.Statement stmtGetTZ_tOracleInput_7 = conn_tOracleInput_7.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_7 = stmtGetTZ_tOracleInput_7.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_7 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_7.next()) {
						sessionTimezone_tOracleInput_7 = rsGetTZ_tOracleInput_7.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_7 && unwrappedOraConn_tOracleInput_7 != null) {
                        unwrappedOraConn_tOracleInput_7.setSessionTimeZone(sessionTimezone_tOracleInput_7);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_7).setSessionTimeZone(sessionTimezone_tOracleInput_7);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_7 = conn_tOracleInput_7.createStatement();

		    String dbquery_tOracleInput_7 = "SELECT \n  DISTINCT CODIGO AS CODIGO_CIE10\nFROM(  \n  SELECT\n    SUBSTR(GCIE.CODIGO,0,3) AS CODIGO\n  FROM\n    SALUD"
+"SIS.GEN_CIE10 GCIE\n  WHERE\n    GCIE.CODIGO IS NOT NULL AND\n    GCIE.ESTREGISTRO_ID = 1\n)";
		    

		    globalMap.put("tOracleInput_7_QUERY",dbquery_tOracleInput_7);

		    java.sql.ResultSet rs_tOracleInput_7 = null;

		    try {
		    	rs_tOracleInput_7 = stmt_tOracleInput_7.executeQuery(dbquery_tOracleInput_7);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_7 = rs_tOracleInput_7.getMetaData();
		    	int colQtyInRs_tOracleInput_7 = rsmd_tOracleInput_7.getColumnCount();

		    String tmpContent_tOracleInput_7 = null;
		    
		    
		    while (rs_tOracleInput_7.next()) {
		        nb_line_tOracleInput_7++;
		        
							if(colQtyInRs_tOracleInput_7 < 1) {
								row23.CODIGO_CIE10 = null;
							} else {
	                         		
        	row23.CODIGO_CIE10 = routines.system.JDBCUtil.getString(rs_tOracleInput_7, 1, false);
		                    }
					




 



/**
 * [tOracleInput_7 begin ] stop
 */
	
	/**
	 * [tOracleInput_7 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 


	tos_count_tOracleInput_7++;

/**
 * [tOracleInput_7 main ] stop
 */
	
	/**
	 * [tOracleInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_9 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row23"
						
						);
					}
					



    
		row23Struct oneRow_tHashOutput_9 = new row23Struct();
				
					oneRow_tHashOutput_9.CODIGO_CIE10 = row23.CODIGO_CIE10;
		
        tHashFile_tHashOutput_9.put(oneRow_tHashOutput_9);
        nb_line_tHashOutput_9 ++;

 


	tos_count_tHashOutput_9++;

/**
 * [tHashOutput_9 main ] stop
 */
	
	/**
	 * [tHashOutput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_7 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

}
}finally{
	if (rs_tOracleInput_7 != null) {
		rs_tOracleInput_7.close();
	}
	if (stmt_tOracleInput_7 != null) {
		stmt_tOracleInput_7.close();
	}
}

globalMap.put("tOracleInput_7_NB_LINE",nb_line_tOracleInput_7);
 

ok_Hash.put("tOracleInput_7", true);
end_Hash.put("tOracleInput_7", System.currentTimeMillis());




/**
 * [tOracleInput_7 end ] stop
 */

	
	/**
	 * [tHashOutput_9 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	
globalMap.put("tHashOutput_9_NB_LINE", nb_line_tHashOutput_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row23");
			  	}
			  	
 

ok_Hash.put("tHashOutput_9", true);
end_Hash.put("tHashOutput_9", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk16", 0, "ok");
				}
				tFixedFlowInput_19Process(globalMap);



/**
 * [tHashOutput_9 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_7:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk6", 0, "ok");
								} 
							
							tOracleInput_6Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_7 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_7";
	
	

 



/**
 * [tOracleInput_7 finally ] stop
 */

	
	/**
	 * [tHashOutput_9 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row41Struct implements routines.system.IPersistableRow<row41Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String CODIGO_CIE10;

				public String getCODIGO_CIE10 () {
					return this.CODIGO_CIE10;
				}

				public Boolean CODIGO_CIE10IsNullable(){
				    return true;
				}
				public Boolean CODIGO_CIE10IsKey(){
				    return false;
				}
				public Integer CODIGO_CIE10Length(){
				    return 0;
				}
				public Integer CODIGO_CIE10Precision(){
				    return 0;
				}
				public String CODIGO_CIE10Default(){
				
					return null;
				
				}
				public String CODIGO_CIE10Comment(){
				
				    return "";
				
				}
				public String CODIGO_CIE10Pattern(){
				
					return "";
				
				}
				public String CODIGO_CIE10OriginalDbColumnName(){
				
					return "CODIGO_CIE10";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.CODIGO_CIE10 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.CODIGO_CIE10 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_CIE10,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_CIE10,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_CIE10="+CODIGO_CIE10);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row41Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_19Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_19_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row41Struct row41 = new row41Struct();




	
	/**
	 * [tHashOutput_25 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_25", false);
		start_Hash.put("tHashOutput_25", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_25";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row41");
					}
				
		int tos_count_tHashOutput_25 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_25=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row23Struct> tHashFile_tHashOutput_25 = null; 
		//use this map to keep the present key and the previous key of AdvancedMemoryHashFile
		mf_tHashOutput_25.getKeyMap().put("tHashFile_ETL_vigilancia_" +pid + "_tHashOutput_25", "tHashFile_ETL_vigilancia_" + pid + "_tHashOutput_9");
        int nb_line_tHashOutput_25 = 0;

 



/**
 * [tHashOutput_25 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_19", false);
		start_Hash.put("tFixedFlowInput_19", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_19";
	
	
		int tos_count_tFixedFlowInput_19 = 0;
		

	    for (int i_tFixedFlowInput_19 = 0 ; i_tFixedFlowInput_19 < 1 ; i_tFixedFlowInput_19++) {
	                	            	
    	            		row41.CODIGO_CIE10 = "999";
    	            	

 



/**
 * [tFixedFlowInput_19 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_19 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_19";
	
	

 


	tos_count_tFixedFlowInput_19++;

/**
 * [tFixedFlowInput_19 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_19";
	
	

 



/**
 * [tFixedFlowInput_19 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_25 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_25";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row41"
						
						);
					}
					




		if(tHashFile_tHashOutput_25 == null){
			tHashFile_tHashOutput_25 = mf_tHashOutput_25.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_9");
			mf_tHashOutput_25.getResourceMap().put("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_25", tHashFile_tHashOutput_25);
		}
		row23Struct oneRow_tHashOutput_25 = new row23Struct();
			oneRow_tHashOutput_25.CODIGO_CIE10 = row41.CODIGO_CIE10;
        tHashFile_tHashOutput_25.put(oneRow_tHashOutput_25);
        nb_line_tHashOutput_25 ++;	

 


	tos_count_tHashOutput_25++;

/**
 * [tHashOutput_25 main ] stop
 */
	
	/**
	 * [tHashOutput_25 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_25";
	
	

 



/**
 * [tHashOutput_25 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_25 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_25";
	
	

 



/**
 * [tHashOutput_25 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_19";
	
	

 



/**
 * [tFixedFlowInput_19 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_19 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_19";
	
	

        }
        globalMap.put("tFixedFlowInput_19_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_19", true);
end_Hash.put("tFixedFlowInput_19", System.currentTimeMillis());




/**
 * [tFixedFlowInput_19 end ] stop
 */

	
	/**
	 * [tHashOutput_25 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_25";
	
	
globalMap.put("tHashOutput_25_NB_LINE", nb_line_tHashOutput_25);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row41");
			  	}
			  	
 

ok_Hash.put("tHashOutput_25", true);
end_Hash.put("tHashOutput_25", System.currentTimeMillis());




/**
 * [tHashOutput_25 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_19 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_19";
	
	

 



/**
 * [tFixedFlowInput_19 finally ] stop
 */

	
	/**
	 * [tHashOutput_25 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_25";
	
	

 



/**
 * [tHashOutput_25 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_19_SUBPROCESS_STATE", 1);
	}
	


public static class row22Struct implements routines.system.IPersistableRow<row22Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public Integer CODIGO_GRUPO_RIESGO;

				public Integer getCODIGO_GRUPO_RIESGO () {
					return this.CODIGO_GRUPO_RIESGO;
				}

				public Boolean CODIGO_GRUPO_RIESGOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer CODIGO_GRUPO_RIESGOLength(){
				    return 0;
				}
				public Integer CODIGO_GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String CODIGO_GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String CODIGO_GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String CODIGO_GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String CODIGO_GRUPO_RIESGOOriginalDbColumnName(){
				
					return "CODIGO_GRUPO_RIESGO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.CODIGO_GRUPO_RIESGO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.CODIGO_GRUPO_RIESGO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO_GRUPO_RIESGO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO_GRUPO_RIESGO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_GRUPO_RIESGO="+String.valueOf(CODIGO_GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row22Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row22Struct row22 = new row22Struct();




	
	/**
	 * [tHashOutput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_8", false);
		start_Hash.put("tHashOutput_8", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row22");
					}
				
		int tos_count_tHashOutput_8 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_8=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row22Struct> tHashFile_tHashOutput_8 = null;
		String hashKey_tHashOutput_8 = "tHashFile_ETL_vigilancia_" + pid + "_tHashOutput_8";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_8)){
			    if(mf_tHashOutput_8.getResourceMap().get(hashKey_tHashOutput_8) == null){
	      		    mf_tHashOutput_8.getResourceMap().put(hashKey_tHashOutput_8, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row22Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_8 = mf_tHashOutput_8.getResourceMap().get(hashKey_tHashOutput_8);
			    }else{
			    	tHashFile_tHashOutput_8 = mf_tHashOutput_8.getResourceMap().get(hashKey_tHashOutput_8);
			    }
			}
        int nb_line_tHashOutput_8 = 0;

 



/**
 * [tHashOutput_8 begin ] stop
 */



	
	/**
	 * [tOracleInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_6", false);
		start_Hash.put("tOracleInput_6", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_6";
	
	
		int tos_count_tOracleInput_6 = 0;
		
	


	
		    int nb_line_tOracleInput_6 = 0;
		    java.sql.Connection conn_tOracleInput_6 = null;
				conn_tOracleInput_6 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_6 = false;
				boolean isConnectionWrapped_tOracleInput_6 = !(conn_tOracleInput_6 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_6.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_6 = null;
                if (isConnectionWrapped_tOracleInput_6) {
					unwrappedOraConn_tOracleInput_6 = conn_tOracleInput_6.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_6 != null) {
                        isTimeZoneNull_tOracleInput_6 = (unwrappedOraConn_tOracleInput_6.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_6 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_6).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_6) {
					java.sql.Statement stmtGetTZ_tOracleInput_6 = conn_tOracleInput_6.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_6 = stmtGetTZ_tOracleInput_6.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_6 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_6.next()) {
						sessionTimezone_tOracleInput_6 = rsGetTZ_tOracleInput_6.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_6 && unwrappedOraConn_tOracleInput_6 != null) {
                        unwrappedOraConn_tOracleInput_6.setSessionTimeZone(sessionTimezone_tOracleInput_6);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_6).setSessionTimeZone(sessionTimezone_tOracleInput_6);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_6 = conn_tOracleInput_6.createStatement();

		    String dbquery_tOracleInput_6 = "SELECT\n  VGR.ID AS ID_GRUPO_RIESGO,\n  VGR.CODIGO AS CODIGO_GRUPO_RIESGO\nFROM\n  SALUDSIS.VSP_GRUPOSRIESGO VGR\nWHERE"
+"\n  VGR.CODIGO IS NOT NULL AND\n  VGR.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_6_QUERY",dbquery_tOracleInput_6);

		    java.sql.ResultSet rs_tOracleInput_6 = null;

		    try {
		    	rs_tOracleInput_6 = stmt_tOracleInput_6.executeQuery(dbquery_tOracleInput_6);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_6 = rs_tOracleInput_6.getMetaData();
		    	int colQtyInRs_tOracleInput_6 = rsmd_tOracleInput_6.getColumnCount();

		    String tmpContent_tOracleInput_6 = null;
		    
		    
		    while (rs_tOracleInput_6.next()) {
		        nb_line_tOracleInput_6++;
		        
							if(colQtyInRs_tOracleInput_6 < 1) {
								row22.CODIGO_GRUPO_RIESGO = null;
							} else {
		                          
					if(rs_tOracleInput_6.getObject(1) != null) {
						row22.CODIGO_GRUPO_RIESGO = rs_tOracleInput_6.getInt(1);
					} else {
				
						row22.CODIGO_GRUPO_RIESGO = null;
					}
		                    }
					




 



/**
 * [tOracleInput_6 begin ] stop
 */
	
	/**
	 * [tOracleInput_6 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 


	tos_count_tOracleInput_6++;

/**
 * [tOracleInput_6 main ] stop
 */
	
	/**
	 * [tOracleInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 



/**
 * [tOracleInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_8 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row22"
						
						);
					}
					



    
		row22Struct oneRow_tHashOutput_8 = new row22Struct();
				
					oneRow_tHashOutput_8.CODIGO_GRUPO_RIESGO = row22.CODIGO_GRUPO_RIESGO;
		
        tHashFile_tHashOutput_8.put(oneRow_tHashOutput_8);
        nb_line_tHashOutput_8 ++;

 


	tos_count_tHashOutput_8++;

/**
 * [tHashOutput_8 main ] stop
 */
	
	/**
	 * [tHashOutput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 



/**
 * [tOracleInput_6 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_6 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

}
}finally{
	if (rs_tOracleInput_6 != null) {
		rs_tOracleInput_6.close();
	}
	if (stmt_tOracleInput_6 != null) {
		stmt_tOracleInput_6.close();
	}
}

globalMap.put("tOracleInput_6_NB_LINE",nb_line_tOracleInput_6);
 

ok_Hash.put("tOracleInput_6", true);
end_Hash.put("tOracleInput_6", System.currentTimeMillis());




/**
 * [tOracleInput_6 end ] stop
 */

	
	/**
	 * [tHashOutput_8 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	
globalMap.put("tHashOutput_8_NB_LINE", nb_line_tHashOutput_8);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row22");
			  	}
			  	
 

ok_Hash.put("tHashOutput_8", true);
end_Hash.put("tHashOutput_8", System.currentTimeMillis());




/**
 * [tHashOutput_8 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_6:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk5", 0, "ok");
								} 
							
							tOracleInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_6 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_6";
	
	

 



/**
 * [tOracleInput_6 finally ] stop
 */

	
	/**
	 * [tHashOutput_8 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String ID;

				public String getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return null;
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String ANIO;

				public String getANIO () {
					return this.ANIO;
				}

				public Boolean ANIOIsNullable(){
				    return true;
				}
				public Boolean ANIOIsKey(){
				    return false;
				}
				public Integer ANIOLength(){
				    return 0;
				}
				public Integer ANIOPrecision(){
				    return 0;
				}
				public String ANIODefault(){
				
					return null;
				
				}
				public String ANIOComment(){
				
				    return "";
				
				}
				public String ANIOPattern(){
				
					return "";
				
				}
				public String ANIOOriginalDbColumnName(){
				
					return "ANIO";
				
				}

				
			    public String USUARIO;

				public String getUSUARIO () {
					return this.USUARIO;
				}

				public Boolean USUARIOIsNullable(){
				    return true;
				}
				public Boolean USUARIOIsKey(){
				    return false;
				}
				public Integer USUARIOLength(){
				    return 0;
				}
				public Integer USUARIOPrecision(){
				    return 0;
				}
				public String USUARIODefault(){
				
					return null;
				
				}
				public String USUARIOComment(){
				
				    return "";
				
				}
				public String USUARIOPattern(){
				
					return "";
				
				}
				public String USUARIOOriginalDbColumnName(){
				
					return "USUARIO";
				
				}

				
			    public Object CONTENIDO;

				public Object getCONTENIDO () {
					return this.CONTENIDO;
				}

				public Boolean CONTENIDOIsNullable(){
				    return true;
				}
				public Boolean CONTENIDOIsKey(){
				    return false;
				}
				public Integer CONTENIDOLength(){
				    return 0;
				}
				public Integer CONTENIDOPrecision(){
				    return 0;
				}
				public String CONTENIDODefault(){
				
					return null;
				
				}
				public String CONTENIDOComment(){
				
				    return "";
				
				}
				public String CONTENIDOPattern(){
				
					return "";
				
				}
				public String CONTENIDOOriginalDbColumnName(){
				
					return "CONTENIDO";
				
				}

				
			    public String TIPO_CONTENIDO;

				public String getTIPO_CONTENIDO () {
					return this.TIPO_CONTENIDO;
				}

				public Boolean TIPO_CONTENIDOIsNullable(){
				    return true;
				}
				public Boolean TIPO_CONTENIDOIsKey(){
				    return false;
				}
				public Integer TIPO_CONTENIDOLength(){
				    return 0;
				}
				public Integer TIPO_CONTENIDOPrecision(){
				    return 0;
				}
				public String TIPO_CONTENIDODefault(){
				
					return null;
				
				}
				public String TIPO_CONTENIDOComment(){
				
				    return "";
				
				}
				public String TIPO_CONTENIDOPattern(){
				
					return "";
				
				}
				public String TIPO_CONTENIDOOriginalDbColumnName(){
				
					return "TIPO_CONTENIDO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.ID = readString(dis);
					
					this.ANIO = readString(dis);
					
					this.USUARIO = readString(dis);
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TIPO_CONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.ID = readString(dis);
					
					this.ANIO = readString(dis);
					
					this.USUARIO = readString(dis);
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TIPO_CONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID,dos);
					
					// String
				
						writeString(this.ANIO,dos);
					
					// String
				
						writeString(this.USUARIO,dos);
					
					// Object
				
       			    	dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TIPO_CONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID,dos);
					
					// String
				
						writeString(this.ANIO,dos);
					
					// String
				
						writeString(this.USUARIO,dos);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TIPO_CONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+ID);
		sb.append(",ANIO="+ANIO);
		sb.append(",USUARIO="+USUARIO);
		sb.append(",CONTENIDO="+String.valueOf(CONTENIDO));
		sb.append(",TIPO_CONTENIDO="+TIPO_CONTENIDO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();




	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */



	
	/**
	 * [tOracleInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_1", false);
		start_Hash.put("tOracleInput_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_1";
	
	
		int tos_count_tOracleInput_1 = 0;
		
	


	
		    int nb_line_tOracleInput_1 = 0;
		    java.sql.Connection conn_tOracleInput_1 = null;
				conn_tOracleInput_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_1 = false;
				boolean isConnectionWrapped_tOracleInput_1 = !(conn_tOracleInput_1 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_1.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_1 = null;
                if (isConnectionWrapped_tOracleInput_1) {
					unwrappedOraConn_tOracleInput_1 = conn_tOracleInput_1.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_1 != null) {
                        isTimeZoneNull_tOracleInput_1 = (unwrappedOraConn_tOracleInput_1.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_1 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_1).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_1) {
					java.sql.Statement stmtGetTZ_tOracleInput_1 = conn_tOracleInput_1.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_1 = stmtGetTZ_tOracleInput_1.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_1 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_1.next()) {
						sessionTimezone_tOracleInput_1 = rsGetTZ_tOracleInput_1.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_1 && unwrappedOraConn_tOracleInput_1 != null) {
                        unwrappedOraConn_tOracleInput_1.setSessionTimeZone(sessionTimezone_tOracleInput_1);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_1).setSessionTimeZone(sessionTimezone_tOracleInput_1);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_1 = conn_tOracleInput_1.createStatement();

		    String dbquery_tOracleInput_1 = "SELECT \n       VPR.ID AS ID,\n       VPR.ANIO AS ANIO,\n       VPR.USUARIO_ID AS USUARIO,\n       VAN.CONTENIDO AS CON"
+"TENIDO,\n       VAN.TCONTENIDO AS TIPO_CONTENIDO\nFROM \n       SALUDSIS.VSP_PRIORIZACION VPR\n       INNER JOIN SALUDSI"
+"S.VSP_ANEXOS VAN ON VAN.ID = VPR.ANEXO_ID\nWHERE\n       VPR.ID = "+context.PriorizacionId+" AND\n       VPR.ESTADO = '"+context.EstAnexoActivo+"' AND\n       VPR.ESTREGISTRO_ID = 1 AND\n       VAN.ESTREGISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_1_QUERY",dbquery_tOracleInput_1);

		    java.sql.ResultSet rs_tOracleInput_1 = null;

		    try {
		    	rs_tOracleInput_1 = stmt_tOracleInput_1.executeQuery(dbquery_tOracleInput_1);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_1 = rs_tOracleInput_1.getMetaData();
		    	int colQtyInRs_tOracleInput_1 = rsmd_tOracleInput_1.getColumnCount();

		    String tmpContent_tOracleInput_1 = null;
		    
		    
		    while (rs_tOracleInput_1.next()) {
		        nb_line_tOracleInput_1++;
		        
							if(colQtyInRs_tOracleInput_1 < 1) {
								row1.ID = null;
							} else {
	                         		
        	row1.ID = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 1, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 2) {
								row1.ANIO = null;
							} else {
	                         		
        	row1.ANIO = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 2, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 3) {
								row1.USUARIO = null;
							} else {
	                         		
        	row1.USUARIO = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 3, false);
		                    }
							if(colQtyInRs_tOracleInput_1 < 4) {
								row1.CONTENIDO = null;
							} else {
		                          
				Object tmpObj_4_tOracleInput_1 = rs_tOracleInput_1.getObject(4);
				if(tmpObj_4_tOracleInput_1 != null) {
					row1.CONTENIDO = tmpObj_4_tOracleInput_1;
				} else {
						row1.CONTENIDO = null;
				}
		                    }
							if(colQtyInRs_tOracleInput_1 < 5) {
								row1.TIPO_CONTENIDO = null;
							} else {
	                         		
        	row1.TIPO_CONTENIDO = routines.system.JDBCUtil.getString(rs_tOracleInput_1, 5, false);
		                    }
					




 



/**
 * [tOracleInput_1 begin ] stop
 */
	
	/**
	 * [tOracleInput_1 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 


	tos_count_tOracleInput_1++;

/**
 * [tOracleInput_1 main ] stop
 */
	
	/**
	 * [tOracleInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					

    //****************************************************************************************//
//*** ALMACENAMIENTO EN VARIABLES DE CONTEXTO DE LA INFORMACIÓN DE LOS ARCHIVOS **********//
//****************************************************************************************//
context.PriorizacionAnio =  row1.ANIO;
context.PriorizacionUsuario =  row1.USUARIO;
context.PriorizacionTipoContenido =  row1.TIPO_CONTENIDO;
context.PriorizacionContenido = ((java.sql.Blob)row1.CONTENIDO).getBinaryStream();

    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_1 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

}
}finally{
	if (rs_tOracleInput_1 != null) {
		rs_tOracleInput_1.close();
	}
	if (stmt_tOracleInput_1 != null) {
		stmt_tOracleInput_1.close();
	}
}

globalMap.put("tOracleInput_1_NB_LINE",nb_line_tOracleInput_1);
 

ok_Hash.put("tOracleInput_1", true);
end_Hash.put("tOracleInput_1", System.currentTimeMillis());




/**
 * [tOracleInput_1 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());

   			if (!context.PriorizacionTipoContenido.toUpperCase().equals(context.FormatoExcel) && !context.PriorizacionTipoContenido.toUpperCase().equals(context.FormatoExcelXml)) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If16", 0, "true");
					}
				tFileInputDelimited_1Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If16", 0, "false");
					}   	 
   				}



/**
 * [tJavaRow_1 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk19", 0, "ok");
								} 
							
							tJava_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_1";
	
	

 



/**
 * [tOracleInput_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row67Struct implements routines.system.IPersistableRow<row67Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row67Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row66Struct implements routines.system.IPersistableRow<row66Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row66Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputDelimited_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputDelimited_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row66Struct row66 = new row66Struct();
row67Struct row67 = new row67Struct();




	
	/**
	 * [tFlowToIterate_16 begin ] start
	 */

				
			int NB_ITERATE_tFixedFlowInput_27 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_16", false);
		start_Hash.put("tFlowToIterate_16", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row66");
					}
				
		int tos_count_tFlowToIterate_16 = 0;
		

int nb_line_tFlowToIterate_16 = 0;
int counter_tFlowToIterate_16 = 0;

 



/**
 * [tFlowToIterate_16 begin ] stop
 */



	
	/**
	 * [tFileInputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputDelimited_1", false);
		start_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputDelimited_1";
	
	
		int tos_count_tFileInputDelimited_1 = 0;
		
	
	
	
 
	
	
	final routines.system.RowState rowstate_tFileInputDelimited_1 = new routines.system.RowState();
	
	
				int nb_line_tFileInputDelimited_1 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_1 = null;
				int limit_tFileInputDelimited_1 = -1;
				try{
					
						Object filename_tFileInputDelimited_1 = (java.io.InputStream)context.PriorizacionContenido;
						if(filename_tFileInputDelimited_1 instanceof java.io.InputStream){
							
			int footer_value_tFileInputDelimited_1 = 0, random_value_tFileInputDelimited_1 = -1;
			if(footer_value_tFileInputDelimited_1 >0 || random_value_tFileInputDelimited_1 > 0){
				throw new java.lang.Exception("When the input source is a stream,footer and random shouldn't be bigger than 0.");				
			}
		
						}
						try {
							fid_tFileInputDelimited_1 = new org.talend.fileprocess.FileInputDelimited((java.io.InputStream)context.PriorizacionContenido, "ISO-8859-15",context.FormatoSeparador,"\n",true,1,0,
									limit_tFileInputDelimited_1
								,-1, false);
						} catch(java.lang.Exception e) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",e.getMessage());
							
								
								System.err.println(e.getMessage());
							
						}
					
				    
					while (fid_tFileInputDelimited_1!=null && fid_tFileInputDelimited_1.nextRecord()) {
						rowstate_tFileInputDelimited_1.reset();
						
			    						row66 = null;			
												
									boolean whetherReject_tFileInputDelimited_1 = false;
									row66 = new row66Struct();
									try {
										
				int columnIndexWithD_tFileInputDelimited_1 = 0;
				
					String temp = ""; 
				
					columnIndexWithD_tFileInputDelimited_1 = 0;
					
							row66.COD_DIVIPOLA = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 1;
					
						temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						if(temp.length() > 0) {
							
								try {
								
    								row66.INDICADOR = ParserUtils.parseTo_int(temp);
    							
    							} catch(java.lang.Exception ex_tFileInputDelimited_1) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",ex_tFileInputDelimited_1.getMessage());
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format("Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
										"INDICADOR", "row66", temp, ex_tFileInputDelimited_1), ex_tFileInputDelimited_1));
								}
    							
						} else {						
							
								rowstate_tFileInputDelimited_1.setException(new RuntimeException("Value is empty for column : 'INDICADOR' in 'row66' connection, value is invalid or this column should be nullable or have a default value."));
							
						}
					
				
					columnIndexWithD_tFileInputDelimited_1 = 2;
					
						temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						if(temp.length() > 0) {
							
								try {
								
    								row66.SEXO = ParserUtils.parseTo_int(temp);
    							
    							} catch(java.lang.Exception ex_tFileInputDelimited_1) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",ex_tFileInputDelimited_1.getMessage());
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format("Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
										"SEXO", "row66", temp, ex_tFileInputDelimited_1), ex_tFileInputDelimited_1));
								}
    							
						} else {						
							
								rowstate_tFileInputDelimited_1.setException(new RuntimeException("Value is empty for column : 'SEXO' in 'row66' connection, value is invalid or this column should be nullable or have a default value."));
							
						}
					
				
					columnIndexWithD_tFileInputDelimited_1 = 3;
					
						temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						if(temp.length() > 0) {
							
								try {
								
    								row66.EDAD = ParserUtils.parseTo_int(temp);
    							
    							} catch(java.lang.Exception ex_tFileInputDelimited_1) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",ex_tFileInputDelimited_1.getMessage());
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format("Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
										"EDAD", "row66", temp, ex_tFileInputDelimited_1), ex_tFileInputDelimited_1));
								}
    							
						} else {						
							
								rowstate_tFileInputDelimited_1.setException(new RuntimeException("Value is empty for column : 'EDAD' in 'row66' connection, value is invalid or this column should be nullable or have a default value."));
							
						}
					
				
					columnIndexWithD_tFileInputDelimited_1 = 4;
					
						temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						if(temp.length() > 0) {
							
								try {
								
    								row66.ETNIA = ParserUtils.parseTo_int(temp);
    							
    							} catch(java.lang.Exception ex_tFileInputDelimited_1) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",ex_tFileInputDelimited_1.getMessage());
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format("Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
										"ETNIA", "row66", temp, ex_tFileInputDelimited_1), ex_tFileInputDelimited_1));
								}
    							
						} else {						
							
								rowstate_tFileInputDelimited_1.setException(new RuntimeException("Value is empty for column : 'ETNIA' in 'row66' connection, value is invalid or this column should be nullable or have a default value."));
							
						}
					
				
					columnIndexWithD_tFileInputDelimited_1 = 5;
					
							row66.CIE10 = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						
				
					columnIndexWithD_tFileInputDelimited_1 = 6;
					
						temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						if(temp.length() > 0) {
							
								try {
								
    								row66.PRIORIDAD = ParserUtils.parseTo_int(temp);
    							
    							} catch(java.lang.Exception ex_tFileInputDelimited_1) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",ex_tFileInputDelimited_1.getMessage());
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format("Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
										"PRIORIDAD", "row66", temp, ex_tFileInputDelimited_1), ex_tFileInputDelimited_1));
								}
    							
						} else {						
							
								rowstate_tFileInputDelimited_1.setException(new RuntimeException("Value is empty for column : 'PRIORIDAD' in 'row66' connection, value is invalid or this column should be nullable or have a default value."));
							
						}
					
				
					columnIndexWithD_tFileInputDelimited_1 = 7;
					
						temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1).trim();
						if(temp.length() > 0) {
							
								try {
								
    								row66.GRUPO_RIESGO = ParserUtils.parseTo_int(temp);
    							
    							} catch(java.lang.Exception ex_tFileInputDelimited_1) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",ex_tFileInputDelimited_1.getMessage());
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format("Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
										"GRUPO_RIESGO", "row66", temp, ex_tFileInputDelimited_1), ex_tFileInputDelimited_1));
								}
    							
						} else {						
							
								rowstate_tFileInputDelimited_1.setException(new RuntimeException("Value is empty for column : 'GRUPO_RIESGO' in 'row66' connection, value is invalid or this column should be nullable or have a default value."));
							
						}
					
				
				
										
										if(rowstate_tFileInputDelimited_1.getException()!=null) {
											throw rowstate_tFileInputDelimited_1.getException();
										}
										
										
							
			    					} catch (java.lang.Exception e) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",e.getMessage());
			        					whetherReject_tFileInputDelimited_1 = true;
			        					
			                					System.err.println(e.getMessage());
			                					row66 = null;
			                				
										
			    					}
								

 



/**
 * [tFileInputDelimited_1 begin ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 


	tos_count_tFileInputDelimited_1++;

/**
 * [tFileInputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 



/**
 * [tFileInputDelimited_1 process_data_begin ] stop
 */
// Start of branch "row66"
if(row66 != null) { 



	
	/**
	 * [tFlowToIterate_16 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row66"
						
						);
					}
					


    	            
            globalMap.put("row66.COD_DIVIPOLA", row66.COD_DIVIPOLA);
    	            
            globalMap.put("row66.INDICADOR", row66.INDICADOR);
    	            
            globalMap.put("row66.SEXO", row66.SEXO);
    	            
            globalMap.put("row66.EDAD", row66.EDAD);
    	            
            globalMap.put("row66.ETNIA", row66.ETNIA);
    	            
            globalMap.put("row66.CIE10", row66.CIE10);
    	            
            globalMap.put("row66.PRIORIDAD", row66.PRIORIDAD);
    	            
            globalMap.put("row66.GRUPO_RIESGO", row66.GRUPO_RIESGO);
    	
 
	   nb_line_tFlowToIterate_16++;  
       counter_tFlowToIterate_16++;
       globalMap.put("tFlowToIterate_16_CURRENT_ITERATION", counter_tFlowToIterate_16);
 


	tos_count_tFlowToIterate_16++;

/**
 * [tFlowToIterate_16 main ] stop
 */
	
	/**
	 * [tFlowToIterate_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_16";
	
	

 



/**
 * [tFlowToIterate_16 process_data_begin ] stop
 */
	NB_ITERATE_tFixedFlowInput_27++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("row27", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk26", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate10", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row26", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row19", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row11", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row51", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row42", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnSubjobOk16", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("ETNIA_REJECT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate19", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tHashInput_8", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row26", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row18", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row20", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk18", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tHashInput_9", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk40", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tHashInput_13", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row25", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate4", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row16", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row34", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("EDAD_REJECT_EXIST", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk29", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate13", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate6", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("CIE10_REJECT_EXIST", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row8", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row12", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate9", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("INDICADOR_REJECT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("EDAD_ACCEPT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate12", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate7", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("GRUPO_RIESGO_REJECT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row7", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("GRUPO_RIESGO_ACCEPT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row7", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row30", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row11", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("INDICADOR_ACCEPT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk12", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("EDAD_REJECT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("GRUPO_RIESGO_REJECT_EXIST", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate2", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk22", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnSubjobOk14", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row28", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row4", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk23", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row43", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row46", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("SEXO_REJECT_EXIST", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnSubjobOk17", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row31", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row67", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row32", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("SEXO_REJECT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row35", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row19", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk31", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tHashInput_10", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate14", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("ETNIA_ACCEPT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row28", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("SEXO_ACCEPT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row14", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("DATA_FILE", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnSubjobOk15", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row37", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk32", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("CIE10_REJECT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row36", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row29", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk24", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row24", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate8", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate11", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("DIVIPOLA_REJECT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("ETNIA_REJECT_EXIST", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("CIE10_ACCEPT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate5", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk11", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk21", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk52", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk28", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row38", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row33", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnSubjobOk13", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row16", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnSubjobOk18", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tHashInput_12", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk27", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk25", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tHashInput_11", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk30", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("INDICADOR_REJECT_EXIST", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate21", 1, "exec" + NB_ITERATE_tFixedFlowInput_27);
					//Thread.sleep(1000);
				}				
			


	
	/**
	 * [tJavaRow_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_21", false);
		start_Hash.put("tJavaRow_21", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_21";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row67");
					}
				
		int tos_count_tJavaRow_21 = 0;
		

int nb_line_tJavaRow_21 = 0;

 



/**
 * [tJavaRow_21 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_27 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_27", false);
		start_Hash.put("tFixedFlowInput_27", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_27";
	
	
		int tos_count_tFixedFlowInput_27 = 0;
		

	    for (int i_tFixedFlowInput_27 = 0 ; i_tFixedFlowInput_27 < 1 ; i_tFixedFlowInput_27++) {
	                	            	
    	            		row67.COD_DIVIPOLA = row66.COD_DIVIPOLA;
    	            	        	            	
    	            		row67.INDICADOR = row66.INDICADOR;
    	            	        	            	
    	            		row67.SEXO = row66.SEXO;
    	            	        	            	
    	            		row67.EDAD = row66.EDAD;
    	            	        	            	
    	            		row67.ETNIA = row66.ETNIA;
    	            	        	            	
    	            		row67.CIE10 = row66.CIE10;
    	            	        	            	
    	            		row67.PRIORIDAD = row66.PRIORIDAD;
    	            	        	            	
    	            		row67.GRUPO_RIESGO = row66.GRUPO_RIESGO;
    	            	

 



/**
 * [tFixedFlowInput_27 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_27 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_27";
	
	

 


	tos_count_tFixedFlowInput_27++;

/**
 * [tFixedFlowInput_27 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_27 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_27";
	
	

 



/**
 * [tFixedFlowInput_27 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_21 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_21";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row67"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.COD_DIVIPOLA = row67.COD_DIVIPOLA;
context.INDICADOR = row67.INDICADOR;
context.SEXO = row67.SEXO;
context.EDAD = row67.EDAD;
context.ETNIA = row67.ETNIA;
context.CIE10 = row67.CIE10;
context.PRIORIDAD = row67.PRIORIDAD;
context.GRUPO_RIESGO = row67.GRUPO_RIESGO;

    nb_line_tJavaRow_21++;   

 


	tos_count_tJavaRow_21++;

/**
 * [tJavaRow_21 main ] stop
 */
	
	/**
	 * [tJavaRow_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_21";
	
	

 



/**
 * [tJavaRow_21 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_21";
	
	

 



/**
 * [tJavaRow_21 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_27 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_27";
	
	

 



/**
 * [tFixedFlowInput_27 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_27 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_27";
	
	

        }
        globalMap.put("tFixedFlowInput_27_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_27", true);
end_Hash.put("tFixedFlowInput_27", System.currentTimeMillis());




/**
 * [tFixedFlowInput_27 end ] stop
 */

	
	/**
	 * [tJavaRow_21 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_21";
	
	

globalMap.put("tJavaRow_21_NB_LINE",nb_line_tJavaRow_21);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row67");
			  	}
			  	
 

ok_Hash.put("tJavaRow_21", true);
end_Hash.put("tJavaRow_21", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk52", 0, "ok");
				}
				tFixedFlowInput_23Process(globalMap);



/**
 * [tJavaRow_21 end ] stop
 */



						if(execStat){
							runStat.updateStatOnConnection("iterate21", 2, "exec" + NB_ITERATE_tFixedFlowInput_27);
						}				
					




	
	/**
	 * [tFlowToIterate_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_16";
	
	

 



/**
 * [tFlowToIterate_16 process_data_end ] stop
 */

} // End of branch "row66"




	
	/**
	 * [tFileInputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 



/**
 * [tFileInputDelimited_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	



            }
            }finally{
                if(!((Object)((java.io.InputStream)context.PriorizacionContenido) instanceof java.io.InputStream)){
                	if(fid_tFileInputDelimited_1!=null){
                		fid_tFileInputDelimited_1.close();
                	}
                }
                if(fid_tFileInputDelimited_1!=null){
                	globalMap.put("tFileInputDelimited_1_NB_LINE", fid_tFileInputDelimited_1.getRowNumber());
					
                }
			}
			  

 

ok_Hash.put("tFileInputDelimited_1", true);
end_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());




/**
 * [tFileInputDelimited_1 end ] stop
 */

	
	/**
	 * [tFlowToIterate_16 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_16";
	
	

globalMap.put("tFlowToIterate_16_NB_LINE",nb_line_tFlowToIterate_16);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row66");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_16", true);
end_Hash.put("tFlowToIterate_16", System.currentTimeMillis());




/**
 * [tFlowToIterate_16 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 



/**
 * [tFileInputDelimited_1 finally ] stop
 */

	
	/**
	 * [tFlowToIterate_16 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_16";
	
	

 



/**
 * [tFlowToIterate_16 finally ] stop
 */

	
	/**
	 * [tFixedFlowInput_27 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_27";
	
	

 



/**
 * [tFixedFlowInput_27 finally ] stop
 */

	
	/**
	 * [tJavaRow_21 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_21";
	
	

 



/**
 * [tJavaRow_21 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputDelimited_1_SUBPROCESS_STATE", 1);
	}
	


public static class row42Struct implements routines.system.IPersistableRow<row42Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row42Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class DATA_FILEStruct implements routines.system.IPersistableRow<DATA_FILEStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(DATA_FILEStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row51Struct implements routines.system.IPersistableRow<row51Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row51Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row46Struct implements routines.system.IPersistableRow<row46Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row46Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_23Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_23_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row46Struct row46 = new row46Struct();
row51Struct row51 = new row51Struct();
row51Struct DATA_FILE = row51;
row42Struct row42 = new row42Struct();






	
	/**
	 * [tFlowToIterate_17 begin ] start
	 */

				
			int NB_ITERATE_tFixedFlowInput_20 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_17", false);
		start_Hash.put("tFlowToIterate_17", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_17";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"DATA_FILE");
					}
				
		int tos_count_tFlowToIterate_17 = 0;
		

int nb_line_tFlowToIterate_17 = 0;
int counter_tFlowToIterate_17 = 0;

 



/**
 * [tFlowToIterate_17 begin ] stop
 */



	
	/**
	 * [tHashOutput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_12", false);
		start_Hash.put("tHashOutput_12", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row51");
					}
				
		int tos_count_tHashOutput_12 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_12=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row51Struct> tHashFile_tHashOutput_12 = null;
		String hashKey_tHashOutput_12 = "tHashFile_ETL_vigilancia_" + pid + "_tHashOutput_12";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_12)){
			    if(mf_tHashOutput_12.getResourceMap().get(hashKey_tHashOutput_12) == null){
	      		    mf_tHashOutput_12.getResourceMap().put(hashKey_tHashOutput_12, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row51Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_FIRST));
	      		    tHashFile_tHashOutput_12 = mf_tHashOutput_12.getResourceMap().get(hashKey_tHashOutput_12);
			    }else{
			    	tHashFile_tHashOutput_12 = mf_tHashOutput_12.getResourceMap().get(hashKey_tHashOutput_12);
			    }
			}
        int nb_line_tHashOutput_12 = 0;

 



/**
 * [tHashOutput_12 begin ] stop
 */



	
	/**
	 * [tFilterRow_97 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_97", false);
		start_Hash.put("tFilterRow_97", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_97";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row46");
					}
				
		int tos_count_tFilterRow_97 = 0;
		
    int nb_line_tFilterRow_97 = 0;
    int nb_line_ok_tFilterRow_97 = 0;
    int nb_line_reject_tFilterRow_97 = 0;

    class Operator_tFilterRow_97 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_97(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_97 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_23 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_23", false);
		start_Hash.put("tFixedFlowInput_23", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_23";
	
	
		int tos_count_tFixedFlowInput_23 = 0;
		

	    for (int i_tFixedFlowInput_23 = 0 ; i_tFixedFlowInput_23 < 1 ; i_tFixedFlowInput_23++) {
	                	            	
    	            		row46.COD_DIVIPOLA = context.COD_DIVIPOLA;
    	            	        	            	
    	            		row46.INDICADOR = context.INDICADOR;
    	            	        	            	
    	            		row46.SEXO = context.SEXO;
    	            	        	            	
    	            		row46.EDAD = context.EDAD;
    	            	        	            	
    	            		row46.ETNIA = context.ETNIA;
    	            	        	            	
    	            		row46.CIE10 = context.CIE10;
    	            	        	            	
    	            		row46.PRIORIDAD = context.PRIORIDAD;
    	            	        	            	
    	            		row46.GRUPO_RIESGO = context.GRUPO_RIESGO;
    	            	

 



/**
 * [tFixedFlowInput_23 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_23 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_23";
	
	

 


	tos_count_tFixedFlowInput_23++;

/**
 * [tFixedFlowInput_23 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_23";
	
	

 



/**
 * [tFixedFlowInput_23 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_97 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_97";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row46"
						
						);
					}
					

          row51 = null;
    Operator_tFilterRow_97 ope_tFilterRow_97 = new Operator_tFilterRow_97("&&");
            ope_tFilterRow_97.matches((row46.COD_DIVIPOLA == null? false : row46.COD_DIVIPOLA.compareTo("") != 0)
                           , "COD_DIVIPOLA.compareTo(\"\") != 0 failed");  
          ope_tFilterRow_97.matches((row46.INDICADOR != 0)
                         , "INDICADOR!=0 failed");  
          ope_tFilterRow_97.matches((row46.SEXO != 0)
                         , "SEXO!=0 failed");  
          ope_tFilterRow_97.matches((row46.EDAD != 0)
                         , "EDAD!=0 failed");  
          ope_tFilterRow_97.matches((row46.ETNIA != 0)
                         , "ETNIA!=0 failed");
            ope_tFilterRow_97.matches((row46.CIE10 == null? false : row46.CIE10.compareTo("") != 0)
                           , "CIE10.compareTo(\"\") != 0 failed");  
          ope_tFilterRow_97.matches((row46.PRIORIDAD != 0)
                         , "PRIORIDAD!=0 failed");
    
    if (ope_tFilterRow_97.getMatchFlag()) {
              if(row51 == null){ 
                row51 = new row51Struct();
              }
               row51.COD_DIVIPOLA = row46.COD_DIVIPOLA;
               row51.INDICADOR = row46.INDICADOR;
               row51.SEXO = row46.SEXO;
               row51.EDAD = row46.EDAD;
               row51.ETNIA = row46.ETNIA;
               row51.CIE10 = row46.CIE10;
               row51.PRIORIDAD = row46.PRIORIDAD;
               row51.GRUPO_RIESGO = row46.GRUPO_RIESGO;    
      nb_line_ok_tFilterRow_97++;
    } else {
      nb_line_reject_tFilterRow_97++;
    }

nb_line_tFilterRow_97++;

 


	tos_count_tFilterRow_97++;

/**
 * [tFilterRow_97 main ] stop
 */
	
	/**
	 * [tFilterRow_97 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_97";
	
	

 



/**
 * [tFilterRow_97 process_data_begin ] stop
 */
// Start of branch "row51"
if(row51 != null) { 



	
	/**
	 * [tHashOutput_12 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row51"
						
						);
					}
					



    
		row51Struct oneRow_tHashOutput_12 = new row51Struct();
				
					oneRow_tHashOutput_12.COD_DIVIPOLA = row51.COD_DIVIPOLA;
					oneRow_tHashOutput_12.INDICADOR = row51.INDICADOR;
					oneRow_tHashOutput_12.SEXO = row51.SEXO;
					oneRow_tHashOutput_12.EDAD = row51.EDAD;
					oneRow_tHashOutput_12.ETNIA = row51.ETNIA;
					oneRow_tHashOutput_12.CIE10 = row51.CIE10;
					oneRow_tHashOutput_12.PRIORIDAD = row51.PRIORIDAD;
					oneRow_tHashOutput_12.GRUPO_RIESGO = row51.GRUPO_RIESGO;
		
        tHashFile_tHashOutput_12.put(oneRow_tHashOutput_12);
        nb_line_tHashOutput_12 ++;

 
     DATA_FILE = row51;


	tos_count_tHashOutput_12++;

/**
 * [tHashOutput_12 main ] stop
 */
	
	/**
	 * [tHashOutput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	

 



/**
 * [tHashOutput_12 process_data_begin ] stop
 */

	
	/**
	 * [tFlowToIterate_17 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_17";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"DATA_FILE"
						
						);
					}
					


    	            
            globalMap.put("DATA_FILE.COD_DIVIPOLA", DATA_FILE.COD_DIVIPOLA);
    	            
            globalMap.put("DATA_FILE.INDICADOR", DATA_FILE.INDICADOR);
    	            
            globalMap.put("DATA_FILE.SEXO", DATA_FILE.SEXO);
    	            
            globalMap.put("DATA_FILE.EDAD", DATA_FILE.EDAD);
    	            
            globalMap.put("DATA_FILE.ETNIA", DATA_FILE.ETNIA);
    	            
            globalMap.put("DATA_FILE.CIE10", DATA_FILE.CIE10);
    	            
            globalMap.put("DATA_FILE.PRIORIDAD", DATA_FILE.PRIORIDAD);
    	            
            globalMap.put("DATA_FILE.GRUPO_RIESGO", DATA_FILE.GRUPO_RIESGO);
    	
 
	   nb_line_tFlowToIterate_17++;  
       counter_tFlowToIterate_17++;
       globalMap.put("tFlowToIterate_17_CURRENT_ITERATION", counter_tFlowToIterate_17);
 


	tos_count_tFlowToIterate_17++;

/**
 * [tFlowToIterate_17 main ] stop
 */
	
	/**
	 * [tFlowToIterate_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_17";
	
	

 



/**
 * [tFlowToIterate_17 process_data_begin ] stop
 */
	NB_ITERATE_tFixedFlowInput_20++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("OnSubjobOk14", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row28", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row4", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row27", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk26", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk23", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row43", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate10", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row26", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row19", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("SEXO_REJECT_EXIST", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnSubjobOk17", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row31", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row11", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row32", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row42", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("SEXO_REJECT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnSubjobOk16", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row35", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row19", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk31", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tHashInput_10", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("ETNIA_REJECT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tHashInput_8", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row26", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate14", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("ETNIA_ACCEPT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row28", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row18", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row20", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("SEXO_ACCEPT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row14", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnSubjobOk15", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row37", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk32", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk18", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tHashInput_9", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("CIE10_REJECT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk40", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row36", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row29", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tHashInput_13", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk24", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row24", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate8", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row25", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate4", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate11", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row16", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row34", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("EDAD_REJECT_EXIST", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk29", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate13", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("DIVIPOLA_REJECT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate6", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("ETNIA_REJECT_EXIST", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("CIE10_ACCEPT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("CIE10_REJECT_EXIST", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row8", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row12", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate9", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate5", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk11", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("INDICADOR_REJECT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk21", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("EDAD_ACCEPT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate12", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate7", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("GRUPO_RIESGO_REJECT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk28", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row7", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row38", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("GRUPO_RIESGO_ACCEPT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate1", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row7", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row30", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row33", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row11", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnSubjobOk13", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("INDICADOR_ACCEPT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row16", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnSubjobOk18", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk12", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("EDAD_REJECT_FORMAT", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tHashInput_12", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("GRUPO_RIESGO_REJECT_EXIST", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("iterate2", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk27", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk25", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk22", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("after_tHashInput_11", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk30", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("INDICADOR_REJECT_EXIST", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate19", 1, "exec" + NB_ITERATE_tFixedFlowInput_20);
					//Thread.sleep(1000);
				}				
			


	
	/**
	 * [tHashOutput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_10", false);
		start_Hash.put("tHashOutput_10", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row42");
					}
				
		int tos_count_tHashOutput_10 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_10=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row42Struct> tHashFile_tHashOutput_10 = null;
		String hashKey_tHashOutput_10 = "tHashFile_ETL_vigilancia_" + pid + "_tHashOutput_10";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_10)){
			    if(mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10) == null){
	      		    mf_tHashOutput_10.getResourceMap().put(hashKey_tHashOutput_10, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row42Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_FIRST));
	      		    tHashFile_tHashOutput_10 = mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10);
			    }else{
			    	tHashFile_tHashOutput_10 = mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10);
			    }
			}
        int nb_line_tHashOutput_10 = 0;

 



/**
 * [tHashOutput_10 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_20", false);
		start_Hash.put("tFixedFlowInput_20", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_20";
	
	
		int tos_count_tFixedFlowInput_20 = 0;
		

	    for (int i_tFixedFlowInput_20 = 0 ; i_tFixedFlowInput_20 < 1 ; i_tFixedFlowInput_20++) {
	                	            	
    	            		row42.COD_DIVIPOLA = DATA_FILE.COD_DIVIPOLA;
    	            	        	            	
    	            		row42.INDICADOR = DATA_FILE.INDICADOR;
    	            	        	            	
    	            		row42.SEXO = DATA_FILE.SEXO;
    	            	        	            	
    	            		row42.EDAD = DATA_FILE.EDAD;
    	            	        	            	
    	            		row42.ETNIA = DATA_FILE.ETNIA;
    	            	        	            	
    	            		row42.CIE10 = DATA_FILE.CIE10;
    	            	        	            	
    	            		row42.PRIORIDAD = DATA_FILE.PRIORIDAD;
    	            	        	            	
    	            		row42.GRUPO_RIESGO = context.GRUPO_RIESGO;
    	            	

 



/**
 * [tFixedFlowInput_20 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_20 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_20";
	
	

 


	tos_count_tFixedFlowInput_20++;

/**
 * [tFixedFlowInput_20 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_20";
	
	

 



/**
 * [tFixedFlowInput_20 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_10 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row42"
						
						);
					}
					



    
		row42Struct oneRow_tHashOutput_10 = new row42Struct();
				
					oneRow_tHashOutput_10.COD_DIVIPOLA = row42.COD_DIVIPOLA;
					oneRow_tHashOutput_10.INDICADOR = row42.INDICADOR;
					oneRow_tHashOutput_10.SEXO = row42.SEXO;
					oneRow_tHashOutput_10.EDAD = row42.EDAD;
					oneRow_tHashOutput_10.ETNIA = row42.ETNIA;
					oneRow_tHashOutput_10.CIE10 = row42.CIE10;
					oneRow_tHashOutput_10.PRIORIDAD = row42.PRIORIDAD;
					oneRow_tHashOutput_10.GRUPO_RIESGO = row42.GRUPO_RIESGO;
		
        tHashFile_tHashOutput_10.put(oneRow_tHashOutput_10);
        nb_line_tHashOutput_10 ++;

 


	tos_count_tHashOutput_10++;

/**
 * [tHashOutput_10 main ] stop
 */
	
	/**
	 * [tHashOutput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_20";
	
	

 



/**
 * [tFixedFlowInput_20 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_20 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_20";
	
	

        }
        globalMap.put("tFixedFlowInput_20_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_20", true);
end_Hash.put("tFixedFlowInput_20", System.currentTimeMillis());




/**
 * [tFixedFlowInput_20 end ] stop
 */

	
	/**
	 * [tHashOutput_10 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	
globalMap.put("tHashOutput_10_NB_LINE", nb_line_tHashOutput_10);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row42");
			  	}
			  	
 

ok_Hash.put("tHashOutput_10", true);
end_Hash.put("tHashOutput_10", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk11", 0, "ok");
				}
				tJava_2Process(globalMap);



/**
 * [tHashOutput_10 end ] stop
 */



						if(execStat){
							runStat.updateStatOnConnection("iterate19", 2, "exec" + NB_ITERATE_tFixedFlowInput_20);
						}				
					




	
	/**
	 * [tFlowToIterate_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_17";
	
	

 



/**
 * [tFlowToIterate_17 process_data_end ] stop
 */



	
	/**
	 * [tHashOutput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	

 



/**
 * [tHashOutput_12 process_data_end ] stop
 */

} // End of branch "row51"




	
	/**
	 * [tFilterRow_97 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_97";
	
	

 



/**
 * [tFilterRow_97 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_23 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_23";
	
	

 



/**
 * [tFixedFlowInput_23 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_23 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_23";
	
	

        }
        globalMap.put("tFixedFlowInput_23_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_23", true);
end_Hash.put("tFixedFlowInput_23", System.currentTimeMillis());




/**
 * [tFixedFlowInput_23 end ] stop
 */

	
	/**
	 * [tFilterRow_97 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_97";
	
	
    globalMap.put("tFilterRow_97_NB_LINE", nb_line_tFilterRow_97);
    globalMap.put("tFilterRow_97_NB_LINE_OK", nb_line_ok_tFilterRow_97);
    globalMap.put("tFilterRow_97_NB_LINE_REJECT", nb_line_reject_tFilterRow_97);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row46");
			  	}
			  	
 

ok_Hash.put("tFilterRow_97", true);
end_Hash.put("tFilterRow_97", System.currentTimeMillis());




/**
 * [tFilterRow_97 end ] stop
 */

	
	/**
	 * [tHashOutput_12 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	
globalMap.put("tHashOutput_12_NB_LINE", nb_line_tHashOutput_12);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row51");
			  	}
			  	
 

ok_Hash.put("tHashOutput_12", true);
end_Hash.put("tHashOutput_12", System.currentTimeMillis());




/**
 * [tHashOutput_12 end ] stop
 */

	
	/**
	 * [tFlowToIterate_17 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_17";
	
	

globalMap.put("tFlowToIterate_17_NB_LINE",nb_line_tFlowToIterate_17);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"DATA_FILE");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_17", true);
end_Hash.put("tFlowToIterate_17", System.currentTimeMillis());




/**
 * [tFlowToIterate_17 end ] stop
 */









				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_23 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_23";
	
	

 



/**
 * [tFixedFlowInput_23 finally ] stop
 */

	
	/**
	 * [tFilterRow_97 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_97";
	
	

 



/**
 * [tFilterRow_97 finally ] stop
 */

	
	/**
	 * [tHashOutput_12 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	

 



/**
 * [tHashOutput_12 finally ] stop
 */

	
	/**
	 * [tFlowToIterate_17 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_17";
	
	

 



/**
 * [tFlowToIterate_17 finally ] stop
 */

	
	/**
	 * [tFixedFlowInput_20 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_20";
	
	

 



/**
 * [tFixedFlowInput_20 finally ] stop
 */

	
	/**
	 * [tHashOutput_10 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 finally ] stop
 */















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_23_SUBPROCESS_STATE", 1);
	}
	


public void tJava_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_2", false);
		start_Hash.put("tJava_2", System.currentTimeMillis());
		
	
	currentComponent="tJava_2";
	
	
		int tos_count_tJava_2 = 0;
		


globalMap.put("FILAS_ARCHIVO", (Integer)globalMap.get("FILAS_ARCHIVO")+1);
 



/**
 * [tJava_2 begin ] stop
 */
	
	/**
	 * [tJava_2 main ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 


	tos_count_tJava_2++;

/**
 * [tJava_2 main ] stop
 */
	
	/**
	 * [tJava_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_begin ] stop
 */
	
	/**
	 * [tJava_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_end ] stop
 */
	
	/**
	 * [tJava_2 end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 

ok_Hash.put("tJava_2", true);
end_Hash.put("tJava_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk12", 0, "ok");
				}
				tHashInput_7Process(globalMap);



/**
 * [tJava_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_2 finally ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_2_SUBPROCESS_STATE", 1);
	}
	


public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class DIVIPOLA_REJECTStruct implements routines.system.IPersistableRow<DIVIPOLA_REJECTStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String errorMessage;

				public String getErrorMessage () {
					return this.errorMessage;
				}

				public Boolean errorMessageIsNullable(){
				    return true;
				}
				public Boolean errorMessageIsKey(){
				    return false;
				}
				public Integer errorMessageLength(){
				    return 255;
				}
				public Integer errorMessagePrecision(){
				    return 0;
				}
				public String errorMessageDefault(){
				
					return null;
				
				}
				public String errorMessageComment(){
				
				    return null;
				
				}
				public String errorMessagePattern(){
				
				    return null;
				
				}
				public String errorMessageOriginalDbColumnName(){
				
					return "errorMessage";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",errorMessage="+errorMessage);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(DIVIPOLA_REJECTStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row30Struct implements routines.system.IPersistableRow<row30Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row30Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row30Struct row30 = new row30Struct();
DIVIPOLA_REJECTStruct DIVIPOLA_REJECT = new DIVIPOLA_REJECTStruct();
row4Struct row4 = new row4Struct();





	
	/**
	 * [tFlowToIterate_1 begin ] start
	 */

				
			int NB_ITERATE_tFixedFlowInput_1 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_1", false);
		start_Hash.put("tFlowToIterate_1", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"DIVIPOLA_REJECT");
					}
				
		int tos_count_tFlowToIterate_1 = 0;
		

int nb_line_tFlowToIterate_1 = 0;
int counter_tFlowToIterate_1 = 0;

 



/**
 * [tFlowToIterate_1 begin ] stop
 */



	
	/**
	 * [tFilterRow_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_10", false);
		start_Hash.put("tFilterRow_10", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row30");
					}
				
		int tos_count_tFilterRow_10 = 0;
		
    int nb_line_tFilterRow_10 = 0;
    int nb_line_ok_tFilterRow_10 = 0;
    int nb_line_reject_tFilterRow_10 = 0;

    class Operator_tFilterRow_10 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_10(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_10 begin ] stop
 */



	
	/**
	 * [tHashInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_7", false);
		start_Hash.put("tHashInput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_7";
	
	
		int tos_count_tHashInput_7 = 0;
		


int nb_line_tHashInput_7 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row42Struct> tHashFile_tHashInput_7 = mf_tHashInput_7.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_10");
if(tHashFile_tHashInput_7==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row42Struct> iterator_tHashInput_7 = tHashFile_tHashInput_7.iterator();
while (iterator_tHashInput_7.hasNext()) {
    row42Struct next_tHashInput_7 = iterator_tHashInput_7.next();

	row30.COD_DIVIPOLA = next_tHashInput_7.COD_DIVIPOLA;
	row30.INDICADOR = next_tHashInput_7.INDICADOR;
	row30.SEXO = next_tHashInput_7.SEXO;
	row30.EDAD = next_tHashInput_7.EDAD;
	row30.ETNIA = next_tHashInput_7.ETNIA;
	row30.CIE10 = next_tHashInput_7.CIE10;
	row30.PRIORIDAD = next_tHashInput_7.PRIORIDAD;
	row30.GRUPO_RIESGO = next_tHashInput_7.GRUPO_RIESGO;

 



/**
 * [tHashInput_7 begin ] stop
 */
	
	/**
	 * [tHashInput_7 main ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 


	tos_count_tHashInput_7++;

/**
 * [tHashInput_7 main ] stop
 */
	
	/**
	 * [tHashInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_10 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row30"
						
						);
					}
					

          DIVIPOLA_REJECT = null;
    Operator_tFilterRow_10 ope_tFilterRow_10 = new Operator_tFilterRow_10("&&");
      ope_tFilterRow_10.matches((//****************************************************************************************//
//*** VALIDACION COLUMNA COD_DIVIPOLA ****************************************************//
//****************************************************************************************//
(row30.COD_DIVIPOLA.length() == 5)||(row30.COD_DIVIPOLA.length() == 2)), "advanced condition failed");
    
    if (ope_tFilterRow_10.getMatchFlag()) {    
      nb_line_ok_tFilterRow_10++;
    } else {
            if (DIVIPOLA_REJECT == null){
              DIVIPOLA_REJECT = new DIVIPOLA_REJECTStruct();
            }
                DIVIPOLA_REJECT.COD_DIVIPOLA = row30.COD_DIVIPOLA;
                DIVIPOLA_REJECT.INDICADOR = row30.INDICADOR;
                DIVIPOLA_REJECT.SEXO = row30.SEXO;
                DIVIPOLA_REJECT.EDAD = row30.EDAD;
                DIVIPOLA_REJECT.ETNIA = row30.ETNIA;
                DIVIPOLA_REJECT.CIE10 = row30.CIE10;
                DIVIPOLA_REJECT.PRIORIDAD = row30.PRIORIDAD;
                DIVIPOLA_REJECT.GRUPO_RIESGO = row30.GRUPO_RIESGO;
	            DIVIPOLA_REJECT.errorMessage = ope_tFilterRow_10.getErrorMsg();
      nb_line_reject_tFilterRow_10++;
    }

nb_line_tFilterRow_10++;

 


	tos_count_tFilterRow_10++;

/**
 * [tFilterRow_10 main ] stop
 */
	
	/**
	 * [tFilterRow_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_10";
	
	

 



/**
 * [tFilterRow_10 process_data_begin ] stop
 */
// Start of branch "DIVIPOLA_REJECT"
if(DIVIPOLA_REJECT != null) { 



	
	/**
	 * [tFlowToIterate_1 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"DIVIPOLA_REJECT"
						
						);
					}
					


    	            
            globalMap.put("DIVIPOLA_REJECT.COD_DIVIPOLA", DIVIPOLA_REJECT.COD_DIVIPOLA);
    	            
            globalMap.put("DIVIPOLA_REJECT.INDICADOR", DIVIPOLA_REJECT.INDICADOR);
    	            
            globalMap.put("DIVIPOLA_REJECT.SEXO", DIVIPOLA_REJECT.SEXO);
    	            
            globalMap.put("DIVIPOLA_REJECT.EDAD", DIVIPOLA_REJECT.EDAD);
    	            
            globalMap.put("DIVIPOLA_REJECT.ETNIA", DIVIPOLA_REJECT.ETNIA);
    	            
            globalMap.put("DIVIPOLA_REJECT.CIE10", DIVIPOLA_REJECT.CIE10);
    	            
            globalMap.put("DIVIPOLA_REJECT.PRIORIDAD", DIVIPOLA_REJECT.PRIORIDAD);
    	            
            globalMap.put("DIVIPOLA_REJECT.GRUPO_RIESGO", DIVIPOLA_REJECT.GRUPO_RIESGO);
    	            
            globalMap.put("DIVIPOLA_REJECT.errorMessage", DIVIPOLA_REJECT.errorMessage);
    	
 
	   nb_line_tFlowToIterate_1++;  
       counter_tFlowToIterate_1++;
       globalMap.put("tFlowToIterate_1_CURRENT_ITERATION", counter_tFlowToIterate_1);
 


	tos_count_tFlowToIterate_1++;

/**
 * [tFlowToIterate_1 main ] stop
 */
	
	/**
	 * [tFlowToIterate_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 process_data_begin ] stop
 */
	NB_ITERATE_tFixedFlowInput_1++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk40", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row4", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk18", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate1", 1, "exec" + NB_ITERATE_tFixedFlowInput_1);
					//Thread.sleep(1000);
				}				
			


	
	/**
	 * [tJavaRow_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_5", false);
		start_Hash.put("tJavaRow_5", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tJavaRow_5 = 0;
		

int nb_line_tJavaRow_5 = 0;

 



/**
 * [tJavaRow_5 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_1", false);
		start_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_1";
	
	
		int tos_count_tFixedFlowInput_1 = 0;
		

	    for (int i_tFixedFlowInput_1 = 0 ; i_tFixedFlowInput_1 < 1 ; i_tFixedFlowInput_1++) {
	                	            	
    	            		row4.COD_DIVIPOLA = DIVIPOLA_REJECT.COD_DIVIPOLA;
    	            	        	            	
    	            		row4.INDICADOR = DIVIPOLA_REJECT.INDICADOR;
    	            	        	            	
    	            		row4.SEXO = DIVIPOLA_REJECT.SEXO;
    	            	        	            	
    	            		row4.EDAD = DIVIPOLA_REJECT.EDAD;
    	            	        	            	
    	            		row4.ETNIA = DIVIPOLA_REJECT.ETNIA;
    	            	        	            	
    	            		row4.CIE10 = DIVIPOLA_REJECT.CIE10;
    	            	        	            	
    	            		row4.PRIORIDAD = DIVIPOLA_REJECT.PRIORIDAD;
    	            	        	            	
    	            		row4.GRUPO_RIESGO = DIVIPOLA_REJECT.GRUPO_RIESGO;
    	            	        	            	
    	            		row4.ERROR = "Columna "+globalMap.get("filas")+" : "+context.ErrorCodDivipola;
    	            	

 



/**
 * [tFixedFlowInput_1 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 


	tos_count_tFixedFlowInput_1++;

/**
 * [tFixedFlowInput_1 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_5 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.COD_DIVIPOLA_VAL = row4.COD_DIVIPOLA;
context.INDICADOR_VAL = row4.INDICADOR;
context.SEXO_VAL = row4.SEXO;
context.EDAD_VAL = row4.EDAD;
context.ETNIA_VAL = row4.ETNIA;
context.CIE10_VAL = row4.CIE10;
context.PRIORIDAD_VAL = row4.PRIORIDAD;
context.GRUPO_RIESGO_VAL = row4.GRUPO_RIESGO;
context.ERROR_VAL = row4.ERROR;

    nb_line_tJavaRow_5++;   

 


	tos_count_tJavaRow_5++;

/**
 * [tJavaRow_5 main ] stop
 */
	
	/**
	 * [tJavaRow_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

        }
        globalMap.put("tFixedFlowInput_1_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_1", true);
end_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());




/**
 * [tFixedFlowInput_1 end ] stop
 */

	
	/**
	 * [tJavaRow_5 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

globalMap.put("tJavaRow_5_NB_LINE",nb_line_tJavaRow_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tJavaRow_5", true);
end_Hash.put("tJavaRow_5", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk18", 0, "ok");
				}
				tFixedFlowInput_21Process(globalMap);



/**
 * [tJavaRow_5 end ] stop
 */



						if(execStat){
							runStat.updateStatOnConnection("iterate1", 2, "exec" + NB_ITERATE_tFixedFlowInput_1);
						}				
					




	
	/**
	 * [tFlowToIterate_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 process_data_end ] stop
 */

} // End of branch "DIVIPOLA_REJECT"




	
	/**
	 * [tFilterRow_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_10";
	
	

 



/**
 * [tFilterRow_10 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_7 end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	
    

		
			nb_line_tHashInput_7++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_10");
	


	globalMap.put("tHashInput_7_NB_LINE", nb_line_tHashInput_7);       

 

ok_Hash.put("tHashInput_7", true);
end_Hash.put("tHashInput_7", System.currentTimeMillis());




/**
 * [tHashInput_7 end ] stop
 */

	
	/**
	 * [tFilterRow_10 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_10";
	
	
    globalMap.put("tFilterRow_10_NB_LINE", nb_line_tFilterRow_10);
    globalMap.put("tFilterRow_10_NB_LINE_OK", nb_line_ok_tFilterRow_10);
    globalMap.put("tFilterRow_10_NB_LINE_REJECT", nb_line_reject_tFilterRow_10);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row30");
			  	}
			  	
 

ok_Hash.put("tFilterRow_10", true);
end_Hash.put("tFilterRow_10", System.currentTimeMillis());




/**
 * [tFilterRow_10 end ] stop
 */

	
	/**
	 * [tFlowToIterate_1 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

globalMap.put("tFlowToIterate_1_NB_LINE",nb_line_tFlowToIterate_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"DIVIPOLA_REJECT");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_1", true);
end_Hash.put("tFlowToIterate_1", System.currentTimeMillis());




/**
 * [tFlowToIterate_1 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_7:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk13", 0, "ok");
								} 
							
							tHashInput_8Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 finally ] stop
 */

	
	/**
	 * [tFilterRow_10 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_10";
	
	

 



/**
 * [tFilterRow_10 finally ] stop
 */

	
	/**
	 * [tFlowToIterate_1 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 finally ] stop
 */

	
	/**
	 * [tFixedFlowInput_1 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_5 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_21Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_21_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row5Struct row5 = new row5Struct();




	
	/**
	 * [tHashOutput_23 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_23", false);
		start_Hash.put("tHashOutput_23", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_23";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tHashOutput_23 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_23=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashOutput_23 = null;
		String hashKey_tHashOutput_23 = "tHashFile_ETL_vigilancia_" + pid + "_tHashOutput_23";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_23)){
			    if(mf_tHashOutput_23.getResourceMap().get(hashKey_tHashOutput_23) == null){
	      		    mf_tHashOutput_23.getResourceMap().put(hashKey_tHashOutput_23, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_23 = mf_tHashOutput_23.getResourceMap().get(hashKey_tHashOutput_23);
			    }else{
			    	tHashFile_tHashOutput_23 = mf_tHashOutput_23.getResourceMap().get(hashKey_tHashOutput_23);
			    }
			}
        int nb_line_tHashOutput_23 = 0;

 



/**
 * [tHashOutput_23 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_21", false);
		start_Hash.put("tFixedFlowInput_21", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_21";
	
	
		int tos_count_tFixedFlowInput_21 = 0;
		

	    for (int i_tFixedFlowInput_21 = 0 ; i_tFixedFlowInput_21 < 1 ; i_tFixedFlowInput_21++) {
	                	            	
    	            		row5.COD_DIVIPOLA = context.COD_DIVIPOLA_VAL;
    	            	        	            	
    	            		row5.INDICADOR = context.INDICADOR_VAL;
    	            	        	            	
    	            		row5.SEXO = context.SEXO_VAL;
    	            	        	            	
    	            		row5.EDAD = context.EDAD_VAL;
    	            	        	            	
    	            		row5.ETNIA = context.ETNIA_VAL;
    	            	        	            	
    	            		row5.CIE10 = context.CIE10_VAL;
    	            	        	            	
    	            		row5.PRIORIDAD = context.PRIORIDAD_VAL;
    	            	        	            	
    	            		row5.GRUPO_RIESGO = context.GRUPO_RIESGO_VAL;
    	            	        	            	
    	            		row5.ERROR = context.ERROR_VAL;
    	            	

 



/**
 * [tFixedFlowInput_21 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_21 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_21";
	
	

 


	tos_count_tFixedFlowInput_21++;

/**
 * [tFixedFlowInput_21 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_21";
	
	

 



/**
 * [tFixedFlowInput_21 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_23 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_23";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					



    
		row5Struct oneRow_tHashOutput_23 = new row5Struct();
				
					oneRow_tHashOutput_23.COD_DIVIPOLA = row5.COD_DIVIPOLA;
					oneRow_tHashOutput_23.INDICADOR = row5.INDICADOR;
					oneRow_tHashOutput_23.SEXO = row5.SEXO;
					oneRow_tHashOutput_23.EDAD = row5.EDAD;
					oneRow_tHashOutput_23.ETNIA = row5.ETNIA;
					oneRow_tHashOutput_23.CIE10 = row5.CIE10;
					oneRow_tHashOutput_23.PRIORIDAD = row5.PRIORIDAD;
					oneRow_tHashOutput_23.GRUPO_RIESGO = row5.GRUPO_RIESGO;
					oneRow_tHashOutput_23.ERROR = row5.ERROR;
		
        tHashFile_tHashOutput_23.put(oneRow_tHashOutput_23);
        nb_line_tHashOutput_23 ++;

 


	tos_count_tHashOutput_23++;

/**
 * [tHashOutput_23 main ] stop
 */
	
	/**
	 * [tHashOutput_23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_23";
	
	

 



/**
 * [tHashOutput_23 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_23 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_23";
	
	

 



/**
 * [tHashOutput_23 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_21";
	
	

 



/**
 * [tFixedFlowInput_21 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_21 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_21";
	
	

        }
        globalMap.put("tFixedFlowInput_21_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_21", true);
end_Hash.put("tFixedFlowInput_21", System.currentTimeMillis());




/**
 * [tFixedFlowInput_21 end ] stop
 */

	
	/**
	 * [tHashOutput_23 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_23";
	
	
globalMap.put("tHashOutput_23_NB_LINE", nb_line_tHashOutput_23);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tHashOutput_23", true);
end_Hash.put("tHashOutput_23", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk40", 0, "ok");
				}
				tJava_5Process(globalMap);



/**
 * [tHashOutput_23 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_21 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_21";
	
	

 



/**
 * [tFixedFlowInput_21 finally ] stop
 */

	
	/**
	 * [tHashOutput_23 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_23";
	
	

 



/**
 * [tHashOutput_23 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_21_SUBPROCESS_STATE", 1);
	}
	


public void tJava_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJava_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_5", false);
		start_Hash.put("tJava_5", System.currentTimeMillis());
		
	
	currentComponent="tJava_5";
	
	
		int tos_count_tJava_5 = 0;
		


globalMap.put("FILAS_ERROR", (Integer)globalMap.get("FILAS_ERROR")+1);
 



/**
 * [tJava_5 begin ] stop
 */
	
	/**
	 * [tJava_5 main ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 


	tos_count_tJava_5++;

/**
 * [tJava_5 main ] stop
 */
	
	/**
	 * [tJava_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_begin ] stop
 */
	
	/**
	 * [tJava_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_end ] stop
 */
	
	/**
	 * [tJava_5 end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 

ok_Hash.put("tJava_5", true);
end_Hash.put("tJava_5", System.currentTimeMillis());




/**
 * [tJava_5 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_5 finally ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_5_SUBPROCESS_STATE", 1);
	}
	


public static class row43Struct implements routines.system.IPersistableRow<row43Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row43Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row32Struct implements routines.system.IPersistableRow<row32Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row32Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class INDICADOR_REJECT_EXISTStruct implements routines.system.IPersistableRow<INDICADOR_REJECT_EXISTStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(INDICADOR_REJECT_EXISTStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class INDICADOR_ACCEPT_FORMATStruct implements routines.system.IPersistableRow<INDICADOR_ACCEPT_FORMATStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(INDICADOR_ACCEPT_FORMATStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class INDICADOR_REJECT_FORMATStruct implements routines.system.IPersistableRow<INDICADOR_REJECT_FORMATStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String errorMessage;

				public String getErrorMessage () {
					return this.errorMessage;
				}

				public Boolean errorMessageIsNullable(){
				    return true;
				}
				public Boolean errorMessageIsKey(){
				    return false;
				}
				public Integer errorMessageLength(){
				    return 255;
				}
				public Integer errorMessagePrecision(){
				    return 0;
				}
				public String errorMessageDefault(){
				
					return null;
				
				}
				public String errorMessageComment(){
				
				    return null;
				
				}
				public String errorMessagePattern(){
				
				    return null;
				
				}
				public String errorMessageOriginalDbColumnName(){
				
					return "errorMessage";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",errorMessage="+errorMessage);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(INDICADOR_REJECT_FORMATStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row33Struct implements routines.system.IPersistableRow<row33Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row33Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_8Struct implements routines.system.IPersistableRow<after_tHashInput_8Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_1Process(globalMap);

		row33Struct row33 = new row33Struct();
INDICADOR_ACCEPT_FORMATStruct INDICADOR_ACCEPT_FORMAT = new INDICADOR_ACCEPT_FORMATStruct();
INDICADOR_REJECT_EXISTStruct INDICADOR_REJECT_EXIST = new INDICADOR_REJECT_EXISTStruct();
row32Struct row32 = new row32Struct();
INDICADOR_REJECT_FORMATStruct INDICADOR_REJECT_FORMAT = new INDICADOR_REJECT_FORMATStruct();
row43Struct row43 = new row43Struct();






	
	/**
	 * [tFlowToIterate_2 begin ] start
	 */

				
			int NB_ITERATE_tFixedFlowInput_2 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_2", false);
		start_Hash.put("tFlowToIterate_2", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"INDICADOR_REJECT_EXIST");
					}
				
		int tos_count_tFlowToIterate_2 = 0;
		

int nb_line_tFlowToIterate_2 = 0;
int counter_tFlowToIterate_2 = 0;

 



/**
 * [tFlowToIterate_2 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"INDICADOR_ACCEPT_FORMAT");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct> tHash_Lookup_row7 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct>) 
					globalMap.get( "tHash_Lookup_row7" ))
					;					
					
	

row7Struct row7HashKey = new row7Struct();
row7Struct row7Default = new row7Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
INDICADOR_REJECT_EXISTStruct INDICADOR_REJECT_EXIST_tmp = new INDICADOR_REJECT_EXISTStruct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */




	
	/**
	 * [tFlowToIterate_3 begin ] start
	 */

				
			int NB_ITERATE_tFixedFlowInput_4 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_3", false);
		start_Hash.put("tFlowToIterate_3", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"INDICADOR_REJECT_FORMAT");
					}
				
		int tos_count_tFlowToIterate_3 = 0;
		

int nb_line_tFlowToIterate_3 = 0;
int counter_tFlowToIterate_3 = 0;

 



/**
 * [tFlowToIterate_3 begin ] stop
 */



	
	/**
	 * [tFilterRow_26 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_26", false);
		start_Hash.put("tFilterRow_26", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_26";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row33");
					}
				
		int tos_count_tFilterRow_26 = 0;
		
    int nb_line_tFilterRow_26 = 0;
    int nb_line_ok_tFilterRow_26 = 0;
    int nb_line_reject_tFilterRow_26 = 0;

    class Operator_tFilterRow_26 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_26(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_26 begin ] stop
 */



	
	/**
	 * [tHashInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_8", false);
		start_Hash.put("tHashInput_8", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_8";
	
	
		int tos_count_tHashInput_8 = 0;
		


int nb_line_tHashInput_8 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_8=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row42Struct> tHashFile_tHashInput_8 = mf_tHashInput_8.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_10");
if(tHashFile_tHashInput_8==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row42Struct> iterator_tHashInput_8 = tHashFile_tHashInput_8.iterator();
while (iterator_tHashInput_8.hasNext()) {
    row42Struct next_tHashInput_8 = iterator_tHashInput_8.next();

	row33.COD_DIVIPOLA = next_tHashInput_8.COD_DIVIPOLA;
	row33.INDICADOR = next_tHashInput_8.INDICADOR;
	row33.SEXO = next_tHashInput_8.SEXO;
	row33.EDAD = next_tHashInput_8.EDAD;
	row33.ETNIA = next_tHashInput_8.ETNIA;
	row33.CIE10 = next_tHashInput_8.CIE10;
	row33.PRIORIDAD = next_tHashInput_8.PRIORIDAD;
	row33.GRUPO_RIESGO = next_tHashInput_8.GRUPO_RIESGO;

 



/**
 * [tHashInput_8 begin ] stop
 */
	
	/**
	 * [tHashInput_8 main ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 


	tos_count_tHashInput_8++;

/**
 * [tHashInput_8 main ] stop
 */
	
	/**
	 * [tHashInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_26 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_26";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row33"
						
						);
					}
					

          INDICADOR_REJECT_FORMAT = null;
          INDICADOR_ACCEPT_FORMAT = null;
    Operator_tFilterRow_26 ope_tFilterRow_26 = new Operator_tFilterRow_26("&&");
      ope_tFilterRow_26.matches((//****************************************************************************************//
//*** VALIDACION COLUMNA INDICADOR *******************************************************//
//****************************************************************************************//
(ValidationRules.CifrasNumero(row33.INDICADOR) >= 1) && (ValidationRules.CifrasNumero(row33.INDICADOR) <= 3)), "advanced condition failed");
    
    if (ope_tFilterRow_26.getMatchFlag()) {
              if(INDICADOR_ACCEPT_FORMAT == null){ 
                INDICADOR_ACCEPT_FORMAT = new INDICADOR_ACCEPT_FORMATStruct();
              }
               INDICADOR_ACCEPT_FORMAT.COD_DIVIPOLA = row33.COD_DIVIPOLA;
               INDICADOR_ACCEPT_FORMAT.INDICADOR = row33.INDICADOR;
               INDICADOR_ACCEPT_FORMAT.SEXO = row33.SEXO;
               INDICADOR_ACCEPT_FORMAT.EDAD = row33.EDAD;
               INDICADOR_ACCEPT_FORMAT.ETNIA = row33.ETNIA;
               INDICADOR_ACCEPT_FORMAT.CIE10 = row33.CIE10;
               INDICADOR_ACCEPT_FORMAT.PRIORIDAD = row33.PRIORIDAD;
               INDICADOR_ACCEPT_FORMAT.GRUPO_RIESGO = row33.GRUPO_RIESGO;    
      nb_line_ok_tFilterRow_26++;
    } else {
            if (INDICADOR_REJECT_FORMAT == null){
              INDICADOR_REJECT_FORMAT = new INDICADOR_REJECT_FORMATStruct();
            }
                INDICADOR_REJECT_FORMAT.COD_DIVIPOLA = row33.COD_DIVIPOLA;
                INDICADOR_REJECT_FORMAT.INDICADOR = row33.INDICADOR;
                INDICADOR_REJECT_FORMAT.SEXO = row33.SEXO;
                INDICADOR_REJECT_FORMAT.EDAD = row33.EDAD;
                INDICADOR_REJECT_FORMAT.ETNIA = row33.ETNIA;
                INDICADOR_REJECT_FORMAT.CIE10 = row33.CIE10;
                INDICADOR_REJECT_FORMAT.PRIORIDAD = row33.PRIORIDAD;
                INDICADOR_REJECT_FORMAT.GRUPO_RIESGO = row33.GRUPO_RIESGO;
	            INDICADOR_REJECT_FORMAT.errorMessage = ope_tFilterRow_26.getErrorMsg();
      nb_line_reject_tFilterRow_26++;
    }

nb_line_tFilterRow_26++;

 


	tos_count_tFilterRow_26++;

/**
 * [tFilterRow_26 main ] stop
 */
	
	/**
	 * [tFilterRow_26 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_26";
	
	

 



/**
 * [tFilterRow_26 process_data_begin ] stop
 */
// Start of branch "INDICADOR_ACCEPT_FORMAT"
if(INDICADOR_ACCEPT_FORMAT != null) { 



	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"INDICADOR_ACCEPT_FORMAT"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
						row7Struct row7 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row7" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow7 = false;
       		  	    	
       		  	    	
 							row7Struct row7ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row7HashKey.CODIGO_INDICADOR = INDICADOR_ACCEPT_FORMAT.INDICADOR ;
                        		    		

								
		                        	row7HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row7.lookup( row7HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row7 != null && tHash_Lookup_row7.getCount(row7HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row7' and it contains more one result from keys :  row7.CODIGO_INDICADOR = '" + row7HashKey.CODIGO_INDICADOR + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row7Struct fromLookup_row7 = null;
							row7 = row7Default;
										 
							
								 
							
							
								if (tHash_Lookup_row7 !=null && tHash_Lookup_row7.hasNext()) { // G 099
								
							
								
								fromLookup_row7 = tHash_Lookup_row7.next();

							
							
								} // G 099
							
							

							if(fromLookup_row7 != null) {
								row7 = fromLookup_row7;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

INDICADOR_REJECT_EXIST = null;

// ###### START REJECTS ##### 
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "INDICADOR_REJECT_EXIST"
if(INDICADOR_REJECT_EXIST != null) { 



	
	/**
	 * [tFlowToIterate_2 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"INDICADOR_REJECT_EXIST"
						
						);
					}
					


    	            
            globalMap.put("INDICADOR_REJECT_EXIST.COD_DIVIPOLA", INDICADOR_REJECT_EXIST.COD_DIVIPOLA);
    	            
            globalMap.put("INDICADOR_REJECT_EXIST.INDICADOR", INDICADOR_REJECT_EXIST.INDICADOR);
    	            
            globalMap.put("INDICADOR_REJECT_EXIST.SEXO", INDICADOR_REJECT_EXIST.SEXO);
    	            
            globalMap.put("INDICADOR_REJECT_EXIST.EDAD", INDICADOR_REJECT_EXIST.EDAD);
    	            
            globalMap.put("INDICADOR_REJECT_EXIST.ETNIA", INDICADOR_REJECT_EXIST.ETNIA);
    	            
            globalMap.put("INDICADOR_REJECT_EXIST.CIE10", INDICADOR_REJECT_EXIST.CIE10);
    	            
            globalMap.put("INDICADOR_REJECT_EXIST.PRIORIDAD", INDICADOR_REJECT_EXIST.PRIORIDAD);
    	            
            globalMap.put("INDICADOR_REJECT_EXIST.GRUPO_RIESGO", INDICADOR_REJECT_EXIST.GRUPO_RIESGO);
    	
 
	   nb_line_tFlowToIterate_2++;  
       counter_tFlowToIterate_2++;
       globalMap.put("tFlowToIterate_2_CURRENT_ITERATION", counter_tFlowToIterate_2);
 


	tos_count_tFlowToIterate_2++;

/**
 * [tFlowToIterate_2 main ] stop
 */
	
	/**
	 * [tFlowToIterate_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_2";
	
	

 



/**
 * [tFlowToIterate_2 process_data_begin ] stop
 */
	NB_ITERATE_tFixedFlowInput_2++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk40", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row32", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk22", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate2", 1, "exec" + NB_ITERATE_tFixedFlowInput_2);
					//Thread.sleep(1000);
				}				
			


	
	/**
	 * [tJavaRow_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_7", false);
		start_Hash.put("tJavaRow_7", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row32");
					}
				
		int tos_count_tJavaRow_7 = 0;
		

int nb_line_tJavaRow_7 = 0;

 



/**
 * [tJavaRow_7 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_2", false);
		start_Hash.put("tFixedFlowInput_2", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_2";
	
	
		int tos_count_tFixedFlowInput_2 = 0;
		

	    for (int i_tFixedFlowInput_2 = 0 ; i_tFixedFlowInput_2 < 1 ; i_tFixedFlowInput_2++) {
	                	            	
    	            		row32.COD_DIVIPOLA = INDICADOR_REJECT_EXIST.COD_DIVIPOLA;
    	            	        	            	
    	            		row32.INDICADOR = INDICADOR_REJECT_EXIST.INDICADOR;
    	            	        	            	
    	            		row32.SEXO = INDICADOR_REJECT_EXIST.SEXO;
    	            	        	            	
    	            		row32.EDAD = INDICADOR_REJECT_EXIST.EDAD;
    	            	        	            	
    	            		row32.ETNIA = INDICADOR_REJECT_EXIST.ETNIA;
    	            	        	            	
    	            		row32.CIE10 = INDICADOR_REJECT_EXIST.CIE10;
    	            	        	            	
    	            		row32.PRIORIDAD = INDICADOR_REJECT_EXIST.PRIORIDAD;
    	            	        	            	
    	            		row32.GRUPO_RIESGO = INDICADOR_REJECT_EXIST.GRUPO_RIESGO;
    	            	        	            	
    	            		row32.ERROR = "Columna "+globalMap.get("filas")+" : "+context.ErrorIndicadorExist;
    	            	

 



/**
 * [tFixedFlowInput_2 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 


	tos_count_tFixedFlowInput_2++;

/**
 * [tFixedFlowInput_2 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_7 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row32"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.COD_DIVIPOLA_VAL = row32.COD_DIVIPOLA;
context.INDICADOR_VAL = row32.INDICADOR;
context.SEXO_VAL = row32.SEXO;
context.EDAD_VAL = row32.EDAD;
context.ETNIA_VAL = row32.ETNIA;
context.CIE10_VAL = row32.CIE10;
context.PRIORIDAD_VAL = row32.PRIORIDAD;
context.GRUPO_RIESGO_VAL = row32.GRUPO_RIESGO;
context.ERROR_VAL = row32.ERROR;

    nb_line_tJavaRow_7++;   

 


	tos_count_tJavaRow_7++;

/**
 * [tJavaRow_7 main ] stop
 */
	
	/**
	 * [tJavaRow_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

        }
        globalMap.put("tFixedFlowInput_2_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_2", true);
end_Hash.put("tFixedFlowInput_2", System.currentTimeMillis());




/**
 * [tFixedFlowInput_2 end ] stop
 */

	
	/**
	 * [tJavaRow_7 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

globalMap.put("tJavaRow_7_NB_LINE",nb_line_tJavaRow_7);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row32");
			  	}
			  	
 

ok_Hash.put("tJavaRow_7", true);
end_Hash.put("tJavaRow_7", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk22", 0, "ok");
				}
				tFixedFlowInput_21Process(globalMap);



/**
 * [tJavaRow_7 end ] stop
 */



						if(execStat){
							runStat.updateStatOnConnection("iterate2", 2, "exec" + NB_ITERATE_tFixedFlowInput_2);
						}				
					




	
	/**
	 * [tFlowToIterate_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_2";
	
	

 



/**
 * [tFlowToIterate_2 process_data_end ] stop
 */

} // End of branch "INDICADOR_REJECT_EXIST"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */

} // End of branch "INDICADOR_ACCEPT_FORMAT"




// Start of branch "INDICADOR_REJECT_FORMAT"
if(INDICADOR_REJECT_FORMAT != null) { 



	
	/**
	 * [tFlowToIterate_3 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"INDICADOR_REJECT_FORMAT"
						
						);
					}
					


    	            
            globalMap.put("INDICADOR_REJECT_FORMAT.COD_DIVIPOLA", INDICADOR_REJECT_FORMAT.COD_DIVIPOLA);
    	            
            globalMap.put("INDICADOR_REJECT_FORMAT.INDICADOR", INDICADOR_REJECT_FORMAT.INDICADOR);
    	            
            globalMap.put("INDICADOR_REJECT_FORMAT.SEXO", INDICADOR_REJECT_FORMAT.SEXO);
    	            
            globalMap.put("INDICADOR_REJECT_FORMAT.EDAD", INDICADOR_REJECT_FORMAT.EDAD);
    	            
            globalMap.put("INDICADOR_REJECT_FORMAT.ETNIA", INDICADOR_REJECT_FORMAT.ETNIA);
    	            
            globalMap.put("INDICADOR_REJECT_FORMAT.CIE10", INDICADOR_REJECT_FORMAT.CIE10);
    	            
            globalMap.put("INDICADOR_REJECT_FORMAT.PRIORIDAD", INDICADOR_REJECT_FORMAT.PRIORIDAD);
    	            
            globalMap.put("INDICADOR_REJECT_FORMAT.GRUPO_RIESGO", INDICADOR_REJECT_FORMAT.GRUPO_RIESGO);
    	            
            globalMap.put("INDICADOR_REJECT_FORMAT.errorMessage", INDICADOR_REJECT_FORMAT.errorMessage);
    	
 
	   nb_line_tFlowToIterate_3++;  
       counter_tFlowToIterate_3++;
       globalMap.put("tFlowToIterate_3_CURRENT_ITERATION", counter_tFlowToIterate_3);
 


	tos_count_tFlowToIterate_3++;

/**
 * [tFlowToIterate_3 main ] stop
 */
	
	/**
	 * [tFlowToIterate_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_3";
	
	

 



/**
 * [tFlowToIterate_3 process_data_begin ] stop
 */
	NB_ITERATE_tFixedFlowInput_4++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk40", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row43", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk21", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate4", 1, "exec" + NB_ITERATE_tFixedFlowInput_4);
					//Thread.sleep(1000);
				}				
			


	
	/**
	 * [tJavaRow_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_6", false);
		start_Hash.put("tJavaRow_6", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row43");
					}
				
		int tos_count_tJavaRow_6 = 0;
		

int nb_line_tJavaRow_6 = 0;

 



/**
 * [tJavaRow_6 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_4", false);
		start_Hash.put("tFixedFlowInput_4", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_4";
	
	
		int tos_count_tFixedFlowInput_4 = 0;
		

	    for (int i_tFixedFlowInput_4 = 0 ; i_tFixedFlowInput_4 < 1 ; i_tFixedFlowInput_4++) {
	                	            	
    	            		row43.COD_DIVIPOLA = INDICADOR_REJECT_FORMAT.COD_DIVIPOLA;
    	            	        	            	
    	            		row43.INDICADOR = INDICADOR_REJECT_FORMAT.INDICADOR;
    	            	        	            	
    	            		row43.SEXO = INDICADOR_REJECT_FORMAT.SEXO;
    	            	        	            	
    	            		row43.EDAD = INDICADOR_REJECT_FORMAT.EDAD;
    	            	        	            	
    	            		row43.ETNIA = INDICADOR_REJECT_FORMAT.ETNIA;
    	            	        	            	
    	            		row43.CIE10 = INDICADOR_REJECT_FORMAT.CIE10;
    	            	        	            	
    	            		row43.PRIORIDAD = INDICADOR_REJECT_FORMAT.PRIORIDAD;
    	            	        	            	
    	            		row43.GRUPO_RIESGO = INDICADOR_REJECT_FORMAT.GRUPO_RIESGO;
    	            	        	            	
    	            		row43.ERROR = "Columna "+globalMap.get("filas")+" : "+context.ErrorIndicadorFormato;
    	            	

 



/**
 * [tFixedFlowInput_4 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_4 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_4";
	
	

 


	tos_count_tFixedFlowInput_4++;

/**
 * [tFixedFlowInput_4 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_4";
	
	

 



/**
 * [tFixedFlowInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_6 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row43"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.COD_DIVIPOLA_VAL = row43.COD_DIVIPOLA;
context.INDICADOR_VAL = row43.INDICADOR;
context.SEXO_VAL = row43.SEXO;
context.EDAD_VAL = row43.EDAD;
context.ETNIA_VAL = row43.ETNIA;
context.CIE10_VAL = row43.CIE10;
context.PRIORIDAD_VAL = row43.PRIORIDAD;
context.GRUPO_RIESGO_VAL = row43.GRUPO_RIESGO;
context.ERROR_VAL = row43.ERROR;

    nb_line_tJavaRow_6++;   

 


	tos_count_tJavaRow_6++;

/**
 * [tJavaRow_6 main ] stop
 */
	
	/**
	 * [tJavaRow_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_4";
	
	

 



/**
 * [tFixedFlowInput_4 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_4 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_4";
	
	

        }
        globalMap.put("tFixedFlowInput_4_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_4", true);
end_Hash.put("tFixedFlowInput_4", System.currentTimeMillis());




/**
 * [tFixedFlowInput_4 end ] stop
 */

	
	/**
	 * [tJavaRow_6 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

globalMap.put("tJavaRow_6_NB_LINE",nb_line_tJavaRow_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row43");
			  	}
			  	
 

ok_Hash.put("tJavaRow_6", true);
end_Hash.put("tJavaRow_6", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk21", 0, "ok");
				}
				tFixedFlowInput_21Process(globalMap);



/**
 * [tJavaRow_6 end ] stop
 */



						if(execStat){
							runStat.updateStatOnConnection("iterate4", 2, "exec" + NB_ITERATE_tFixedFlowInput_4);
						}				
					




	
	/**
	 * [tFlowToIterate_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_3";
	
	

 



/**
 * [tFlowToIterate_3 process_data_end ] stop
 */

} // End of branch "INDICADOR_REJECT_FORMAT"




	
	/**
	 * [tFilterRow_26 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_26";
	
	

 



/**
 * [tFilterRow_26 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_8 end ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	
    

		
			nb_line_tHashInput_8++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_10");
	


	globalMap.put("tHashInput_8_NB_LINE", nb_line_tHashInput_8);       

 

ok_Hash.put("tHashInput_8", true);
end_Hash.put("tHashInput_8", System.currentTimeMillis());




/**
 * [tHashInput_8 end ] stop
 */

	
	/**
	 * [tFilterRow_26 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_26";
	
	
    globalMap.put("tFilterRow_26_NB_LINE", nb_line_tFilterRow_26);
    globalMap.put("tFilterRow_26_NB_LINE_OK", nb_line_ok_tFilterRow_26);
    globalMap.put("tFilterRow_26_NB_LINE_REJECT", nb_line_reject_tFilterRow_26);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row33");
			  	}
			  	
 

ok_Hash.put("tFilterRow_26", true);
end_Hash.put("tFilterRow_26", System.currentTimeMillis());




/**
 * [tFilterRow_26 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row7 != null) {
						tHash_Lookup_row7.endGet();
					}
					globalMap.remove( "tHash_Lookup_row7" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"INDICADOR_ACCEPT_FORMAT");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tFlowToIterate_2 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_2";
	
	

globalMap.put("tFlowToIterate_2_NB_LINE",nb_line_tFlowToIterate_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"INDICADOR_REJECT_EXIST");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_2", true);
end_Hash.put("tFlowToIterate_2", System.currentTimeMillis());




/**
 * [tFlowToIterate_2 end ] stop
 */







	
	/**
	 * [tFlowToIterate_3 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_3";
	
	

globalMap.put("tFlowToIterate_3_NB_LINE",nb_line_tFlowToIterate_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"INDICADOR_REJECT_FORMAT");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_3", true);
end_Hash.put("tFlowToIterate_3", System.currentTimeMillis());




/**
 * [tFlowToIterate_3 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_8:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk14", 0, "ok");
								} 
							
							tHashInput_9Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row7"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_8 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 finally ] stop
 */

	
	/**
	 * [tFilterRow_26 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_26";
	
	

 



/**
 * [tFilterRow_26 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tFlowToIterate_2 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_2";
	
	

 



/**
 * [tFlowToIterate_2 finally ] stop
 */

	
	/**
	 * [tFixedFlowInput_2 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_7 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 finally ] stop
 */













	
	/**
	 * [tFlowToIterate_3 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_3";
	
	

 



/**
 * [tFlowToIterate_3 finally ] stop
 */

	
	/**
	 * [tFixedFlowInput_4 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_4";
	
	

 



/**
 * [tFixedFlowInput_4 finally ] stop
 */

	
	/**
	 * [tJavaRow_6 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_8_SUBPROCESS_STATE", 1);
	}
	


public static class row31Struct implements routines.system.IPersistableRow<row31Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row31Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row29Struct implements routines.system.IPersistableRow<row29Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row29Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class SEXO_REJECT_EXISTStruct implements routines.system.IPersistableRow<SEXO_REJECT_EXISTStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(SEXO_REJECT_EXISTStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class SEXO_ACCEPT_FORMATStruct implements routines.system.IPersistableRow<SEXO_ACCEPT_FORMATStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(SEXO_ACCEPT_FORMATStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class SEXO_REJECT_FORMATStruct implements routines.system.IPersistableRow<SEXO_REJECT_FORMATStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String errorMessage;

				public String getErrorMessage () {
					return this.errorMessage;
				}

				public Boolean errorMessageIsNullable(){
				    return true;
				}
				public Boolean errorMessageIsKey(){
				    return false;
				}
				public Integer errorMessageLength(){
				    return 255;
				}
				public Integer errorMessagePrecision(){
				    return 0;
				}
				public String errorMessageDefault(){
				
					return null;
				
				}
				public String errorMessageComment(){
				
				    return null;
				
				}
				public String errorMessagePattern(){
				
				    return null;
				
				}
				public String errorMessageOriginalDbColumnName(){
				
					return "errorMessage";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",errorMessage="+errorMessage);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(SEXO_REJECT_FORMATStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row34Struct implements routines.system.IPersistableRow<row34Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row34Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_9Struct implements routines.system.IPersistableRow<after_tHashInput_9Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_2Process(globalMap);

		row34Struct row34 = new row34Struct();
SEXO_ACCEPT_FORMATStruct SEXO_ACCEPT_FORMAT = new SEXO_ACCEPT_FORMATStruct();
SEXO_REJECT_EXISTStruct SEXO_REJECT_EXIST = new SEXO_REJECT_EXISTStruct();
row29Struct row29 = new row29Struct();
SEXO_REJECT_FORMATStruct SEXO_REJECT_FORMAT = new SEXO_REJECT_FORMATStruct();
row31Struct row31 = new row31Struct();






	
	/**
	 * [tFlowToIterate_4 begin ] start
	 */

				
			int NB_ITERATE_tFixedFlowInput_5 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_4", false);
		start_Hash.put("tFlowToIterate_4", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"SEXO_REJECT_EXIST");
					}
				
		int tos_count_tFlowToIterate_4 = 0;
		

int nb_line_tFlowToIterate_4 = 0;
int counter_tFlowToIterate_4 = 0;

 



/**
 * [tFlowToIterate_4 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"SEXO_ACCEPT_FORMAT");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct> tHash_Lookup_row11 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct>) 
					globalMap.get( "tHash_Lookup_row11" ))
					;					
					
	

row11Struct row11HashKey = new row11Struct();
row11Struct row11Default = new row11Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
SEXO_REJECT_EXISTStruct SEXO_REJECT_EXIST_tmp = new SEXO_REJECT_EXISTStruct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */




	
	/**
	 * [tFlowToIterate_5 begin ] start
	 */

				
			int NB_ITERATE_tFixedFlowInput_6 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_5", false);
		start_Hash.put("tFlowToIterate_5", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"SEXO_REJECT_FORMAT");
					}
				
		int tos_count_tFlowToIterate_5 = 0;
		

int nb_line_tFlowToIterate_5 = 0;
int counter_tFlowToIterate_5 = 0;

 



/**
 * [tFlowToIterate_5 begin ] stop
 */



	
	/**
	 * [tFilterRow_36 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_36", false);
		start_Hash.put("tFilterRow_36", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_36";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row34");
					}
				
		int tos_count_tFilterRow_36 = 0;
		
    int nb_line_tFilterRow_36 = 0;
    int nb_line_ok_tFilterRow_36 = 0;
    int nb_line_reject_tFilterRow_36 = 0;

    class Operator_tFilterRow_36 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_36(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_36 begin ] stop
 */



	
	/**
	 * [tHashInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_9", false);
		start_Hash.put("tHashInput_9", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_9";
	
	
		int tos_count_tHashInput_9 = 0;
		


int nb_line_tHashInput_9 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_9=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row42Struct> tHashFile_tHashInput_9 = mf_tHashInput_9.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_10");
if(tHashFile_tHashInput_9==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row42Struct> iterator_tHashInput_9 = tHashFile_tHashInput_9.iterator();
while (iterator_tHashInput_9.hasNext()) {
    row42Struct next_tHashInput_9 = iterator_tHashInput_9.next();

	row34.COD_DIVIPOLA = next_tHashInput_9.COD_DIVIPOLA;
	row34.INDICADOR = next_tHashInput_9.INDICADOR;
	row34.SEXO = next_tHashInput_9.SEXO;
	row34.EDAD = next_tHashInput_9.EDAD;
	row34.ETNIA = next_tHashInput_9.ETNIA;
	row34.CIE10 = next_tHashInput_9.CIE10;
	row34.PRIORIDAD = next_tHashInput_9.PRIORIDAD;
	row34.GRUPO_RIESGO = next_tHashInput_9.GRUPO_RIESGO;

 



/**
 * [tHashInput_9 begin ] stop
 */
	
	/**
	 * [tHashInput_9 main ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 


	tos_count_tHashInput_9++;

/**
 * [tHashInput_9 main ] stop
 */
	
	/**
	 * [tHashInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_36 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_36";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row34"
						
						);
					}
					

          SEXO_REJECT_FORMAT = null;
          SEXO_ACCEPT_FORMAT = null;
    Operator_tFilterRow_36 ope_tFilterRow_36 = new Operator_tFilterRow_36("&&");
      ope_tFilterRow_36.matches((//****************************************************************************************//
//*** VALIDACION COLUMNA SEXO ************************************************************//
//****************************************************************************************//
(ValidationRules.CifrasNumero(row34.SEXO) == 1)), "advanced condition failed");
    
    if (ope_tFilterRow_36.getMatchFlag()) {
              if(SEXO_ACCEPT_FORMAT == null){ 
                SEXO_ACCEPT_FORMAT = new SEXO_ACCEPT_FORMATStruct();
              }
               SEXO_ACCEPT_FORMAT.COD_DIVIPOLA = row34.COD_DIVIPOLA;
               SEXO_ACCEPT_FORMAT.INDICADOR = row34.INDICADOR;
               SEXO_ACCEPT_FORMAT.SEXO = row34.SEXO;
               SEXO_ACCEPT_FORMAT.EDAD = row34.EDAD;
               SEXO_ACCEPT_FORMAT.ETNIA = row34.ETNIA;
               SEXO_ACCEPT_FORMAT.CIE10 = row34.CIE10;
               SEXO_ACCEPT_FORMAT.PRIORIDAD = row34.PRIORIDAD;
               SEXO_ACCEPT_FORMAT.GRUPO_RIESGO = row34.GRUPO_RIESGO;    
      nb_line_ok_tFilterRow_36++;
    } else {
            if (SEXO_REJECT_FORMAT == null){
              SEXO_REJECT_FORMAT = new SEXO_REJECT_FORMATStruct();
            }
                SEXO_REJECT_FORMAT.COD_DIVIPOLA = row34.COD_DIVIPOLA;
                SEXO_REJECT_FORMAT.INDICADOR = row34.INDICADOR;
                SEXO_REJECT_FORMAT.SEXO = row34.SEXO;
                SEXO_REJECT_FORMAT.EDAD = row34.EDAD;
                SEXO_REJECT_FORMAT.ETNIA = row34.ETNIA;
                SEXO_REJECT_FORMAT.CIE10 = row34.CIE10;
                SEXO_REJECT_FORMAT.PRIORIDAD = row34.PRIORIDAD;
                SEXO_REJECT_FORMAT.GRUPO_RIESGO = row34.GRUPO_RIESGO;
	            SEXO_REJECT_FORMAT.errorMessage = ope_tFilterRow_36.getErrorMsg();
      nb_line_reject_tFilterRow_36++;
    }

nb_line_tFilterRow_36++;

 


	tos_count_tFilterRow_36++;

/**
 * [tFilterRow_36 main ] stop
 */
	
	/**
	 * [tFilterRow_36 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_36";
	
	

 



/**
 * [tFilterRow_36 process_data_begin ] stop
 */
// Start of branch "SEXO_ACCEPT_FORMAT"
if(SEXO_ACCEPT_FORMAT != null) { 



	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"SEXO_ACCEPT_FORMAT"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
						row11Struct row11 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row11" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow11 = false;
       		  	    	
       		  	    	
 							row11Struct row11ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row11HashKey.CODIGO_SEXO = SEXO_ACCEPT_FORMAT.SEXO ;
                        		    		

								
		                        	row11HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row11.lookup( row11HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row11 != null && tHash_Lookup_row11.getCount(row11HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row11' and it contains more one result from keys :  row11.CODIGO_SEXO = '" + row11HashKey.CODIGO_SEXO + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row11Struct fromLookup_row11 = null;
							row11 = row11Default;
										 
							
								 
							
							
								if (tHash_Lookup_row11 !=null && tHash_Lookup_row11.hasNext()) { // G 099
								
							
								
								fromLookup_row11 = tHash_Lookup_row11.next();

							
							
								} // G 099
							
							

							if(fromLookup_row11 != null) {
								row11 = fromLookup_row11;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

SEXO_REJECT_EXIST = null;

// ###### START REJECTS ##### 
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "SEXO_REJECT_EXIST"
if(SEXO_REJECT_EXIST != null) { 



	
	/**
	 * [tFlowToIterate_4 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"SEXO_REJECT_EXIST"
						
						);
					}
					


    	            
            globalMap.put("SEXO_REJECT_EXIST.COD_DIVIPOLA", SEXO_REJECT_EXIST.COD_DIVIPOLA);
    	            
            globalMap.put("SEXO_REJECT_EXIST.INDICADOR", SEXO_REJECT_EXIST.INDICADOR);
    	            
            globalMap.put("SEXO_REJECT_EXIST.SEXO", SEXO_REJECT_EXIST.SEXO);
    	            
            globalMap.put("SEXO_REJECT_EXIST.EDAD", SEXO_REJECT_EXIST.EDAD);
    	            
            globalMap.put("SEXO_REJECT_EXIST.ETNIA", SEXO_REJECT_EXIST.ETNIA);
    	            
            globalMap.put("SEXO_REJECT_EXIST.CIE10", SEXO_REJECT_EXIST.CIE10);
    	            
            globalMap.put("SEXO_REJECT_EXIST.PRIORIDAD", SEXO_REJECT_EXIST.PRIORIDAD);
    	            
            globalMap.put("SEXO_REJECT_EXIST.GRUPO_RIESGO", SEXO_REJECT_EXIST.GRUPO_RIESGO);
    	
 
	   nb_line_tFlowToIterate_4++;  
       counter_tFlowToIterate_4++;
       globalMap.put("tFlowToIterate_4_CURRENT_ITERATION", counter_tFlowToIterate_4);
 


	tos_count_tFlowToIterate_4++;

/**
 * [tFlowToIterate_4 main ] stop
 */
	
	/**
	 * [tFlowToIterate_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_4";
	
	

 



/**
 * [tFlowToIterate_4 process_data_begin ] stop
 */
	NB_ITERATE_tFixedFlowInput_5++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk40", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk31", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row29", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate5", 1, "exec" + NB_ITERATE_tFixedFlowInput_5);
					//Thread.sleep(1000);
				}				
			


	
	/**
	 * [tJavaRow_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_9", false);
		start_Hash.put("tJavaRow_9", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row29");
					}
				
		int tos_count_tJavaRow_9 = 0;
		

int nb_line_tJavaRow_9 = 0;

 



/**
 * [tJavaRow_9 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_5", false);
		start_Hash.put("tFixedFlowInput_5", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_5";
	
	
		int tos_count_tFixedFlowInput_5 = 0;
		

	    for (int i_tFixedFlowInput_5 = 0 ; i_tFixedFlowInput_5 < 1 ; i_tFixedFlowInput_5++) {
	                	            	
    	            		row29.COD_DIVIPOLA = SEXO_REJECT_EXIST.COD_DIVIPOLA;
    	            	        	            	
    	            		row29.INDICADOR = SEXO_REJECT_EXIST.INDICADOR;
    	            	        	            	
    	            		row29.SEXO = SEXO_REJECT_EXIST.SEXO;
    	            	        	            	
    	            		row29.EDAD = SEXO_REJECT_EXIST.EDAD;
    	            	        	            	
    	            		row29.ETNIA = SEXO_REJECT_EXIST.ETNIA;
    	            	        	            	
    	            		row29.CIE10 = SEXO_REJECT_EXIST.CIE10;
    	            	        	            	
    	            		row29.PRIORIDAD = SEXO_REJECT_EXIST.PRIORIDAD;
    	            	        	            	
    	            		row29.GRUPO_RIESGO = SEXO_REJECT_EXIST.GRUPO_RIESGO;
    	            	        	            	
    	            		row29.ERROR = "Columna "+globalMap.get("filas")+" : "+context.ErrorSexoExist;
    	            	

 



/**
 * [tFixedFlowInput_5 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_5 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_5";
	
	

 


	tos_count_tFixedFlowInput_5++;

/**
 * [tFixedFlowInput_5 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_5";
	
	

 



/**
 * [tFixedFlowInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_9 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row29"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.COD_DIVIPOLA_VAL = row29.COD_DIVIPOLA;
context.INDICADOR_VAL = row29.INDICADOR;
context.SEXO_VAL = row29.SEXO;
context.EDAD_VAL = row29.EDAD;
context.ETNIA_VAL = row29.ETNIA;
context.CIE10_VAL = row29.CIE10;
context.PRIORIDAD_VAL = row29.PRIORIDAD;
context.GRUPO_RIESGO_VAL = row29.GRUPO_RIESGO;
context.ERROR_VAL = row29.ERROR;

    nb_line_tJavaRow_9++;   

 


	tos_count_tJavaRow_9++;

/**
 * [tJavaRow_9 main ] stop
 */
	
	/**
	 * [tJavaRow_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_5";
	
	

 



/**
 * [tFixedFlowInput_5 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_5 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_5";
	
	

        }
        globalMap.put("tFixedFlowInput_5_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_5", true);
end_Hash.put("tFixedFlowInput_5", System.currentTimeMillis());




/**
 * [tFixedFlowInput_5 end ] stop
 */

	
	/**
	 * [tJavaRow_9 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

globalMap.put("tJavaRow_9_NB_LINE",nb_line_tJavaRow_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row29");
			  	}
			  	
 

ok_Hash.put("tJavaRow_9", true);
end_Hash.put("tJavaRow_9", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk31", 0, "ok");
				}
				tFixedFlowInput_21Process(globalMap);



/**
 * [tJavaRow_9 end ] stop
 */



						if(execStat){
							runStat.updateStatOnConnection("iterate5", 2, "exec" + NB_ITERATE_tFixedFlowInput_5);
						}				
					




	
	/**
	 * [tFlowToIterate_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_4";
	
	

 



/**
 * [tFlowToIterate_4 process_data_end ] stop
 */

} // End of branch "SEXO_REJECT_EXIST"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */

} // End of branch "SEXO_ACCEPT_FORMAT"




// Start of branch "SEXO_REJECT_FORMAT"
if(SEXO_REJECT_FORMAT != null) { 



	
	/**
	 * [tFlowToIterate_5 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"SEXO_REJECT_FORMAT"
						
						);
					}
					


    	            
            globalMap.put("SEXO_REJECT_FORMAT.COD_DIVIPOLA", SEXO_REJECT_FORMAT.COD_DIVIPOLA);
    	            
            globalMap.put("SEXO_REJECT_FORMAT.INDICADOR", SEXO_REJECT_FORMAT.INDICADOR);
    	            
            globalMap.put("SEXO_REJECT_FORMAT.SEXO", SEXO_REJECT_FORMAT.SEXO);
    	            
            globalMap.put("SEXO_REJECT_FORMAT.EDAD", SEXO_REJECT_FORMAT.EDAD);
    	            
            globalMap.put("SEXO_REJECT_FORMAT.ETNIA", SEXO_REJECT_FORMAT.ETNIA);
    	            
            globalMap.put("SEXO_REJECT_FORMAT.CIE10", SEXO_REJECT_FORMAT.CIE10);
    	            
            globalMap.put("SEXO_REJECT_FORMAT.PRIORIDAD", SEXO_REJECT_FORMAT.PRIORIDAD);
    	            
            globalMap.put("SEXO_REJECT_FORMAT.GRUPO_RIESGO", SEXO_REJECT_FORMAT.GRUPO_RIESGO);
    	            
            globalMap.put("SEXO_REJECT_FORMAT.errorMessage", SEXO_REJECT_FORMAT.errorMessage);
    	
 
	   nb_line_tFlowToIterate_5++;  
       counter_tFlowToIterate_5++;
       globalMap.put("tFlowToIterate_5_CURRENT_ITERATION", counter_tFlowToIterate_5);
 


	tos_count_tFlowToIterate_5++;

/**
 * [tFlowToIterate_5 main ] stop
 */
	
	/**
	 * [tFlowToIterate_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_5";
	
	

 



/**
 * [tFlowToIterate_5 process_data_begin ] stop
 */
	NB_ITERATE_tFixedFlowInput_6++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk40", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row31", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk32", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate6", 1, "exec" + NB_ITERATE_tFixedFlowInput_6);
					//Thread.sleep(1000);
				}				
			


	
	/**
	 * [tJavaRow_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_8", false);
		start_Hash.put("tJavaRow_8", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row31");
					}
				
		int tos_count_tJavaRow_8 = 0;
		

int nb_line_tJavaRow_8 = 0;

 



/**
 * [tJavaRow_8 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_6", false);
		start_Hash.put("tFixedFlowInput_6", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_6";
	
	
		int tos_count_tFixedFlowInput_6 = 0;
		

	    for (int i_tFixedFlowInput_6 = 0 ; i_tFixedFlowInput_6 < 1 ; i_tFixedFlowInput_6++) {
	                	            	
    	            		row31.COD_DIVIPOLA = SEXO_REJECT_FORMAT.COD_DIVIPOLA;
    	            	        	            	
    	            		row31.INDICADOR = SEXO_REJECT_FORMAT.INDICADOR;
    	            	        	            	
    	            		row31.SEXO = SEXO_REJECT_FORMAT.SEXO;
    	            	        	            	
    	            		row31.EDAD = SEXO_REJECT_FORMAT.EDAD;
    	            	        	            	
    	            		row31.ETNIA = SEXO_REJECT_FORMAT.ETNIA;
    	            	        	            	
    	            		row31.CIE10 = SEXO_REJECT_FORMAT.CIE10;
    	            	        	            	
    	            		row31.PRIORIDAD = SEXO_REJECT_FORMAT.PRIORIDAD;
    	            	        	            	
    	            		row31.GRUPO_RIESGO = SEXO_REJECT_FORMAT.GRUPO_RIESGO;
    	            	        	            	
    	            		row31.ERROR = "Columna "+globalMap.get("filas")+" : "+context.ErrorSexoFormato;
    	            	

 



/**
 * [tFixedFlowInput_6 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_6 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_6";
	
	

 


	tos_count_tFixedFlowInput_6++;

/**
 * [tFixedFlowInput_6 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_6";
	
	

 



/**
 * [tFixedFlowInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_8 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row31"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.COD_DIVIPOLA_VAL = row31.COD_DIVIPOLA;
context.INDICADOR_VAL = row31.INDICADOR;
context.SEXO_VAL = row31.SEXO;
context.EDAD_VAL = row31.EDAD;
context.ETNIA_VAL = row31.ETNIA;
context.CIE10_VAL = row31.CIE10;
context.PRIORIDAD_VAL = row31.PRIORIDAD;
context.GRUPO_RIESGO_VAL = row31.GRUPO_RIESGO;
context.ERROR_VAL = row31.ERROR;

    nb_line_tJavaRow_8++;   

 


	tos_count_tJavaRow_8++;

/**
 * [tJavaRow_8 main ] stop
 */
	
	/**
	 * [tJavaRow_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_6";
	
	

 



/**
 * [tFixedFlowInput_6 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_6 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_6";
	
	

        }
        globalMap.put("tFixedFlowInput_6_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_6", true);
end_Hash.put("tFixedFlowInput_6", System.currentTimeMillis());




/**
 * [tFixedFlowInput_6 end ] stop
 */

	
	/**
	 * [tJavaRow_8 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

globalMap.put("tJavaRow_8_NB_LINE",nb_line_tJavaRow_8);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row31");
			  	}
			  	
 

ok_Hash.put("tJavaRow_8", true);
end_Hash.put("tJavaRow_8", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk32", 0, "ok");
				}
				tFixedFlowInput_21Process(globalMap);



/**
 * [tJavaRow_8 end ] stop
 */



						if(execStat){
							runStat.updateStatOnConnection("iterate6", 2, "exec" + NB_ITERATE_tFixedFlowInput_6);
						}				
					




	
	/**
	 * [tFlowToIterate_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_5";
	
	

 



/**
 * [tFlowToIterate_5 process_data_end ] stop
 */

} // End of branch "SEXO_REJECT_FORMAT"




	
	/**
	 * [tFilterRow_36 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_36";
	
	

 



/**
 * [tFilterRow_36 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_9 end ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	
    

		
			nb_line_tHashInput_9++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_10");
	


	globalMap.put("tHashInput_9_NB_LINE", nb_line_tHashInput_9);       

 

ok_Hash.put("tHashInput_9", true);
end_Hash.put("tHashInput_9", System.currentTimeMillis());




/**
 * [tHashInput_9 end ] stop
 */

	
	/**
	 * [tFilterRow_36 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_36";
	
	
    globalMap.put("tFilterRow_36_NB_LINE", nb_line_tFilterRow_36);
    globalMap.put("tFilterRow_36_NB_LINE_OK", nb_line_ok_tFilterRow_36);
    globalMap.put("tFilterRow_36_NB_LINE_REJECT", nb_line_reject_tFilterRow_36);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row34");
			  	}
			  	
 

ok_Hash.put("tFilterRow_36", true);
end_Hash.put("tFilterRow_36", System.currentTimeMillis());




/**
 * [tFilterRow_36 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row11 != null) {
						tHash_Lookup_row11.endGet();
					}
					globalMap.remove( "tHash_Lookup_row11" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"SEXO_ACCEPT_FORMAT");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tFlowToIterate_4 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_4";
	
	

globalMap.put("tFlowToIterate_4_NB_LINE",nb_line_tFlowToIterate_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"SEXO_REJECT_EXIST");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_4", true);
end_Hash.put("tFlowToIterate_4", System.currentTimeMillis());




/**
 * [tFlowToIterate_4 end ] stop
 */







	
	/**
	 * [tFlowToIterate_5 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_5";
	
	

globalMap.put("tFlowToIterate_5_NB_LINE",nb_line_tFlowToIterate_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"SEXO_REJECT_FORMAT");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_5", true);
end_Hash.put("tFlowToIterate_5", System.currentTimeMillis());




/**
 * [tFlowToIterate_5 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_9:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk15", 0, "ok");
								} 
							
							tHashInput_10Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row11"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_9 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 finally ] stop
 */

	
	/**
	 * [tFilterRow_36 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_36";
	
	

 



/**
 * [tFilterRow_36 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tFlowToIterate_4 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_4";
	
	

 



/**
 * [tFlowToIterate_4 finally ] stop
 */

	
	/**
	 * [tFixedFlowInput_5 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_5";
	
	

 



/**
 * [tFixedFlowInput_5 finally ] stop
 */

	
	/**
	 * [tJavaRow_9 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 finally ] stop
 */













	
	/**
	 * [tFlowToIterate_5 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_5";
	
	

 



/**
 * [tFlowToIterate_5 finally ] stop
 */

	
	/**
	 * [tFixedFlowInput_6 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_6";
	
	

 



/**
 * [tFixedFlowInput_6 finally ] stop
 */

	
	/**
	 * [tJavaRow_8 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_9_SUBPROCESS_STATE", 1);
	}
	


public static class row27Struct implements routines.system.IPersistableRow<row27Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row27Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row25Struct implements routines.system.IPersistableRow<row25Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row25Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class EDAD_REJECT_EXISTStruct implements routines.system.IPersistableRow<EDAD_REJECT_EXISTStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(EDAD_REJECT_EXISTStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class EDAD_ACCEPT_FORMATStruct implements routines.system.IPersistableRow<EDAD_ACCEPT_FORMATStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(EDAD_ACCEPT_FORMATStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class EDAD_REJECT_FORMATStruct implements routines.system.IPersistableRow<EDAD_REJECT_FORMATStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String errorMessage;

				public String getErrorMessage () {
					return this.errorMessage;
				}

				public Boolean errorMessageIsNullable(){
				    return true;
				}
				public Boolean errorMessageIsKey(){
				    return false;
				}
				public Integer errorMessageLength(){
				    return 255;
				}
				public Integer errorMessagePrecision(){
				    return 0;
				}
				public String errorMessageDefault(){
				
					return null;
				
				}
				public String errorMessageComment(){
				
				    return null;
				
				}
				public String errorMessagePattern(){
				
				    return null;
				
				}
				public String errorMessageOriginalDbColumnName(){
				
					return "errorMessage";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",errorMessage="+errorMessage);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(EDAD_REJECT_FORMATStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row35Struct implements routines.system.IPersistableRow<row35Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row35Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_10Struct implements routines.system.IPersistableRow<after_tHashInput_10Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_3Process(globalMap);

		row35Struct row35 = new row35Struct();
EDAD_ACCEPT_FORMATStruct EDAD_ACCEPT_FORMAT = new EDAD_ACCEPT_FORMATStruct();
EDAD_REJECT_EXISTStruct EDAD_REJECT_EXIST = new EDAD_REJECT_EXISTStruct();
row25Struct row25 = new row25Struct();
EDAD_REJECT_FORMATStruct EDAD_REJECT_FORMAT = new EDAD_REJECT_FORMATStruct();
row27Struct row27 = new row27Struct();






	
	/**
	 * [tFlowToIterate_7 begin ] start
	 */

				
			int NB_ITERATE_tFixedFlowInput_9 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_7", false);
		start_Hash.put("tFlowToIterate_7", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"EDAD_REJECT_EXIST");
					}
				
		int tos_count_tFlowToIterate_7 = 0;
		

int nb_line_tFlowToIterate_7 = 0;
int counter_tFlowToIterate_7 = 0;

 



/**
 * [tFlowToIterate_7 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"EDAD_ACCEPT_FORMAT");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row19Struct> tHash_Lookup_row19 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row19Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row19Struct>) 
					globalMap.get( "tHash_Lookup_row19" ))
					;					
					
	

row19Struct row19HashKey = new row19Struct();
row19Struct row19Default = new row19Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
EDAD_REJECT_EXISTStruct EDAD_REJECT_EXIST_tmp = new EDAD_REJECT_EXISTStruct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */




	
	/**
	 * [tFlowToIterate_6 begin ] start
	 */

				
			int NB_ITERATE_tFixedFlowInput_8 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_6", false);
		start_Hash.put("tFlowToIterate_6", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"EDAD_REJECT_FORMAT");
					}
				
		int tos_count_tFlowToIterate_6 = 0;
		

int nb_line_tFlowToIterate_6 = 0;
int counter_tFlowToIterate_6 = 0;

 



/**
 * [tFlowToIterate_6 begin ] stop
 */



	
	/**
	 * [tFilterRow_43 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_43", false);
		start_Hash.put("tFilterRow_43", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_43";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row35");
					}
				
		int tos_count_tFilterRow_43 = 0;
		
    int nb_line_tFilterRow_43 = 0;
    int nb_line_ok_tFilterRow_43 = 0;
    int nb_line_reject_tFilterRow_43 = 0;

    class Operator_tFilterRow_43 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_43(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_43 begin ] stop
 */



	
	/**
	 * [tHashInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_10", false);
		start_Hash.put("tHashInput_10", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_10";
	
	
		int tos_count_tHashInput_10 = 0;
		


int nb_line_tHashInput_10 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_10=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row42Struct> tHashFile_tHashInput_10 = mf_tHashInput_10.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_10");
if(tHashFile_tHashInput_10==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row42Struct> iterator_tHashInput_10 = tHashFile_tHashInput_10.iterator();
while (iterator_tHashInput_10.hasNext()) {
    row42Struct next_tHashInput_10 = iterator_tHashInput_10.next();

	row35.COD_DIVIPOLA = next_tHashInput_10.COD_DIVIPOLA;
	row35.INDICADOR = next_tHashInput_10.INDICADOR;
	row35.SEXO = next_tHashInput_10.SEXO;
	row35.EDAD = next_tHashInput_10.EDAD;
	row35.ETNIA = next_tHashInput_10.ETNIA;
	row35.CIE10 = next_tHashInput_10.CIE10;
	row35.PRIORIDAD = next_tHashInput_10.PRIORIDAD;
	row35.GRUPO_RIESGO = next_tHashInput_10.GRUPO_RIESGO;

 



/**
 * [tHashInput_10 begin ] stop
 */
	
	/**
	 * [tHashInput_10 main ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 


	tos_count_tHashInput_10++;

/**
 * [tHashInput_10 main ] stop
 */
	
	/**
	 * [tHashInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_43 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_43";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row35"
						
						);
					}
					

          EDAD_REJECT_FORMAT = null;
          EDAD_ACCEPT_FORMAT = null;
    Operator_tFilterRow_43 ope_tFilterRow_43 = new Operator_tFilterRow_43("&&");
      ope_tFilterRow_43.matches((//****************************************************************************************//
//*** VALIDACION COLUMNA RANGO EDAD ******************************************************//
//****************************************************************************************//
(ValidationRules.CifrasNumero(row35.EDAD) >= 1) && (ValidationRules.CifrasNumero(row35.EDAD) <= 3)), "advanced condition failed");
    
    if (ope_tFilterRow_43.getMatchFlag()) {
              if(EDAD_ACCEPT_FORMAT == null){ 
                EDAD_ACCEPT_FORMAT = new EDAD_ACCEPT_FORMATStruct();
              }
               EDAD_ACCEPT_FORMAT.COD_DIVIPOLA = row35.COD_DIVIPOLA;
               EDAD_ACCEPT_FORMAT.INDICADOR = row35.INDICADOR;
               EDAD_ACCEPT_FORMAT.SEXO = row35.SEXO;
               EDAD_ACCEPT_FORMAT.EDAD = row35.EDAD;
               EDAD_ACCEPT_FORMAT.ETNIA = row35.ETNIA;
               EDAD_ACCEPT_FORMAT.CIE10 = row35.CIE10;
               EDAD_ACCEPT_FORMAT.PRIORIDAD = row35.PRIORIDAD;
               EDAD_ACCEPT_FORMAT.GRUPO_RIESGO = row35.GRUPO_RIESGO;    
      nb_line_ok_tFilterRow_43++;
    } else {
            if (EDAD_REJECT_FORMAT == null){
              EDAD_REJECT_FORMAT = new EDAD_REJECT_FORMATStruct();
            }
                EDAD_REJECT_FORMAT.COD_DIVIPOLA = row35.COD_DIVIPOLA;
                EDAD_REJECT_FORMAT.INDICADOR = row35.INDICADOR;
                EDAD_REJECT_FORMAT.SEXO = row35.SEXO;
                EDAD_REJECT_FORMAT.EDAD = row35.EDAD;
                EDAD_REJECT_FORMAT.ETNIA = row35.ETNIA;
                EDAD_REJECT_FORMAT.CIE10 = row35.CIE10;
                EDAD_REJECT_FORMAT.PRIORIDAD = row35.PRIORIDAD;
                EDAD_REJECT_FORMAT.GRUPO_RIESGO = row35.GRUPO_RIESGO;
	            EDAD_REJECT_FORMAT.errorMessage = ope_tFilterRow_43.getErrorMsg();
      nb_line_reject_tFilterRow_43++;
    }

nb_line_tFilterRow_43++;

 


	tos_count_tFilterRow_43++;

/**
 * [tFilterRow_43 main ] stop
 */
	
	/**
	 * [tFilterRow_43 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_43";
	
	

 



/**
 * [tFilterRow_43 process_data_begin ] stop
 */
// Start of branch "EDAD_ACCEPT_FORMAT"
if(EDAD_ACCEPT_FORMAT != null) { 



	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"EDAD_ACCEPT_FORMAT"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
						row19Struct row19 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row19" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow19 = false;
       		  	    	
       		  	    	
 							row19Struct row19ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row19HashKey.CODIGO_EDAD = EDAD_ACCEPT_FORMAT.EDAD ;
                        		    		

								
		                        	row19HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row19.lookup( row19HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row19 != null && tHash_Lookup_row19.getCount(row19HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row19' and it contains more one result from keys :  row19.CODIGO_EDAD = '" + row19HashKey.CODIGO_EDAD + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row19Struct fromLookup_row19 = null;
							row19 = row19Default;
										 
							
								 
							
							
								if (tHash_Lookup_row19 !=null && tHash_Lookup_row19.hasNext()) { // G 099
								
							
								
								fromLookup_row19 = tHash_Lookup_row19.next();

							
							
								} // G 099
							
							

							if(fromLookup_row19 != null) {
								row19 = fromLookup_row19;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

EDAD_REJECT_EXIST = null;

// ###### START REJECTS ##### 
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "EDAD_REJECT_EXIST"
if(EDAD_REJECT_EXIST != null) { 



	
	/**
	 * [tFlowToIterate_7 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"EDAD_REJECT_EXIST"
						
						);
					}
					


    	            
            globalMap.put("EDAD_REJECT_EXIST.COD_DIVIPOLA", EDAD_REJECT_EXIST.COD_DIVIPOLA);
    	            
            globalMap.put("EDAD_REJECT_EXIST.INDICADOR", EDAD_REJECT_EXIST.INDICADOR);
    	            
            globalMap.put("EDAD_REJECT_EXIST.SEXO", EDAD_REJECT_EXIST.SEXO);
    	            
            globalMap.put("EDAD_REJECT_EXIST.EDAD", EDAD_REJECT_EXIST.EDAD);
    	            
            globalMap.put("EDAD_REJECT_EXIST.ETNIA", EDAD_REJECT_EXIST.ETNIA);
    	            
            globalMap.put("EDAD_REJECT_EXIST.CIE10", EDAD_REJECT_EXIST.CIE10);
    	            
            globalMap.put("EDAD_REJECT_EXIST.PRIORIDAD", EDAD_REJECT_EXIST.PRIORIDAD);
    	            
            globalMap.put("EDAD_REJECT_EXIST.GRUPO_RIESGO", EDAD_REJECT_EXIST.GRUPO_RIESGO);
    	
 
	   nb_line_tFlowToIterate_7++;  
       counter_tFlowToIterate_7++;
       globalMap.put("tFlowToIterate_7_CURRENT_ITERATION", counter_tFlowToIterate_7);
 


	tos_count_tFlowToIterate_7++;

/**
 * [tFlowToIterate_7 main ] stop
 */
	
	/**
	 * [tFlowToIterate_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_7";
	
	

 



/**
 * [tFlowToIterate_7 process_data_begin ] stop
 */
	NB_ITERATE_tFixedFlowInput_9++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk40", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row25", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk29", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate8", 1, "exec" + NB_ITERATE_tFixedFlowInput_9);
					//Thread.sleep(1000);
				}				
			


	
	/**
	 * [tJavaRow_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_11", false);
		start_Hash.put("tJavaRow_11", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row25");
					}
				
		int tos_count_tJavaRow_11 = 0;
		

int nb_line_tJavaRow_11 = 0;

 



/**
 * [tJavaRow_11 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_9", false);
		start_Hash.put("tFixedFlowInput_9", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_9";
	
	
		int tos_count_tFixedFlowInput_9 = 0;
		

	    for (int i_tFixedFlowInput_9 = 0 ; i_tFixedFlowInput_9 < 1 ; i_tFixedFlowInput_9++) {
	                	            	
    	            		row25.COD_DIVIPOLA = EDAD_REJECT_EXIST.COD_DIVIPOLA;
    	            	        	            	
    	            		row25.INDICADOR = EDAD_REJECT_EXIST.INDICADOR;
    	            	        	            	
    	            		row25.SEXO = EDAD_REJECT_EXIST.SEXO;
    	            	        	            	
    	            		row25.EDAD = EDAD_REJECT_EXIST.EDAD;
    	            	        	            	
    	            		row25.ETNIA = EDAD_REJECT_EXIST.ETNIA;
    	            	        	            	
    	            		row25.CIE10 = EDAD_REJECT_EXIST.CIE10;
    	            	        	            	
    	            		row25.PRIORIDAD = EDAD_REJECT_EXIST.PRIORIDAD;
    	            	        	            	
    	            		row25.GRUPO_RIESGO = EDAD_REJECT_EXIST.GRUPO_RIESGO;
    	            	        	            	
    	            		row25.ERROR = "Columna "+globalMap.get("filas")+" : "+context.ErrorEdadExist;
    	            	

 



/**
 * [tFixedFlowInput_9 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_9 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_9";
	
	

 


	tos_count_tFixedFlowInput_9++;

/**
 * [tFixedFlowInput_9 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_9";
	
	

 



/**
 * [tFixedFlowInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_11 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.COD_DIVIPOLA_VAL = row25.COD_DIVIPOLA;
context.INDICADOR_VAL = row25.INDICADOR;
context.SEXO_VAL = row25.SEXO;
context.EDAD_VAL = row25.EDAD;
context.ETNIA_VAL = row25.ETNIA;
context.CIE10_VAL = row25.CIE10;
context.PRIORIDAD_VAL = row25.PRIORIDAD;
context.GRUPO_RIESGO_VAL = row25.GRUPO_RIESGO;
context.ERROR_VAL = row25.ERROR;

    nb_line_tJavaRow_11++;   

 


	tos_count_tJavaRow_11++;

/**
 * [tJavaRow_11 main ] stop
 */
	
	/**
	 * [tJavaRow_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

 



/**
 * [tJavaRow_11 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

 



/**
 * [tJavaRow_11 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_9";
	
	

 



/**
 * [tFixedFlowInput_9 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_9 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_9";
	
	

        }
        globalMap.put("tFixedFlowInput_9_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_9", true);
end_Hash.put("tFixedFlowInput_9", System.currentTimeMillis());




/**
 * [tFixedFlowInput_9 end ] stop
 */

	
	/**
	 * [tJavaRow_11 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

globalMap.put("tJavaRow_11_NB_LINE",nb_line_tJavaRow_11);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row25");
			  	}
			  	
 

ok_Hash.put("tJavaRow_11", true);
end_Hash.put("tJavaRow_11", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk29", 0, "ok");
				}
				tFixedFlowInput_21Process(globalMap);



/**
 * [tJavaRow_11 end ] stop
 */



						if(execStat){
							runStat.updateStatOnConnection("iterate8", 2, "exec" + NB_ITERATE_tFixedFlowInput_9);
						}				
					




	
	/**
	 * [tFlowToIterate_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_7";
	
	

 



/**
 * [tFlowToIterate_7 process_data_end ] stop
 */

} // End of branch "EDAD_REJECT_EXIST"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */

} // End of branch "EDAD_ACCEPT_FORMAT"




// Start of branch "EDAD_REJECT_FORMAT"
if(EDAD_REJECT_FORMAT != null) { 



	
	/**
	 * [tFlowToIterate_6 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"EDAD_REJECT_FORMAT"
						
						);
					}
					


    	            
            globalMap.put("EDAD_REJECT_FORMAT.COD_DIVIPOLA", EDAD_REJECT_FORMAT.COD_DIVIPOLA);
    	            
            globalMap.put("EDAD_REJECT_FORMAT.INDICADOR", EDAD_REJECT_FORMAT.INDICADOR);
    	            
            globalMap.put("EDAD_REJECT_FORMAT.SEXO", EDAD_REJECT_FORMAT.SEXO);
    	            
            globalMap.put("EDAD_REJECT_FORMAT.EDAD", EDAD_REJECT_FORMAT.EDAD);
    	            
            globalMap.put("EDAD_REJECT_FORMAT.ETNIA", EDAD_REJECT_FORMAT.ETNIA);
    	            
            globalMap.put("EDAD_REJECT_FORMAT.CIE10", EDAD_REJECT_FORMAT.CIE10);
    	            
            globalMap.put("EDAD_REJECT_FORMAT.PRIORIDAD", EDAD_REJECT_FORMAT.PRIORIDAD);
    	            
            globalMap.put("EDAD_REJECT_FORMAT.GRUPO_RIESGO", EDAD_REJECT_FORMAT.GRUPO_RIESGO);
    	            
            globalMap.put("EDAD_REJECT_FORMAT.errorMessage", EDAD_REJECT_FORMAT.errorMessage);
    	
 
	   nb_line_tFlowToIterate_6++;  
       counter_tFlowToIterate_6++;
       globalMap.put("tFlowToIterate_6_CURRENT_ITERATION", counter_tFlowToIterate_6);
 


	tos_count_tFlowToIterate_6++;

/**
 * [tFlowToIterate_6 main ] stop
 */
	
	/**
	 * [tFlowToIterate_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_6";
	
	

 



/**
 * [tFlowToIterate_6 process_data_begin ] stop
 */
	NB_ITERATE_tFixedFlowInput_8++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk40", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row27", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk30", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate7", 1, "exec" + NB_ITERATE_tFixedFlowInput_8);
					//Thread.sleep(1000);
				}				
			


	
	/**
	 * [tJavaRow_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_10", false);
		start_Hash.put("tJavaRow_10", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row27");
					}
				
		int tos_count_tJavaRow_10 = 0;
		

int nb_line_tJavaRow_10 = 0;

 



/**
 * [tJavaRow_10 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_8", false);
		start_Hash.put("tFixedFlowInput_8", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_8";
	
	
		int tos_count_tFixedFlowInput_8 = 0;
		

	    for (int i_tFixedFlowInput_8 = 0 ; i_tFixedFlowInput_8 < 1 ; i_tFixedFlowInput_8++) {
	                	            	
    	            		row27.COD_DIVIPOLA = EDAD_REJECT_FORMAT.COD_DIVIPOLA;
    	            	        	            	
    	            		row27.INDICADOR = EDAD_REJECT_FORMAT.INDICADOR;
    	            	        	            	
    	            		row27.SEXO = EDAD_REJECT_FORMAT.SEXO;
    	            	        	            	
    	            		row27.EDAD = EDAD_REJECT_FORMAT.EDAD;
    	            	        	            	
    	            		row27.ETNIA = EDAD_REJECT_FORMAT.ETNIA;
    	            	        	            	
    	            		row27.CIE10 = EDAD_REJECT_FORMAT.CIE10;
    	            	        	            	
    	            		row27.PRIORIDAD = EDAD_REJECT_FORMAT.PRIORIDAD;
    	            	        	            	
    	            		row27.GRUPO_RIESGO = EDAD_REJECT_FORMAT.GRUPO_RIESGO;
    	            	        	            	
    	            		row27.ERROR = "Columna "+globalMap.get("filas")+" : "+context.ErrorEdadFormato;
    	            	

 



/**
 * [tFixedFlowInput_8 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_8 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_8";
	
	

 


	tos_count_tFixedFlowInput_8++;

/**
 * [tFixedFlowInput_8 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_8";
	
	

 



/**
 * [tFixedFlowInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_10 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row27"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.COD_DIVIPOLA_VAL = row27.COD_DIVIPOLA;
context.INDICADOR_VAL = row27.INDICADOR;
context.SEXO_VAL = row27.SEXO;
context.EDAD_VAL = row27.EDAD;
context.ETNIA_VAL = row27.ETNIA;
context.CIE10_VAL = row27.CIE10;
context.PRIORIDAD_VAL = row27.PRIORIDAD;
context.GRUPO_RIESGO_VAL = row27.GRUPO_RIESGO;
context.ERROR_VAL = row27.ERROR;

    nb_line_tJavaRow_10++;   

 


	tos_count_tJavaRow_10++;

/**
 * [tJavaRow_10 main ] stop
 */
	
	/**
	 * [tJavaRow_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

 



/**
 * [tJavaRow_10 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

 



/**
 * [tJavaRow_10 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_8";
	
	

 



/**
 * [tFixedFlowInput_8 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_8 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_8";
	
	

        }
        globalMap.put("tFixedFlowInput_8_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_8", true);
end_Hash.put("tFixedFlowInput_8", System.currentTimeMillis());




/**
 * [tFixedFlowInput_8 end ] stop
 */

	
	/**
	 * [tJavaRow_10 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

globalMap.put("tJavaRow_10_NB_LINE",nb_line_tJavaRow_10);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row27");
			  	}
			  	
 

ok_Hash.put("tJavaRow_10", true);
end_Hash.put("tJavaRow_10", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk30", 0, "ok");
				}
				tFixedFlowInput_21Process(globalMap);



/**
 * [tJavaRow_10 end ] stop
 */



						if(execStat){
							runStat.updateStatOnConnection("iterate7", 2, "exec" + NB_ITERATE_tFixedFlowInput_8);
						}				
					




	
	/**
	 * [tFlowToIterate_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_6";
	
	

 



/**
 * [tFlowToIterate_6 process_data_end ] stop
 */

} // End of branch "EDAD_REJECT_FORMAT"




	
	/**
	 * [tFilterRow_43 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_43";
	
	

 



/**
 * [tFilterRow_43 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_10 end ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	
    

		
			nb_line_tHashInput_10++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_10");
	


	globalMap.put("tHashInput_10_NB_LINE", nb_line_tHashInput_10);       

 

ok_Hash.put("tHashInput_10", true);
end_Hash.put("tHashInput_10", System.currentTimeMillis());




/**
 * [tHashInput_10 end ] stop
 */

	
	/**
	 * [tFilterRow_43 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_43";
	
	
    globalMap.put("tFilterRow_43_NB_LINE", nb_line_tFilterRow_43);
    globalMap.put("tFilterRow_43_NB_LINE_OK", nb_line_ok_tFilterRow_43);
    globalMap.put("tFilterRow_43_NB_LINE_REJECT", nb_line_reject_tFilterRow_43);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row35");
			  	}
			  	
 

ok_Hash.put("tFilterRow_43", true);
end_Hash.put("tFilterRow_43", System.currentTimeMillis());




/**
 * [tFilterRow_43 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row19 != null) {
						tHash_Lookup_row19.endGet();
					}
					globalMap.remove( "tHash_Lookup_row19" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"EDAD_ACCEPT_FORMAT");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tFlowToIterate_7 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_7";
	
	

globalMap.put("tFlowToIterate_7_NB_LINE",nb_line_tFlowToIterate_7);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"EDAD_REJECT_EXIST");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_7", true);
end_Hash.put("tFlowToIterate_7", System.currentTimeMillis());




/**
 * [tFlowToIterate_7 end ] stop
 */







	
	/**
	 * [tFlowToIterate_6 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_6";
	
	

globalMap.put("tFlowToIterate_6_NB_LINE",nb_line_tFlowToIterate_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"EDAD_REJECT_FORMAT");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_6", true);
end_Hash.put("tFlowToIterate_6", System.currentTimeMillis());




/**
 * [tFlowToIterate_6 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_10:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk18", 0, "ok");
								} 
							
							tHashInput_11Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row19"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_10 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 finally ] stop
 */

	
	/**
	 * [tFilterRow_43 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_43";
	
	

 



/**
 * [tFilterRow_43 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tFlowToIterate_7 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_7";
	
	

 



/**
 * [tFlowToIterate_7 finally ] stop
 */

	
	/**
	 * [tFixedFlowInput_9 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_9";
	
	

 



/**
 * [tFixedFlowInput_9 finally ] stop
 */

	
	/**
	 * [tJavaRow_11 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

 



/**
 * [tJavaRow_11 finally ] stop
 */













	
	/**
	 * [tFlowToIterate_6 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_6";
	
	

 



/**
 * [tFlowToIterate_6 finally ] stop
 */

	
	/**
	 * [tFixedFlowInput_8 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_8";
	
	

 



/**
 * [tFixedFlowInput_8 finally ] stop
 */

	
	/**
	 * [tJavaRow_10 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

 



/**
 * [tJavaRow_10 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_10_SUBPROCESS_STATE", 1);
	}
	


public static class row24Struct implements routines.system.IPersistableRow<row24Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row20Struct implements routines.system.IPersistableRow<row20Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row20Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class ETNIA_REJECT_EXISTStruct implements routines.system.IPersistableRow<ETNIA_REJECT_EXISTStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(ETNIA_REJECT_EXISTStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class ETNIA_ACCEPT_FORMATStruct implements routines.system.IPersistableRow<ETNIA_ACCEPT_FORMATStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(ETNIA_ACCEPT_FORMATStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class ETNIA_REJECT_FORMATStruct implements routines.system.IPersistableRow<ETNIA_REJECT_FORMATStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String errorMessage;

				public String getErrorMessage () {
					return this.errorMessage;
				}

				public Boolean errorMessageIsNullable(){
				    return true;
				}
				public Boolean errorMessageIsKey(){
				    return false;
				}
				public Integer errorMessageLength(){
				    return 255;
				}
				public Integer errorMessagePrecision(){
				    return 0;
				}
				public String errorMessageDefault(){
				
					return null;
				
				}
				public String errorMessageComment(){
				
				    return null;
				
				}
				public String errorMessagePattern(){
				
				    return null;
				
				}
				public String errorMessageOriginalDbColumnName(){
				
					return "errorMessage";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",errorMessage="+errorMessage);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(ETNIA_REJECT_FORMATStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row36Struct implements routines.system.IPersistableRow<row36Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row36Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_11Struct implements routines.system.IPersistableRow<after_tHashInput_11Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_4Process(globalMap);

		row36Struct row36 = new row36Struct();
ETNIA_ACCEPT_FORMATStruct ETNIA_ACCEPT_FORMAT = new ETNIA_ACCEPT_FORMATStruct();
ETNIA_REJECT_EXISTStruct ETNIA_REJECT_EXIST = new ETNIA_REJECT_EXISTStruct();
row20Struct row20 = new row20Struct();
ETNIA_REJECT_FORMATStruct ETNIA_REJECT_FORMAT = new ETNIA_REJECT_FORMATStruct();
row24Struct row24 = new row24Struct();






	
	/**
	 * [tFlowToIterate_9 begin ] start
	 */

				
			int NB_ITERATE_tFixedFlowInput_12 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_9", false);
		start_Hash.put("tFlowToIterate_9", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"ETNIA_REJECT_EXIST");
					}
				
		int tos_count_tFlowToIterate_9 = 0;
		

int nb_line_tFlowToIterate_9 = 0;
int counter_tFlowToIterate_9 = 0;

 



/**
 * [tFlowToIterate_9 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"ETNIA_ACCEPT_FORMAT");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row26Struct> tHash_Lookup_row26 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row26Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row26Struct>) 
					globalMap.get( "tHash_Lookup_row26" ))
					;					
					
	

row26Struct row26HashKey = new row26Struct();
row26Struct row26Default = new row26Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
ETNIA_REJECT_EXISTStruct ETNIA_REJECT_EXIST_tmp = new ETNIA_REJECT_EXISTStruct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */




	
	/**
	 * [tFlowToIterate_8 begin ] start
	 */

				
			int NB_ITERATE_tFixedFlowInput_11 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_8", false);
		start_Hash.put("tFlowToIterate_8", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"ETNIA_REJECT_FORMAT");
					}
				
		int tos_count_tFlowToIterate_8 = 0;
		

int nb_line_tFlowToIterate_8 = 0;
int counter_tFlowToIterate_8 = 0;

 



/**
 * [tFlowToIterate_8 begin ] stop
 */



	
	/**
	 * [tFilterRow_54 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_54", false);
		start_Hash.put("tFilterRow_54", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_54";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row36");
					}
				
		int tos_count_tFilterRow_54 = 0;
		
    int nb_line_tFilterRow_54 = 0;
    int nb_line_ok_tFilterRow_54 = 0;
    int nb_line_reject_tFilterRow_54 = 0;

    class Operator_tFilterRow_54 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_54(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_54 begin ] stop
 */



	
	/**
	 * [tHashInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_11", false);
		start_Hash.put("tHashInput_11", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_11";
	
	
		int tos_count_tHashInput_11 = 0;
		


int nb_line_tHashInput_11 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_11=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row42Struct> tHashFile_tHashInput_11 = mf_tHashInput_11.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_10");
if(tHashFile_tHashInput_11==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row42Struct> iterator_tHashInput_11 = tHashFile_tHashInput_11.iterator();
while (iterator_tHashInput_11.hasNext()) {
    row42Struct next_tHashInput_11 = iterator_tHashInput_11.next();

	row36.COD_DIVIPOLA = next_tHashInput_11.COD_DIVIPOLA;
	row36.INDICADOR = next_tHashInput_11.INDICADOR;
	row36.SEXO = next_tHashInput_11.SEXO;
	row36.EDAD = next_tHashInput_11.EDAD;
	row36.ETNIA = next_tHashInput_11.ETNIA;
	row36.CIE10 = next_tHashInput_11.CIE10;
	row36.PRIORIDAD = next_tHashInput_11.PRIORIDAD;
	row36.GRUPO_RIESGO = next_tHashInput_11.GRUPO_RIESGO;

 



/**
 * [tHashInput_11 begin ] stop
 */
	
	/**
	 * [tHashInput_11 main ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 


	tos_count_tHashInput_11++;

/**
 * [tHashInput_11 main ] stop
 */
	
	/**
	 * [tHashInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_54 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_54";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row36"
						
						);
					}
					

          ETNIA_REJECT_FORMAT = null;
          ETNIA_ACCEPT_FORMAT = null;
    Operator_tFilterRow_54 ope_tFilterRow_54 = new Operator_tFilterRow_54("&&");
      ope_tFilterRow_54.matches((//****************************************************************************************//
//*** VALIDACION COLUMNA ETNIA ***********************************************************//
//****************************************************************************************//
ValidationRules.CifrasNumero(row36.ETNIA) == 1), "advanced condition failed");
    
    if (ope_tFilterRow_54.getMatchFlag()) {
              if(ETNIA_ACCEPT_FORMAT == null){ 
                ETNIA_ACCEPT_FORMAT = new ETNIA_ACCEPT_FORMATStruct();
              }
               ETNIA_ACCEPT_FORMAT.COD_DIVIPOLA = row36.COD_DIVIPOLA;
               ETNIA_ACCEPT_FORMAT.INDICADOR = row36.INDICADOR;
               ETNIA_ACCEPT_FORMAT.SEXO = row36.SEXO;
               ETNIA_ACCEPT_FORMAT.EDAD = row36.EDAD;
               ETNIA_ACCEPT_FORMAT.ETNIA = row36.ETNIA;
               ETNIA_ACCEPT_FORMAT.CIE10 = row36.CIE10;
               ETNIA_ACCEPT_FORMAT.PRIORIDAD = row36.PRIORIDAD;
               ETNIA_ACCEPT_FORMAT.GRUPO_RIESGO = row36.GRUPO_RIESGO;    
      nb_line_ok_tFilterRow_54++;
    } else {
            if (ETNIA_REJECT_FORMAT == null){
              ETNIA_REJECT_FORMAT = new ETNIA_REJECT_FORMATStruct();
            }
                ETNIA_REJECT_FORMAT.COD_DIVIPOLA = row36.COD_DIVIPOLA;
                ETNIA_REJECT_FORMAT.INDICADOR = row36.INDICADOR;
                ETNIA_REJECT_FORMAT.SEXO = row36.SEXO;
                ETNIA_REJECT_FORMAT.EDAD = row36.EDAD;
                ETNIA_REJECT_FORMAT.ETNIA = row36.ETNIA;
                ETNIA_REJECT_FORMAT.CIE10 = row36.CIE10;
                ETNIA_REJECT_FORMAT.PRIORIDAD = row36.PRIORIDAD;
                ETNIA_REJECT_FORMAT.GRUPO_RIESGO = row36.GRUPO_RIESGO;
	            ETNIA_REJECT_FORMAT.errorMessage = ope_tFilterRow_54.getErrorMsg();
      nb_line_reject_tFilterRow_54++;
    }

nb_line_tFilterRow_54++;

 


	tos_count_tFilterRow_54++;

/**
 * [tFilterRow_54 main ] stop
 */
	
	/**
	 * [tFilterRow_54 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_54";
	
	

 



/**
 * [tFilterRow_54 process_data_begin ] stop
 */
// Start of branch "ETNIA_ACCEPT_FORMAT"
if(ETNIA_ACCEPT_FORMAT != null) { 



	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"ETNIA_ACCEPT_FORMAT"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
						row26Struct row26 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_4 = false;
		boolean mainRowRejected_tMap_4 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row26" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow26 = false;
       		  	    	
       		  	    	
 							row26Struct row26ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row26HashKey.CODIGO_ETNIA = ETNIA_ACCEPT_FORMAT.ETNIA ;
                        		    		

								
		                        	row26HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row26.lookup( row26HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row26 != null && tHash_Lookup_row26.getCount(row26HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row26' and it contains more one result from keys :  row26.CODIGO_ETNIA = '" + row26HashKey.CODIGO_ETNIA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row26Struct fromLookup_row26 = null;
							row26 = row26Default;
										 
							
								 
							
							
								if (tHash_Lookup_row26 !=null && tHash_Lookup_row26.hasNext()) { // G 099
								
							
								
								fromLookup_row26 = tHash_Lookup_row26.next();

							
							
								} // G 099
							
							

							if(fromLookup_row26 != null) {
								row26 = fromLookup_row26;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

ETNIA_REJECT_EXIST = null;

// ###### START REJECTS ##### 
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "ETNIA_REJECT_EXIST"
if(ETNIA_REJECT_EXIST != null) { 



	
	/**
	 * [tFlowToIterate_9 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"ETNIA_REJECT_EXIST"
						
						);
					}
					


    	            
            globalMap.put("ETNIA_REJECT_EXIST.COD_DIVIPOLA", ETNIA_REJECT_EXIST.COD_DIVIPOLA);
    	            
            globalMap.put("ETNIA_REJECT_EXIST.INDICADOR", ETNIA_REJECT_EXIST.INDICADOR);
    	            
            globalMap.put("ETNIA_REJECT_EXIST.SEXO", ETNIA_REJECT_EXIST.SEXO);
    	            
            globalMap.put("ETNIA_REJECT_EXIST.EDAD", ETNIA_REJECT_EXIST.EDAD);
    	            
            globalMap.put("ETNIA_REJECT_EXIST.ETNIA", ETNIA_REJECT_EXIST.ETNIA);
    	            
            globalMap.put("ETNIA_REJECT_EXIST.CIE10", ETNIA_REJECT_EXIST.CIE10);
    	            
            globalMap.put("ETNIA_REJECT_EXIST.PRIORIDAD", ETNIA_REJECT_EXIST.PRIORIDAD);
    	            
            globalMap.put("ETNIA_REJECT_EXIST.GRUPO_RIESGO", ETNIA_REJECT_EXIST.GRUPO_RIESGO);
    	
 
	   nb_line_tFlowToIterate_9++;  
       counter_tFlowToIterate_9++;
       globalMap.put("tFlowToIterate_9_CURRENT_ITERATION", counter_tFlowToIterate_9);
 


	tos_count_tFlowToIterate_9++;

/**
 * [tFlowToIterate_9 main ] stop
 */
	
	/**
	 * [tFlowToIterate_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_9";
	
	

 



/**
 * [tFlowToIterate_9 process_data_begin ] stop
 */
	NB_ITERATE_tFixedFlowInput_12++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("row20", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk40", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk27", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate10", 1, "exec" + NB_ITERATE_tFixedFlowInput_12);
					//Thread.sleep(1000);
				}				
			


	
	/**
	 * [tJavaRow_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_13", false);
		start_Hash.put("tJavaRow_13", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row20");
					}
				
		int tos_count_tJavaRow_13 = 0;
		

int nb_line_tJavaRow_13 = 0;

 



/**
 * [tJavaRow_13 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_12", false);
		start_Hash.put("tFixedFlowInput_12", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_12";
	
	
		int tos_count_tFixedFlowInput_12 = 0;
		

	    for (int i_tFixedFlowInput_12 = 0 ; i_tFixedFlowInput_12 < 1 ; i_tFixedFlowInput_12++) {
	                	            	
    	            		row20.COD_DIVIPOLA = ETNIA_REJECT_EXIST.COD_DIVIPOLA;
    	            	        	            	
    	            		row20.INDICADOR = ETNIA_REJECT_EXIST.INDICADOR;
    	            	        	            	
    	            		row20.SEXO = ETNIA_REJECT_EXIST.SEXO;
    	            	        	            	
    	            		row20.EDAD = ETNIA_REJECT_EXIST.EDAD;
    	            	        	            	
    	            		row20.ETNIA = ETNIA_REJECT_EXIST.ETNIA;
    	            	        	            	
    	            		row20.CIE10 = ETNIA_REJECT_EXIST.CIE10;
    	            	        	            	
    	            		row20.PRIORIDAD = ETNIA_REJECT_EXIST.PRIORIDAD;
    	            	        	            	
    	            		row20.GRUPO_RIESGO = ETNIA_REJECT_EXIST.GRUPO_RIESGO;
    	            	        	            	
    	            		row20.ERROR = "Columna "+globalMap.get("filas")+" : "+context.ErrorEtniaExist;
    	            	

 



/**
 * [tFixedFlowInput_12 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_12 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_12";
	
	

 


	tos_count_tFixedFlowInput_12++;

/**
 * [tFixedFlowInput_12 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_12";
	
	

 



/**
 * [tFixedFlowInput_12 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_13 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row20"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.COD_DIVIPOLA_VAL = row20.COD_DIVIPOLA;
context.INDICADOR_VAL = row20.INDICADOR;
context.SEXO_VAL = row20.SEXO;
context.EDAD_VAL = row20.EDAD;
context.ETNIA_VAL = row20.ETNIA;
context.CIE10_VAL = row20.CIE10;
context.PRIORIDAD_VAL = row20.PRIORIDAD;
context.GRUPO_RIESGO_VAL = row20.GRUPO_RIESGO;
context.ERROR_VAL = row20.ERROR;

    nb_line_tJavaRow_13++;   

 


	tos_count_tJavaRow_13++;

/**
 * [tJavaRow_13 main ] stop
 */
	
	/**
	 * [tJavaRow_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_13";
	
	

 



/**
 * [tJavaRow_13 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_13";
	
	

 



/**
 * [tJavaRow_13 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_12";
	
	

 



/**
 * [tFixedFlowInput_12 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_12 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_12";
	
	

        }
        globalMap.put("tFixedFlowInput_12_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_12", true);
end_Hash.put("tFixedFlowInput_12", System.currentTimeMillis());




/**
 * [tFixedFlowInput_12 end ] stop
 */

	
	/**
	 * [tJavaRow_13 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_13";
	
	

globalMap.put("tJavaRow_13_NB_LINE",nb_line_tJavaRow_13);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row20");
			  	}
			  	
 

ok_Hash.put("tJavaRow_13", true);
end_Hash.put("tJavaRow_13", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk27", 0, "ok");
				}
				tFixedFlowInput_21Process(globalMap);



/**
 * [tJavaRow_13 end ] stop
 */



						if(execStat){
							runStat.updateStatOnConnection("iterate10", 2, "exec" + NB_ITERATE_tFixedFlowInput_12);
						}				
					




	
	/**
	 * [tFlowToIterate_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_9";
	
	

 



/**
 * [tFlowToIterate_9 process_data_end ] stop
 */

} // End of branch "ETNIA_REJECT_EXIST"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_end ] stop
 */

} // End of branch "ETNIA_ACCEPT_FORMAT"




// Start of branch "ETNIA_REJECT_FORMAT"
if(ETNIA_REJECT_FORMAT != null) { 



	
	/**
	 * [tFlowToIterate_8 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"ETNIA_REJECT_FORMAT"
						
						);
					}
					


    	            
            globalMap.put("ETNIA_REJECT_FORMAT.COD_DIVIPOLA", ETNIA_REJECT_FORMAT.COD_DIVIPOLA);
    	            
            globalMap.put("ETNIA_REJECT_FORMAT.INDICADOR", ETNIA_REJECT_FORMAT.INDICADOR);
    	            
            globalMap.put("ETNIA_REJECT_FORMAT.SEXO", ETNIA_REJECT_FORMAT.SEXO);
    	            
            globalMap.put("ETNIA_REJECT_FORMAT.EDAD", ETNIA_REJECT_FORMAT.EDAD);
    	            
            globalMap.put("ETNIA_REJECT_FORMAT.ETNIA", ETNIA_REJECT_FORMAT.ETNIA);
    	            
            globalMap.put("ETNIA_REJECT_FORMAT.CIE10", ETNIA_REJECT_FORMAT.CIE10);
    	            
            globalMap.put("ETNIA_REJECT_FORMAT.PRIORIDAD", ETNIA_REJECT_FORMAT.PRIORIDAD);
    	            
            globalMap.put("ETNIA_REJECT_FORMAT.GRUPO_RIESGO", ETNIA_REJECT_FORMAT.GRUPO_RIESGO);
    	            
            globalMap.put("ETNIA_REJECT_FORMAT.errorMessage", ETNIA_REJECT_FORMAT.errorMessage);
    	
 
	   nb_line_tFlowToIterate_8++;  
       counter_tFlowToIterate_8++;
       globalMap.put("tFlowToIterate_8_CURRENT_ITERATION", counter_tFlowToIterate_8);
 


	tos_count_tFlowToIterate_8++;

/**
 * [tFlowToIterate_8 main ] stop
 */
	
	/**
	 * [tFlowToIterate_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_8";
	
	

 



/**
 * [tFlowToIterate_8 process_data_begin ] stop
 */
	NB_ITERATE_tFixedFlowInput_11++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk40", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row24", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk28", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate9", 1, "exec" + NB_ITERATE_tFixedFlowInput_11);
					//Thread.sleep(1000);
				}				
			


	
	/**
	 * [tJavaRow_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_12", false);
		start_Hash.put("tJavaRow_12", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tJavaRow_12 = 0;
		

int nb_line_tJavaRow_12 = 0;

 



/**
 * [tJavaRow_12 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_11", false);
		start_Hash.put("tFixedFlowInput_11", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_11";
	
	
		int tos_count_tFixedFlowInput_11 = 0;
		

	    for (int i_tFixedFlowInput_11 = 0 ; i_tFixedFlowInput_11 < 1 ; i_tFixedFlowInput_11++) {
	                	            	
    	            		row24.COD_DIVIPOLA = ETNIA_REJECT_FORMAT.COD_DIVIPOLA;
    	            	        	            	
    	            		row24.INDICADOR = ETNIA_REJECT_FORMAT.INDICADOR;
    	            	        	            	
    	            		row24.SEXO = ETNIA_REJECT_FORMAT.SEXO;
    	            	        	            	
    	            		row24.EDAD = ETNIA_REJECT_FORMAT.EDAD;
    	            	        	            	
    	            		row24.ETNIA = ETNIA_REJECT_FORMAT.ETNIA;
    	            	        	            	
    	            		row24.CIE10 = ETNIA_REJECT_FORMAT.CIE10;
    	            	        	            	
    	            		row24.PRIORIDAD = ETNIA_REJECT_FORMAT.PRIORIDAD;
    	            	        	            	
    	            		row24.GRUPO_RIESGO = ETNIA_REJECT_FORMAT.GRUPO_RIESGO;
    	            	        	            	
    	            		row24.ERROR = "Columna "+globalMap.get("filas")+" : "+context.ErrorEtniaFormato;
    	            	

 



/**
 * [tFixedFlowInput_11 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_11 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_11";
	
	

 


	tos_count_tFixedFlowInput_11++;

/**
 * [tFixedFlowInput_11 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_11";
	
	

 



/**
 * [tFixedFlowInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_12 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.COD_DIVIPOLA_VAL = row24.COD_DIVIPOLA;
context.INDICADOR_VAL = row24.INDICADOR;
context.SEXO_VAL = row24.SEXO;
context.EDAD_VAL = row24.EDAD;
context.ETNIA_VAL = row24.ETNIA;
context.CIE10_VAL = row24.CIE10;
context.PRIORIDAD_VAL = row24.PRIORIDAD;
context.GRUPO_RIESGO_VAL = row24.GRUPO_RIESGO;
context.ERROR_VAL = row24.ERROR;

    nb_line_tJavaRow_12++;   

 


	tos_count_tJavaRow_12++;

/**
 * [tJavaRow_12 main ] stop
 */
	
	/**
	 * [tJavaRow_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	

 



/**
 * [tJavaRow_12 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	

 



/**
 * [tJavaRow_12 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_11";
	
	

 



/**
 * [tFixedFlowInput_11 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_11 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_11";
	
	

        }
        globalMap.put("tFixedFlowInput_11_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_11", true);
end_Hash.put("tFixedFlowInput_11", System.currentTimeMillis());




/**
 * [tFixedFlowInput_11 end ] stop
 */

	
	/**
	 * [tJavaRow_12 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	

globalMap.put("tJavaRow_12_NB_LINE",nb_line_tJavaRow_12);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tJavaRow_12", true);
end_Hash.put("tJavaRow_12", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk28", 0, "ok");
				}
				tFixedFlowInput_21Process(globalMap);



/**
 * [tJavaRow_12 end ] stop
 */



						if(execStat){
							runStat.updateStatOnConnection("iterate9", 2, "exec" + NB_ITERATE_tFixedFlowInput_11);
						}				
					




	
	/**
	 * [tFlowToIterate_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_8";
	
	

 



/**
 * [tFlowToIterate_8 process_data_end ] stop
 */

} // End of branch "ETNIA_REJECT_FORMAT"




	
	/**
	 * [tFilterRow_54 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_54";
	
	

 



/**
 * [tFilterRow_54 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_11 end ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	
    

		
			nb_line_tHashInput_11++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_10");
	


	globalMap.put("tHashInput_11_NB_LINE", nb_line_tHashInput_11);       

 

ok_Hash.put("tHashInput_11", true);
end_Hash.put("tHashInput_11", System.currentTimeMillis());




/**
 * [tHashInput_11 end ] stop
 */

	
	/**
	 * [tFilterRow_54 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_54";
	
	
    globalMap.put("tFilterRow_54_NB_LINE", nb_line_tFilterRow_54);
    globalMap.put("tFilterRow_54_NB_LINE_OK", nb_line_ok_tFilterRow_54);
    globalMap.put("tFilterRow_54_NB_LINE_REJECT", nb_line_reject_tFilterRow_54);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row36");
			  	}
			  	
 

ok_Hash.put("tFilterRow_54", true);
end_Hash.put("tFilterRow_54", System.currentTimeMillis());




/**
 * [tFilterRow_54 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row26 != null) {
						tHash_Lookup_row26.endGet();
					}
					globalMap.remove( "tHash_Lookup_row26" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"ETNIA_ACCEPT_FORMAT");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tFlowToIterate_9 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_9";
	
	

globalMap.put("tFlowToIterate_9_NB_LINE",nb_line_tFlowToIterate_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"ETNIA_REJECT_EXIST");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_9", true);
end_Hash.put("tFlowToIterate_9", System.currentTimeMillis());




/**
 * [tFlowToIterate_9 end ] stop
 */







	
	/**
	 * [tFlowToIterate_8 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_8";
	
	

globalMap.put("tFlowToIterate_8_NB_LINE",nb_line_tFlowToIterate_8);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"ETNIA_REJECT_FORMAT");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_8", true);
end_Hash.put("tFlowToIterate_8", System.currentTimeMillis());




/**
 * [tFlowToIterate_8 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_11:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk16", 0, "ok");
								} 
							
							tHashInput_12Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row26"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_11 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 finally ] stop
 */

	
	/**
	 * [tFilterRow_54 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_54";
	
	

 



/**
 * [tFilterRow_54 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tFlowToIterate_9 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_9";
	
	

 



/**
 * [tFlowToIterate_9 finally ] stop
 */

	
	/**
	 * [tFixedFlowInput_12 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_12";
	
	

 



/**
 * [tFixedFlowInput_12 finally ] stop
 */

	
	/**
	 * [tJavaRow_13 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_13";
	
	

 



/**
 * [tJavaRow_13 finally ] stop
 */













	
	/**
	 * [tFlowToIterate_8 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_8";
	
	

 



/**
 * [tFlowToIterate_8 finally ] stop
 */

	
	/**
	 * [tFixedFlowInput_11 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_11";
	
	

 



/**
 * [tFixedFlowInput_11 finally ] stop
 */

	
	/**
	 * [tJavaRow_12 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	

 



/**
 * [tJavaRow_12 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_11_SUBPROCESS_STATE", 1);
	}
	


public static class row18Struct implements routines.system.IPersistableRow<row18Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row14Struct implements routines.system.IPersistableRow<row14Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class CIE10_REJECT_EXISTStruct implements routines.system.IPersistableRow<CIE10_REJECT_EXISTStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(CIE10_REJECT_EXISTStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class CIE10_ACCEPT_FORMATStruct implements routines.system.IPersistableRow<CIE10_ACCEPT_FORMATStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(CIE10_ACCEPT_FORMATStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class CIE10_REJECT_FORMATStruct implements routines.system.IPersistableRow<CIE10_REJECT_FORMATStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String errorMessage;

				public String getErrorMessage () {
					return this.errorMessage;
				}

				public Boolean errorMessageIsNullable(){
				    return true;
				}
				public Boolean errorMessageIsKey(){
				    return false;
				}
				public Integer errorMessageLength(){
				    return 255;
				}
				public Integer errorMessagePrecision(){
				    return 0;
				}
				public String errorMessageDefault(){
				
					return null;
				
				}
				public String errorMessageComment(){
				
				    return null;
				
				}
				public String errorMessagePattern(){
				
				    return null;
				
				}
				public String errorMessageOriginalDbColumnName(){
				
					return "errorMessage";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",errorMessage="+errorMessage);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(CIE10_REJECT_FORMATStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row37Struct implements routines.system.IPersistableRow<row37Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row37Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_12Struct implements routines.system.IPersistableRow<after_tHashInput_12Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_12Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_12_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_5Process(globalMap);

		row37Struct row37 = new row37Struct();
CIE10_ACCEPT_FORMATStruct CIE10_ACCEPT_FORMAT = new CIE10_ACCEPT_FORMATStruct();
CIE10_REJECT_EXISTStruct CIE10_REJECT_EXIST = new CIE10_REJECT_EXISTStruct();
row14Struct row14 = new row14Struct();
CIE10_REJECT_FORMATStruct CIE10_REJECT_FORMAT = new CIE10_REJECT_FORMATStruct();
row18Struct row18 = new row18Struct();






	
	/**
	 * [tFlowToIterate_11 begin ] start
	 */

				
			int NB_ITERATE_tFixedFlowInput_14 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_11", false);
		start_Hash.put("tFlowToIterate_11", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"CIE10_REJECT_EXIST");
					}
				
		int tos_count_tFlowToIterate_11 = 0;
		

int nb_line_tFlowToIterate_11 = 0;
int counter_tFlowToIterate_11 = 0;

 



/**
 * [tFlowToIterate_11 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"CIE10_ACCEPT_FORMAT");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row28Struct> tHash_Lookup_row28 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row28Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row28Struct>) 
					globalMap.get( "tHash_Lookup_row28" ))
					;					
					
	

row28Struct row28HashKey = new row28Struct();
row28Struct row28Default = new row28Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
CIE10_REJECT_EXISTStruct CIE10_REJECT_EXIST_tmp = new CIE10_REJECT_EXISTStruct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */




	
	/**
	 * [tFlowToIterate_10 begin ] start
	 */

				
			int NB_ITERATE_tFixedFlowInput_13 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_10", false);
		start_Hash.put("tFlowToIterate_10", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"CIE10_REJECT_FORMAT");
					}
				
		int tos_count_tFlowToIterate_10 = 0;
		

int nb_line_tFlowToIterate_10 = 0;
int counter_tFlowToIterate_10 = 0;

 



/**
 * [tFlowToIterate_10 begin ] stop
 */



	
	/**
	 * [tFilterRow_62 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_62", false);
		start_Hash.put("tFilterRow_62", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_62";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row37");
					}
				
		int tos_count_tFilterRow_62 = 0;
		
    int nb_line_tFilterRow_62 = 0;
    int nb_line_ok_tFilterRow_62 = 0;
    int nb_line_reject_tFilterRow_62 = 0;

    class Operator_tFilterRow_62 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_62(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_62 begin ] stop
 */



	
	/**
	 * [tHashInput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_12", false);
		start_Hash.put("tHashInput_12", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_12";
	
	
		int tos_count_tHashInput_12 = 0;
		


int nb_line_tHashInput_12 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_12=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row42Struct> tHashFile_tHashInput_12 = mf_tHashInput_12.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_10");
if(tHashFile_tHashInput_12==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row42Struct> iterator_tHashInput_12 = tHashFile_tHashInput_12.iterator();
while (iterator_tHashInput_12.hasNext()) {
    row42Struct next_tHashInput_12 = iterator_tHashInput_12.next();

	row37.COD_DIVIPOLA = next_tHashInput_12.COD_DIVIPOLA;
	row37.INDICADOR = next_tHashInput_12.INDICADOR;
	row37.SEXO = next_tHashInput_12.SEXO;
	row37.EDAD = next_tHashInput_12.EDAD;
	row37.ETNIA = next_tHashInput_12.ETNIA;
	row37.CIE10 = next_tHashInput_12.CIE10;
	row37.PRIORIDAD = next_tHashInput_12.PRIORIDAD;
	row37.GRUPO_RIESGO = next_tHashInput_12.GRUPO_RIESGO;

 



/**
 * [tHashInput_12 begin ] stop
 */
	
	/**
	 * [tHashInput_12 main ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 


	tos_count_tHashInput_12++;

/**
 * [tHashInput_12 main ] stop
 */
	
	/**
	 * [tHashInput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 



/**
 * [tHashInput_12 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_62 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_62";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row37"
						
						);
					}
					

          CIE10_REJECT_FORMAT = null;
          CIE10_ACCEPT_FORMAT = null;
    Operator_tFilterRow_62 ope_tFilterRow_62 = new Operator_tFilterRow_62("&&");
      ope_tFilterRow_62.matches((//****************************************************************************************//
//*** VALIDACION COLUMNA CIE10 ***********************************************************//
//****************************************************************************************//
row37.CIE10.length() == 3), "advanced condition failed");
    
    if (ope_tFilterRow_62.getMatchFlag()) {
              if(CIE10_ACCEPT_FORMAT == null){ 
                CIE10_ACCEPT_FORMAT = new CIE10_ACCEPT_FORMATStruct();
              }
               CIE10_ACCEPT_FORMAT.COD_DIVIPOLA = row37.COD_DIVIPOLA;
               CIE10_ACCEPT_FORMAT.INDICADOR = row37.INDICADOR;
               CIE10_ACCEPT_FORMAT.SEXO = row37.SEXO;
               CIE10_ACCEPT_FORMAT.EDAD = row37.EDAD;
               CIE10_ACCEPT_FORMAT.ETNIA = row37.ETNIA;
               CIE10_ACCEPT_FORMAT.CIE10 = row37.CIE10;
               CIE10_ACCEPT_FORMAT.PRIORIDAD = row37.PRIORIDAD;
               CIE10_ACCEPT_FORMAT.GRUPO_RIESGO = row37.GRUPO_RIESGO;    
      nb_line_ok_tFilterRow_62++;
    } else {
            if (CIE10_REJECT_FORMAT == null){
              CIE10_REJECT_FORMAT = new CIE10_REJECT_FORMATStruct();
            }
                CIE10_REJECT_FORMAT.COD_DIVIPOLA = row37.COD_DIVIPOLA;
                CIE10_REJECT_FORMAT.INDICADOR = row37.INDICADOR;
                CIE10_REJECT_FORMAT.SEXO = row37.SEXO;
                CIE10_REJECT_FORMAT.EDAD = row37.EDAD;
                CIE10_REJECT_FORMAT.ETNIA = row37.ETNIA;
                CIE10_REJECT_FORMAT.CIE10 = row37.CIE10;
                CIE10_REJECT_FORMAT.PRIORIDAD = row37.PRIORIDAD;
                CIE10_REJECT_FORMAT.GRUPO_RIESGO = row37.GRUPO_RIESGO;
	            CIE10_REJECT_FORMAT.errorMessage = ope_tFilterRow_62.getErrorMsg();
      nb_line_reject_tFilterRow_62++;
    }

nb_line_tFilterRow_62++;

 


	tos_count_tFilterRow_62++;

/**
 * [tFilterRow_62 main ] stop
 */
	
	/**
	 * [tFilterRow_62 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_62";
	
	

 



/**
 * [tFilterRow_62 process_data_begin ] stop
 */
// Start of branch "CIE10_ACCEPT_FORMAT"
if(CIE10_ACCEPT_FORMAT != null) { 



	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"CIE10_ACCEPT_FORMAT"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
						row28Struct row28 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_5 = false;
		boolean mainRowRejected_tMap_5 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row28" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow28 = false;
       		  	    	
       		  	    	
 							row28Struct row28ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row28HashKey.CODIGO_CIE10 = CIE10_ACCEPT_FORMAT.CIE10 ;
                        		    		

								
		                        	row28HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row28.lookup( row28HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row28 != null && tHash_Lookup_row28.getCount(row28HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row28' and it contains more one result from keys :  row28.CODIGO_CIE10 = '" + row28HashKey.CODIGO_CIE10 + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row28Struct fromLookup_row28 = null;
							row28 = row28Default;
										 
							
								 
							
							
								if (tHash_Lookup_row28 !=null && tHash_Lookup_row28.hasNext()) { // G 099
								
							
								
								fromLookup_row28 = tHash_Lookup_row28.next();

							
							
								} // G 099
							
							

							if(fromLookup_row28 != null) {
								row28 = fromLookup_row28;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

CIE10_REJECT_EXIST = null;

// ###### START REJECTS ##### 
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "CIE10_REJECT_EXIST"
if(CIE10_REJECT_EXIST != null) { 



	
	/**
	 * [tFlowToIterate_11 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"CIE10_REJECT_EXIST"
						
						);
					}
					


    	            
            globalMap.put("CIE10_REJECT_EXIST.COD_DIVIPOLA", CIE10_REJECT_EXIST.COD_DIVIPOLA);
    	            
            globalMap.put("CIE10_REJECT_EXIST.INDICADOR", CIE10_REJECT_EXIST.INDICADOR);
    	            
            globalMap.put("CIE10_REJECT_EXIST.SEXO", CIE10_REJECT_EXIST.SEXO);
    	            
            globalMap.put("CIE10_REJECT_EXIST.EDAD", CIE10_REJECT_EXIST.EDAD);
    	            
            globalMap.put("CIE10_REJECT_EXIST.ETNIA", CIE10_REJECT_EXIST.ETNIA);
    	            
            globalMap.put("CIE10_REJECT_EXIST.CIE10", CIE10_REJECT_EXIST.CIE10);
    	            
            globalMap.put("CIE10_REJECT_EXIST.PRIORIDAD", CIE10_REJECT_EXIST.PRIORIDAD);
    	            
            globalMap.put("CIE10_REJECT_EXIST.GRUPO_RIESGO", CIE10_REJECT_EXIST.GRUPO_RIESGO);
    	
 
	   nb_line_tFlowToIterate_11++;  
       counter_tFlowToIterate_11++;
       globalMap.put("tFlowToIterate_11_CURRENT_ITERATION", counter_tFlowToIterate_11);
 


	tos_count_tFlowToIterate_11++;

/**
 * [tFlowToIterate_11 main ] stop
 */
	
	/**
	 * [tFlowToIterate_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_11";
	
	

 



/**
 * [tFlowToIterate_11 process_data_begin ] stop
 */
	NB_ITERATE_tFixedFlowInput_14++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk40", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row14", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk25", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate12", 1, "exec" + NB_ITERATE_tFixedFlowInput_14);
					//Thread.sleep(1000);
				}				
			


	
	/**
	 * [tJavaRow_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_15", false);
		start_Hash.put("tJavaRow_15", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tJavaRow_15 = 0;
		

int nb_line_tJavaRow_15 = 0;

 



/**
 * [tJavaRow_15 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_14", false);
		start_Hash.put("tFixedFlowInput_14", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_14";
	
	
		int tos_count_tFixedFlowInput_14 = 0;
		

	    for (int i_tFixedFlowInput_14 = 0 ; i_tFixedFlowInput_14 < 1 ; i_tFixedFlowInput_14++) {
	                	            	
    	            		row14.COD_DIVIPOLA = CIE10_REJECT_EXIST.COD_DIVIPOLA;
    	            	        	            	
    	            		row14.INDICADOR = CIE10_REJECT_EXIST.INDICADOR;
    	            	        	            	
    	            		row14.SEXO = CIE10_REJECT_EXIST.SEXO;
    	            	        	            	
    	            		row14.EDAD = CIE10_REJECT_EXIST.EDAD;
    	            	        	            	
    	            		row14.ETNIA = CIE10_REJECT_EXIST.ETNIA;
    	            	        	            	
    	            		row14.CIE10 = CIE10_REJECT_EXIST.CIE10;
    	            	        	            	
    	            		row14.PRIORIDAD = CIE10_REJECT_EXIST.PRIORIDAD;
    	            	        	            	
    	            		row14.GRUPO_RIESGO = CIE10_REJECT_EXIST.GRUPO_RIESGO;
    	            	        	            	
    	            		row14.ERROR = "Columna "+globalMap.get("filas")+" : "+context.ErrorCie10Exist;
    	            	

 



/**
 * [tFixedFlowInput_14 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_14 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_14";
	
	

 


	tos_count_tFixedFlowInput_14++;

/**
 * [tFixedFlowInput_14 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_14";
	
	

 



/**
 * [tFixedFlowInput_14 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_15 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.COD_DIVIPOLA_VAL = row14.COD_DIVIPOLA;
context.INDICADOR_VAL = row14.INDICADOR;
context.SEXO_VAL = row14.SEXO;
context.EDAD_VAL = row14.EDAD;
context.ETNIA_VAL = row14.ETNIA;
context.CIE10_VAL = row14.CIE10;
context.PRIORIDAD_VAL = row14.PRIORIDAD;
context.GRUPO_RIESGO_VAL = row14.GRUPO_RIESGO;
context.ERROR_VAL = row14.ERROR;

    nb_line_tJavaRow_15++;   

 


	tos_count_tJavaRow_15++;

/**
 * [tJavaRow_15 main ] stop
 */
	
	/**
	 * [tJavaRow_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_15";
	
	

 



/**
 * [tJavaRow_15 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_15";
	
	

 



/**
 * [tJavaRow_15 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_14";
	
	

 



/**
 * [tFixedFlowInput_14 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_14 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_14";
	
	

        }
        globalMap.put("tFixedFlowInput_14_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_14", true);
end_Hash.put("tFixedFlowInput_14", System.currentTimeMillis());




/**
 * [tFixedFlowInput_14 end ] stop
 */

	
	/**
	 * [tJavaRow_15 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_15";
	
	

globalMap.put("tJavaRow_15_NB_LINE",nb_line_tJavaRow_15);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tJavaRow_15", true);
end_Hash.put("tJavaRow_15", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk25", 0, "ok");
				}
				tFixedFlowInput_21Process(globalMap);



/**
 * [tJavaRow_15 end ] stop
 */



						if(execStat){
							runStat.updateStatOnConnection("iterate12", 2, "exec" + NB_ITERATE_tFixedFlowInput_14);
						}				
					




	
	/**
	 * [tFlowToIterate_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_11";
	
	

 



/**
 * [tFlowToIterate_11 process_data_end ] stop
 */

} // End of branch "CIE10_REJECT_EXIST"




	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_end ] stop
 */

} // End of branch "CIE10_ACCEPT_FORMAT"




// Start of branch "CIE10_REJECT_FORMAT"
if(CIE10_REJECT_FORMAT != null) { 



	
	/**
	 * [tFlowToIterate_10 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"CIE10_REJECT_FORMAT"
						
						);
					}
					


    	            
            globalMap.put("CIE10_REJECT_FORMAT.COD_DIVIPOLA", CIE10_REJECT_FORMAT.COD_DIVIPOLA);
    	            
            globalMap.put("CIE10_REJECT_FORMAT.INDICADOR", CIE10_REJECT_FORMAT.INDICADOR);
    	            
            globalMap.put("CIE10_REJECT_FORMAT.SEXO", CIE10_REJECT_FORMAT.SEXO);
    	            
            globalMap.put("CIE10_REJECT_FORMAT.EDAD", CIE10_REJECT_FORMAT.EDAD);
    	            
            globalMap.put("CIE10_REJECT_FORMAT.ETNIA", CIE10_REJECT_FORMAT.ETNIA);
    	            
            globalMap.put("CIE10_REJECT_FORMAT.CIE10", CIE10_REJECT_FORMAT.CIE10);
    	            
            globalMap.put("CIE10_REJECT_FORMAT.PRIORIDAD", CIE10_REJECT_FORMAT.PRIORIDAD);
    	            
            globalMap.put("CIE10_REJECT_FORMAT.GRUPO_RIESGO", CIE10_REJECT_FORMAT.GRUPO_RIESGO);
    	            
            globalMap.put("CIE10_REJECT_FORMAT.errorMessage", CIE10_REJECT_FORMAT.errorMessage);
    	
 
	   nb_line_tFlowToIterate_10++;  
       counter_tFlowToIterate_10++;
       globalMap.put("tFlowToIterate_10_CURRENT_ITERATION", counter_tFlowToIterate_10);
 


	tos_count_tFlowToIterate_10++;

/**
 * [tFlowToIterate_10 main ] stop
 */
	
	/**
	 * [tFlowToIterate_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_10";
	
	

 



/**
 * [tFlowToIterate_10 process_data_begin ] stop
 */
	NB_ITERATE_tFixedFlowInput_13++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk40", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk26", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row18", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate11", 1, "exec" + NB_ITERATE_tFixedFlowInput_13);
					//Thread.sleep(1000);
				}				
			


	
	/**
	 * [tJavaRow_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_14", false);
		start_Hash.put("tJavaRow_14", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row18");
					}
				
		int tos_count_tJavaRow_14 = 0;
		

int nb_line_tJavaRow_14 = 0;

 



/**
 * [tJavaRow_14 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_13", false);
		start_Hash.put("tFixedFlowInput_13", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_13";
	
	
		int tos_count_tFixedFlowInput_13 = 0;
		

	    for (int i_tFixedFlowInput_13 = 0 ; i_tFixedFlowInput_13 < 1 ; i_tFixedFlowInput_13++) {
	                	            	
    	            		row18.COD_DIVIPOLA = CIE10_REJECT_FORMAT.COD_DIVIPOLA;
    	            	        	            	
    	            		row18.INDICADOR = CIE10_REJECT_FORMAT.INDICADOR;
    	            	        	            	
    	            		row18.SEXO = CIE10_REJECT_FORMAT.SEXO;
    	            	        	            	
    	            		row18.EDAD = CIE10_REJECT_FORMAT.EDAD;
    	            	        	            	
    	            		row18.ETNIA = CIE10_REJECT_FORMAT.ETNIA;
    	            	        	            	
    	            		row18.CIE10 = CIE10_REJECT_FORMAT.CIE10;
    	            	        	            	
    	            		row18.PRIORIDAD = CIE10_REJECT_FORMAT.PRIORIDAD;
    	            	        	            	
    	            		row18.GRUPO_RIESGO = CIE10_REJECT_FORMAT.GRUPO_RIESGO;
    	            	        	            	
    	            		row18.ERROR = "Columna "+globalMap.get("filas")+" : "+context.ErrorCie10Formato;
    	            	

 



/**
 * [tFixedFlowInput_13 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_13 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_13";
	
	

 


	tos_count_tFixedFlowInput_13++;

/**
 * [tFixedFlowInput_13 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_13";
	
	

 



/**
 * [tFixedFlowInput_13 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_14 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row18"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.COD_DIVIPOLA_VAL = row18.COD_DIVIPOLA;
context.INDICADOR_VAL = row18.INDICADOR;
context.SEXO_VAL = row18.SEXO;
context.EDAD_VAL = row18.EDAD;
context.ETNIA_VAL = row18.ETNIA;
context.CIE10_VAL = row18.CIE10;
context.PRIORIDAD_VAL = row18.PRIORIDAD;
context.GRUPO_RIESGO_VAL = row18.GRUPO_RIESGO;
context.ERROR_VAL = row18.ERROR;

    nb_line_tJavaRow_14++;   

 


	tos_count_tJavaRow_14++;

/**
 * [tJavaRow_14 main ] stop
 */
	
	/**
	 * [tJavaRow_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_14";
	
	

 



/**
 * [tJavaRow_14 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_14";
	
	

 



/**
 * [tJavaRow_14 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_13";
	
	

 



/**
 * [tFixedFlowInput_13 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_13 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_13";
	
	

        }
        globalMap.put("tFixedFlowInput_13_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_13", true);
end_Hash.put("tFixedFlowInput_13", System.currentTimeMillis());




/**
 * [tFixedFlowInput_13 end ] stop
 */

	
	/**
	 * [tJavaRow_14 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_14";
	
	

globalMap.put("tJavaRow_14_NB_LINE",nb_line_tJavaRow_14);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row18");
			  	}
			  	
 

ok_Hash.put("tJavaRow_14", true);
end_Hash.put("tJavaRow_14", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk26", 0, "ok");
				}
				tFixedFlowInput_21Process(globalMap);



/**
 * [tJavaRow_14 end ] stop
 */



						if(execStat){
							runStat.updateStatOnConnection("iterate11", 2, "exec" + NB_ITERATE_tFixedFlowInput_13);
						}				
					




	
	/**
	 * [tFlowToIterate_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_10";
	
	

 



/**
 * [tFlowToIterate_10 process_data_end ] stop
 */

} // End of branch "CIE10_REJECT_FORMAT"




	
	/**
	 * [tFilterRow_62 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_62";
	
	

 



/**
 * [tFilterRow_62 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 



/**
 * [tHashInput_12 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_12 end ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	
    

		
			nb_line_tHashInput_12++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_10");
	


	globalMap.put("tHashInput_12_NB_LINE", nb_line_tHashInput_12);       

 

ok_Hash.put("tHashInput_12", true);
end_Hash.put("tHashInput_12", System.currentTimeMillis());




/**
 * [tHashInput_12 end ] stop
 */

	
	/**
	 * [tFilterRow_62 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_62";
	
	
    globalMap.put("tFilterRow_62_NB_LINE", nb_line_tFilterRow_62);
    globalMap.put("tFilterRow_62_NB_LINE_OK", nb_line_ok_tFilterRow_62);
    globalMap.put("tFilterRow_62_NB_LINE_REJECT", nb_line_reject_tFilterRow_62);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row37");
			  	}
			  	
 

ok_Hash.put("tFilterRow_62", true);
end_Hash.put("tFilterRow_62", System.currentTimeMillis());




/**
 * [tFilterRow_62 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row28 != null) {
						tHash_Lookup_row28.endGet();
					}
					globalMap.remove( "tHash_Lookup_row28" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"CIE10_ACCEPT_FORMAT");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tFlowToIterate_11 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_11";
	
	

globalMap.put("tFlowToIterate_11_NB_LINE",nb_line_tFlowToIterate_11);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"CIE10_REJECT_EXIST");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_11", true);
end_Hash.put("tFlowToIterate_11", System.currentTimeMillis());




/**
 * [tFlowToIterate_11 end ] stop
 */







	
	/**
	 * [tFlowToIterate_10 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_10";
	
	

globalMap.put("tFlowToIterate_10_NB_LINE",nb_line_tFlowToIterate_10);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"CIE10_REJECT_FORMAT");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_10", true);
end_Hash.put("tFlowToIterate_10", System.currentTimeMillis());




/**
 * [tFlowToIterate_10 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_12:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk17", 0, "ok");
								} 
							
							tHashInput_13Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row28"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_12 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 



/**
 * [tHashInput_12 finally ] stop
 */

	
	/**
	 * [tFilterRow_62 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_62";
	
	

 



/**
 * [tFilterRow_62 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tFlowToIterate_11 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_11";
	
	

 



/**
 * [tFlowToIterate_11 finally ] stop
 */

	
	/**
	 * [tFixedFlowInput_14 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_14";
	
	

 



/**
 * [tFixedFlowInput_14 finally ] stop
 */

	
	/**
	 * [tJavaRow_15 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_15";
	
	

 



/**
 * [tJavaRow_15 finally ] stop
 */













	
	/**
	 * [tFlowToIterate_10 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_10";
	
	

 



/**
 * [tFlowToIterate_10 finally ] stop
 */

	
	/**
	 * [tFixedFlowInput_13 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_13";
	
	

 



/**
 * [tFixedFlowInput_13 finally ] stop
 */

	
	/**
	 * [tJavaRow_14 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_14";
	
	

 



/**
 * [tJavaRow_14 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_12_SUBPROCESS_STATE", 1);
	}
	


public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class GRUPO_RIESGO_REJECT_EXISTStruct implements routines.system.IPersistableRow<GRUPO_RIESGO_REJECT_EXISTStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(GRUPO_RIESGO_REJECT_EXISTStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class GRUPO_RIESGO_ACCEPT_FORMATStruct implements routines.system.IPersistableRow<GRUPO_RIESGO_ACCEPT_FORMATStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(GRUPO_RIESGO_ACCEPT_FORMATStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class GRUPO_RIESGO_REJECT_FORMATStruct implements routines.system.IPersistableRow<GRUPO_RIESGO_REJECT_FORMATStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String errorMessage;

				public String getErrorMessage () {
					return this.errorMessage;
				}

				public Boolean errorMessageIsNullable(){
				    return true;
				}
				public Boolean errorMessageIsKey(){
				    return false;
				}
				public Integer errorMessageLength(){
				    return 255;
				}
				public Integer errorMessagePrecision(){
				    return 0;
				}
				public String errorMessageDefault(){
				
					return null;
				
				}
				public String errorMessageComment(){
				
				    return null;
				
				}
				public String errorMessagePattern(){
				
				    return null;
				
				}
				public String errorMessageOriginalDbColumnName(){
				
					return "errorMessage";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",errorMessage="+errorMessage);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(GRUPO_RIESGO_REJECT_FORMATStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row38Struct implements routines.system.IPersistableRow<row38Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row38Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_13Struct implements routines.system.IPersistableRow<after_tHashInput_13Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_13Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_13_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_6Process(globalMap);

		row38Struct row38 = new row38Struct();
GRUPO_RIESGO_ACCEPT_FORMATStruct GRUPO_RIESGO_ACCEPT_FORMAT = new GRUPO_RIESGO_ACCEPT_FORMATStruct();
GRUPO_RIESGO_REJECT_EXISTStruct GRUPO_RIESGO_REJECT_EXIST = new GRUPO_RIESGO_REJECT_EXISTStruct();
row8Struct row8 = new row8Struct();
GRUPO_RIESGO_REJECT_FORMATStruct GRUPO_RIESGO_REJECT_FORMAT = new GRUPO_RIESGO_REJECT_FORMATStruct();
row12Struct row12 = new row12Struct();






	
	/**
	 * [tFlowToIterate_13 begin ] start
	 */

				
			int NB_ITERATE_tFixedFlowInput_16 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_13", false);
		start_Hash.put("tFlowToIterate_13", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"GRUPO_RIESGO_REJECT_EXIST");
					}
				
		int tos_count_tFlowToIterate_13 = 0;
		

int nb_line_tFlowToIterate_13 = 0;
int counter_tFlowToIterate_13 = 0;

 



/**
 * [tFlowToIterate_13 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"GRUPO_RIESGO_ACCEPT_FORMAT");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct> tHash_Lookup_row16 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct>) 
					globalMap.get( "tHash_Lookup_row16" ))
					;					
					
	

row16Struct row16HashKey = new row16Struct();
row16Struct row16Default = new row16Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
GRUPO_RIESGO_REJECT_EXISTStruct GRUPO_RIESGO_REJECT_EXIST_tmp = new GRUPO_RIESGO_REJECT_EXISTStruct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */




	
	/**
	 * [tFlowToIterate_12 begin ] start
	 */

				
			int NB_ITERATE_tFixedFlowInput_15 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_12", false);
		start_Hash.put("tFlowToIterate_12", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"GRUPO_RIESGO_REJECT_FORMAT");
					}
				
		int tos_count_tFlowToIterate_12 = 0;
		

int nb_line_tFlowToIterate_12 = 0;
int counter_tFlowToIterate_12 = 0;

 



/**
 * [tFlowToIterate_12 begin ] stop
 */



	
	/**
	 * [tFilterRow_70 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_70", false);
		start_Hash.put("tFilterRow_70", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_70";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row38");
					}
				
		int tos_count_tFilterRow_70 = 0;
		
    int nb_line_tFilterRow_70 = 0;
    int nb_line_ok_tFilterRow_70 = 0;
    int nb_line_reject_tFilterRow_70 = 0;

    class Operator_tFilterRow_70 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_70(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_70 begin ] stop
 */



	
	/**
	 * [tHashInput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_13", false);
		start_Hash.put("tHashInput_13", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_13";
	
	
		int tos_count_tHashInput_13 = 0;
		


int nb_line_tHashInput_13 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_13=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row42Struct> tHashFile_tHashInput_13 = mf_tHashInput_13.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_10");
if(tHashFile_tHashInput_13==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row42Struct> iterator_tHashInput_13 = tHashFile_tHashInput_13.iterator();
while (iterator_tHashInput_13.hasNext()) {
    row42Struct next_tHashInput_13 = iterator_tHashInput_13.next();

	row38.COD_DIVIPOLA = next_tHashInput_13.COD_DIVIPOLA;
	row38.INDICADOR = next_tHashInput_13.INDICADOR;
	row38.SEXO = next_tHashInput_13.SEXO;
	row38.EDAD = next_tHashInput_13.EDAD;
	row38.ETNIA = next_tHashInput_13.ETNIA;
	row38.CIE10 = next_tHashInput_13.CIE10;
	row38.PRIORIDAD = next_tHashInput_13.PRIORIDAD;
	row38.GRUPO_RIESGO = next_tHashInput_13.GRUPO_RIESGO;

 



/**
 * [tHashInput_13 begin ] stop
 */
	
	/**
	 * [tHashInput_13 main ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 


	tos_count_tHashInput_13++;

/**
 * [tHashInput_13 main ] stop
 */
	
	/**
	 * [tHashInput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 



/**
 * [tHashInput_13 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_70 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_70";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row38"
						
						);
					}
					

          GRUPO_RIESGO_REJECT_FORMAT = null;
          GRUPO_RIESGO_ACCEPT_FORMAT = null;
    Operator_tFilterRow_70 ope_tFilterRow_70 = new Operator_tFilterRow_70("&&");
      ope_tFilterRow_70.matches((//****************************************************************************************//
//*** VALIDACION COLUMNA GRUPO RIESGO ****************************************************//
//****************************************************************************************//
(ValidationRules.CifrasNumero(row38.GRUPO_RIESGO) >= 1) && (ValidationRules.CifrasNumero(row38.GRUPO_RIESGO) <= 3)), "advanced condition failed");
    
    if (ope_tFilterRow_70.getMatchFlag()) {
              if(GRUPO_RIESGO_ACCEPT_FORMAT == null){ 
                GRUPO_RIESGO_ACCEPT_FORMAT = new GRUPO_RIESGO_ACCEPT_FORMATStruct();
              }
               GRUPO_RIESGO_ACCEPT_FORMAT.COD_DIVIPOLA = row38.COD_DIVIPOLA;
               GRUPO_RIESGO_ACCEPT_FORMAT.INDICADOR = row38.INDICADOR;
               GRUPO_RIESGO_ACCEPT_FORMAT.SEXO = row38.SEXO;
               GRUPO_RIESGO_ACCEPT_FORMAT.EDAD = row38.EDAD;
               GRUPO_RIESGO_ACCEPT_FORMAT.ETNIA = row38.ETNIA;
               GRUPO_RIESGO_ACCEPT_FORMAT.CIE10 = row38.CIE10;
               GRUPO_RIESGO_ACCEPT_FORMAT.PRIORIDAD = row38.PRIORIDAD;
               GRUPO_RIESGO_ACCEPT_FORMAT.GRUPO_RIESGO = row38.GRUPO_RIESGO;    
      nb_line_ok_tFilterRow_70++;
    } else {
            if (GRUPO_RIESGO_REJECT_FORMAT == null){
              GRUPO_RIESGO_REJECT_FORMAT = new GRUPO_RIESGO_REJECT_FORMATStruct();
            }
                GRUPO_RIESGO_REJECT_FORMAT.COD_DIVIPOLA = row38.COD_DIVIPOLA;
                GRUPO_RIESGO_REJECT_FORMAT.INDICADOR = row38.INDICADOR;
                GRUPO_RIESGO_REJECT_FORMAT.SEXO = row38.SEXO;
                GRUPO_RIESGO_REJECT_FORMAT.EDAD = row38.EDAD;
                GRUPO_RIESGO_REJECT_FORMAT.ETNIA = row38.ETNIA;
                GRUPO_RIESGO_REJECT_FORMAT.CIE10 = row38.CIE10;
                GRUPO_RIESGO_REJECT_FORMAT.PRIORIDAD = row38.PRIORIDAD;
                GRUPO_RIESGO_REJECT_FORMAT.GRUPO_RIESGO = row38.GRUPO_RIESGO;
	            GRUPO_RIESGO_REJECT_FORMAT.errorMessage = ope_tFilterRow_70.getErrorMsg();
      nb_line_reject_tFilterRow_70++;
    }

nb_line_tFilterRow_70++;

 


	tos_count_tFilterRow_70++;

/**
 * [tFilterRow_70 main ] stop
 */
	
	/**
	 * [tFilterRow_70 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_70";
	
	

 



/**
 * [tFilterRow_70 process_data_begin ] stop
 */
// Start of branch "GRUPO_RIESGO_ACCEPT_FORMAT"
if(GRUPO_RIESGO_ACCEPT_FORMAT != null) { 



	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"GRUPO_RIESGO_ACCEPT_FORMAT"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
						row16Struct row16 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_6 = false;
		boolean mainRowRejected_tMap_6 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row16" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow16 = false;
       		  	    	
       		  	    	
 							row16Struct row16ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_6) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_6 = false;
								
                        		    		    row16HashKey.CODIGO_GRUPO_RIESGO = GRUPO_RIESGO_ACCEPT_FORMAT.GRUPO_RIESGO ;
                        		    		

								
		                        	row16HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row16.lookup( row16HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row16 != null && tHash_Lookup_row16.getCount(row16HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row16' and it contains more one result from keys :  row16.CODIGO_GRUPO_RIESGO = '" + row16HashKey.CODIGO_GRUPO_RIESGO + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row16Struct fromLookup_row16 = null;
							row16 = row16Default;
										 
							
								 
							
							
								if (tHash_Lookup_row16 !=null && tHash_Lookup_row16.hasNext()) { // G 099
								
							
								
								fromLookup_row16 = tHash_Lookup_row16.next();

							
							
								} // G 099
							
							

							if(fromLookup_row16 != null) {
								row16 = fromLookup_row16;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

GRUPO_RIESGO_REJECT_EXIST = null;

// ###### START REJECTS ##### 
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "GRUPO_RIESGO_REJECT_EXIST"
if(GRUPO_RIESGO_REJECT_EXIST != null) { 



	
	/**
	 * [tFlowToIterate_13 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"GRUPO_RIESGO_REJECT_EXIST"
						
						);
					}
					


    	            
            globalMap.put("GRUPO_RIESGO_REJECT_EXIST.COD_DIVIPOLA", GRUPO_RIESGO_REJECT_EXIST.COD_DIVIPOLA);
    	            
            globalMap.put("GRUPO_RIESGO_REJECT_EXIST.INDICADOR", GRUPO_RIESGO_REJECT_EXIST.INDICADOR);
    	            
            globalMap.put("GRUPO_RIESGO_REJECT_EXIST.SEXO", GRUPO_RIESGO_REJECT_EXIST.SEXO);
    	            
            globalMap.put("GRUPO_RIESGO_REJECT_EXIST.EDAD", GRUPO_RIESGO_REJECT_EXIST.EDAD);
    	            
            globalMap.put("GRUPO_RIESGO_REJECT_EXIST.ETNIA", GRUPO_RIESGO_REJECT_EXIST.ETNIA);
    	            
            globalMap.put("GRUPO_RIESGO_REJECT_EXIST.CIE10", GRUPO_RIESGO_REJECT_EXIST.CIE10);
    	            
            globalMap.put("GRUPO_RIESGO_REJECT_EXIST.PRIORIDAD", GRUPO_RIESGO_REJECT_EXIST.PRIORIDAD);
    	            
            globalMap.put("GRUPO_RIESGO_REJECT_EXIST.GRUPO_RIESGO", GRUPO_RIESGO_REJECT_EXIST.GRUPO_RIESGO);
    	
 
	   nb_line_tFlowToIterate_13++;  
       counter_tFlowToIterate_13++;
       globalMap.put("tFlowToIterate_13_CURRENT_ITERATION", counter_tFlowToIterate_13);
 


	tos_count_tFlowToIterate_13++;

/**
 * [tFlowToIterate_13 main ] stop
 */
	
	/**
	 * [tFlowToIterate_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_13";
	
	

 



/**
 * [tFlowToIterate_13 process_data_begin ] stop
 */
	NB_ITERATE_tFixedFlowInput_16++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk40", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row8", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk23", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate14", 1, "exec" + NB_ITERATE_tFixedFlowInput_16);
					//Thread.sleep(1000);
				}				
			


	
	/**
	 * [tJavaRow_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_17", false);
		start_Hash.put("tJavaRow_17", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_17";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tJavaRow_17 = 0;
		

int nb_line_tJavaRow_17 = 0;

 



/**
 * [tJavaRow_17 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_16", false);
		start_Hash.put("tFixedFlowInput_16", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_16";
	
	
		int tos_count_tFixedFlowInput_16 = 0;
		

	    for (int i_tFixedFlowInput_16 = 0 ; i_tFixedFlowInput_16 < 1 ; i_tFixedFlowInput_16++) {
	                	            	
    	            		row8.COD_DIVIPOLA = GRUPO_RIESGO_REJECT_EXIST.COD_DIVIPOLA;
    	            	        	            	
    	            		row8.INDICADOR = GRUPO_RIESGO_REJECT_EXIST.INDICADOR;
    	            	        	            	
    	            		row8.SEXO = GRUPO_RIESGO_REJECT_EXIST.SEXO;
    	            	        	            	
    	            		row8.EDAD = GRUPO_RIESGO_REJECT_EXIST.EDAD;
    	            	        	            	
    	            		row8.ETNIA = GRUPO_RIESGO_REJECT_EXIST.ETNIA;
    	            	        	            	
    	            		row8.CIE10 = GRUPO_RIESGO_REJECT_EXIST.CIE10;
    	            	        	            	
    	            		row8.PRIORIDAD = GRUPO_RIESGO_REJECT_EXIST.PRIORIDAD;
    	            	        	            	
    	            		row8.GRUPO_RIESGO = GRUPO_RIESGO_REJECT_EXIST.GRUPO_RIESGO;
    	            	        	            	
    	            		row8.ERROR = "Columna "+globalMap.get("filas")+" : "+context.ErrorGrupoRiesgoExist;
    	            	

 



/**
 * [tFixedFlowInput_16 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_16 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_16";
	
	

 


	tos_count_tFixedFlowInput_16++;

/**
 * [tFixedFlowInput_16 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_16";
	
	

 



/**
 * [tFixedFlowInput_16 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_17 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_17";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.COD_DIVIPOLA_VAL = row8.COD_DIVIPOLA;
context.INDICADOR_VAL = row8.INDICADOR;
context.SEXO_VAL = row8.SEXO;
context.EDAD_VAL = row8.EDAD;
context.ETNIA_VAL = row8.ETNIA;
context.CIE10_VAL = row8.CIE10;
context.PRIORIDAD_VAL = row8.PRIORIDAD;
context.GRUPO_RIESGO_VAL = row8.GRUPO_RIESGO;
context.ERROR_VAL = row8.ERROR;

    nb_line_tJavaRow_17++;   

 


	tos_count_tJavaRow_17++;

/**
 * [tJavaRow_17 main ] stop
 */
	
	/**
	 * [tJavaRow_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_17";
	
	

 



/**
 * [tJavaRow_17 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_17";
	
	

 



/**
 * [tJavaRow_17 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_16";
	
	

 



/**
 * [tFixedFlowInput_16 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_16 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_16";
	
	

        }
        globalMap.put("tFixedFlowInput_16_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_16", true);
end_Hash.put("tFixedFlowInput_16", System.currentTimeMillis());




/**
 * [tFixedFlowInput_16 end ] stop
 */

	
	/**
	 * [tJavaRow_17 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_17";
	
	

globalMap.put("tJavaRow_17_NB_LINE",nb_line_tJavaRow_17);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tJavaRow_17", true);
end_Hash.put("tJavaRow_17", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk23", 0, "ok");
				}
				tFixedFlowInput_21Process(globalMap);



/**
 * [tJavaRow_17 end ] stop
 */



						if(execStat){
							runStat.updateStatOnConnection("iterate14", 2, "exec" + NB_ITERATE_tFixedFlowInput_16);
						}				
					




	
	/**
	 * [tFlowToIterate_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_13";
	
	

 



/**
 * [tFlowToIterate_13 process_data_end ] stop
 */

} // End of branch "GRUPO_RIESGO_REJECT_EXIST"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_end ] stop
 */

} // End of branch "GRUPO_RIESGO_ACCEPT_FORMAT"




// Start of branch "GRUPO_RIESGO_REJECT_FORMAT"
if(GRUPO_RIESGO_REJECT_FORMAT != null) { 



	
	/**
	 * [tFlowToIterate_12 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"GRUPO_RIESGO_REJECT_FORMAT"
						
						);
					}
					


    	            
            globalMap.put("GRUPO_RIESGO_REJECT_FORMAT.COD_DIVIPOLA", GRUPO_RIESGO_REJECT_FORMAT.COD_DIVIPOLA);
    	            
            globalMap.put("GRUPO_RIESGO_REJECT_FORMAT.INDICADOR", GRUPO_RIESGO_REJECT_FORMAT.INDICADOR);
    	            
            globalMap.put("GRUPO_RIESGO_REJECT_FORMAT.SEXO", GRUPO_RIESGO_REJECT_FORMAT.SEXO);
    	            
            globalMap.put("GRUPO_RIESGO_REJECT_FORMAT.EDAD", GRUPO_RIESGO_REJECT_FORMAT.EDAD);
    	            
            globalMap.put("GRUPO_RIESGO_REJECT_FORMAT.ETNIA", GRUPO_RIESGO_REJECT_FORMAT.ETNIA);
    	            
            globalMap.put("GRUPO_RIESGO_REJECT_FORMAT.CIE10", GRUPO_RIESGO_REJECT_FORMAT.CIE10);
    	            
            globalMap.put("GRUPO_RIESGO_REJECT_FORMAT.PRIORIDAD", GRUPO_RIESGO_REJECT_FORMAT.PRIORIDAD);
    	            
            globalMap.put("GRUPO_RIESGO_REJECT_FORMAT.GRUPO_RIESGO", GRUPO_RIESGO_REJECT_FORMAT.GRUPO_RIESGO);
    	            
            globalMap.put("GRUPO_RIESGO_REJECT_FORMAT.errorMessage", GRUPO_RIESGO_REJECT_FORMAT.errorMessage);
    	
 
	   nb_line_tFlowToIterate_12++;  
       counter_tFlowToIterate_12++;
       globalMap.put("tFlowToIterate_12_CURRENT_ITERATION", counter_tFlowToIterate_12);
 


	tos_count_tFlowToIterate_12++;

/**
 * [tFlowToIterate_12 main ] stop
 */
	
	/**
	 * [tFlowToIterate_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_12";
	
	

 



/**
 * [tFlowToIterate_12 process_data_begin ] stop
 */
	NB_ITERATE_tFixedFlowInput_15++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk40", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("OnComponentOk24", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row12", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row5", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate13", 1, "exec" + NB_ITERATE_tFixedFlowInput_15);
					//Thread.sleep(1000);
				}				
			


	
	/**
	 * [tJavaRow_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_16", false);
		start_Hash.put("tJavaRow_16", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tJavaRow_16 = 0;
		

int nb_line_tJavaRow_16 = 0;

 



/**
 * [tJavaRow_16 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_15", false);
		start_Hash.put("tFixedFlowInput_15", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_15";
	
	
		int tos_count_tFixedFlowInput_15 = 0;
		

	    for (int i_tFixedFlowInput_15 = 0 ; i_tFixedFlowInput_15 < 1 ; i_tFixedFlowInput_15++) {
	                	            	
    	            		row12.COD_DIVIPOLA = GRUPO_RIESGO_REJECT_FORMAT.COD_DIVIPOLA;
    	            	        	            	
    	            		row12.INDICADOR = GRUPO_RIESGO_REJECT_FORMAT.INDICADOR;
    	            	        	            	
    	            		row12.SEXO = GRUPO_RIESGO_REJECT_FORMAT.SEXO;
    	            	        	            	
    	            		row12.EDAD = GRUPO_RIESGO_REJECT_FORMAT.EDAD;
    	            	        	            	
    	            		row12.ETNIA = GRUPO_RIESGO_REJECT_FORMAT.ETNIA;
    	            	        	            	
    	            		row12.CIE10 = GRUPO_RIESGO_REJECT_FORMAT.CIE10;
    	            	        	            	
    	            		row12.PRIORIDAD = GRUPO_RIESGO_REJECT_FORMAT.PRIORIDAD;
    	            	        	            	
    	            		row12.GRUPO_RIESGO = GRUPO_RIESGO_REJECT_FORMAT.GRUPO_RIESGO;
    	            	        	            	
    	            		row12.ERROR = "Columna "+globalMap.get("filas")+" : "+context.ErrorGrupoRiesgoFormato;
    	            	

 



/**
 * [tFixedFlowInput_15 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_15 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_15";
	
	

 


	tos_count_tFixedFlowInput_15++;

/**
 * [tFixedFlowInput_15 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_15";
	
	

 



/**
 * [tFixedFlowInput_15 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_16 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.COD_DIVIPOLA_VAL = row12.COD_DIVIPOLA;
context.INDICADOR_VAL = row12.INDICADOR;
context.SEXO_VAL = row12.SEXO;
context.EDAD_VAL = row12.EDAD;
context.ETNIA_VAL = row12.ETNIA;
context.CIE10_VAL = row12.CIE10;
context.PRIORIDAD_VAL = row12.PRIORIDAD;
context.GRUPO_RIESGO_VAL = row12.GRUPO_RIESGO;
context.ERROR_VAL = row12.ERROR;

    nb_line_tJavaRow_16++;   

 


	tos_count_tJavaRow_16++;

/**
 * [tJavaRow_16 main ] stop
 */
	
	/**
	 * [tJavaRow_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_16";
	
	

 



/**
 * [tJavaRow_16 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_16";
	
	

 



/**
 * [tJavaRow_16 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_15";
	
	

 



/**
 * [tFixedFlowInput_15 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_15 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_15";
	
	

        }
        globalMap.put("tFixedFlowInput_15_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_15", true);
end_Hash.put("tFixedFlowInput_15", System.currentTimeMillis());




/**
 * [tFixedFlowInput_15 end ] stop
 */

	
	/**
	 * [tJavaRow_16 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_16";
	
	

globalMap.put("tJavaRow_16_NB_LINE",nb_line_tJavaRow_16);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tJavaRow_16", true);
end_Hash.put("tJavaRow_16", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk24", 0, "ok");
				}
				tFixedFlowInput_21Process(globalMap);



/**
 * [tJavaRow_16 end ] stop
 */



						if(execStat){
							runStat.updateStatOnConnection("iterate13", 2, "exec" + NB_ITERATE_tFixedFlowInput_15);
						}				
					




	
	/**
	 * [tFlowToIterate_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_12";
	
	

 



/**
 * [tFlowToIterate_12 process_data_end ] stop
 */

} // End of branch "GRUPO_RIESGO_REJECT_FORMAT"




	
	/**
	 * [tFilterRow_70 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_70";
	
	

 



/**
 * [tFilterRow_70 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 



/**
 * [tHashInput_13 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_13 end ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	
    

		
			nb_line_tHashInput_13++;
		}	
    		
    		mf_tHashInput_13.clearCache("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_10");
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_10");
	


	globalMap.put("tHashInput_13_NB_LINE", nb_line_tHashInput_13);       

 

ok_Hash.put("tHashInput_13", true);
end_Hash.put("tHashInput_13", System.currentTimeMillis());




/**
 * [tHashInput_13 end ] stop
 */

	
	/**
	 * [tFilterRow_70 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_70";
	
	
    globalMap.put("tFilterRow_70_NB_LINE", nb_line_tFilterRow_70);
    globalMap.put("tFilterRow_70_NB_LINE_OK", nb_line_ok_tFilterRow_70);
    globalMap.put("tFilterRow_70_NB_LINE_REJECT", nb_line_reject_tFilterRow_70);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row38");
			  	}
			  	
 

ok_Hash.put("tFilterRow_70", true);
end_Hash.put("tFilterRow_70", System.currentTimeMillis());




/**
 * [tFilterRow_70 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row16 != null) {
						tHash_Lookup_row16.endGet();
					}
					globalMap.remove( "tHash_Lookup_row16" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"GRUPO_RIESGO_ACCEPT_FORMAT");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tFlowToIterate_13 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_13";
	
	

globalMap.put("tFlowToIterate_13_NB_LINE",nb_line_tFlowToIterate_13);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"GRUPO_RIESGO_REJECT_EXIST");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_13", true);
end_Hash.put("tFlowToIterate_13", System.currentTimeMillis());




/**
 * [tFlowToIterate_13 end ] stop
 */







	
	/**
	 * [tFlowToIterate_12 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_12";
	
	

globalMap.put("tFlowToIterate_12_NB_LINE",nb_line_tFlowToIterate_12);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"GRUPO_RIESGO_REJECT_FORMAT");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_12", true);
end_Hash.put("tFlowToIterate_12", System.currentTimeMillis());




/**
 * [tFlowToIterate_12 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_6"
					     			globalMap.remove("tHash_Lookup_row16"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_13 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 



/**
 * [tHashInput_13 finally ] stop
 */

	
	/**
	 * [tFilterRow_70 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_70";
	
	

 



/**
 * [tFilterRow_70 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tFlowToIterate_13 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_13";
	
	

 



/**
 * [tFlowToIterate_13 finally ] stop
 */

	
	/**
	 * [tFixedFlowInput_16 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_16";
	
	

 



/**
 * [tFixedFlowInput_16 finally ] stop
 */

	
	/**
	 * [tJavaRow_17 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_17";
	
	

 



/**
 * [tJavaRow_17 finally ] stop
 */













	
	/**
	 * [tFlowToIterate_12 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_12";
	
	

 



/**
 * [tFlowToIterate_12 finally ] stop
 */

	
	/**
	 * [tFixedFlowInput_15 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_15";
	
	

 



/**
 * [tFixedFlowInput_15 finally ] stop
 */

	
	/**
	 * [tJavaRow_16 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_16";
	
	

 



/**
 * [tJavaRow_16 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_13_SUBPROCESS_STATE", 1);
	}
	


public static class row68Struct implements routines.system.IPersistableRow<row68Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer ID;

				public Integer getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return null;
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public Integer RESULTADO;

				public Integer getRESULTADO () {
					return this.RESULTADO;
				}

				public Boolean RESULTADOIsNullable(){
				    return true;
				}
				public Boolean RESULTADOIsKey(){
				    return false;
				}
				public Integer RESULTADOLength(){
				    return 0;
				}
				public Integer RESULTADOPrecision(){
				    return 0;
				}
				public String RESULTADODefault(){
				
					return null;
				
				}
				public String RESULTADOComment(){
				
				    return "";
				
				}
				public String RESULTADOPattern(){
				
					return "";
				
				}
				public String RESULTADOOriginalDbColumnName(){
				
					return "RESULTADO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row68Struct other = (row68Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row68Struct other) {

		other.ID = this.ID;
	            other.ESTADO = this.ESTADO;
	            other.RESULTADO = this.RESULTADO;
	            
	}

	public void copyKeysDataTo(row68Struct other) {

		other.ID = this.ID;
	            	
	}



	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID = readInteger(dis);
					
					this.ESTADO = readString(dis);
					
						this.RESULTADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID = readInteger(dis);
					
					this.ESTADO = readString(dis);
					
						this.RESULTADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// Integer
				
						writeInteger(this.RESULTADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// Integer
				
						writeInteger(this.RESULTADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESULTADO="+String.valueOf(RESULTADO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row68Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_28Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_28_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row68Struct row68 = new row68Struct();




	
	/**
	 * [tOracleOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_5", false);
		start_Hash.put("tOracleOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row68");
					}
				
		int tos_count_tOracleOutput_5 = 0;
		






        int updateKeyCount_tOracleOutput_5 = 1;
        if(updateKeyCount_tOracleOutput_5 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_5 == 3 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_5 = 0;
    int nb_line_update_tOracleOutput_5 = 0;
    int nb_line_inserted_tOracleOutput_5 = 0;
    int nb_line_deleted_tOracleOutput_5 = 0;
    int nb_line_rejected_tOracleOutput_5 = 0;

    int tmp_batchUpdateCount_tOracleOutput_5 = 0;

    int deletedCount_tOracleOutput_5=0;
    int updatedCount_tOracleOutput_5=0;
    int insertedCount_tOracleOutput_5=0;
    int rowsToCommitCount_tOracleOutput_5=0;
    int rejectedCount_tOracleOutput_5=0;

    boolean whetherReject_tOracleOutput_5 = false;

    java.sql.Connection conn_tOracleOutput_5 = null;

    //optional table
    String dbschema_tOracleOutput_5 = null;
    String tableName_tOracleOutput_5 = null;
        dbschema_tOracleOutput_5 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_5 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_5=0;

        if(dbschema_tOracleOutput_5 == null || dbschema_tOracleOutput_5.trim().length() == 0) {
            tableName_tOracleOutput_5 = ("VSP_PRIORIZACION");
        } else {
            tableName_tOracleOutput_5 = dbschema_tOracleOutput_5 + "." + ("VSP_PRIORIZACION");
        }
                String update_tOracleOutput_5 = "UPDATE " + tableName_tOracleOutput_5 + " SET ESTADO = ?,RESULTADO = ? WHERE ID = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_5 = conn_tOracleOutput_5.prepareStatement(update_tOracleOutput_5);
                resourceMap.put("pstmt_tOracleOutput_5", pstmt_tOracleOutput_5);





 



/**
 * [tOracleOutput_5 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_28 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_28", false);
		start_Hash.put("tFixedFlowInput_28", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_28";
	
	
		int tos_count_tFixedFlowInput_28 = 0;
		

	    for (int i_tFixedFlowInput_28 = 0 ; i_tFixedFlowInput_28 < 1 ; i_tFixedFlowInput_28++) {
	                	            	
    	            		row68.ID = context.PriorizacionId;
    	            	        	            	
    	            		row68.ESTADO = context.EstAnexoError;
    	            	        	            	
    	            		row68.RESULTADO = null;
    	            	

 



/**
 * [tFixedFlowInput_28 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_28 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_28";
	
	

 


	tos_count_tFixedFlowInput_28++;

/**
 * [tFixedFlowInput_28 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_28 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_28";
	
	

 



/**
 * [tFixedFlowInput_28 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_5 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row68"
						
						);
					}
					



        whetherReject_tOracleOutput_5 = false;
                    if(row68.ESTADO == null) {
pstmt_tOracleOutput_5.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_5.setString(1, row68.ESTADO);
}

                    if(row68.RESULTADO == null) {
pstmt_tOracleOutput_5.setNull(2, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_5.setInt(2, row68.RESULTADO);
}


                    if(row68.ID == null) {
pstmt_tOracleOutput_5.setNull(3 + count_tOracleOutput_5, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_5.setInt(3 + count_tOracleOutput_5, row68.ID);
}

                try {
                    nb_line_tOracleOutput_5++;
                    int processedCount_tOracleOutput_5 = pstmt_tOracleOutput_5.executeUpdate();
                    updatedCount_tOracleOutput_5 += processedCount_tOracleOutput_5;
                    rowsToCommitCount_tOracleOutput_5 += processedCount_tOracleOutput_5;
                } catch(java.lang.Exception e_tOracleOutput_5) {
globalMap.put("tOracleOutput_5_ERROR_MESSAGE",e_tOracleOutput_5.getMessage());
                    whetherReject_tOracleOutput_5 = true;
                            System.err.print(e_tOracleOutput_5.getMessage());
                }

 


	tos_count_tOracleOutput_5++;

/**
 * [tOracleOutput_5 main ] stop
 */
	
	/**
	 * [tOracleOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	

 



/**
 * [tOracleOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	

 



/**
 * [tOracleOutput_5 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_28 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_28";
	
	

 



/**
 * [tFixedFlowInput_28 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_28 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_28";
	
	

        }
        globalMap.put("tFixedFlowInput_28_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_28", true);
end_Hash.put("tFixedFlowInput_28", System.currentTimeMillis());




/**
 * [tFixedFlowInput_28 end ] stop
 */

	
	/**
	 * [tOracleOutput_5 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	
	



	
        if(pstmt_tOracleOutput_5 != null) {
			
				pstmt_tOracleOutput_5.close();
				resourceMap.remove("pstmt_tOracleOutput_5");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_5", true);

	
	nb_line_deleted_tOracleOutput_5=nb_line_deleted_tOracleOutput_5+ deletedCount_tOracleOutput_5;
	nb_line_update_tOracleOutput_5=nb_line_update_tOracleOutput_5 + updatedCount_tOracleOutput_5;
	nb_line_inserted_tOracleOutput_5=nb_line_inserted_tOracleOutput_5 + insertedCount_tOracleOutput_5;
	nb_line_rejected_tOracleOutput_5=nb_line_rejected_tOracleOutput_5 + rejectedCount_tOracleOutput_5;
	
        globalMap.put("tOracleOutput_5_NB_LINE",nb_line_tOracleOutput_5);
        globalMap.put("tOracleOutput_5_NB_LINE_UPDATED",nb_line_update_tOracleOutput_5);
        globalMap.put("tOracleOutput_5_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_5);
        globalMap.put("tOracleOutput_5_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_5);
        globalMap.put("tOracleOutput_5_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_5);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row68");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_5", true);
end_Hash.put("tOracleOutput_5", System.currentTimeMillis());




/**
 * [tOracleOutput_5 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_28 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_28";
	
	

 



/**
 * [tFixedFlowInput_28 finally ] stop
 */

	
	/**
	 * [tOracleOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_5";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_5") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_5 = null;
                if ((pstmtToClose_tOracleOutput_5 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_5")) != null) {
                    pstmtToClose_tOracleOutput_5.close();
                }
    }
 



/**
 * [tOracleOutput_5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_28_SUBPROCESS_STATE", 1);
	}
	


public void tJava_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_4", false);
		start_Hash.put("tJava_4", System.currentTimeMillis());
		
	
	currentComponent="tJava_4";
	
	
		int tos_count_tJava_4 = 0;
		


System.out.println("****************** VALIDACION DE FORMATO DE ARCHIVO COMPLETA *******************");

 



/**
 * [tJava_4 begin ] stop
 */
	
	/**
	 * [tJava_4 main ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 


	tos_count_tJava_4++;

/**
 * [tJava_4 main ] stop
 */
	
	/**
	 * [tJava_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_begin ] stop
 */
	
	/**
	 * [tJava_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_end ] stop
 */
	
	/**
	 * [tJava_4 end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 

ok_Hash.put("tJava_4", true);
end_Hash.put("tJava_4", System.currentTimeMillis());

   			if (((Integer)globalMap.get("FILAS_ERROR")>0) && ((Integer)globalMap.get("tOracleInput_1_NB_LINE")>0)) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If4", 0, "true");
					}
				tHashInput_14Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If4", 0, "false");
					}   	 
   				}
   			if (((Integer)globalMap.get("FILAS_ERROR")==0) && ((Integer)globalMap.get("tOracleInput_1_NB_LINE")>0) && ((Integer)globalMap.get("FILAS_ARCHIVO") >0)) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If5", 0, "true");
					}
				tOracleInput_9Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If5", 0, "false");
					}   	 
   				}
   			if ((Integer)globalMap.get("FILAS_ARCHIVO") == 0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If3", 0, "true");
					}
				tFixedFlowInput_28Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If3", 0, "false");
					}   	 
   				}



/**
 * [tJava_4 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_4 finally ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_4_SUBPROCESS_STATE", 1);
	}
	


public static class row39Struct implements routines.system.IPersistableRow<row39Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row39Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_14Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_14_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row39Struct row39 = new row39Struct();




	
	/**
	 * [tFileOutputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_1", false);
		start_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row39");
					}
				
		int tos_count_tFileOutputDelimited_1 = 0;
		

String fileName_tFileOutputDelimited_1 = "";
    fileName_tFileOutputDelimited_1 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_1 = null;
    String extension_tFileOutputDelimited_1 = null;
    String directory_tFileOutputDelimited_1 = null;
    if((fileName_tFileOutputDelimited_1.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") < fileName_tFileOutputDelimited_1.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        }
        directory_tFileOutputDelimited_1 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_1 = true;
    java.io.File filetFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
    globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
            int nb_line_tFileOutputDelimited_1 = 0;
            int splitedFileNo_tFileOutputDelimited_1 = 0;
            int currentRow_tFileOutputDelimited_1 = 0;

            final String OUT_DELIM_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_1:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_1:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_1 != null && directory_tFileOutputDelimited_1.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_1 = new java.io.File(directory_tFileOutputDelimited_1);
                        if(!dir_tFileOutputDelimited_1.exists()) {
                            dir_tFileOutputDelimited_1.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_1 = null;

                        java.io.File fileToDelete_tFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
                        if(fileToDelete_tFileOutputDelimited_1.exists()) {
                            fileToDelete_tFileOutputDelimited_1.delete();
                        }
                        outtFileOutputDelimited_1 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_1, false),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_1", outtFileOutputDelimited_1);
                        synchronized (multiThreadLockWrite) {
                                    if(filetFileOutputDelimited_1.length()==0){
                                        outtFileOutputDelimited_1.write("COD_DIVIPOLA");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("INDICADOR");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("SEXO");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("EDAD");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("ETNIA");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("CIE10");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("PRIORIDAD");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("GRUPO_RIESGO");
                                            outtFileOutputDelimited_1.write(OUT_DELIM_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.write("ERROR");
                                        outtFileOutputDelimited_1.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.flush();
                                    }
                        }


resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

 



/**
 * [tFileOutputDelimited_1 begin ] stop
 */



	
	/**
	 * [tHashInput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_14", false);
		start_Hash.put("tHashInput_14", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_14";
	
	
		int tos_count_tHashInput_14 = 0;
		


int nb_line_tHashInput_14 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_14=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashInput_14 = mf_tHashInput_14.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_23");
if(tHashFile_tHashInput_14==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row5Struct> iterator_tHashInput_14 = tHashFile_tHashInput_14.iterator();
while (iterator_tHashInput_14.hasNext()) {
    row5Struct next_tHashInput_14 = iterator_tHashInput_14.next();

	row39.COD_DIVIPOLA = next_tHashInput_14.COD_DIVIPOLA;
	row39.INDICADOR = next_tHashInput_14.INDICADOR;
	row39.SEXO = next_tHashInput_14.SEXO;
	row39.EDAD = next_tHashInput_14.EDAD;
	row39.ETNIA = next_tHashInput_14.ETNIA;
	row39.CIE10 = next_tHashInput_14.CIE10;
	row39.PRIORIDAD = next_tHashInput_14.PRIORIDAD;
	row39.GRUPO_RIESGO = next_tHashInput_14.GRUPO_RIESGO;
	row39.ERROR = next_tHashInput_14.ERROR;

 



/**
 * [tHashInput_14 begin ] stop
 */
	
	/**
	 * [tHashInput_14 main ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 


	tos_count_tHashInput_14++;

/**
 * [tHashInput_14 main ] stop
 */
	
	/**
	 * [tHashInput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 



/**
 * [tHashInput_14 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row39"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_1 = new StringBuilder();
                            if(row39.COD_DIVIPOLA != null) {
                        sb_tFileOutputDelimited_1.append(
                            row39.COD_DIVIPOLA
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                        sb_tFileOutputDelimited_1.append(
                            row39.INDICADOR
                        );
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                        sb_tFileOutputDelimited_1.append(
                            row39.SEXO
                        );
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                        sb_tFileOutputDelimited_1.append(
                            row39.EDAD
                        );
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                        sb_tFileOutputDelimited_1.append(
                            row39.ETNIA
                        );
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row39.CIE10 != null) {
                        sb_tFileOutputDelimited_1.append(
                            row39.CIE10
                        );
                            }
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                        sb_tFileOutputDelimited_1.append(
                            row39.PRIORIDAD
                        );
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                        sb_tFileOutputDelimited_1.append(
                            row39.GRUPO_RIESGO
                        );
                            sb_tFileOutputDelimited_1.append(OUT_DELIM_tFileOutputDelimited_1);
                            if(row39.ERROR != null) {
                        sb_tFileOutputDelimited_1.append(
                            row39.ERROR
                        );
                            }
                    sb_tFileOutputDelimited_1.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);


                    synchronized (multiThreadLockWrite) {
                    nb_line_tFileOutputDelimited_1++;
                    resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

                        outtFileOutputDelimited_1.write(sb_tFileOutputDelimited_1.toString());

                    }



 


	tos_count_tFileOutputDelimited_1++;

/**
 * [tFileOutputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 



/**
 * [tHashInput_14 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_14 end ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	
    

		
			nb_line_tHashInput_14++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_23");
	


	globalMap.put("tHashInput_14_NB_LINE", nb_line_tHashInput_14);       

 

ok_Hash.put("tHashInput_14", true);
end_Hash.put("tHashInput_14", System.currentTimeMillis());




/**
 * [tHashInput_14 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	



		
	   		synchronized (multiThreadLockWrite) {
		
			
					if(outtFileOutputDelimited_1!=null) {
						outtFileOutputDelimited_1.flush();
						outtFileOutputDelimited_1.close();
					}
				
				globalMap.put("tFileOutputDelimited_1_NB_LINE",nb_line_tFileOutputDelimited_1);
				globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
			
		
			}
		
		
		resourceMap.put("finish_tFileOutputDelimited_1", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row39");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_1", true);
end_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk53", 0, "ok");
				}
				tFixedFlowInput_26Process(globalMap);



/**
 * [tFileOutputDelimited_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_14 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 



/**
 * [tHashInput_14 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_1") == null){ 
			
		   		synchronized (multiThreadLockWrite) {
			
				
						java.io.Writer outtFileOutputDelimited_1 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_1");
						if(outtFileOutputDelimited_1!=null) {
							outtFileOutputDelimited_1.flush();
							outtFileOutputDelimited_1.close();
						}
					
				
				}
			
			
		}
	

 



/**
 * [tFileOutputDelimited_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_14_SUBPROCESS_STATE", 1);
	}
	


public static class row65Struct implements routines.system.IPersistableRow<row65Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public Integer ID;

				public Integer getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return null;
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return true;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 0;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public Object CONTENIDO;

				public Object getCONTENIDO () {
					return this.CONTENIDO;
				}

				public Boolean CONTENIDOIsNullable(){
				    return true;
				}
				public Boolean CONTENIDOIsKey(){
				    return false;
				}
				public Integer CONTENIDOLength(){
				    return 0;
				}
				public Integer CONTENIDOPrecision(){
				    return 0;
				}
				public String CONTENIDODefault(){
				
					return null;
				
				}
				public String CONTENIDOComment(){
				
				    return "";
				
				}
				public String CONTENIDOPattern(){
				
					return "";
				
				}
				public String CONTENIDOOriginalDbColumnName(){
				
					return "CONTENIDO";
				
				}

				
			    public String TCONTENIDO;

				public String getTCONTENIDO () {
					return this.TCONTENIDO;
				}

				public Boolean TCONTENIDOIsNullable(){
				    return true;
				}
				public Boolean TCONTENIDOIsKey(){
				    return false;
				}
				public Integer TCONTENIDOLength(){
				    return 0;
				}
				public Integer TCONTENIDOPrecision(){
				    return 0;
				}
				public String TCONTENIDODefault(){
				
					return null;
				
				}
				public String TCONTENIDOComment(){
				
				    return "";
				
				}
				public String TCONTENIDOPattern(){
				
					return "";
				
				}
				public String TCONTENIDOOriginalDbColumnName(){
				
					return "TCONTENIDO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID = readInteger(dis);
					
					this.NOMBRE = readString(dis);
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TCONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID = readInteger(dis);
					
					this.NOMBRE = readString(dis);
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TCONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID,dos);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
					// Object
				
       			    	dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TCONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID,dos);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TCONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",CONTENIDO="+String.valueOf(CONTENIDO));
		sb.append(",TCONTENIDO="+TCONTENIDO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row65Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row64Struct implements routines.system.IPersistableRow<row64Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public Integer ID;

				public Integer getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return false;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return null;
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String NOMBRE;

				public String getNOMBRE () {
					return this.NOMBRE;
				}

				public Boolean NOMBREIsNullable(){
				    return true;
				}
				public Boolean NOMBREIsKey(){
				    return false;
				}
				public Integer NOMBRELength(){
				    return 0;
				}
				public Integer NOMBREPrecision(){
				    return 0;
				}
				public String NOMBREDefault(){
				
					return null;
				
				}
				public String NOMBREComment(){
				
				    return "";
				
				}
				public String NOMBREPattern(){
				
					return "";
				
				}
				public String NOMBREOriginalDbColumnName(){
				
					return "NOMBRE";
				
				}

				
			    public Object CONTENIDO;

				public Object getCONTENIDO () {
					return this.CONTENIDO;
				}

				public Boolean CONTENIDOIsNullable(){
				    return true;
				}
				public Boolean CONTENIDOIsKey(){
				    return false;
				}
				public Integer CONTENIDOLength(){
				    return 0;
				}
				public Integer CONTENIDOPrecision(){
				    return 0;
				}
				public String CONTENIDODefault(){
				
					return null;
				
				}
				public String CONTENIDOComment(){
				
				    return "";
				
				}
				public String CONTENIDOPattern(){
				
					return "";
				
				}
				public String CONTENIDOOriginalDbColumnName(){
				
					return "CONTENIDO";
				
				}

				
			    public String TCONTENIDO;

				public String getTCONTENIDO () {
					return this.TCONTENIDO;
				}

				public Boolean TCONTENIDOIsNullable(){
				    return true;
				}
				public Boolean TCONTENIDOIsKey(){
				    return false;
				}
				public Integer TCONTENIDOLength(){
				    return 0;
				}
				public Integer TCONTENIDOPrecision(){
				    return 0;
				}
				public String TCONTENIDODefault(){
				
					return null;
				
				}
				public String TCONTENIDOComment(){
				
				    return "";
				
				}
				public String TCONTENIDOPattern(){
				
					return "";
				
				}
				public String TCONTENIDOOriginalDbColumnName(){
				
					return "TCONTENIDO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID = readInteger(dis);
					
					this.NOMBRE = readString(dis);
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TCONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID = readInteger(dis);
					
					this.NOMBRE = readString(dis);
					
						this.CONTENIDO = (Object) dis.readObject();
					
					this.TCONTENIDO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID,dos);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
					// Object
				
       			    	dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TCONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID,dos);
					
					// String
				
						writeString(this.NOMBRE,dos);
					
					// Object
				
						dos.clearInstanceCache();
						dos.writeObject(this.CONTENIDO);
					
					// String
				
						writeString(this.TCONTENIDO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",NOMBRE="+NOMBRE);
		sb.append(",CONTENIDO="+String.valueOf(CONTENIDO));
		sb.append(",TCONTENIDO="+TCONTENIDO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row64Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_26Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_26_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row64Struct row64 = new row64Struct();
row65Struct row65 = new row65Struct();





	
	/**
	 * [tJavaRow_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_20", false);
		start_Hash.put("tJavaRow_20", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_20";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row65");
					}
				
		int tos_count_tJavaRow_20 = 0;
		

int nb_line_tJavaRow_20 = 0;

 



/**
 * [tJavaRow_20 begin ] stop
 */



	
	/**
	 * [tOracleSP_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleSP_2", false);
		start_Hash.put("tOracleSP_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleSP_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row64");
					}
				
		int tos_count_tOracleSP_2 = 0;
		

	java.sql.Connection connection_tOracleSP_2 = null;
	connection_tOracleSP_2 = (java.sql.Connection) globalMap.get("conn_tOracleConnection_1");
	

java.sql.CallableStatement statement_tOracleSP_2 = connection_tOracleSP_2.prepareCall("{call " + "VSP.InsAnexoResultado" + "(?,?,?,?)}");

java.sql.Timestamp tmpDate_tOracleSP_2;
String tmpString_tOracleSP_2;

 



/**
 * [tOracleSP_2 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_26 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_26", false);
		start_Hash.put("tFixedFlowInput_26", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_26";
	
	
		int tos_count_tFixedFlowInput_26 = 0;
		

	    for (int i_tFixedFlowInput_26 = 0 ; i_tFixedFlowInput_26 < 1 ; i_tFixedFlowInput_26++) {
	                	            	
    	            		row64.ID = null;        	            	
    	            	        	            	
    	            		row64.NOMBRE = context.archivoSalida;
    	            	        	            	
    	            		row64.CONTENIDO = ExtraerBlob.ByteArrayFromFile(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.archivoSalida+".csv");
    	            	        	            	
    	            		row64.TCONTENIDO = context.FormatoTextoPlano;
    	            	

 



/**
 * [tFixedFlowInput_26 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_26 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_26";
	
	

 


	tos_count_tFixedFlowInput_26++;

/**
 * [tFixedFlowInput_26 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_26 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_26";
	
	

 



/**
 * [tFixedFlowInput_26 process_data_begin ] stop
 */

	
	/**
	 * [tOracleSP_2 main ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row64"
						
						);
					}
					

			// code for the argument 1 (ID) of type 'OUT AUTOMAPPING'
					statement_tOracleSP_2.registerOutParameter(1, java.sql.Types.INTEGER);
			// code for the argument 2 (NOMBRE) of type 'IN AUTOMAPPING'
    					if (row64.NOMBRE == null) {
    						statement_tOracleSP_2.setNull(2, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_2.setString(2, row64.NOMBRE);
    					}
    					
			// code for the argument 3 (CONTENIDO) of type 'IN AUTOMAPPING'
    					if (row64.CONTENIDO == null) {
    						statement_tOracleSP_2.setNull(3, java.sql.Types.OTHER);
    					} else {
    					
                        statement_tOracleSP_2.setObject(3, row64.CONTENIDO);
    					}
    					
			// code for the argument 4 (TCONTENIDO) of type 'IN AUTOMAPPING'
    					if (row64.TCONTENIDO == null) {
    						statement_tOracleSP_2.setNull(4, java.sql.Types.VARCHAR);
    					} else {
    					
                        statement_tOracleSP_2.setString(4, row64.TCONTENIDO);
    					}
    					
		statement_tOracleSP_2.execute();
		
									row65.ID = statement_tOracleSP_2.getInt(1);
									
									if (statement_tOracleSP_2.wasNull()) {
										row65.ID = null;
									}
									
								row65.NOMBRE = row64.NOMBRE;
								
								row65.CONTENIDO = row64.CONTENIDO;
								
								row65.TCONTENIDO = row64.TCONTENIDO;
								

 


	tos_count_tOracleSP_2++;

/**
 * [tOracleSP_2 main ] stop
 */
	
	/**
	 * [tOracleSP_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	

 



/**
 * [tOracleSP_2 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_20 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_20";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row65"
						
						);
					}
					

    context.PriorizacionResultadoId = row65.ID;

    nb_line_tJavaRow_20++;   

 


	tos_count_tJavaRow_20++;

/**
 * [tJavaRow_20 main ] stop
 */
	
	/**
	 * [tJavaRow_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_20";
	
	

 



/**
 * [tJavaRow_20 process_data_begin ] stop
 */
	
	/**
	 * [tJavaRow_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_20";
	
	

 



/**
 * [tJavaRow_20 process_data_end ] stop
 */



	
	/**
	 * [tOracleSP_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	

 



/**
 * [tOracleSP_2 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_26 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_26";
	
	

 



/**
 * [tFixedFlowInput_26 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_26 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_26";
	
	

        }
        globalMap.put("tFixedFlowInput_26_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_26", true);
end_Hash.put("tFixedFlowInput_26", System.currentTimeMillis());




/**
 * [tFixedFlowInput_26 end ] stop
 */

	
	/**
	 * [tOracleSP_2 end ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	


	statement_tOracleSP_2.close();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row64");
			  	}
			  	
 

ok_Hash.put("tOracleSP_2", true);
end_Hash.put("tOracleSP_2", System.currentTimeMillis());




/**
 * [tOracleSP_2 end ] stop
 */

	
	/**
	 * [tJavaRow_20 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_20";
	
	

globalMap.put("tJavaRow_20_NB_LINE",nb_line_tJavaRow_20);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row65");
			  	}
			  	
 

ok_Hash.put("tJavaRow_20", true);
end_Hash.put("tJavaRow_20", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk49", 0, "ok");
				}
				tFixedFlowInput_25Process(globalMap);



/**
 * [tJavaRow_20 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_26 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_26";
	
	

 



/**
 * [tFixedFlowInput_26 finally ] stop
 */

	
	/**
	 * [tOracleSP_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleSP_2";
	
	

 



/**
 * [tOracleSP_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_20 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_20";
	
	

 



/**
 * [tJavaRow_20 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_26_SUBPROCESS_STATE", 1);
	}
	


public static class row63Struct implements routines.system.IPersistableRow<row63Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer ID;

				public Integer getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return null;
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				
			    public Integer RESULTADO;

				public Integer getRESULTADO () {
					return this.RESULTADO;
				}

				public Boolean RESULTADOIsNullable(){
				    return true;
				}
				public Boolean RESULTADOIsKey(){
				    return false;
				}
				public Integer RESULTADOLength(){
				    return 0;
				}
				public Integer RESULTADOPrecision(){
				    return 0;
				}
				public String RESULTADODefault(){
				
					return null;
				
				}
				public String RESULTADOComment(){
				
				    return "";
				
				}
				public String RESULTADOPattern(){
				
					return "";
				
				}
				public String RESULTADOOriginalDbColumnName(){
				
					return "RESULTADO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row63Struct other = (row63Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row63Struct other) {

		other.ID = this.ID;
	            other.ESTADO = this.ESTADO;
	            other.RESULTADO = this.RESULTADO;
	            
	}

	public void copyKeysDataTo(row63Struct other) {

		other.ID = this.ID;
	            	
	}



	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID = readInteger(dis);
					
					this.ESTADO = readString(dis);
					
						this.RESULTADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID = readInteger(dis);
					
					this.ESTADO = readString(dis);
					
						this.RESULTADO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// Integer
				
						writeInteger(this.RESULTADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// Integer
				
						writeInteger(this.RESULTADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",ESTADO="+ESTADO);
		sb.append(",RESULTADO="+String.valueOf(RESULTADO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row63Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_25Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_25_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row63Struct row63 = new row63Struct();




	
	/**
	 * [tOracleOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_4", false);
		start_Hash.put("tOracleOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row63");
					}
				
		int tos_count_tOracleOutput_4 = 0;
		






        int updateKeyCount_tOracleOutput_4 = 1;
        if(updateKeyCount_tOracleOutput_4 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_4 == 3 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_4 = 0;
    int nb_line_update_tOracleOutput_4 = 0;
    int nb_line_inserted_tOracleOutput_4 = 0;
    int nb_line_deleted_tOracleOutput_4 = 0;
    int nb_line_rejected_tOracleOutput_4 = 0;

    int tmp_batchUpdateCount_tOracleOutput_4 = 0;

    int deletedCount_tOracleOutput_4=0;
    int updatedCount_tOracleOutput_4=0;
    int insertedCount_tOracleOutput_4=0;
    int rowsToCommitCount_tOracleOutput_4=0;
    int rejectedCount_tOracleOutput_4=0;

    boolean whetherReject_tOracleOutput_4 = false;

    java.sql.Connection conn_tOracleOutput_4 = null;

    //optional table
    String dbschema_tOracleOutput_4 = null;
    String tableName_tOracleOutput_4 = null;
        dbschema_tOracleOutput_4 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_4 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_4=0;

        if(dbschema_tOracleOutput_4 == null || dbschema_tOracleOutput_4.trim().length() == 0) {
            tableName_tOracleOutput_4 = ("VSP_PRIORIZACION");
        } else {
            tableName_tOracleOutput_4 = dbschema_tOracleOutput_4 + "." + ("VSP_PRIORIZACION");
        }
                String update_tOracleOutput_4 = "UPDATE " + tableName_tOracleOutput_4 + " SET ESTADO = ?,RESULTADO = ? WHERE ID = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_4 = conn_tOracleOutput_4.prepareStatement(update_tOracleOutput_4);
                resourceMap.put("pstmt_tOracleOutput_4", pstmt_tOracleOutput_4);





 



/**
 * [tOracleOutput_4 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_25 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_25", false);
		start_Hash.put("tFixedFlowInput_25", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_25";
	
	
		int tos_count_tFixedFlowInput_25 = 0;
		

	    for (int i_tFixedFlowInput_25 = 0 ; i_tFixedFlowInput_25 < 1 ; i_tFixedFlowInput_25++) {
	                	            	
    	            		row63.ID = context.PriorizacionId;
    	            	        	            	
    	            		row63.ESTADO = context.EstAnexoError;
    	            	        	            	
    	            		row63.RESULTADO = context.PriorizacionResultadoId;
    	            	

 



/**
 * [tFixedFlowInput_25 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_25 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_25";
	
	

 


	tos_count_tFixedFlowInput_25++;

/**
 * [tFixedFlowInput_25 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_25 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_25";
	
	

 



/**
 * [tFixedFlowInput_25 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_4 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row63"
						
						);
					}
					



        whetherReject_tOracleOutput_4 = false;
                    if(row63.ESTADO == null) {
pstmt_tOracleOutput_4.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_4.setString(1, row63.ESTADO);
}

                    if(row63.RESULTADO == null) {
pstmt_tOracleOutput_4.setNull(2, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_4.setInt(2, row63.RESULTADO);
}


                    if(row63.ID == null) {
pstmt_tOracleOutput_4.setNull(3 + count_tOracleOutput_4, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_4.setInt(3 + count_tOracleOutput_4, row63.ID);
}

                try {
                    nb_line_tOracleOutput_4++;
                    int processedCount_tOracleOutput_4 = pstmt_tOracleOutput_4.executeUpdate();
                    updatedCount_tOracleOutput_4 += processedCount_tOracleOutput_4;
                    rowsToCommitCount_tOracleOutput_4 += processedCount_tOracleOutput_4;
                } catch(java.lang.Exception e_tOracleOutput_4) {
globalMap.put("tOracleOutput_4_ERROR_MESSAGE",e_tOracleOutput_4.getMessage());
                    whetherReject_tOracleOutput_4 = true;
                            System.err.print(e_tOracleOutput_4.getMessage());
                }

 


	tos_count_tOracleOutput_4++;

/**
 * [tOracleOutput_4 main ] stop
 */
	
	/**
	 * [tOracleOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	

 



/**
 * [tOracleOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	

 



/**
 * [tOracleOutput_4 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_25 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_25";
	
	

 



/**
 * [tFixedFlowInput_25 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_25 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_25";
	
	

        }
        globalMap.put("tFixedFlowInput_25_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_25", true);
end_Hash.put("tFixedFlowInput_25", System.currentTimeMillis());




/**
 * [tFixedFlowInput_25 end ] stop
 */

	
	/**
	 * [tOracleOutput_4 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	
	



	
        if(pstmt_tOracleOutput_4 != null) {
			
				pstmt_tOracleOutput_4.close();
				resourceMap.remove("pstmt_tOracleOutput_4");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_4", true);

	
	nb_line_deleted_tOracleOutput_4=nb_line_deleted_tOracleOutput_4+ deletedCount_tOracleOutput_4;
	nb_line_update_tOracleOutput_4=nb_line_update_tOracleOutput_4 + updatedCount_tOracleOutput_4;
	nb_line_inserted_tOracleOutput_4=nb_line_inserted_tOracleOutput_4 + insertedCount_tOracleOutput_4;
	nb_line_rejected_tOracleOutput_4=nb_line_rejected_tOracleOutput_4 + rejectedCount_tOracleOutput_4;
	
        globalMap.put("tOracleOutput_4_NB_LINE",nb_line_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_UPDATED",nb_line_update_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_4);
        globalMap.put("tOracleOutput_4_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_4);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row63");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_4", true);
end_Hash.put("tOracleOutput_4", System.currentTimeMillis());




/**
 * [tOracleOutput_4 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_25 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_25";
	
	

 



/**
 * [tFixedFlowInput_25 finally ] stop
 */

	
	/**
	 * [tOracleOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_4";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_4") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_4 = null;
                if ((pstmtToClose_tOracleOutput_4 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_4")) != null) {
                    pstmtToClose_tOracleOutput_4.close();
                }
    }
 



/**
 * [tOracleOutput_4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_25_SUBPROCESS_STATE", 1);
	}
	


public static class row44Struct implements routines.system.IPersistableRow<row44Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public Integer ID_INDICADOR;

				public Integer getID_INDICADOR () {
					return this.ID_INDICADOR;
				}

				public Boolean ID_INDICADORIsNullable(){
				    return true;
				}
				public Boolean ID_INDICADORIsKey(){
				    return false;
				}
				public Integer ID_INDICADORLength(){
				    return 0;
				}
				public Integer ID_INDICADORPrecision(){
				    return 0;
				}
				public String ID_INDICADORDefault(){
				
					return null;
				
				}
				public String ID_INDICADORComment(){
				
				    return "";
				
				}
				public String ID_INDICADORPattern(){
				
					return "";
				
				}
				public String ID_INDICADOROriginalDbColumnName(){
				
					return "ID_INDICADOR";
				
				}

				
			    public Integer ID_TIPO_INDICADOR;

				public Integer getID_TIPO_INDICADOR () {
					return this.ID_TIPO_INDICADOR;
				}

				public Boolean ID_TIPO_INDICADORIsNullable(){
				    return true;
				}
				public Boolean ID_TIPO_INDICADORIsKey(){
				    return false;
				}
				public Integer ID_TIPO_INDICADORLength(){
				    return 0;
				}
				public Integer ID_TIPO_INDICADORPrecision(){
				    return 0;
				}
				public String ID_TIPO_INDICADORDefault(){
				
					return null;
				
				}
				public String ID_TIPO_INDICADORComment(){
				
				    return "";
				
				}
				public String ID_TIPO_INDICADORPattern(){
				
					return "";
				
				}
				public String ID_TIPO_INDICADOROriginalDbColumnName(){
				
					return "ID_TIPO_INDICADOR";
				
				}

				
			    public Integer CODIGO_TIPO_INDICADOR;

				public Integer getCODIGO_TIPO_INDICADOR () {
					return this.CODIGO_TIPO_INDICADOR;
				}

				public Boolean CODIGO_TIPO_INDICADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_TIPO_INDICADORIsKey(){
				    return false;
				}
				public Integer CODIGO_TIPO_INDICADORLength(){
				    return 0;
				}
				public Integer CODIGO_TIPO_INDICADORPrecision(){
				    return 0;
				}
				public String CODIGO_TIPO_INDICADORDefault(){
				
					return null;
				
				}
				public String CODIGO_TIPO_INDICADORComment(){
				
				    return "";
				
				}
				public String CODIGO_TIPO_INDICADORPattern(){
				
					return "";
				
				}
				public String CODIGO_TIPO_INDICADOROriginalDbColumnName(){
				
					return "CODIGO_TIPO_INDICADOR";
				
				}

				
			    public Integer CIE10;

				public Integer getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return true;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 0;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public Integer ID_GRUPO_RIESGO;

				public Integer getID_GRUPO_RIESGO () {
					return this.ID_GRUPO_RIESGO;
				}

				public Boolean ID_GRUPO_RIESGOIsNullable(){
				    return true;
				}
				public Boolean ID_GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer ID_GRUPO_RIESGOLength(){
				    return 0;
				}
				public Integer ID_GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String ID_GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String ID_GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String ID_GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String ID_GRUPO_RIESGOOriginalDbColumnName(){
				
					return "ID_GRUPO_RIESGO";
				
				}

				
			    public Integer CODIGO_GRUPO_RIESGO;

				public Integer getCODIGO_GRUPO_RIESGO () {
					return this.CODIGO_GRUPO_RIESGO;
				}

				public Boolean CODIGO_GRUPO_RIESGOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer CODIGO_GRUPO_RIESGOLength(){
				    return 0;
				}
				public Integer CODIGO_GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String CODIGO_GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String CODIGO_GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String CODIGO_GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String CODIGO_GRUPO_RIESGOOriginalDbColumnName(){
				
					return "CODIGO_GRUPO_RIESGO";
				
				}

				
			    public Integer ID_EDAD;

				public Integer getID_EDAD () {
					return this.ID_EDAD;
				}

				public Boolean ID_EDADIsNullable(){
				    return true;
				}
				public Boolean ID_EDADIsKey(){
				    return false;
				}
				public Integer ID_EDADLength(){
				    return 0;
				}
				public Integer ID_EDADPrecision(){
				    return 0;
				}
				public String ID_EDADDefault(){
				
					return null;
				
				}
				public String ID_EDADComment(){
				
				    return "";
				
				}
				public String ID_EDADPattern(){
				
					return "";
				
				}
				public String ID_EDADOriginalDbColumnName(){
				
					return "ID_EDAD";
				
				}

				
			    public Integer CODIGO_EDAD;

				public Integer getCODIGO_EDAD () {
					return this.CODIGO_EDAD;
				}

				public Boolean CODIGO_EDADIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EDADIsKey(){
				    return false;
				}
				public Integer CODIGO_EDADLength(){
				    return 0;
				}
				public Integer CODIGO_EDADPrecision(){
				    return 0;
				}
				public String CODIGO_EDADDefault(){
				
					return null;
				
				}
				public String CODIGO_EDADComment(){
				
				    return "";
				
				}
				public String CODIGO_EDADPattern(){
				
					return "";
				
				}
				public String CODIGO_EDADOriginalDbColumnName(){
				
					return "CODIGO_EDAD";
				
				}

				
			    public Integer ID_ETNIA;

				public Integer getID_ETNIA () {
					return this.ID_ETNIA;
				}

				public Boolean ID_ETNIAIsNullable(){
				    return true;
				}
				public Boolean ID_ETNIAIsKey(){
				    return false;
				}
				public Integer ID_ETNIALength(){
				    return 0;
				}
				public Integer ID_ETNIAPrecision(){
				    return 0;
				}
				public String ID_ETNIADefault(){
				
					return null;
				
				}
				public String ID_ETNIAComment(){
				
				    return "";
				
				}
				public String ID_ETNIAPattern(){
				
					return "";
				
				}
				public String ID_ETNIAOriginalDbColumnName(){
				
					return "ID_ETNIA";
				
				}

				
			    public Integer CODIGO_ETNIA;

				public Integer getCODIGO_ETNIA () {
					return this.CODIGO_ETNIA;
				}

				public Boolean CODIGO_ETNIAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ETNIAIsKey(){
				    return false;
				}
				public Integer CODIGO_ETNIALength(){
				    return 0;
				}
				public Integer CODIGO_ETNIAPrecision(){
				    return 0;
				}
				public String CODIGO_ETNIADefault(){
				
					return null;
				
				}
				public String CODIGO_ETNIAComment(){
				
				    return "";
				
				}
				public String CODIGO_ETNIAPattern(){
				
					return "";
				
				}
				public String CODIGO_ETNIAOriginalDbColumnName(){
				
					return "CODIGO_ETNIA";
				
				}

				
			    public Integer ID_SEXO;

				public Integer getID_SEXO () {
					return this.ID_SEXO;
				}

				public Boolean ID_SEXOIsNullable(){
				    return true;
				}
				public Boolean ID_SEXOIsKey(){
				    return false;
				}
				public Integer ID_SEXOLength(){
				    return 0;
				}
				public Integer ID_SEXOPrecision(){
				    return 0;
				}
				public String ID_SEXODefault(){
				
					return null;
				
				}
				public String ID_SEXOComment(){
				
				    return "";
				
				}
				public String ID_SEXOPattern(){
				
					return "";
				
				}
				public String ID_SEXOOriginalDbColumnName(){
				
					return "ID_SEXO";
				
				}

				
			    public Integer CODIGO_SEXO;

				public Integer getCODIGO_SEXO () {
					return this.CODIGO_SEXO;
				}

				public Boolean CODIGO_SEXOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SEXOIsKey(){
				    return false;
				}
				public Integer CODIGO_SEXOLength(){
				    return 0;
				}
				public Integer CODIGO_SEXOPrecision(){
				    return 0;
				}
				public String CODIGO_SEXODefault(){
				
					return null;
				
				}
				public String CODIGO_SEXOComment(){
				
				    return "";
				
				}
				public String CODIGO_SEXOPattern(){
				
					return "";
				
				}
				public String CODIGO_SEXOOriginalDbColumnName(){
				
					return "CODIGO_SEXO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID_INDICADOR = readInteger(dis);
					
						this.ID_TIPO_INDICADOR = readInteger(dis);
					
						this.CODIGO_TIPO_INDICADOR = readInteger(dis);
					
						this.CIE10 = readInteger(dis);
					
						this.ID_GRUPO_RIESGO = readInteger(dis);
					
						this.CODIGO_GRUPO_RIESGO = readInteger(dis);
					
						this.ID_EDAD = readInteger(dis);
					
						this.CODIGO_EDAD = readInteger(dis);
					
						this.ID_ETNIA = readInteger(dis);
					
						this.CODIGO_ETNIA = readInteger(dis);
					
						this.ID_SEXO = readInteger(dis);
					
						this.CODIGO_SEXO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID_INDICADOR = readInteger(dis);
					
						this.ID_TIPO_INDICADOR = readInteger(dis);
					
						this.CODIGO_TIPO_INDICADOR = readInteger(dis);
					
						this.CIE10 = readInteger(dis);
					
						this.ID_GRUPO_RIESGO = readInteger(dis);
					
						this.CODIGO_GRUPO_RIESGO = readInteger(dis);
					
						this.ID_EDAD = readInteger(dis);
					
						this.CODIGO_EDAD = readInteger(dis);
					
						this.ID_ETNIA = readInteger(dis);
					
						this.CODIGO_ETNIA = readInteger(dis);
					
						this.ID_SEXO = readInteger(dis);
					
						this.CODIGO_SEXO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_INDICADOR,dos);
					
					// Integer
				
						writeInteger(this.ID_TIPO_INDICADOR,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_TIPO_INDICADOR,dos);
					
					// Integer
				
						writeInteger(this.CIE10,dos);
					
					// Integer
				
						writeInteger(this.ID_GRUPO_RIESGO,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_GRUPO_RIESGO,dos);
					
					// Integer
				
						writeInteger(this.ID_EDAD,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_EDAD,dos);
					
					// Integer
				
						writeInteger(this.ID_ETNIA,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_ETNIA,dos);
					
					// Integer
				
						writeInteger(this.ID_SEXO,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_SEXO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID_INDICADOR,dos);
					
					// Integer
				
						writeInteger(this.ID_TIPO_INDICADOR,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_TIPO_INDICADOR,dos);
					
					// Integer
				
						writeInteger(this.CIE10,dos);
					
					// Integer
				
						writeInteger(this.ID_GRUPO_RIESGO,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_GRUPO_RIESGO,dos);
					
					// Integer
				
						writeInteger(this.ID_EDAD,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_EDAD,dos);
					
					// Integer
				
						writeInteger(this.ID_ETNIA,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_ETNIA,dos);
					
					// Integer
				
						writeInteger(this.ID_SEXO,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_SEXO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_INDICADOR="+String.valueOf(ID_INDICADOR));
		sb.append(",ID_TIPO_INDICADOR="+String.valueOf(ID_TIPO_INDICADOR));
		sb.append(",CODIGO_TIPO_INDICADOR="+String.valueOf(CODIGO_TIPO_INDICADOR));
		sb.append(",CIE10="+String.valueOf(CIE10));
		sb.append(",ID_GRUPO_RIESGO="+String.valueOf(ID_GRUPO_RIESGO));
		sb.append(",CODIGO_GRUPO_RIESGO="+String.valueOf(CODIGO_GRUPO_RIESGO));
		sb.append(",ID_EDAD="+String.valueOf(ID_EDAD));
		sb.append(",CODIGO_EDAD="+String.valueOf(CODIGO_EDAD));
		sb.append(",ID_ETNIA="+String.valueOf(ID_ETNIA));
		sb.append(",CODIGO_ETNIA="+String.valueOf(CODIGO_ETNIA));
		sb.append(",ID_SEXO="+String.valueOf(ID_SEXO));
		sb.append(",CODIGO_SEXO="+String.valueOf(CODIGO_SEXO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row44Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tOracleInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tOracleInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row44Struct row44 = new row44Struct();




	
	/**
	 * [tHashOutput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_11", false);
		start_Hash.put("tHashOutput_11", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row44");
					}
				
		int tos_count_tHashOutput_11 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_11=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row44Struct> tHashFile_tHashOutput_11 = null;
		String hashKey_tHashOutput_11 = "tHashFile_ETL_vigilancia_" + pid + "_tHashOutput_11";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_11)){
			    if(mf_tHashOutput_11.getResourceMap().get(hashKey_tHashOutput_11) == null){
	      		    mf_tHashOutput_11.getResourceMap().put(hashKey_tHashOutput_11, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row44Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_11 = mf_tHashOutput_11.getResourceMap().get(hashKey_tHashOutput_11);
			    }else{
			    	tHashFile_tHashOutput_11 = mf_tHashOutput_11.getResourceMap().get(hashKey_tHashOutput_11);
			    }
			}
        int nb_line_tHashOutput_11 = 0;

 



/**
 * [tHashOutput_11 begin ] stop
 */



	
	/**
	 * [tOracleInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleInput_9", false);
		start_Hash.put("tOracleInput_9", System.currentTimeMillis());
		
	
	currentComponent="tOracleInput_9";
	
	
		int tos_count_tOracleInput_9 = 0;
		
	


	
		    int nb_line_tOracleInput_9 = 0;
		    java.sql.Connection conn_tOracleInput_9 = null;
				conn_tOracleInput_9 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
				
                boolean isTimeZoneNull_tOracleInput_9 = false;
				boolean isConnectionWrapped_tOracleInput_9 = !(conn_tOracleInput_9 instanceof oracle.jdbc.OracleConnection) && conn_tOracleInput_9.isWrapperFor(oracle.jdbc.OracleConnection.class);
				oracle.jdbc.OracleConnection unwrappedOraConn_tOracleInput_9 = null;
                if (isConnectionWrapped_tOracleInput_9) {
					unwrappedOraConn_tOracleInput_9 = conn_tOracleInput_9.unwrap(oracle.jdbc.OracleConnection.class);
                    if (unwrappedOraConn_tOracleInput_9 != null) {
                        isTimeZoneNull_tOracleInput_9 = (unwrappedOraConn_tOracleInput_9.getSessionTimeZone() == null);
                    }
                } else {
                    isTimeZoneNull_tOracleInput_9 = (((oracle.jdbc.OracleConnection)conn_tOracleInput_9).getSessionTimeZone() == null);
                }

				if(isTimeZoneNull_tOracleInput_9) {
					java.sql.Statement stmtGetTZ_tOracleInput_9 = conn_tOracleInput_9.createStatement();
					java.sql.ResultSet rsGetTZ_tOracleInput_9 = stmtGetTZ_tOracleInput_9.executeQuery("select sessiontimezone from dual");
					String sessionTimezone_tOracleInput_9 = java.util.TimeZone.getDefault().getID();
					while (rsGetTZ_tOracleInput_9.next()) {
						sessionTimezone_tOracleInput_9 = rsGetTZ_tOracleInput_9.getString(1);
					}
					if (isConnectionWrapped_tOracleInput_9 && unwrappedOraConn_tOracleInput_9 != null) {
                        unwrappedOraConn_tOracleInput_9.setSessionTimeZone(sessionTimezone_tOracleInput_9);
                    } else {
                        ((oracle.jdbc.OracleConnection)conn_tOracleInput_9).setSessionTimeZone(sessionTimezone_tOracleInput_9);
                    }
				}
			
		    
			java.sql.Statement stmt_tOracleInput_9 = conn_tOracleInput_9.createStatement();

		    String dbquery_tOracleInput_9 = "SELECT\n       VIN.ID AS ID_INDICADOR,\n       VTI.ID AS ID_TIPO_INDICADOR,\n       VTI.CODIGO AS CODIGO_TIPO_INDICADOR"
+",\n       VIN.CIE10 AS CIE10,\n       VGR.ID AS ID_GRUPO_RIESGO,\n       VGR.CODIGO AS CODIGO_GRUPO_RIESGO,\n       GRE."
+"ID AS ID_EDAD,\n       NVL(GRE.CODIGO,999) AS CODIGO_EDAD,\n       GET.ID AS ID_ETNIA,\n       NVL(GET.CODIGO,9) AS CODI"
+"GO_ETNIA,\n       GSX.ID AS ID_SEXO,\n       NVL(GSX.CODIGO,9) AS CODIGO_SEXO\nFROM\n       SALUDSIS.VSP_INDICADORES VIN"
+"\n       INNER JOIN SALUDSIS.VSP_TINDICADORES VTI ON VIN.TINDICADORES_ID = VTI.ID\n       LEFT JOIN SALUDSIS.VSP_GRUPOSR"
+"IESGO VGR ON VIN.GRIESGO_ID = VGR.ID AND VGR.ESTREGISTRO_ID = \n 1\n       LEFT JOIN SALUDSIS.VSP_INDICADORES_EDAD VED ON"
+" VIN.ID = VED.INDICADORES_ID AND \n VED.ESTREGISTRO_ID = 1 \n       LEFT JOIN SALUDSIS.GEN_RANGOEDAD GRE ON VED.CODEDAD_I"
+"D = GRE.ID AND GRE.ESTREGISTRO_ID = 1\n       LEFT JOIN SALUDSIS.VSP_INDICADORES_ETNICAS VET ON VIN.ID = VET.INDICADORES"
+"_ID AND \n VET.ESTREGISTRO_ID = 1 \n       LEFT JOIN SALUDSIS.GEN_ETNICAS GET ON VET.ETNICA_ID = GET.ID AND GET.ESTREGIST"
+"RO_ID = 1\n       LEFT JOIN SALUDSIS.VSP_INDICADORES_SEXOS VES ON VIN.ID = VES.INDICADORES_ID AND \n VES.ESTREGISTRO_ID ="
+" 1\n       LEFT JOIN SALUDSIS.GEN_SEXOS GSX ON VES.SEXOS_ID = GSX.ID AND GSX.ESTREGISTRO_ID = 1\nWHERE\n       VIN.ESTRE"
+"GISTRO_ID = 1";
		    

		    globalMap.put("tOracleInput_9_QUERY",dbquery_tOracleInput_9);

		    java.sql.ResultSet rs_tOracleInput_9 = null;

		    try {
		    	rs_tOracleInput_9 = stmt_tOracleInput_9.executeQuery(dbquery_tOracleInput_9);
		    	java.sql.ResultSetMetaData rsmd_tOracleInput_9 = rs_tOracleInput_9.getMetaData();
		    	int colQtyInRs_tOracleInput_9 = rsmd_tOracleInput_9.getColumnCount();

		    String tmpContent_tOracleInput_9 = null;
		    
		    
		    while (rs_tOracleInput_9.next()) {
		        nb_line_tOracleInput_9++;
		        
							if(colQtyInRs_tOracleInput_9 < 1) {
								row44.ID_INDICADOR = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(1) != null) {
						row44.ID_INDICADOR = rs_tOracleInput_9.getInt(1);
					} else {
				
						row44.ID_INDICADOR = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_9 < 2) {
								row44.ID_TIPO_INDICADOR = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(2) != null) {
						row44.ID_TIPO_INDICADOR = rs_tOracleInput_9.getInt(2);
					} else {
				
						row44.ID_TIPO_INDICADOR = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_9 < 3) {
								row44.CODIGO_TIPO_INDICADOR = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(3) != null) {
						row44.CODIGO_TIPO_INDICADOR = rs_tOracleInput_9.getInt(3);
					} else {
				
						row44.CODIGO_TIPO_INDICADOR = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_9 < 4) {
								row44.CIE10 = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(4) != null) {
						row44.CIE10 = rs_tOracleInput_9.getInt(4);
					} else {
				
						row44.CIE10 = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_9 < 5) {
								row44.ID_GRUPO_RIESGO = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(5) != null) {
						row44.ID_GRUPO_RIESGO = rs_tOracleInput_9.getInt(5);
					} else {
				
						row44.ID_GRUPO_RIESGO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_9 < 6) {
								row44.CODIGO_GRUPO_RIESGO = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(6) != null) {
						row44.CODIGO_GRUPO_RIESGO = rs_tOracleInput_9.getInt(6);
					} else {
				
						row44.CODIGO_GRUPO_RIESGO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_9 < 7) {
								row44.ID_EDAD = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(7) != null) {
						row44.ID_EDAD = rs_tOracleInput_9.getInt(7);
					} else {
				
						row44.ID_EDAD = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_9 < 8) {
								row44.CODIGO_EDAD = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(8) != null) {
						row44.CODIGO_EDAD = rs_tOracleInput_9.getInt(8);
					} else {
				
						row44.CODIGO_EDAD = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_9 < 9) {
								row44.ID_ETNIA = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(9) != null) {
						row44.ID_ETNIA = rs_tOracleInput_9.getInt(9);
					} else {
				
						row44.ID_ETNIA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_9 < 10) {
								row44.CODIGO_ETNIA = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(10) != null) {
						row44.CODIGO_ETNIA = rs_tOracleInput_9.getInt(10);
					} else {
				
						row44.CODIGO_ETNIA = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_9 < 11) {
								row44.ID_SEXO = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(11) != null) {
						row44.ID_SEXO = rs_tOracleInput_9.getInt(11);
					} else {
				
						row44.ID_SEXO = null;
					}
		                    }
							if(colQtyInRs_tOracleInput_9 < 12) {
								row44.CODIGO_SEXO = null;
							} else {
		                          
					if(rs_tOracleInput_9.getObject(12) != null) {
						row44.CODIGO_SEXO = rs_tOracleInput_9.getInt(12);
					} else {
				
						row44.CODIGO_SEXO = null;
					}
		                    }
					




 



/**
 * [tOracleInput_9 begin ] stop
 */
	
	/**
	 * [tOracleInput_9 main ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 


	tos_count_tOracleInput_9++;

/**
 * [tOracleInput_9 main ] stop
 */
	
	/**
	 * [tOracleInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 



/**
 * [tOracleInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_11 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row44"
						
						);
					}
					



    
		row44Struct oneRow_tHashOutput_11 = new row44Struct();
				
					oneRow_tHashOutput_11.ID_INDICADOR = row44.ID_INDICADOR;
					oneRow_tHashOutput_11.ID_TIPO_INDICADOR = row44.ID_TIPO_INDICADOR;
					oneRow_tHashOutput_11.CODIGO_TIPO_INDICADOR = row44.CODIGO_TIPO_INDICADOR;
					oneRow_tHashOutput_11.CIE10 = row44.CIE10;
					oneRow_tHashOutput_11.ID_GRUPO_RIESGO = row44.ID_GRUPO_RIESGO;
					oneRow_tHashOutput_11.CODIGO_GRUPO_RIESGO = row44.CODIGO_GRUPO_RIESGO;
					oneRow_tHashOutput_11.ID_EDAD = row44.ID_EDAD;
					oneRow_tHashOutput_11.CODIGO_EDAD = row44.CODIGO_EDAD;
					oneRow_tHashOutput_11.ID_ETNIA = row44.ID_ETNIA;
					oneRow_tHashOutput_11.CODIGO_ETNIA = row44.CODIGO_ETNIA;
					oneRow_tHashOutput_11.ID_SEXO = row44.ID_SEXO;
					oneRow_tHashOutput_11.CODIGO_SEXO = row44.CODIGO_SEXO;
		
        tHashFile_tHashOutput_11.put(oneRow_tHashOutput_11);
        nb_line_tHashOutput_11 ++;

 


	tos_count_tHashOutput_11++;

/**
 * [tHashOutput_11 main ] stop
 */
	
	/**
	 * [tHashOutput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	

 



/**
 * [tHashOutput_11 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	

 



/**
 * [tHashOutput_11 process_data_end ] stop
 */



	
	/**
	 * [tOracleInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 



/**
 * [tOracleInput_9 process_data_end ] stop
 */
	
	/**
	 * [tOracleInput_9 end ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

}
}finally{
	if (rs_tOracleInput_9 != null) {
		rs_tOracleInput_9.close();
	}
	if (stmt_tOracleInput_9 != null) {
		stmt_tOracleInput_9.close();
	}
}

globalMap.put("tOracleInput_9_NB_LINE",nb_line_tOracleInput_9);
 

ok_Hash.put("tOracleInput_9", true);
end_Hash.put("tOracleInput_9", System.currentTimeMillis());




/**
 * [tOracleInput_9 end ] stop
 */

	
	/**
	 * [tHashOutput_11 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	
globalMap.put("tHashOutput_11_NB_LINE", nb_line_tHashOutput_11);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row44");
			  	}
			  	
 

ok_Hash.put("tHashOutput_11", true);
end_Hash.put("tHashOutput_11", System.currentTimeMillis());




/**
 * [tHashOutput_11 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tOracleInput_9:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk20", 0, "ok");
								} 
							
							tJava_9Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tOracleInput_9 finally ] start
	 */

	

	
	
	currentComponent="tOracleInput_9";
	
	

 



/**
 * [tOracleInput_9 finally ] stop
 */

	
	/**
	 * [tHashOutput_11 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	

 



/**
 * [tHashOutput_11 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tOracleInput_9_SUBPROCESS_STATE", 1);
	}
	


public void tJava_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_9", false);
		start_Hash.put("tJava_9", System.currentTimeMillis());
		
	
	currentComponent="tJava_9";
	
	
		int tos_count_tJava_9 = 0;
		


System.out.println("****************** INICIANDO VALIDACION DE CONFIGURACION DE ARCHIVO ************");

 



/**
 * [tJava_9 begin ] stop
 */
	
	/**
	 * [tJava_9 main ] start
	 */

	

	
	
	currentComponent="tJava_9";
	
	

 


	tos_count_tJava_9++;

/**
 * [tJava_9 main ] stop
 */
	
	/**
	 * [tJava_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_9";
	
	

 



/**
 * [tJava_9 process_data_begin ] stop
 */
	
	/**
	 * [tJava_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_9";
	
	

 



/**
 * [tJava_9 process_data_end ] stop
 */
	
	/**
	 * [tJava_9 end ] start
	 */

	

	
	
	currentComponent="tJava_9";
	
	

 

ok_Hash.put("tJava_9", true);
end_Hash.put("tJava_9", System.currentTimeMillis());

   			if ((Integer)globalMap.get("FILAS_ERROR")==0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If11", 0, "true");
					}
				tHashInput_15Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If11", 0, "false");
					}   	 
   				}



/**
 * [tJava_9 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_9:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk22", 0, "ok");
								} 
							
							tJava_10Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_9 finally ] start
	 */

	

	
	
	currentComponent="tJava_9";
	
	

 



/**
 * [tJava_9 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_9_SUBPROCESS_STATE", 1);
	}
	


public void tJava_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_10", false);
		start_Hash.put("tJava_10", System.currentTimeMillis());
		
	
	currentComponent="tJava_10";
	
	
		int tos_count_tJava_10 = 0;
		


System.out.println("****************** INICIANDO VALIDACION DE CONTEO DE DIVIPOLA DE ARCHIVO *******");

 



/**
 * [tJava_10 begin ] stop
 */
	
	/**
	 * [tJava_10 main ] start
	 */

	

	
	
	currentComponent="tJava_10";
	
	

 


	tos_count_tJava_10++;

/**
 * [tJava_10 main ] stop
 */
	
	/**
	 * [tJava_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_10";
	
	

 



/**
 * [tJava_10 process_data_begin ] stop
 */
	
	/**
	 * [tJava_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_10";
	
	

 



/**
 * [tJava_10 process_data_end ] stop
 */
	
	/**
	 * [tJava_10 end ] start
	 */

	

	
	
	currentComponent="tJava_10";
	
	

 

ok_Hash.put("tJava_10", true);
end_Hash.put("tJava_10", System.currentTimeMillis());

   			if ((Integer)globalMap.get("FILAS_ERROR")==0 && (Integer)globalMap.get("FILAS_ERROR_CONFIGURACION")==0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If12", 0, "true");
					}
				tHashInput_21Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If12", 0, "false");
					}   	 
   				}



/**
 * [tJava_10 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_10:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk24", 0, "ok");
								} 
							
							tJava_11Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_10 finally ] start
	 */

	

	
	
	currentComponent="tJava_10";
	
	

 



/**
 * [tJava_10 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_10_SUBPROCESS_STATE", 1);
	}
	


public static class row49Struct implements routines.system.IPersistableRow<row49Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row49Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row45Struct implements routines.system.IPersistableRow<row45Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public Integer CONTEO;

				public Integer getCONTEO () {
					return this.CONTEO;
				}

				public Boolean CONTEOIsNullable(){
				    return true;
				}
				public Boolean CONTEOIsKey(){
				    return false;
				}
				public Integer CONTEOLength(){
				    return 0;
				}
				public Integer CONTEOPrecision(){
				    return 0;
				}
				public String CONTEODefault(){
				
					return null;
				
				}
				public String CONTEOComment(){
				
				    return "";
				
				}
				public String CONTEOPattern(){
				
					return "";
				
				}
				public String CONTEOOriginalDbColumnName(){
				
					return "CONTEO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.CONTEO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.CONTEO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.CONTEO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.CONTEO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",CONTEO="+String.valueOf(CONTEO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row45Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class COMPROBACION_CANT_REGISTROSStruct implements routines.system.IPersistableRow<COMPROBACION_CANT_REGISTROSStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public Integer CONTEO;

				public Integer getCONTEO () {
					return this.CONTEO;
				}

				public Boolean CONTEOIsNullable(){
				    return true;
				}
				public Boolean CONTEOIsKey(){
				    return false;
				}
				public Integer CONTEOLength(){
				    return 0;
				}
				public Integer CONTEOPrecision(){
				    return 0;
				}
				public String CONTEODefault(){
				
					return null;
				
				}
				public String CONTEOComment(){
				
				    return "";
				
				}
				public String CONTEOPattern(){
				
					return "";
				
				}
				public String CONTEOOriginalDbColumnName(){
				
					return "CONTEO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.CONTEO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.CONTEO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.CONTEO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.CONTEO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",CONTEO="+String.valueOf(CONTEO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(COMPROBACION_CANT_REGISTROSStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_2 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_2> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public Integer CONTEO;

				public Integer getCONTEO () {
					return this.CONTEO;
				}

				public Boolean CONTEOIsNullable(){
				    return true;
				}
				public Boolean CONTEOIsKey(){
				    return false;
				}
				public Integer CONTEOLength(){
				    return 0;
				}
				public Integer CONTEOPrecision(){
				    return 0;
				}
				public String CONTEODefault(){
				
					return null;
				
				}
				public String CONTEOComment(){
				
				    return "";
				
				}
				public String CONTEOPattern(){
				
					return "";
				
				}
				public String CONTEOOriginalDbColumnName(){
				
					return "CONTEO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.CONTEO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.CONTEO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.CONTEO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.CONTEO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",CONTEO="+String.valueOf(CONTEO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_2 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row55Struct implements routines.system.IPersistableRow<row55Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row55Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_21Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_21_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row55Struct row55 = new row55Struct();
COMPROBACION_CANT_REGISTROSStruct COMPROBACION_CANT_REGISTROS = new COMPROBACION_CANT_REGISTROSStruct();
row45Struct row45 = new row45Struct();
row49Struct row49 = new row49Struct();




	
	/**
	 * [tAggregateRow_2_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_2_AGGOUT", false);
		start_Hash.put("tAggregateRow_2_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row55");
					}
				
		int tos_count_tAggregateRow_2_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_2 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_2 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_2 utilClass_tAggregateRow_2 = new UtilClass_tAggregateRow_2();

	

	class AggOperationStruct_tAggregateRow_2 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				String COD_DIVIPOLA;int count = 0;
       			int CONTEO_clmCount = 0;
           			
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
							result = prime * result + ((this.COD_DIVIPOLA == null) ? 0 : this.COD_DIVIPOLA.hashCode());
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_2 other = (AggOperationStruct_tAggregateRow_2) obj;
			
							if (this.COD_DIVIPOLA == null) {
								if (other.COD_DIVIPOLA != null) 
									return false;
							} else if (!this.COD_DIVIPOLA.equals(other.COD_DIVIPOLA)) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_2 operation_result_tAggregateRow_2 = null;
	AggOperationStruct_tAggregateRow_2 operation_finder_tAggregateRow_2 = new AggOperationStruct_tAggregateRow_2();
	java.util.Map<AggOperationStruct_tAggregateRow_2,AggOperationStruct_tAggregateRow_2> hash_tAggregateRow_2 = new java.util.HashMap<AggOperationStruct_tAggregateRow_2,AggOperationStruct_tAggregateRow_2>();
	

 



/**
 * [tAggregateRow_2_AGGOUT begin ] stop
 */



	
	/**
	 * [tHashInput_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_21", false);
		start_Hash.put("tHashInput_21", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_21";
	
	
		int tos_count_tHashInput_21 = 0;
		


int nb_line_tHashInput_21 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_21=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row51Struct> tHashFile_tHashInput_21 = mf_tHashInput_21.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_12");
if(tHashFile_tHashInput_21==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row51Struct> iterator_tHashInput_21 = tHashFile_tHashInput_21.iterator();
while (iterator_tHashInput_21.hasNext()) {
    row51Struct next_tHashInput_21 = iterator_tHashInput_21.next();

	row55.COD_DIVIPOLA = next_tHashInput_21.COD_DIVIPOLA;
	row55.INDICADOR = next_tHashInput_21.INDICADOR;
	row55.SEXO = next_tHashInput_21.SEXO;
	row55.EDAD = next_tHashInput_21.EDAD;
	row55.ETNIA = next_tHashInput_21.ETNIA;
	row55.CIE10 = next_tHashInput_21.CIE10;
	row55.PRIORIDAD = next_tHashInput_21.PRIORIDAD;
	row55.GRUPO_RIESGO = next_tHashInput_21.GRUPO_RIESGO;

 



/**
 * [tHashInput_21 begin ] stop
 */
	
	/**
	 * [tHashInput_21 main ] start
	 */

	

	
	
	currentComponent="tHashInput_21";
	
	

 


	tos_count_tHashInput_21++;

/**
 * [tHashInput_21 main ] stop
 */
	
	/**
	 * [tHashInput_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_21";
	
	

 



/**
 * [tHashInput_21 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_2_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row55"
						
						);
					}
					
	
operation_finder_tAggregateRow_2.COD_DIVIPOLA = row55.COD_DIVIPOLA;
			

	operation_finder_tAggregateRow_2.hashCodeDirty = true;
	
	operation_result_tAggregateRow_2 = hash_tAggregateRow_2.get(operation_finder_tAggregateRow_2);

	

	if(operation_result_tAggregateRow_2 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_2 = new AggOperationStruct_tAggregateRow_2();

		operation_result_tAggregateRow_2.COD_DIVIPOLA = operation_finder_tAggregateRow_2.COD_DIVIPOLA;
				
		
		

		hash_tAggregateRow_2.put(operation_result_tAggregateRow_2, operation_result_tAggregateRow_2);
	
	} // G_OutMain_AggR_001


	
				operation_result_tAggregateRow_2.CONTEO_clmCount++;
				operation_result_tAggregateRow_2.count++;
				


 


	tos_count_tAggregateRow_2_AGGOUT++;

/**
 * [tAggregateRow_2_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	

 



/**
 * [tAggregateRow_2_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	

 



/**
 * [tAggregateRow_2_AGGOUT process_data_end ] stop
 */



	
	/**
	 * [tHashInput_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_21";
	
	

 



/**
 * [tHashInput_21 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_21 end ] start
	 */

	

	
	
	currentComponent="tHashInput_21";
	
	
    

		
			nb_line_tHashInput_21++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_12");
	


	globalMap.put("tHashInput_21_NB_LINE", nb_line_tHashInput_21);       

 

ok_Hash.put("tHashInput_21", true);
end_Hash.put("tHashInput_21", System.currentTimeMillis());




/**
 * [tHashInput_21 end ] stop
 */

	
	/**
	 * [tAggregateRow_2_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row55");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_2_AGGOUT", true);
end_Hash.put("tAggregateRow_2_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_2_AGGOUT end ] stop
 */




	
	/**
	 * [tHashOutput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_14", false);
		start_Hash.put("tHashOutput_14", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row49");
					}
				
		int tos_count_tHashOutput_14 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_14=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row49Struct> tHashFile_tHashOutput_14 = null;
		String hashKey_tHashOutput_14 = "tHashFile_ETL_vigilancia_" + pid + "_tHashOutput_14";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_14)){
			    if(mf_tHashOutput_14.getResourceMap().get(hashKey_tHashOutput_14) == null){
	      		    mf_tHashOutput_14.getResourceMap().put(hashKey_tHashOutput_14, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row49Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_14 = mf_tHashOutput_14.getResourceMap().get(hashKey_tHashOutput_14);
			    }else{
			    	tHashFile_tHashOutput_14 = mf_tHashOutput_14.getResourceMap().get(hashKey_tHashOutput_14);
			    }
			}
        int nb_line_tHashOutput_14 = 0;

 



/**
 * [tHashOutput_14 begin ] stop
 */



	
	/**
	 * [tJavaRow_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_18", false);
		start_Hash.put("tJavaRow_18", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_18";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row45");
					}
				
		int tos_count_tJavaRow_18 = 0;
		

int nb_line_tJavaRow_18 = 0;

 



/**
 * [tJavaRow_18 begin ] stop
 */



	
	/**
	 * [tFilterRow_89 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_89", false);
		start_Hash.put("tFilterRow_89", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_89";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"COMPROBACION_CANT_REGISTROS");
					}
				
		int tos_count_tFilterRow_89 = 0;
		
    int nb_line_tFilterRow_89 = 0;
    int nb_line_ok_tFilterRow_89 = 0;
    int nb_line_reject_tFilterRow_89 = 0;

    class Operator_tFilterRow_89 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_89(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_89 begin ] stop
 */



	
	/**
	 * [tAggregateRow_2_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_2_AGGIN", false);
		start_Hash.put("tAggregateRow_2_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	
		int tos_count_tAggregateRow_2_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_2> values_tAggregateRow_2 = hash_tAggregateRow_2.values();

globalMap.put("tAggregateRow_2_NB_LINE", values_tAggregateRow_2.size());

for(AggOperationStruct_tAggregateRow_2 aggregated_row_tAggregateRow_2 : values_tAggregateRow_2) { // G_AggR_600



 



/**
 * [tAggregateRow_2_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	

            				    COMPROBACION_CANT_REGISTROS.COD_DIVIPOLA = aggregated_row_tAggregateRow_2.COD_DIVIPOLA;
            				    COMPROBACION_CANT_REGISTROS.CONTEO = (int) aggregated_row_tAggregateRow_2.count;
	                                	COMPROBACION_CANT_REGISTROS.CONTEO = (int) aggregated_row_tAggregateRow_2.CONTEO_clmCount;
	                                	

 


	tos_count_tAggregateRow_2_AGGIN++;

/**
 * [tAggregateRow_2_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	

 



/**
 * [tAggregateRow_2_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_89 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_89";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"COMPROBACION_CANT_REGISTROS"
						
						);
					}
					

          row45 = null;
    Operator_tFilterRow_89 ope_tFilterRow_89 = new Operator_tFilterRow_89("&&");
      ope_tFilterRow_89.matches((( ( COMPROBACION_CANT_REGISTROS.COD_DIVIPOLA.length() == 5 ) && ( COMPROBACION_CANT_REGISTROS.CONTEO != 2 ) ) ||
( ( COMPROBACION_CANT_REGISTROS.COD_DIVIPOLA.length() == 2 ) && ( COMPROBACION_CANT_REGISTROS.CONTEO != 5 ) )), "advanced condition failed");
    
    if (ope_tFilterRow_89.getMatchFlag()) {
              if(row45 == null){ 
                row45 = new row45Struct();
              }
               row45.COD_DIVIPOLA = COMPROBACION_CANT_REGISTROS.COD_DIVIPOLA;
               row45.CONTEO = COMPROBACION_CANT_REGISTROS.CONTEO;    
      nb_line_ok_tFilterRow_89++;
    } else {
      nb_line_reject_tFilterRow_89++;
    }

nb_line_tFilterRow_89++;

 


	tos_count_tFilterRow_89++;

/**
 * [tFilterRow_89 main ] stop
 */
	
	/**
	 * [tFilterRow_89 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_89";
	
	

 



/**
 * [tFilterRow_89 process_data_begin ] stop
 */
// Start of branch "row45"
if(row45 != null) { 



	
	/**
	 * [tJavaRow_18 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_18";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row45"
						
						);
					}
					

    row49.COD_DIVIPOLA = row45.COD_DIVIPOLA;
row49.ERROR = context.ErrorConteoDivipola;
globalMap.put("FILAS_ERROR_CONTEO_DIVIPOLA", (Integer)globalMap.get("FILAS_ERROR_CONTEO_DIVIPOLA")+1);

    nb_line_tJavaRow_18++;   

 


	tos_count_tJavaRow_18++;

/**
 * [tJavaRow_18 main ] stop
 */
	
	/**
	 * [tJavaRow_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_18";
	
	

 



/**
 * [tJavaRow_18 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_14 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row49"
						
						);
					}
					



    
		row49Struct oneRow_tHashOutput_14 = new row49Struct();
				
					oneRow_tHashOutput_14.COD_DIVIPOLA = row49.COD_DIVIPOLA;
					oneRow_tHashOutput_14.ERROR = row49.ERROR;
		
        tHashFile_tHashOutput_14.put(oneRow_tHashOutput_14);
        nb_line_tHashOutput_14 ++;

 


	tos_count_tHashOutput_14++;

/**
 * [tHashOutput_14 main ] stop
 */
	
	/**
	 * [tHashOutput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	

 



/**
 * [tHashOutput_14 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	

 



/**
 * [tHashOutput_14 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_18";
	
	

 



/**
 * [tJavaRow_18 process_data_end ] stop
 */

} // End of branch "row45"




	
	/**
	 * [tFilterRow_89 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_89";
	
	

 



/**
 * [tFilterRow_89 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_2_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	

 



/**
 * [tAggregateRow_2_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_2_AGGIN", true);
end_Hash.put("tAggregateRow_2_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_2_AGGIN end ] stop
 */

	
	/**
	 * [tFilterRow_89 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_89";
	
	
    globalMap.put("tFilterRow_89_NB_LINE", nb_line_tFilterRow_89);
    globalMap.put("tFilterRow_89_NB_LINE_OK", nb_line_ok_tFilterRow_89);
    globalMap.put("tFilterRow_89_NB_LINE_REJECT", nb_line_reject_tFilterRow_89);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"COMPROBACION_CANT_REGISTROS");
			  	}
			  	
 

ok_Hash.put("tFilterRow_89", true);
end_Hash.put("tFilterRow_89", System.currentTimeMillis());




/**
 * [tFilterRow_89 end ] stop
 */

	
	/**
	 * [tJavaRow_18 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_18";
	
	

globalMap.put("tJavaRow_18_NB_LINE",nb_line_tJavaRow_18);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row45");
			  	}
			  	
 

ok_Hash.put("tJavaRow_18", true);
end_Hash.put("tJavaRow_18", System.currentTimeMillis());




/**
 * [tJavaRow_18 end ] stop
 */

	
	/**
	 * [tHashOutput_14 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	
globalMap.put("tHashOutput_14_NB_LINE", nb_line_tHashOutput_14);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row49");
			  	}
			  	
 

ok_Hash.put("tHashOutput_14", true);
end_Hash.put("tHashOutput_14", System.currentTimeMillis());

   			if (((Integer)globalMap.get("tHashOutput_14_NB_LINE"))>0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If10", 0, "true");
					}
				tHashInput_18Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If10", 0, "false");
					}   	 
   				}



/**
 * [tHashOutput_14 end ] stop
 */















				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tAggregateRow_2_AGGIN"
							globalMap.remove("tAggregateRow_2");
						
				try{
					
	
	/**
	 * [tHashInput_21 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_21";
	
	

 



/**
 * [tHashInput_21 finally ] stop
 */

	
	/**
	 * [tAggregateRow_2_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	

 



/**
 * [tAggregateRow_2_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_2_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	

 



/**
 * [tAggregateRow_2_AGGIN finally ] stop
 */

	
	/**
	 * [tFilterRow_89 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_89";
	
	

 



/**
 * [tFilterRow_89 finally ] stop
 */

	
	/**
	 * [tJavaRow_18 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_18";
	
	

 



/**
 * [tJavaRow_18 finally ] stop
 */

	
	/**
	 * [tHashOutput_14 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	

 



/**
 * [tHashOutput_14 finally ] stop
 */















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_21_SUBPROCESS_STATE", 1);
	}
	


public static class row52Struct implements routines.system.IPersistableRow<row52Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row52Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_18Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_18_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row52Struct row52 = new row52Struct();




	
	/**
	 * [tFileOutputDelimited_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_3", false);
		start_Hash.put("tFileOutputDelimited_3", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row52");
					}
				
		int tos_count_tFileOutputDelimited_3 = 0;
		

String fileName_tFileOutputDelimited_3 = "";
    fileName_tFileOutputDelimited_3 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_3 = null;
    String extension_tFileOutputDelimited_3 = null;
    String directory_tFileOutputDelimited_3 = null;
    if((fileName_tFileOutputDelimited_3.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_3.lastIndexOf(".") < fileName_tFileOutputDelimited_3.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3;
            extension_tFileOutputDelimited_3 = "";
        } else {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(0, fileName_tFileOutputDelimited_3.lastIndexOf("."));
            extension_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(fileName_tFileOutputDelimited_3.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(0, fileName_tFileOutputDelimited_3.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_3.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(0, fileName_tFileOutputDelimited_3.lastIndexOf("."));
            extension_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3.substring(fileName_tFileOutputDelimited_3.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_3 = fileName_tFileOutputDelimited_3;
            extension_tFileOutputDelimited_3 = "";
        }
        directory_tFileOutputDelimited_3 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_3 = true;
    java.io.File filetFileOutputDelimited_3 = new java.io.File(fileName_tFileOutputDelimited_3);
    globalMap.put("tFileOutputDelimited_3_FILE_NAME",fileName_tFileOutputDelimited_3);
            int nb_line_tFileOutputDelimited_3 = 0;
            int splitedFileNo_tFileOutputDelimited_3 = 0;
            int currentRow_tFileOutputDelimited_3 = 0;

            final String OUT_DELIM_tFileOutputDelimited_3 = /** Start field tFileOutputDelimited_3:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_3:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_3 = /** Start field tFileOutputDelimited_3:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_3:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_3 != null && directory_tFileOutputDelimited_3.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_3 = new java.io.File(directory_tFileOutputDelimited_3);
                        if(!dir_tFileOutputDelimited_3.exists()) {
                            dir_tFileOutputDelimited_3.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_3 = null;

                        java.io.File fileToDelete_tFileOutputDelimited_3 = new java.io.File(fileName_tFileOutputDelimited_3);
                        if(fileToDelete_tFileOutputDelimited_3.exists()) {
                            fileToDelete_tFileOutputDelimited_3.delete();
                        }
                        outtFileOutputDelimited_3 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_3, false),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_3", outtFileOutputDelimited_3);
                        synchronized (multiThreadLockWrite) {
                                    if(filetFileOutputDelimited_3.length()==0){
                                        outtFileOutputDelimited_3.write("COD_DIVIPOLA");
                                            outtFileOutputDelimited_3.write(OUT_DELIM_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.write("ERROR");
                                        outtFileOutputDelimited_3.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_3);
                                        outtFileOutputDelimited_3.flush();
                                    }
                        }


resourceMap.put("nb_line_tFileOutputDelimited_3", nb_line_tFileOutputDelimited_3);

 



/**
 * [tFileOutputDelimited_3 begin ] stop
 */



	
	/**
	 * [tHashInput_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_18", false);
		start_Hash.put("tHashInput_18", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_18";
	
	
		int tos_count_tHashInput_18 = 0;
		


int nb_line_tHashInput_18 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_18=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row49Struct> tHashFile_tHashInput_18 = mf_tHashInput_18.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_14");
if(tHashFile_tHashInput_18==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row49Struct> iterator_tHashInput_18 = tHashFile_tHashInput_18.iterator();
while (iterator_tHashInput_18.hasNext()) {
    row49Struct next_tHashInput_18 = iterator_tHashInput_18.next();

	row52.COD_DIVIPOLA = next_tHashInput_18.COD_DIVIPOLA;
	row52.ERROR = next_tHashInput_18.ERROR;

 



/**
 * [tHashInput_18 begin ] stop
 */
	
	/**
	 * [tHashInput_18 main ] start
	 */

	

	
	
	currentComponent="tHashInput_18";
	
	

 


	tos_count_tHashInput_18++;

/**
 * [tHashInput_18 main ] stop
 */
	
	/**
	 * [tHashInput_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_18";
	
	

 



/**
 * [tHashInput_18 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_3 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row52"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_3 = new StringBuilder();
                            if(row52.COD_DIVIPOLA != null) {
                        sb_tFileOutputDelimited_3.append(
                            row52.COD_DIVIPOLA
                        );
                            }
                            sb_tFileOutputDelimited_3.append(OUT_DELIM_tFileOutputDelimited_3);
                            if(row52.ERROR != null) {
                        sb_tFileOutputDelimited_3.append(
                            row52.ERROR
                        );
                            }
                    sb_tFileOutputDelimited_3.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_3);


                    synchronized (multiThreadLockWrite) {
                    nb_line_tFileOutputDelimited_3++;
                    resourceMap.put("nb_line_tFileOutputDelimited_3", nb_line_tFileOutputDelimited_3);

                        outtFileOutputDelimited_3.write(sb_tFileOutputDelimited_3.toString());

                    }



 


	tos_count_tFileOutputDelimited_3++;

/**
 * [tFileOutputDelimited_3 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	

 



/**
 * [tFileOutputDelimited_3 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	

 



/**
 * [tFileOutputDelimited_3 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_18";
	
	

 



/**
 * [tHashInput_18 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_18 end ] start
	 */

	

	
	
	currentComponent="tHashInput_18";
	
	
    

		
			nb_line_tHashInput_18++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_14");
	


	globalMap.put("tHashInput_18_NB_LINE", nb_line_tHashInput_18);       

 

ok_Hash.put("tHashInput_18", true);
end_Hash.put("tHashInput_18", System.currentTimeMillis());




/**
 * [tHashInput_18 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_3 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	



		
	   		synchronized (multiThreadLockWrite) {
		
			
					if(outtFileOutputDelimited_3!=null) {
						outtFileOutputDelimited_3.flush();
						outtFileOutputDelimited_3.close();
					}
				
				globalMap.put("tFileOutputDelimited_3_NB_LINE",nb_line_tFileOutputDelimited_3);
				globalMap.put("tFileOutputDelimited_3_FILE_NAME",fileName_tFileOutputDelimited_3);
			
		
			}
		
		
		resourceMap.put("finish_tFileOutputDelimited_3", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row52");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_3", true);
end_Hash.put("tFileOutputDelimited_3", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk47", 0, "ok");
				}
				tFixedFlowInput_26Process(globalMap);



/**
 * [tFileOutputDelimited_3 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_18 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_18";
	
	

 



/**
 * [tHashInput_18 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_3 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_3";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_3") == null){ 
			
		   		synchronized (multiThreadLockWrite) {
			
				
						java.io.Writer outtFileOutputDelimited_3 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_3");
						if(outtFileOutputDelimited_3!=null) {
							outtFileOutputDelimited_3.flush();
							outtFileOutputDelimited_3.close();
						}
					
				
				}
			
			
		}
	

 



/**
 * [tFileOutputDelimited_3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_18_SUBPROCESS_STATE", 1);
	}
	


public void tJava_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_11", false);
		start_Hash.put("tJava_11", System.currentTimeMillis());
		
	
	currentComponent="tJava_11";
	
	
		int tos_count_tJava_11 = 0;
		


System.out.println("****************** INICIANDO VALIDACION DE CONTEO DE PRIORIDAD DIVIPOLA DE ARCHIVO ******");

 



/**
 * [tJava_11 begin ] stop
 */
	
	/**
	 * [tJava_11 main ] start
	 */

	

	
	
	currentComponent="tJava_11";
	
	

 


	tos_count_tJava_11++;

/**
 * [tJava_11 main ] stop
 */
	
	/**
	 * [tJava_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_11";
	
	

 



/**
 * [tJava_11 process_data_begin ] stop
 */
	
	/**
	 * [tJava_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_11";
	
	

 



/**
 * [tJava_11 process_data_end ] stop
 */
	
	/**
	 * [tJava_11 end ] start
	 */

	

	
	
	currentComponent="tJava_11";
	
	

 

ok_Hash.put("tJava_11", true);
end_Hash.put("tJava_11", System.currentTimeMillis());

   			if ((Integer)globalMap.get("FILAS_ERROR")==0 && (Integer)globalMap.get("FILAS_ERROR_CONFIGURACION")==0 && (Integer)globalMap.get("FILAS_ERROR_CONTEO_DIVIPOLA")==0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If14", 0, "true");
					}
				tHashInput_22Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If14", 0, "false");
					}   	 
   				}



/**
 * [tJava_11 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_11:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk25", 0, "ok");
								} 
							
							tJava_12Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_11 finally ] start
	 */

	

	
	
	currentComponent="tJava_11";
	
	

 



/**
 * [tJava_11 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_11_SUBPROCESS_STATE", 1);
	}
	


public static class row59Struct implements routines.system.IPersistableRow<row59Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public Integer PRIORIDAD;

				public Integer getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return true;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 0;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.PRIORIDAD = readInteger(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.PRIORIDAD = readInteger(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.PRIORIDAD,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.PRIORIDAD,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row59Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row58Struct implements routines.system.IPersistableRow<row58Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public Integer PRIORIDAD;

				public Integer getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return true;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 0;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public Integer CONTEO;

				public Integer getCONTEO () {
					return this.CONTEO;
				}

				public Boolean CONTEOIsNullable(){
				    return true;
				}
				public Boolean CONTEOIsKey(){
				    return false;
				}
				public Integer CONTEOLength(){
				    return 0;
				}
				public Integer CONTEOPrecision(){
				    return 0;
				}
				public String CONTEODefault(){
				
					return null;
				
				}
				public String CONTEOComment(){
				
				    return "";
				
				}
				public String CONTEOPattern(){
				
					return "";
				
				}
				public String CONTEOOriginalDbColumnName(){
				
					return "CONTEO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.PRIORIDAD = readInteger(dis);
					
						this.CONTEO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.PRIORIDAD = readInteger(dis);
					
						this.CONTEO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.PRIORIDAD,dos);
					
					// Integer
				
						writeInteger(this.CONTEO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.PRIORIDAD,dos);
					
					// Integer
				
						writeInteger(this.CONTEO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",CONTEO="+String.valueOf(CONTEO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row58Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row57Struct implements routines.system.IPersistableRow<row57Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public Integer PRIORIDAD;

				public Integer getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return true;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 0;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public Integer CONTEO;

				public Integer getCONTEO () {
					return this.CONTEO;
				}

				public Boolean CONTEOIsNullable(){
				    return true;
				}
				public Boolean CONTEOIsKey(){
				    return false;
				}
				public Integer CONTEOLength(){
				    return 0;
				}
				public Integer CONTEOPrecision(){
				    return 0;
				}
				public String CONTEODefault(){
				
					return null;
				
				}
				public String CONTEOComment(){
				
				    return "";
				
				}
				public String CONTEOPattern(){
				
					return "";
				
				}
				public String CONTEOOriginalDbColumnName(){
				
					return "CONTEO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.PRIORIDAD = readInteger(dis);
					
						this.CONTEO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.PRIORIDAD = readInteger(dis);
					
						this.CONTEO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.PRIORIDAD,dos);
					
					// Integer
				
						writeInteger(this.CONTEO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.PRIORIDAD,dos);
					
					// Integer
				
						writeInteger(this.CONTEO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",CONTEO="+String.valueOf(CONTEO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row57Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_1 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_1> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public Integer PRIORIDAD;

				public Integer getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return true;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 0;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public Integer CONTEO;

				public Integer getCONTEO () {
					return this.CONTEO;
				}

				public Boolean CONTEOIsNullable(){
				    return true;
				}
				public Boolean CONTEOIsKey(){
				    return false;
				}
				public Integer CONTEOLength(){
				    return 0;
				}
				public Integer CONTEOPrecision(){
				    return 0;
				}
				public String CONTEODefault(){
				
					return null;
				
				}
				public String CONTEOComment(){
				
				    return "";
				
				}
				public String CONTEOPattern(){
				
					return "";
				
				}
				public String CONTEOOriginalDbColumnName(){
				
					return "CONTEO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.PRIORIDAD = readInteger(dis);
					
						this.CONTEO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.PRIORIDAD = readInteger(dis);
					
						this.CONTEO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.PRIORIDAD,dos);
					
					// Integer
				
						writeInteger(this.CONTEO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.PRIORIDAD,dos);
					
					// Integer
				
						writeInteger(this.CONTEO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",CONTEO="+String.valueOf(CONTEO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_1 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row56Struct implements routines.system.IPersistableRow<row56Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row56Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_22Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_22_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row56Struct row56 = new row56Struct();
row57Struct row57 = new row57Struct();
row58Struct row58 = new row58Struct();
row59Struct row59 = new row59Struct();




	
	/**
	 * [tAggregateRow_1_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_1_AGGOUT", false);
		start_Hash.put("tAggregateRow_1_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row56");
					}
				
		int tos_count_tAggregateRow_1_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_1 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_1 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_1 utilClass_tAggregateRow_1 = new UtilClass_tAggregateRow_1();

	

	class AggOperationStruct_tAggregateRow_1 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				String COD_DIVIPOLA;
    				int PRIORIDAD;int count = 0;
       			int CONTEO_clmCount = 0;
           			
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
							result = prime * result + ((this.COD_DIVIPOLA == null) ? 0 : this.COD_DIVIPOLA.hashCode());
							
								result = prime * result + (int) this.PRIORIDAD;
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_1 other = (AggOperationStruct_tAggregateRow_1) obj;
			
							if (this.COD_DIVIPOLA == null) {
								if (other.COD_DIVIPOLA != null) 
									return false;
							} else if (!this.COD_DIVIPOLA.equals(other.COD_DIVIPOLA)) 
								return false;
						
							if (this.PRIORIDAD != other.PRIORIDAD) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_1 operation_result_tAggregateRow_1 = null;
	AggOperationStruct_tAggregateRow_1 operation_finder_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();
	java.util.Map<AggOperationStruct_tAggregateRow_1,AggOperationStruct_tAggregateRow_1> hash_tAggregateRow_1 = new java.util.HashMap<AggOperationStruct_tAggregateRow_1,AggOperationStruct_tAggregateRow_1>();
	

 



/**
 * [tAggregateRow_1_AGGOUT begin ] stop
 */



	
	/**
	 * [tHashInput_22 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_22", false);
		start_Hash.put("tHashInput_22", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_22";
	
	
		int tos_count_tHashInput_22 = 0;
		


int nb_line_tHashInput_22 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_22=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row51Struct> tHashFile_tHashInput_22 = mf_tHashInput_22.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_12");
if(tHashFile_tHashInput_22==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row51Struct> iterator_tHashInput_22 = tHashFile_tHashInput_22.iterator();
while (iterator_tHashInput_22.hasNext()) {
    row51Struct next_tHashInput_22 = iterator_tHashInput_22.next();

	row56.COD_DIVIPOLA = next_tHashInput_22.COD_DIVIPOLA;
	row56.INDICADOR = next_tHashInput_22.INDICADOR;
	row56.SEXO = next_tHashInput_22.SEXO;
	row56.EDAD = next_tHashInput_22.EDAD;
	row56.ETNIA = next_tHashInput_22.ETNIA;
	row56.CIE10 = next_tHashInput_22.CIE10;
	row56.PRIORIDAD = next_tHashInput_22.PRIORIDAD;
	row56.GRUPO_RIESGO = next_tHashInput_22.GRUPO_RIESGO;

 



/**
 * [tHashInput_22 begin ] stop
 */
	
	/**
	 * [tHashInput_22 main ] start
	 */

	

	
	
	currentComponent="tHashInput_22";
	
	

 


	tos_count_tHashInput_22++;

/**
 * [tHashInput_22 main ] stop
 */
	
	/**
	 * [tHashInput_22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_22";
	
	

 



/**
 * [tHashInput_22 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row56"
						
						);
					}
					
	
operation_finder_tAggregateRow_1.COD_DIVIPOLA = row56.COD_DIVIPOLA;
			operation_finder_tAggregateRow_1.PRIORIDAD = row56.PRIORIDAD;
			

	operation_finder_tAggregateRow_1.hashCodeDirty = true;
	
	operation_result_tAggregateRow_1 = hash_tAggregateRow_1.get(operation_finder_tAggregateRow_1);

	

	if(operation_result_tAggregateRow_1 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();

		operation_result_tAggregateRow_1.COD_DIVIPOLA = operation_finder_tAggregateRow_1.COD_DIVIPOLA;
				operation_result_tAggregateRow_1.PRIORIDAD = operation_finder_tAggregateRow_1.PRIORIDAD;
				
		
		

		hash_tAggregateRow_1.put(operation_result_tAggregateRow_1, operation_result_tAggregateRow_1);
	
	} // G_OutMain_AggR_001


	
				operation_result_tAggregateRow_1.CONTEO_clmCount++;
				operation_result_tAggregateRow_1.count++;
				


 


	tos_count_tAggregateRow_1_AGGOUT++;

/**
 * [tAggregateRow_1_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_end ] stop
 */



	
	/**
	 * [tHashInput_22 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_22";
	
	

 



/**
 * [tHashInput_22 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_22 end ] start
	 */

	

	
	
	currentComponent="tHashInput_22";
	
	
    

		
			nb_line_tHashInput_22++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_12");
	


	globalMap.put("tHashInput_22_NB_LINE", nb_line_tHashInput_22);       

 

ok_Hash.put("tHashInput_22", true);
end_Hash.put("tHashInput_22", System.currentTimeMillis());




/**
 * [tHashInput_22 end ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row56");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_1_AGGOUT", true);
end_Hash.put("tAggregateRow_1_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_1_AGGOUT end ] stop
 */




	
	/**
	 * [tHashOutput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_15", false);
		start_Hash.put("tHashOutput_15", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row59");
					}
				
		int tos_count_tHashOutput_15 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_15=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row59Struct> tHashFile_tHashOutput_15 = null;
		String hashKey_tHashOutput_15 = "tHashFile_ETL_vigilancia_" + pid + "_tHashOutput_15";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_15)){
			    if(mf_tHashOutput_15.getResourceMap().get(hashKey_tHashOutput_15) == null){
	      		    mf_tHashOutput_15.getResourceMap().put(hashKey_tHashOutput_15, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row59Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_15 = mf_tHashOutput_15.getResourceMap().get(hashKey_tHashOutput_15);
			    }else{
			    	tHashFile_tHashOutput_15 = mf_tHashOutput_15.getResourceMap().get(hashKey_tHashOutput_15);
			    }
			}
        int nb_line_tHashOutput_15 = 0;

 



/**
 * [tHashOutput_15 begin ] stop
 */



	
	/**
	 * [tJavaRow_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_19", false);
		start_Hash.put("tJavaRow_19", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_19";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row58");
					}
				
		int tos_count_tJavaRow_19 = 0;
		

int nb_line_tJavaRow_19 = 0;

 



/**
 * [tJavaRow_19 begin ] stop
 */



	
	/**
	 * [tFilterRow_98 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_98", false);
		start_Hash.put("tFilterRow_98", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_98";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row57");
					}
				
		int tos_count_tFilterRow_98 = 0;
		
    int nb_line_tFilterRow_98 = 0;
    int nb_line_ok_tFilterRow_98 = 0;
    int nb_line_reject_tFilterRow_98 = 0;

    class Operator_tFilterRow_98 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_98(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_98 begin ] stop
 */



	
	/**
	 * [tAggregateRow_1_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_1_AGGIN", false);
		start_Hash.put("tAggregateRow_1_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	
		int tos_count_tAggregateRow_1_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_1> values_tAggregateRow_1 = hash_tAggregateRow_1.values();

globalMap.put("tAggregateRow_1_NB_LINE", values_tAggregateRow_1.size());

for(AggOperationStruct_tAggregateRow_1 aggregated_row_tAggregateRow_1 : values_tAggregateRow_1) { // G_AggR_600



 



/**
 * [tAggregateRow_1_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

            				    row57.COD_DIVIPOLA = aggregated_row_tAggregateRow_1.COD_DIVIPOLA;
            				    
            				    row57.PRIORIDAD = aggregated_row_tAggregateRow_1.PRIORIDAD;
            				    row57.CONTEO = (int) aggregated_row_tAggregateRow_1.count;
	                                	row57.CONTEO = (int) aggregated_row_tAggregateRow_1.CONTEO_clmCount;
	                                	

 


	tos_count_tAggregateRow_1_AGGIN++;

/**
 * [tAggregateRow_1_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

 



/**
 * [tAggregateRow_1_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_98 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_98";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row57"
						
						);
					}
					

          row58 = null;
    Operator_tFilterRow_98 ope_tFilterRow_98 = new Operator_tFilterRow_98("&&");
      ope_tFilterRow_98.matches((row57.CONTEO > 1), "advanced condition failed");
    
    if (ope_tFilterRow_98.getMatchFlag()) {
              if(row58 == null){ 
                row58 = new row58Struct();
              }
               row58.COD_DIVIPOLA = row57.COD_DIVIPOLA;
               row58.PRIORIDAD = row57.PRIORIDAD;
               row58.CONTEO = row57.CONTEO;    
      nb_line_ok_tFilterRow_98++;
    } else {
      nb_line_reject_tFilterRow_98++;
    }

nb_line_tFilterRow_98++;

 


	tos_count_tFilterRow_98++;

/**
 * [tFilterRow_98 main ] stop
 */
	
	/**
	 * [tFilterRow_98 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_98";
	
	

 



/**
 * [tFilterRow_98 process_data_begin ] stop
 */
// Start of branch "row58"
if(row58 != null) { 



	
	/**
	 * [tJavaRow_19 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_19";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row58"
						
						);
					}
					

    //Code generate according to input schema and output schema
row59.COD_DIVIPOLA = row58.COD_DIVIPOLA;
row59.PRIORIDAD = row58.PRIORIDAD;
row59.ERROR = context.ErrorConteoPrioridadDivipola;
globalMap.put("FILAS_ERROR_CONTEO_PRIORIDAD_DIVIPOLA", (Integer)globalMap.get("FILAS_ERROR_CONTEO_PRIORIDAD_DIVIPOLA")+1);
    nb_line_tJavaRow_19++;   

 


	tos_count_tJavaRow_19++;

/**
 * [tJavaRow_19 main ] stop
 */
	
	/**
	 * [tJavaRow_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_19";
	
	

 



/**
 * [tJavaRow_19 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_15 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row59"
						
						);
					}
					



    
		row59Struct oneRow_tHashOutput_15 = new row59Struct();
				
					oneRow_tHashOutput_15.COD_DIVIPOLA = row59.COD_DIVIPOLA;
					oneRow_tHashOutput_15.PRIORIDAD = row59.PRIORIDAD;
					oneRow_tHashOutput_15.ERROR = row59.ERROR;
		
        tHashFile_tHashOutput_15.put(oneRow_tHashOutput_15);
        nb_line_tHashOutput_15 ++;

 


	tos_count_tHashOutput_15++;

/**
 * [tHashOutput_15 main ] stop
 */
	
	/**
	 * [tHashOutput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	

 



/**
 * [tHashOutput_15 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	

 



/**
 * [tHashOutput_15 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_19";
	
	

 



/**
 * [tJavaRow_19 process_data_end ] stop
 */

} // End of branch "row58"




	
	/**
	 * [tFilterRow_98 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_98";
	
	

 



/**
 * [tFilterRow_98 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_1_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

 



/**
 * [tAggregateRow_1_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_1_AGGIN", true);
end_Hash.put("tAggregateRow_1_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_1_AGGIN end ] stop
 */

	
	/**
	 * [tFilterRow_98 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_98";
	
	
    globalMap.put("tFilterRow_98_NB_LINE", nb_line_tFilterRow_98);
    globalMap.put("tFilterRow_98_NB_LINE_OK", nb_line_ok_tFilterRow_98);
    globalMap.put("tFilterRow_98_NB_LINE_REJECT", nb_line_reject_tFilterRow_98);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row57");
			  	}
			  	
 

ok_Hash.put("tFilterRow_98", true);
end_Hash.put("tFilterRow_98", System.currentTimeMillis());




/**
 * [tFilterRow_98 end ] stop
 */

	
	/**
	 * [tJavaRow_19 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_19";
	
	

globalMap.put("tJavaRow_19_NB_LINE",nb_line_tJavaRow_19);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row58");
			  	}
			  	
 

ok_Hash.put("tJavaRow_19", true);
end_Hash.put("tJavaRow_19", System.currentTimeMillis());




/**
 * [tJavaRow_19 end ] stop
 */

	
	/**
	 * [tHashOutput_15 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	
globalMap.put("tHashOutput_15_NB_LINE", nb_line_tHashOutput_15);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row59");
			  	}
			  	
 

ok_Hash.put("tHashOutput_15", true);
end_Hash.put("tHashOutput_15", System.currentTimeMillis());

   			if (((Integer)globalMap.get("tHashOutput_15_NB_LINE"))>0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If13", 0, "true");
					}
				tHashInput_23Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If13", 0, "false");
					}   	 
   				}



/**
 * [tHashOutput_15 end ] stop
 */















				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tAggregateRow_1_AGGIN"
							globalMap.remove("tAggregateRow_1");
						
				try{
					
	
	/**
	 * [tHashInput_22 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_22";
	
	

 



/**
 * [tHashInput_22 finally ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

 



/**
 * [tAggregateRow_1_AGGIN finally ] stop
 */

	
	/**
	 * [tFilterRow_98 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_98";
	
	

 



/**
 * [tFilterRow_98 finally ] stop
 */

	
	/**
	 * [tJavaRow_19 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_19";
	
	

 



/**
 * [tJavaRow_19 finally ] stop
 */

	
	/**
	 * [tHashOutput_15 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	

 



/**
 * [tHashOutput_15 finally ] stop
 */















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_22_SUBPROCESS_STATE", 1);
	}
	


public static class row60Struct implements routines.system.IPersistableRow<row60Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public Integer PRIORIDAD;

				public Integer getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return true;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 0;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.PRIORIDAD = readInteger(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.PRIORIDAD = readInteger(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.PRIORIDAD,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.PRIORIDAD,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row60Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_23Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_23_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row60Struct row60 = new row60Struct();




	
	/**
	 * [tFileOutputDelimited_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_4", false);
		start_Hash.put("tFileOutputDelimited_4", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row60");
					}
				
		int tos_count_tFileOutputDelimited_4 = 0;
		

String fileName_tFileOutputDelimited_4 = "";
    fileName_tFileOutputDelimited_4 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_4 = null;
    String extension_tFileOutputDelimited_4 = null;
    String directory_tFileOutputDelimited_4 = null;
    if((fileName_tFileOutputDelimited_4.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_4.lastIndexOf(".") < fileName_tFileOutputDelimited_4.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_4 = fileName_tFileOutputDelimited_4;
            extension_tFileOutputDelimited_4 = "";
        } else {
            fullName_tFileOutputDelimited_4 = fileName_tFileOutputDelimited_4.substring(0, fileName_tFileOutputDelimited_4.lastIndexOf("."));
            extension_tFileOutputDelimited_4 = fileName_tFileOutputDelimited_4.substring(fileName_tFileOutputDelimited_4.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_4 = fileName_tFileOutputDelimited_4.substring(0, fileName_tFileOutputDelimited_4.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_4.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_4 = fileName_tFileOutputDelimited_4.substring(0, fileName_tFileOutputDelimited_4.lastIndexOf("."));
            extension_tFileOutputDelimited_4 = fileName_tFileOutputDelimited_4.substring(fileName_tFileOutputDelimited_4.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_4 = fileName_tFileOutputDelimited_4;
            extension_tFileOutputDelimited_4 = "";
        }
        directory_tFileOutputDelimited_4 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_4 = true;
    java.io.File filetFileOutputDelimited_4 = new java.io.File(fileName_tFileOutputDelimited_4);
    globalMap.put("tFileOutputDelimited_4_FILE_NAME",fileName_tFileOutputDelimited_4);
            int nb_line_tFileOutputDelimited_4 = 0;
            int splitedFileNo_tFileOutputDelimited_4 = 0;
            int currentRow_tFileOutputDelimited_4 = 0;

            final String OUT_DELIM_tFileOutputDelimited_4 = /** Start field tFileOutputDelimited_4:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_4:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_4 = /** Start field tFileOutputDelimited_4:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_4:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_4 != null && directory_tFileOutputDelimited_4.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_4 = new java.io.File(directory_tFileOutputDelimited_4);
                        if(!dir_tFileOutputDelimited_4.exists()) {
                            dir_tFileOutputDelimited_4.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_4 = null;

                        java.io.File fileToDelete_tFileOutputDelimited_4 = new java.io.File(fileName_tFileOutputDelimited_4);
                        if(fileToDelete_tFileOutputDelimited_4.exists()) {
                            fileToDelete_tFileOutputDelimited_4.delete();
                        }
                        outtFileOutputDelimited_4 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_4, false),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_4", outtFileOutputDelimited_4);
                        synchronized (multiThreadLockWrite) {
                                    if(filetFileOutputDelimited_4.length()==0){
                                        outtFileOutputDelimited_4.write("COD_DIVIPOLA");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("PRIORIDAD");
                                            outtFileOutputDelimited_4.write(OUT_DELIM_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.write("ERROR");
                                        outtFileOutputDelimited_4.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_4);
                                        outtFileOutputDelimited_4.flush();
                                    }
                        }


resourceMap.put("nb_line_tFileOutputDelimited_4", nb_line_tFileOutputDelimited_4);

 



/**
 * [tFileOutputDelimited_4 begin ] stop
 */



	
	/**
	 * [tHashInput_23 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_23", false);
		start_Hash.put("tHashInput_23", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_23";
	
	
		int tos_count_tHashInput_23 = 0;
		


int nb_line_tHashInput_23 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_23=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row59Struct> tHashFile_tHashInput_23 = mf_tHashInput_23.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_15");
if(tHashFile_tHashInput_23==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row59Struct> iterator_tHashInput_23 = tHashFile_tHashInput_23.iterator();
while (iterator_tHashInput_23.hasNext()) {
    row59Struct next_tHashInput_23 = iterator_tHashInput_23.next();

	row60.COD_DIVIPOLA = next_tHashInput_23.COD_DIVIPOLA;
	row60.PRIORIDAD = next_tHashInput_23.PRIORIDAD;
	row60.ERROR = next_tHashInput_23.ERROR;

 



/**
 * [tHashInput_23 begin ] stop
 */
	
	/**
	 * [tHashInput_23 main ] start
	 */

	

	
	
	currentComponent="tHashInput_23";
	
	

 


	tos_count_tHashInput_23++;

/**
 * [tHashInput_23 main ] stop
 */
	
	/**
	 * [tHashInput_23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_23";
	
	

 



/**
 * [tHashInput_23 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_4 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row60"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_4 = new StringBuilder();
                            if(row60.COD_DIVIPOLA != null) {
                        sb_tFileOutputDelimited_4.append(
                            row60.COD_DIVIPOLA
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row60.PRIORIDAD != null) {
                        sb_tFileOutputDelimited_4.append(
                            row60.PRIORIDAD
                        );
                            }
                            sb_tFileOutputDelimited_4.append(OUT_DELIM_tFileOutputDelimited_4);
                            if(row60.ERROR != null) {
                        sb_tFileOutputDelimited_4.append(
                            row60.ERROR
                        );
                            }
                    sb_tFileOutputDelimited_4.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_4);


                    synchronized (multiThreadLockWrite) {
                    nb_line_tFileOutputDelimited_4++;
                    resourceMap.put("nb_line_tFileOutputDelimited_4", nb_line_tFileOutputDelimited_4);

                        outtFileOutputDelimited_4.write(sb_tFileOutputDelimited_4.toString());

                    }



 


	tos_count_tFileOutputDelimited_4++;

/**
 * [tFileOutputDelimited_4 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_4";
	
	

 



/**
 * [tFileOutputDelimited_4 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_4";
	
	

 



/**
 * [tFileOutputDelimited_4 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_23 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_23";
	
	

 



/**
 * [tHashInput_23 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_23 end ] start
	 */

	

	
	
	currentComponent="tHashInput_23";
	
	
    

		
			nb_line_tHashInput_23++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_15");
	


	globalMap.put("tHashInput_23_NB_LINE", nb_line_tHashInput_23);       

 

ok_Hash.put("tHashInput_23", true);
end_Hash.put("tHashInput_23", System.currentTimeMillis());




/**
 * [tHashInput_23 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_4 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_4";
	
	



		
	   		synchronized (multiThreadLockWrite) {
		
			
					if(outtFileOutputDelimited_4!=null) {
						outtFileOutputDelimited_4.flush();
						outtFileOutputDelimited_4.close();
					}
				
				globalMap.put("tFileOutputDelimited_4_NB_LINE",nb_line_tFileOutputDelimited_4);
				globalMap.put("tFileOutputDelimited_4_FILE_NAME",fileName_tFileOutputDelimited_4);
			
		
			}
		
		
		resourceMap.put("finish_tFileOutputDelimited_4", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row60");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_4", true);
end_Hash.put("tFileOutputDelimited_4", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk48", 0, "ok");
				}
				tFixedFlowInput_26Process(globalMap);



/**
 * [tFileOutputDelimited_4 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_23 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_23";
	
	

 



/**
 * [tHashInput_23 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_4 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_4";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_4") == null){ 
			
		   		synchronized (multiThreadLockWrite) {
			
				
						java.io.Writer outtFileOutputDelimited_4 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_4");
						if(outtFileOutputDelimited_4!=null) {
							outtFileOutputDelimited_4.flush();
							outtFileOutputDelimited_4.close();
						}
					
				
				}
			
			
		}
	

 



/**
 * [tFileOutputDelimited_4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_23_SUBPROCESS_STATE", 1);
	}
	


public void tJava_12Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_12_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_12", false);
		start_Hash.put("tJava_12", System.currentTimeMillis());
		
	
	currentComponent="tJava_12";
	
	
		int tos_count_tJava_12 = 0;
		


System.out.println("****************** INICIANDO VALIDACION DE VALOR DE PRIORIDAD DE ARCHIVO ******");

 



/**
 * [tJava_12 begin ] stop
 */
	
	/**
	 * [tJava_12 main ] start
	 */

	

	
	
	currentComponent="tJava_12";
	
	

 


	tos_count_tJava_12++;

/**
 * [tJava_12 main ] stop
 */
	
	/**
	 * [tJava_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_12";
	
	

 



/**
 * [tJava_12 process_data_begin ] stop
 */
	
	/**
	 * [tJava_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_12";
	
	

 



/**
 * [tJava_12 process_data_end ] stop
 */
	
	/**
	 * [tJava_12 end ] start
	 */

	

	
	
	currentComponent="tJava_12";
	
	

 

ok_Hash.put("tJava_12", true);
end_Hash.put("tJava_12", System.currentTimeMillis());

   			if ((Integer)globalMap.get("FILAS_ERROR")==0 && (Integer)globalMap.get("FILAS_ERROR_CONFIGURACION")==0 && 
(Integer)globalMap.get("FILAS_ERROR_CONTEO_DIVIPOLA")==0 && (Integer)globalMap.get("FILAS_ERROR_CONTEO_PRIORIDAD_DIVIPOLA")==0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If18", 0, "true");
					}
				tHashInput_24Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If18", 0, "false");
					}   	 
   				}



/**
 * [tJava_12 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_12:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk26", 0, "ok");
								} 
							
							tJava_13Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_12 finally ] start
	 */

	

	
	
	currentComponent="tJava_12";
	
	

 



/**
 * [tJava_12 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_12_SUBPROCESS_STATE", 1);
	}
	


public static class row70Struct implements routines.system.IPersistableRow<row70Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public Integer PRIORIDAD;

				public Integer getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return true;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 0;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.PRIORIDAD = readInteger(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.PRIORIDAD = readInteger(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.PRIORIDAD,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.PRIORIDAD,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row70Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row69Struct implements routines.system.IPersistableRow<row69Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public Integer PRIORIDAD;

				public Integer getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return true;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 0;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public Integer MIN;

				public Integer getMIN () {
					return this.MIN;
				}

				public Boolean MINIsNullable(){
				    return true;
				}
				public Boolean MINIsKey(){
				    return false;
				}
				public Integer MINLength(){
				    return 0;
				}
				public Integer MINPrecision(){
				    return 0;
				}
				public String MINDefault(){
				
					return null;
				
				}
				public String MINComment(){
				
				    return "";
				
				}
				public String MINPattern(){
				
					return "";
				
				}
				public String MINOriginalDbColumnName(){
				
					return "MIN";
				
				}

				
			    public Integer MAX;

				public Integer getMAX () {
					return this.MAX;
				}

				public Boolean MAXIsNullable(){
				    return true;
				}
				public Boolean MAXIsKey(){
				    return false;
				}
				public Integer MAXLength(){
				    return 0;
				}
				public Integer MAXPrecision(){
				    return 0;
				}
				public String MAXDefault(){
				
					return null;
				
				}
				public String MAXComment(){
				
				    return "";
				
				}
				public String MAXPattern(){
				
					return "";
				
				}
				public String MAXOriginalDbColumnName(){
				
					return "MAX";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.PRIORIDAD = readInteger(dis);
					
						this.MIN = readInteger(dis);
					
						this.MAX = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.PRIORIDAD = readInteger(dis);
					
						this.MIN = readInteger(dis);
					
						this.MAX = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.PRIORIDAD,dos);
					
					// Integer
				
						writeInteger(this.MIN,dos);
					
					// Integer
				
						writeInteger(this.MAX,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.PRIORIDAD,dos);
					
					// Integer
				
						writeInteger(this.MIN,dos);
					
					// Integer
				
						writeInteger(this.MAX,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",MIN="+String.valueOf(MIN));
		sb.append(",MAX="+String.valueOf(MAX));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row69Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class COMPROBACION_PRIORIDADStruct implements routines.system.IPersistableRow<COMPROBACION_PRIORIDADStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public Integer PRIORIDAD;

				public Integer getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return true;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 0;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public Integer MIN;

				public Integer getMIN () {
					return this.MIN;
				}

				public Boolean MINIsNullable(){
				    return true;
				}
				public Boolean MINIsKey(){
				    return false;
				}
				public Integer MINLength(){
				    return 0;
				}
				public Integer MINPrecision(){
				    return 0;
				}
				public String MINDefault(){
				
					return null;
				
				}
				public String MINComment(){
				
				    return "";
				
				}
				public String MINPattern(){
				
					return "";
				
				}
				public String MINOriginalDbColumnName(){
				
					return "MIN";
				
				}

				
			    public Integer MAX;

				public Integer getMAX () {
					return this.MAX;
				}

				public Boolean MAXIsNullable(){
				    return true;
				}
				public Boolean MAXIsKey(){
				    return false;
				}
				public Integer MAXLength(){
				    return 0;
				}
				public Integer MAXPrecision(){
				    return 0;
				}
				public String MAXDefault(){
				
					return null;
				
				}
				public String MAXComment(){
				
				    return "";
				
				}
				public String MAXPattern(){
				
					return "";
				
				}
				public String MAXOriginalDbColumnName(){
				
					return "MAX";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.PRIORIDAD = readInteger(dis);
					
						this.MIN = readInteger(dis);
					
						this.MAX = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.PRIORIDAD = readInteger(dis);
					
						this.MIN = readInteger(dis);
					
						this.MAX = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.PRIORIDAD,dos);
					
					// Integer
				
						writeInteger(this.MIN,dos);
					
					// Integer
				
						writeInteger(this.MAX,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.PRIORIDAD,dos);
					
					// Integer
				
						writeInteger(this.MIN,dos);
					
					// Integer
				
						writeInteger(this.MAX,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",MIN="+String.valueOf(MIN));
		sb.append(",MAX="+String.valueOf(MAX));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(COMPROBACION_PRIORIDADStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_3 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_3> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public Integer PRIORIDAD;

				public Integer getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return true;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 0;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public Integer MIN;

				public Integer getMIN () {
					return this.MIN;
				}

				public Boolean MINIsNullable(){
				    return true;
				}
				public Boolean MINIsKey(){
				    return false;
				}
				public Integer MINLength(){
				    return 0;
				}
				public Integer MINPrecision(){
				    return 0;
				}
				public String MINDefault(){
				
					return null;
				
				}
				public String MINComment(){
				
				    return "";
				
				}
				public String MINPattern(){
				
					return "";
				
				}
				public String MINOriginalDbColumnName(){
				
					return "MIN";
				
				}

				
			    public Integer MAX;

				public Integer getMAX () {
					return this.MAX;
				}

				public Boolean MAXIsNullable(){
				    return true;
				}
				public Boolean MAXIsKey(){
				    return false;
				}
				public Integer MAXLength(){
				    return 0;
				}
				public Integer MAXPrecision(){
				    return 0;
				}
				public String MAXDefault(){
				
					return null;
				
				}
				public String MAXComment(){
				
				    return "";
				
				}
				public String MAXPattern(){
				
					return "";
				
				}
				public String MAXOriginalDbColumnName(){
				
					return "MAX";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.PRIORIDAD = readInteger(dis);
					
						this.MIN = readInteger(dis);
					
						this.MAX = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.PRIORIDAD = readInteger(dis);
					
						this.MIN = readInteger(dis);
					
						this.MAX = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.PRIORIDAD,dos);
					
					// Integer
				
						writeInteger(this.MIN,dos);
					
					// Integer
				
						writeInteger(this.MAX,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.PRIORIDAD,dos);
					
					// Integer
				
						writeInteger(this.MIN,dos);
					
					// Integer
				
						writeInteger(this.MAX,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",MIN="+String.valueOf(MIN));
		sb.append(",MAX="+String.valueOf(MAX));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_3 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_24Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_24_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row2Struct row2 = new row2Struct();
COMPROBACION_PRIORIDADStruct COMPROBACION_PRIORIDAD = new COMPROBACION_PRIORIDADStruct();
row69Struct row69 = new row69Struct();
row70Struct row70 = new row70Struct();




	
	/**
	 * [tAggregateRow_3_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_3_AGGOUT", false);
		start_Hash.put("tAggregateRow_3_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tAggregateRow_3_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_3 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_3 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_3 utilClass_tAggregateRow_3 = new UtilClass_tAggregateRow_3();

	

	class AggOperationStruct_tAggregateRow_3 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				String COD_DIVIPOLA;
    				int PRIORIDAD;
         			Integer MIN_min;
         			Integer MAX_max;
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
							result = prime * result + ((this.COD_DIVIPOLA == null) ? 0 : this.COD_DIVIPOLA.hashCode());
							
								result = prime * result + (int) this.PRIORIDAD;
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_3 other = (AggOperationStruct_tAggregateRow_3) obj;
			
							if (this.COD_DIVIPOLA == null) {
								if (other.COD_DIVIPOLA != null) 
									return false;
							} else if (!this.COD_DIVIPOLA.equals(other.COD_DIVIPOLA)) 
								return false;
						
							if (this.PRIORIDAD != other.PRIORIDAD) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_3 operation_result_tAggregateRow_3 = null;
	AggOperationStruct_tAggregateRow_3 operation_finder_tAggregateRow_3 = new AggOperationStruct_tAggregateRow_3();
	java.util.Map<AggOperationStruct_tAggregateRow_3,AggOperationStruct_tAggregateRow_3> hash_tAggregateRow_3 = new java.util.HashMap<AggOperationStruct_tAggregateRow_3,AggOperationStruct_tAggregateRow_3>();
	

 



/**
 * [tAggregateRow_3_AGGOUT begin ] stop
 */



	
	/**
	 * [tHashInput_24 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_24", false);
		start_Hash.put("tHashInput_24", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_24";
	
	
		int tos_count_tHashInput_24 = 0;
		


int nb_line_tHashInput_24 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_24=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row51Struct> tHashFile_tHashInput_24 = mf_tHashInput_24.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_12");
if(tHashFile_tHashInput_24==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row51Struct> iterator_tHashInput_24 = tHashFile_tHashInput_24.iterator();
while (iterator_tHashInput_24.hasNext()) {
    row51Struct next_tHashInput_24 = iterator_tHashInput_24.next();

	row2.COD_DIVIPOLA = next_tHashInput_24.COD_DIVIPOLA;
	row2.INDICADOR = next_tHashInput_24.INDICADOR;
	row2.SEXO = next_tHashInput_24.SEXO;
	row2.EDAD = next_tHashInput_24.EDAD;
	row2.ETNIA = next_tHashInput_24.ETNIA;
	row2.CIE10 = next_tHashInput_24.CIE10;
	row2.PRIORIDAD = next_tHashInput_24.PRIORIDAD;
	row2.GRUPO_RIESGO = next_tHashInput_24.GRUPO_RIESGO;

 



/**
 * [tHashInput_24 begin ] stop
 */
	
	/**
	 * [tHashInput_24 main ] start
	 */

	

	
	
	currentComponent="tHashInput_24";
	
	

 


	tos_count_tHashInput_24++;

/**
 * [tHashInput_24 main ] stop
 */
	
	/**
	 * [tHashInput_24 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_24";
	
	

 



/**
 * [tHashInput_24 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_3_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					
	
operation_finder_tAggregateRow_3.COD_DIVIPOLA = row2.COD_DIVIPOLA;
			operation_finder_tAggregateRow_3.PRIORIDAD = row2.PRIORIDAD;
			

	operation_finder_tAggregateRow_3.hashCodeDirty = true;
	
	operation_result_tAggregateRow_3 = hash_tAggregateRow_3.get(operation_finder_tAggregateRow_3);

	
		boolean isFirstAdd_tAggregateRow_3 = false;
	

	if(operation_result_tAggregateRow_3 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_3 = new AggOperationStruct_tAggregateRow_3();

		operation_result_tAggregateRow_3.COD_DIVIPOLA = operation_finder_tAggregateRow_3.COD_DIVIPOLA;
				operation_result_tAggregateRow_3.PRIORIDAD = operation_finder_tAggregateRow_3.PRIORIDAD;
				
		
		
			isFirstAdd_tAggregateRow_3 = true;
		

		hash_tAggregateRow_3.put(operation_result_tAggregateRow_3, operation_result_tAggregateRow_3);
	
	} // G_OutMain_AggR_001


	
					if(
						operation_result_tAggregateRow_3.MIN_min == null || 
						row2.PRIORIDAD < operation_result_tAggregateRow_3.MIN_min
						
					) {
						operation_result_tAggregateRow_3.MIN_min = row2.PRIORIDAD;
					}
					
					if(
						operation_result_tAggregateRow_3.MAX_max == null || 
						row2.PRIORIDAD > operation_result_tAggregateRow_3.MAX_max
						
					) {
						operation_result_tAggregateRow_3.MAX_max = row2.PRIORIDAD;
					}
					


 


	tos_count_tAggregateRow_3_AGGOUT++;

/**
 * [tAggregateRow_3_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_3_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";
	
	

 



/**
 * [tAggregateRow_3_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_3_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";
	
	

 



/**
 * [tAggregateRow_3_AGGOUT process_data_end ] stop
 */



	
	/**
	 * [tHashInput_24 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_24";
	
	

 



/**
 * [tHashInput_24 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_24 end ] start
	 */

	

	
	
	currentComponent="tHashInput_24";
	
	
    

		
			nb_line_tHashInput_24++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_12");
	


	globalMap.put("tHashInput_24_NB_LINE", nb_line_tHashInput_24);       

 

ok_Hash.put("tHashInput_24", true);
end_Hash.put("tHashInput_24", System.currentTimeMillis());




/**
 * [tHashInput_24 end ] stop
 */

	
	/**
	 * [tAggregateRow_3_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_3_AGGOUT", true);
end_Hash.put("tAggregateRow_3_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_3_AGGOUT end ] stop
 */




	
	/**
	 * [tHashOutput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_16", false);
		start_Hash.put("tHashOutput_16", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row70");
					}
				
		int tos_count_tHashOutput_16 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_16=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row70Struct> tHashFile_tHashOutput_16 = null;
		String hashKey_tHashOutput_16 = "tHashFile_ETL_vigilancia_" + pid + "_tHashOutput_16";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_16)){
			    if(mf_tHashOutput_16.getResourceMap().get(hashKey_tHashOutput_16) == null){
	      		    mf_tHashOutput_16.getResourceMap().put(hashKey_tHashOutput_16, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row70Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_16 = mf_tHashOutput_16.getResourceMap().get(hashKey_tHashOutput_16);
			    }else{
			    	tHashFile_tHashOutput_16 = mf_tHashOutput_16.getResourceMap().get(hashKey_tHashOutput_16);
			    }
			}
        int nb_line_tHashOutput_16 = 0;

 



/**
 * [tHashOutput_16 begin ] stop
 */



	
	/**
	 * [tJavaRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_2", false);
		start_Hash.put("tJavaRow_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row69");
					}
				
		int tos_count_tJavaRow_2 = 0;
		

int nb_line_tJavaRow_2 = 0;

 



/**
 * [tJavaRow_2 begin ] stop
 */



	
	/**
	 * [tFilterRow_100 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_100", false);
		start_Hash.put("tFilterRow_100", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_100";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"COMPROBACION_PRIORIDAD");
					}
				
		int tos_count_tFilterRow_100 = 0;
		
    int nb_line_tFilterRow_100 = 0;
    int nb_line_ok_tFilterRow_100 = 0;
    int nb_line_reject_tFilterRow_100 = 0;

    class Operator_tFilterRow_100 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_100(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_100 begin ] stop
 */



	
	/**
	 * [tAggregateRow_3_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_3_AGGIN", false);
		start_Hash.put("tAggregateRow_3_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";
	
	
		int tos_count_tAggregateRow_3_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_3> values_tAggregateRow_3 = hash_tAggregateRow_3.values();

globalMap.put("tAggregateRow_3_NB_LINE", values_tAggregateRow_3.size());

for(AggOperationStruct_tAggregateRow_3 aggregated_row_tAggregateRow_3 : values_tAggregateRow_3) { // G_AggR_600



 



/**
 * [tAggregateRow_3_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_3_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";
	
	

            				    COMPROBACION_PRIORIDAD.COD_DIVIPOLA = aggregated_row_tAggregateRow_3.COD_DIVIPOLA;
            				    
            				    COMPROBACION_PRIORIDAD.PRIORIDAD = aggregated_row_tAggregateRow_3.PRIORIDAD;
            				    
                                COMPROBACION_PRIORIDAD.MIN = aggregated_row_tAggregateRow_3.MIN_min;
                                COMPROBACION_PRIORIDAD.MAX = aggregated_row_tAggregateRow_3.MAX_max;

 


	tos_count_tAggregateRow_3_AGGIN++;

/**
 * [tAggregateRow_3_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_3_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";
	
	

 



/**
 * [tAggregateRow_3_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_100 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_100";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"COMPROBACION_PRIORIDAD"
						
						);
					}
					

          row69 = null;
    Operator_tFilterRow_100 ope_tFilterRow_100 = new Operator_tFilterRow_100("&&");
      ope_tFilterRow_100.matches((( ( COMPROBACION_PRIORIDAD.COD_DIVIPOLA.length() == 5 ) && ( COMPROBACION_PRIORIDAD.MIN < 1 ) && ( COMPROBACION_PRIORIDAD.MAX > 2 ) ) ||
( ( COMPROBACION_PRIORIDAD.COD_DIVIPOLA.length() == 2 ) && ( COMPROBACION_PRIORIDAD.MIN  < 1 ) && ( COMPROBACION_PRIORIDAD.MAX > 5 ) )), "advanced condition failed");
    
    if (ope_tFilterRow_100.getMatchFlag()) {
              if(row69 == null){ 
                row69 = new row69Struct();
              }
               row69.COD_DIVIPOLA = COMPROBACION_PRIORIDAD.COD_DIVIPOLA;
               row69.PRIORIDAD = COMPROBACION_PRIORIDAD.PRIORIDAD;
               row69.MIN = COMPROBACION_PRIORIDAD.MIN;
               row69.MAX = COMPROBACION_PRIORIDAD.MAX;    
      nb_line_ok_tFilterRow_100++;
    } else {
      nb_line_reject_tFilterRow_100++;
    }

nb_line_tFilterRow_100++;

 


	tos_count_tFilterRow_100++;

/**
 * [tFilterRow_100 main ] stop
 */
	
	/**
	 * [tFilterRow_100 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_100";
	
	

 



/**
 * [tFilterRow_100 process_data_begin ] stop
 */
// Start of branch "row69"
if(row69 != null) { 



	
	/**
	 * [tJavaRow_2 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row69"
						
						);
					}
					

    row70.COD_DIVIPOLA = row69.COD_DIVIPOLA;
row70.PRIORIDAD = row69.PRIORIDAD;
row70.ERROR = context.ErrorMaxMinPrioridad;
globalMap.put("FILAS_ERROR_MAX_MIN_PRIORIDAD", (Integer)globalMap.get("FILAS_ERROR_MAX_MIN_PRIORIDAD")+1);

    nb_line_tJavaRow_2++;   

 


	tos_count_tJavaRow_2++;

/**
 * [tJavaRow_2 main ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_16 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row70"
						
						);
					}
					



    
		row70Struct oneRow_tHashOutput_16 = new row70Struct();
				
					oneRow_tHashOutput_16.COD_DIVIPOLA = row70.COD_DIVIPOLA;
					oneRow_tHashOutput_16.PRIORIDAD = row70.PRIORIDAD;
					oneRow_tHashOutput_16.ERROR = row70.ERROR;
		
        tHashFile_tHashOutput_16.put(oneRow_tHashOutput_16);
        nb_line_tHashOutput_16 ++;

 


	tos_count_tHashOutput_16++;

/**
 * [tHashOutput_16 main ] stop
 */
	
	/**
	 * [tHashOutput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	

 



/**
 * [tHashOutput_16 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	

 



/**
 * [tHashOutput_16 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_end ] stop
 */

} // End of branch "row69"




	
	/**
	 * [tFilterRow_100 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_100";
	
	

 



/**
 * [tFilterRow_100 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_3_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";
	
	

 



/**
 * [tAggregateRow_3_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_3_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";
	
	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_3_AGGIN", true);
end_Hash.put("tAggregateRow_3_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_3_AGGIN end ] stop
 */

	
	/**
	 * [tFilterRow_100 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_100";
	
	
    globalMap.put("tFilterRow_100_NB_LINE", nb_line_tFilterRow_100);
    globalMap.put("tFilterRow_100_NB_LINE_OK", nb_line_ok_tFilterRow_100);
    globalMap.put("tFilterRow_100_NB_LINE_REJECT", nb_line_reject_tFilterRow_100);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"COMPROBACION_PRIORIDAD");
			  	}
			  	
 

ok_Hash.put("tFilterRow_100", true);
end_Hash.put("tFilterRow_100", System.currentTimeMillis());




/**
 * [tFilterRow_100 end ] stop
 */

	
	/**
	 * [tJavaRow_2 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

globalMap.put("tJavaRow_2_NB_LINE",nb_line_tJavaRow_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row69");
			  	}
			  	
 

ok_Hash.put("tJavaRow_2", true);
end_Hash.put("tJavaRow_2", System.currentTimeMillis());




/**
 * [tJavaRow_2 end ] stop
 */

	
	/**
	 * [tHashOutput_16 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	
globalMap.put("tHashOutput_16_NB_LINE", nb_line_tHashOutput_16);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row70");
			  	}
			  	
 

ok_Hash.put("tHashOutput_16", true);
end_Hash.put("tHashOutput_16", System.currentTimeMillis());

   			if (((Integer)globalMap.get("tHashOutput_16_NB_LINE"))>0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If19", 0, "true");
					}
				tHashInput_25Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If19", 0, "false");
					}   	 
   				}



/**
 * [tHashOutput_16 end ] stop
 */















				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tAggregateRow_3_AGGIN"
							globalMap.remove("tAggregateRow_3");
						
				try{
					
	
	/**
	 * [tHashInput_24 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_24";
	
	

 



/**
 * [tHashInput_24 finally ] stop
 */

	
	/**
	 * [tAggregateRow_3_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";
	
	

 



/**
 * [tAggregateRow_3_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_3_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";
	
	

 



/**
 * [tAggregateRow_3_AGGIN finally ] stop
 */

	
	/**
	 * [tFilterRow_100 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_100";
	
	

 



/**
 * [tFilterRow_100 finally ] stop
 */

	
	/**
	 * [tJavaRow_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_16 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	

 



/**
 * [tHashOutput_16 finally ] stop
 */















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_24_SUBPROCESS_STATE", 1);
	}
	


public static class row71Struct implements routines.system.IPersistableRow<row71Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public Integer PRIORIDAD;

				public Integer getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return true;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 0;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.PRIORIDAD = readInteger(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.PRIORIDAD = readInteger(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.PRIORIDAD,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.PRIORIDAD,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row71Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_25Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_25_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row71Struct row71 = new row71Struct();




	
	/**
	 * [tFileOutputDelimited_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_5", false);
		start_Hash.put("tFileOutputDelimited_5", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row71");
					}
				
		int tos_count_tFileOutputDelimited_5 = 0;
		

String fileName_tFileOutputDelimited_5 = "";
    fileName_tFileOutputDelimited_5 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_5 = null;
    String extension_tFileOutputDelimited_5 = null;
    String directory_tFileOutputDelimited_5 = null;
    if((fileName_tFileOutputDelimited_5.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_5.lastIndexOf(".") < fileName_tFileOutputDelimited_5.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_5 = fileName_tFileOutputDelimited_5;
            extension_tFileOutputDelimited_5 = "";
        } else {
            fullName_tFileOutputDelimited_5 = fileName_tFileOutputDelimited_5.substring(0, fileName_tFileOutputDelimited_5.lastIndexOf("."));
            extension_tFileOutputDelimited_5 = fileName_tFileOutputDelimited_5.substring(fileName_tFileOutputDelimited_5.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_5 = fileName_tFileOutputDelimited_5.substring(0, fileName_tFileOutputDelimited_5.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_5.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_5 = fileName_tFileOutputDelimited_5.substring(0, fileName_tFileOutputDelimited_5.lastIndexOf("."));
            extension_tFileOutputDelimited_5 = fileName_tFileOutputDelimited_5.substring(fileName_tFileOutputDelimited_5.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_5 = fileName_tFileOutputDelimited_5;
            extension_tFileOutputDelimited_5 = "";
        }
        directory_tFileOutputDelimited_5 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_5 = true;
    java.io.File filetFileOutputDelimited_5 = new java.io.File(fileName_tFileOutputDelimited_5);
    globalMap.put("tFileOutputDelimited_5_FILE_NAME",fileName_tFileOutputDelimited_5);
            int nb_line_tFileOutputDelimited_5 = 0;
            int splitedFileNo_tFileOutputDelimited_5 = 0;
            int currentRow_tFileOutputDelimited_5 = 0;

            final String OUT_DELIM_tFileOutputDelimited_5 = /** Start field tFileOutputDelimited_5:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_5:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_5 = /** Start field tFileOutputDelimited_5:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_5:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_5 != null && directory_tFileOutputDelimited_5.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_5 = new java.io.File(directory_tFileOutputDelimited_5);
                        if(!dir_tFileOutputDelimited_5.exists()) {
                            dir_tFileOutputDelimited_5.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_5 = null;

                        java.io.File fileToDelete_tFileOutputDelimited_5 = new java.io.File(fileName_tFileOutputDelimited_5);
                        if(fileToDelete_tFileOutputDelimited_5.exists()) {
                            fileToDelete_tFileOutputDelimited_5.delete();
                        }
                        outtFileOutputDelimited_5 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_5, false),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_5", outtFileOutputDelimited_5);
                        synchronized (multiThreadLockWrite) {
                                    if(filetFileOutputDelimited_5.length()==0){
                                        outtFileOutputDelimited_5.write("COD_DIVIPOLA");
                                            outtFileOutputDelimited_5.write(OUT_DELIM_tFileOutputDelimited_5);
                                        outtFileOutputDelimited_5.write("PRIORIDAD");
                                            outtFileOutputDelimited_5.write(OUT_DELIM_tFileOutputDelimited_5);
                                        outtFileOutputDelimited_5.write("ERROR");
                                        outtFileOutputDelimited_5.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_5);
                                        outtFileOutputDelimited_5.flush();
                                    }
                        }


resourceMap.put("nb_line_tFileOutputDelimited_5", nb_line_tFileOutputDelimited_5);

 



/**
 * [tFileOutputDelimited_5 begin ] stop
 */



	
	/**
	 * [tHashInput_25 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_25", false);
		start_Hash.put("tHashInput_25", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_25";
	
	
		int tos_count_tHashInput_25 = 0;
		


int nb_line_tHashInput_25 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_25=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row70Struct> tHashFile_tHashInput_25 = mf_tHashInput_25.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_16");
if(tHashFile_tHashInput_25==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row70Struct> iterator_tHashInput_25 = tHashFile_tHashInput_25.iterator();
while (iterator_tHashInput_25.hasNext()) {
    row70Struct next_tHashInput_25 = iterator_tHashInput_25.next();

	row71.COD_DIVIPOLA = next_tHashInput_25.COD_DIVIPOLA;
	row71.PRIORIDAD = next_tHashInput_25.PRIORIDAD;
	row71.ERROR = next_tHashInput_25.ERROR;

 



/**
 * [tHashInput_25 begin ] stop
 */
	
	/**
	 * [tHashInput_25 main ] start
	 */

	

	
	
	currentComponent="tHashInput_25";
	
	

 


	tos_count_tHashInput_25++;

/**
 * [tHashInput_25 main ] stop
 */
	
	/**
	 * [tHashInput_25 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_25";
	
	

 



/**
 * [tHashInput_25 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_5 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row71"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_5 = new StringBuilder();
                            if(row71.COD_DIVIPOLA != null) {
                        sb_tFileOutputDelimited_5.append(
                            row71.COD_DIVIPOLA
                        );
                            }
                            sb_tFileOutputDelimited_5.append(OUT_DELIM_tFileOutputDelimited_5);
                            if(row71.PRIORIDAD != null) {
                        sb_tFileOutputDelimited_5.append(
                            row71.PRIORIDAD
                        );
                            }
                            sb_tFileOutputDelimited_5.append(OUT_DELIM_tFileOutputDelimited_5);
                            if(row71.ERROR != null) {
                        sb_tFileOutputDelimited_5.append(
                            row71.ERROR
                        );
                            }
                    sb_tFileOutputDelimited_5.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_5);


                    synchronized (multiThreadLockWrite) {
                    nb_line_tFileOutputDelimited_5++;
                    resourceMap.put("nb_line_tFileOutputDelimited_5", nb_line_tFileOutputDelimited_5);

                        outtFileOutputDelimited_5.write(sb_tFileOutputDelimited_5.toString());

                    }



 


	tos_count_tFileOutputDelimited_5++;

/**
 * [tFileOutputDelimited_5 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_5";
	
	

 



/**
 * [tFileOutputDelimited_5 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_5";
	
	

 



/**
 * [tFileOutputDelimited_5 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_25 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_25";
	
	

 



/**
 * [tHashInput_25 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_25 end ] start
	 */

	

	
	
	currentComponent="tHashInput_25";
	
	
    

		
			nb_line_tHashInput_25++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_16");
	


	globalMap.put("tHashInput_25_NB_LINE", nb_line_tHashInput_25);       

 

ok_Hash.put("tHashInput_25", true);
end_Hash.put("tHashInput_25", System.currentTimeMillis());




/**
 * [tHashInput_25 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_5 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_5";
	
	



		
	   		synchronized (multiThreadLockWrite) {
		
			
					if(outtFileOutputDelimited_5!=null) {
						outtFileOutputDelimited_5.flush();
						outtFileOutputDelimited_5.close();
					}
				
				globalMap.put("tFileOutputDelimited_5_NB_LINE",nb_line_tFileOutputDelimited_5);
				globalMap.put("tFileOutputDelimited_5_FILE_NAME",fileName_tFileOutputDelimited_5);
			
		
			}
		
		
		resourceMap.put("finish_tFileOutputDelimited_5", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row71");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_5", true);
end_Hash.put("tFileOutputDelimited_5", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk54", 0, "ok");
				}
				tFixedFlowInput_26Process(globalMap);



/**
 * [tFileOutputDelimited_5 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_25 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_25";
	
	

 



/**
 * [tHashInput_25 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_5 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_5";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_5") == null){ 
			
		   		synchronized (multiThreadLockWrite) {
			
				
						java.io.Writer outtFileOutputDelimited_5 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_5");
						if(outtFileOutputDelimited_5!=null) {
							outtFileOutputDelimited_5.flush();
							outtFileOutputDelimited_5.close();
						}
					
				
				}
			
			
		}
	

 



/**
 * [tFileOutputDelimited_5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_25_SUBPROCESS_STATE", 1);
	}
	


public void tJava_13Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_13_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_13", false);
		start_Hash.put("tJava_13", System.currentTimeMillis());
		
	
	currentComponent="tJava_13";
	
	
		int tos_count_tJava_13 = 0;
		


System.out.println("****************** INICIANDO VALIDACION DE CONTEO DE INDICADORES DE ARCHIVO ******");

 



/**
 * [tJava_13 begin ] stop
 */
	
	/**
	 * [tJava_13 main ] start
	 */

	

	
	
	currentComponent="tJava_13";
	
	

 


	tos_count_tJava_13++;

/**
 * [tJava_13 main ] stop
 */
	
	/**
	 * [tJava_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_13";
	
	

 



/**
 * [tJava_13 process_data_begin ] stop
 */
	
	/**
	 * [tJava_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_13";
	
	

 



/**
 * [tJava_13 process_data_end ] stop
 */
	
	/**
	 * [tJava_13 end ] start
	 */

	

	
	
	currentComponent="tJava_13";
	
	

 

ok_Hash.put("tJava_13", true);
end_Hash.put("tJava_13", System.currentTimeMillis());

   			if ((Integer)globalMap.get("FILAS_ERROR")==0 && (Integer)globalMap.get("FILAS_ERROR_CONFIGURACION")==0 && 
(Integer)globalMap.get("FILAS_ERROR_CONTEO_DIVIPOLA")==0 && (Integer)globalMap.get("FILAS_ERROR_CONTEO_PRIORIDAD_DIVIPOLA")==0 && (Integer)globalMap.get("FILAS_ERROR_MAX_MIN_PRIORIDAD")==0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If21", 0, "true");
					}
				tHashInput_26Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If21", 0, "false");
					}   	 
   				}



/**
 * [tJava_13 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_13:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk27", 0, "ok");
								} 
							
							tJava_7Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_13 finally ] start
	 */

	

	
	
	currentComponent="tJava_13";
	
	

 



/**
 * [tJava_13 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_13_SUBPROCESS_STATE", 1);
	}
	


public static class row74Struct implements routines.system.IPersistableRow<row74Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public Integer INDICADOR;

				public Integer getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return true;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 0;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.INDICADOR = readInteger(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.INDICADOR = readInteger(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.INDICADOR,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.INDICADOR,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row74Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row73Struct implements routines.system.IPersistableRow<row73Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return true;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 0;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public Integer INDICADOR;

				public Integer getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return true;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 0;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public Integer CONTEO;

				public Integer getCONTEO () {
					return this.CONTEO;
				}

				public Boolean CONTEOIsNullable(){
				    return true;
				}
				public Boolean CONTEOIsKey(){
				    return false;
				}
				public Integer CONTEOLength(){
				    return 0;
				}
				public Integer CONTEOPrecision(){
				    return 0;
				}
				public String CONTEODefault(){
				
					return null;
				
				}
				public String CONTEOComment(){
				
				    return "";
				
				}
				public String CONTEOPattern(){
				
					return "";
				
				}
				public String CONTEOOriginalDbColumnName(){
				
					return "CONTEO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.INDICADOR = readInteger(dis);
					
						this.CONTEO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.INDICADOR = readInteger(dis);
					
						this.CONTEO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.INDICADOR,dos);
					
					// Integer
				
						writeInteger(this.CONTEO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.INDICADOR,dos);
					
					// Integer
				
						writeInteger(this.CONTEO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",CONTEO="+String.valueOf(CONTEO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row73Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class COMPROBACION_INDICADORStruct implements routines.system.IPersistableRow<COMPROBACION_INDICADORStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return true;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 0;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public Integer INDICADOR;

				public Integer getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return true;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 0;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public Integer CONTEO;

				public Integer getCONTEO () {
					return this.CONTEO;
				}

				public Boolean CONTEOIsNullable(){
				    return true;
				}
				public Boolean CONTEOIsKey(){
				    return false;
				}
				public Integer CONTEOLength(){
				    return 0;
				}
				public Integer CONTEOPrecision(){
				    return 0;
				}
				public String CONTEODefault(){
				
					return null;
				
				}
				public String CONTEOComment(){
				
				    return "";
				
				}
				public String CONTEOPattern(){
				
					return "";
				
				}
				public String CONTEOOriginalDbColumnName(){
				
					return "CONTEO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.INDICADOR = readInteger(dis);
					
						this.CONTEO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.INDICADOR = readInteger(dis);
					
						this.CONTEO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.INDICADOR,dos);
					
					// Integer
				
						writeInteger(this.CONTEO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.INDICADOR,dos);
					
					// Integer
				
						writeInteger(this.CONTEO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",CONTEO="+String.valueOf(CONTEO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(COMPROBACION_INDICADORStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_4 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_4> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return true;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 0;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public Integer INDICADOR;

				public Integer getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return true;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 0;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public Integer CONTEO;

				public Integer getCONTEO () {
					return this.CONTEO;
				}

				public Boolean CONTEOIsNullable(){
				    return true;
				}
				public Boolean CONTEOIsKey(){
				    return false;
				}
				public Integer CONTEOLength(){
				    return 0;
				}
				public Integer CONTEOPrecision(){
				    return 0;
				}
				public String CONTEODefault(){
				
					return null;
				
				}
				public String CONTEOComment(){
				
				    return "";
				
				}
				public String CONTEOPattern(){
				
					return "";
				
				}
				public String CONTEOOriginalDbColumnName(){
				
					return "CONTEO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.INDICADOR = readInteger(dis);
					
						this.CONTEO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
						this.INDICADOR = readInteger(dis);
					
						this.CONTEO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.INDICADOR,dos);
					
					// Integer
				
						writeInteger(this.CONTEO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// Integer
				
						writeInteger(this.INDICADOR,dos);
					
					// Integer
				
						writeInteger(this.CONTEO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",CONTEO="+String.valueOf(CONTEO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_4 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row40Struct implements routines.system.IPersistableRow<row40Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row40Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_26Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_26_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row40Struct row40 = new row40Struct();
COMPROBACION_INDICADORStruct COMPROBACION_INDICADOR = new COMPROBACION_INDICADORStruct();
row73Struct row73 = new row73Struct();
row74Struct row74 = new row74Struct();




	
	/**
	 * [tAggregateRow_4_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_4_AGGOUT", false);
		start_Hash.put("tAggregateRow_4_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row40");
					}
				
		int tos_count_tAggregateRow_4_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_4 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_4 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_4 utilClass_tAggregateRow_4 = new UtilClass_tAggregateRow_4();

	

	class AggOperationStruct_tAggregateRow_4 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				String COD_DIVIPOLA;
    				int INDICADOR;int count = 0;
       			int CONTEO_clmCount = 0;
           			
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
							result = prime * result + ((this.COD_DIVIPOLA == null) ? 0 : this.COD_DIVIPOLA.hashCode());
							
								result = prime * result + (int) this.INDICADOR;
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_4 other = (AggOperationStruct_tAggregateRow_4) obj;
			
							if (this.COD_DIVIPOLA == null) {
								if (other.COD_DIVIPOLA != null) 
									return false;
							} else if (!this.COD_DIVIPOLA.equals(other.COD_DIVIPOLA)) 
								return false;
						
							if (this.INDICADOR != other.INDICADOR) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_4 operation_result_tAggregateRow_4 = null;
	AggOperationStruct_tAggregateRow_4 operation_finder_tAggregateRow_4 = new AggOperationStruct_tAggregateRow_4();
	java.util.Map<AggOperationStruct_tAggregateRow_4,AggOperationStruct_tAggregateRow_4> hash_tAggregateRow_4 = new java.util.HashMap<AggOperationStruct_tAggregateRow_4,AggOperationStruct_tAggregateRow_4>();
	

 



/**
 * [tAggregateRow_4_AGGOUT begin ] stop
 */



	
	/**
	 * [tHashInput_26 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_26", false);
		start_Hash.put("tHashInput_26", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_26";
	
	
		int tos_count_tHashInput_26 = 0;
		


int nb_line_tHashInput_26 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_26=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row51Struct> tHashFile_tHashInput_26 = mf_tHashInput_26.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_12");
if(tHashFile_tHashInput_26==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row51Struct> iterator_tHashInput_26 = tHashFile_tHashInput_26.iterator();
while (iterator_tHashInput_26.hasNext()) {
    row51Struct next_tHashInput_26 = iterator_tHashInput_26.next();

	row40.COD_DIVIPOLA = next_tHashInput_26.COD_DIVIPOLA;
	row40.INDICADOR = next_tHashInput_26.INDICADOR;
	row40.SEXO = next_tHashInput_26.SEXO;
	row40.EDAD = next_tHashInput_26.EDAD;
	row40.ETNIA = next_tHashInput_26.ETNIA;
	row40.CIE10 = next_tHashInput_26.CIE10;
	row40.PRIORIDAD = next_tHashInput_26.PRIORIDAD;
	row40.GRUPO_RIESGO = next_tHashInput_26.GRUPO_RIESGO;

 



/**
 * [tHashInput_26 begin ] stop
 */
	
	/**
	 * [tHashInput_26 main ] start
	 */

	

	
	
	currentComponent="tHashInput_26";
	
	

 


	tos_count_tHashInput_26++;

/**
 * [tHashInput_26 main ] stop
 */
	
	/**
	 * [tHashInput_26 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_26";
	
	

 



/**
 * [tHashInput_26 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_4_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row40"
						
						);
					}
					
	
operation_finder_tAggregateRow_4.COD_DIVIPOLA = row40.COD_DIVIPOLA;
			operation_finder_tAggregateRow_4.INDICADOR = row40.INDICADOR;
			

	operation_finder_tAggregateRow_4.hashCodeDirty = true;
	
	operation_result_tAggregateRow_4 = hash_tAggregateRow_4.get(operation_finder_tAggregateRow_4);

	

	if(operation_result_tAggregateRow_4 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_4 = new AggOperationStruct_tAggregateRow_4();

		operation_result_tAggregateRow_4.COD_DIVIPOLA = operation_finder_tAggregateRow_4.COD_DIVIPOLA;
				operation_result_tAggregateRow_4.INDICADOR = operation_finder_tAggregateRow_4.INDICADOR;
				
		
		

		hash_tAggregateRow_4.put(operation_result_tAggregateRow_4, operation_result_tAggregateRow_4);
	
	} // G_OutMain_AggR_001


	
				operation_result_tAggregateRow_4.CONTEO_clmCount++;
				operation_result_tAggregateRow_4.count++;
				


 


	tos_count_tAggregateRow_4_AGGOUT++;

/**
 * [tAggregateRow_4_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

 



/**
 * [tAggregateRow_4_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

 



/**
 * [tAggregateRow_4_AGGOUT process_data_end ] stop
 */



	
	/**
	 * [tHashInput_26 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_26";
	
	

 



/**
 * [tHashInput_26 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_26 end ] start
	 */

	

	
	
	currentComponent="tHashInput_26";
	
	
    

		
			nb_line_tHashInput_26++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_12");
	


	globalMap.put("tHashInput_26_NB_LINE", nb_line_tHashInput_26);       

 

ok_Hash.put("tHashInput_26", true);
end_Hash.put("tHashInput_26", System.currentTimeMillis());




/**
 * [tHashInput_26 end ] stop
 */

	
	/**
	 * [tAggregateRow_4_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row40");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_4_AGGOUT", true);
end_Hash.put("tAggregateRow_4_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_4_AGGOUT end ] stop
 */




	
	/**
	 * [tHashOutput_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_17", false);
		start_Hash.put("tHashOutput_17", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_17";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row74");
					}
				
		int tos_count_tHashOutput_17 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_17=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row74Struct> tHashFile_tHashOutput_17 = null;
		String hashKey_tHashOutput_17 = "tHashFile_ETL_vigilancia_" + pid + "_tHashOutput_17";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_17)){
			    if(mf_tHashOutput_17.getResourceMap().get(hashKey_tHashOutput_17) == null){
	      		    mf_tHashOutput_17.getResourceMap().put(hashKey_tHashOutput_17, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row74Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_17 = mf_tHashOutput_17.getResourceMap().get(hashKey_tHashOutput_17);
			    }else{
			    	tHashFile_tHashOutput_17 = mf_tHashOutput_17.getResourceMap().get(hashKey_tHashOutput_17);
			    }
			}
        int nb_line_tHashOutput_17 = 0;

 



/**
 * [tHashOutput_17 begin ] stop
 */



	
	/**
	 * [tJavaRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_4", false);
		start_Hash.put("tJavaRow_4", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row73");
					}
				
		int tos_count_tJavaRow_4 = 0;
		

int nb_line_tJavaRow_4 = 0;

 



/**
 * [tJavaRow_4 begin ] stop
 */



	
	/**
	 * [tFilterRow_106 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_106", false);
		start_Hash.put("tFilterRow_106", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_106";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"COMPROBACION_INDICADOR");
					}
				
		int tos_count_tFilterRow_106 = 0;
		
    int nb_line_tFilterRow_106 = 0;
    int nb_line_ok_tFilterRow_106 = 0;
    int nb_line_reject_tFilterRow_106 = 0;

    class Operator_tFilterRow_106 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_106(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_106 begin ] stop
 */



	
	/**
	 * [tAggregateRow_4_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_4_AGGIN", false);
		start_Hash.put("tAggregateRow_4_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	
		int tos_count_tAggregateRow_4_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_4> values_tAggregateRow_4 = hash_tAggregateRow_4.values();

globalMap.put("tAggregateRow_4_NB_LINE", values_tAggregateRow_4.size());

for(AggOperationStruct_tAggregateRow_4 aggregated_row_tAggregateRow_4 : values_tAggregateRow_4) { // G_AggR_600



 



/**
 * [tAggregateRow_4_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	

            				    COMPROBACION_INDICADOR.COD_DIVIPOLA = aggregated_row_tAggregateRow_4.COD_DIVIPOLA;
            				    
            				    COMPROBACION_INDICADOR.INDICADOR = aggregated_row_tAggregateRow_4.INDICADOR;
            				    COMPROBACION_INDICADOR.CONTEO = (int) aggregated_row_tAggregateRow_4.count;
	                                	COMPROBACION_INDICADOR.CONTEO = (int) aggregated_row_tAggregateRow_4.CONTEO_clmCount;
	                                	

 


	tos_count_tAggregateRow_4_AGGIN++;

/**
 * [tAggregateRow_4_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	

 



/**
 * [tAggregateRow_4_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_106 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_106";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"COMPROBACION_INDICADOR"
						
						);
					}
					

          row73 = null;
    Operator_tFilterRow_106 ope_tFilterRow_106 = new Operator_tFilterRow_106("&&");
      ope_tFilterRow_106.matches((COMPROBACION_INDICADOR.CONTEO > 1), "advanced condition failed");
    
    if (ope_tFilterRow_106.getMatchFlag()) {
              if(row73 == null){ 
                row73 = new row73Struct();
              }
               row73.COD_DIVIPOLA = COMPROBACION_INDICADOR.COD_DIVIPOLA;
               row73.INDICADOR = COMPROBACION_INDICADOR.INDICADOR;
               row73.CONTEO = COMPROBACION_INDICADOR.CONTEO;    
      nb_line_ok_tFilterRow_106++;
    } else {
      nb_line_reject_tFilterRow_106++;
    }

nb_line_tFilterRow_106++;

 


	tos_count_tFilterRow_106++;

/**
 * [tFilterRow_106 main ] stop
 */
	
	/**
	 * [tFilterRow_106 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_106";
	
	

 



/**
 * [tFilterRow_106 process_data_begin ] stop
 */
// Start of branch "row73"
if(row73 != null) { 



	
	/**
	 * [tJavaRow_4 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row73"
						
						);
					}
					

    //Code generate according to input schema and output schema
row74.INDICADOR = row73.INDICADOR;
row74.ERROR = context.ErrorConteoIndicador;
globalMap.put("FILAS_ERROR_CONTEO_INDICADOR", (Integer)globalMap.get("FILAS_ERROR_CONTEO_INDICADOR")+1);


    nb_line_tJavaRow_4++;   

 


	tos_count_tJavaRow_4++;

/**
 * [tJavaRow_4 main ] stop
 */
	
	/**
	 * [tJavaRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_17 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_17";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row74"
						
						);
					}
					



    
		row74Struct oneRow_tHashOutput_17 = new row74Struct();
				
					oneRow_tHashOutput_17.INDICADOR = row74.INDICADOR;
					oneRow_tHashOutput_17.ERROR = row74.ERROR;
		
        tHashFile_tHashOutput_17.put(oneRow_tHashOutput_17);
        nb_line_tHashOutput_17 ++;

 


	tos_count_tHashOutput_17++;

/**
 * [tHashOutput_17 main ] stop
 */
	
	/**
	 * [tHashOutput_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_17";
	
	

 



/**
 * [tHashOutput_17 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_17";
	
	

 



/**
 * [tHashOutput_17 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_end ] stop
 */

} // End of branch "row73"




	
	/**
	 * [tFilterRow_106 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_106";
	
	

 



/**
 * [tFilterRow_106 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_4_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	

 



/**
 * [tAggregateRow_4_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_4_AGGIN", true);
end_Hash.put("tAggregateRow_4_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_4_AGGIN end ] stop
 */

	
	/**
	 * [tFilterRow_106 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_106";
	
	
    globalMap.put("tFilterRow_106_NB_LINE", nb_line_tFilterRow_106);
    globalMap.put("tFilterRow_106_NB_LINE_OK", nb_line_ok_tFilterRow_106);
    globalMap.put("tFilterRow_106_NB_LINE_REJECT", nb_line_reject_tFilterRow_106);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"COMPROBACION_INDICADOR");
			  	}
			  	
 

ok_Hash.put("tFilterRow_106", true);
end_Hash.put("tFilterRow_106", System.currentTimeMillis());




/**
 * [tFilterRow_106 end ] stop
 */

	
	/**
	 * [tJavaRow_4 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

globalMap.put("tJavaRow_4_NB_LINE",nb_line_tJavaRow_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row73");
			  	}
			  	
 

ok_Hash.put("tJavaRow_4", true);
end_Hash.put("tJavaRow_4", System.currentTimeMillis());




/**
 * [tJavaRow_4 end ] stop
 */

	
	/**
	 * [tHashOutput_17 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_17";
	
	
globalMap.put("tHashOutput_17_NB_LINE", nb_line_tHashOutput_17);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row74");
			  	}
			  	
 

ok_Hash.put("tHashOutput_17", true);
end_Hash.put("tHashOutput_17", System.currentTimeMillis());

   			if (((Integer)globalMap.get("tHashOutput_17_NB_LINE"))>0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If22", 0, "true");
					}
				tHashInput_27Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If22", 0, "false");
					}   	 
   				}



/**
 * [tHashOutput_17 end ] stop
 */















				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tAggregateRow_4_AGGIN"
							globalMap.remove("tAggregateRow_4");
						
				try{
					
	
	/**
	 * [tHashInput_26 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_26";
	
	

 



/**
 * [tHashInput_26 finally ] stop
 */

	
	/**
	 * [tAggregateRow_4_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

 



/**
 * [tAggregateRow_4_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_4_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	

 



/**
 * [tAggregateRow_4_AGGIN finally ] stop
 */

	
	/**
	 * [tFilterRow_106 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_106";
	
	

 



/**
 * [tFilterRow_106 finally ] stop
 */

	
	/**
	 * [tJavaRow_4 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 finally ] stop
 */

	
	/**
	 * [tHashOutput_17 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_17";
	
	

 



/**
 * [tHashOutput_17 finally ] stop
 */















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_26_SUBPROCESS_STATE", 1);
	}
	


public static class row75Struct implements routines.system.IPersistableRow<row75Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public Integer INDICADOR;

				public Integer getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return true;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 0;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.INDICADOR = readInteger(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.INDICADOR = readInteger(dis);
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.INDICADOR,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.INDICADOR,dos);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row75Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_27Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_27_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row75Struct row75 = new row75Struct();




	
	/**
	 * [tFileOutputDelimited_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_6", false);
		start_Hash.put("tFileOutputDelimited_6", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row75");
					}
				
		int tos_count_tFileOutputDelimited_6 = 0;
		

String fileName_tFileOutputDelimited_6 = "";
    fileName_tFileOutputDelimited_6 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_6 = null;
    String extension_tFileOutputDelimited_6 = null;
    String directory_tFileOutputDelimited_6 = null;
    if((fileName_tFileOutputDelimited_6.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_6.lastIndexOf(".") < fileName_tFileOutputDelimited_6.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_6 = fileName_tFileOutputDelimited_6;
            extension_tFileOutputDelimited_6 = "";
        } else {
            fullName_tFileOutputDelimited_6 = fileName_tFileOutputDelimited_6.substring(0, fileName_tFileOutputDelimited_6.lastIndexOf("."));
            extension_tFileOutputDelimited_6 = fileName_tFileOutputDelimited_6.substring(fileName_tFileOutputDelimited_6.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_6 = fileName_tFileOutputDelimited_6.substring(0, fileName_tFileOutputDelimited_6.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_6.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_6 = fileName_tFileOutputDelimited_6.substring(0, fileName_tFileOutputDelimited_6.lastIndexOf("."));
            extension_tFileOutputDelimited_6 = fileName_tFileOutputDelimited_6.substring(fileName_tFileOutputDelimited_6.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_6 = fileName_tFileOutputDelimited_6;
            extension_tFileOutputDelimited_6 = "";
        }
        directory_tFileOutputDelimited_6 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_6 = true;
    java.io.File filetFileOutputDelimited_6 = new java.io.File(fileName_tFileOutputDelimited_6);
    globalMap.put("tFileOutputDelimited_6_FILE_NAME",fileName_tFileOutputDelimited_6);
            int nb_line_tFileOutputDelimited_6 = 0;
            int splitedFileNo_tFileOutputDelimited_6 = 0;
            int currentRow_tFileOutputDelimited_6 = 0;

            final String OUT_DELIM_tFileOutputDelimited_6 = /** Start field tFileOutputDelimited_6:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_6:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_6 = /** Start field tFileOutputDelimited_6:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_6:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_6 != null && directory_tFileOutputDelimited_6.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_6 = new java.io.File(directory_tFileOutputDelimited_6);
                        if(!dir_tFileOutputDelimited_6.exists()) {
                            dir_tFileOutputDelimited_6.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_6 = null;

                        java.io.File fileToDelete_tFileOutputDelimited_6 = new java.io.File(fileName_tFileOutputDelimited_6);
                        if(fileToDelete_tFileOutputDelimited_6.exists()) {
                            fileToDelete_tFileOutputDelimited_6.delete();
                        }
                        outtFileOutputDelimited_6 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_6, false),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_6", outtFileOutputDelimited_6);
                        synchronized (multiThreadLockWrite) {
                                    if(filetFileOutputDelimited_6.length()==0){
                                        outtFileOutputDelimited_6.write("INDICADOR");
                                            outtFileOutputDelimited_6.write(OUT_DELIM_tFileOutputDelimited_6);
                                        outtFileOutputDelimited_6.write("ERROR");
                                        outtFileOutputDelimited_6.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_6);
                                        outtFileOutputDelimited_6.flush();
                                    }
                        }


resourceMap.put("nb_line_tFileOutputDelimited_6", nb_line_tFileOutputDelimited_6);

 



/**
 * [tFileOutputDelimited_6 begin ] stop
 */



	
	/**
	 * [tHashInput_27 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_27", false);
		start_Hash.put("tHashInput_27", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_27";
	
	
		int tos_count_tHashInput_27 = 0;
		


int nb_line_tHashInput_27 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_27=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row74Struct> tHashFile_tHashInput_27 = mf_tHashInput_27.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_17");
if(tHashFile_tHashInput_27==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row74Struct> iterator_tHashInput_27 = tHashFile_tHashInput_27.iterator();
while (iterator_tHashInput_27.hasNext()) {
    row74Struct next_tHashInput_27 = iterator_tHashInput_27.next();

	row75.INDICADOR = next_tHashInput_27.INDICADOR;
	row75.ERROR = next_tHashInput_27.ERROR;

 



/**
 * [tHashInput_27 begin ] stop
 */
	
	/**
	 * [tHashInput_27 main ] start
	 */

	

	
	
	currentComponent="tHashInput_27";
	
	

 


	tos_count_tHashInput_27++;

/**
 * [tHashInput_27 main ] stop
 */
	
	/**
	 * [tHashInput_27 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_27";
	
	

 



/**
 * [tHashInput_27 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_6 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row75"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_6 = new StringBuilder();
                            if(row75.INDICADOR != null) {
                        sb_tFileOutputDelimited_6.append(
                            row75.INDICADOR
                        );
                            }
                            sb_tFileOutputDelimited_6.append(OUT_DELIM_tFileOutputDelimited_6);
                            if(row75.ERROR != null) {
                        sb_tFileOutputDelimited_6.append(
                            row75.ERROR
                        );
                            }
                    sb_tFileOutputDelimited_6.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_6);


                    synchronized (multiThreadLockWrite) {
                    nb_line_tFileOutputDelimited_6++;
                    resourceMap.put("nb_line_tFileOutputDelimited_6", nb_line_tFileOutputDelimited_6);

                        outtFileOutputDelimited_6.write(sb_tFileOutputDelimited_6.toString());

                    }



 


	tos_count_tFileOutputDelimited_6++;

/**
 * [tFileOutputDelimited_6 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_6";
	
	

 



/**
 * [tFileOutputDelimited_6 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_6";
	
	

 



/**
 * [tFileOutputDelimited_6 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_27 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_27";
	
	

 



/**
 * [tHashInput_27 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_27 end ] start
	 */

	

	
	
	currentComponent="tHashInput_27";
	
	
    

		
			nb_line_tHashInput_27++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_17");
	


	globalMap.put("tHashInput_27_NB_LINE", nb_line_tHashInput_27);       

 

ok_Hash.put("tHashInput_27", true);
end_Hash.put("tHashInput_27", System.currentTimeMillis());




/**
 * [tHashInput_27 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_6 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_6";
	
	



		
	   		synchronized (multiThreadLockWrite) {
		
			
					if(outtFileOutputDelimited_6!=null) {
						outtFileOutputDelimited_6.flush();
						outtFileOutputDelimited_6.close();
					}
				
				globalMap.put("tFileOutputDelimited_6_NB_LINE",nb_line_tFileOutputDelimited_6);
				globalMap.put("tFileOutputDelimited_6_FILE_NAME",fileName_tFileOutputDelimited_6);
			
		
			}
		
		
		resourceMap.put("finish_tFileOutputDelimited_6", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row75");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_6", true);
end_Hash.put("tFileOutputDelimited_6", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk55", 0, "ok");
				}
				tFixedFlowInput_26Process(globalMap);



/**
 * [tFileOutputDelimited_6 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_27 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_27";
	
	

 



/**
 * [tHashInput_27 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_6 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_6";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_6") == null){ 
			
		   		synchronized (multiThreadLockWrite) {
			
				
						java.io.Writer outtFileOutputDelimited_6 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_6");
						if(outtFileOutputDelimited_6!=null) {
							outtFileOutputDelimited_6.flush();
							outtFileOutputDelimited_6.close();
						}
					
				
				}
			
			
		}
	

 



/**
 * [tFileOutputDelimited_6 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_27_SUBPROCESS_STATE", 1);
	}
	


public void tJava_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_7", false);
		start_Hash.put("tJava_7", System.currentTimeMillis());
		
	
	currentComponent="tJava_7";
	
	
		int tos_count_tJava_7 = 0;
		


System.out.println("****************** VALIDACION DE CONFIGURACION DE ARCHIVO COMPLETA *************");

 



/**
 * [tJava_7 begin ] stop
 */
	
	/**
	 * [tJava_7 main ] start
	 */

	

	
	
	currentComponent="tJava_7";
	
	

 


	tos_count_tJava_7++;

/**
 * [tJava_7 main ] stop
 */
	
	/**
	 * [tJava_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_7";
	
	

 



/**
 * [tJava_7 process_data_begin ] stop
 */
	
	/**
	 * [tJava_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_7";
	
	

 



/**
 * [tJava_7 process_data_end ] stop
 */
	
	/**
	 * [tJava_7 end ] start
	 */

	

	
	
	currentComponent="tJava_7";
	
	

 

ok_Hash.put("tJava_7", true);
end_Hash.put("tJava_7", System.currentTimeMillis());

   			if ((Integer)globalMap.get("FILAS_ERROR")==0 && (Integer)globalMap.get("FILAS_ERROR_CONFIGURACION")==0 && 
(Integer)globalMap.get("FILAS_ERROR_CONTEO_DIVIPOLA")==0 && (Integer)globalMap.get("FILAS_ERROR_CONTEO_PRIORIDAD_DIVIPOLA")==0 && (Integer)globalMap.get("FILAS_ERROR_MAX_MIN_PRIORIDAD")==0 && (Integer)globalMap.get("FILAS_ERROR_CONTEO_INDICADOR")==0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If8", 0, "true");
					}
				tHashInput_19Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If8", 0, "false");
					}   	 
   				}



/**
 * [tJava_7 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_7 finally ] start
	 */

	

	
	
	currentComponent="tJava_7";
	
	

 



/**
 * [tJava_7 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_7_SUBPROCESS_STATE", 1);
	}
	


public static class VSP_DPRIORIZACION_OUTStruct implements routines.system.IPersistableRow<VSP_DPRIORIZACION_OUTStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public Integer PRIORIZACION_ID;

				public Integer getPRIORIZACION_ID () {
					return this.PRIORIZACION_ID;
				}

				public Boolean PRIORIZACION_IDIsNullable(){
				    return true;
				}
				public Boolean PRIORIZACION_IDIsKey(){
				    return false;
				}
				public Integer PRIORIZACION_IDLength(){
				    return 0;
				}
				public Integer PRIORIZACION_IDPrecision(){
				    return 0;
				}
				public String PRIORIZACION_IDDefault(){
				
					return null;
				
				}
				public String PRIORIZACION_IDComment(){
				
				    return "";
				
				}
				public String PRIORIZACION_IDPattern(){
				
					return "";
				
				}
				public String PRIORIZACION_IDOriginalDbColumnName(){
				
					return "PRIORIZACION_ID";
				
				}

				
			    public Integer TINDICADORES_ID;

				public Integer getTINDICADORES_ID () {
					return this.TINDICADORES_ID;
				}

				public Boolean TINDICADORES_IDIsNullable(){
				    return true;
				}
				public Boolean TINDICADORES_IDIsKey(){
				    return false;
				}
				public Integer TINDICADORES_IDLength(){
				    return 0;
				}
				public Integer TINDICADORES_IDPrecision(){
				    return 0;
				}
				public String TINDICADORES_IDDefault(){
				
					return null;
				
				}
				public String TINDICADORES_IDComment(){
				
				    return "";
				
				}
				public String TINDICADORES_IDPattern(){
				
					return "";
				
				}
				public String TINDICADORES_IDOriginalDbColumnName(){
				
					return "TINDICADORES_ID";
				
				}

				
			    public Integer SEXO_ID;

				public Integer getSEXO_ID () {
					return this.SEXO_ID;
				}

				public Boolean SEXO_IDIsNullable(){
				    return true;
				}
				public Boolean SEXO_IDIsKey(){
				    return false;
				}
				public Integer SEXO_IDLength(){
				    return 0;
				}
				public Integer SEXO_IDPrecision(){
				    return 0;
				}
				public String SEXO_IDDefault(){
				
					return null;
				
				}
				public String SEXO_IDComment(){
				
				    return "";
				
				}
				public String SEXO_IDPattern(){
				
					return "";
				
				}
				public String SEXO_IDOriginalDbColumnName(){
				
					return "SEXO_ID";
				
				}

				
			    public Integer RANGOEDAD_ID;

				public Integer getRANGOEDAD_ID () {
					return this.RANGOEDAD_ID;
				}

				public Boolean RANGOEDAD_IDIsNullable(){
				    return true;
				}
				public Boolean RANGOEDAD_IDIsKey(){
				    return false;
				}
				public Integer RANGOEDAD_IDLength(){
				    return 0;
				}
				public Integer RANGOEDAD_IDPrecision(){
				    return 0;
				}
				public String RANGOEDAD_IDDefault(){
				
					return null;
				
				}
				public String RANGOEDAD_IDComment(){
				
				    return "";
				
				}
				public String RANGOEDAD_IDPattern(){
				
					return "";
				
				}
				public String RANGOEDAD_IDOriginalDbColumnName(){
				
					return "RANGOEDAD_ID";
				
				}

				
			    public Integer ETNIAS_ID;

				public Integer getETNIAS_ID () {
					return this.ETNIAS_ID;
				}

				public Boolean ETNIAS_IDIsNullable(){
				    return true;
				}
				public Boolean ETNIAS_IDIsKey(){
				    return false;
				}
				public Integer ETNIAS_IDLength(){
				    return 0;
				}
				public Integer ETNIAS_IDPrecision(){
				    return 0;
				}
				public String ETNIAS_IDDefault(){
				
					return null;
				
				}
				public String ETNIAS_IDComment(){
				
				    return "";
				
				}
				public String ETNIAS_IDPattern(){
				
					return "";
				
				}
				public String ETNIAS_IDOriginalDbColumnName(){
				
					return "ETNIAS_ID";
				
				}

				
			    public Integer CIE10;

				public Integer getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return true;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 0;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public String PRIORIDAD;

				public String getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return true;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 0;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public Integer GRUPORIESGO_ID;

				public Integer getGRUPORIESGO_ID () {
					return this.GRUPORIESGO_ID;
				}

				public Boolean GRUPORIESGO_IDIsNullable(){
				    return true;
				}
				public Boolean GRUPORIESGO_IDIsKey(){
				    return false;
				}
				public Integer GRUPORIESGO_IDLength(){
				    return 0;
				}
				public Integer GRUPORIESGO_IDPrecision(){
				    return 0;
				}
				public String GRUPORIESGO_IDDefault(){
				
					return null;
				
				}
				public String GRUPORIESGO_IDComment(){
				
				    return "";
				
				}
				public String GRUPORIESGO_IDPattern(){
				
					return "";
				
				}
				public String GRUPORIESGO_IDOriginalDbColumnName(){
				
					return "GRUPORIESGO_ID";
				
				}

				
			    public String CODEPTO;

				public String getCODEPTO () {
					return this.CODEPTO;
				}

				public Boolean CODEPTOIsNullable(){
				    return true;
				}
				public Boolean CODEPTOIsKey(){
				    return false;
				}
				public Integer CODEPTOLength(){
				    return 0;
				}
				public Integer CODEPTOPrecision(){
				    return 0;
				}
				public String CODEPTODefault(){
				
					return null;
				
				}
				public String CODEPTOComment(){
				
				    return "";
				
				}
				public String CODEPTOPattern(){
				
					return "";
				
				}
				public String CODEPTOOriginalDbColumnName(){
				
					return "CODEPTO";
				
				}

				
			    public String CODMCPIO;

				public String getCODMCPIO () {
					return this.CODMCPIO;
				}

				public Boolean CODMCPIOIsNullable(){
				    return true;
				}
				public Boolean CODMCPIOIsKey(){
				    return false;
				}
				public Integer CODMCPIOLength(){
				    return 0;
				}
				public Integer CODMCPIOPrecision(){
				    return 0;
				}
				public String CODMCPIODefault(){
				
					return null;
				
				}
				public String CODMCPIOComment(){
				
				    return "";
				
				}
				public String CODMCPIOPattern(){
				
					return "";
				
				}
				public String CODMCPIOOriginalDbColumnName(){
				
					return "CODMCPIO";
				
				}

				
			    public String CIE10COD;

				public String getCIE10COD () {
					return this.CIE10COD;
				}

				public Boolean CIE10CODIsNullable(){
				    return true;
				}
				public Boolean CIE10CODIsKey(){
				    return false;
				}
				public Integer CIE10CODLength(){
				    return 0;
				}
				public Integer CIE10CODPrecision(){
				    return 0;
				}
				public String CIE10CODDefault(){
				
					return null;
				
				}
				public String CIE10CODComment(){
				
				    return "";
				
				}
				public String CIE10CODPattern(){
				
					return "";
				
				}
				public String CIE10CODOriginalDbColumnName(){
				
					return "CIE10COD";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.PRIORIZACION_ID = readInteger(dis);
					
						this.TINDICADORES_ID = readInteger(dis);
					
						this.SEXO_ID = readInteger(dis);
					
						this.RANGOEDAD_ID = readInteger(dis);
					
						this.ETNIAS_ID = readInteger(dis);
					
						this.CIE10 = readInteger(dis);
					
					this.PRIORIDAD = readString(dis);
					
						this.GRUPORIESGO_ID = readInteger(dis);
					
					this.CODEPTO = readString(dis);
					
					this.CODMCPIO = readString(dis);
					
					this.CIE10COD = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.PRIORIZACION_ID = readInteger(dis);
					
						this.TINDICADORES_ID = readInteger(dis);
					
						this.SEXO_ID = readInteger(dis);
					
						this.RANGOEDAD_ID = readInteger(dis);
					
						this.ETNIAS_ID = readInteger(dis);
					
						this.CIE10 = readInteger(dis);
					
					this.PRIORIDAD = readString(dis);
					
						this.GRUPORIESGO_ID = readInteger(dis);
					
					this.CODEPTO = readString(dis);
					
					this.CODMCPIO = readString(dis);
					
					this.CIE10COD = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.PRIORIZACION_ID,dos);
					
					// Integer
				
						writeInteger(this.TINDICADORES_ID,dos);
					
					// Integer
				
						writeInteger(this.SEXO_ID,dos);
					
					// Integer
				
						writeInteger(this.RANGOEDAD_ID,dos);
					
					// Integer
				
						writeInteger(this.ETNIAS_ID,dos);
					
					// Integer
				
						writeInteger(this.CIE10,dos);
					
					// String
				
						writeString(this.PRIORIDAD,dos);
					
					// Integer
				
						writeInteger(this.GRUPORIESGO_ID,dos);
					
					// String
				
						writeString(this.CODEPTO,dos);
					
					// String
				
						writeString(this.CODMCPIO,dos);
					
					// String
				
						writeString(this.CIE10COD,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.PRIORIZACION_ID,dos);
					
					// Integer
				
						writeInteger(this.TINDICADORES_ID,dos);
					
					// Integer
				
						writeInteger(this.SEXO_ID,dos);
					
					// Integer
				
						writeInteger(this.RANGOEDAD_ID,dos);
					
					// Integer
				
						writeInteger(this.ETNIAS_ID,dos);
					
					// Integer
				
						writeInteger(this.CIE10,dos);
					
					// String
				
						writeString(this.PRIORIDAD,dos);
					
					// Integer
				
						writeInteger(this.GRUPORIESGO_ID,dos);
					
					// String
				
						writeString(this.CODEPTO,dos);
					
					// String
				
						writeString(this.CODMCPIO,dos);
					
					// String
				
						writeString(this.CIE10COD,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PRIORIZACION_ID="+String.valueOf(PRIORIZACION_ID));
		sb.append(",TINDICADORES_ID="+String.valueOf(TINDICADORES_ID));
		sb.append(",SEXO_ID="+String.valueOf(SEXO_ID));
		sb.append(",RANGOEDAD_ID="+String.valueOf(RANGOEDAD_ID));
		sb.append(",ETNIAS_ID="+String.valueOf(ETNIAS_ID));
		sb.append(",CIE10="+String.valueOf(CIE10));
		sb.append(",PRIORIDAD="+PRIORIDAD);
		sb.append(",GRUPORIESGO_ID="+String.valueOf(GRUPORIESGO_ID));
		sb.append(",CODEPTO="+CODEPTO);
		sb.append(",CODMCPIO="+CODMCPIO);
		sb.append(",CIE10COD="+CIE10COD);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(VSP_DPRIORIZACION_OUTStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row53Struct implements routines.system.IPersistableRow<row53Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row53Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_19Struct implements routines.system.IPersistableRow<after_tHashInput_19Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_19Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_19Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_19_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_20Process(globalMap);

		row53Struct row53 = new row53Struct();
VSP_DPRIORIZACION_OUTStruct VSP_DPRIORIZACION_OUT = new VSP_DPRIORIZACION_OUTStruct();





	
	/**
	 * [tOracleOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_1", false);
		start_Hash.put("tOracleOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"VSP_DPRIORIZACION_OUT");
					}
				
		int tos_count_tOracleOutput_1 = 0;
		






    
    int nb_line_tOracleOutput_1 = 0;
    int nb_line_update_tOracleOutput_1 = 0;
    int nb_line_inserted_tOracleOutput_1 = 0;
    int nb_line_deleted_tOracleOutput_1 = 0;
    int nb_line_rejected_tOracleOutput_1 = 0;

    int tmp_batchUpdateCount_tOracleOutput_1 = 0;

    int deletedCount_tOracleOutput_1=0;
    int updatedCount_tOracleOutput_1=0;
    int insertedCount_tOracleOutput_1=0;
    int rowsToCommitCount_tOracleOutput_1=0;
    int rejectedCount_tOracleOutput_1=0;

    boolean whetherReject_tOracleOutput_1 = false;

    java.sql.Connection conn_tOracleOutput_1 = null;

    //optional table
    String dbschema_tOracleOutput_1 = null;
    String tableName_tOracleOutput_1 = null;
        dbschema_tOracleOutput_1 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_1 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_1=0;

        if(dbschema_tOracleOutput_1 == null || dbschema_tOracleOutput_1.trim().length() == 0) {
            tableName_tOracleOutput_1 = ("VSP_DPRIORIZACION");
        } else {
            tableName_tOracleOutput_1 = dbschema_tOracleOutput_1 + "." + ("VSP_DPRIORIZACION");
        }
                String insert_tOracleOutput_1 = "INSERT INTO " + tableName_tOracleOutput_1 + " (PRIORIZACION_ID,TINDICADORES_ID,SEXO_ID,RANGOEDAD_ID,ETNIAS_ID,CIE10,PRIORIDAD,GRUPORIESGO_ID,CODEPTO,CODMCPIO,CIE10COD) VALUES (?,?,?,?,?,?,?,?,?,?,?)";    

                        java.sql.PreparedStatement pstmt_tOracleOutput_1 = conn_tOracleOutput_1.prepareStatement(insert_tOracleOutput_1);
                        resourceMap.put("pstmt_tOracleOutput_1", pstmt_tOracleOutput_1);





 



/**
 * [tOracleOutput_1 begin ] stop
 */



	
	/**
	 * [tMap_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_9", false);
		start_Hash.put("tMap_9", System.currentTimeMillis());
		
	
	currentComponent="tMap_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row53");
					}
				
		int tos_count_tMap_9 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row54Struct> tHash_Lookup_row54 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row54Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row54Struct>) 
					globalMap.get( "tHash_Lookup_row54" ))
					;					
					
	

row54Struct row54HashKey = new row54Struct();
row54Struct row54Default = new row54Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_9__Struct  {
	String INDICADOR;
}
Var__tMap_9__Struct Var__tMap_9 = new Var__tMap_9__Struct();
// ###############################

// ###############################
// # Outputs initialization
VSP_DPRIORIZACION_OUTStruct VSP_DPRIORIZACION_OUT_tmp = new VSP_DPRIORIZACION_OUTStruct();
// ###############################

        
        



        









 



/**
 * [tMap_9 begin ] stop
 */



	
	/**
	 * [tHashInput_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_19", false);
		start_Hash.put("tHashInput_19", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_19";
	
	
		int tos_count_tHashInput_19 = 0;
		


int nb_line_tHashInput_19 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_19=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row51Struct> tHashFile_tHashInput_19 = mf_tHashInput_19.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_12");
if(tHashFile_tHashInput_19==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row51Struct> iterator_tHashInput_19 = tHashFile_tHashInput_19.iterator();
while (iterator_tHashInput_19.hasNext()) {
    row51Struct next_tHashInput_19 = iterator_tHashInput_19.next();

	row53.COD_DIVIPOLA = next_tHashInput_19.COD_DIVIPOLA;
	row53.INDICADOR = next_tHashInput_19.INDICADOR;
	row53.SEXO = next_tHashInput_19.SEXO;
	row53.EDAD = next_tHashInput_19.EDAD;
	row53.ETNIA = next_tHashInput_19.ETNIA;
	row53.CIE10 = next_tHashInput_19.CIE10;
	row53.PRIORIDAD = next_tHashInput_19.PRIORIDAD;
	row53.GRUPO_RIESGO = next_tHashInput_19.GRUPO_RIESGO;

 



/**
 * [tHashInput_19 begin ] stop
 */
	
	/**
	 * [tHashInput_19 main ] start
	 */

	

	
	
	currentComponent="tHashInput_19";
	
	

 


	tos_count_tHashInput_19++;

/**
 * [tHashInput_19 main ] stop
 */
	
	/**
	 * [tHashInput_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_19";
	
	

 



/**
 * [tHashInput_19 process_data_begin ] stop
 */

	
	/**
	 * [tMap_9 main ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row53"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;
		
						row54Struct row54 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_9 = false;
		boolean mainRowRejected_tMap_9 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row54" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow54 = false;
       		  	    	
       		  	    	
 							row54Struct row54ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_9) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_9 = false;
								
                        		    		    row54HashKey.CODIGO_TIPO_INDICADOR = row53.INDICADOR ;
                        		    		
                        		    		    row54HashKey.CIE10 = (row53.CIE10.equals("999"))?2:1; ;
                        		    		
                        		    		    row54HashKey.CODIGO_GRUPO_RIESGO = row53.GRUPO_RIESGO ;
                        		    		
                        		    		    row54HashKey.CODIGO_EDAD = row53.EDAD ;
                        		    		
                        		    		    row54HashKey.CODIGO_ETNIA = row53.ETNIA ;
                        		    		
                        		    		    row54HashKey.CODIGO_SEXO = row53.SEXO ;
                        		    		

								
		                        	row54HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row54.lookup( row54HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row54 != null && tHash_Lookup_row54.getCount(row54HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row54' and it contains more one result from keys :  row54.CODIGO_TIPO_INDICADOR = '" + row54HashKey.CODIGO_TIPO_INDICADOR + "', row54.CIE10 = '" + row54HashKey.CIE10 + "', row54.CODIGO_GRUPO_RIESGO = '" + row54HashKey.CODIGO_GRUPO_RIESGO + "', row54.CODIGO_EDAD = '" + row54HashKey.CODIGO_EDAD + "', row54.CODIGO_ETNIA = '" + row54HashKey.CODIGO_ETNIA + "', row54.CODIGO_SEXO = '" + row54HashKey.CODIGO_SEXO + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row54Struct fromLookup_row54 = null;
							row54 = row54Default;
										 
							
								 
							
							
								if (tHash_Lookup_row54 !=null && tHash_Lookup_row54.hasNext()) { // G 099
								
							
								
								fromLookup_row54 = tHash_Lookup_row54.next();

							
							
								} // G 099
							
							

							if(fromLookup_row54 != null) {
								row54 = fromLookup_row54;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_9__Struct Var = Var__tMap_9;
Var.INDICADOR = ValidationRules.completarCodigo(row53.INDICADOR) ;// ###############################
        // ###############################
        // # Output tables

VSP_DPRIORIZACION_OUT = null;


// # Output table : 'VSP_DPRIORIZACION_OUT'
VSP_DPRIORIZACION_OUT_tmp.PRIORIZACION_ID = context.PriorizacionId;
VSP_DPRIORIZACION_OUT_tmp.TINDICADORES_ID = row54.ID_TIPO_INDICADOR ;
VSP_DPRIORIZACION_OUT_tmp.SEXO_ID = row54.ID_SEXO ;
VSP_DPRIORIZACION_OUT_tmp.RANGOEDAD_ID = row54.ID_EDAD ;
VSP_DPRIORIZACION_OUT_tmp.ETNIAS_ID = row54.ID_ETNIA ;
VSP_DPRIORIZACION_OUT_tmp.CIE10 = row54.CIE10 ;
VSP_DPRIORIZACION_OUT_tmp.PRIORIDAD = ""+row53.PRIORIDAD+Var.INDICADOR +row53.SEXO+row53.EDAD+row53.ETNIA+ row53.CIE10 +"" ;
VSP_DPRIORIZACION_OUT_tmp.GRUPORIESGO_ID = row54.ID_GRUPO_RIESGO ;
VSP_DPRIORIZACION_OUT_tmp.CODEPTO = (row53.COD_DIVIPOLA.length()==2)?row53.COD_DIVIPOLA:""; ;
VSP_DPRIORIZACION_OUT_tmp.CODMCPIO = (row53.COD_DIVIPOLA.length()==5)?row53.COD_DIVIPOLA:""; ;
VSP_DPRIORIZACION_OUT_tmp.CIE10COD = row53.CIE10 ;
VSP_DPRIORIZACION_OUT = VSP_DPRIORIZACION_OUT_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_9 = false;










 


	tos_count_tMap_9++;

/**
 * [tMap_9 main ] stop
 */
	
	/**
	 * [tMap_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_begin ] stop
 */
// Start of branch "VSP_DPRIORIZACION_OUT"
if(VSP_DPRIORIZACION_OUT != null) { 



	
	/**
	 * [tOracleOutput_1 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"VSP_DPRIORIZACION_OUT"
						
						);
					}
					



        whetherReject_tOracleOutput_1 = false;
                        if(VSP_DPRIORIZACION_OUT.PRIORIZACION_ID == null) {
pstmt_tOracleOutput_1.setNull(1, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_1.setInt(1, VSP_DPRIORIZACION_OUT.PRIORIZACION_ID);
}

                        if(VSP_DPRIORIZACION_OUT.TINDICADORES_ID == null) {
pstmt_tOracleOutput_1.setNull(2, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_1.setInt(2, VSP_DPRIORIZACION_OUT.TINDICADORES_ID);
}

                        if(VSP_DPRIORIZACION_OUT.SEXO_ID == null) {
pstmt_tOracleOutput_1.setNull(3, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_1.setInt(3, VSP_DPRIORIZACION_OUT.SEXO_ID);
}

                        if(VSP_DPRIORIZACION_OUT.RANGOEDAD_ID == null) {
pstmt_tOracleOutput_1.setNull(4, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_1.setInt(4, VSP_DPRIORIZACION_OUT.RANGOEDAD_ID);
}

                        if(VSP_DPRIORIZACION_OUT.ETNIAS_ID == null) {
pstmt_tOracleOutput_1.setNull(5, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_1.setInt(5, VSP_DPRIORIZACION_OUT.ETNIAS_ID);
}

                        if(VSP_DPRIORIZACION_OUT.CIE10 == null) {
pstmt_tOracleOutput_1.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_1.setInt(6, VSP_DPRIORIZACION_OUT.CIE10);
}

                        if(VSP_DPRIORIZACION_OUT.PRIORIDAD == null) {
pstmt_tOracleOutput_1.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(7, VSP_DPRIORIZACION_OUT.PRIORIDAD);
}

                        if(VSP_DPRIORIZACION_OUT.GRUPORIESGO_ID == null) {
pstmt_tOracleOutput_1.setNull(8, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_1.setInt(8, VSP_DPRIORIZACION_OUT.GRUPORIESGO_ID);
}

                        if(VSP_DPRIORIZACION_OUT.CODEPTO == null) {
pstmt_tOracleOutput_1.setNull(9, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(9, VSP_DPRIORIZACION_OUT.CODEPTO);
}

                        if(VSP_DPRIORIZACION_OUT.CODMCPIO == null) {
pstmt_tOracleOutput_1.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(10, VSP_DPRIORIZACION_OUT.CODMCPIO);
}

                        if(VSP_DPRIORIZACION_OUT.CIE10COD == null) {
pstmt_tOracleOutput_1.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_1.setString(11, VSP_DPRIORIZACION_OUT.CIE10COD);
}

                try {
                    nb_line_tOracleOutput_1++;
                    int processedCount_tOracleOutput_1 = pstmt_tOracleOutput_1.executeUpdate();
                    insertedCount_tOracleOutput_1 += processedCount_tOracleOutput_1;
                    rowsToCommitCount_tOracleOutput_1 += processedCount_tOracleOutput_1;
                } catch(java.lang.Exception e_tOracleOutput_1) {
globalMap.put("tOracleOutput_1_ERROR_MESSAGE",e_tOracleOutput_1.getMessage());
                    whetherReject_tOracleOutput_1 = true;
                            System.err.print(e_tOracleOutput_1.getMessage());
                }
            if(!whetherReject_tOracleOutput_1) {
            }

 


	tos_count_tOracleOutput_1++;

/**
 * [tOracleOutput_1 main ] stop
 */
	
	/**
	 * [tOracleOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	

 



/**
 * [tOracleOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	

 



/**
 * [tOracleOutput_1 process_data_end ] stop
 */

} // End of branch "VSP_DPRIORIZACION_OUT"




	
	/**
	 * [tMap_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_19";
	
	

 



/**
 * [tHashInput_19 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_19 end ] start
	 */

	

	
	
	currentComponent="tHashInput_19";
	
	
    

		
			nb_line_tHashInput_19++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_12");
	


	globalMap.put("tHashInput_19_NB_LINE", nb_line_tHashInput_19);       

 

ok_Hash.put("tHashInput_19", true);
end_Hash.put("tHashInput_19", System.currentTimeMillis());




/**
 * [tHashInput_19 end ] stop
 */

	
	/**
	 * [tMap_9 end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row54 != null) {
						tHash_Lookup_row54.endGet();
					}
					globalMap.remove( "tHash_Lookup_row54" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row53");
			  	}
			  	
 

ok_Hash.put("tMap_9", true);
end_Hash.put("tMap_9", System.currentTimeMillis());




/**
 * [tMap_9 end ] stop
 */

	
	/**
	 * [tOracleOutput_1 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	
	



	
        if(pstmt_tOracleOutput_1 != null) {
			
				pstmt_tOracleOutput_1.close();
				resourceMap.remove("pstmt_tOracleOutput_1");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_1", true);

	
	nb_line_deleted_tOracleOutput_1=nb_line_deleted_tOracleOutput_1+ deletedCount_tOracleOutput_1;
	nb_line_update_tOracleOutput_1=nb_line_update_tOracleOutput_1 + updatedCount_tOracleOutput_1;
	nb_line_inserted_tOracleOutput_1=nb_line_inserted_tOracleOutput_1 + insertedCount_tOracleOutput_1;
	nb_line_rejected_tOracleOutput_1=nb_line_rejected_tOracleOutput_1 + rejectedCount_tOracleOutput_1;
	
        globalMap.put("tOracleOutput_1_NB_LINE",nb_line_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_UPDATED",nb_line_update_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_1);
        globalMap.put("tOracleOutput_1_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_1);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"VSP_DPRIORIZACION_OUT");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_1", true);
end_Hash.put("tOracleOutput_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk44", 0, "ok");
				}
				tFixedFlowInput_22Process(globalMap);



/**
 * [tOracleOutput_1 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_9"
					     			globalMap.remove("tHash_Lookup_row54"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_19 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_19";
	
	

 



/**
 * [tHashInput_19 finally ] stop
 */

	
	/**
	 * [tMap_9 finally ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 finally ] stop
 */

	
	/**
	 * [tOracleOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_1";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_1") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_1 = null;
                if ((pstmtToClose_tOracleOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_1")) != null) {
                    pstmtToClose_tOracleOutput_1.close();
                }
    }
 



/**
 * [tOracleOutput_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_19_SUBPROCESS_STATE", 1);
	}
	


public static class row61Struct implements routines.system.IPersistableRow<row61Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String ANIO;

				public String getANIO () {
					return this.ANIO;
				}

				public Boolean ANIOIsNullable(){
				    return true;
				}
				public Boolean ANIOIsKey(){
				    return true;
				}
				public Integer ANIOLength(){
				    return 0;
				}
				public Integer ANIOPrecision(){
				    return 0;
				}
				public String ANIODefault(){
				
					return null;
				
				}
				public String ANIOComment(){
				
				    return "";
				
				}
				public String ANIOPattern(){
				
					return "";
				
				}
				public String ANIOOriginalDbColumnName(){
				
					return "ANIO";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ANIO == null) ? 0 : this.ANIO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row61Struct other = (row61Struct) obj;
		
						if (this.ANIO == null) {
							if (other.ANIO != null)
								return false;
						
						} else if (!this.ANIO.equals(other.ANIO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row61Struct other) {

		other.ANIO = this.ANIO;
	            other.ESTADO = this.ESTADO;
	            
	}

	public void copyKeysDataTo(row61Struct other) {

		other.ANIO = this.ANIO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.ANIO = readString(dis);
					
					this.ESTADO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.ANIO = readString(dis);
					
					this.ESTADO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ANIO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ANIO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ANIO="+ANIO);
		sb.append(",ESTADO="+ESTADO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row61Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ANIO, other.ANIO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_22Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_22_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row61Struct row61 = new row61Struct();




	
	/**
	 * [tOracleOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_2", false);
		start_Hash.put("tOracleOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row61");
					}
				
		int tos_count_tOracleOutput_2 = 0;
		






        int updateKeyCount_tOracleOutput_2 = 1;
        if(updateKeyCount_tOracleOutput_2 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_2 == 2 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_2 = 0;
    int nb_line_update_tOracleOutput_2 = 0;
    int nb_line_inserted_tOracleOutput_2 = 0;
    int nb_line_deleted_tOracleOutput_2 = 0;
    int nb_line_rejected_tOracleOutput_2 = 0;

    int tmp_batchUpdateCount_tOracleOutput_2 = 0;

    int deletedCount_tOracleOutput_2=0;
    int updatedCount_tOracleOutput_2=0;
    int insertedCount_tOracleOutput_2=0;
    int rowsToCommitCount_tOracleOutput_2=0;
    int rejectedCount_tOracleOutput_2=0;

    boolean whetherReject_tOracleOutput_2 = false;

    java.sql.Connection conn_tOracleOutput_2 = null;

    //optional table
    String dbschema_tOracleOutput_2 = null;
    String tableName_tOracleOutput_2 = null;
        dbschema_tOracleOutput_2 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_2 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_2=0;

        if(dbschema_tOracleOutput_2 == null || dbschema_tOracleOutput_2.trim().length() == 0) {
            tableName_tOracleOutput_2 = ("VSP_PRIORIZACION");
        } else {
            tableName_tOracleOutput_2 = dbschema_tOracleOutput_2 + "." + ("VSP_PRIORIZACION");
        }
                String update_tOracleOutput_2 = "UPDATE " + tableName_tOracleOutput_2 + " SET ESTADO = ? WHERE ANIO = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_2 = conn_tOracleOutput_2.prepareStatement(update_tOracleOutput_2);
                resourceMap.put("pstmt_tOracleOutput_2", pstmt_tOracleOutput_2);





 



/**
 * [tOracleOutput_2 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_22 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_22", false);
		start_Hash.put("tFixedFlowInput_22", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_22";
	
	
		int tos_count_tFixedFlowInput_22 = 0;
		

	    for (int i_tFixedFlowInput_22 = 0 ; i_tFixedFlowInput_22 < 1 ; i_tFixedFlowInput_22++) {
	                	            	
    	            		row61.ANIO = context.PriorizacionAnio;
    	            	        	            	
    	            		row61.ESTADO = context.EstAnexoInactivo;
    	            	

 



/**
 * [tFixedFlowInput_22 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_22 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_22";
	
	

 


	tos_count_tFixedFlowInput_22++;

/**
 * [tFixedFlowInput_22 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_22";
	
	

 



/**
 * [tFixedFlowInput_22 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_2 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row61"
						
						);
					}
					



        whetherReject_tOracleOutput_2 = false;
                    if(row61.ESTADO == null) {
pstmt_tOracleOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(1, row61.ESTADO);
}


                    if(row61.ANIO == null) {
pstmt_tOracleOutput_2.setNull(2 + count_tOracleOutput_2, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_2.setString(2 + count_tOracleOutput_2, row61.ANIO);
}

                try {
                    nb_line_tOracleOutput_2++;
                    int processedCount_tOracleOutput_2 = pstmt_tOracleOutput_2.executeUpdate();
                    updatedCount_tOracleOutput_2 += processedCount_tOracleOutput_2;
                    rowsToCommitCount_tOracleOutput_2 += processedCount_tOracleOutput_2;
                } catch(java.lang.Exception e_tOracleOutput_2) {
globalMap.put("tOracleOutput_2_ERROR_MESSAGE",e_tOracleOutput_2.getMessage());
                    whetherReject_tOracleOutput_2 = true;
                            System.err.print(e_tOracleOutput_2.getMessage());
                }
            if(!whetherReject_tOracleOutput_2) {
            }

 


	tos_count_tOracleOutput_2++;

/**
 * [tOracleOutput_2 main ] stop
 */
	
	/**
	 * [tOracleOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	

 



/**
 * [tOracleOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	

 



/**
 * [tOracleOutput_2 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_22 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_22";
	
	

 



/**
 * [tFixedFlowInput_22 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_22 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_22";
	
	

        }
        globalMap.put("tFixedFlowInput_22_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_22", true);
end_Hash.put("tFixedFlowInput_22", System.currentTimeMillis());




/**
 * [tFixedFlowInput_22 end ] stop
 */

	
	/**
	 * [tOracleOutput_2 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	
	



	
        if(pstmt_tOracleOutput_2 != null) {
			
				pstmt_tOracleOutput_2.close();
				resourceMap.remove("pstmt_tOracleOutput_2");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_2", true);

	
	nb_line_deleted_tOracleOutput_2=nb_line_deleted_tOracleOutput_2+ deletedCount_tOracleOutput_2;
	nb_line_update_tOracleOutput_2=nb_line_update_tOracleOutput_2 + updatedCount_tOracleOutput_2;
	nb_line_inserted_tOracleOutput_2=nb_line_inserted_tOracleOutput_2 + insertedCount_tOracleOutput_2;
	nb_line_rejected_tOracleOutput_2=nb_line_rejected_tOracleOutput_2 + rejectedCount_tOracleOutput_2;
	
        globalMap.put("tOracleOutput_2_NB_LINE",nb_line_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_UPDATED",nb_line_update_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_2);
        globalMap.put("tOracleOutput_2_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_2);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row61");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_2", true);
end_Hash.put("tOracleOutput_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk45", 0, "ok");
				}
				tFixedFlowInput_24Process(globalMap);



/**
 * [tOracleOutput_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_22 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_22";
	
	

 



/**
 * [tFixedFlowInput_22 finally ] stop
 */

	
	/**
	 * [tOracleOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_2";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_2") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_2 = null;
                if ((pstmtToClose_tOracleOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_2")) != null) {
                    pstmtToClose_tOracleOutput_2.close();
                }
    }
 



/**
 * [tOracleOutput_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_22_SUBPROCESS_STATE", 1);
	}
	


public static class row62Struct implements routines.system.IPersistableRow<row62Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer ID;

				public Integer getID () {
					return this.ID;
				}

				public Boolean IDIsNullable(){
				    return true;
				}
				public Boolean IDIsKey(){
				    return true;
				}
				public Integer IDLength(){
				    return 0;
				}
				public Integer IDPrecision(){
				    return 0;
				}
				public String IDDefault(){
				
					return null;
				
				}
				public String IDComment(){
				
				    return "";
				
				}
				public String IDPattern(){
				
					return "";
				
				}
				public String IDOriginalDbColumnName(){
				
					return "ID";
				
				}

				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}

				public Boolean ESTADOIsNullable(){
				    return true;
				}
				public Boolean ESTADOIsKey(){
				    return false;
				}
				public Integer ESTADOLength(){
				    return 0;
				}
				public Integer ESTADOPrecision(){
				    return 0;
				}
				public String ESTADODefault(){
				
					return null;
				
				}
				public String ESTADOComment(){
				
				    return "";
				
				}
				public String ESTADOPattern(){
				
					return "";
				
				}
				public String ESTADOOriginalDbColumnName(){
				
					return "ESTADO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID == null) ? 0 : this.ID.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row62Struct other = (row62Struct) obj;
		
						if (this.ID == null) {
							if (other.ID != null)
								return false;
						
						} else if (!this.ID.equals(other.ID))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row62Struct other) {

		other.ID = this.ID;
	            other.ESTADO = this.ESTADO;
	            
	}

	public void copyKeysDataTo(row62Struct other) {

		other.ID = this.ID;
	            	
	}



	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID = readInteger(dis);
					
					this.ESTADO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.ID = readInteger(dis);
					
					this.ESTADO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.ID,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID="+String.valueOf(ID));
		sb.append(",ESTADO="+ESTADO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row62Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID, other.ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_24Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_24_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row62Struct row62 = new row62Struct();




	
	/**
	 * [tOracleOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tOracleOutput_3", false);
		start_Hash.put("tOracleOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tOracleOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row62");
					}
				
		int tos_count_tOracleOutput_3 = 0;
		






        int updateKeyCount_tOracleOutput_3 = 1;
        if(updateKeyCount_tOracleOutput_3 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tOracleOutput_3 == 2 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }
    
    int nb_line_tOracleOutput_3 = 0;
    int nb_line_update_tOracleOutput_3 = 0;
    int nb_line_inserted_tOracleOutput_3 = 0;
    int nb_line_deleted_tOracleOutput_3 = 0;
    int nb_line_rejected_tOracleOutput_3 = 0;

    int tmp_batchUpdateCount_tOracleOutput_3 = 0;

    int deletedCount_tOracleOutput_3=0;
    int updatedCount_tOracleOutput_3=0;
    int insertedCount_tOracleOutput_3=0;
    int rowsToCommitCount_tOracleOutput_3=0;
    int rejectedCount_tOracleOutput_3=0;

    boolean whetherReject_tOracleOutput_3 = false;

    java.sql.Connection conn_tOracleOutput_3 = null;

    //optional table
    String dbschema_tOracleOutput_3 = null;
    String tableName_tOracleOutput_3 = null;
        dbschema_tOracleOutput_3 = (String)globalMap.get("dbschema_tOracleConnection_1");
		
        conn_tOracleOutput_3 = (java.sql.Connection)globalMap.get("conn_tOracleConnection_1");
        int count_tOracleOutput_3=0;

        if(dbschema_tOracleOutput_3 == null || dbschema_tOracleOutput_3.trim().length() == 0) {
            tableName_tOracleOutput_3 = ("VSP_PRIORIZACION");
        } else {
            tableName_tOracleOutput_3 = dbschema_tOracleOutput_3 + "." + ("VSP_PRIORIZACION");
        }
                String update_tOracleOutput_3 = "UPDATE " + tableName_tOracleOutput_3 + " SET ESTADO = ? WHERE ID = ?";
                java.sql.PreparedStatement pstmt_tOracleOutput_3 = conn_tOracleOutput_3.prepareStatement(update_tOracleOutput_3);
                resourceMap.put("pstmt_tOracleOutput_3", pstmt_tOracleOutput_3);





 



/**
 * [tOracleOutput_3 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_24 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_24", false);
		start_Hash.put("tFixedFlowInput_24", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_24";
	
	
		int tos_count_tFixedFlowInput_24 = 0;
		

	    for (int i_tFixedFlowInput_24 = 0 ; i_tFixedFlowInput_24 < 1 ; i_tFixedFlowInput_24++) {
	                	            	
    	            		row62.ID = context.PriorizacionId;
    	            	        	            	
    	            		row62.ESTADO = context.EstAnexoActivo;
    	            	

 



/**
 * [tFixedFlowInput_24 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_24 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_24";
	
	

 


	tos_count_tFixedFlowInput_24++;

/**
 * [tFixedFlowInput_24 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_24 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_24";
	
	

 



/**
 * [tFixedFlowInput_24 process_data_begin ] stop
 */

	
	/**
	 * [tOracleOutput_3 main ] start
	 */

	

	
	
	currentComponent="tOracleOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row62"
						
						);
					}
					



        whetherReject_tOracleOutput_3 = false;
                    if(row62.ESTADO == null) {
pstmt_tOracleOutput_3.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tOracleOutput_3.setString(1, row62.ESTADO);
}


                    if(row62.ID == null) {
pstmt_tOracleOutput_3.setNull(2 + count_tOracleOutput_3, java.sql.Types.INTEGER);
} else {pstmt_tOracleOutput_3.setInt(2 + count_tOracleOutput_3, row62.ID);
}

                try {
                    nb_line_tOracleOutput_3++;
                    int processedCount_tOracleOutput_3 = pstmt_tOracleOutput_3.executeUpdate();
                    updatedCount_tOracleOutput_3 += processedCount_tOracleOutput_3;
                    rowsToCommitCount_tOracleOutput_3 += processedCount_tOracleOutput_3;
                } catch(java.lang.Exception e_tOracleOutput_3) {
globalMap.put("tOracleOutput_3_ERROR_MESSAGE",e_tOracleOutput_3.getMessage());
                    whetherReject_tOracleOutput_3 = true;
                            System.err.print(e_tOracleOutput_3.getMessage());
                }

 


	tos_count_tOracleOutput_3++;

/**
 * [tOracleOutput_3 main ] stop
 */
	
	/**
	 * [tOracleOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tOracleOutput_3";
	
	

 



/**
 * [tOracleOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tOracleOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_3";
	
	

 



/**
 * [tOracleOutput_3 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_24 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_24";
	
	

 



/**
 * [tFixedFlowInput_24 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_24 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_24";
	
	

        }
        globalMap.put("tFixedFlowInput_24_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_24", true);
end_Hash.put("tFixedFlowInput_24", System.currentTimeMillis());




/**
 * [tFixedFlowInput_24 end ] stop
 */

	
	/**
	 * [tOracleOutput_3 end ] start
	 */

	

	
	
	currentComponent="tOracleOutput_3";
	
	
	



	
        if(pstmt_tOracleOutput_3 != null) {
			
				pstmt_tOracleOutput_3.close();
				resourceMap.remove("pstmt_tOracleOutput_3");
			
        }
    resourceMap.put("statementClosed_tOracleOutput_3", true);

	
	nb_line_deleted_tOracleOutput_3=nb_line_deleted_tOracleOutput_3+ deletedCount_tOracleOutput_3;
	nb_line_update_tOracleOutput_3=nb_line_update_tOracleOutput_3 + updatedCount_tOracleOutput_3;
	nb_line_inserted_tOracleOutput_3=nb_line_inserted_tOracleOutput_3 + insertedCount_tOracleOutput_3;
	nb_line_rejected_tOracleOutput_3=nb_line_rejected_tOracleOutput_3 + rejectedCount_tOracleOutput_3;
	
        globalMap.put("tOracleOutput_3_NB_LINE",nb_line_tOracleOutput_3);
        globalMap.put("tOracleOutput_3_NB_LINE_UPDATED",nb_line_update_tOracleOutput_3);
        globalMap.put("tOracleOutput_3_NB_LINE_INSERTED",nb_line_inserted_tOracleOutput_3);
        globalMap.put("tOracleOutput_3_NB_LINE_DELETED",nb_line_deleted_tOracleOutput_3);
        globalMap.put("tOracleOutput_3_NB_LINE_REJECTED", nb_line_rejected_tOracleOutput_3);
    

	



				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row62");
			  	}
			  	
 

ok_Hash.put("tOracleOutput_3", true);
end_Hash.put("tOracleOutput_3", System.currentTimeMillis());




/**
 * [tOracleOutput_3 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_24 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_24";
	
	

 



/**
 * [tFixedFlowInput_24 finally ] stop
 */

	
	/**
	 * [tOracleOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tOracleOutput_3";
	
	



    if (resourceMap.get("statementClosed_tOracleOutput_3") == null) {
                java.sql.PreparedStatement pstmtToClose_tOracleOutput_3 = null;
                if ((pstmtToClose_tOracleOutput_3 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tOracleOutput_3")) != null) {
                    pstmtToClose_tOracleOutput_3.close();
                }
    }
 



/**
 * [tOracleOutput_3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_24_SUBPROCESS_STATE", 1);
	}
	


public static class REJECT_CONFIGStruct implements routines.system.IPersistableRow<REJECT_CONFIGStruct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(REJECT_CONFIGStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row47Struct implements routines.system.IPersistableRow<row47Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row47Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_15Struct implements routines.system.IPersistableRow<after_tHashInput_15Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_15Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_15Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_15_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_16Process(globalMap);

		row47Struct row47 = new row47Struct();
REJECT_CONFIGStruct REJECT_CONFIG = new REJECT_CONFIGStruct();





	
	/**
	 * [tHashOutput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_13", false);
		start_Hash.put("tHashOutput_13", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"REJECT_CONFIG");
					}
				
		int tos_count_tHashOutput_13 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_13=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<REJECT_CONFIGStruct> tHashFile_tHashOutput_13 = null;
		String hashKey_tHashOutput_13 = "tHashFile_ETL_vigilancia_" + pid + "_tHashOutput_13";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_13)){
			    if(mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13) == null){
	      		    mf_tHashOutput_13.getResourceMap().put(hashKey_tHashOutput_13, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<REJECT_CONFIGStruct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_13 = mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13);
			    }else{
			    	tHashFile_tHashOutput_13 = mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13);
			    }
			}
        int nb_line_tHashOutput_13 = 0;

 



/**
 * [tHashOutput_13 begin ] stop
 */



	
	/**
	 * [tMap_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_7", false);
		start_Hash.put("tMap_7", System.currentTimeMillis());
		
	
	currentComponent="tMap_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row47");
					}
				
		int tos_count_tMap_7 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row48Struct> tHash_Lookup_row48 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row48Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row48Struct>) 
					globalMap.get( "tHash_Lookup_row48" ))
					;					
					
	

row48Struct row48HashKey = new row48Struct();
row48Struct row48Default = new row48Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_7__Struct  {
}
Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
REJECT_CONFIGStruct REJECT_CONFIG_tmp = new REJECT_CONFIGStruct();
// ###############################

        
        



        









 



/**
 * [tMap_7 begin ] stop
 */



	
	/**
	 * [tHashInput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_15", false);
		start_Hash.put("tHashInput_15", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_15";
	
	
		int tos_count_tHashInput_15 = 0;
		


int nb_line_tHashInput_15 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_15=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row51Struct> tHashFile_tHashInput_15 = mf_tHashInput_15.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_12");
if(tHashFile_tHashInput_15==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row51Struct> iterator_tHashInput_15 = tHashFile_tHashInput_15.iterator();
while (iterator_tHashInput_15.hasNext()) {
    row51Struct next_tHashInput_15 = iterator_tHashInput_15.next();

	row47.COD_DIVIPOLA = next_tHashInput_15.COD_DIVIPOLA;
	row47.INDICADOR = next_tHashInput_15.INDICADOR;
	row47.SEXO = next_tHashInput_15.SEXO;
	row47.EDAD = next_tHashInput_15.EDAD;
	row47.ETNIA = next_tHashInput_15.ETNIA;
	row47.CIE10 = next_tHashInput_15.CIE10;
	row47.PRIORIDAD = next_tHashInput_15.PRIORIDAD;
	row47.GRUPO_RIESGO = next_tHashInput_15.GRUPO_RIESGO;

 



/**
 * [tHashInput_15 begin ] stop
 */
	
	/**
	 * [tHashInput_15 main ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 


	tos_count_tHashInput_15++;

/**
 * [tHashInput_15 main ] stop
 */
	
	/**
	 * [tHashInput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 



/**
 * [tHashInput_15 process_data_begin ] stop
 */

	
	/**
	 * [tMap_7 main ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row47"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;
		
						row48Struct row48 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_7 = false;
		boolean mainRowRejected_tMap_7 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row48" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow48 = false;
       		  	    	
       		  	    	
 							row48Struct row48ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    row48HashKey.CODIGO_TIPO_INDICADOR = row47.INDICADOR ;
                        		    		
                        		    		    row48HashKey.CIE10 = (row47.CIE10.equals("999"))?2:1; ;
                        		    		
                        		    		    row48HashKey.CODIGO_GRUPO_RIESGO = row47.GRUPO_RIESGO ;
                        		    		
                        		    		    row48HashKey.CODIGO_EDAD = row47.EDAD ;
                        		    		
                        		    		    row48HashKey.CODIGO_ETNIA = row47.ETNIA ;
                        		    		
                        		    		    row48HashKey.CODIGO_SEXO = row47.SEXO ;
                        		    		

								
		                        	row48HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row48.lookup( row48HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row48.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_7 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row48 != null && tHash_Lookup_row48.getCount(row48HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row48' and it contains more one result from keys :  row48.CODIGO_TIPO_INDICADOR = '" + row48HashKey.CODIGO_TIPO_INDICADOR + "', row48.CIE10 = '" + row48HashKey.CIE10 + "', row48.CODIGO_GRUPO_RIESGO = '" + row48HashKey.CODIGO_GRUPO_RIESGO + "', row48.CODIGO_EDAD = '" + row48HashKey.CODIGO_EDAD + "', row48.CODIGO_ETNIA = '" + row48HashKey.CODIGO_ETNIA + "', row48.CODIGO_SEXO = '" + row48HashKey.CODIGO_SEXO + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row48Struct fromLookup_row48 = null;
							row48 = row48Default;
										 
							
								 
							
							
								if (tHash_Lookup_row48 !=null && tHash_Lookup_row48.hasNext()) { // G 099
								
							
								
								fromLookup_row48 = tHash_Lookup_row48.next();

							
							
								} // G 099
							
							

							if(fromLookup_row48 != null) {
								row48 = fromLookup_row48;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
        // ###############################
        // # Output tables

REJECT_CONFIG = null;

if(!rejectedInnerJoin_tMap_7 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'REJECT_CONFIG'
// # Filter conditions 
if( rejectedInnerJoin_tMap_7 ) {
REJECT_CONFIG_tmp.COD_DIVIPOLA = row47.COD_DIVIPOLA ;
REJECT_CONFIG_tmp.INDICADOR = row47.INDICADOR ;
REJECT_CONFIG_tmp.SEXO = row47.SEXO ;
REJECT_CONFIG_tmp.EDAD = row47.EDAD ;
REJECT_CONFIG_tmp.ETNIA = row47.ETNIA ;
REJECT_CONFIG_tmp.CIE10 = row47.CIE10 ;
REJECT_CONFIG_tmp.PRIORIDAD = row47.PRIORIDAD ;
REJECT_CONFIG_tmp.GRUPO_RIESGO = row47.GRUPO_RIESGO ;
REJECT_CONFIG_tmp.ERROR = context.ErrorConfiguracionExistente;
REJECT_CONFIG = REJECT_CONFIG_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_7 = false;










 


	tos_count_tMap_7++;

/**
 * [tMap_7 main ] stop
 */
	
	/**
	 * [tMap_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_begin ] stop
 */
// Start of branch "REJECT_CONFIG"
if(REJECT_CONFIG != null) { 



	
	/**
	 * [tHashOutput_13 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"REJECT_CONFIG"
						
						);
					}
					



    
		REJECT_CONFIGStruct oneRow_tHashOutput_13 = new REJECT_CONFIGStruct();
				
					oneRow_tHashOutput_13.COD_DIVIPOLA = REJECT_CONFIG.COD_DIVIPOLA;
					oneRow_tHashOutput_13.INDICADOR = REJECT_CONFIG.INDICADOR;
					oneRow_tHashOutput_13.SEXO = REJECT_CONFIG.SEXO;
					oneRow_tHashOutput_13.EDAD = REJECT_CONFIG.EDAD;
					oneRow_tHashOutput_13.ETNIA = REJECT_CONFIG.ETNIA;
					oneRow_tHashOutput_13.CIE10 = REJECT_CONFIG.CIE10;
					oneRow_tHashOutput_13.PRIORIDAD = REJECT_CONFIG.PRIORIDAD;
					oneRow_tHashOutput_13.GRUPO_RIESGO = REJECT_CONFIG.GRUPO_RIESGO;
					oneRow_tHashOutput_13.ERROR = REJECT_CONFIG.ERROR;
		
        tHashFile_tHashOutput_13.put(oneRow_tHashOutput_13);
        nb_line_tHashOutput_13 ++;

 


	tos_count_tHashOutput_13++;

/**
 * [tHashOutput_13 main ] stop
 */
	
	/**
	 * [tHashOutput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 process_data_end ] stop
 */

} // End of branch "REJECT_CONFIG"




	
	/**
	 * [tMap_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 



/**
 * [tHashInput_15 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_15 end ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	
    

		
			nb_line_tHashInput_15++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_12");
	


	globalMap.put("tHashInput_15_NB_LINE", nb_line_tHashInput_15);       

 

ok_Hash.put("tHashInput_15", true);
end_Hash.put("tHashInput_15", System.currentTimeMillis());




/**
 * [tHashInput_15 end ] stop
 */

	
	/**
	 * [tMap_7 end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row48 != null) {
						tHash_Lookup_row48.endGet();
					}
					globalMap.remove( "tHash_Lookup_row48" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row47");
			  	}
			  	
 

ok_Hash.put("tMap_7", true);
end_Hash.put("tMap_7", System.currentTimeMillis());




/**
 * [tMap_7 end ] stop
 */

	
	/**
	 * [tHashOutput_13 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	
globalMap.put("tHashOutput_13_NB_LINE", nb_line_tHashOutput_13);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"REJECT_CONFIG");
			  	}
			  	
 

ok_Hash.put("tHashOutput_13", true);
end_Hash.put("tHashOutput_13", System.currentTimeMillis());

   			if (((Integer)globalMap.get("tHashOutput_13_NB_LINE"))>0) {
   				
					if(execStat){
   	 					runStat.updateStatOnConnection("If9", 0, "true");
					}
				tHashInput_17Process(globalMap);
			}

			   
   				else{
					if(execStat){   
   	 					runStat.updateStatOnConnection("If9", 0, "false");
					}   	 
   				}



/**
 * [tHashOutput_13 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row48"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_15 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 



/**
 * [tHashInput_15 finally ] stop
 */

	
	/**
	 * [tMap_7 finally ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 finally ] stop
 */

	
	/**
	 * [tHashOutput_13 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_15_SUBPROCESS_STATE", 1);
	}
	


public static class row50Struct implements routines.system.IPersistableRow<row50Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];

	
			    public String COD_DIVIPOLA;

				public String getCOD_DIVIPOLA () {
					return this.COD_DIVIPOLA;
				}

				public Boolean COD_DIVIPOLAIsNullable(){
				    return false;
				}
				public Boolean COD_DIVIPOLAIsKey(){
				    return false;
				}
				public Integer COD_DIVIPOLALength(){
				    return 5;
				}
				public Integer COD_DIVIPOLAPrecision(){
				    return 0;
				}
				public String COD_DIVIPOLADefault(){
				
					return null;
				
				}
				public String COD_DIVIPOLAComment(){
				
				    return "";
				
				}
				public String COD_DIVIPOLAPattern(){
				
					return "";
				
				}
				public String COD_DIVIPOLAOriginalDbColumnName(){
				
					return "COD_DIVIPOLA";
				
				}

				
			    public int INDICADOR;

				public int getINDICADOR () {
					return this.INDICADOR;
				}

				public Boolean INDICADORIsNullable(){
				    return false;
				}
				public Boolean INDICADORIsKey(){
				    return false;
				}
				public Integer INDICADORLength(){
				    return 3;
				}
				public Integer INDICADORPrecision(){
				    return 0;
				}
				public String INDICADORDefault(){
				
					return null;
				
				}
				public String INDICADORComment(){
				
				    return "";
				
				}
				public String INDICADORPattern(){
				
					return "";
				
				}
				public String INDICADOROriginalDbColumnName(){
				
					return "INDICADOR";
				
				}

				
			    public int SEXO;

				public int getSEXO () {
					return this.SEXO;
				}

				public Boolean SEXOIsNullable(){
				    return false;
				}
				public Boolean SEXOIsKey(){
				    return false;
				}
				public Integer SEXOLength(){
				    return 1;
				}
				public Integer SEXOPrecision(){
				    return 0;
				}
				public String SEXODefault(){
				
					return null;
				
				}
				public String SEXOComment(){
				
				    return "";
				
				}
				public String SEXOPattern(){
				
					return "";
				
				}
				public String SEXOOriginalDbColumnName(){
				
					return "SEXO";
				
				}

				
			    public int EDAD;

				public int getEDAD () {
					return this.EDAD;
				}

				public Boolean EDADIsNullable(){
				    return false;
				}
				public Boolean EDADIsKey(){
				    return false;
				}
				public Integer EDADLength(){
				    return 3;
				}
				public Integer EDADPrecision(){
				    return 0;
				}
				public String EDADDefault(){
				
					return null;
				
				}
				public String EDADComment(){
				
				    return "";
				
				}
				public String EDADPattern(){
				
					return "";
				
				}
				public String EDADOriginalDbColumnName(){
				
					return "EDAD";
				
				}

				
			    public int ETNIA;

				public int getETNIA () {
					return this.ETNIA;
				}

				public Boolean ETNIAIsNullable(){
				    return false;
				}
				public Boolean ETNIAIsKey(){
				    return false;
				}
				public Integer ETNIALength(){
				    return 1;
				}
				public Integer ETNIAPrecision(){
				    return 0;
				}
				public String ETNIADefault(){
				
					return null;
				
				}
				public String ETNIAComment(){
				
				    return "";
				
				}
				public String ETNIAPattern(){
				
					return "";
				
				}
				public String ETNIAOriginalDbColumnName(){
				
					return "ETNIA";
				
				}

				
			    public String CIE10;

				public String getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return false;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 3;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public int PRIORIDAD;

				public int getPRIORIDAD () {
					return this.PRIORIDAD;
				}

				public Boolean PRIORIDADIsNullable(){
				    return false;
				}
				public Boolean PRIORIDADIsKey(){
				    return false;
				}
				public Integer PRIORIDADLength(){
				    return 1;
				}
				public Integer PRIORIDADPrecision(){
				    return 0;
				}
				public String PRIORIDADDefault(){
				
					return null;
				
				}
				public String PRIORIDADComment(){
				
				    return "";
				
				}
				public String PRIORIDADPattern(){
				
					return "";
				
				}
				public String PRIORIDADOriginalDbColumnName(){
				
					return "PRIORIDAD";
				
				}

				
			    public int GRUPO_RIESGO;

				public int getGRUPO_RIESGO () {
					return this.GRUPO_RIESGO;
				}

				public Boolean GRUPO_RIESGOIsNullable(){
				    return false;
				}
				public Boolean GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer GRUPO_RIESGOLength(){
				    return 3;
				}
				public Integer GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String GRUPO_RIESGOOriginalDbColumnName(){
				
					return "GRUPO_RIESGO";
				
				}

				
			    public String ERROR;

				public String getERROR () {
					return this.ERROR;
				}

				public Boolean ERRORIsNullable(){
				    return true;
				}
				public Boolean ERRORIsKey(){
				    return false;
				}
				public Integer ERRORLength(){
				    return 0;
				}
				public Integer ERRORPrecision(){
				    return 0;
				}
				public String ERRORDefault(){
				
					return null;
				
				}
				public String ERRORComment(){
				
				    return "";
				
				}
				public String ERRORPattern(){
				
					return "";
				
				}
				public String ERROROriginalDbColumnName(){
				
					return "ERROR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.COD_DIVIPOLA = readString(dis);
					
			        this.INDICADOR = dis.readInt();
					
			        this.SEXO = dis.readInt();
					
			        this.EDAD = dis.readInt();
					
			        this.ETNIA = dis.readInt();
					
					this.CIE10 = readString(dis);
					
			        this.PRIORIDAD = dis.readInt();
					
			        this.GRUPO_RIESGO = dis.readInt();
					
					this.ERROR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_DIVIPOLA,dos);
					
					// int
				
		            	dos.writeInt(this.INDICADOR);
					
					// int
				
		            	dos.writeInt(this.SEXO);
					
					// int
				
		            	dos.writeInt(this.EDAD);
					
					// int
				
		            	dos.writeInt(this.ETNIA);
					
					// String
				
						writeString(this.CIE10,dos);
					
					// int
				
		            	dos.writeInt(this.PRIORIDAD);
					
					// int
				
		            	dos.writeInt(this.GRUPO_RIESGO);
					
					// String
				
						writeString(this.ERROR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_DIVIPOLA="+COD_DIVIPOLA);
		sb.append(",INDICADOR="+String.valueOf(INDICADOR));
		sb.append(",SEXO="+String.valueOf(SEXO));
		sb.append(",EDAD="+String.valueOf(EDAD));
		sb.append(",ETNIA="+String.valueOf(ETNIA));
		sb.append(",CIE10="+CIE10);
		sb.append(",PRIORIDAD="+String.valueOf(PRIORIDAD));
		sb.append(",GRUPO_RIESGO="+String.valueOf(GRUPO_RIESGO));
		sb.append(",ERROR="+ERROR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row50Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_17Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_17_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row50Struct row50 = new row50Struct();




	
	/**
	 * [tFileOutputDelimited_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_2", false);
		start_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row50");
					}
				
		int tos_count_tFileOutputDelimited_2 = 0;
		

String fileName_tFileOutputDelimited_2 = "";
    fileName_tFileOutputDelimited_2 = (new java.io.File(context.fileSystem_Path+"/"+context.fileSystem_Area+"/"+context.archivoSalida+".csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_2 = null;
    String extension_tFileOutputDelimited_2 = null;
    String directory_tFileOutputDelimited_2 = null;
    if((fileName_tFileOutputDelimited_2.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") < fileName_tFileOutputDelimited_2.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_2.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(0, fileName_tFileOutputDelimited_2.lastIndexOf("."));
            extension_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2.substring(fileName_tFileOutputDelimited_2.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_2 = fileName_tFileOutputDelimited_2;
            extension_tFileOutputDelimited_2 = "";
        }
        directory_tFileOutputDelimited_2 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_2 = true;
    java.io.File filetFileOutputDelimited_2 = new java.io.File(fileName_tFileOutputDelimited_2);
    globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
            int nb_line_tFileOutputDelimited_2 = 0;
            int splitedFileNo_tFileOutputDelimited_2 = 0;
            int currentRow_tFileOutputDelimited_2 = 0;

            final String OUT_DELIM_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_2:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_2 = /** Start field tFileOutputDelimited_2:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_2:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_2 != null && directory_tFileOutputDelimited_2.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_2 = new java.io.File(directory_tFileOutputDelimited_2);
                        if(!dir_tFileOutputDelimited_2.exists()) {
                            dir_tFileOutputDelimited_2.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_2 = null;

                        java.io.File fileToDelete_tFileOutputDelimited_2 = new java.io.File(fileName_tFileOutputDelimited_2);
                        if(fileToDelete_tFileOutputDelimited_2.exists()) {
                            fileToDelete_tFileOutputDelimited_2.delete();
                        }
                        outtFileOutputDelimited_2 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_2, false),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_2", outtFileOutputDelimited_2);
                        synchronized (multiThreadLockWrite) {
                                    if(filetFileOutputDelimited_2.length()==0){
                                        outtFileOutputDelimited_2.write("COD_DIVIPOLA");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("INDICADOR");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("SEXO");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("EDAD");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("ETNIA");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("CIE10");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("PRIORIDAD");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("GRUPO_RIESGO");
                                            outtFileOutputDelimited_2.write(OUT_DELIM_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.write("ERROR");
                                        outtFileOutputDelimited_2.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);
                                        outtFileOutputDelimited_2.flush();
                                    }
                        }


resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

 



/**
 * [tFileOutputDelimited_2 begin ] stop
 */



	
	/**
	 * [tHashInput_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_17", false);
		start_Hash.put("tHashInput_17", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_17";
	
	
		int tos_count_tHashInput_17 = 0;
		


int nb_line_tHashInput_17 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_17=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<REJECT_CONFIGStruct> tHashFile_tHashInput_17 = mf_tHashInput_17.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_13");
if(tHashFile_tHashInput_17==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<REJECT_CONFIGStruct> iterator_tHashInput_17 = tHashFile_tHashInput_17.iterator();
while (iterator_tHashInput_17.hasNext()) {
    REJECT_CONFIGStruct next_tHashInput_17 = iterator_tHashInput_17.next();

	row50.COD_DIVIPOLA = next_tHashInput_17.COD_DIVIPOLA;
	row50.INDICADOR = next_tHashInput_17.INDICADOR;
	row50.SEXO = next_tHashInput_17.SEXO;
	row50.EDAD = next_tHashInput_17.EDAD;
	row50.ETNIA = next_tHashInput_17.ETNIA;
	row50.CIE10 = next_tHashInput_17.CIE10;
	row50.PRIORIDAD = next_tHashInput_17.PRIORIDAD;
	row50.GRUPO_RIESGO = next_tHashInput_17.GRUPO_RIESGO;
	row50.ERROR = next_tHashInput_17.ERROR;

 



/**
 * [tHashInput_17 begin ] stop
 */
	
	/**
	 * [tHashInput_17 main ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	

 


	tos_count_tHashInput_17++;

/**
 * [tHashInput_17 main ] stop
 */
	
	/**
	 * [tHashInput_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	

 



/**
 * [tHashInput_17 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row50"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_2 = new StringBuilder();
                            if(row50.COD_DIVIPOLA != null) {
                        sb_tFileOutputDelimited_2.append(
                            row50.COD_DIVIPOLA
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                        sb_tFileOutputDelimited_2.append(
                            row50.INDICADOR
                        );
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                        sb_tFileOutputDelimited_2.append(
                            row50.SEXO
                        );
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                        sb_tFileOutputDelimited_2.append(
                            row50.EDAD
                        );
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                        sb_tFileOutputDelimited_2.append(
                            row50.ETNIA
                        );
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row50.CIE10 != null) {
                        sb_tFileOutputDelimited_2.append(
                            row50.CIE10
                        );
                            }
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                        sb_tFileOutputDelimited_2.append(
                            row50.PRIORIDAD
                        );
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                        sb_tFileOutputDelimited_2.append(
                            row50.GRUPO_RIESGO
                        );
                            sb_tFileOutputDelimited_2.append(OUT_DELIM_tFileOutputDelimited_2);
                            if(row50.ERROR != null) {
                        sb_tFileOutputDelimited_2.append(
                            row50.ERROR
                        );
                            }
                    sb_tFileOutputDelimited_2.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_2);


                    synchronized (multiThreadLockWrite) {
                    nb_line_tFileOutputDelimited_2++;
                    resourceMap.put("nb_line_tFileOutputDelimited_2", nb_line_tFileOutputDelimited_2);

                        outtFileOutputDelimited_2.write(sb_tFileOutputDelimited_2.toString());

                    }



 


	tos_count_tFileOutputDelimited_2++;

/**
 * [tFileOutputDelimited_2 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	

 



/**
 * [tFileOutputDelimited_2 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	

 



/**
 * [tHashInput_17 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_17 end ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	
    

		
			nb_line_tHashInput_17++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_13");
	


	globalMap.put("tHashInput_17_NB_LINE", nb_line_tHashInput_17);       

 

ok_Hash.put("tHashInput_17", true);
end_Hash.put("tHashInput_17", System.currentTimeMillis());




/**
 * [tHashInput_17 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	



		
	   		synchronized (multiThreadLockWrite) {
		
			
					if(outtFileOutputDelimited_2!=null) {
						outtFileOutputDelimited_2.flush();
						outtFileOutputDelimited_2.close();
					}
				
				globalMap.put("tFileOutputDelimited_2_NB_LINE",nb_line_tFileOutputDelimited_2);
				globalMap.put("tFileOutputDelimited_2_FILE_NAME",fileName_tFileOutputDelimited_2);
			
		
			}
		
		
		resourceMap.put("finish_tFileOutputDelimited_2", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row50");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_2", true);
end_Hash.put("tFileOutputDelimited_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk43", 0, "ok");
				}
				tJava_8Process(globalMap);



/**
 * [tFileOutputDelimited_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_17 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	

 



/**
 * [tHashInput_17 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_2 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_2";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_2") == null){ 
			
		   		synchronized (multiThreadLockWrite) {
			
				
						java.io.Writer outtFileOutputDelimited_2 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_2");
						if(outtFileOutputDelimited_2!=null) {
							outtFileOutputDelimited_2.flush();
							outtFileOutputDelimited_2.close();
						}
					
				
				}
			
			
		}
	

 



/**
 * [tFileOutputDelimited_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_17_SUBPROCESS_STATE", 1);
	}
	


public void tJava_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_8", false);
		start_Hash.put("tJava_8", System.currentTimeMillis());
		
	
	currentComponent="tJava_8";
	
	
		int tos_count_tJava_8 = 0;
		


globalMap.put("FILAS_ERROR_CONFIGURACION", (Integer)globalMap.get("FILAS_ERROR_CONFIGURACION")+1);
 



/**
 * [tJava_8 begin ] stop
 */
	
	/**
	 * [tJava_8 main ] start
	 */

	

	
	
	currentComponent="tJava_8";
	
	

 


	tos_count_tJava_8++;

/**
 * [tJava_8 main ] stop
 */
	
	/**
	 * [tJava_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_8";
	
	

 



/**
 * [tJava_8 process_data_begin ] stop
 */
	
	/**
	 * [tJava_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_8";
	
	

 



/**
 * [tJava_8 process_data_end ] stop
 */
	
	/**
	 * [tJava_8 end ] start
	 */

	

	
	
	currentComponent="tJava_8";
	
	

 

ok_Hash.put("tJava_8", true);
end_Hash.put("tJava_8", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk46", 0, "ok");
				}
				tFixedFlowInput_26Process(globalMap);



/**
 * [tJava_8 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_8 finally ] start
	 */

	

	
	
	currentComponent="tJava_8";
	
	

 



/**
 * [tJava_8 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_8_SUBPROCESS_STATE", 1);
	}
	


public void tJava_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tJava_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_3", false);
		start_Hash.put("tJava_3", System.currentTimeMillis());
		
	
	currentComponent="tJava_3";
	
	
		int tos_count_tJava_3 = 0;
		


//****************************************************************************************//
System.out.println((String)globalMap.get("tOracleInput_1_QUERY"));
//****************************************************************************************//
 



/**
 * [tJava_3 begin ] stop
 */
	
	/**
	 * [tJava_3 main ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 


	tos_count_tJava_3++;

/**
 * [tJava_3 main ] stop
 */
	
	/**
	 * [tJava_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_begin ] stop
 */
	
	/**
	 * [tJava_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_end ] stop
 */
	
	/**
	 * [tJava_3 end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 

ok_Hash.put("tJava_3", true);
end_Hash.put("tJava_3", System.currentTimeMillis());




/**
 * [tJava_3 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_3 finally ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_3_SUBPROCESS_STATE", 1);
	}
	


public static class row11Struct implements routines.system.IPersistableComparableLookupRow<row11Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer ID_SEXO;

				public Integer getID_SEXO () {
					return this.ID_SEXO;
				}

				public Boolean ID_SEXOIsNullable(){
				    return true;
				}
				public Boolean ID_SEXOIsKey(){
				    return false;
				}
				public Integer ID_SEXOLength(){
				    return 0;
				}
				public Integer ID_SEXOPrecision(){
				    return 0;
				}
				public String ID_SEXODefault(){
				
					return null;
				
				}
				public String ID_SEXOComment(){
				
				    return "";
				
				}
				public String ID_SEXOPattern(){
				
					return "";
				
				}
				public String ID_SEXOOriginalDbColumnName(){
				
					return "ID_SEXO";
				
				}

				
			    public Integer CODIGO_SEXO;

				public Integer getCODIGO_SEXO () {
					return this.CODIGO_SEXO;
				}

				public Boolean CODIGO_SEXOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SEXOIsKey(){
				    return false;
				}
				public Integer CODIGO_SEXOLength(){
				    return 0;
				}
				public Integer CODIGO_SEXOPrecision(){
				    return 0;
				}
				public String CODIGO_SEXODefault(){
				
					return null;
				
				}
				public String CODIGO_SEXOComment(){
				
				    return "";
				
				}
				public String CODIGO_SEXOPattern(){
				
					return "";
				
				}
				public String CODIGO_SEXOOriginalDbColumnName(){
				
					return "CODIGO_SEXO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CODIGO_SEXO == null) ? 0 : this.CODIGO_SEXO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row11Struct other = (row11Struct) obj;
		
						if (this.CODIGO_SEXO == null) {
							if (other.CODIGO_SEXO != null)
								return false;
						
						} else if (!this.CODIGO_SEXO.equals(other.CODIGO_SEXO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row11Struct other) {

		other.ID_SEXO = this.ID_SEXO;
	            other.CODIGO_SEXO = this.CODIGO_SEXO;
	            
	}

	public void copyKeysDataTo(row11Struct other) {

		other.CODIGO_SEXO = this.CODIGO_SEXO;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.CODIGO_SEXO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.CODIGO_SEXO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO_SEXO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO_SEXO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.ID_SEXO = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.ID_SEXO = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.ID_SEXO, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.ID_SEXO, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_SEXO="+String.valueOf(ID_SEXO));
		sb.append(",CODIGO_SEXO="+String.valueOf(CODIGO_SEXO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CODIGO_SEXO, other.CODIGO_SEXO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row11Struct row11 = new row11Struct();




	
	/**
	 * [tAdvancedHash_row11 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row11", false);
		start_Hash.put("tAdvancedHash_row11", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tAdvancedHash_row11 = 0;
		

			   		// connection name:row11
			   		// source node:tHashInput_2 - inputs:(after_tHashInput_9) outputs:(row11,row11) | target node:tAdvancedHash_row11 - inputs:(row11) outputs:()
			   		// linked node: tMap_2 - inputs:(SEXO_ACCEPT_FORMAT,row11) outputs:(SEXO_REJECT_EXIST)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row11 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row11Struct> tHash_Lookup_row11 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row11Struct>getLookup(matchingModeEnum_row11);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row11", tHash_Lookup_row11);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row11 begin ] stop
 */



	
	/**
	 * [tHashInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_2", false);
		start_Hash.put("tHashInput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_2";
	
	
		int tos_count_tHashInput_2 = 0;
		


int nb_line_tHashInput_2 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row6Struct> tHashFile_tHashInput_2 = mf_tHashInput_2.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_2==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row6Struct> iterator_tHashInput_2 = tHashFile_tHashInput_2.iterator();
while (iterator_tHashInput_2.hasNext()) {
    row6Struct next_tHashInput_2 = iterator_tHashInput_2.next();

	row11.ID_SEXO = next_tHashInput_2.ID_SEXO;
	row11.CODIGO_SEXO = next_tHashInput_2.CODIGO_SEXO;

 



/**
 * [tHashInput_2 begin ] stop
 */
	
	/**
	 * [tHashInput_2 main ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 


	tos_count_tHashInput_2++;

/**
 * [tHashInput_2 main ] stop
 */
	
	/**
	 * [tHashInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row11 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					


			   
			   

					row11Struct row11_HashRow = new row11Struct();
		   	   	   
				
				row11_HashRow.ID_SEXO = row11.ID_SEXO;
				
				row11_HashRow.CODIGO_SEXO = row11.CODIGO_SEXO;
				
			tHash_Lookup_row11.put(row11_HashRow);
			
            




 


	tos_count_tAdvancedHash_row11++;

/**
 * [tAdvancedHash_row11 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

 



/**
 * [tAdvancedHash_row11 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row11 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

 



/**
 * [tAdvancedHash_row11 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_2 end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	
    

		
			nb_line_tHashInput_2++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_2_NB_LINE", nb_line_tHashInput_2);       

 

ok_Hash.put("tHashInput_2", true);
end_Hash.put("tHashInput_2", System.currentTimeMillis());




/**
 * [tHashInput_2 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row11 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

tHash_Lookup_row11.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row11", true);
end_Hash.put("tAdvancedHash_row11", System.currentTimeMillis());




/**
 * [tAdvancedHash_row11 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row11 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row11";
	
	

 



/**
 * [tAdvancedHash_row11 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row19Struct implements routines.system.IPersistableComparableLookupRow<row19Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer ID_EDAD;

				public Integer getID_EDAD () {
					return this.ID_EDAD;
				}

				public Boolean ID_EDADIsNullable(){
				    return true;
				}
				public Boolean ID_EDADIsKey(){
				    return false;
				}
				public Integer ID_EDADLength(){
				    return 0;
				}
				public Integer ID_EDADPrecision(){
				    return 0;
				}
				public String ID_EDADDefault(){
				
					return null;
				
				}
				public String ID_EDADComment(){
				
				    return "";
				
				}
				public String ID_EDADPattern(){
				
					return "";
				
				}
				public String ID_EDADOriginalDbColumnName(){
				
					return "ID_EDAD";
				
				}

				
			    public Integer CODIGO_EDAD;

				public Integer getCODIGO_EDAD () {
					return this.CODIGO_EDAD;
				}

				public Boolean CODIGO_EDADIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EDADIsKey(){
				    return false;
				}
				public Integer CODIGO_EDADLength(){
				    return 0;
				}
				public Integer CODIGO_EDADPrecision(){
				    return 0;
				}
				public String CODIGO_EDADDefault(){
				
					return null;
				
				}
				public String CODIGO_EDADComment(){
				
				    return "";
				
				}
				public String CODIGO_EDADPattern(){
				
					return "";
				
				}
				public String CODIGO_EDADOriginalDbColumnName(){
				
					return "CODIGO_EDAD";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CODIGO_EDAD == null) ? 0 : this.CODIGO_EDAD.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row19Struct other = (row19Struct) obj;
		
						if (this.CODIGO_EDAD == null) {
							if (other.CODIGO_EDAD != null)
								return false;
						
						} else if (!this.CODIGO_EDAD.equals(other.CODIGO_EDAD))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row19Struct other) {

		other.ID_EDAD = this.ID_EDAD;
	            other.CODIGO_EDAD = this.CODIGO_EDAD;
	            
	}

	public void copyKeysDataTo(row19Struct other) {

		other.CODIGO_EDAD = this.CODIGO_EDAD;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.CODIGO_EDAD = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.CODIGO_EDAD = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO_EDAD,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO_EDAD,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.ID_EDAD = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.ID_EDAD = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.ID_EDAD, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.ID_EDAD, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_EDAD="+String.valueOf(ID_EDAD));
		sb.append(",CODIGO_EDAD="+String.valueOf(CODIGO_EDAD));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CODIGO_EDAD, other.CODIGO_EDAD);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row19Struct row19 = new row19Struct();




	
	/**
	 * [tAdvancedHash_row19 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row19", false);
		start_Hash.put("tAdvancedHash_row19", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row19";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row19");
					}
				
		int tos_count_tAdvancedHash_row19 = 0;
		

			   		// connection name:row19
			   		// source node:tHashInput_3 - inputs:(after_tHashInput_10) outputs:(row19,row19) | target node:tAdvancedHash_row19 - inputs:(row19) outputs:()
			   		// linked node: tMap_3 - inputs:(EDAD_ACCEPT_FORMAT,row19) outputs:(EDAD_REJECT_EXIST)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row19 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row19Struct> tHash_Lookup_row19 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row19Struct>getLookup(matchingModeEnum_row19);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row19", tHash_Lookup_row19);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row19 begin ] stop
 */



	
	/**
	 * [tHashInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_3", false);
		start_Hash.put("tHashInput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_3";
	
	
		int tos_count_tHashInput_3 = 0;
		


int nb_line_tHashInput_3 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row13Struct> tHashFile_tHashInput_3 = mf_tHashInput_3.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_3==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row13Struct> iterator_tHashInput_3 = tHashFile_tHashInput_3.iterator();
while (iterator_tHashInput_3.hasNext()) {
    row13Struct next_tHashInput_3 = iterator_tHashInput_3.next();

	row19.ID_EDAD = next_tHashInput_3.ID_EDAD;
	row19.CODIGO_EDAD = next_tHashInput_3.CODIGO_EDAD;

 



/**
 * [tHashInput_3 begin ] stop
 */
	
	/**
	 * [tHashInput_3 main ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 


	tos_count_tHashInput_3++;

/**
 * [tHashInput_3 main ] stop
 */
	
	/**
	 * [tHashInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row19 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row19";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row19"
						
						);
					}
					


			   
			   

					row19Struct row19_HashRow = new row19Struct();
		   	   	   
				
				row19_HashRow.ID_EDAD = row19.ID_EDAD;
				
				row19_HashRow.CODIGO_EDAD = row19.CODIGO_EDAD;
				
			tHash_Lookup_row19.put(row19_HashRow);
			
            




 


	tos_count_tAdvancedHash_row19++;

/**
 * [tAdvancedHash_row19 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row19";
	
	

 



/**
 * [tAdvancedHash_row19 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row19 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row19";
	
	

 



/**
 * [tAdvancedHash_row19 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_3 end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	
    

		
			nb_line_tHashInput_3++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_3_NB_LINE", nb_line_tHashInput_3);       

 

ok_Hash.put("tHashInput_3", true);
end_Hash.put("tHashInput_3", System.currentTimeMillis());




/**
 * [tHashInput_3 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row19 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row19";
	
	

tHash_Lookup_row19.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row19");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row19", true);
end_Hash.put("tAdvancedHash_row19", System.currentTimeMillis());




/**
 * [tAdvancedHash_row19 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row19 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row19";
	
	

 



/**
 * [tAdvancedHash_row19 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row26Struct implements routines.system.IPersistableComparableLookupRow<row26Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer ID_ETNIA;

				public Integer getID_ETNIA () {
					return this.ID_ETNIA;
				}

				public Boolean ID_ETNIAIsNullable(){
				    return true;
				}
				public Boolean ID_ETNIAIsKey(){
				    return false;
				}
				public Integer ID_ETNIALength(){
				    return 0;
				}
				public Integer ID_ETNIAPrecision(){
				    return 0;
				}
				public String ID_ETNIADefault(){
				
					return null;
				
				}
				public String ID_ETNIAComment(){
				
				    return "";
				
				}
				public String ID_ETNIAPattern(){
				
					return "";
				
				}
				public String ID_ETNIAOriginalDbColumnName(){
				
					return "ID_ETNIA";
				
				}

				
			    public Integer CODIGO_ETNIA;

				public Integer getCODIGO_ETNIA () {
					return this.CODIGO_ETNIA;
				}

				public Boolean CODIGO_ETNIAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ETNIAIsKey(){
				    return false;
				}
				public Integer CODIGO_ETNIALength(){
				    return 0;
				}
				public Integer CODIGO_ETNIAPrecision(){
				    return 0;
				}
				public String CODIGO_ETNIADefault(){
				
					return null;
				
				}
				public String CODIGO_ETNIAComment(){
				
				    return "";
				
				}
				public String CODIGO_ETNIAPattern(){
				
					return "";
				
				}
				public String CODIGO_ETNIAOriginalDbColumnName(){
				
					return "CODIGO_ETNIA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CODIGO_ETNIA == null) ? 0 : this.CODIGO_ETNIA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row26Struct other = (row26Struct) obj;
		
						if (this.CODIGO_ETNIA == null) {
							if (other.CODIGO_ETNIA != null)
								return false;
						
						} else if (!this.CODIGO_ETNIA.equals(other.CODIGO_ETNIA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row26Struct other) {

		other.ID_ETNIA = this.ID_ETNIA;
	            other.CODIGO_ETNIA = this.CODIGO_ETNIA;
	            
	}

	public void copyKeysDataTo(row26Struct other) {

		other.CODIGO_ETNIA = this.CODIGO_ETNIA;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.CODIGO_ETNIA = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.CODIGO_ETNIA = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO_ETNIA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO_ETNIA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.ID_ETNIA = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.ID_ETNIA = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.ID_ETNIA, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.ID_ETNIA, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ETNIA="+String.valueOf(ID_ETNIA));
		sb.append(",CODIGO_ETNIA="+String.valueOf(CODIGO_ETNIA));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row26Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CODIGO_ETNIA, other.CODIGO_ETNIA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row26Struct row26 = new row26Struct();




	
	/**
	 * [tAdvancedHash_row26 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row26", false);
		start_Hash.put("tAdvancedHash_row26", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row26";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row26");
					}
				
		int tos_count_tAdvancedHash_row26 = 0;
		

			   		// connection name:row26
			   		// source node:tHashInput_4 - inputs:(after_tHashInput_11) outputs:(row26,row26) | target node:tAdvancedHash_row26 - inputs:(row26) outputs:()
			   		// linked node: tMap_4 - inputs:(ETNIA_ACCEPT_FORMAT,row26) outputs:(ETNIA_REJECT_EXIST)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row26 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row26Struct> tHash_Lookup_row26 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row26Struct>getLookup(matchingModeEnum_row26);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row26", tHash_Lookup_row26);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row26 begin ] stop
 */



	
	/**
	 * [tHashInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_4", false);
		start_Hash.put("tHashInput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_4";
	
	
		int tos_count_tHashInput_4 = 0;
		


int nb_line_tHashInput_4 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row17Struct> tHashFile_tHashInput_4 = mf_tHashInput_4.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_6");
if(tHashFile_tHashInput_4==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row17Struct> iterator_tHashInput_4 = tHashFile_tHashInput_4.iterator();
while (iterator_tHashInput_4.hasNext()) {
    row17Struct next_tHashInput_4 = iterator_tHashInput_4.next();

	row26.ID_ETNIA = next_tHashInput_4.ID_ETNIA;
	row26.CODIGO_ETNIA = next_tHashInput_4.CODIGO_ETNIA;

 



/**
 * [tHashInput_4 begin ] stop
 */
	
	/**
	 * [tHashInput_4 main ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 


	tos_count_tHashInput_4++;

/**
 * [tHashInput_4 main ] stop
 */
	
	/**
	 * [tHashInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row26 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row26";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row26"
						
						);
					}
					


			   
			   

					row26Struct row26_HashRow = new row26Struct();
		   	   	   
				
				row26_HashRow.ID_ETNIA = row26.ID_ETNIA;
				
				row26_HashRow.CODIGO_ETNIA = row26.CODIGO_ETNIA;
				
			tHash_Lookup_row26.put(row26_HashRow);
			
            




 


	tos_count_tAdvancedHash_row26++;

/**
 * [tAdvancedHash_row26 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row26 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row26";
	
	

 



/**
 * [tAdvancedHash_row26 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row26 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row26";
	
	

 



/**
 * [tAdvancedHash_row26 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_4 end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	
    

		
			nb_line_tHashInput_4++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_6");
	


	globalMap.put("tHashInput_4_NB_LINE", nb_line_tHashInput_4);       

 

ok_Hash.put("tHashInput_4", true);
end_Hash.put("tHashInput_4", System.currentTimeMillis());




/**
 * [tHashInput_4 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row26 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row26";
	
	

tHash_Lookup_row26.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row26");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row26", true);
end_Hash.put("tAdvancedHash_row26", System.currentTimeMillis());




/**
 * [tAdvancedHash_row26 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row26 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row26";
	
	

 



/**
 * [tAdvancedHash_row26 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row28Struct implements routines.system.IPersistableComparableLookupRow<row28Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CODIGO_CIE10;

				public String getCODIGO_CIE10 () {
					return this.CODIGO_CIE10;
				}

				public Boolean CODIGO_CIE10IsNullable(){
				    return true;
				}
				public Boolean CODIGO_CIE10IsKey(){
				    return false;
				}
				public Integer CODIGO_CIE10Length(){
				    return 0;
				}
				public Integer CODIGO_CIE10Precision(){
				    return 0;
				}
				public String CODIGO_CIE10Default(){
				
					return null;
				
				}
				public String CODIGO_CIE10Comment(){
				
				    return "";
				
				}
				public String CODIGO_CIE10Pattern(){
				
					return "";
				
				}
				public String CODIGO_CIE10OriginalDbColumnName(){
				
					return "CODIGO_CIE10";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CODIGO_CIE10 == null) ? 0 : this.CODIGO_CIE10.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row28Struct other = (row28Struct) obj;
		
						if (this.CODIGO_CIE10 == null) {
							if (other.CODIGO_CIE10 != null)
								return false;
						
						} else if (!this.CODIGO_CIE10.equals(other.CODIGO_CIE10))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row28Struct other) {

		other.CODIGO_CIE10 = this.CODIGO_CIE10;
	            
	}

	public void copyKeysDataTo(row28Struct other) {

		other.CODIGO_CIE10 = this.CODIGO_CIE10;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length) {
				if(length < 1024 && commonByteArray_VSP_VIGILANCIA_ETL_vigilancia.length == 0) {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[1024];
				} else {
   					commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length);
			strReturn = new String(commonByteArray_VSP_VIGILANCIA_ETL_vigilancia, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.CODIGO_CIE10 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
					this.CODIGO_CIE10 = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_CIE10,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_CIE10,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		

		

        }

		
        	finally {}

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		

		

        }

		
        	finally {}

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
        	}
        	finally {}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
        	}
        	finally {}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_CIE10="+CODIGO_CIE10);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row28Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CODIGO_CIE10, other.CODIGO_CIE10);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row28Struct row28 = new row28Struct();




	
	/**
	 * [tAdvancedHash_row28 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row28", false);
		start_Hash.put("tAdvancedHash_row28", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row28";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row28");
					}
				
		int tos_count_tAdvancedHash_row28 = 0;
		

			   		// connection name:row28
			   		// source node:tHashInput_5 - inputs:(after_tHashInput_12) outputs:(row28,row28) | target node:tAdvancedHash_row28 - inputs:(row28) outputs:()
			   		// linked node: tMap_5 - inputs:(CIE10_ACCEPT_FORMAT,row28) outputs:(CIE10_REJECT_EXIST)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row28 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row28Struct> tHash_Lookup_row28 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row28Struct>getLookup(matchingModeEnum_row28);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row28", tHash_Lookup_row28);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row28 begin ] stop
 */



	
	/**
	 * [tHashInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_5", false);
		start_Hash.put("tHashInput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_5";
	
	
		int tos_count_tHashInput_5 = 0;
		


int nb_line_tHashInput_5 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row23Struct> tHashFile_tHashInput_5 = mf_tHashInput_5.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_9");
if(tHashFile_tHashInput_5==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row23Struct> iterator_tHashInput_5 = tHashFile_tHashInput_5.iterator();
while (iterator_tHashInput_5.hasNext()) {
    row23Struct next_tHashInput_5 = iterator_tHashInput_5.next();

	row28.CODIGO_CIE10 = next_tHashInput_5.CODIGO_CIE10;

 



/**
 * [tHashInput_5 begin ] stop
 */
	
	/**
	 * [tHashInput_5 main ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 


	tos_count_tHashInput_5++;

/**
 * [tHashInput_5 main ] stop
 */
	
	/**
	 * [tHashInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row28 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row28";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row28"
						
						);
					}
					


			   
			   

					row28Struct row28_HashRow = new row28Struct();
		   	   	   
				
				row28_HashRow.CODIGO_CIE10 = row28.CODIGO_CIE10;
				
			tHash_Lookup_row28.put(row28_HashRow);
			
            




 


	tos_count_tAdvancedHash_row28++;

/**
 * [tAdvancedHash_row28 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row28 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row28";
	
	

 



/**
 * [tAdvancedHash_row28 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row28 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row28";
	
	

 



/**
 * [tAdvancedHash_row28 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_5 end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	
    

		
			nb_line_tHashInput_5++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_9");
	


	globalMap.put("tHashInput_5_NB_LINE", nb_line_tHashInput_5);       

 

ok_Hash.put("tHashInput_5", true);
end_Hash.put("tHashInput_5", System.currentTimeMillis());




/**
 * [tHashInput_5 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row28 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row28";
	
	

tHash_Lookup_row28.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row28");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row28", true);
end_Hash.put("tAdvancedHash_row28", System.currentTimeMillis());




/**
 * [tAdvancedHash_row28 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row28 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row28";
	
	

 



/**
 * [tAdvancedHash_row28 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row16Struct implements routines.system.IPersistableComparableLookupRow<row16Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer ID_GRUPO_RIESGO;

				public Integer getID_GRUPO_RIESGO () {
					return this.ID_GRUPO_RIESGO;
				}

				public Boolean ID_GRUPO_RIESGOIsNullable(){
				    return true;
				}
				public Boolean ID_GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer ID_GRUPO_RIESGOLength(){
				    return 0;
				}
				public Integer ID_GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String ID_GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String ID_GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String ID_GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String ID_GRUPO_RIESGOOriginalDbColumnName(){
				
					return "ID_GRUPO_RIESGO";
				
				}

				
			    public Integer CODIGO_GRUPO_RIESGO;

				public Integer getCODIGO_GRUPO_RIESGO () {
					return this.CODIGO_GRUPO_RIESGO;
				}

				public Boolean CODIGO_GRUPO_RIESGOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer CODIGO_GRUPO_RIESGOLength(){
				    return 0;
				}
				public Integer CODIGO_GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String CODIGO_GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String CODIGO_GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String CODIGO_GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String CODIGO_GRUPO_RIESGOOriginalDbColumnName(){
				
					return "CODIGO_GRUPO_RIESGO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CODIGO_GRUPO_RIESGO == null) ? 0 : this.CODIGO_GRUPO_RIESGO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row16Struct other = (row16Struct) obj;
		
						if (this.CODIGO_GRUPO_RIESGO == null) {
							if (other.CODIGO_GRUPO_RIESGO != null)
								return false;
						
						} else if (!this.CODIGO_GRUPO_RIESGO.equals(other.CODIGO_GRUPO_RIESGO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row16Struct other) {

		other.ID_GRUPO_RIESGO = this.ID_GRUPO_RIESGO;
	            other.CODIGO_GRUPO_RIESGO = this.CODIGO_GRUPO_RIESGO;
	            
	}

	public void copyKeysDataTo(row16Struct other) {

		other.CODIGO_GRUPO_RIESGO = this.CODIGO_GRUPO_RIESGO;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.CODIGO_GRUPO_RIESGO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.CODIGO_GRUPO_RIESGO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO_GRUPO_RIESGO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO_GRUPO_RIESGO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.ID_GRUPO_RIESGO = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.ID_GRUPO_RIESGO = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.ID_GRUPO_RIESGO, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.ID_GRUPO_RIESGO, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_GRUPO_RIESGO="+String.valueOf(ID_GRUPO_RIESGO));
		sb.append(",CODIGO_GRUPO_RIESGO="+String.valueOf(CODIGO_GRUPO_RIESGO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CODIGO_GRUPO_RIESGO, other.CODIGO_GRUPO_RIESGO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row16Struct row16 = new row16Struct();




	
	/**
	 * [tAdvancedHash_row16 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row16", false);
		start_Hash.put("tAdvancedHash_row16", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tAdvancedHash_row16 = 0;
		

			   		// connection name:row16
			   		// source node:tHashInput_6 - inputs:(after_tHashInput_13) outputs:(row16,row16) | target node:tAdvancedHash_row16 - inputs:(row16) outputs:()
			   		// linked node: tMap_6 - inputs:(GRUPO_RIESGO_ACCEPT_FORMAT,row16) outputs:(GRUPO_RIESGO_REJECT_EXIST)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row16 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct> tHash_Lookup_row16 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row16Struct>getLookup(matchingModeEnum_row16);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row16", tHash_Lookup_row16);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row16 begin ] stop
 */



	
	/**
	 * [tHashInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_6", false);
		start_Hash.put("tHashInput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_6";
	
	
		int tos_count_tHashInput_6 = 0;
		


int nb_line_tHashInput_6 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row22Struct> tHashFile_tHashInput_6 = mf_tHashInput_6.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_8");
if(tHashFile_tHashInput_6==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row22Struct> iterator_tHashInput_6 = tHashFile_tHashInput_6.iterator();
while (iterator_tHashInput_6.hasNext()) {
    row22Struct next_tHashInput_6 = iterator_tHashInput_6.next();

	row16.ID_GRUPO_RIESGO = next_tHashInput_6.CODIGO_GRUPO_RIESGO;

 



/**
 * [tHashInput_6 begin ] stop
 */
	
	/**
	 * [tHashInput_6 main ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 


	tos_count_tHashInput_6++;

/**
 * [tHashInput_6 main ] stop
 */
	
	/**
	 * [tHashInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row16"
						
						);
					}
					


			   
			   

					row16Struct row16_HashRow = new row16Struct();
		   	   	   
				
				row16_HashRow.ID_GRUPO_RIESGO = row16.ID_GRUPO_RIESGO;
				
				row16_HashRow.CODIGO_GRUPO_RIESGO = row16.CODIGO_GRUPO_RIESGO;
				
			tHash_Lookup_row16.put(row16_HashRow);
			
            




 


	tos_count_tAdvancedHash_row16++;

/**
 * [tAdvancedHash_row16 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

 



/**
 * [tAdvancedHash_row16 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row16 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

 



/**
 * [tAdvancedHash_row16 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_6 end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	
    

		
			nb_line_tHashInput_6++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_8");
	


	globalMap.put("tHashInput_6_NB_LINE", nb_line_tHashInput_6);       

 

ok_Hash.put("tHashInput_6", true);
end_Hash.put("tHashInput_6", System.currentTimeMillis());




/**
 * [tHashInput_6 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

tHash_Lookup_row16.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row16", true);
end_Hash.put("tAdvancedHash_row16", System.currentTimeMillis());




/**
 * [tAdvancedHash_row16 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

 



/**
 * [tAdvancedHash_row16 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class row48Struct implements routines.system.IPersistableComparableLookupRow<row48Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer ID_INDICADOR;

				public Integer getID_INDICADOR () {
					return this.ID_INDICADOR;
				}

				public Boolean ID_INDICADORIsNullable(){
				    return true;
				}
				public Boolean ID_INDICADORIsKey(){
				    return false;
				}
				public Integer ID_INDICADORLength(){
				    return 0;
				}
				public Integer ID_INDICADORPrecision(){
				    return 0;
				}
				public String ID_INDICADORDefault(){
				
					return null;
				
				}
				public String ID_INDICADORComment(){
				
				    return "";
				
				}
				public String ID_INDICADORPattern(){
				
					return "";
				
				}
				public String ID_INDICADOROriginalDbColumnName(){
				
					return "ID_INDICADOR";
				
				}

				
			    public Integer ID_TIPO_INDICADOR;

				public Integer getID_TIPO_INDICADOR () {
					return this.ID_TIPO_INDICADOR;
				}

				public Boolean ID_TIPO_INDICADORIsNullable(){
				    return true;
				}
				public Boolean ID_TIPO_INDICADORIsKey(){
				    return false;
				}
				public Integer ID_TIPO_INDICADORLength(){
				    return 0;
				}
				public Integer ID_TIPO_INDICADORPrecision(){
				    return 0;
				}
				public String ID_TIPO_INDICADORDefault(){
				
					return null;
				
				}
				public String ID_TIPO_INDICADORComment(){
				
				    return "";
				
				}
				public String ID_TIPO_INDICADORPattern(){
				
					return "";
				
				}
				public String ID_TIPO_INDICADOROriginalDbColumnName(){
				
					return "ID_TIPO_INDICADOR";
				
				}

				
			    public Integer CODIGO_TIPO_INDICADOR;

				public Integer getCODIGO_TIPO_INDICADOR () {
					return this.CODIGO_TIPO_INDICADOR;
				}

				public Boolean CODIGO_TIPO_INDICADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_TIPO_INDICADORIsKey(){
				    return false;
				}
				public Integer CODIGO_TIPO_INDICADORLength(){
				    return 0;
				}
				public Integer CODIGO_TIPO_INDICADORPrecision(){
				    return 0;
				}
				public String CODIGO_TIPO_INDICADORDefault(){
				
					return null;
				
				}
				public String CODIGO_TIPO_INDICADORComment(){
				
				    return "";
				
				}
				public String CODIGO_TIPO_INDICADORPattern(){
				
					return "";
				
				}
				public String CODIGO_TIPO_INDICADOROriginalDbColumnName(){
				
					return "CODIGO_TIPO_INDICADOR";
				
				}

				
			    public Integer CIE10;

				public Integer getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return true;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 0;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public Integer ID_GRUPO_RIESGO;

				public Integer getID_GRUPO_RIESGO () {
					return this.ID_GRUPO_RIESGO;
				}

				public Boolean ID_GRUPO_RIESGOIsNullable(){
				    return true;
				}
				public Boolean ID_GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer ID_GRUPO_RIESGOLength(){
				    return 0;
				}
				public Integer ID_GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String ID_GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String ID_GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String ID_GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String ID_GRUPO_RIESGOOriginalDbColumnName(){
				
					return "ID_GRUPO_RIESGO";
				
				}

				
			    public Integer CODIGO_GRUPO_RIESGO;

				public Integer getCODIGO_GRUPO_RIESGO () {
					return this.CODIGO_GRUPO_RIESGO;
				}

				public Boolean CODIGO_GRUPO_RIESGOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer CODIGO_GRUPO_RIESGOLength(){
				    return 0;
				}
				public Integer CODIGO_GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String CODIGO_GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String CODIGO_GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String CODIGO_GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String CODIGO_GRUPO_RIESGOOriginalDbColumnName(){
				
					return "CODIGO_GRUPO_RIESGO";
				
				}

				
			    public Integer ID_EDAD;

				public Integer getID_EDAD () {
					return this.ID_EDAD;
				}

				public Boolean ID_EDADIsNullable(){
				    return true;
				}
				public Boolean ID_EDADIsKey(){
				    return false;
				}
				public Integer ID_EDADLength(){
				    return 0;
				}
				public Integer ID_EDADPrecision(){
				    return 0;
				}
				public String ID_EDADDefault(){
				
					return null;
				
				}
				public String ID_EDADComment(){
				
				    return "";
				
				}
				public String ID_EDADPattern(){
				
					return "";
				
				}
				public String ID_EDADOriginalDbColumnName(){
				
					return "ID_EDAD";
				
				}

				
			    public Integer CODIGO_EDAD;

				public Integer getCODIGO_EDAD () {
					return this.CODIGO_EDAD;
				}

				public Boolean CODIGO_EDADIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EDADIsKey(){
				    return false;
				}
				public Integer CODIGO_EDADLength(){
				    return 0;
				}
				public Integer CODIGO_EDADPrecision(){
				    return 0;
				}
				public String CODIGO_EDADDefault(){
				
					return null;
				
				}
				public String CODIGO_EDADComment(){
				
				    return "";
				
				}
				public String CODIGO_EDADPattern(){
				
					return "";
				
				}
				public String CODIGO_EDADOriginalDbColumnName(){
				
					return "CODIGO_EDAD";
				
				}

				
			    public Integer ID_ETNIA;

				public Integer getID_ETNIA () {
					return this.ID_ETNIA;
				}

				public Boolean ID_ETNIAIsNullable(){
				    return true;
				}
				public Boolean ID_ETNIAIsKey(){
				    return false;
				}
				public Integer ID_ETNIALength(){
				    return 0;
				}
				public Integer ID_ETNIAPrecision(){
				    return 0;
				}
				public String ID_ETNIADefault(){
				
					return null;
				
				}
				public String ID_ETNIAComment(){
				
				    return "";
				
				}
				public String ID_ETNIAPattern(){
				
					return "";
				
				}
				public String ID_ETNIAOriginalDbColumnName(){
				
					return "ID_ETNIA";
				
				}

				
			    public Integer CODIGO_ETNIA;

				public Integer getCODIGO_ETNIA () {
					return this.CODIGO_ETNIA;
				}

				public Boolean CODIGO_ETNIAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ETNIAIsKey(){
				    return false;
				}
				public Integer CODIGO_ETNIALength(){
				    return 0;
				}
				public Integer CODIGO_ETNIAPrecision(){
				    return 0;
				}
				public String CODIGO_ETNIADefault(){
				
					return null;
				
				}
				public String CODIGO_ETNIAComment(){
				
				    return "";
				
				}
				public String CODIGO_ETNIAPattern(){
				
					return "";
				
				}
				public String CODIGO_ETNIAOriginalDbColumnName(){
				
					return "CODIGO_ETNIA";
				
				}

				
			    public Integer ID_SEXO;

				public Integer getID_SEXO () {
					return this.ID_SEXO;
				}

				public Boolean ID_SEXOIsNullable(){
				    return true;
				}
				public Boolean ID_SEXOIsKey(){
				    return false;
				}
				public Integer ID_SEXOLength(){
				    return 0;
				}
				public Integer ID_SEXOPrecision(){
				    return 0;
				}
				public String ID_SEXODefault(){
				
					return null;
				
				}
				public String ID_SEXOComment(){
				
				    return "";
				
				}
				public String ID_SEXOPattern(){
				
					return "";
				
				}
				public String ID_SEXOOriginalDbColumnName(){
				
					return "ID_SEXO";
				
				}

				
			    public Integer CODIGO_SEXO;

				public Integer getCODIGO_SEXO () {
					return this.CODIGO_SEXO;
				}

				public Boolean CODIGO_SEXOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SEXOIsKey(){
				    return false;
				}
				public Integer CODIGO_SEXOLength(){
				    return 0;
				}
				public Integer CODIGO_SEXOPrecision(){
				    return 0;
				}
				public String CODIGO_SEXODefault(){
				
					return null;
				
				}
				public String CODIGO_SEXOComment(){
				
				    return "";
				
				}
				public String CODIGO_SEXOPattern(){
				
					return "";
				
				}
				public String CODIGO_SEXOOriginalDbColumnName(){
				
					return "CODIGO_SEXO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CODIGO_TIPO_INDICADOR == null) ? 0 : this.CODIGO_TIPO_INDICADOR.hashCode());
					
						result = prime * result + ((this.CIE10 == null) ? 0 : this.CIE10.hashCode());
					
						result = prime * result + ((this.CODIGO_GRUPO_RIESGO == null) ? 0 : this.CODIGO_GRUPO_RIESGO.hashCode());
					
						result = prime * result + ((this.CODIGO_EDAD == null) ? 0 : this.CODIGO_EDAD.hashCode());
					
						result = prime * result + ((this.CODIGO_ETNIA == null) ? 0 : this.CODIGO_ETNIA.hashCode());
					
						result = prime * result + ((this.CODIGO_SEXO == null) ? 0 : this.CODIGO_SEXO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row48Struct other = (row48Struct) obj;
		
						if (this.CODIGO_TIPO_INDICADOR == null) {
							if (other.CODIGO_TIPO_INDICADOR != null)
								return false;
						
						} else if (!this.CODIGO_TIPO_INDICADOR.equals(other.CODIGO_TIPO_INDICADOR))
						
							return false;
					
						if (this.CIE10 == null) {
							if (other.CIE10 != null)
								return false;
						
						} else if (!this.CIE10.equals(other.CIE10))
						
							return false;
					
						if (this.CODIGO_GRUPO_RIESGO == null) {
							if (other.CODIGO_GRUPO_RIESGO != null)
								return false;
						
						} else if (!this.CODIGO_GRUPO_RIESGO.equals(other.CODIGO_GRUPO_RIESGO))
						
							return false;
					
						if (this.CODIGO_EDAD == null) {
							if (other.CODIGO_EDAD != null)
								return false;
						
						} else if (!this.CODIGO_EDAD.equals(other.CODIGO_EDAD))
						
							return false;
					
						if (this.CODIGO_ETNIA == null) {
							if (other.CODIGO_ETNIA != null)
								return false;
						
						} else if (!this.CODIGO_ETNIA.equals(other.CODIGO_ETNIA))
						
							return false;
					
						if (this.CODIGO_SEXO == null) {
							if (other.CODIGO_SEXO != null)
								return false;
						
						} else if (!this.CODIGO_SEXO.equals(other.CODIGO_SEXO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row48Struct other) {

		other.ID_INDICADOR = this.ID_INDICADOR;
	            other.ID_TIPO_INDICADOR = this.ID_TIPO_INDICADOR;
	            other.CODIGO_TIPO_INDICADOR = this.CODIGO_TIPO_INDICADOR;
	            other.CIE10 = this.CIE10;
	            other.ID_GRUPO_RIESGO = this.ID_GRUPO_RIESGO;
	            other.CODIGO_GRUPO_RIESGO = this.CODIGO_GRUPO_RIESGO;
	            other.ID_EDAD = this.ID_EDAD;
	            other.CODIGO_EDAD = this.CODIGO_EDAD;
	            other.ID_ETNIA = this.ID_ETNIA;
	            other.CODIGO_ETNIA = this.CODIGO_ETNIA;
	            other.ID_SEXO = this.ID_SEXO;
	            other.CODIGO_SEXO = this.CODIGO_SEXO;
	            
	}

	public void copyKeysDataTo(row48Struct other) {

		other.CODIGO_TIPO_INDICADOR = this.CODIGO_TIPO_INDICADOR;
	            	other.CIE10 = this.CIE10;
	            	other.CODIGO_GRUPO_RIESGO = this.CODIGO_GRUPO_RIESGO;
	            	other.CODIGO_EDAD = this.CODIGO_EDAD;
	            	other.CODIGO_ETNIA = this.CODIGO_ETNIA;
	            	other.CODIGO_SEXO = this.CODIGO_SEXO;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.CODIGO_TIPO_INDICADOR = readInteger(dis);
					
						this.CIE10 = readInteger(dis);
					
						this.CODIGO_GRUPO_RIESGO = readInteger(dis);
					
						this.CODIGO_EDAD = readInteger(dis);
					
						this.CODIGO_ETNIA = readInteger(dis);
					
						this.CODIGO_SEXO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.CODIGO_TIPO_INDICADOR = readInteger(dis);
					
						this.CIE10 = readInteger(dis);
					
						this.CODIGO_GRUPO_RIESGO = readInteger(dis);
					
						this.CODIGO_EDAD = readInteger(dis);
					
						this.CODIGO_ETNIA = readInteger(dis);
					
						this.CODIGO_SEXO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO_TIPO_INDICADOR,dos);
					
					// Integer
				
						writeInteger(this.CIE10,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_GRUPO_RIESGO,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_EDAD,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_ETNIA,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_SEXO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO_TIPO_INDICADOR,dos);
					
					// Integer
				
						writeInteger(this.CIE10,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_GRUPO_RIESGO,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_EDAD,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_ETNIA,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_SEXO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.ID_INDICADOR = readInteger(dis,ois);
					
						this.ID_TIPO_INDICADOR = readInteger(dis,ois);
					
						this.ID_GRUPO_RIESGO = readInteger(dis,ois);
					
						this.ID_EDAD = readInteger(dis,ois);
					
						this.ID_ETNIA = readInteger(dis,ois);
					
						this.ID_SEXO = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.ID_INDICADOR = readInteger(dis,objectIn);
					
						this.ID_TIPO_INDICADOR = readInteger(dis,objectIn);
					
						this.ID_GRUPO_RIESGO = readInteger(dis,objectIn);
					
						this.ID_EDAD = readInteger(dis,objectIn);
					
						this.ID_ETNIA = readInteger(dis,objectIn);
					
						this.ID_SEXO = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.ID_INDICADOR, dos, oos);
					
					writeInteger(this.ID_TIPO_INDICADOR, dos, oos);
					
					writeInteger(this.ID_GRUPO_RIESGO, dos, oos);
					
					writeInteger(this.ID_EDAD, dos, oos);
					
					writeInteger(this.ID_ETNIA, dos, oos);
					
					writeInteger(this.ID_SEXO, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.ID_INDICADOR, dos, objectOut);
					
					writeInteger(this.ID_TIPO_INDICADOR, dos, objectOut);
					
					writeInteger(this.ID_GRUPO_RIESGO, dos, objectOut);
					
					writeInteger(this.ID_EDAD, dos, objectOut);
					
					writeInteger(this.ID_ETNIA, dos, objectOut);
					
					writeInteger(this.ID_SEXO, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_INDICADOR="+String.valueOf(ID_INDICADOR));
		sb.append(",ID_TIPO_INDICADOR="+String.valueOf(ID_TIPO_INDICADOR));
		sb.append(",CODIGO_TIPO_INDICADOR="+String.valueOf(CODIGO_TIPO_INDICADOR));
		sb.append(",CIE10="+String.valueOf(CIE10));
		sb.append(",ID_GRUPO_RIESGO="+String.valueOf(ID_GRUPO_RIESGO));
		sb.append(",CODIGO_GRUPO_RIESGO="+String.valueOf(CODIGO_GRUPO_RIESGO));
		sb.append(",ID_EDAD="+String.valueOf(ID_EDAD));
		sb.append(",CODIGO_EDAD="+String.valueOf(CODIGO_EDAD));
		sb.append(",ID_ETNIA="+String.valueOf(ID_ETNIA));
		sb.append(",CODIGO_ETNIA="+String.valueOf(CODIGO_ETNIA));
		sb.append(",ID_SEXO="+String.valueOf(ID_SEXO));
		sb.append(",CODIGO_SEXO="+String.valueOf(CODIGO_SEXO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row48Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CODIGO_TIPO_INDICADOR, other.CODIGO_TIPO_INDICADOR);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CIE10, other.CIE10);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CODIGO_GRUPO_RIESGO, other.CODIGO_GRUPO_RIESGO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CODIGO_EDAD, other.CODIGO_EDAD);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CODIGO_ETNIA, other.CODIGO_ETNIA);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CODIGO_SEXO, other.CODIGO_SEXO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_16Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_16_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row48Struct row48 = new row48Struct();




	
	/**
	 * [tAdvancedHash_row48 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row48", false);
		start_Hash.put("tAdvancedHash_row48", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row48";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row48");
					}
				
		int tos_count_tAdvancedHash_row48 = 0;
		

			   		// connection name:row48
			   		// source node:tHashInput_16 - inputs:(after_tHashInput_15) outputs:(row48,row48) | target node:tAdvancedHash_row48 - inputs:(row48) outputs:()
			   		// linked node: tMap_7 - inputs:(row47,row48) outputs:(REJECT_CONFIG)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row48 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row48Struct> tHash_Lookup_row48 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row48Struct>getLookup(matchingModeEnum_row48);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row48", tHash_Lookup_row48);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row48 begin ] stop
 */



	
	/**
	 * [tHashInput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_16", false);
		start_Hash.put("tHashInput_16", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_16";
	
	
		int tos_count_tHashInput_16 = 0;
		


int nb_line_tHashInput_16 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_16=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row44Struct> tHashFile_tHashInput_16 = mf_tHashInput_16.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_11");
if(tHashFile_tHashInput_16==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row44Struct> iterator_tHashInput_16 = tHashFile_tHashInput_16.iterator();
while (iterator_tHashInput_16.hasNext()) {
    row44Struct next_tHashInput_16 = iterator_tHashInput_16.next();

	row48.ID_INDICADOR = next_tHashInput_16.ID_INDICADOR;
	row48.ID_TIPO_INDICADOR = next_tHashInput_16.ID_TIPO_INDICADOR;
	row48.CODIGO_TIPO_INDICADOR = next_tHashInput_16.CODIGO_TIPO_INDICADOR;
	row48.CIE10 = next_tHashInput_16.CIE10;
	row48.ID_GRUPO_RIESGO = next_tHashInput_16.ID_GRUPO_RIESGO;
	row48.CODIGO_GRUPO_RIESGO = next_tHashInput_16.CODIGO_GRUPO_RIESGO;
	row48.ID_EDAD = next_tHashInput_16.ID_EDAD;
	row48.CODIGO_EDAD = next_tHashInput_16.CODIGO_EDAD;
	row48.ID_ETNIA = next_tHashInput_16.ID_ETNIA;
	row48.CODIGO_ETNIA = next_tHashInput_16.CODIGO_ETNIA;
	row48.ID_SEXO = next_tHashInput_16.ID_SEXO;
	row48.CODIGO_SEXO = next_tHashInput_16.CODIGO_SEXO;

 



/**
 * [tHashInput_16 begin ] stop
 */
	
	/**
	 * [tHashInput_16 main ] start
	 */

	

	
	
	currentComponent="tHashInput_16";
	
	

 


	tos_count_tHashInput_16++;

/**
 * [tHashInput_16 main ] stop
 */
	
	/**
	 * [tHashInput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_16";
	
	

 



/**
 * [tHashInput_16 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row48 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row48";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row48"
						
						);
					}
					


			   
			   

					row48Struct row48_HashRow = new row48Struct();
		   	   	   
				
				row48_HashRow.ID_INDICADOR = row48.ID_INDICADOR;
				
				row48_HashRow.ID_TIPO_INDICADOR = row48.ID_TIPO_INDICADOR;
				
				row48_HashRow.CODIGO_TIPO_INDICADOR = row48.CODIGO_TIPO_INDICADOR;
				
				row48_HashRow.CIE10 = row48.CIE10;
				
				row48_HashRow.ID_GRUPO_RIESGO = row48.ID_GRUPO_RIESGO;
				
				row48_HashRow.CODIGO_GRUPO_RIESGO = row48.CODIGO_GRUPO_RIESGO;
				
				row48_HashRow.ID_EDAD = row48.ID_EDAD;
				
				row48_HashRow.CODIGO_EDAD = row48.CODIGO_EDAD;
				
				row48_HashRow.ID_ETNIA = row48.ID_ETNIA;
				
				row48_HashRow.CODIGO_ETNIA = row48.CODIGO_ETNIA;
				
				row48_HashRow.ID_SEXO = row48.ID_SEXO;
				
				row48_HashRow.CODIGO_SEXO = row48.CODIGO_SEXO;
				
			tHash_Lookup_row48.put(row48_HashRow);
			
            




 


	tos_count_tAdvancedHash_row48++;

/**
 * [tAdvancedHash_row48 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row48 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row48";
	
	

 



/**
 * [tAdvancedHash_row48 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row48 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row48";
	
	

 



/**
 * [tAdvancedHash_row48 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_16";
	
	

 



/**
 * [tHashInput_16 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_16 end ] start
	 */

	

	
	
	currentComponent="tHashInput_16";
	
	
    

		
			nb_line_tHashInput_16++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_11");
	


	globalMap.put("tHashInput_16_NB_LINE", nb_line_tHashInput_16);       

 

ok_Hash.put("tHashInput_16", true);
end_Hash.put("tHashInput_16", System.currentTimeMillis());




/**
 * [tHashInput_16 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row48 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row48";
	
	

tHash_Lookup_row48.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row48");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row48", true);
end_Hash.put("tAdvancedHash_row48", System.currentTimeMillis());




/**
 * [tAdvancedHash_row48 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_16 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_16";
	
	

 



/**
 * [tHashInput_16 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row48 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row48";
	
	

 



/**
 * [tAdvancedHash_row48 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_16_SUBPROCESS_STATE", 1);
	}
	


public static class row7Struct implements routines.system.IPersistableComparableLookupRow<row7Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer ID_INDICADOR;

				public Integer getID_INDICADOR () {
					return this.ID_INDICADOR;
				}

				public Boolean ID_INDICADORIsNullable(){
				    return true;
				}
				public Boolean ID_INDICADORIsKey(){
				    return false;
				}
				public Integer ID_INDICADORLength(){
				    return 0;
				}
				public Integer ID_INDICADORPrecision(){
				    return 0;
				}
				public String ID_INDICADORDefault(){
				
					return null;
				
				}
				public String ID_INDICADORComment(){
				
				    return "";
				
				}
				public String ID_INDICADORPattern(){
				
					return "";
				
				}
				public String ID_INDICADOROriginalDbColumnName(){
				
					return "ID_INDICADOR";
				
				}

				
			    public Integer CODIGO_INDICADOR;

				public Integer getCODIGO_INDICADOR () {
					return this.CODIGO_INDICADOR;
				}

				public Boolean CODIGO_INDICADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_INDICADORIsKey(){
				    return false;
				}
				public Integer CODIGO_INDICADORLength(){
				    return 0;
				}
				public Integer CODIGO_INDICADORPrecision(){
				    return 0;
				}
				public String CODIGO_INDICADORDefault(){
				
					return null;
				
				}
				public String CODIGO_INDICADORComment(){
				
				    return "";
				
				}
				public String CODIGO_INDICADORPattern(){
				
					return "";
				
				}
				public String CODIGO_INDICADOROriginalDbColumnName(){
				
					return "CODIGO_INDICADOR";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CODIGO_INDICADOR == null) ? 0 : this.CODIGO_INDICADOR.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row7Struct other = (row7Struct) obj;
		
						if (this.CODIGO_INDICADOR == null) {
							if (other.CODIGO_INDICADOR != null)
								return false;
						
						} else if (!this.CODIGO_INDICADOR.equals(other.CODIGO_INDICADOR))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row7Struct other) {

		other.ID_INDICADOR = this.ID_INDICADOR;
	            other.CODIGO_INDICADOR = this.CODIGO_INDICADOR;
	            
	}

	public void copyKeysDataTo(row7Struct other) {

		other.CODIGO_INDICADOR = this.CODIGO_INDICADOR;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.CODIGO_INDICADOR = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.CODIGO_INDICADOR = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO_INDICADOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO_INDICADOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.ID_INDICADOR = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.ID_INDICADOR = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.ID_INDICADOR, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.ID_INDICADOR, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_INDICADOR="+String.valueOf(ID_INDICADOR));
		sb.append(",CODIGO_INDICADOR="+String.valueOf(CODIGO_INDICADOR));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CODIGO_INDICADOR, other.CODIGO_INDICADOR);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row7Struct row7 = new row7Struct();




	
	/**
	 * [tAdvancedHash_row7 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row7", false);
		start_Hash.put("tAdvancedHash_row7", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tAdvancedHash_row7 = 0;
		

			   		// connection name:row7
			   		// source node:tHashInput_1 - inputs:(after_tHashInput_8) outputs:(row7,row7) | target node:tAdvancedHash_row7 - inputs:(row7) outputs:()
			   		// linked node: tMap_1 - inputs:(INDICADOR_ACCEPT_FORMAT,row7) outputs:(INDICADOR_REJECT_EXIST)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row7 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row7Struct> tHash_Lookup_row7 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row7Struct>getLookup(matchingModeEnum_row7);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row7", tHash_Lookup_row7);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row7 begin ] stop
 */



	
	/**
	 * [tHashInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_1", false);
		start_Hash.put("tHashInput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_1";
	
	
		int tos_count_tHashInput_1 = 0;
		


int nb_line_tHashInput_1 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row9Struct> tHashFile_tHashInput_1 = mf_tHashInput_1.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_1==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row9Struct> iterator_tHashInput_1 = tHashFile_tHashInput_1.iterator();
while (iterator_tHashInput_1.hasNext()) {
    row9Struct next_tHashInput_1 = iterator_tHashInput_1.next();

	row7.ID_INDICADOR = next_tHashInput_1.ID_INDICADOR;
	row7.CODIGO_INDICADOR = next_tHashInput_1.CODIGO_INDICADOR;

 



/**
 * [tHashInput_1 begin ] stop
 */
	
	/**
	 * [tHashInput_1 main ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 


	tos_count_tHashInput_1++;

/**
 * [tHashInput_1 main ] stop
 */
	
	/**
	 * [tHashInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row7 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					


			   
			   

					row7Struct row7_HashRow = new row7Struct();
		   	   	   
				
				row7_HashRow.ID_INDICADOR = row7.ID_INDICADOR;
				
				row7_HashRow.CODIGO_INDICADOR = row7.CODIGO_INDICADOR;
				
			tHash_Lookup_row7.put(row7_HashRow);
			
            




 


	tos_count_tAdvancedHash_row7++;

/**
 * [tAdvancedHash_row7 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

 



/**
 * [tAdvancedHash_row7 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row7 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

 



/**
 * [tAdvancedHash_row7 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_1 end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	
    

		
			nb_line_tHashInput_1++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_1_NB_LINE", nb_line_tHashInput_1);       

 

ok_Hash.put("tHashInput_1", true);
end_Hash.put("tHashInput_1", System.currentTimeMillis());




/**
 * [tHashInput_1 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row7 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

tHash_Lookup_row7.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row7", true);
end_Hash.put("tAdvancedHash_row7", System.currentTimeMillis());




/**
 * [tAdvancedHash_row7 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row7 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row7";
	
	

 



/**
 * [tAdvancedHash_row7 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row54Struct implements routines.system.IPersistableComparableLookupRow<row54Struct> {
    final static byte[] commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
    static byte[] commonByteArray_VSP_VIGILANCIA_ETL_vigilancia = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public Integer ID_INDICADOR;

				public Integer getID_INDICADOR () {
					return this.ID_INDICADOR;
				}

				public Boolean ID_INDICADORIsNullable(){
				    return true;
				}
				public Boolean ID_INDICADORIsKey(){
				    return false;
				}
				public Integer ID_INDICADORLength(){
				    return 0;
				}
				public Integer ID_INDICADORPrecision(){
				    return 0;
				}
				public String ID_INDICADORDefault(){
				
					return null;
				
				}
				public String ID_INDICADORComment(){
				
				    return "";
				
				}
				public String ID_INDICADORPattern(){
				
					return "";
				
				}
				public String ID_INDICADOROriginalDbColumnName(){
				
					return "ID_INDICADOR";
				
				}

				
			    public Integer ID_TIPO_INDICADOR;

				public Integer getID_TIPO_INDICADOR () {
					return this.ID_TIPO_INDICADOR;
				}

				public Boolean ID_TIPO_INDICADORIsNullable(){
				    return true;
				}
				public Boolean ID_TIPO_INDICADORIsKey(){
				    return false;
				}
				public Integer ID_TIPO_INDICADORLength(){
				    return 0;
				}
				public Integer ID_TIPO_INDICADORPrecision(){
				    return 0;
				}
				public String ID_TIPO_INDICADORDefault(){
				
					return null;
				
				}
				public String ID_TIPO_INDICADORComment(){
				
				    return "";
				
				}
				public String ID_TIPO_INDICADORPattern(){
				
					return "";
				
				}
				public String ID_TIPO_INDICADOROriginalDbColumnName(){
				
					return "ID_TIPO_INDICADOR";
				
				}

				
			    public Integer CODIGO_TIPO_INDICADOR;

				public Integer getCODIGO_TIPO_INDICADOR () {
					return this.CODIGO_TIPO_INDICADOR;
				}

				public Boolean CODIGO_TIPO_INDICADORIsNullable(){
				    return true;
				}
				public Boolean CODIGO_TIPO_INDICADORIsKey(){
				    return false;
				}
				public Integer CODIGO_TIPO_INDICADORLength(){
				    return 0;
				}
				public Integer CODIGO_TIPO_INDICADORPrecision(){
				    return 0;
				}
				public String CODIGO_TIPO_INDICADORDefault(){
				
					return null;
				
				}
				public String CODIGO_TIPO_INDICADORComment(){
				
				    return "";
				
				}
				public String CODIGO_TIPO_INDICADORPattern(){
				
					return "";
				
				}
				public String CODIGO_TIPO_INDICADOROriginalDbColumnName(){
				
					return "CODIGO_TIPO_INDICADOR";
				
				}

				
			    public Integer CIE10;

				public Integer getCIE10 () {
					return this.CIE10;
				}

				public Boolean CIE10IsNullable(){
				    return true;
				}
				public Boolean CIE10IsKey(){
				    return false;
				}
				public Integer CIE10Length(){
				    return 0;
				}
				public Integer CIE10Precision(){
				    return 0;
				}
				public String CIE10Default(){
				
					return null;
				
				}
				public String CIE10Comment(){
				
				    return "";
				
				}
				public String CIE10Pattern(){
				
					return "";
				
				}
				public String CIE10OriginalDbColumnName(){
				
					return "CIE10";
				
				}

				
			    public Integer ID_GRUPO_RIESGO;

				public Integer getID_GRUPO_RIESGO () {
					return this.ID_GRUPO_RIESGO;
				}

				public Boolean ID_GRUPO_RIESGOIsNullable(){
				    return true;
				}
				public Boolean ID_GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer ID_GRUPO_RIESGOLength(){
				    return 0;
				}
				public Integer ID_GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String ID_GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String ID_GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String ID_GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String ID_GRUPO_RIESGOOriginalDbColumnName(){
				
					return "ID_GRUPO_RIESGO";
				
				}

				
			    public Integer CODIGO_GRUPO_RIESGO;

				public Integer getCODIGO_GRUPO_RIESGO () {
					return this.CODIGO_GRUPO_RIESGO;
				}

				public Boolean CODIGO_GRUPO_RIESGOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_GRUPO_RIESGOIsKey(){
				    return false;
				}
				public Integer CODIGO_GRUPO_RIESGOLength(){
				    return 0;
				}
				public Integer CODIGO_GRUPO_RIESGOPrecision(){
				    return 0;
				}
				public String CODIGO_GRUPO_RIESGODefault(){
				
					return null;
				
				}
				public String CODIGO_GRUPO_RIESGOComment(){
				
				    return "";
				
				}
				public String CODIGO_GRUPO_RIESGOPattern(){
				
					return "";
				
				}
				public String CODIGO_GRUPO_RIESGOOriginalDbColumnName(){
				
					return "CODIGO_GRUPO_RIESGO";
				
				}

				
			    public Integer ID_EDAD;

				public Integer getID_EDAD () {
					return this.ID_EDAD;
				}

				public Boolean ID_EDADIsNullable(){
				    return true;
				}
				public Boolean ID_EDADIsKey(){
				    return false;
				}
				public Integer ID_EDADLength(){
				    return 0;
				}
				public Integer ID_EDADPrecision(){
				    return 0;
				}
				public String ID_EDADDefault(){
				
					return null;
				
				}
				public String ID_EDADComment(){
				
				    return "";
				
				}
				public String ID_EDADPattern(){
				
					return "";
				
				}
				public String ID_EDADOriginalDbColumnName(){
				
					return "ID_EDAD";
				
				}

				
			    public Integer CODIGO_EDAD;

				public Integer getCODIGO_EDAD () {
					return this.CODIGO_EDAD;
				}

				public Boolean CODIGO_EDADIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EDADIsKey(){
				    return false;
				}
				public Integer CODIGO_EDADLength(){
				    return 0;
				}
				public Integer CODIGO_EDADPrecision(){
				    return 0;
				}
				public String CODIGO_EDADDefault(){
				
					return null;
				
				}
				public String CODIGO_EDADComment(){
				
				    return "";
				
				}
				public String CODIGO_EDADPattern(){
				
					return "";
				
				}
				public String CODIGO_EDADOriginalDbColumnName(){
				
					return "CODIGO_EDAD";
				
				}

				
			    public Integer ID_ETNIA;

				public Integer getID_ETNIA () {
					return this.ID_ETNIA;
				}

				public Boolean ID_ETNIAIsNullable(){
				    return true;
				}
				public Boolean ID_ETNIAIsKey(){
				    return false;
				}
				public Integer ID_ETNIALength(){
				    return 0;
				}
				public Integer ID_ETNIAPrecision(){
				    return 0;
				}
				public String ID_ETNIADefault(){
				
					return null;
				
				}
				public String ID_ETNIAComment(){
				
				    return "";
				
				}
				public String ID_ETNIAPattern(){
				
					return "";
				
				}
				public String ID_ETNIAOriginalDbColumnName(){
				
					return "ID_ETNIA";
				
				}

				
			    public Integer CODIGO_ETNIA;

				public Integer getCODIGO_ETNIA () {
					return this.CODIGO_ETNIA;
				}

				public Boolean CODIGO_ETNIAIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ETNIAIsKey(){
				    return false;
				}
				public Integer CODIGO_ETNIALength(){
				    return 0;
				}
				public Integer CODIGO_ETNIAPrecision(){
				    return 0;
				}
				public String CODIGO_ETNIADefault(){
				
					return null;
				
				}
				public String CODIGO_ETNIAComment(){
				
				    return "";
				
				}
				public String CODIGO_ETNIAPattern(){
				
					return "";
				
				}
				public String CODIGO_ETNIAOriginalDbColumnName(){
				
					return "CODIGO_ETNIA";
				
				}

				
			    public Integer ID_SEXO;

				public Integer getID_SEXO () {
					return this.ID_SEXO;
				}

				public Boolean ID_SEXOIsNullable(){
				    return true;
				}
				public Boolean ID_SEXOIsKey(){
				    return false;
				}
				public Integer ID_SEXOLength(){
				    return 0;
				}
				public Integer ID_SEXOPrecision(){
				    return 0;
				}
				public String ID_SEXODefault(){
				
					return null;
				
				}
				public String ID_SEXOComment(){
				
				    return "";
				
				}
				public String ID_SEXOPattern(){
				
					return "";
				
				}
				public String ID_SEXOOriginalDbColumnName(){
				
					return "ID_SEXO";
				
				}

				
			    public Integer CODIGO_SEXO;

				public Integer getCODIGO_SEXO () {
					return this.CODIGO_SEXO;
				}

				public Boolean CODIGO_SEXOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_SEXOIsKey(){
				    return false;
				}
				public Integer CODIGO_SEXOLength(){
				    return 0;
				}
				public Integer CODIGO_SEXOPrecision(){
				    return 0;
				}
				public String CODIGO_SEXODefault(){
				
					return null;
				
				}
				public String CODIGO_SEXOComment(){
				
				    return "";
				
				}
				public String CODIGO_SEXOPattern(){
				
					return "";
				
				}
				public String CODIGO_SEXOOriginalDbColumnName(){
				
					return "CODIGO_SEXO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CODIGO_TIPO_INDICADOR == null) ? 0 : this.CODIGO_TIPO_INDICADOR.hashCode());
					
						result = prime * result + ((this.CIE10 == null) ? 0 : this.CIE10.hashCode());
					
						result = prime * result + ((this.CODIGO_GRUPO_RIESGO == null) ? 0 : this.CODIGO_GRUPO_RIESGO.hashCode());
					
						result = prime * result + ((this.CODIGO_EDAD == null) ? 0 : this.CODIGO_EDAD.hashCode());
					
						result = prime * result + ((this.CODIGO_ETNIA == null) ? 0 : this.CODIGO_ETNIA.hashCode());
					
						result = prime * result + ((this.CODIGO_SEXO == null) ? 0 : this.CODIGO_SEXO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row54Struct other = (row54Struct) obj;
		
						if (this.CODIGO_TIPO_INDICADOR == null) {
							if (other.CODIGO_TIPO_INDICADOR != null)
								return false;
						
						} else if (!this.CODIGO_TIPO_INDICADOR.equals(other.CODIGO_TIPO_INDICADOR))
						
							return false;
					
						if (this.CIE10 == null) {
							if (other.CIE10 != null)
								return false;
						
						} else if (!this.CIE10.equals(other.CIE10))
						
							return false;
					
						if (this.CODIGO_GRUPO_RIESGO == null) {
							if (other.CODIGO_GRUPO_RIESGO != null)
								return false;
						
						} else if (!this.CODIGO_GRUPO_RIESGO.equals(other.CODIGO_GRUPO_RIESGO))
						
							return false;
					
						if (this.CODIGO_EDAD == null) {
							if (other.CODIGO_EDAD != null)
								return false;
						
						} else if (!this.CODIGO_EDAD.equals(other.CODIGO_EDAD))
						
							return false;
					
						if (this.CODIGO_ETNIA == null) {
							if (other.CODIGO_ETNIA != null)
								return false;
						
						} else if (!this.CODIGO_ETNIA.equals(other.CODIGO_ETNIA))
						
							return false;
					
						if (this.CODIGO_SEXO == null) {
							if (other.CODIGO_SEXO != null)
								return false;
						
						} else if (!this.CODIGO_SEXO.equals(other.CODIGO_SEXO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row54Struct other) {

		other.ID_INDICADOR = this.ID_INDICADOR;
	            other.ID_TIPO_INDICADOR = this.ID_TIPO_INDICADOR;
	            other.CODIGO_TIPO_INDICADOR = this.CODIGO_TIPO_INDICADOR;
	            other.CIE10 = this.CIE10;
	            other.ID_GRUPO_RIESGO = this.ID_GRUPO_RIESGO;
	            other.CODIGO_GRUPO_RIESGO = this.CODIGO_GRUPO_RIESGO;
	            other.ID_EDAD = this.ID_EDAD;
	            other.CODIGO_EDAD = this.CODIGO_EDAD;
	            other.ID_ETNIA = this.ID_ETNIA;
	            other.CODIGO_ETNIA = this.CODIGO_ETNIA;
	            other.ID_SEXO = this.ID_SEXO;
	            other.CODIGO_SEXO = this.CODIGO_SEXO;
	            
	}

	public void copyKeysDataTo(row54Struct other) {

		other.CODIGO_TIPO_INDICADOR = this.CODIGO_TIPO_INDICADOR;
	            	other.CIE10 = this.CIE10;
	            	other.CODIGO_GRUPO_RIESGO = this.CODIGO_GRUPO_RIESGO;
	            	other.CODIGO_EDAD = this.CODIGO_EDAD;
	            	other.CODIGO_ETNIA = this.CODIGO_ETNIA;
	            	other.CODIGO_SEXO = this.CODIGO_SEXO;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.CODIGO_TIPO_INDICADOR = readInteger(dis);
					
						this.CIE10 = readInteger(dis);
					
						this.CODIGO_GRUPO_RIESGO = readInteger(dis);
					
						this.CODIGO_EDAD = readInteger(dis);
					
						this.CODIGO_ETNIA = readInteger(dis);
					
						this.CODIGO_SEXO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_VSP_VIGILANCIA_ETL_vigilancia) {

        	try {

        		int length = 0;
		
						this.CODIGO_TIPO_INDICADOR = readInteger(dis);
					
						this.CIE10 = readInteger(dis);
					
						this.CODIGO_GRUPO_RIESGO = readInteger(dis);
					
						this.CODIGO_EDAD = readInteger(dis);
					
						this.CODIGO_ETNIA = readInteger(dis);
					
						this.CODIGO_SEXO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO_TIPO_INDICADOR,dos);
					
					// Integer
				
						writeInteger(this.CIE10,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_GRUPO_RIESGO,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_EDAD,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_ETNIA,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_SEXO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.CODIGO_TIPO_INDICADOR,dos);
					
					// Integer
				
						writeInteger(this.CIE10,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_GRUPO_RIESGO,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_EDAD,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_ETNIA,dos);
					
					// Integer
				
						writeInteger(this.CODIGO_SEXO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.ID_INDICADOR = readInteger(dis,ois);
					
						this.ID_TIPO_INDICADOR = readInteger(dis,ois);
					
						this.ID_GRUPO_RIESGO = readInteger(dis,ois);
					
						this.ID_EDAD = readInteger(dis,ois);
					
						this.ID_ETNIA = readInteger(dis,ois);
					
						this.ID_SEXO = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.ID_INDICADOR = readInteger(dis,objectIn);
					
						this.ID_TIPO_INDICADOR = readInteger(dis,objectIn);
					
						this.ID_GRUPO_RIESGO = readInteger(dis,objectIn);
					
						this.ID_EDAD = readInteger(dis,objectIn);
					
						this.ID_ETNIA = readInteger(dis,objectIn);
					
						this.ID_SEXO = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.ID_INDICADOR, dos, oos);
					
					writeInteger(this.ID_TIPO_INDICADOR, dos, oos);
					
					writeInteger(this.ID_GRUPO_RIESGO, dos, oos);
					
					writeInteger(this.ID_EDAD, dos, oos);
					
					writeInteger(this.ID_ETNIA, dos, oos);
					
					writeInteger(this.ID_SEXO, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.ID_INDICADOR, dos, objectOut);
					
					writeInteger(this.ID_TIPO_INDICADOR, dos, objectOut);
					
					writeInteger(this.ID_GRUPO_RIESGO, dos, objectOut);
					
					writeInteger(this.ID_EDAD, dos, objectOut);
					
					writeInteger(this.ID_ETNIA, dos, objectOut);
					
					writeInteger(this.ID_SEXO, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_INDICADOR="+String.valueOf(ID_INDICADOR));
		sb.append(",ID_TIPO_INDICADOR="+String.valueOf(ID_TIPO_INDICADOR));
		sb.append(",CODIGO_TIPO_INDICADOR="+String.valueOf(CODIGO_TIPO_INDICADOR));
		sb.append(",CIE10="+String.valueOf(CIE10));
		sb.append(",ID_GRUPO_RIESGO="+String.valueOf(ID_GRUPO_RIESGO));
		sb.append(",CODIGO_GRUPO_RIESGO="+String.valueOf(CODIGO_GRUPO_RIESGO));
		sb.append(",ID_EDAD="+String.valueOf(ID_EDAD));
		sb.append(",CODIGO_EDAD="+String.valueOf(CODIGO_EDAD));
		sb.append(",ID_ETNIA="+String.valueOf(ID_ETNIA));
		sb.append(",CODIGO_ETNIA="+String.valueOf(CODIGO_ETNIA));
		sb.append(",ID_SEXO="+String.valueOf(ID_SEXO));
		sb.append(",CODIGO_SEXO="+String.valueOf(CODIGO_SEXO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row54Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CODIGO_TIPO_INDICADOR, other.CODIGO_TIPO_INDICADOR);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CIE10, other.CIE10);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CODIGO_GRUPO_RIESGO, other.CODIGO_GRUPO_RIESGO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CODIGO_EDAD, other.CODIGO_EDAD);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CODIGO_ETNIA, other.CODIGO_ETNIA);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CODIGO_SEXO, other.CODIGO_SEXO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_20Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_20_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row54Struct row54 = new row54Struct();




	
	/**
	 * [tAdvancedHash_row54 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row54", false);
		start_Hash.put("tAdvancedHash_row54", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row54";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row54");
					}
				
		int tos_count_tAdvancedHash_row54 = 0;
		

			   		// connection name:row54
			   		// source node:tHashInput_20 - inputs:(after_tHashInput_19) outputs:(row54,row54) | target node:tAdvancedHash_row54 - inputs:(row54) outputs:()
			   		// linked node: tMap_9 - inputs:(row53,row54) outputs:(VSP_DPRIORIZACION_OUT)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row54 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row54Struct> tHash_Lookup_row54 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row54Struct>getLookup(matchingModeEnum_row54);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row54", tHash_Lookup_row54);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row54 begin ] stop
 */



	
	/**
	 * [tHashInput_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_20", false);
		start_Hash.put("tHashInput_20", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_20";
	
	
		int tos_count_tHashInput_20 = 0;
		


int nb_line_tHashInput_20 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_20=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row44Struct> tHashFile_tHashInput_20 = mf_tHashInput_20.getAdvancedMemoryHashFile("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_11");
if(tHashFile_tHashInput_20==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row44Struct> iterator_tHashInput_20 = tHashFile_tHashInput_20.iterator();
while (iterator_tHashInput_20.hasNext()) {
    row44Struct next_tHashInput_20 = iterator_tHashInput_20.next();

	row54.ID_INDICADOR = next_tHashInput_20.ID_INDICADOR;
	row54.ID_TIPO_INDICADOR = next_tHashInput_20.ID_TIPO_INDICADOR;
	row54.CODIGO_TIPO_INDICADOR = next_tHashInput_20.CODIGO_TIPO_INDICADOR;
	row54.CIE10 = next_tHashInput_20.CIE10;
	row54.ID_GRUPO_RIESGO = next_tHashInput_20.ID_GRUPO_RIESGO;
	row54.CODIGO_GRUPO_RIESGO = next_tHashInput_20.CODIGO_GRUPO_RIESGO;
	row54.ID_EDAD = next_tHashInput_20.ID_EDAD;
	row54.CODIGO_EDAD = next_tHashInput_20.CODIGO_EDAD;
	row54.ID_ETNIA = next_tHashInput_20.ID_ETNIA;
	row54.CODIGO_ETNIA = next_tHashInput_20.CODIGO_ETNIA;
	row54.ID_SEXO = next_tHashInput_20.ID_SEXO;
	row54.CODIGO_SEXO = next_tHashInput_20.CODIGO_SEXO;

 



/**
 * [tHashInput_20 begin ] stop
 */
	
	/**
	 * [tHashInput_20 main ] start
	 */

	

	
	
	currentComponent="tHashInput_20";
	
	

 


	tos_count_tHashInput_20++;

/**
 * [tHashInput_20 main ] stop
 */
	
	/**
	 * [tHashInput_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_20";
	
	

 



/**
 * [tHashInput_20 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row54 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row54"
						
						);
					}
					


			   
			   

					row54Struct row54_HashRow = new row54Struct();
		   	   	   
				
				row54_HashRow.ID_INDICADOR = row54.ID_INDICADOR;
				
				row54_HashRow.ID_TIPO_INDICADOR = row54.ID_TIPO_INDICADOR;
				
				row54_HashRow.CODIGO_TIPO_INDICADOR = row54.CODIGO_TIPO_INDICADOR;
				
				row54_HashRow.CIE10 = row54.CIE10;
				
				row54_HashRow.ID_GRUPO_RIESGO = row54.ID_GRUPO_RIESGO;
				
				row54_HashRow.CODIGO_GRUPO_RIESGO = row54.CODIGO_GRUPO_RIESGO;
				
				row54_HashRow.ID_EDAD = row54.ID_EDAD;
				
				row54_HashRow.CODIGO_EDAD = row54.CODIGO_EDAD;
				
				row54_HashRow.ID_ETNIA = row54.ID_ETNIA;
				
				row54_HashRow.CODIGO_ETNIA = row54.CODIGO_ETNIA;
				
				row54_HashRow.ID_SEXO = row54.ID_SEXO;
				
				row54_HashRow.CODIGO_SEXO = row54.CODIGO_SEXO;
				
			tHash_Lookup_row54.put(row54_HashRow);
			
            




 


	tos_count_tAdvancedHash_row54++;

/**
 * [tAdvancedHash_row54 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row54 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";
	
	

 



/**
 * [tAdvancedHash_row54 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row54 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";
	
	

 



/**
 * [tAdvancedHash_row54 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_20";
	
	

 



/**
 * [tHashInput_20 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_20 end ] start
	 */

	

	
	
	currentComponent="tHashInput_20";
	
	
    

		
			nb_line_tHashInput_20++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_ETL_vigilancia_" + pid +"_tHashOutput_11");
	


	globalMap.put("tHashInput_20_NB_LINE", nb_line_tHashInput_20);       

 

ok_Hash.put("tHashInput_20", true);
end_Hash.put("tHashInput_20", System.currentTimeMillis());




/**
 * [tHashInput_20 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row54 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";
	
	

tHash_Lookup_row54.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row54");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row54", true);
end_Hash.put("tAdvancedHash_row54", System.currentTimeMillis());




/**
 * [tAdvancedHash_row54 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_20 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_20";
	
	

 



/**
 * [tHashInput_20 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row54 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";
	
	

 



/**
 * [tAdvancedHash_row54 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_20_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };

    private SyncInt runningThreadCount =new SyncInt();

    private class SyncInt
    {
        private int count = 0;
        public synchronized void add(int i)
        {
            count +=i;
        }

        public synchronized int getCount()
        {
            return count;
        }
    }

    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final ETL_vigilancia ETL_vigilanciaClass = new ETL_vigilancia();

        int exitCode = ETL_vigilanciaClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = ETL_vigilancia.class.getClassLoader().getResourceAsStream("vsp_vigilancia/etl_vigilancia_1_0/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = ETL_vigilancia.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }
            
            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("CIE10", "id_String");
                        if(context.getStringValue("CIE10") == null) {
                            context.CIE10 = null;
                        } else {
                            context.CIE10=(String) context.getProperty("CIE10");
                        }
                        context.setContextType("COD_DIVIPOLA", "id_String");
                        if(context.getStringValue("COD_DIVIPOLA") == null) {
                            context.COD_DIVIPOLA = null;
                        } else {
                            context.COD_DIVIPOLA=(String) context.getProperty("COD_DIVIPOLA");
                        }
                        context.setContextType("EDAD", "id_Integer");
                        if(context.getStringValue("EDAD") == null) {
                            context.EDAD = null;
                        } else {
                            try{
                                context.EDAD=routines.system.ParserUtils.parseTo_Integer (context.getProperty("EDAD"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "EDAD", e.getMessage()));
                                context.EDAD=null;
                            }
                        }
                        context.setContextType("ETNIA", "id_Integer");
                        if(context.getStringValue("ETNIA") == null) {
                            context.ETNIA = null;
                        } else {
                            try{
                                context.ETNIA=routines.system.ParserUtils.parseTo_Integer (context.getProperty("ETNIA"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "ETNIA", e.getMessage()));
                                context.ETNIA=null;
                            }
                        }
                        context.setContextType("GRUPO_RIESGO", "id_Integer");
                        if(context.getStringValue("GRUPO_RIESGO") == null) {
                            context.GRUPO_RIESGO = null;
                        } else {
                            try{
                                context.GRUPO_RIESGO=routines.system.ParserUtils.parseTo_Integer (context.getProperty("GRUPO_RIESGO"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "GRUPO_RIESGO", e.getMessage()));
                                context.GRUPO_RIESGO=null;
                            }
                        }
                        context.setContextType("INDICADOR", "id_Integer");
                        if(context.getStringValue("INDICADOR") == null) {
                            context.INDICADOR = null;
                        } else {
                            try{
                                context.INDICADOR=routines.system.ParserUtils.parseTo_Integer (context.getProperty("INDICADOR"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "INDICADOR", e.getMessage()));
                                context.INDICADOR=null;
                            }
                        }
                        context.setContextType("PRIORIDAD", "id_Integer");
                        if(context.getStringValue("PRIORIDAD") == null) {
                            context.PRIORIDAD = null;
                        } else {
                            try{
                                context.PRIORIDAD=routines.system.ParserUtils.parseTo_Integer (context.getProperty("PRIORIDAD"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "PRIORIDAD", e.getMessage()));
                                context.PRIORIDAD=null;
                            }
                        }
                        context.setContextType("SEXO", "id_Integer");
                        if(context.getStringValue("SEXO") == null) {
                            context.SEXO = null;
                        } else {
                            try{
                                context.SEXO=routines.system.ParserUtils.parseTo_Integer (context.getProperty("SEXO"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "SEXO", e.getMessage()));
                                context.SEXO=null;
                            }
                        }
                        context.setContextType("CIE10_VAL", "id_String");
                        if(context.getStringValue("CIE10_VAL") == null) {
                            context.CIE10_VAL = null;
                        } else {
                            context.CIE10_VAL=(String) context.getProperty("CIE10_VAL");
                        }
                        context.setContextType("COD_DIVIPOLA_VAL", "id_String");
                        if(context.getStringValue("COD_DIVIPOLA_VAL") == null) {
                            context.COD_DIVIPOLA_VAL = null;
                        } else {
                            context.COD_DIVIPOLA_VAL=(String) context.getProperty("COD_DIVIPOLA_VAL");
                        }
                        context.setContextType("EDAD_VAL", "id_Integer");
                        if(context.getStringValue("EDAD_VAL") == null) {
                            context.EDAD_VAL = null;
                        } else {
                            try{
                                context.EDAD_VAL=routines.system.ParserUtils.parseTo_Integer (context.getProperty("EDAD_VAL"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "EDAD_VAL", e.getMessage()));
                                context.EDAD_VAL=null;
                            }
                        }
                        context.setContextType("ERROR_VAL", "id_String");
                        if(context.getStringValue("ERROR_VAL") == null) {
                            context.ERROR_VAL = null;
                        } else {
                            context.ERROR_VAL=(String) context.getProperty("ERROR_VAL");
                        }
                        context.setContextType("ETNIA_VAL", "id_Integer");
                        if(context.getStringValue("ETNIA_VAL") == null) {
                            context.ETNIA_VAL = null;
                        } else {
                            try{
                                context.ETNIA_VAL=routines.system.ParserUtils.parseTo_Integer (context.getProperty("ETNIA_VAL"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "ETNIA_VAL", e.getMessage()));
                                context.ETNIA_VAL=null;
                            }
                        }
                        context.setContextType("GRUPO_RIESGO_VAL", "id_Integer");
                        if(context.getStringValue("GRUPO_RIESGO_VAL") == null) {
                            context.GRUPO_RIESGO_VAL = null;
                        } else {
                            try{
                                context.GRUPO_RIESGO_VAL=routines.system.ParserUtils.parseTo_Integer (context.getProperty("GRUPO_RIESGO_VAL"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "GRUPO_RIESGO_VAL", e.getMessage()));
                                context.GRUPO_RIESGO_VAL=null;
                            }
                        }
                        context.setContextType("INDICADOR_VAL", "id_Integer");
                        if(context.getStringValue("INDICADOR_VAL") == null) {
                            context.INDICADOR_VAL = null;
                        } else {
                            try{
                                context.INDICADOR_VAL=routines.system.ParserUtils.parseTo_Integer (context.getProperty("INDICADOR_VAL"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "INDICADOR_VAL", e.getMessage()));
                                context.INDICADOR_VAL=null;
                            }
                        }
                        context.setContextType("PRIORIDAD_VAL", "id_Integer");
                        if(context.getStringValue("PRIORIDAD_VAL") == null) {
                            context.PRIORIDAD_VAL = null;
                        } else {
                            try{
                                context.PRIORIDAD_VAL=routines.system.ParserUtils.parseTo_Integer (context.getProperty("PRIORIDAD_VAL"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "PRIORIDAD_VAL", e.getMessage()));
                                context.PRIORIDAD_VAL=null;
                            }
                        }
                        context.setContextType("SEXO_VAL", "id_Integer");
                        if(context.getStringValue("SEXO_VAL") == null) {
                            context.SEXO_VAL = null;
                        } else {
                            try{
                                context.SEXO_VAL=routines.system.ParserUtils.parseTo_Integer (context.getProperty("SEXO_VAL"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "SEXO_VAL", e.getMessage()));
                                context.SEXO_VAL=null;
                            }
                        }
                        context.setContextType("PriorizacionAnio", "id_String");
                        if(context.getStringValue("PriorizacionAnio") == null) {
                            context.PriorizacionAnio = null;
                        } else {
                            context.PriorizacionAnio=(String) context.getProperty("PriorizacionAnio");
                        }
                        context.setContextType("PriorizacionContenido", "id_Object");
                        if(context.getStringValue("PriorizacionContenido") == null) {
                            context.PriorizacionContenido = null;
                        } else {
                            context.PriorizacionContenido=(Object) context.getProperty("PriorizacionContenido");
                        }
                        context.setContextType("PriorizacionId", "id_Integer");
                        if(context.getStringValue("PriorizacionId") == null) {
                            context.PriorizacionId = null;
                        } else {
                            try{
                                context.PriorizacionId=routines.system.ParserUtils.parseTo_Integer (context.getProperty("PriorizacionId"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "PriorizacionId", e.getMessage()));
                                context.PriorizacionId=null;
                            }
                        }
                        context.setContextType("PriorizacionResultadoId", "id_Integer");
                        if(context.getStringValue("PriorizacionResultadoId") == null) {
                            context.PriorizacionResultadoId = null;
                        } else {
                            try{
                                context.PriorizacionResultadoId=routines.system.ParserUtils.parseTo_Integer (context.getProperty("PriorizacionResultadoId"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "PriorizacionResultadoId", e.getMessage()));
                                context.PriorizacionResultadoId=null;
                            }
                        }
                        context.setContextType("PriorizacionTipoContenido", "id_String");
                        if(context.getStringValue("PriorizacionTipoContenido") == null) {
                            context.PriorizacionTipoContenido = null;
                        } else {
                            context.PriorizacionTipoContenido=(String) context.getProperty("PriorizacionTipoContenido");
                        }
                        context.setContextType("PriorizacionUsuario", "id_String");
                        if(context.getStringValue("PriorizacionUsuario") == null) {
                            context.PriorizacionUsuario = null;
                        } else {
                            context.PriorizacionUsuario=(String) context.getProperty("PriorizacionUsuario");
                        }
                        context.setContextType("ConfigFile", "id_String");
                        if(context.getStringValue("ConfigFile") == null) {
                            context.ConfigFile = null;
                        } else {
                            context.ConfigFile=(String) context.getProperty("ConfigFile");
                        }
                        context.setContextType("archivoSalida", "id_String");
                        if(context.getStringValue("archivoSalida") == null) {
                            context.archivoSalida = null;
                        } else {
                            context.archivoSalida=(String) context.getProperty("archivoSalida");
                        }
                        context.setContextType("fileSystem_Area", "id_String");
                        if(context.getStringValue("fileSystem_Area") == null) {
                            context.fileSystem_Area = null;
                        } else {
                            context.fileSystem_Area=(String) context.getProperty("fileSystem_Area");
                        }
                        context.setContextType("fileSystem_Path", "id_String");
                        if(context.getStringValue("fileSystem_Path") == null) {
                            context.fileSystem_Path = null;
                        } else {
                            context.fileSystem_Path=(String) context.getProperty("fileSystem_Path");
                        }
                        context.setContextType("oracle_AdditionalParams", "id_String");
                        if(context.getStringValue("oracle_AdditionalParams") == null) {
                            context.oracle_AdditionalParams = null;
                        } else {
                            context.oracle_AdditionalParams=(String) context.getProperty("oracle_AdditionalParams");
                        }
                        context.setContextType("oracle_Host", "id_String");
                        if(context.getStringValue("oracle_Host") == null) {
                            context.oracle_Host = null;
                        } else {
                            context.oracle_Host=(String) context.getProperty("oracle_Host");
                        }
                        context.setContextType("oracle_Password", "id_String");
                        if(context.getStringValue("oracle_Password") == null) {
                            context.oracle_Password = null;
                        } else {
                            context.oracle_Password=(String) context.getProperty("oracle_Password");
                        }
                        context.setContextType("oracle_Port", "id_String");
                        if(context.getStringValue("oracle_Port") == null) {
                            context.oracle_Port = null;
                        } else {
                            context.oracle_Port=(String) context.getProperty("oracle_Port");
                        }
                        context.setContextType("oracle_Schema", "id_String");
                        if(context.getStringValue("oracle_Schema") == null) {
                            context.oracle_Schema = null;
                        } else {
                            context.oracle_Schema=(String) context.getProperty("oracle_Schema");
                        }
                        context.setContextType("oracle_ServiceName", "id_String");
                        if(context.getStringValue("oracle_ServiceName") == null) {
                            context.oracle_ServiceName = null;
                        } else {
                            context.oracle_ServiceName=(String) context.getProperty("oracle_ServiceName");
                        }
                        context.setContextType("oracle_User", "id_String");
                        if(context.getStringValue("oracle_User") == null) {
                            context.oracle_User = null;
                        } else {
                            context.oracle_User=(String) context.getProperty("oracle_User");
                        }
                        context.setContextType("ErrorCie10Exist", "id_String");
                        if(context.getStringValue("ErrorCie10Exist") == null) {
                            context.ErrorCie10Exist = null;
                        } else {
                            context.ErrorCie10Exist=(String) context.getProperty("ErrorCie10Exist");
                        }
                        context.setContextType("ErrorCie10Formato", "id_String");
                        if(context.getStringValue("ErrorCie10Formato") == null) {
                            context.ErrorCie10Formato = null;
                        } else {
                            context.ErrorCie10Formato=(String) context.getProperty("ErrorCie10Formato");
                        }
                        context.setContextType("ErrorCie10Nulo", "id_String");
                        if(context.getStringValue("ErrorCie10Nulo") == null) {
                            context.ErrorCie10Nulo = null;
                        } else {
                            context.ErrorCie10Nulo=(String) context.getProperty("ErrorCie10Nulo");
                        }
                        context.setContextType("ErrorCodDivipola", "id_String");
                        if(context.getStringValue("ErrorCodDivipola") == null) {
                            context.ErrorCodDivipola = null;
                        } else {
                            context.ErrorCodDivipola=(String) context.getProperty("ErrorCodDivipola");
                        }
                        context.setContextType("ErrorConfiguracionExistente", "id_String");
                        if(context.getStringValue("ErrorConfiguracionExistente") == null) {
                            context.ErrorConfiguracionExistente = null;
                        } else {
                            context.ErrorConfiguracionExistente=(String) context.getProperty("ErrorConfiguracionExistente");
                        }
                        context.setContextType("ErrorConteoDivipola", "id_String");
                        if(context.getStringValue("ErrorConteoDivipola") == null) {
                            context.ErrorConteoDivipola = null;
                        } else {
                            context.ErrorConteoDivipola=(String) context.getProperty("ErrorConteoDivipola");
                        }
                        context.setContextType("ErrorConteoIndicador", "id_String");
                        if(context.getStringValue("ErrorConteoIndicador") == null) {
                            context.ErrorConteoIndicador = null;
                        } else {
                            context.ErrorConteoIndicador=(String) context.getProperty("ErrorConteoIndicador");
                        }
                        context.setContextType("ErrorConteoPrioridadDivipola", "id_String");
                        if(context.getStringValue("ErrorConteoPrioridadDivipola") == null) {
                            context.ErrorConteoPrioridadDivipola = null;
                        } else {
                            context.ErrorConteoPrioridadDivipola=(String) context.getProperty("ErrorConteoPrioridadDivipola");
                        }
                        context.setContextType("ErrorEdadExist", "id_String");
                        if(context.getStringValue("ErrorEdadExist") == null) {
                            context.ErrorEdadExist = null;
                        } else {
                            context.ErrorEdadExist=(String) context.getProperty("ErrorEdadExist");
                        }
                        context.setContextType("ErrorEdadFormato", "id_String");
                        if(context.getStringValue("ErrorEdadFormato") == null) {
                            context.ErrorEdadFormato = null;
                        } else {
                            context.ErrorEdadFormato=(String) context.getProperty("ErrorEdadFormato");
                        }
                        context.setContextType("ErrorEtniaExist", "id_String");
                        if(context.getStringValue("ErrorEtniaExist") == null) {
                            context.ErrorEtniaExist = null;
                        } else {
                            context.ErrorEtniaExist=(String) context.getProperty("ErrorEtniaExist");
                        }
                        context.setContextType("ErrorEtniaFormato", "id_String");
                        if(context.getStringValue("ErrorEtniaFormato") == null) {
                            context.ErrorEtniaFormato = null;
                        } else {
                            context.ErrorEtniaFormato=(String) context.getProperty("ErrorEtniaFormato");
                        }
                        context.setContextType("ErrorGrupoRiesgoExist", "id_String");
                        if(context.getStringValue("ErrorGrupoRiesgoExist") == null) {
                            context.ErrorGrupoRiesgoExist = null;
                        } else {
                            context.ErrorGrupoRiesgoExist=(String) context.getProperty("ErrorGrupoRiesgoExist");
                        }
                        context.setContextType("ErrorGrupoRiesgoFormato", "id_String");
                        if(context.getStringValue("ErrorGrupoRiesgoFormato") == null) {
                            context.ErrorGrupoRiesgoFormato = null;
                        } else {
                            context.ErrorGrupoRiesgoFormato=(String) context.getProperty("ErrorGrupoRiesgoFormato");
                        }
                        context.setContextType("ErrorIndicadorExist", "id_String");
                        if(context.getStringValue("ErrorIndicadorExist") == null) {
                            context.ErrorIndicadorExist = null;
                        } else {
                            context.ErrorIndicadorExist=(String) context.getProperty("ErrorIndicadorExist");
                        }
                        context.setContextType("ErrorIndicadorFormato", "id_String");
                        if(context.getStringValue("ErrorIndicadorFormato") == null) {
                            context.ErrorIndicadorFormato = null;
                        } else {
                            context.ErrorIndicadorFormato=(String) context.getProperty("ErrorIndicadorFormato");
                        }
                        context.setContextType("ErrorMaxMinPrioridad", "id_String");
                        if(context.getStringValue("ErrorMaxMinPrioridad") == null) {
                            context.ErrorMaxMinPrioridad = null;
                        } else {
                            context.ErrorMaxMinPrioridad=(String) context.getProperty("ErrorMaxMinPrioridad");
                        }
                        context.setContextType("ErrorPrioridad", "id_String");
                        if(context.getStringValue("ErrorPrioridad") == null) {
                            context.ErrorPrioridad = null;
                        } else {
                            context.ErrorPrioridad=(String) context.getProperty("ErrorPrioridad");
                        }
                        context.setContextType("ErrorSexoExist", "id_String");
                        if(context.getStringValue("ErrorSexoExist") == null) {
                            context.ErrorSexoExist = null;
                        } else {
                            context.ErrorSexoExist=(String) context.getProperty("ErrorSexoExist");
                        }
                        context.setContextType("ErrorSexoFormato", "id_String");
                        if(context.getStringValue("ErrorSexoFormato") == null) {
                            context.ErrorSexoFormato = null;
                        } else {
                            context.ErrorSexoFormato=(String) context.getProperty("ErrorSexoFormato");
                        }
                        context.setContextType("EstAnexoActivo", "id_String");
                        if(context.getStringValue("EstAnexoActivo") == null) {
                            context.EstAnexoActivo = null;
                        } else {
                            context.EstAnexoActivo=(String) context.getProperty("EstAnexoActivo");
                        }
                        context.setContextType("EstAnexoEnProcesado", "id_String");
                        if(context.getStringValue("EstAnexoEnProcesado") == null) {
                            context.EstAnexoEnProcesado = null;
                        } else {
                            context.EstAnexoEnProcesado=(String) context.getProperty("EstAnexoEnProcesado");
                        }
                        context.setContextType("EstAnexoError", "id_String");
                        if(context.getStringValue("EstAnexoError") == null) {
                            context.EstAnexoError = null;
                        } else {
                            context.EstAnexoError=(String) context.getProperty("EstAnexoError");
                        }
                        context.setContextType("EstAnexoInactivo", "id_String");
                        if(context.getStringValue("EstAnexoInactivo") == null) {
                            context.EstAnexoInactivo = null;
                        } else {
                            context.EstAnexoInactivo=(String) context.getProperty("EstAnexoInactivo");
                        }
                        context.setContextType("EstAnexoProcesado", "id_String");
                        if(context.getStringValue("EstAnexoProcesado") == null) {
                            context.EstAnexoProcesado = null;
                        } else {
                            context.EstAnexoProcesado=(String) context.getProperty("EstAnexoProcesado");
                        }
                        context.setContextType("FormatoExcel", "id_String");
                        if(context.getStringValue("FormatoExcel") == null) {
                            context.FormatoExcel = null;
                        } else {
                            context.FormatoExcel=(String) context.getProperty("FormatoExcel");
                        }
                        context.setContextType("FormatoExcelXml", "id_String");
                        if(context.getStringValue("FormatoExcelXml") == null) {
                            context.FormatoExcelXml = null;
                        } else {
                            context.FormatoExcelXml=(String) context.getProperty("FormatoExcelXml");
                        }
                        context.setContextType("FormatoSeparador", "id_String");
                        if(context.getStringValue("FormatoSeparador") == null) {
                            context.FormatoSeparador = null;
                        } else {
                            context.FormatoSeparador=(String) context.getProperty("FormatoSeparador");
                        }
                        context.setContextType("FormatoTextoPlano", "id_String");
                        if(context.getStringValue("FormatoTextoPlano") == null) {
                            context.FormatoTextoPlano = null;
                        } else {
                            context.FormatoTextoPlano=(String) context.getProperty("FormatoTextoPlano");
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("CIE10")) {
                context.CIE10 = (String) parentContextMap.get("CIE10");
            }if (parentContextMap.containsKey("COD_DIVIPOLA")) {
                context.COD_DIVIPOLA = (String) parentContextMap.get("COD_DIVIPOLA");
            }if (parentContextMap.containsKey("EDAD")) {
                context.EDAD = (Integer) parentContextMap.get("EDAD");
            }if (parentContextMap.containsKey("ETNIA")) {
                context.ETNIA = (Integer) parentContextMap.get("ETNIA");
            }if (parentContextMap.containsKey("GRUPO_RIESGO")) {
                context.GRUPO_RIESGO = (Integer) parentContextMap.get("GRUPO_RIESGO");
            }if (parentContextMap.containsKey("INDICADOR")) {
                context.INDICADOR = (Integer) parentContextMap.get("INDICADOR");
            }if (parentContextMap.containsKey("PRIORIDAD")) {
                context.PRIORIDAD = (Integer) parentContextMap.get("PRIORIDAD");
            }if (parentContextMap.containsKey("SEXO")) {
                context.SEXO = (Integer) parentContextMap.get("SEXO");
            }if (parentContextMap.containsKey("CIE10_VAL")) {
                context.CIE10_VAL = (String) parentContextMap.get("CIE10_VAL");
            }if (parentContextMap.containsKey("COD_DIVIPOLA_VAL")) {
                context.COD_DIVIPOLA_VAL = (String) parentContextMap.get("COD_DIVIPOLA_VAL");
            }if (parentContextMap.containsKey("EDAD_VAL")) {
                context.EDAD_VAL = (Integer) parentContextMap.get("EDAD_VAL");
            }if (parentContextMap.containsKey("ERROR_VAL")) {
                context.ERROR_VAL = (String) parentContextMap.get("ERROR_VAL");
            }if (parentContextMap.containsKey("ETNIA_VAL")) {
                context.ETNIA_VAL = (Integer) parentContextMap.get("ETNIA_VAL");
            }if (parentContextMap.containsKey("GRUPO_RIESGO_VAL")) {
                context.GRUPO_RIESGO_VAL = (Integer) parentContextMap.get("GRUPO_RIESGO_VAL");
            }if (parentContextMap.containsKey("INDICADOR_VAL")) {
                context.INDICADOR_VAL = (Integer) parentContextMap.get("INDICADOR_VAL");
            }if (parentContextMap.containsKey("PRIORIDAD_VAL")) {
                context.PRIORIDAD_VAL = (Integer) parentContextMap.get("PRIORIDAD_VAL");
            }if (parentContextMap.containsKey("SEXO_VAL")) {
                context.SEXO_VAL = (Integer) parentContextMap.get("SEXO_VAL");
            }if (parentContextMap.containsKey("PriorizacionAnio")) {
                context.PriorizacionAnio = (String) parentContextMap.get("PriorizacionAnio");
            }if (parentContextMap.containsKey("PriorizacionContenido")) {
                context.PriorizacionContenido = (Object) parentContextMap.get("PriorizacionContenido");
            }if (parentContextMap.containsKey("PriorizacionId")) {
                context.PriorizacionId = (Integer) parentContextMap.get("PriorizacionId");
            }if (parentContextMap.containsKey("PriorizacionResultadoId")) {
                context.PriorizacionResultadoId = (Integer) parentContextMap.get("PriorizacionResultadoId");
            }if (parentContextMap.containsKey("PriorizacionTipoContenido")) {
                context.PriorizacionTipoContenido = (String) parentContextMap.get("PriorizacionTipoContenido");
            }if (parentContextMap.containsKey("PriorizacionUsuario")) {
                context.PriorizacionUsuario = (String) parentContextMap.get("PriorizacionUsuario");
            }if (parentContextMap.containsKey("ConfigFile")) {
                context.ConfigFile = (String) parentContextMap.get("ConfigFile");
            }if (parentContextMap.containsKey("archivoSalida")) {
                context.archivoSalida = (String) parentContextMap.get("archivoSalida");
            }if (parentContextMap.containsKey("fileSystem_Area")) {
                context.fileSystem_Area = (String) parentContextMap.get("fileSystem_Area");
            }if (parentContextMap.containsKey("fileSystem_Path")) {
                context.fileSystem_Path = (String) parentContextMap.get("fileSystem_Path");
            }if (parentContextMap.containsKey("oracle_AdditionalParams")) {
                context.oracle_AdditionalParams = (String) parentContextMap.get("oracle_AdditionalParams");
            }if (parentContextMap.containsKey("oracle_Host")) {
                context.oracle_Host = (String) parentContextMap.get("oracle_Host");
            }if (parentContextMap.containsKey("oracle_Password")) {
                context.oracle_Password = (String) parentContextMap.get("oracle_Password");
            }if (parentContextMap.containsKey("oracle_Port")) {
                context.oracle_Port = (String) parentContextMap.get("oracle_Port");
            }if (parentContextMap.containsKey("oracle_Schema")) {
                context.oracle_Schema = (String) parentContextMap.get("oracle_Schema");
            }if (parentContextMap.containsKey("oracle_ServiceName")) {
                context.oracle_ServiceName = (String) parentContextMap.get("oracle_ServiceName");
            }if (parentContextMap.containsKey("oracle_User")) {
                context.oracle_User = (String) parentContextMap.get("oracle_User");
            }if (parentContextMap.containsKey("ErrorCie10Exist")) {
                context.ErrorCie10Exist = (String) parentContextMap.get("ErrorCie10Exist");
            }if (parentContextMap.containsKey("ErrorCie10Formato")) {
                context.ErrorCie10Formato = (String) parentContextMap.get("ErrorCie10Formato");
            }if (parentContextMap.containsKey("ErrorCie10Nulo")) {
                context.ErrorCie10Nulo = (String) parentContextMap.get("ErrorCie10Nulo");
            }if (parentContextMap.containsKey("ErrorCodDivipola")) {
                context.ErrorCodDivipola = (String) parentContextMap.get("ErrorCodDivipola");
            }if (parentContextMap.containsKey("ErrorConfiguracionExistente")) {
                context.ErrorConfiguracionExistente = (String) parentContextMap.get("ErrorConfiguracionExistente");
            }if (parentContextMap.containsKey("ErrorConteoDivipola")) {
                context.ErrorConteoDivipola = (String) parentContextMap.get("ErrorConteoDivipola");
            }if (parentContextMap.containsKey("ErrorConteoIndicador")) {
                context.ErrorConteoIndicador = (String) parentContextMap.get("ErrorConteoIndicador");
            }if (parentContextMap.containsKey("ErrorConteoPrioridadDivipola")) {
                context.ErrorConteoPrioridadDivipola = (String) parentContextMap.get("ErrorConteoPrioridadDivipola");
            }if (parentContextMap.containsKey("ErrorEdadExist")) {
                context.ErrorEdadExist = (String) parentContextMap.get("ErrorEdadExist");
            }if (parentContextMap.containsKey("ErrorEdadFormato")) {
                context.ErrorEdadFormato = (String) parentContextMap.get("ErrorEdadFormato");
            }if (parentContextMap.containsKey("ErrorEtniaExist")) {
                context.ErrorEtniaExist = (String) parentContextMap.get("ErrorEtniaExist");
            }if (parentContextMap.containsKey("ErrorEtniaFormato")) {
                context.ErrorEtniaFormato = (String) parentContextMap.get("ErrorEtniaFormato");
            }if (parentContextMap.containsKey("ErrorGrupoRiesgoExist")) {
                context.ErrorGrupoRiesgoExist = (String) parentContextMap.get("ErrorGrupoRiesgoExist");
            }if (parentContextMap.containsKey("ErrorGrupoRiesgoFormato")) {
                context.ErrorGrupoRiesgoFormato = (String) parentContextMap.get("ErrorGrupoRiesgoFormato");
            }if (parentContextMap.containsKey("ErrorIndicadorExist")) {
                context.ErrorIndicadorExist = (String) parentContextMap.get("ErrorIndicadorExist");
            }if (parentContextMap.containsKey("ErrorIndicadorFormato")) {
                context.ErrorIndicadorFormato = (String) parentContextMap.get("ErrorIndicadorFormato");
            }if (parentContextMap.containsKey("ErrorMaxMinPrioridad")) {
                context.ErrorMaxMinPrioridad = (String) parentContextMap.get("ErrorMaxMinPrioridad");
            }if (parentContextMap.containsKey("ErrorPrioridad")) {
                context.ErrorPrioridad = (String) parentContextMap.get("ErrorPrioridad");
            }if (parentContextMap.containsKey("ErrorSexoExist")) {
                context.ErrorSexoExist = (String) parentContextMap.get("ErrorSexoExist");
            }if (parentContextMap.containsKey("ErrorSexoFormato")) {
                context.ErrorSexoFormato = (String) parentContextMap.get("ErrorSexoFormato");
            }if (parentContextMap.containsKey("EstAnexoActivo")) {
                context.EstAnexoActivo = (String) parentContextMap.get("EstAnexoActivo");
            }if (parentContextMap.containsKey("EstAnexoEnProcesado")) {
                context.EstAnexoEnProcesado = (String) parentContextMap.get("EstAnexoEnProcesado");
            }if (parentContextMap.containsKey("EstAnexoError")) {
                context.EstAnexoError = (String) parentContextMap.get("EstAnexoError");
            }if (parentContextMap.containsKey("EstAnexoInactivo")) {
                context.EstAnexoInactivo = (String) parentContextMap.get("EstAnexoInactivo");
            }if (parentContextMap.containsKey("EstAnexoProcesado")) {
                context.EstAnexoProcesado = (String) parentContextMap.get("EstAnexoProcesado");
            }if (parentContextMap.containsKey("FormatoExcel")) {
                context.FormatoExcel = (String) parentContextMap.get("FormatoExcel");
            }if (parentContextMap.containsKey("FormatoExcelXml")) {
                context.FormatoExcelXml = (String) parentContextMap.get("FormatoExcelXml");
            }if (parentContextMap.containsKey("FormatoSeparador")) {
                context.FormatoSeparador = (String) parentContextMap.get("FormatoSeparador");
            }if (parentContextMap.containsKey("FormatoTextoPlano")) {
                context.FormatoTextoPlano = (String) parentContextMap.get("FormatoTextoPlano");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs
final Thread launchingThread = Thread.currentThread();
        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tOracleInput_2Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tOracleInput_2) {
globalMap.put("tOracleInput_2_SUBPROCESS_STATE", -1);

e_tOracleInput_2.printStackTrace();

}catch (java.lang.Error e_tOracleInput_2) {
globalMap.put("tOracleInput_2_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tOracleInput_2;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

    boolean interrupted = false;
    while (runningThreadCount.getCount() > 0) {
        try {
            Thread.sleep(10);
        } catch (java.lang.InterruptedException e) {
            interrupted = true;
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }
    }

    if (interrupted) {
        Thread.currentThread().interrupt();
    }



this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : ETL_vigilancia");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;

        Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
        String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
        if (localErrorCode != null) {
            if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                   errorCode = localErrorCode;
            }
        }
        if (localStatus != null && !status.equals("failure")){
            status = localStatus;
        }

    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tOracleConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tOracleConnection_1", globalMap.get("conn_tOracleConnection_1"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--context_file")) {
        	String keyValue = arg.substring(15);
        	String filePath = new String(java.util.Base64.getDecoder().decode(keyValue));
        	java.nio.file.Path contextFile = java.nio.file.Paths.get(filePath);
            try (java.io.BufferedReader reader = java.nio.file.Files.newBufferedReader(contextFile)) {
                String line;
                while ((line = reader.readLine()) != null) {
                    int index = -1;
                    if ( (index = line.indexOf('=')) > -1) {
							if (line.startsWith("--context_param")) {
								if ("id_Password".equals(context_param.getContextType(line.substring(16, index)))) {
									context_param.put(line.substring(16, index), routines.system.PasswordEncryptUtil.decryptPassword(
											line.substring(index + 1)));
								} else {
									context_param.put(line.substring(16, index), line.substring(index + 1));
								}
							}else {//--context_type
								context_param.setContextType(line.substring(15, index), line.substring(index + 1));
							}
                    }
                }
            } catch (java.io.IOException e) {
            	System.err.println("Could not load the context file: " + filePath);
                e.printStackTrace();
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     2250748 characters generated by Talend Open Studio for ESB 
 *     on the October 28, 2024, 3:36:42 PM COT
 ************************************************************************************************/